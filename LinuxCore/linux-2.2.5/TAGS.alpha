
arch/alpha/boot/head.S,144
__start:__start12,138
wrent:wrent22,269
wrkgp:wrkgp31,369
switch_to_osf_pal:switch_to_osf_pal40,493
tbi:tbi90,1284
halt:halt99,1376

arch/alpha/boot/main.c,318
struct hwrpb_struct *hwrpb 26,568
static struct pcb_struct pcb_va[27,609
find_pa(36,781
#define VPTB	59,1458
#define L1	60,1503
pal_init(63,1552
static inline long openboot(105,2498
static inline long close(116,2728
static inline long load(121,2806
static void runkernel(141,3319
void start_kernel(152,3535

arch/alpha/boot/tools/mkbb.c,285
#define MAXPARTITIONS 20,541
#define u8 24,635
#define u16 28,680
#define u32 32,727
struct disklabel disklabel35,760
typedef union __bootblock __bootblock68,1501
} bootblock;bootblock79,1771
#define	bootblock_label	81,1785
#define bootblock_checksum	82,1823
main(84,1867

arch/alpha/boot/tools/objstrip.c,86
#define BLOCK_SIZE	33,895
const char * prog_name;35,919
usage 39,950
main 49,1112

arch/alpha/boot/bootp.c,268
struct hwrpb_struct *hwrpb 29,621
static struct pcb_struct pcb_va[30,662
find_pa(39,834
#define VPTB	62,1511
#define L1	63,1556
pal_init(66,1605
load(109,2570
runkernel(118,2728
extern char _end;129,2932
#define KERNEL_ORIGIN 130,2950
start_kernel(134,3021

arch/alpha/lib/io.c,543
unsigned int _inb(9,163
unsigned int _inw(14,227
unsigned int _inl(19,291
void _outb(25,356
void _outw(30,427
void _outl(35,499
unsigned long _readb(41,570
unsigned long _readw(46,639
unsigned long _readl(51,708
unsigned long _readq(56,777
void _writeb(61,846
void _writew(66,921
void _writel(71,997
void _writeq(76,1071
void insb 85,1226
void insw 121,2045
void insl 155,2799
void outsb(234,4463
void outsw 249,4856
void outsl 281,5624
void _memcpy_fromio(358,7233
void _memcpy_toio(408,8123
void _memset_c_io(457,8954

arch/alpha/lib/divide.S,211
.set .set92,2075
.align	.align93,2085
.globl	.globl94,2094
.ent	.ent95,2111
ufunction:ufunction96,2126
.align .align165,3755
.globl	.globl166,3764
.ent	.ent167,3781
sfunction:sfunction168,3796

arch/alpha/lib/memcpy.c,243
#define ALIGN_DEST_TO8(ALIGN_DEST_TO824,616
#define DO_REST(DO_REST36,881
#define DO_REST_ALIGNED(DO_REST_ALIGNED47,1113
static inline void __memcpy_unaligned(56,1444
static inline void __memcpy_aligned(91,2480
void * memcpy(107,2794

arch/alpha/lib/checksum.c,293
static inline unsigned short from64to16(12,218
unsigned short int csum_tcpudp_magic(29,689
unsigned int csum_tcpudp_nofold(40,975
static inline unsigned long do_csum(68,1759
unsigned short ip_fast_csum(134,3130
unsigned int csum_partial(151,3581
unsigned short ip_compute_csum(166,3945

arch/alpha/lib/strlen.S,79
strlen:strlen23,492
loop:loop32,720
found:found38,844
done:done54,1082

arch/alpha/lib/memset.S,347
.align .align24,691
__memset:__memset25,700
.align .align39,1090
__constant_c_memset:__constant_c_memset40,1099
.align .align66,1840
aligned:aligned67,1849
.align .align73,1966
loop:loop74,1975
no_quad:no_quad80,2084
.align .align91,2326
within_one_quad:within_one_quad92,2335
end:end103,2584
__memsetw:__memsetw109,2658

arch/alpha/lib/csum_partial_copy.c,602
#define ldq_u(ldq_u15,269
#define stq_u(stq_u18,370
#define extql(extql21,465
#define extqh(extqh24,553
#define mskql(mskql27,641
#define mskqh(mskqh30,729
#define insql(insql33,817
#define insqh(insqh36,905
#define __get_user_u(__get_user_u40,994
#define __put_user_u(__put_user_u55,1318
csum_partial_cfu_aligned(75,1728
csum_partial_cfu_dest_aligned(115,2486
csum_partial_cfu_src_aligned(168,3593
csum_partial_cfu_unaligned(230,5160
do_csum_partial_copy_from_user(308,7092
csum_partial_copy_from_user(355,8406
csum_partial_copy_nocheck(368,8693
csum_partial_copy 374,8858

arch/alpha/lib/clear_user.S,176
$loop:$loop45,993
$tail:$tail71,1609
__do_clear_user:__do_clear_user82,1854
$oneword:$oneword102,2465
$zerolength:$zerolength109,2609
$exception:$exception110,2622

arch/alpha/lib/copy_user.S,282
__copy_user:__copy_user48,1099
$37:$3754,1173
$36:$3668,1389
$50:$5075,1477
$48:$4887,1647
$57:$5790,1674
$43:$43104,1886
$66:$66107,1913
$65:$65115,2021
$41:$41124,2163
$35:$35125,2168
$exitout:$exitout126,2173
$exitin:$exitin129,2201
$101:$101135,2397

arch/alpha/lib/strlen_user.S,109
__strlen_user:__strlen_user29,476
$loop:$loop41,790
$found:$found46,890
$exception:$exception60,1225

arch/alpha/lib/csum_ipv6_magic.S,40
csum_ipv6_magic:csum_ipv6_magic16,445

arch/alpha/lib/strncpy_from_user.S,483
$aligned:$aligned36,681
$a_loop:$a_loop55,1338
$a_eos:$a_eos72,1834
$a_eoc:$a_eoc95,2500
__strncpy_from_user:__strncpy_from_user101,2582
$u_head:$u_head133,3531
$u_loop:$u_loop188,5659
$u_eos:$u_eos210,6572
$u_late_head_exit:$u_late_head_exit221,6882
$u_final:$u_final232,7203
$u_eoc:$u_eoc249,7628
$u_eocfin:$u_eocfin254,7709
$unaligned:$unaligned260,7825
$finish_up:$finish_up315,9630
$zerolength:$zerolength334,10043
$exception:$exception336,10064

arch/alpha/lib/stxcpy.S,295
stxcpy_aligned:stxcpy_aligned36,934
$a_loop:$a_loop58,1660
$a_eos:$a_eos70,2023
__stxcpy:__stxcpy96,2695
$u_head:$u_head120,3372
$u_loop:$u_loop176,5317
$u_eos:$u_eos196,6172
$u_late_head_exit:$u_late_head_exit203,6366
$u_final:$u_final213,6704
$unaligned:$unaligned232,7182

arch/alpha/lib/strcat.S,64
strcat:strcat13,187
$loop:$loop29,513
$found:$found34,601

arch/alpha/lib/stxncpy.S,379
stxncpy_aligned:stxncpy_aligned44,1225
$a_loop:$a_loop66,1924
$a_eos:$a_eos83,2414
$a_eoc:$a_eoc106,3096
__stxncpy:__stxncpy115,3199
$u_head:$u_head146,4125
$u_loop:$u_loop201,6241
$u_eos:$u_eos223,7148
$u_late_head_exit:$u_late_head_exit234,7458
$u_final:$u_final245,7779
$u_eoc:$u_eoc262,8210
$u_eocfin:$u_eocfin267,8291
$unaligned:$unaligned273,8407

arch/alpha/lib/strchr.S,93
strchr:strchr17,289
$loop:$loop40,1106
$found:$found49,1384
$retnull:$retnull66,1871

arch/alpha/lib/strncat.S,97
strncat:strncat18,505
$loop:$loop35,859
$found:$found40,947
$zerocount:$zerocount81,1796

arch/alpha/lib/strcpy.S,22
strcpy:strcpy14,244

arch/alpha/lib/strncpy.S,24
strncpy:strncpy22,493

arch/alpha/lib/strrchr.S,91
strrchr:strrchr17,315
$loop:$loop43,1336
$eos:$eos54,1747
$retnull:$retnull83,2703

arch/alpha/lib/strcasecmp.c,23
int strcasecmp(12,229

arch/alpha/lib/stackcheck.S,24
_mcount:_mcount16,249

arch/alpha/lib/stackkill.S,24
_mcount:_mcount17,288

arch/alpha/lib/stacktrace.c,747
typedef unsigned int instr;instr4,51
#define MAJOR_OP	6,80
#define LDA_OP	7,108
#define STQ_OP	8,135
#define BR_OP	9,162
#define STK_ALLOC_1	11,189
#define STK_ALLOC_1M	12,242
#define STK_ALLOC_2	13,274
#define STK_ALLOC_2M	14,326
#define MEM_REG	16,359
#define MEM_BASE	17,387
#define MEM_OFF	18,415
#define MEM_OFF_SIGN	19,443
#define	BASE_SP	20,475
#define STK_ALLOC_MATCH(STK_ALLOC_MATCH22,504
#define STK_PUSH_MATCH(STK_PUSH_MATCH25,631
#define MEM_OP_OFFSET(MEM_OP_OFFSET27,738
#define MEM_OP_REG(MEM_OP_REG29,813
#define BB_END(BB_END33,945
#define IS_KERNEL_TEXT(IS_KERNEL_TEXT38,1133
static char reg_name[40,1196
display_stored_regs(49,1471
seek_prologue(68,1929
stack_increment(78,2059
stacktrace(91,2342

arch/alpha/lib/srm_dispatch.S,86
.globl	.globl5,41
.ent	.ent6,61
srm_dispatch:srm_dispatch7,79
.end .end43,750

arch/alpha/lib/srm_fixup.S,80
.globl	.globl5,38
.ent	.ent6,55
srm_fixup:srm_fixup7,70
.end .end42,723

arch/alpha/lib/srm_printk.c,17
srm_printk(9,96

arch/alpha/lib/srm_puts.c,15
srm_puts(9,94

arch/alpha/lib/semaphore.S,135
__down_failed:__down_failed22,487
__down_failed_interruptible:__down_failed_interruptible78,1565
__up_wakeup:__up_wakeup134,2631

arch/alpha/mm/fault.c,183
#define __EXTERN_INLINE 11,156
unsigned long last_asn[32,611
unsigned long asn_cache 67,2265
get_new_mmu_context(75,2377
#define dpf_reg(dpf_reg113,3301
do_page_fault(118,3445

arch/alpha/mm/init.c,516
#define DEBUG_POISON 28,535
struct thread_struct original_pcb;33,653
struct pgtable_cache_struct quicklists;36,705
__bad_pmd(40,758
__bad_pte(47,877
get_pmd_slow(54,1009
get_pte_slow(77,1432
int do_check_pgt_cache(99,1857
__bad_pagetable(129,2872
__bad_page(136,2977
show_mem(143,3116
load_PCB(178,3996
paging_init(190,4299
paging_init_secondary(267,6680
srm_paging_stop 281,6942
kill_page(298,7301
#define kill_page(kill_page316,7576
mem_init(320,7611
free_initmem 357,8510
si_meminfo(374,8944

arch/alpha/mm/extable.c,192
extern const struct exception_table_entry __start___ex_table[9,119
extern const struct exception_table_entry __stop___ex_table[10,183
search_one_table(13,270
search_exception_table(40,950

arch/alpha/kernel/bios32.c,1773
#define DEBUG_DEVS 41,940
#define DEBUG_HOSE 42,961
# define DBG_DEVS(DBG_DEVS45,998
# define DBG_DEVS(DBG_DEVS47,1041
# define DBG_HOSE(DBG_HOSE51,1088
# define DBG_HOSE(DBG_HOSE53,1131
asmlinkage int sys_pciconfig_read(58,1183
asmlinkage int sys_pciconfig_write(59,1239
void reset_for_srm(60,1296
#define MAJOR_REV	76,1528
#define MINOR_REV	77,1548
struct linux_hose_info *bus2hose[79,1616
struct linux_hose_info *hose_head,80,1655
struct linux_hose_info *hose_head, **hose_tail 80,1655
int hose_count;81,1716
int pci_probe_enabled;82,1732
pcibios_present(87,1793
pcibios_init(93,1880
pcibios_setup(104,2115
pcibios_fixup(110,2170
pcibios_fixup_bus(116,2230
pcibios_read_config_byte 121,2278
pcibios_read_config_word 133,2543
pcibios_read_config_dword 147,2868
pcibios_write_config_byte 161,3200
pcibios_write_config_word 172,3451
pcibios_write_config_dword 185,3760
sys_pciconfig_read(198,4083
sys_pciconfig_write(233,4802
#define ALIGN(ALIGN290,5859
struct srm_irq_reset srm_irq_reset299,6147
} *srm_irq_resets;303,6230
struct srm_io_reset srm_io_reset305,6250
} *srm_io_resets;310,6340
reset_for_srm(315,6413
new_irq_reset(351,7399
new_io_reset(363,7602
disable_dev(381,7921
#define MAX(MAX440,9543
static unsigned int io_base;442,9604
static unsigned int mem_base;443,9633
layout_dev(446,9684
layout_bus(679,16654
layout_all_busses(817,21003
enable_ide(859,22381
check_behind_io(875,22872
common_pci_fixup(948,24992
common_swizzle(1087,28779
#define PRIMARY(PRIMARY1109,29412
#define SECONDARY(SECONDARY1110,29442
#define SUBORDINATE(SUBORDINATE1111,29479
hose_scan_bridges(1114,29538
hose_reconfigure_bridges(1184,31382
hose_fixup_busno(1236,32665
layout_one_hose(1276,33680
layout_hoses(1326,34913

arch/alpha/kernel/entry.S,3203
.set .set119,2272
.align .align124,2350
.globl	.globl125,2359
.ent	.ent126,2373
entInt:entInt127,2385
.end .end133,2479
.align .align135,2492
.globl	.globl136,2501
.ent	.ent137,2514
entMM:entMM138,2525
.end .end165,3095
.align .align167,3107
.globl	.globl168,3116
.ent	.ent169,3132
entArith:entArith170,3146
.end .end176,3244
.align .align178,3259
.globl	.globl179,3268
.ent	.ent180,3281
entIF:entIF181,3292
.end .end187,3384
.align .align189,3396
.globl	.globl190,3405
.ent	.ent191,3419
entDbg:entDbg192,3431
.end .end198,3525
.align .align210,3907
.ent	.ent211,3916
kernel_clone:kernel_clone212,3934
.end	.end227,4224
.align .align232,4291
.globl	.globl233,4300
.ent	.ent234,4323
__kernel_thread:__kernel_thread235,4344
.end	.end262,4993
.align .align267,5065
.globl	.globl268,5074
.ent	.ent269,5097
__kernel_execve:__kernel_execve270,5118
.end	.end284,5399
.align .align286,5421
.ent	.ent287,5430
do_switch_stack:do_switch_stack288,5451
.end .end333,6360
.align .align335,6382
.ent	.ent336,6391
undo_switch_stack:undo_switch_stack337,6414
.end .end381,7261
.align .align383,7285
.globl	.globl384,7294
.ent	.ent385,7308
entUna:entUna386,7320
.end .end455,8565
.align .align457,8578
.ent	.ent458,8587
entUnaUser:entUnaUser459,8603
.end	.end485,9116
.align .align490,9184
.globl	.globl491,9193
.ent	.ent492,9209
sys_fork:sys_fork493,9223
.end	.end501,9376
.align .align503,9391
.globl	.globl504,9400
.ent	.ent505,9417
sys_clone:sys_clone506,9432
.end	.end513,9588
.align .align515,9604
.globl	.globl516,9613
.ent	.ent517,9630
sys_vfork:sys_vfork518,9645
.end	.end524,9761
.align .align526,9777
.globl .globl527,9786
.ent .ent528,9810
alpha_switch_to:alpha_switch_to529,9834
.end .end537,9987
.align .align546,10223
.globl	.globl547,10232
.globl	.globl548,10246
.ent	.ent549,10271
entSys:entSys550,10283
.align .align573,10755
ret_from_sys_call:ret_from_sys_call574,10764
ret_from_handle_bh:ret_from_handle_bh581,10946
ret_from_reschedule:ret_from_reschedule585,11019
restore_all:restore_all593,11197
.align .align599,11259
strace:strace600,11268
strace_success:strace_success629,11956
strace_error:strace_error638,12128
handle_bottom_half:handle_bottom_half660,12692
syscall_error:syscall_error671,12926
ret_success:ret_success690,13550
.align .align695,13645
signal_return:signal_return696,13654
.end .end704,13808
.align .align708,13869
.ent .ent709,13878
ret_from_smpfork:ret_from_smpfork710,13900
.end .end717,14076
.align .align720,14120
.ent .ent721,14129
reschedule:reschedule722,14145
.end .end731,14355
.align .align733,14372
.ent .ent734,14381
sys_sigreturn:sys_sigreturn735,14400
.end .end742,14555
.align .align744,14575
.ent .ent745,14584
sys_rt_sigreturn:sys_rt_sigreturn746,14606
.end .end753,14767
.align .align755,14790
.ent .ent756,14799
sys_sigsuspend:sys_sigsuspend757,14819
.end .end764,14973
.align .align766,14994
.ent .ent767,15003
sys_rt_sigsuspend:sys_rt_sigsuspend768,15026
.end .end775,15186
sys_call_table:sys_call_table780,15250

arch/alpha/kernel/irq.c,1735
#define vulp	35,856
#define vuip	36,894
unsigned int local_irq_count[38,932
unsigned int local_bh_count[39,971
unsigned long hardirq_no[40,1009
#define ACTUAL_NR_IRQS	47,1149
#define ACTUAL_NR_IRQS	49,1195
#define	IS_RESERVED_IRQ(IS_RESERVED_IRQ54,1335
unsigned long alpha_irq_mask 60,1421
generic_ack_irq(67,1523
static void dummy_perf(83,1788
# define IACK_SC	97,2102
# define IACK_SC	99,2170
# define IACK_SC	101,2233
# define IACK_SC	103,2294
# define IACK_SC	105,2357
# define IACK_SC	107,2424
# define IACK_SC	109,2493
# define IACK_SC	112,2607
isa_device_interrupt(116,2640
srm_device_interrupt(165,3984
static struct irqaction timer_irq 178,4170
static struct irqaction *irq_action[179,4239
mask_irq(183,4306
unmask_irq(189,4421
disable_irq(195,4527
enable_irq(205,4657
check_irq(215,4787
request_irq(226,4916
free_irq(288,6173
int get_irq_list(317,6784
int global_irq_holder 361,7687
spinlock_t global_irq_lock 364,7751
atomic_t global_irq_count 367,7833
atomic_t global_bh_lock 370,7943
atomic_t global_bh_count 371,7985
static void *previous_irqholder 373,8029
#define MAXCOUNT 375,8070
wait_on_irq(380,8161
get_irqlock(428,9037
__global_cli(462,9748
__global_sti(476,10048
__global_save_flags(494,10310
__global_restore_flags(517,10868
#define INIT_STUCK 539,11379
#define STUCK	542,11420
irq_enter(552,11642
irq_exit(589,12565
show(596,12657
wait_on_bh(630,13630
synchronize_bh(651,14169
#define DEBUG_SYNCHRONIZE_IRQ 670,14791
synchronize_irq(673,14829
#define irq_enter(irq_enter695,15314
#define irq_exit(irq_exit696,15367
unexpected_irq(701,15454
handle_irq(736,16274
probe_irq_on(804,17810
probe_irq_off(840,18524
do_entInt(859,18753
init_IRQ(899,19609

arch/alpha/kernel/head.S,411
.globl .globl12,327
.globl .globl13,349
_stext:_stext19,437
__start:__start20,445
__start_cpu:__start_cpu39,926
wrent:wrent58,1322
wrkgp:wrkgp67,1422
wrusp:wrusp76,1522
rdusp:rdusp85,1622
rdmces:rdmces94,1724
wrmces:wrmces103,1829
whami:whami112,1936
wripir:wripir121,2047
wrvptptr:wrvptptr130,2160
cserve_ena:cserve_ena145,2496
cserve_dis:cserve_dis156,2651
halt:halt173,2936

arch/alpha/kernel/traps.c,593
dik_show_regs(26,406
dik_show_code(57,1523
dik_show_trace(72,1754
die_if_kernel(94,2140
static long dummy_emul(113,2631
do_entArith(124,2984
do_entIF(149,3620
do_entDbg(242,6064
struct allregs allregs266,6904
struct unaligned_stat unaligned_stat271,6989
} unaligned[273,7043
#define una_reg(una_reg277,7128
do_entUna(281,7217
s_mem_to_reg 524,13517
s_reg_to_mem 552,14162
#define OP_INT_MASK	577,15127
#define OP_WRITE_MASK	582,15333
#define R(R586,15492
static int unauser_reg_offsets[588,15543
do_entUnaUser(601,15879
alpha_ni_syscall(896,22647
trap_init(907,22975

arch/alpha/kernel/bios32.h,565
#define KB	9,173
#define MB	10,190
#define GB	11,212
#define EISA_DEFAULT_IO_BASE 31,1054
#define DEFAULT_IO_BASE 32,1117
#define XL_DEFAULT_MEM_BASE 52,2039
#define APECS_AND_LCA_DEFAULT_MEM_BASE 58,2260
#define RAWHIDE_DEFAULT_MEM_BASE 66,2563
#define DEFAULT_MEM_BASE 72,2752
#define PCI_MODIFY	95,3697
bridge_swizzle(137,4842
#define COMMON_TABLE_LOOKUP	156,5385
extern struct linux_hose_info *hose_head,164,5608
extern struct linux_hose_info *hose_head, **hose_tail;164,5608
extern int hose_count;165,5663
extern int pci_probe_enabled;166,5686

arch/alpha/kernel/setup.c,1236
struct hwrpb_struct *hwrpb;46,848
unsigned long srm_hae;47,876
struct alpha_machine_vector alpha_mv;50,928
int alpha_using_srm,51,966
int alpha_using_srm, alpha_use_srm_setup;51,966
unsigned char aux_device_present 54,1016
#define N(N56,1058
#define PARAM	69,1535
#define COMMAND_LINE	70,1561
#define COMMAND_LINE_SIZE	71,1609
#define INITRD_START	72,1639
#define INITRD_SIZE	73,1696
static char command_line[75,1753
char saved_command_line[76,1798
struct screen_info screen_info 84,2015
#define WEAK(WEAK101,2384
setup_arch(140,3006
find_end_memory(308,7422
static char sys_unknown[332,7977
static char systype_names[333,8016
static char unofficial_names[344,8419
static char eb164_names[346,8476
static int eb164_indices[347,8554
static char alcor_names[349,8621
static int alcor_indices[350,8684
static char eb64p_names[352,8753
static int eb64p_indices[353,8823
static char eb66_names[355,8864
static int eb66_indices[356,8913
static char rawhide_names[358,8951
static int rawhide_indices[361,9043
static char tsunami_names[363,9100
static int tsunami_indices[367,9235
get_sysvec(371,9333
get_sysvec_byname(527,12954
get_sysnames(573,13709
platform_string(648,15971
int get_cpuinfo(674,16602

arch/alpha/kernel/process.c,808
unsigned long init_user_stack[55,1160
static struct vm_area_struct init_mmap 56,1216
static struct fs_struct init_fs 57,1268
static struct file * init_fd_array[58,1311
static struct files_struct init_files 59,1368
static struct signal_struct init_signals 60,1420
struct mm_struct init_mm 61,1477
sys_sethae(70,1695
static void __attribute__(78,1881
cpu_idle(93,2148
sys_idle(100,2214
generic_kill_arch 108,2303
machine_restart(186,4142
machine_halt(192,4247
void machine_power_off(197,4321
void show_regs(202,4410
void start_thread(223,5291
void exit_thread(234,5486
void flush_thread(238,5514
void release_thread(246,5710
int alpha_clone(259,6044
int alpha_vfork(267,6239
int copy_thread(285,6880
void dump_thread(322,7966
int dump_fpu 377,9769
asmlinkage int sys_execve(395,10284

arch/alpha/kernel/osf_sys.c,2892
asmlinkage unsigned long osf_brk(60,1655
asmlinkage int osf_set_program_attributes(71,1850
#define NAME_OFFSET(NAME_OFFSET94,2499
#define ROUND_UP(ROUND_UP95,2562
struct osf_dirent osf_dirent97,2598
struct osf_dirent_callback osf_dirent_callback104,2712
static int osf_filldir(111,2811
asmlinkage int osf_getdirentries(136,3538
asmlinkage int osf_getpriority(186,4460
asmlinkage unsigned long sys_madvise(209,4968
asmlinkage unsigned long sys_getxuid(217,5087
asmlinkage unsigned long sys_getxgid(225,5289
asmlinkage unsigned long sys_getxpid(233,5491
asmlinkage unsigned long osf_mmap(249,6017
struct osf_statfs osf_statfs281,6761
} *osf_stat;292,6937
static int linux_to_osf_statfs(294,6951
static int do_osf_statfs(314,7699
asmlinkage int osf_statfs(332,8183
asmlinkage int osf_fstatfs(348,8506
struct ufs_args ufs_args373,9013
struct cdfs_args cdfs_args379,9078
struct procfs_args procfs_args389,9275
static int getdev(395,9343
static void putdev(445,10227
static int osf_ufs_mount(459,10615
static int osf_cdfs_mount(481,11061
static int osf_procfs_mount(503,11513
asmlinkage int osf_mount(520,11881
asmlinkage int osf_utsname(542,12375
asmlinkage int osf_swapon(565,12867
asmlinkage unsigned long sys_getpagesize(576,13088
asmlinkage unsigned long sys_getdtablesize(581,13159
asmlinkage int sys_pipe(586,13230
asmlinkage int osf_getdomainname(606,13565
asmlinkage long osf_shmat(633,14010
#define PLE_PROPAGATE_ON_COPY	663,14650
#define PLE_FLAG_MASK	665,14733
#define PLE_FLAG_ALL	666,14785
struct proplistname_args proplistname_args668,14833
union pl_args pl_args674,14932
enum pl_code pl_code712,15544
	PL_SET 713,15559
	PL_SET = 1, PL_FSET 713,15559
	PL_GET 714,15585
	PL_GET = 3, PL_FGET 714,15585
	PL_DEL 715,15611
	PL_DEL = 5, PL_FDEL 715,15611
asmlinkage long osf_proplist_syscall(718,15640
asmlinkage int osf_sigstack(763,16671
asmlinkage unsigned long alpha_create_module(810,17977
asmlinkage long osf_sysinfo(835,18621
asmlinkage unsigned long osf_getsysinfo(875,19505
asmlinkage unsigned long osf_setsysinfo(930,20829
extern struct timezone sys_tz;1003,22740
struct timeval32timeval321011,23133
struct itimerval32itimerval321016,23181
static inline long get_tv32(1022,23271
static inline long put_tv32(1029,23476
static inline long get_it32(1036,23682
static inline long put_it32(1045,24055
asmlinkage int osf_gettimeofday(1054,24429
asmlinkage int osf_settimeofday(1069,24708
asmlinkage int osf_getitimer(1086,25036
asmlinkage int osf_setitimer(1098,25247
asmlinkage int osf_utimes(1121,25639
#define MAX_SELECT_SECONDS 1148,26123
osf_select(1152,26217
struct rusage32 rusage321232,28106
asmlinkage int osf_getrusage(1251,28843
asmlinkage int osf_wait4(1296,30423
asmlinkage int osf_usleep_thread(1343,31926
struct timex32 timex321371,32437
asmlinkage int sys_old_adjtimex(1400,33598

arch/alpha/kernel/time.c,337
#define FIX_SHIFT	50,1476
} state;62,1832
unsigned long est_cycle_freq;64,1842
static inline __u32 rpcc(67,1874
void timer_interrupt(79,2119
static inline unsigned long mktime(142,4192
rtc_init_pit 165,4865
generic_init_pit 189,5442
time_init(222,6202
do_gettimeofday(315,8967
do_settimeofday(354,9945
set_rtc_mmss(377,10650

arch/alpha/kernel/ptrace.c,718
#define DEBUG	23,516
	DBG_MEM	28,572
	DBG_BPT	29,592
	DBG_MEM_ALL	30,612
#define DBG(DBG32,637
#define DBG(DBG34,699
#define BREAKINST	37,729
#define PT_REG(PT_REG60,1413
#define SW_REG(SW_REG63,1516
	REG_R0 75,1977
	REG_R0 = 0, REG_F0 75,1977
	REG_R0 = 0, REG_F0 = 32, REG_FPCR 75,1977
	REG_R0 = 0, REG_F0 = 32, REG_FPCR = 63, REG_PC 75,1977
static int regoff[78,2034
static long zero;98,3095
get_reg_addr(104,3182
get_reg(123,3524
put_reg(132,3696
get_long(145,4079
put_long(198,5517
find_extend_vma(250,6874
read_long(274,7447
write_long(315,8477
read_int(349,9403
write_int(376,9878
ptrace_set_bpt(400,10319
ptrace_cancel_bpt(455,11902
sys_ptrace(474,12267
syscall_trace(644,16671

arch/alpha/kernel/irq.h,161
#define STANDARD_INIT_IRQ_PROLOG	13,267
extern unsigned long alpha_irq_mask;19,418
#define RTC_IRQ 27,729
#define TIMER_IRQ 29,768
#define TIMER_IRQ 31,821

arch/alpha/kernel/signal.c,650
#define DEBUG_SIG 27,565
#define _BLOCKABLE 29,586
osf_sigprocmask(53,1280
osf_sigaction(84,2032
sys_rt_sigaction(115,2875
osf_sigpending(142,3483
do_sigsuspend(157,3859
do_rt_sigsuspend(177,4304
sys_sigaltstack(204,4962
struct sigframesigframe213,5116
struct rt_sigframert_sigframe220,5228
#define INSN_MOV_R30_R16	227,5322
#define INSN_LDI_R0	228,5358
#define INSN_CALLSYS	229,5390
restore_sigcontext(232,5436
do_sigreturn(282,7244
do_rt_sigreturn(315,8097
get_sigframe(357,9138
setup_sigcontext(366,9389
setup_frame(422,11564
setup_rt_frame(477,13111
handle_signal(543,15125
syscall_restart(564,15749
do_signal(598,16742

arch/alpha/kernel/proto.h,330
#define vucp	3,76
#define vusp	4,115
#define vip	5,154
#define vuip	6,181
#define vulp	7,220
extern volatile unsigned int apecs_mcheck_expected;26,973
extern volatile unsigned int apecs_mcheck_taken;27,1025
extern unsigned long srm_hae;148,6668
extern unsigned long est_cycle_freq;162,7020
extern void cpu_idle(194,7796

arch/alpha/kernel/alpha_ksyms.c,77
#define __KERNEL_SYSCALLS__33,690
extern struct hwrpb_struct *hwrpb;36,743

arch/alpha/kernel/core_lca.c,1357
#define __EXTERN_INLINE 21,464
#define MCHK_K_TPERR	36,722
#define MCHK_K_TCPERR	37,751
#define MCHK_K_HERR	38,781
#define MCHK_K_ECC_C	39,809
#define MCHK_K_ECC_NC	40,838
#define MCHK_K_UNKNOWN	41,868
#define MCHK_K_CACKSOFT	42,899
#define MCHK_K_BUGCHECK	43,931
#define MCHK_K_OS_BUGCHECK	44,963
#define MCHK_K_DCPERR	45,997
#define MCHK_K_ICPERR	46,1027
#define MCHK_K_SIO_SERR	52,1110
#define MCHK_K_SIO_IOCHK	53,1168
#define MCHK_K_DCSR	54,1226
mk_conf_addr(100,2816
conf_read(126,3326
conf_write(164,4051
lca_hose_read_config_byte 198,4771
lca_hose_read_config_word 213,5143
lca_hose_read_config_dword 228,5515
lca_hose_write_config_byte 243,5869
lca_hose_write_config_word 258,6240
lca_hose_write_config_dword 273,6613
lca_init_arch(288,6995
#define ESR_EAV	360,9159
#define ESR_CEE	361,9212
#define ESR_UEE	362,9263
#define ESR_WRE	363,9316
#define ESR_SOR	364,9361
#define ESR_CTE	365,9407
#define ESR_MSE	366,9456
#define ESR_MHE	367,9510
#define ESR_NXM	368,9564
#define IOC_ERR	370,9618
#define IOC_CMD_SHIFT	371,9668
#define IOC_CMD	372,9692
#define IOC_CODE_SHIFT	373,9730
#define IOC_CODE	374,9755
#define IOC_LOST	375,9794
#define IOC_P_NBR	376,9820
mem_error 379,9876
ioc_error 402,10565
lca_machine_check 433,11617
lca_clock_print(525,14637
lca_get_clock(542,15122
lca_clock_fiddle(552,15253

arch/alpha/kernel/smc37c669.c,10416
# define DBG_DEVS(DBG_DEVS16,241
# define DBG_DEVS(DBG_DEVS18,291
#define KB 21,323
#define MB 22,352
#define GB 23,386
#define SMC_DEBUG 25,421
#define __SMC37c669_H63,1496
#define SMC37c669_DEVICE_IRQ_MASK	71,1659
#define SMC37c669_DEVICE_IRQ(SMC37c669_DEVICE_IRQ72,1704
#define SMC37c669_IS_DEVICE_IRQ(SMC37c669_IS_DEVICE_IRQ74,1781
#define SMC37c669_RAW_DEVICE_IRQ(SMC37c669_RAW_DEVICE_IRQ76,1892
#define SMC37c669_DEVICE_DRQ_MASK	85,2119
#define SMC37c669_DEVICE_DRQ(SMC37c669_DEVICE_DRQ86,2164
#define SMC37c669_IS_DEVICE_DRQ(SMC37c669_IS_DEVICE_DRQ88,2239
#define SMC37c669_RAW_DEVICE_DRQ(SMC37c669_RAW_DEVICE_DRQ90,2350
#define SMC37c669_DEVICE_ID	93,2431
#define SERIAL_0	98,2511
#define SERIAL_1	99,2530
#define PARALLEL_0	100,2549
#define FLOPPY_0	101,2570
#define IDE_0	102,2589
#define NUM_FUNCS	103,2606
#define COM1_BASE	108,2669
#define COM1_IRQ	109,2693
#define COM2_BASE	110,2712
#define COM2_IRQ	111,2736
#define PARP_BASE	112,2755
#define PARP_IRQ	113,2779
#define PARP_DRQ	114,2798
#define FDC_BASE	115,2817
#define FDC_IRQ	116,2840
#define FDC_DRQ	117,2859
#define SMC37c669_CONFIG_ON_KEY	122,2925
#define SMC37c669_CONFIG_OFF_KEY	123,2963
#define SMC37c669_DEVICE_IRQ_A	128,3034
#define SMC37c669_DEVICE_IRQ_B	129,3102
#define SMC37c669_DEVICE_IRQ_C	130,3170
#define SMC37c669_DEVICE_IRQ_D	131,3238
#define SMC37c669_DEVICE_IRQ_E	132,3306
#define SMC37c669_DEVICE_IRQ_F	133,3374
#define SMC37c669_DEVICE_IRQ_H	135,3495
#define SMC37c669_DEVICE_DRQ_A	140,3615
#define SMC37c669_DEVICE_DRQ_B	141,3684
#define SMC37c669_DEVICE_DRQ_C	142,3753
#define SMC37c669_CR00_INDEX	147,3873
#define SMC37c669_CR01_INDEX	148,3911
#define SMC37c669_CR02_INDEX	149,3949
#define SMC37c669_CR03_INDEX	150,3987
#define SMC37c669_CR04_INDEX	151,4025
#define SMC37c669_CR05_INDEX	152,4063
#define SMC37c669_CR06_INDEX	153,4101
#define SMC37c669_CR07_INDEX	154,4139
#define SMC37c669_CR08_INDEX	155,4177
#define SMC37c669_CR09_INDEX	156,4215
#define SMC37c669_CR0A_INDEX	157,4253
#define SMC37c669_CR0B_INDEX	158,4291
#define SMC37c669_CR0C_INDEX	159,4329
#define SMC37c669_CR0D_INDEX	160,4367
#define SMC37c669_CR0E_INDEX	161,4405
#define SMC37c669_CR0F_INDEX	162,4443
#define SMC37c669_CR10_INDEX	163,4481
#define SMC37c669_CR11_INDEX	164,4519
#define SMC37c669_CR12_INDEX	165,4557
#define SMC37c669_CR13_INDEX	166,4595
#define SMC37c669_CR14_INDEX	167,4633
#define SMC37c669_CR15_INDEX	168,4671
#define SMC37c669_CR16_INDEX	169,4709
#define SMC37c669_CR17_INDEX	170,4747
#define SMC37c669_CR18_INDEX	171,4785
#define SMC37c669_CR19_INDEX	172,4823
#define SMC37c669_CR1A_INDEX	173,4861
#define SMC37c669_CR1B_INDEX	174,4899
#define SMC37c669_CR1C_INDEX	175,4937
#define SMC37c669_CR1D_INDEX	176,4975
#define SMC37c669_CR1E_INDEX	177,5013
#define SMC37c669_CR1F_INDEX	178,5051
#define SMC37c669_CR20_INDEX	179,5089
#define SMC37c669_CR21_INDEX	180,5127
#define SMC37c669_CR22_INDEX	181,5165
#define SMC37c669_CR23_INDEX	182,5203
#define SMC37c669_CR24_INDEX	183,5241
#define SMC37c669_CR25_INDEX	184,5279
#define SMC37c669_CR26_INDEX	185,5317
#define SMC37c669_CR27_INDEX	186,5355
#define SMC37c669_CR28_INDEX	187,5393
#define SMC37c669_CR29_INDEX	188,5431
#define SMC37c669_DEVICE_ID_INDEX	193,5520
#define SMC37c669_DEVICE_REVISION_INDEX	194,5580
#define SMC37c669_FDC_BASE_ADDRESS_INDEX	195,5646
#define SMC37c669_IDE_BASE_ADDRESS_INDEX	196,5712
#define SMC37c669_IDE_ALTERNATE_ADDRESS_INDEX	197,5778
#define SMC37c669_PARALLEL0_BASE_ADDRESS_INDEX	198,5849
#define SMC37c669_SERIAL0_BASE_ADDRESS_INDEX	199,5921
#define SMC37c669_SERIAL1_BASE_ADDRESS_INDEX	200,5991
#define SMC37c669_PARALLEL_FDC_DRQ_INDEX	201,6061
#define SMC37c669_PARALLEL_FDC_IRQ_INDEX	202,6127
#define SMC37c669_SERIAL_IRQ_INDEX	203,6193
typedef struct _SMC37c669_CONFIG_REGS _SMC37c669_CONFIG_REGS211,6424
} SMC37c669_CONFIG_REGS;SMC37c669_CONFIG_REGS214,6523
typedef union _SMC37c669_CR00 _SMC37c669_CR00234,7128
} SMC37c669_CR00;SMC37c669_CR00243,7464
typedef union _SMC37c669_CR01 _SMC37c669_CR01248,7518
} SMC37c669_CR01;SMC37c669_CR01258,7930
typedef union _SMC37c669_CR02 _SMC37c669_CR02263,7984
} SMC37c669_CR02;SMC37c669_CR02271,8295
typedef union _SMC37c669_CR03 _SMC37c669_CR03289,8662
} SMC37c669_CR03;SMC37c669_CR03300,9136
typedef union _SMC37c669_CR04 _SMC37c669_CR04345,10432
} SMC37c669_CR04;SMC37c669_CR04355,10850
typedef union _SMC37c669_CR05 _SMC37c669_CR05367,11017
} SMC37c669_CR05;SMC37c669_CR05377,11443
typedef union _SMC37c669_CR06 _SMC37c669_CR06382,11497
} SMC37c669_CR06;SMC37c669_CR06390,11834
typedef union _SMC37c669_CR07 _SMC37c669_CR07403,12078
} SMC37c669_CR07;SMC37c669_CR07413,12483
typedef union _SMC37c669_CR08 _SMC37c669_CR08418,12537
} SMC37c669_CR08;SMC37c669_CR08424,12731
typedef union _SMC37c669_CR09 _SMC37c669_CR09436,12954
} SMC37c669_CR09;SMC37c669_CR09443,13187
typedef union _SMC37c669_CR0A _SMC37c669_CR0A448,13241
} SMC37c669_CR0A;SMC37c669_CR0A454,13393
typedef union _SMC37c669_CR0B _SMC37c669_CR0B459,13447
} SMC37c669_CR0B;SMC37c669_CR0B467,13780
typedef union _SMC37c669_CR0C _SMC37c669_CR0C480,13985
} SMC37c669_CR0C;SMC37c669_CR0C490,14423
typedef union _SMC37c669_CR0D _SMC37c669_CR0D497,14515
} SMC37c669_CR0D;SMC37c669_CR0D502,14672
typedef union _SMC37c669_CR0E _SMC37c669_CR0E509,14770
} SMC37c669_CR0E;SMC37c669_CR0E514,14927
typedef union _SMC37c669_CR0F _SMC37c669_CR0F519,14981
} SMC37c669_CR0F;SMC37c669_CR0F531,15514
typedef union _SMC37c669_CR10 _SMC37c669_CR10536,15568
} SMC37c669_CR10;SMC37c669_CR10546,16006
typedef union _SMC37c669_CR11 _SMC37c669_CR11551,16060
} SMC37c669_CR11;SMC37c669_CR11558,16333
typedef union _SMC37c66_CR1E _SMC37c66_CR1E574,16604
} SMC37c669_CR1E;SMC37c669_CR1E580,16809
typedef union _SMC37c669_CR1F _SMC37c669_CR1F598,17263
} SMC37c669_CR1F;SMC37c669_CR1F606,17584
typedef union _SMC37c669_CR20 _SMC37c669_CR20616,17762
} SMC37c669_CR20;SMC37c669_CR20622,17945
typedef union _SMC37c669_CR21 _SMC37c669_CR21632,18123
} SMC37c669_CR21;SMC37c669_CR21638,18306
typedef union _SMC37c669_CR22 _SMC37c669_CR22648,18501
} SMC37c669_CR22;SMC37c669_CR22654,18694
typedef union _SMC37c669_CR23 _SMC37c669_CR23666,18966
} SMC37c669_CR23;SMC37c669_CR23671,19116
typedef union _SMC37c669_CR24 _SMC37c669_CR24681,19295
} SMC37c669_CR24;SMC37c669_CR24687,19480
typedef union _SMC37c669_CR25 _SMC37c669_CR25697,19659
} SMC37c669_CR25;SMC37c669_CR25703,19844
typedef union _SMC37c669_CR26 _SMC37c669_CR26719,20078
} SMC37c669_CR26;SMC37c669_CR26725,20277
typedef union _SMC37c669_CR27 _SMC37c669_CR27748,20644
} SMC37c669_CR27;SMC37c669_CR27754,20843
typedef union _SMC37c669_CR28 _SMC37c669_CR28782,21379
} SMC37c669_CR28;SMC37c669_CR28788,21582
typedef union _SMC37c669_CR29 _SMC37c669_CR29811,21935
} SMC37c669_CR29;SMC37c669_CR29817,22128
typedef SMC37c669_CR0D SMC37c669_DEVICE_ID_REGISTER;SMC37c669_DEVICE_ID_REGISTER834,22691
typedef SMC37c669_CR0E SMC37c669_DEVICE_REVISION_REGISTER;SMC37c669_DEVICE_REVISION_REGISTER835,22744
typedef SMC37c669_CR20 SMC37c669_FDC_BASE_ADDRESS_REGISTER;SMC37c669_FDC_BASE_ADDRESS_REGISTER836,22803
typedef SMC37c669_CR21 SMC37c669_IDE_ADDRESS_REGISTER;SMC37c669_IDE_ADDRESS_REGISTER837,22863
typedef SMC37c669_CR23 SMC37c669_PARALLEL_BASE_ADDRESS_REGISTER;SMC37c669_PARALLEL_BASE_ADDRESS_REGISTER838,22918
typedef SMC37c669_CR24 SMC37c669_SERIAL_BASE_ADDRESS_REGISTER;SMC37c669_SERIAL_BASE_ADDRESS_REGISTER839,22983
typedef SMC37c669_CR26 SMC37c669_PARALLEL_FDC_DRQ_REGISTER;SMC37c669_PARALLEL_FDC_DRQ_REGISTER840,23046
typedef SMC37c669_CR27 SMC37c669_PARALLEL_FDC_IRQ_REGISTER;SMC37c669_PARALLEL_FDC_IRQ_REGISTER841,23106
typedef SMC37c669_CR28 SMC37c669_SERIAL_IRQ_REGISTER;SMC37c669_SERIAL_IRQ_REGISTER842,23166
typedef struct _SMC37c669_IRQ_TRANSLATION_ENTRY _SMC37c669_IRQ_TRANSLATION_ENTRY847,23280
} SMC37c669_IRQ_TRANSLATION_ENTRY;SMC37c669_IRQ_TRANSLATION_ENTRY850,23367
typedef struct _SMC37c669_DRQ_TRANSLATION_ENTRY _SMC37c669_DRQ_TRANSLATION_ENTRY855,23462
} SMC37c669_DRQ_TRANSLATION_ENTRY;SMC37c669_DRQ_TRANSLATION_ENTRY858,23549
#define TRUE 950,25588
#define FALSE 953,25624
#define wb(wb956,25648
#define rb(rb957,25719
static struct DEVICE_CONFIG DEVICE_CONFIG969,26143
} local_config 974,26265
static unsigned long SMC37c669_Addresses[979,26357
static unsigned long SMC37c669_Addresses[] __initdata 979,26357
static SMC37c669_CONFIG_REGS *SMC37c669 __initdata 989,26588
static SMC37c669_IRQ_TRANSLATION_ENTRY *SMC37c669_irq_table __initdata 998,26771
static SMC37c669_IRQ_TRANSLATION_ENTRY SMC37c669_default_irq_table[1004,26929
__initdata 1005,26998
static SMC37c669_IRQ_TRANSLATION_ENTRY SMC37c669_monet_irq_table[1021,27379
__initdata 1022,27446
static SMC37c669_IRQ_TRANSLATION_ENTRY *SMC37c669_irq_tables[1034,27740
static SMC37c669_IRQ_TRANSLATION_ENTRY *SMC37c669_irq_tables[] __initdata 1034,27740
static SMC37c669_DRQ_TRANSLATION_ENTRY *SMC37c669_drq_table __initdata 1047,28009
static SMC37c669_DRQ_TRANSLATION_ENTRY SMC37c669_default_drq_table[1053,28161
__initdata 1054,28230
extern struct LOCK spl_atomic;1111,29167
struct DDB smc_ddb 1141,29803
#define spinlock(spinlock1163,30518
#define spinunlock(spinunlock1164,30538
SMC37c669_CONFIG_REGS * __init SMC37c669_detect(1189,30889
unsigned int __init SMC37c669_enable_device 1297,33726
unsigned int __init SMC37c669_disable_device 1525,39040
unsigned int __init SMC37c669_configure_device 1739,43647
static unsigned int __init SMC37c669_is_device_enabled 1806,45009
static unsigned int __init SMC37c669_get_device_config 1905,47209
void __init SMC37c669_display_device_info 1956,48029
static void __init SMC37c669_config_mode(2034,49829
static unsigned char __init SMC37c669_read_config(2078,50932
static void __init SMC37c669_write_config(2114,51581
static void __init SMC37c669_init_local_config 2147,52150
static struct DEVICE_CONFIG * __init SMC37c669_get_config(2275,55710
static int __init SMC37c669_xlate_irq 2321,56567
static int __init SMC37c669_xlate_drq 2373,57761
int __init smcc669_init 2403,58589
int __init smcc669_open(2417,58848
int __init smcc669_close(2442,59387
int __init smcc669_read(2455,59597
int __init smcc669_write(2481,60127
SMC37c669_dump_registers(2509,60681
void __init SMC669_Init 2542,61343

arch/alpha/kernel/smp.c,2194
#define __KERNEL_SYSCALLS__28,544
#define DEBUG_SMP 33,617
#define DBGS(DBGS35,651
#define DBGS(DBGS37,688
struct ipi_msg_flush_tb_struct ipi_msg_flush_tb __cacheline_aligned;40,715
struct cpuinfo_alpha cpu_data[42,785
spinlock_t ticker_lock 44,826
spinlock_t kernel_flag 45,871
unsigned int boot_cpu_id 47,917
static int smp_activated 48,947
int smp_found_config 50,978
static int max_cpus 51,1035
unsigned int cpu_present_map 53,1062
int smp_num_cpus 55,1097
int smp_num_probed 56,1119
int smp_threads_ready 58,1175
volatile unsigned long cpu_callin_map[59,1202
volatile unsigned long smp_spinning[60,1257
cycles_t cacheflush_time;62,1313
unsigned int prof_multiplier[64,1340
unsigned int prof_counter[65,1379
volatile int ipi_bits[67,1416
volatile int ipi_bits[NR_CPUS] __cacheline_aligned;67,1416
unsigned long boot_cpu_palrev;69,1469
volatile int smp_commenced 71,1501
volatile int smp_processors_ready 72,1533
volatile int cpu_number_map[74,1573
volatile int cpu_logical_map[75,1611
extern struct thread_struct * original_pcb_ptr;78,1686
smp_setup(86,1956
smp_store_cpu_info(95,2082
smp_commence(102,2207
smp_callin(110,2320
start_secondary(157,3127
smp_tune_scheduling 178,3518
smp_boot_cpus(228,4473
smp_setup_percpu_timer(361,7824
smp_percpu_timer_interrupt(378,8226
setup_profiling_timer(418,9176
initialize_secondary(448,9807
secondary_cpu_start(453,9858
send_cpu_msg(508,11434
setup_smp(569,12518
secondary_console_message(614,13707
enum ipi_message_type ipi_message_type663,14785
	IPI_TLB_ALL,664,14809
	IPI_TLB_MM,665,14823
	IPI_TLB_PAGE,666,14836
	IPI_RESCHEDULE,667,14851
	IPI_CPU_STOP668,14868
handle_ipi(672,14891
send_ipi_message(736,16413
smp_info(759,16924
smp_send_reschedule(771,17188
smp_send_stop(777,17272
flush_tlb_all(784,17414
flush_tlb_mm(809,17955
flush_tlb_page(839,18613
flush_tlb_range(872,19412
spinlock_raise_ipl(883,19639
spinlock_restore_ipl(893,19867
#define spinlock_raise_ipl(spinlock_raise_ipl900,19926
#define spinlock_restore_ipl(spinlock_restore_ipl901,19977
spin_unlock(906,20067
spin_lock(915,20197
spin_trylock(976,21452
void write_lock(994,21834
void read_lock(1040,22761

arch/alpha/kernel/sys_alcor.c,258
alcor_update_irq_hw(36,703
alcor_ack_irq(55,1208
alcor_device_interrupt(74,1625
alcor_init_irq(98,2148
alcor_map_irq(161,4098
alcor_pci_fixup(179,4834
alcor_kill_arch 187,4984
struct alpha_machine_vector alcor_mv __initmv 204,5298
ALIAS_MV(229,5879

arch/alpha/kernel/fpreg.c,150
#define STT(STT8,87
#define STT(STT10,163
alpha_read_fp_reg 14,253
#define LDT(LDT56,1554
#define LDT(LDT58,1629
alpha_write_fp_reg 62,1711

arch/alpha/kernel/check_asm.c,15
int main(6,97

arch/alpha/kernel/core_apecs.c,734
#define __EXTERN_INLINE 21,471
# define DBG(DBG39,865
# define DBG(DBG41,902
#define vuip	44,929
volatile unsigned int apecs_mcheck_expected 46,968
volatile unsigned int apecs_mcheck_taken 47,1017
static unsigned int apecs_jd,48,1063
static unsigned int apecs_jd, apecs_jd1,48,1063
static unsigned int apecs_jd, apecs_jd1, apecs_jd2;48,1063
mk_conf_addr(94,2656
conf_read(127,3401
conf_write(209,5341
apecs_hose_read_config_byte 276,6786
apecs_hose_read_config_word 294,7203
apecs_hose_read_config_dword 311,7619
apecs_hose_write_config_byte 327,8015
apecs_hose_write_config_word 343,8430
apecs_hose_write_config_dword 359,8846
apecs_init_arch(375,9271
apecs_pci_clr_err(442,11412
apecs_machine_check(458,11747

arch/alpha/kernel/core_cia.c,957
#define __EXTERN_INLINE 20,378
#define MCHK_K_TPERR	37,816
#define MCHK_K_TCPERR	38,845
#define MCHK_K_HERR	39,875
#define MCHK_K_ECC_C	40,903
#define MCHK_K_ECC_NC	41,932
#define MCHK_K_OS_BUGCHECK	42,962
#define MCHK_K_PAL_BUGCHECK	43,996
#define DEBUG_MCHECK 49,1071
#define DEBUG_CONFIG 50,1094
# define DBGM(DBGM54,1165
# define DBGM(DBGM56,1203
# define DBGC(DBGC59,1247
# define DBGC(DBGC61,1285
#define vuip	64,1313
static volatile unsigned int CIA_mcheck_expected 66,1352
static volatile unsigned int CIA_mcheck_taken 67,1406
static unsigned int CIA_jd;68,1457
mk_conf_addr(114,3024
conf_read(147,3777
conf_write(229,5514
cia_hose_read_config_byte 298,7043
cia_hose_read_config_word 314,7452
cia_hose_read_config_dword 330,7862
cia_hose_write_config_byte 346,8253
cia_hose_write_config_word 362,8662
cia_hose_write_config_dword 378,9072
cia_init_arch(394,9491
cia_pci_clr_err(597,16494
cia_machine_check(607,16675

arch/alpha/kernel/core_pyxis.c,928
#define __EXTERN_INLINE 19,378
#define DEBUG_CONFIG 34,755
#define DEBUG_MCHECK 35,778
# define DBG_CNF(DBG_CNF38,819
# define DBG_CNF(DBG_CNF40,860
# define DBG_MCK(DBG_MCK44,908
# define DEBUG_MCHECK_DUMP45,943
# define DBG_MCK(DBG_MCK47,976
static volatile unsigned int PYXIS_mcheck_expected 51,1008
static volatile unsigned int PYXIS_mcheck_taken 52,1064
static unsigned int PYXIS_jd;53,1117
mk_conf_addr(99,2688
conf_read(113,3040
conf_write(167,4233
pyxis_hose_read_config_byte 213,5369
pyxis_hose_read_config_word 229,5783
pyxis_hose_read_config_dword 245,6198
pyxis_hose_write_config_byte 261,6595
pyxis_hose_write_config_word 277,7010
pyxis_hose_write_config_dword 293,7426
pyxis_enable_errors 309,7851
pyxis_srm_window_setup 339,8899
pyxis_native_window_setup(424,11600
pyxis_finish_init_arch(445,12151
pyxis_init_arch(520,14320
pyxis_pci_clr_err(529,14516
pyxis_machine_check(539,14757

arch/alpha/kernel/core_t2.c,858
#define __EXTERN_INLINE22,447
#define MCHK_K_TPERR	39,877
#define MCHK_K_TCPERR	40,906
#define MCHK_K_HERR	41,936
#define MCHK_K_ECC_C	42,964
#define MCHK_K_ECC_NC	43,993
#define MCHK_K_OS_BUGCHECK	44,1023
#define MCHK_K_PAL_BUGCHECK	45,1057
# define DBG(DBG52,1150
# define DBG(DBG54,1187
# define DBGMC(DBGMC58,1234
# define DBGMC(DBGMC60,1273
static volatile unsigned int T2_mcheck_expected[63,1302
static volatile unsigned int T2_mcheck_taken[64,1360
mk_conf_addr(110,2953
conf_read(143,3716
conf_write(205,4920
t2_hose_read_config_byte 257,5939
t2_hose_read_config_word 273,6345
t2_hose_read_config_dword 289,6752
t2_hose_write_config_byte 305,7140
t2_hose_write_config_word 321,7545
t2_hose_write_config_dword 337,7952
t2_init_arch(353,8368
#define SIC_SEIC 482,11864
t2_clear_errors(485,11933
t2_machine_check(519,12689

arch/alpha/kernel/smc37c93x.c,1599
#define SMC_DEBUG 17,262
# define DBG_DEVS(DBG_DEVS20,297
# define DBG_DEVS(DBG_DEVS22,347
#define KB 25,379
#define MB 26,408
#define GB 27,442
#define DEVICE_ON	30,519
#define DEVICE_OFF	31,540
#define CONFIG_ON_KEY	34,595
#define CONFIG_OFF_KEY	35,623
#define FDC	38,698
#define IDE1	39,714
#define IDE2	40,731
#define PARP	41,748
#define SER1	42,765
#define SER2	43,782
#define RTCL	44,799
#define KYBD	45,816
#define AUXIO	46,833
#define CONFIG_CONTROL	49,890
#define INDEX_ADDRESS	50,919
#define LOGICAL_DEVICE_NUMBER	51,947
#define DEVICE_ID	52,982
#define DEVICE_REV	53,1006
#define POWER_CONTROL	54,1031
#define POWER_MGMT	55,1059
#define OSC	56,1084
#define ACTIVATE	58,1104
#define ADDR_HI	59,1127
#define ADDR_LO	60,1150
#define INTERRUPT_SEL	61,1173
#define INTERRUPT_SEL_2	62,1201
#define DMA_CHANNEL_SEL	63,1252
#define FDD_MODE_REGISTER	65,1303
#define FDD_OPTION_REGISTER	66,1334
#define VALID_DEVICE_ID	69,1421
#define KYBD_INTERRUPT	72,1480
#define MOUS_INTERRUPT	73,1506
#define COM2_BASE	74,1533
#define COM2_INTERRUPT	75,1558
#define COM1_BASE	76,1584
#define COM1_INTERRUPT	77,1609
#define PARP_BASE	78,1635
#define PARP_INTERRUPT	79,1660
static unsigned long __init SMCConfigState(81,1687
#define NUM_RETRIES 95,1955
static void __init SMCRunState(114,2321
static unsigned long __init SMCDetectUltraIO(119,2414
static void __init SMCEnableDevice(134,2737
static void __init SMCEnableKYBD(161,3315
static void __init SMCEnableFDC(182,3800
static void __init SMCReportDeviceStatus(212,4456
int __init SMC93x_Init(241,5300

arch/alpha/kernel/core_mcpcia.c,817
#define __EXTERN_INLINE 23,491
# define DBG_CFG(DBG_CFG44,928
# define DBG_CFG(DBG_CFG46,969
#define DEBUG_MCHECK50,1001
# define DBG_MCK(DBG_MCK53,1043
# define DBG_MCK(DBG_MCK55,1084
static volatile unsigned int MCPCIA_mcheck_expected[58,1115
static volatile unsigned int MCPCIA_mcheck_taken[59,1177
static unsigned int MCPCIA_jd[60,1236
#define MCPCIA_MAX_HOSES 62,1277
conf_read(108,2855
conf_write(154,3851
mk_conf_addr(188,4736
mcpcia_hose_read_config_byte 216,5410
mcpcia_hose_read_config_word 231,5778
mcpcia_hose_read_config_dword 246,6147
mcpcia_hose_write_config_byte 261,6497
mcpcia_hose_write_config_word 276,6865
mcpcia_hose_write_config_dword 291,7234
mcpcia_init_arch(306,7606
mcpcia_pci_clr_err(559,15695
mcpcia_print_uncorrectable(574,16052
mcpcia_machine_check(646,18209

arch/alpha/kernel/core_tsunami.c,977
#define __EXTERN_INLINE 21,405
# define DBG_CFG(DBG_CFG40,828
# define DBG_CFG(DBG_CFG42,869
#define DEBUG_MCHECK45,900
# define DBG_MCK(DBG_MCK47,941
#define DEBUG_MCHECK_DUMP48,976
# define DBG_MCK(DBG_MCK50,1008
static volatile unsigned int TSUNAMI_mcheck_expected[53,1039
static volatile unsigned int TSUNAMI_mcheck_taken[54,1102
static unsigned int TSUNAMI_jd[55,1162
int TSUNAMI_bootcpu;56,1203
mk_conf_addr(93,2422
tsunami_hose_read_config_byte 119,3031
tsunami_hose_read_config_word 133,3363
tsunami_hose_read_config_dword 147,3696
tsunami_hose_write_config_byte 161,4010
tsunami_hose_write_config_word 175,4334
tsunami_hose_write_config_dword 189,4658
tsunami_probe_read(204,5016
tsunami_probe_write(225,5499
#define tsunami_probe_read(tsunami_probe_read245,6056
#define FN 248,6135
tsunami_init_one_pchip(251,6179
tsunami_init_arch(328,8331
tsunami_pci_clr_err_1(375,10165
tsunami_pci_clr_err(386,10426
tsunami_machine_check(397,10689

arch/alpha/kernel/machvec.h,983
#define TSUNAMI_HAE_ADDRESS	14,388
#define POLARIS_HAE_ADDRESS	19,626
#define JENSEN_IACK_SC	24,892
#define T2_IACK_SC	25,918
#define CAT1(CAT132,1000
#define CAT(CAT33,1024
#define DO_DEFAULT_RTC 35,1054
#define DO_EV4_MMU	37,1093
#define DO_EV5_MMU	45,1378
#define DO_EV6_MMU	53,1663
#define IO_LITE(IO_LITE61,1957
#define IO(IO80,2595
#define DO_APECS_IO	94,3258
#define DO_CIA_IO	95,3300
#define DO_LCA_IO	96,3334
#define DO_MCPCIA_IO	97,3368
#define DO_PYXIS_IO	98,3414
#define DO_POLARIS_IO	99,3459
#define DO_T2_IO	100,3509
#define DO_TSUNAMI_IO	101,3539
#define BUS(BUS103,3590
#define DO_APECS_BUS	107,3701
#define DO_CIA_BUS	108,3733
#define DO_LCA_BUS	109,3761
#define DO_MCPCIA_BUS	110,3789
#define DO_PYXIS_BUS	111,3823
#define DO_POLARIS_BUS	112,3855
#define DO_T2_BUS	113,3891
#define DO_TSUNAMI_BUS	114,3917
#define __initmv 134,4622
#define ALIAS_MV(ALIAS_MV135,4650
#define __initmv137,4676
#define ALIAS_MV(ALIAS_MV142,4888

arch/alpha/kernel/es1888.c,20
es1888_init(12,180

arch/alpha/kernel/sys_ruffian.c,317
ruffian_update_irq_hw(34,658
ruffian_ack_irq(52,1138
ruffian_device_interrupt(72,1608
ruffian_init_irq(131,3390
ruffian_pci_fixup(173,4387
ruffian_get_bank_size(186,4727
ruffian_init_arch(219,5556
ruffian_init_pit 232,5907
ruffian_kill_arch 243,6143
struct alpha_machine_vector ruffian_mv __initmv 259,6415

arch/alpha/kernel/sys_cabriolet.c,464
cabriolet_update_irq_hw(40,817
cabriolet_srm_update_irq_hw(56,1244
cabriolet_device_interrupt(71,1506
cabriolet_init_irq(95,2015
eb66p_map_irq(127,3002
eb66p_pci_fixup(142,3590
cabriolet_map_irq(165,4409
cabriolet_pci_fixup(180,5001
eb164_pci_fixup(188,5201
alphapc164_map_irq(239,7051
alphapc164_pci_fixup(256,7759
struct alpha_machine_vector cabriolet_mv __initmv 268,8015
ALIAS_MV(289,8565
ALIAS_MV(314,9188
ALIAS_MV(339,9807
ALIAS_MV(364,10439

arch/alpha/kernel/sys_dp264.c,618
#define dev2hose(dev2hose35,700
dp264_update_irq_hw(42,830
dp264_device_interrupt(69,1357
dp264_srm_device_interrupt(101,2227
dp264_init_irq(121,2815
dp264_map_irq(210,5506
monet_map_irq(231,6203
	const long min_idsel 254,7333
	int irq 255,7395
	return irq;257,7428
monet_swizzle(261,7462
webbrick_map_irq(292,8434
	const long min_idsel 308,9271
	int irq 309,9333
	return irq;311,9366
dp264_pci_fixup(315,9401
monet_pci_fixup(323,9569
webbrick_pci_fixup(332,9771
struct alpha_machine_vector dp264_mv __initmv 344,9957
ALIAS_MV(365,10491
struct alpha_machine_vector webbrick_mv __initmv 389,11043

arch/alpha/kernel/sys_eb64p.c,208
eb64p_update_irq_hw(37,714
eb64p_device_interrupt(51,970
eb64p_init_irq(75,1479
eb64p_map_irq(145,3326
eb64p_pci_fixup(160,3884
struct alpha_machine_vector eb64p_mv __initmv 172,4125
ALIAS_MV(193,4651

arch/alpha/kernel/sys_jensen.c,228
#define __EXTERN_INLINE 20,357
jensen_update_irq_hw(36,625
handle_nmi(69,1509
jensen_device_interrupt(76,1675
jensen_init_irq(106,2395
jensen_machine_check 114,2501
struct alpha_machine_vector jensen_mv __initmv 124,2638

arch/alpha/kernel/sys_miata.c,251
miata_update_irq_hw(34,643
miata_device_interrupt(51,1081
miata_srm_device_interrupt(88,1975
miata_init_irq(115,2865
miata_map_irq(205,5579
miata_swizzle(235,7154
miata_pci_fixup(266,7878
struct alpha_machine_vector miata_mv __initmv 279,8121

arch/alpha/kernel/sys_mikasa.c,342
mikasa_update_irq_hw(36,725
mikasa_device_interrupt(47,952
mikasa_init_irq(73,1550
mikasa_map_irq(123,2924
mikasa_pci_fixup(141,3679
mikasa_primo_pci_fixup(148,3850
mikasa_machine_check(155,4007
#define MCHK_NO_DEVSEL 158,4104
#define MCHK_NO_TABT 159,4134
struct alpha_machine_vector mikasa_mv __initmv 246,6587
ALIAS_MV(267,7120

arch/alpha/kernel/sys_noritake.c,329
noritake_update_irq_hw(38,800
noritake_device_interrupt(52,1097
noritake_srm_device_interrupt(79,1720
noritake_init_irq(101,2334
noritake_map_irq(171,4581
noritake_swizzle(199,5966
noritake_pci_fixup(228,6602
noritake_primo_pci_fixup(235,6779
struct alpha_machine_vector noritake_mv __initmv 247,7027
ALIAS_MV(268,7571

arch/alpha/kernel/sys_rawhide.c,206
rawhide_update_irq_hw(35,655
rawhide_srm_device_interrupt(60,1334
rawhide_init_irq(88,2169
rawhide_map_irq(142,3788
rawhide_pci_fixup(160,4447
struct alpha_machine_vector rawhide_mv __initmv 171,4621

arch/alpha/kernel/sys_sable.c,326
} sable_irq_swizzle 51,1146
sable_update_irq_hw(69,1634
sable_ack_irq(93,2224
sable_srm_device_interrupt(113,2648
sable_init_irq(135,3219
sable_map_irq(201,4821
sable_pci_fixup(220,5653
#define GAMMA_BIAS 236,6009
struct alpha_machine_vector sable_mv __initmv 237,6030
#define GAMMA_BIAS 267,6693
ALIAS_MV(262,6586

arch/alpha/kernel/sys_sx164.c,224
sx164_update_irq_hw(35,667
sx164_srm_update_irq_hw(52,1101
sx164_device_interrupt(67,1391
sx164_init_irq(104,2268
sx164_map_irq(167,3915
sx164_pci_fixup(182,4491
struct alpha_machine_vector sx164_mv __initmv 194,4670

arch/alpha/kernel/sys_takara.c,166
takara_device_interrupt(40,724
takara_init_irq(76,1874
takara_map_irq(103,2656
takara_pci_fixup(127,3814
struct alpha_machine_vector takara_mv __initmv 139,3998

arch/alpha/kernel/sys_sio.c,565
sio_update_irq_hw(38,882
sio_init_irq(47,1043
xl_init_arch(58,1237
alphabook1_init_arch(92,2393
static unsigned long sio_route_tab __initdata 117,3064
sio_pci_fixup(120,3135
sio_collect_irq_levels(140,3658
sio_fixup_irq_levels(158,4065
noname_map_irq(183,4810
noname_pci_fixup(222,6313
avanti_pci_fixup(241,6913
xl_pci_fixup(250,7156
p2k_map_irq(259,7383
p2k_pci_fixup(278,8062
alphabook1_pci_fixup(287,8299
struct alpha_machine_vector alphabook1_mv __initmv 351,10324
ALIAS_MV(372,10858
ALIAS_MV(397,11476
ALIAS_MV(422,12082
ALIAS_MV(447,12684

arch/alpha/kernel/core_polaris.c,726
#define __EXTERN_INLINE 17,284
# define DBG_CFG(DBG_CFG30,488
# define DBG_CFG(DBG_CFG32,529
#define DEBUG_MCHECK35,560
# define DBG_MCK(DBG_MCK37,601
# define DBG_MCK(DBG_MCK40,674
static volatile unsigned int POLARIS_mcheck_expected 43,705
static volatile unsigned int POLARIS_mcheck_taken 44,763
static volatile unsigned short POLARIS_jd 45,818
mk_conf_addr(78,2048
polaris_hose_read_config_byte 92,2436
polaris_hose_read_config_word 107,2808
polaris_hose_read_config_dword 122,3181
polaris_hose_write_config_byte 137,3542
polaris_hose_write_config_word 154,3960
polaris_hose_write_config_dword 171,4379
polaris_init_arch(187,4771
int polaris_pci_clr_err(198,5064
void polaris_machine_check(209,5371

arch/alpha/kernel/sys_rx164.c,260
rx164_update_irq_hw(35,671
rx164_srm_update_irq_hw(49,1007
rx164_isa_device_interrupt(66,1309
rx164_device_interrupt(95,2377
rx164_init_irq(128,3295
rx164_map_irq(173,4562
rx164_pci_fixup(203,5933
struct alpha_machine_vector rx164_mv __initmv 214,6095

arch/alpha/math-emu/fp-emul.c,1047
#define	OPC_PAL	10,153
#define OPC_INTA	12,176
#define OPC_INTL	13,198
#define OPC_INTS	14,220
#define OPC_INTM	15,242
#define OPC_FLTV	16,264
#define OPC_FLTI	17,286
#define OPC_FLTL	18,308
#define OPC_MISC	20,331
#define	OPC_JSR	22,354
#define FLTI_FUNC_ADDS	33,824
#define FLTI_FUNC_ADDT	34,855
#define FLTI_FUNC_CMPTEQ	35,886
#define FLTI_FUNC_CMPTLT	36,918
#define FLTI_FUNC_CMPTLE	37,950
#define FLTI_FUNC_CMPTUN	38,982
#define FLTI_FUNC_CVTTS_or_CVTST	39,1014
#define FLTI_FUNC_CVTTQ	40,1053
#define FLTI_FUNC_CVTQS	41,1085
#define FLTI_FUNC_CVTQT	42,1117
#define FLTI_FUNC_DIVS	43,1149
#define FLTI_FUNC_DIVT	44,1180
#define FLTI_FUNC_MULS	45,1211
#define FLTI_FUNC_MULT	46,1242
#define FLTI_FUNC_SUBS	47,1273
#define FLTI_FUNC_SUBT	48,1304
#define FLTI_FUNC_CVTQL	50,1336
#define MISC_TRAPB	52,1387
#define MISC_EXCB	53,1413
int init_module(72,1984
void cleanup_module(81,2188
#define alpha_fp_emul_imprecise	88,2327
#define alpha_fp_emul	90,2409
alpha_fp_emul 102,2793
alpha_fp_emul_imprecise 273,6711

arch/alpha/math-emu/fp-emul.h,105
#define ROUND_CHOP	7,242
#define ROUND_NINF	8,305
#define ROUND_NEAR	9,367
#define ROUND_PINF	10,426

arch/alpha/math-emu/ieee-math.c,1208
#define STICKY_S	27,1044
#define STICKY_T	28,1109
	NaN,34,1175
	NaN, QNaN,34,1175
	NaN, QNaN, INFTY,34,1175
	NaN, QNaN, INFTY, ZERO,34,1175
	NaN, QNaN, INFTY, ZERO, DENORM,34,1175
	NaN, QNaN, INFTY, ZERO, DENORM, NORMAL34,1175
	SINGLE,38,1226
	SINGLE, DOUBLE38,1226
typedef unsigned long fpclass_t;fpclass_t41,1246
#define IEEE_TMAX	43,1280
#define IEEE_SMAX	44,1317
#define IEEE_SNaN	45,1354
#define IEEE_QNaN	46,1391
#define IEEE_PINF	47,1428
#define IEEE_NINF	48,1465
} EXTENDED;EXTENDED75,2422
sign 83,2540
cmp128 93,2638
sll128 102,2784
srl128 110,2886
add128 118,2988
sub128 128,3203
mul64 138,3397
div128 146,3558
normalize 171,4021
ieee_fpclass 212,4878
extend_ieee 238,5356
make_s_ieee 274,6294
make_t_ieee 354,7808
round_s_ieee 443,9720
round_t_ieee 503,10969
add_kernel_ieee 561,12046
ieee_CVTST 614,13138
ieee_CVTTS 645,13897
ieee_CVTQS 676,14665
ieee_CVTQT 706,15335
ieee_CVTTQ 736,16017
ieee_CMPTEQ 814,17468
ieee_CMPTLT 836,17986
ieee_CMPTLE 863,18680
ieee_CMPTUN 890,19374
ieee_ADDS 912,19856
ieee_ADDT 961,20984
ieee_SUBS 1010,22116
ieee_SUBT 1060,23281
ieee_MULS 1110,24442
ieee_MULT 1163,25729
ieee_DIVS 1217,27033
ieee_DIVT 1283,28547

arch/alpha/math-emu/ieee-math.h,188
#define __ieee_math_h__8,214
#define ROUND_SHIFT	12,261
#define RM(RM13,322
#define ROUND_CHOP 15,367
#define ROUND_NINF 16,424
#define ROUND_NEAR 17,481
#define ROUND_PINF 18,538

drivers/net/3c509.c,3235
static char *version 44,1772
#define TX_TIMEOUT 48,1961
static int max_interrupt_work 50,2064
int el3_debug 74,2596
int el3_debug 76,2629
#define EL3_DATA 83,2886
#define EL3_CMD 84,2908
#define EL3_STATUS 85,2929
#define	 EEPROM_READ 86,2953
#define EL3_IO_EXTENT	88,2980
#define EL3WINDOW(EL3WINDOW90,3006
enum c509cmd c509cmd95,3197
	TotalReset 96,3212
	TotalReset = 0<<11, SelectWindow 96,3212
	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax 96,3212
	RxDisable 97,3274
	RxDisable = 3<<11, RxEnable 97,3274
	RxDisable = 3<<11, RxEnable = 4<<11, RxReset 97,3274
	RxDisable = 3<<11, RxEnable = 4<<11, RxReset = 5<<11, RxDiscard 97,3274
	TxEnable 98,3348
	TxEnable = 9<<11, TxDisable 98,3348
	TxEnable = 9<<11, TxDisable = 10<<11, TxReset 98,3348
	FakeIntr 99,3405
	FakeIntr = 12<<11, AckIntr 99,3405
	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb 99,3405
	SetStatusEnb 100,3464
	SetStatusEnb = 15<<11, SetRxFilter 100,3464
	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold 100,3464
	SetTxThreshold 101,3535
	SetTxThreshold = 18<<11, SetTxStart 101,3535
	SetTxThreshold = 18<<11, SetTxStart = 19<<11, StatsEnable 101,3535
	StatsDisable 102,3604
	StatsDisable = 22<<11, StopCoax 102,3604
enum c509status c509status104,3650
	IntLatch 105,3668
	IntLatch = 0x0001,105,3668
	IntLatch = 0x0001, AdapterFailure 105,3668
	IntLatch = 0x0001, AdapterFailure = 0x0002,105,3668
	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete 105,3668
	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,105,3668
	TxAvailable 106,3734
	TxAvailable = 0x0008,106,3734
	TxAvailable = 0x0008, RxComplete 106,3734
	TxAvailable = 0x0008, RxComplete = 0x0010,106,3734
	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly 106,3734
	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,106,3734
	IntReq 107,3796
	IntReq = 0x0040,107,3796
	IntReq = 0x0040, StatsFull 107,3796
	IntReq = 0x0040, StatsFull = 0x0080,107,3796
	IntReq = 0x0040, StatsFull = 0x0080, CmdBusy 107,3796
	IntReq = 0x0040, StatsFull = 0x0080, CmdBusy = 0x1000,107,3796
enum RxFilter RxFilter110,3917
	RxStation 111,3933
	RxStation = 1, RxMulticast 111,3933
	RxStation = 1, RxMulticast = 2, RxBroadcast 111,3933
	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm 111,3933
#define TX_FIFO	114,4068
#define RX_FIFO	115,4090
#define RX_STATUS 116,4112
#define TX_STATUS 117,4136
#define TX_FREE	118,4160
#define WN0_IRQ	120,4225
#define WN4_MEDIA	121,4292
#define  MEDIA_TP	122,4361
#define SKB_QUEUE_SIZE	128,4515
struct el3_private el3_private130,4542
static int id_port 139,4736
static struct device *el3_root_dev 140,4813
struct el3_mca_adapters_struct el3_mca_adapters_struct154,5393
struct el3_mca_adapters_struct el3_mca_adapters[159,5452
int el3_probe(169,5786
static ushort read_eeprom(397,12264
static ushort id_read_eeprom(406,12528
el3_open(428,13008
el3_start_xmit(508,15310
el3_interrupt(616,18578
el3_get_stats(711,21344
static void update_stats(732,21964
el3_rx(762,22932
set_multicast_list(832,25014
el3_close(859,25795
static int debug 898,26784
static int irq[899,26807
static int xcvr[900,26860
init_module(907,26995
cleanup_module(927,27323

drivers/net/8390.c,914
static const char *version 47,1877
#define NS8390_CORE72,2486
#define BUG_83C69075,2525
#define ei_reset_8390 95,3537
#define ei_block_output 96,3582
#define ei_block_input 97,3631
#define ei_get_8390_hdr 98,3678
int ei_debug 102,3806
int ei_open(149,5692
int ei_close(177,6497
static int ei_start_xmit(193,6834
void ei_interrupt(407,12806
static void ei_tx_err(521,16134
static void ei_tx_intr(559,17213
static void ei_receive(649,19588
static void ei_rx_overrun(778,23972
static struct net_device_stats *get_stats(847,25897
static inline u32 update_crc(871,26657
static inline void make_mc_bits(893,27091
static void do_set_multicast_list(922,27789
static void set_multicast_list(977,29687
int ethdev_init(992,30098
void NS8390_init(1027,30818
static void NS8390_trigger_send(1090,33308
struct module *NS8390_module 1118,34080
int init_module(1120,34118
void cleanup_module(1126,34189

drivers/net/8390.h,3181
#define _8390_h8,330
#define LOAD_8390_BY_KMOD17,548
#define TX_2X_PAGES 20,582
#define TX_1X_PAGES 21,605
#define EI_PINGPONG24,696
#define TX_PAGES 27,736
#define TX_PAGES 29,771
#define ETHER_ADDR_LEN 32,808
struct e8390_pkt_hdr e8390_pkt_hdr35,884
extern int ei_debug;42,1078
#define ei_debug 44,1105
#define NS8390_KSYSMS_PRESENT	63,1695
extern __inline__ int load_8390_module(70,1972
extern __inline__  void lock_8390_module(115,3464
extern __inline__  void unlock_8390_module(123,3660
#define ethdev_init 135,3983
#define NS8390_init 136,4017
#define ei_open 137,4051
#define ei_close 138,4077
#define ei_interrupt 139,4105
#define load_8390_module(load_8390_module143,4195
#define lock_8390_module(lock_8390_module144,4230
#define unlock_8390_module(unlock_8390_module145,4275
struct ei_device ei_device157,4731
#define MAX_SERVICE 185,6114
#define TX_TIMEOUT 188,6217
#define ei_status 190,6249
#define E8390_TX_IRQ_MASK	193,6356
#define E8390_RX_IRQ_MASK	194,6413
#define E8390_RXCONFIG	195,6443
#define E8390_RXOFF	196,6519
#define E8390_TXCONFIG	197,6579
#define E8390_TXOFF	198,6645
#define E8390_STOP	201,6761
#define E8390_START	202,6815
#define E8390_TRANS	203,6874
#define E8390_RREAD	204,6922
#define E8390_RWRITE	205,6965
#define E8390_NODMA	206,7011
#define E8390_PAGE0	207,7053
#define E8390_PAGE1	208,7111
#define E8390_PAGE2	209,7172
#define EI_SHIFT(EI_SHIFT217,7422
#define EI_SHIFT(EI_SHIFT219,7474
#define E8390_CMD	222,7506
#define EN0_CLDALO	224,7614
#define EN0_STARTPG	225,7693
#define EN0_CLDAHI	226,7763
#define EN0_STOPPG	227,7843
#define EN0_BOUNDARY	228,7913
#define EN0_TSR	229,7987
#define EN0_TPSR	230,8048
#define EN0_NCR	231,8112
#define EN0_TCNTLO	232,8177
#define EN0_FIFO	233,8247
#define EN0_TCNTHI	234,8293
#define EN0_ISR	235,8363
#define EN0_CRDALO	236,8428
#define EN0_RSARLO	237,8510
#define EN0_CRDAHI	238,8577
#define EN0_RSARHI	239,8658
#define EN0_RCNTLO	240,8725
#define EN0_RCNTHI	241,8790
#define EN0_RSR	242,8855
#define EN0_RXCR	243,8910
#define EN0_TXCR	244,8972
#define EN0_COUNTER0	245,9034
#define EN0_DCFG	246,9107
#define EN0_COUNTER1	247,9171
#define EN0_IMR	248,9238
#define EN0_COUNTER2	249,9298
#define ENISR_RX	252,9425
#define ENISR_TX	253,9472
#define ENISR_RX_ERR	254,9522
#define ENISR_TX_ERR	255,9575
#define ENISR_OVER	256,9631
#define ENISR_COUNTERS	257,9689
#define ENISR_RDC	258,9746
#define ENISR_RESET	259,9795
#define ENISR_ALL	260,9842
#define ENDCFG_WTS	263,9944
#define EN1_PHYS 266,10035
#define EN1_PHYS_SHIFT(EN1_PHYS_SHIFT267,10113
#define EN1_CURPAG 268,10184
#define EN1_MULT 269,10250
#define EN1_MULT_SHIFT(EN1_MULT_SHIFT270,10334
#define ENRSR_RXOK	273,10464
#define ENRSR_CRC	274,10517
#define ENRSR_FAE	275,10556
#define ENRSR_FO	276,10607
#define ENRSR_MPA	277,10648
#define ENRSR_PHY	278,10688
#define ENRSR_DIS	279,10744
#define ENRSR_DEF	280,10811
#define ENTSR_PTX 283,10893
#define ENTSR_ND 284,10955
#define ENTSR_COL 285,11014
#define ENTSR_ABT 286,11080
#define ENTSR_CRS 287,11160
#define ENTSR_FU 288,11217
#define ENTSR_CDH 289,11291
#define ENTSR_OWC 290,11370

drivers/net/slhc.c,508
int last_retran;86,2767
slhc_init(97,3142
slhc_free(162,4684
put16(180,5021
encode(191,5150
pull16(204,5393
decode(216,5533
slhc_compress(236,5930
slhc_uncompress(497,13631
slhc_remember(646,16940
slhc_toss(697,18200
void slhc_i_status(707,18319
void slhc_o_status(719,18554
int init_module(744,19156
void cleanup_module(750,19285
__initfunc(757,19345
slhc_toss(771,19605
slhc_uncompress(777,19737
slhc_compress(783,19912
slhc_remember(791,20144
slhc_free(798,20317
slhc_init(804,20457

drivers/net/Space.c,3699
#define	NEXT_DEV	35,1215
struct devprobedevprobe134,5031
__initfunc(147,5504
struct devprobe pci_probes[170,6086
struct devprobe pci_probes[] __initdata 170,6086
struct devprobe eisa_probes[222,7173
struct devprobe eisa_probes[] __initdata 222,7173
struct devprobe sparc_probes[241,7475
struct devprobe sparc_probes[] __initdata 241,7475
struct devprobe mca_probes[260,7794
struct devprobe mca_probes[] __initdata 260,7794
struct devprobe isa_probes[277,8141
struct devprobe isa_probes[] __initdata 277,8141
struct devprobe parport_probes[377,10237
struct devprobe parport_probes[] __initdata 377,10237
struct devprobe m68k_probes[390,10536
struct devprobe m68k_probes[] __initdata 390,10536
struct devprobe ppc_probes[421,11404
struct devprobe ppc_probes[] __initdata 421,11404
struct devprobe sgi_probes[431,11552
struct devprobe sgi_probes[] __initdata 431,11552
struct devprobe mips_probes[438,11662
struct devprobe mips_probes[] __initdata 438,11662
struct devprobe arm_probes[445,11779
struct devprobe arm_probes[] __initdata 445,11779
__initfunc(465,12149
__initfunc(513,13586
static int hippi_probe(535,13973
    static struct device tap0_dev 558,14386
#   define NEXT_DEV	560,14521
    static struct device sdla0_dev 565,14623
#   define NEXT_DEV	568,14742
    static struct device dev_ltpc 573,14852
#   define NEXT_DEV	579,15030
    static struct device cops2_dev 584,15151
    static struct device cops1_dev 585,15250
    static struct device cops0_dev 586,15351
#   define NEXT_DEV 588,15471
    static struct device dev_ipddp 593,15601
#   define NEXT_DEV 599,15783
# define ETH0_ADDR 604,15937
# define ETH0_IRQ 607,15982
#define ETH_NOPROBE_ADDR 614,16246
static struct device eth7_dev 616,16279
static struct device eth6_dev 618,16399
static struct device eth5_dev 620,16520
static struct device eth4_dev 622,16641
static struct device eth3_dev 624,16762
static struct device eth2_dev 626,16883
static struct device eth1_dev 628,17004
static struct device eth0_dev 631,17126
#   define NEXT_DEV	635,17260
static struct device slip_bootstrap 641,17484
#define NEXT_DEV 644,17624
static struct device x25_asy_bootstrap 651,17878
#define NEXT_DEV 654,18023
static struct device mkiss_bootstrap 661,18261
#define NEXT_DEV 664,18404
static struct device strip_bootstrap 669,18537
#define NEXT_DEV 672,18682
static struct device ppp_bootstrap 677,18802
#define NEXT_DEV 680,18932
    static struct device dummy_dev 685,19053
#   define	NEXT_DEV	688,19181
struct device eql_dev 693,19287
#   define      NEXT_DEV 704,19610
trif_probe(712,19761
static struct device tr7_dev 729,20038
static struct device tr6_dev 731,20124
static struct device tr5_dev 733,20210
static struct device tr4_dev 735,20296
static struct device tr3_dev 737,20382
static struct device tr2_dev 739,20468
static struct device tr1_dev 741,20554
static struct device tr0_dev 743,20640
#   define      NEXT_DEV 746,20751
	static struct device fddi7_dev 751,20823
	static struct device fddi6_dev 753,20921
	static struct device fddi5_dev 755,21021
	static struct device fddi4_dev 757,21121
	static struct device fddi3_dev 759,21221
	static struct device fddi2_dev 761,21321
	static struct device fddi1_dev 763,21421
	static struct device fddi0_dev 765,21521
#define	NEXT_DEV	768,21637
	static struct device hip3_dev 772,21696
	static struct device hip2_dev 774,21791
	static struct device hip1_dev 776,21887
	static struct device hip0_dev 778,21983
#define	NEXT_DEV	782,22096
    static struct device bif_dev 787,22199
#   define      NEXT_DEV 790,22333
struct device loopback_dev 794,22431
struct device *dev_base 807,22803

drivers/net/auto_irq.c,176
static const char *version=31,1334
static unsigned long irqs;42,1579
void autoirq_setup(44,1607
#define BUSY_LOOP_UNTIL(BUSY_LOOP_UNTIL49,1669
int autoirq_report(50,1730

drivers/net/plip.c,2066
static const char *version 52,1814
#define PLIP_MAX 119,3703
#define NET_DEBUG 123,3803
static unsigned int net_debug 125,3830
#define ENABLE(ENABLE127,3874
#define DISABLE(DISABLE128,3910
#define PLIP_DELAY_UNIT	131,3971
#define PLIP_TRIGGER_WAIT	134,4071
#define PLIP_NIBBLE_WAIT 137,4167
#define PAR_INTR_ON	139,4205
#define PAR_INTR_OFF	140,4259
#define PAR_DATA(PAR_DATA141,4304
#define PAR_STATUS(PAR_STATUS142,4348
#define PAR_CONTROL(PAR_CONTROL143,4394
enum plip_connection_state plip_connection_state163,5166
	PLIP_CN_NONE=164,5195
	PLIP_CN_RECEIVE,165,5212
	PLIP_CN_SEND,166,5230
	PLIP_CN_CLOSING,167,5245
	PLIP_CN_ERROR168,5263
enum plip_packet_state plip_packet_state171,5282
	PLIP_PK_DONE=172,5307
	PLIP_PK_TRIGGER,173,5324
	PLIP_PK_LENGTH_LSB,174,5342
	PLIP_PK_LENGTH_MSB,175,5363
	PLIP_PK_DATA,176,5384
	PLIP_PK_CHECKSUM177,5399
enum plip_nibble_state plip_nibble_state180,5421
	PLIP_NB_BEGIN,181,5446
	PLIP_NB_1,182,5462
	PLIP_NB_2,183,5474
struct plip_local plip_local186,5490
struct net_local net_local209,5949
__initfunc(236,6744
plip_kick_bh(314,8767
#define OK 340,9729
#define TIMEOUT 341,9749
#define ERROR 342,9769
#define HS_TIMEOUT	343,9789
typedef int (*plip_func)plip_func345,9811
static plip_func connection_state_table[348,9932
plip_bh(359,10118
plip_bh_timeout_error(377,10563
plip_none(453,12628
plip_receive(462,12862
plip_receive_packet(512,13862
plip_send(631,17233
plip_send_packet(678,18138
plip_connection_close(794,21049
plip_error(813,21527
plip_interrupt(839,22130
plip_rebuild_header(898,23496
plip_tx_packet(913,23883
plip_open(965,25159
plip_close(1019,26431
plip_preempt(1060,27156
plip_wakeup(1076,27512
plip_get_stats(1105,28183
plip_config(1114,28348
plip_ioctl(1135,28933
static int parport[1155,29358
static int timid 1156,29418
static struct device *dev_plip[1161,29526
cleanup_module(1165,29600
#define plip_init 1185,30001
static int parport_ptr 1189,30054
void plip_setup(1191,30083
plip_searchfor(1217,30661
__initfunc(1226,30803

drivers/net/slip.c,1137
#define SL_CHECK_TRANSMIT57,2690
#define SLIP_VERSION 85,3310
#define	SLIP_VERSION	87,3372
typedef struct slip_ctrl slip_ctrl91,3426
} slip_ctrl_t;slip_ctrl_t95,3581
static slip_ctrl_t	**slip_ctrls 96,3596
int slip_maxdev 98,3637
static struct tty_ldisc	sl_ldisc;101,3736
sl_alloc_bufs(131,4612
sl_free_bufs(212,6212
static int sl_realloc_bufs(233,6614
sl_lock(324,8426
sl_unlock(334,8682
sl_bump(343,8937
sl_encaps(400,10392
static void slip_write_wakeup(450,11832
sl_xmit(476,12475
sl_close(539,14020
static int sl_open(560,14382
static int sl_change_mtu(576,14645
sl_get_stats(591,14961
static int sl_init(627,16007
static int slip_receive_room(663,16738
static void slip_receive_buf(675,17118
static void sl_sync(706,17805
sl_alloc(723,18140
slip_open(829,20430
slip_close(931,22883
slip_esc(961,23597
static void slip_unesc(998,24213
slip_esc6(1047,25261
slip_unesc6(1085,25897
slip_ioctl(1123,26788
static int sl_ioctl(1246,29725
static int slip_init_ctrl_dev(1319,31703
init_module(1386,33577
cleanup_module(1392,33635
static void sl_outfill(1455,34923
static void sl_keepalive(1487,35658

drivers/net/hp.c,1019
static const char *version 21,599
static unsigned int hppclan_portlist[42,1062
static unsigned int hppclan_portlist[] __initdata 42,1062
#define HP_IO_EXTENT	45,1170
#define HP_DATAPORT	47,1195
#define HP_ID	48,1251
#define HP_CONFIGURE	49,1272
#define	 HP_RUN	50,1328
#define	 HP_IRQ	51,1379
#define	 HP_DATAON	52,1447
#define NIC_OFFSET	53,1495
#define HP_START_PG	55,1554
#define HP_8BSTOP_PG	56,1610
#define HP_16BSTOP_PG	57,1666
static char irqmap[76,2427
static char irqmap[16] __initdata=76,2427
struct netdev_entry netcard_drv 83,2645
__initfunc(87,2737
__initfunc(109,3217
hp_open(218,6314
hp_close(226,6404
hp_reset_8390(234,6497
hp_get_8390_hdr(256,7114
hp_block_input(283,8206
hp_block_output(318,9650
#define NE_CMD	340,10528
hp_init_card(377,11775
#define MAX_HP_CARDS	387,11964
#define NAMELEN	388,12027
static char namelist[389,12085
static struct device dev_hp[390,12140
static int io[399,12291
static int irq[400,12329
init_module(408,12629
cleanup_module(437,13367

drivers/net/ppp.c,2647
#define OPTIMIZE_FLAG_TIME	43,1341
#define CHECK_CHARACTERS	44,1381
#define PPP_MAX_RCV_QLEN	46,1409
#define fcstab	81,2328
#define OPTIMIZE_FLAG_TIME	128,4002
static int  flag_time 135,4094
#define CHECK_PPP_MAGIC(CHECK_PPP_MAGIC138,4168
#define CHECK_PPP(CHECK_PPP143,4308
#define CHECK_PPP_VOID(CHECK_PPP_VOID150,4449
#define tty2ppp(tty2ppp158,4593
#define dev2ppp(dev2ppp159,4650
#define ppp2tty(ppp2tty160,4702
#define ppp2dev(ppp2dev161,4736
static struct ppp *ppp_list 163,4772
static struct ppp *ppp_last 164,4808
static char ppp_warning[167,4908
static char ppp_magic_warn[168,4980
static char szVersion[170,5060
#define in_xmap(in_xmap181,5453
#define in_rmap(in_rmap182,5530
__u16 ppp_crc16_table[204,6339
static __u32 paritytab[242,8509
ppp_first_time(254,8756
ppp_init(300,9941
ppp_async_init(319,10237
ppp_async_release(349,10823
ppp_tty_open 368,11117
ppp_tty_close 420,12030
ppp_tty_read(462,12878
ppp_tty_write(550,14683
ppp_tty_ioctl 612,15948
ppp_tty_poll(760,18894
ppp_tty_wakeup 786,19592
ppp_async_send(810,20173
ppp_tty_push(829,20507
ppp_async_encode(881,21701
ppp_tty_room 988,24062
ppp_tty_receive 997,24258
typedef int (*pfn_proto)pfn_proto1210,29508
typedef struct ppp_proto_struct ppp_proto_struct1212,29569
} ppp_proto_type;ppp_proto_type1215,29633
ppp_proto_type proto_list[1227,30149
ppp_init_dev 1242,30605
ppp_dev_open 1269,31173
ppp_dev_close 1288,31482
get_vj_stats(1303,31720
ppp_dev_ioctl 1319,32251
ppp_ioctl(1369,33267
ppp_set_compression 1582,37725
static void ppp_proto_ccp(1678,40045
ppp_ccp_closed(1790,42574
ppp_receive_frame(1820,43303
ppp_receive_error(1966,46777
ppp_rcv_rx(1978,46981
rcv_proto_ip(1997,47401
rcv_proto_ipv6(2010,47682
rcv_proto_ipx(2023,47968
rcv_proto_at(2036,48264
rcv_proto_vjc_comp(2049,48559
rcv_proto_vjc_uncomp(2076,49184
rcv_proto_ccp(2091,49570
rcv_proto_unknown(2102,49808
extern inline __u8 * store_long 2128,50443
ppp_send_frame(2143,50856
ppp_vj_compress(2251,53341
ppp_send_frames(2297,54356
ppp_output_wakeup(2320,54772
ppp_send_ctrl(2336,55035
ppp_dev_xmit(2358,55581
ppp_dev_stats 2505,58864
ppp_find(2526,59529
ppp_alloc(2542,59849
ppp_generic_init(2628,61714
ppp_release(2659,62354
ppp_print_hex 2694,63027
ppp_print_char 2708,63299
ppp_print_buffer 2727,63634
struct compressor_link compressor_link2755,64304
static struct compressor_link *ppp_compressors 2760,64390
static struct compressor *find_compressor 2762,64470
static int ppp_register_compressor 2784,64888
static void ppp_unregister_compressor 2812,65387
init_module(2844,66047
cleanup_module(2857,66249

drivers/net/lance.c,2368
static const char *version 48,2034
static unsigned int lance_portlist[70,2601
static unsigned int lance_portlist[] __initdata 70,2601
int lance_debug 75,2814
int lance_debug 77,2851
#define LANCE_LOG_TX_BUFFERS 173,7682
#define LANCE_LOG_RX_BUFFERS 174,7713
#define TX_RING_SIZE	177,7752
#define TX_RING_MOD_MASK	178,7805
#define TX_RING_LEN_BITS	179,7850
#define RX_RING_SIZE	181,7908
#define RX_RING_MOD_MASK	182,7961
#define RX_RING_LEN_BITS	183,8006
#define PKT_BUF_SZ	185,8064
#define LANCE_DATA 188,8127
#define LANCE_ADDR 189,8151
#define LANCE_RESET 190,8175
#define LANCE_BUS_IF 191,8200
#define LANCE_TOTAL_SIZE 192,8226
struct lance_rx_head lance_rx_head195,8301
struct lance_tx_head lance_tx_head201,8455
struct lance_init_block lance_init_block208,8623
struct lance_private lance_private217,8925
#define LANCE_MUST_PAD 239,9776
#define LANCE_ENABLE_AUTOSELECT 240,9819
#define LANCE_MUST_REINIT_RING 241,9862
#define LANCE_MUST_UNRESET 242,9905
#define LANCE_HAS_MISSED_FRAME 243,9948
static struct lance_chip_type lance_chip_type248,10174
} chip_table[252,10253
enum {OLD_LANCE 277,11345
enum {OLD_LANCE = 0, PCNET_ISA=277,11345
enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=277,11345
enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=277,11345
enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=277,11345
enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=277,11345
enum {OLD_LANCE = 0, PCNET_ISA=1, PCNET_ISAP=2, PCNET_PCI=3, PCNET_VLB=4, PCNET_PCI_II=5, LANCE_UNKNOWN=277,11345
static unsigned int pci_irq_line 280,11522
static unsigned char lance_need_isa_bounce_buffers 284,11684
#define MAX_CARDS	299,12259
#define IF_NAMELEN	300,12330
static int io[302,12392
static int dma[303,12427
static int irq[304,12463
static char ifnames[310,12666
static struct device dev_lance[311,12723
int init_module(318,12884
void cleanup_module(345,13619
int lance_probe(366,14176
__initfunc(423,15938
lance_open_fail(678,24538
lance_open(686,24610
lance_purge_tx_ring(777,27649
lance_init_ring(793,27958
lance_restart(836,29186
static int lance_start_xmit(849,29578
lance_interrupt(966,32957
lance_rx(1094,36527
lance_close(1172,38926
static struct net_device_stats *lance_get_stats(1221,40083
static void set_multicast_list(1244,40664

drivers/net/ne.c,1225
static const char *version 36,1438
#define SUPPORT_NE_BAD_CLONES58,1997
static unsigned int netcard_portlist[71,2387
static unsigned int netcard_portlist[] __initdata 71,2387
pci_clone_list[79,2654
pci_clone_list[] __initdata 79,2654
static int probe_pci 90,3214
bad_clone_list[96,3409
bad_clone_list[] __initdata 96,3409
#define NE_BASE	115,4341
#define NE_CMD	116,4375
#define NE_DATAPORT	117,4397
#define NE_RESET	118,4464
#define NE_IO_EXTENT	119,4533
#define NE1SM_START_PG	121,4560
#define NE1SM_STOP_PG 122,4618
#define NESM_START_PG	123,4676
#define NESM_STOP_PG	124,4733
static unsigned int pci_irq_line 127,4858
struct netdev_entry netcard_drv 169,6524
__initfunc(180,6861
__initfunc(212,7677
__initfunc(246,8709
static int ne_open(500,16022
static int ne_close(507,16112
static void ne_reset_8390(519,16429
static void ne_get_8390_hdr(545,17290
static void ne_block_input(582,18598
static void ne_block_output(649,20628
#define MAX_NE_CARDS	756,23558
#define NAMELEN	757,23621
static char namelist[758,23679
static struct device dev_ne[759,23734
static int io[768,23885
static int irq[769,23923
static int bad[770,23963
int init_module(785,24563
void cleanup_module(814,25289

drivers/net/3c501.c,1747
static const char *version 78,3585
static unsigned int netcard_portlist[110,4370
static unsigned int netcard_portlist[] __initdata 110,4370
#define EL1_IO_EXTENT	130,4999
#define EL_DEBUG 133,5042
static int el_debug 135,5165
struct net_localnet_local141,5243
#define RX_STATUS 151,5504
#define RX_CMD	152,5538
#define TX_STATUS 153,5565
#define TX_CMD	154,5599
#define GP_LOW 155,5626
#define GP_HIGH 156,5660
#define RX_BUF_CLR 157,5694
#define RX_LOW	158,5729
#define RX_HIGH 159,5762
#define SAPROM	160,5796
#define AX_STATUS 161,5829
#define AX_CMD	162,5863
#define DATAPORT 163,5890
#define TX_RDY 164,5924
#define EL1_DATAPTR	166,5965
#define EL1_RXPTR	167,5990
#define EL1_SAPROM	168,6013
#define EL1_DATAPORT 169,6037
#define AX_OFF	175,6111
#define AX_SYS 176,6165
#define AX_XMIT 177,6210
#define AX_RX	178,6257
#define AX_LOOP	179,6301
#define AX_RESET 180,6344
#define RX_NORM 187,6481
#define RX_PROM 188,6545
#define RX_MULT 189,6609
#define TX_NORM 190,6663
#define TX_COLLISION 196,6772
#define TX_16COLLISIONS 197,6798
#define TX_READY 198,6827
#define RX_RUNT 200,6850
#define RX_MISSED 201,6871
#define RX_GOOD	202,6943
struct netdev_entry el1_drv 210,7076
__initfunc(213,7169
__initfunc(240,7682
static int el_open(358,10085
static int el_start_xmit(377,10437
static void el_interrupt(481,13133
static void el_receive(664,17032
static void  el_reset(720,18141
static int el1_close(745,18806
static struct net_device_stats *el1_get_stats(766,19157
static void set_multicast_list(777,19394
static char devicename[800,19794
static struct device dev_3c501 802,19831
static int io=810,19995
static int irq=811,20016
int init_module(815,20080
void cleanup_module(824,20217

drivers/net/arcnet.c,1576
static const char *version 180,7637
#define AINTMASK(AINTMASK229,8965
#define ARCSTATUS 230,9011
#define ACOMMAND(ACOMMAND231,9051
int arcnet_debug=233,9098
extern char com90xx_explicit;244,9320
#	define arcnet_dump_skb(arcnet_dump_skb273,10267
#	define arcnet_dump_packet(arcnet_dump_packet281,10497
void arcnet_dump_skb(333,12678
void arcnet_dump_packet(356,13195
void arcnet_setup(385,13902
arcnet_open(424,15191
arcnet_close(509,17425
arcnet_send_packet_bad(588,19385
arcnetA_send_packet(706,22437
void arcnetA_continue_tx(829,25349
int arcnet_go_tx(882,26978
arcnet_interrupt(929,28181
void arcnet_tx_done(991,29477
void arcnet_rx(1021,30361
arcnetA_rx(1077,31772
static struct net_device_stats *arcnet_get_stats(1358,39763
static int arcnetA_header(1371,40133
static int arcnetA_rebuild_header(1444,42198
static unsigned short arcnetA_type_trans(1490,43399
static int arcnetE_init(1538,44819
static int arcnetE_open_close(1557,45368
arcnetE_send_packet(1566,45521
arcnetE_rx(1652,47258
static int arcnetS_init(1692,48456
static int arcnetS_open_close(1716,49154
arcnetS_send_packet(1725,49306
arcnetS_rx(1788,50680
static int arcnetS_header(1834,52085
static int arcnetS_rebuild_header(1890,53748
unsigned short arcnetS_type_trans(1926,54629
void cleanup_module(1971,55996
void arcnet_use_count(1976,56074
void arcnet_use_count(1986,56183
struct device arcnet_devs[1990,56220
int arcnet_num_devs=1991,56264
char arcnet_dev_names[1992,56287
__initfunc(1994,56332
int init_module(2040,57383
void arcnet_makename(2072,58120

drivers/net/atp.c,767
static const char *version 21,692
#define NET_DEBUG 109,4438
static unsigned int net_debug 111,4465
#define ETHERCARD_TOTAL_SIZE	114,4566
#define TIMED_CHECKER 119,4754
static struct device *atp_timed_dev;123,4883
static struct timer_list atp_timer 124,4920
__initfunc(153,6216
__initfunc(176,6732
__initfunc(262,9329
__initfunc(294,10200
static int net_open(324,11224
static void hardware_init(341,11724
static void trigger_send(377,12668
static void write_packet(384,12850
net_send_packet(415,13901
net_interrupt(478,15771
static void atp_timed_checker(604,19867
static void net_rx(637,20684
static void read_block(694,22356
net_close(716,23111
static struct net_device_stats *net_get_stats(740,23656
static void set_multicast_list(750,23866

drivers/net/slip.h,661
#define _LINUX_SLIP_H23,723
# define SL_INCLUDE_CSLIP28,833
# define SL_MODE_DEFAULT 32,891
# define SL_MODE_DEFAULT 34,939
#define SL_NRUNIT	38,1011
#define SL_MTU	41,1138
#define END 44,1225
#define ESC 45,1284
#define ESC_END 46,1344
#define ESC_ESC 47,1409
struct slip slip50,1476
#define SLF_INUSE	93,3256
#define SLF_ESCAPE	94,3312
#define SLF_ERROR	95,3382
#define SLF_KEEPTEST	96,3451
#define SLF_OUTWAIT	97,3502
#define SL_MODE_SLIP	103,3652
#define SL_MODE_CSLIP	104,3675
#define SL_MODE_SLIP6	105,3699
#define SL_MODE_CSLIP6	106,3759
#define SL_MODE_AX25	107,3812
#define SL_MODE_ADAPTIVE 108,3835
#define SLIP_MAGIC 119,4093

drivers/net/wd.c,945
static const char *version 27,765
static unsigned int wd_portlist[45,1201
static unsigned int wd_portlist[] __initdata 45,1201
#define WD_START_PG	62,1806
#define WD03_STOP_PG	63,1862
#define WD13_STOP_PG	64,1918
#define WD_CMDREG	66,1975
#define	 WD_RESET	67,2036
#define	 WD_MEMENB	68,2093
#define WD_CMDREG5	69,2150
#define	 ISA16	70,2218
#define	 NIC16	71,2285
#define WD_NIC_OFFSET	72,2349
#define WD_IO_EXTENT	73,2420
struct netdev_entry wd_drv 85,2809
__initfunc(89,2891
__initfunc(111,3361
wd_open(316,10507
wd_reset_8390(335,11009
wd_get_8390_hdr(357,11734
wd_block_input(382,12669
wd_block_output(404,13438
wd_close(422,13940
#define MAX_WD_CARDS	444,14404
#define NAMELEN	445,14467
static char namelist[446,14525
static struct device dev_wd[447,14580
static int io[456,14731
static int irq[457,14769
static int mem[458,14809
static int mem_end[459,14848
init_module(469,15299
cleanup_module(500,16111

drivers/net/strip.c,5394
static const char StripVersion[72,2558
static const char StripVersion[74,2630
#define TICKLE_TIMERS 77,2696
#define EXT_COUNTERS 78,2720
# define isdigit(isdigit102,3279
# define isspace(isspace103,3327
} MetricomKey;MetricomKey141,4144
} IPaddr;IPaddr152,4379
} MetricomAddressString;MetricomAddressString162,4527
#define STRIP_ENCAP_SIZE(STRIP_ENCAP_SIZE170,4889
} STRIP_Header;STRIP_Header184,5450
} MetricomNode;MetricomNode189,5500
#define NODE_TABLE_SIZE 191,5517
} MetricomNodeTable;MetricomNodeTable197,5663
enum { FALSE 199,5685
enum { FALSE = 0, TRUE 199,5685
} FirmwareVersion;FirmwareVersion207,5795
} SerialNumber;SerialNumber215,5891
} BatteryVoltage;BatteryVoltage223,5986
} char8;char8228,6037
    NoStructure 232,6054
    StructuredMessages 233,6102
    ChecksummedMessages 234,6162
struct stripstrip237,6255
static const int MaxCommandStringLength 404,14219
static const int CompatibilityCommand 405,14265
static const char CommandString0[407,14309
static const char CommandString1[408,14408
static const char CommandString2[409,14489
static const char CommandString3[410,14575
static const char CommandString4[411,14665
static const char CommandString5[412,14748
typedef struct { const char *string; long length; } StringDescriptor;StringDescriptor413,14832
static const StringDescriptor CommandString[415,14903
#define GOT_ALL_RADIO_INFO(GOT_ALL_RADIO_INFO425,15264
static const char            hextable[430,15448
static const MetricomAddress zero_address;432,15518
static const MetricomAddress broadcast_address 433,15561
static const MetricomKey     SIP0Key 435,15650
static const MetricomKey     ARP0Key 436,15715
static const MetricomKey     ATR_Key 437,15780
static const MetricomKey     ACK_Key 438,15845
static const MetricomKey     INF_Key 439,15910
static const MetricomKey     ERR_Key 440,15975
static const long            MaxARPInterval 442,16041
static const unsigned short  MAX_SEND_MTU 452,16582
static const unsigned short  MAX_RECV_MTU 453,16641
static const unsigned short  DEFAULT_STRIP_MTU 454,16755
static const int             STRIP_MAGIC 455,16815
static const long            LongTime 456,16877
static struct strip *struct_strip_list 462,17050
#define has_prefix(has_prefix469,17245
#define text_equal(text_equal472,17392
#define READHEX(READHEX474,17477
#define READHEX16(READHEX16478,17658
#define READDEC(READDEC480,17702
#define MIN(MIN482,17759
#define MAX(MAX483,17801
#define ELEMENTS_OF(ELEMENTS_OF484,17843
#define ARRAY_END(ARRAY_END485,17895
#define JIFFIE_TO_SEC(JIFFIE_TO_SEC487,17942
typedef unsigned long InterruptStatus;InterruptStatus493,18085
extern __inline__ InterruptStatus DisableInterrupts(495,18125
extern __inline__ void RestoreInterrupts(503,18256
static int arp_query(508,18343
static void DumpData(526,18732
static void HexDump(566,19497
} StuffingCode;StuffingCode611,20792
#define StuffData_FinishBlock(StuffData_FinishBlock626,21591
static __u8 *StuffData(629,21680
static __u8 *UnStuffData(783,27502
static unsigned int get_baud(868,30201
static void set_baud(888,31083
#define IS_RADIO_ADDRESS(IS_RADIO_ADDRESS900,31453
static int string_to_radio_address(905,31774
static __u8 *radio_address_to_string(921,32205
static int allocate_buffers(933,32624
static void strip_changedmtu(963,33571
static void strip_unlock(1031,35696
shift_buffer(1056,36642
calc_start_len(1089,37573
static char *time_delta(1123,38650
static int sprintf_neighbours(1132,38908
sprintf_status_info(1162,40016
static int get_status_info(1253,44709
static const char proc_strip_status_name[1272,45391
static struct proc_dir_entry proc_strip_get_status_info 1275,45468
static void ResetRadio(1294,46260
static void strip_write_some_more(1371,49230
static __u8 *add_checksum(1412,51045
static unsigned char *strip_make_packet(1424,51363
static void strip_send(1507,54234
static int strip_xmit(1639,59596
static void strip_IdleTask(1694,61716
static int strip_header(1710,62267
static int strip_rebuild_header(1738,63308
static int strip_receive_room(1755,63774
static void get_radio_version(1764,64025
static void get_radio_voltage(1808,65306
static void get_radio_neighbours(1826,65786
static int get_radio_address(1841,66333
static int verify_checksum(1862,67134
static void RecvErr(1877,67716
static void RecvErr_Message(1885,67945
static void process_AT_response(1985,71662
static void process_ACK(2011,72788
static void process_Info(2016,72931
static struct device *get_strip_dev(2021,73069
static void deliver_packet(2050,74151
static void process_IP_packet(2081,75294
static void process_ARP_packet(2124,76415
static void process_text_message(2178,78090
static void process_message(2207,79473
#define TTYERROR(TTYERROR2311,83313
strip_receive_buf(2324,83855
static int set_mac_address(2398,86652
static int dev_set_mac_address(2413,87316
static struct enet_statistics *strip_get_stats(2422,87630
static int strip_open_low(2467,89149
static int strip_close_low(2508,90197
static int strip_dev_init(2545,91008
static void strip_free(2589,92315
static struct strip *strip_alloc(2602,92597
static int strip_open(2668,94410
static void strip_close(2737,96148
static int strip_ioctl(2765,96843
int strip_init_ctrl_dev(2820,98190
int init_module(2876,99736
void cleanup_module(2881,99798

drivers/net/3c503.c,802
static const char *version 33,1182
#define WRD_COUNT 53,1636
static unsigned int netcard_portlist[60,1852
static unsigned int netcard_portlist[] __initdata 60,1852
#define EL2_IO_EXTENT	63,1960
struct netdev_entry el2_drv 68,2121
struct netdev_entry el2pio_drv 70,2191
__initfunc(93,3085
__initfunc(128,4076
__initfunc(154,4751
#define EL2_MEMSIZE 246,7998
el2_open(337,10858
el2_close(373,11766
el2_reset_8390(389,12123
el2_init_card(405,12677
el2_block_output(437,13864
el2_get_8390_hdr(510,16097
el2_block_input(549,17218
#define MAX_EL2_CARDS	624,19562
#define NAMELEN 625,19627
static char namelist[627,19685
static struct device dev_el2[628,19741
static int io[637,19894
static int irq[638,19933
static int xcvr[639,19974
init_module(647,20367
cleanup_module(677,21178

drivers/net/tlan.c,1999
typedef u32 (TLanIntVectorFunc)TLanIntVectorFunc49,1285
static	struct device	*TLanDevices 54,1359
static	int		TLanDevicesInstalled 55,1401
static	int		aui 57,1440
static	int		sa_int 58,1461
static	int		duplex 59,1485
static	int		speed 60,1509
static  int		debug 65,1542
static	int		bbuf 66,1566
static	u8		*TLanPadBuffer;67,1588
static	char		TLanSignature[68,1615
static	int		TLanVersionMajor 69,1654
static	int		TLanVersionMinor 70,1688
static	TLanAdapterEntry TLanAdapterList[73,1724
static TLanIntVectorFunc *TLanIntVector[215,5903
TLan_SetTimer(227,6161
extern int init_module(275,7470
extern void cleanup_module(377,9898
extern int tlan_probe(420,10855
int TLan_PciProbe(528,13566
int TLan_Init(612,15650
int TLan_Open(700,17885
int TLan_StartTx(760,19694
void TLan_HandleInterrupt(859,22534
int TLan_Close(910,23684
struct net_device_stats *TLan_GetStats(949,24625
void TLan_SetMulticastList(997,26137
u32 TLan_HandleInvalid(1071,28405
u32 TLan_HandleTxEOF(1104,29332
u32 TLan_HandleStatOverflow(1177,31420
u32 TLan_HandleRxEOF(1214,32527
u32 TLan_HandleDummy(1338,36131
u32 TLan_HandleTxEOC(1369,36918
u32 TLan_HandleStatusCheck(1414,38198
u32 TLan_HandleRxEOC(1488,40511
void TLan_Timer(1549,42516
void TLan_ResetLists(1623,44376
void TLan_FreeLists(1678,45900
void TLan_PrintDio(1724,46889
void TLan_PrintList(1759,47762
void TLan_ReadAndClearStats(1795,48915
TLan_ResetAdapter(1871,51579
TLan_FinishReset(1952,53726
void TLan_SetMac(2038,56459
void TLan_PhyPrint(2080,57533
void TLan_PhyDetect(2129,59111
void TLan_PhyPowerDown(2176,60288
void TLan_PhyPowerUp(2201,61079
void TLan_PhyReset(2222,61620
void TLan_PhyStartLink(2250,62337
void TLan_PhyFinishAutoNeg(2331,64656
int TLan_MiiReadReg(2426,67653
void TLan_MiiSendData(2516,69927
void TLan_MiiSync(2558,70899
void TLan_MiiWriteReg(2597,71912
void TLan_EeSendStart(2667,73900
int TLan_EeSendByte(2707,75001
void TLan_EeReceiveByte(2768,76706
int TLan_EeReadByte(2826,78374

drivers/net/smc-ultra.c,1024
static const char *version 48,1687
static unsigned int ultra_portlist[66,2129
static unsigned int ultra_portlist[] __initdata 66,2129
#define START_PG	89,3115
#define ULTRA_CMDREG	91,3169
#define	 ULTRA_RESET	92,3232
#define	 ULTRA_MEMENB	93,3294
#define IOPD	94,3353
#define IOPA	95,3419
#define ULTRA_NIC_OFFSET 96,3481
#define ULTRA_IO_EXTENT 97,3556
#define EN0_ERWCNT	98,3583
struct netdev_entry ultra_drv 105,3811
__initfunc(109,3912
__initfunc(131,4400
ultra_open(253,7918
ultra_reset_8390(284,8982
ultra_get_8390_hdr(308,9754
ultra_block_input(326,10390
ultra_block_output(348,11111
static void ultra_pio_get_hdr(369,11964
static void ultra_pio_input(378,12287
static void ultra_pio_output(391,12779
ultra_close_card(402,13158
#define MAX_ULTRA_CARDS	427,13618
#define NAMELEN	428,13687
static char namelist[429,13745
static struct device dev_ultra[430,13803
static int io[439,13960
static int irq[440,14001
EXPORT_NO_SYMBOLS;445,14167
init_module(450,14330
cleanup_module(476,15043

drivers/net/3c503.h,1254
#define EL2H 6,215
#define EL2L 7,253
#define OLD_3COM_ID	12,406
#define NEW_3COM_ID	13,435
#define EL2_MB0_START_PG	20,749
#define EL2_MB1_START_PG	21,818
#define EL2_MB1_STOP_PG	22,877
#define E33G_STARTPG	25,971
#define E33G_STOPPG	26,1040
#define E33G_DRQCNT	27,1108
#define E33G_IOBASE	28,1159
#define E33G_ROMBASE	30,1287
#define E33G_GACFR	31,1352
#define E33G_CNTRL	32,1420
#define E33G_STATUS	33,1484
#define E33G_IDCFR	34,1542
#define E33G_DMAAH	36,1655
#define E33G_DMAAL	37,1718
#define E33G_VP2	40,1905
#define E33G_VP1	41,1932
#define E33G_VP0	42,1959
#define E33G_FIFOH	43,1986
#define E33G_FIFOL	44,2051
#define ECNTRL_RESET	48,2146
#define ECNTRL_THIN	49,2216
#define ECNTRL_AUI	50,2282
#define ECNTRL_SAPROM	51,2347
#define ECNTRL_DBLBFR	52,2411
#define ECNTRL_OUTPUT	53,2469
#define ECNTRL_INPUT	54,2531
#define ECNTRL_START	55,2592
#define ESTAT_DPRDY	59,2684
#define ESTAT_UFLW	60,2743
#define ESTAT_OFLW	61,2812
#define ESTAT_DTC	62,2881
#define ESTAT_DIP	63,2949
#define EGACFR_NIM	67,3033
#define EGACFR_TCM	68,3084
#define EGACFR_RSEL	69,3147
#define EGACFR_MBS2	70,3219
#define EGACFR_MBS1	71,3279
#define EGACFR_MBS0	72,3339
#define EGACFR_NORM	74,3400
#define EGACFR_IRQOFF	75,3451

drivers/net/eexpress.c,2017
#define NET_DEBUG 111,4094
#define EEXP_IO_EXTENT 116,4145
struct net_localnet_local122,4210
static unsigned short start_code[150,5273
#define CONF_LINK 165,5825
#define CONF_PROMISC 178,6359
#define CONF_HWADDR 185,6640
#define CONF_NR_MULTICAST 190,6798
#define CONF_MULTICAST 192,6890
#define CONF_DIAG_RESULT 202,7140
#define CONF_TDR_RESULT 208,7277
static char irqrmap[216,7470
static char *eexp_ifmap[251,8641
enum eexp_iftype eexp_iftype252,8691
enum eexp_iftype {AUI=252,8691
enum eexp_iftype {AUI=0, BNC=252,8691
enum eexp_iftype {AUI=0, BNC=1, TPE=252,8691
#define STARTED_RU 254,8732
#define STARTED_CU 255,8758
static inline unsigned short scb_status(261,8833
static inline unsigned short scb_rdcmd(266,8936
static inline void scb_command(271,9038
static inline void scb_wrcbl(276,9151
static inline void scb_wrrfa(281,9262
static inline void set_loopback(286,9373
static inline void clear_loopback(291,9496
static inline short int SHADOW(296,9622
__initfunc(311,9824
static int eexp_open(342,10443
static int eexp_close(383,11445
static struct net_device_stats *eexp_stats(409,11914
static void unstick_cu(421,12180
static int eexp_xmit(502,14252
static unsigned short eexp_start_irq(565,15848
static void eexp_cmd_clear(623,17775
static void eexp_irq(632,17994
static void eexp_hw_set_interface(740,20490
static void eexp_hw_rx_pio(761,20960
static void eexp_hw_tx_pio(856,23388
__initfunc(920,25266
__initfunc(1043,28498
static unsigned short eexp_hw_lasttxstat(1093,29681
static void eexp_hw_txrestart(1164,31463
static void eexp_hw_txinit(1210,32734
static void eexp_hw_rxinit(1252,33931
static void eexp_hw_init586(1311,35651
static void eexp_setup_filter(1434,38535
eexp_set_multicast(1471,39657
#define EEXP_MAX_CARDS 1518,41218
#define NAMELEN 1519,41287
static char namelist[1521,41361
static struct device dev_eexp[1523,41419
static int irq[1529,41582
static int io[1530,41622
int init_module(1539,41976
void cleanup_module(1562,42581

drivers/net/skeleton.c,963
static const char *version 24,827
static const char* cardname 69,2136
static unsigned int netcard_portlist[74,2299
static unsigned int netcard_portlist[] __initdata 74,2299
#define NET_DEBUG 79,2489
static unsigned int net_debug 81,2516
#define NETCARD_IO_EXTENT	84,2617
struct net_local net_local87,2702
#define SA_ADDR0 93,2881
#define SA_ADDR1 94,2903
#define SA_ADDR2 95,2925
#define tx_done(tx_done111,3532
struct netdev_entry netcard_drv 127,4097
__initfunc(130,4202
__initfunc(158,4918
net_open(309,9185
static int net_send_packet(343,9944
static void net_interrupt(390,11326
net_rx(428,12189
net_close(483,13566
static struct net_device_stats *net_get_stats(515,14137
set_multicast_list(536,14716
static char devicename[564,15263
static struct device this_device 565,15299
static int io 571,15482
static int irq 572,15505
static int dma 573,15525
static int mem 574,15545
int init_module(576,15566
cleanup_module(597,15986

drivers/net/ipddp.c,651
static const char *version 26,1042
static struct ipddp_route *ipddp_route_list 63,1920
static int ipddp_mode 66,1999
static int ipddp_mode 68,2042
#define IPDDP_DEBUG 73,2188
static unsigned int ipddp_debug 75,2217
static int ipddp_open(86,2693
static int ipddp_close(95,2807
int ipddp_init(104,2922
static struct net_device_stats *ipddp_get_stats(152,4458
static int ipddp_xmit(160,4640
static int ipddp_create(232,6799
static int ipddp_delete(261,7479
static struct ipddp_route* ipddp_find_route(285,8121
static int ipddp_ioctl(300,8512
static struct device dev_ipddp=327,9271
int init_module(337,9457
void cleanup_module(351,9667

drivers/net/atp.h,2560
struct net_local net_local5,74
struct rx_header rx_header18,338
#define PAR_DATA	25,558
#define PAR_STATUS	26,577
#define PAR_CONTROL 27,598
#define Ctrl_LNibRead	29,621
#define Ctrl_HNibRead	30,665
#define Ctrl_LNibWrite	31,689
#define Ctrl_HNibWrite	32,734
#define Ctrl_SelData	33,759
#define Ctrl_IRQEN	34,801
#define EOW	36,842
#define EOC	37,859
#define WrAddr	38,876
#define RdAddr	39,944
#define HNib	40,964
enum page0_regspage0_regs42,983
	PAR0 45,1076
	PAR0 = 0, PAR1 45,1076
	PAR0 = 0, PAR1 = 1, PAR2 45,1076
	PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 45,1076
	PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 45,1076
	PAR0 = 0, PAR1 = 1, PAR2 = 2, PAR3 = 3, PAR4 = 4, PAR5 45,1076
	TxCNT0 46,1137
	TxCNT0 = 6, TxCNT1 46,1137
	TxSTAT 47,1194
	TxSTAT = 8, RxSTAT 47,1194
	ISR 48,1244
	ISR = 10, IMR 48,1244
	CMR1 49,1299
	CMR2 50,1339
	MAR 51,1379
	CMR2_h 52,1423
	CMR2_h = 0x1d,52,1423
enum eepage_regseepage_regs55,1444
{ PROM_CMD 56,1461
{ PROM_CMD = 6, PROM_DATA 56,1461
#define ISR_TxOK	59,1544
#define ISR_RxOK	60,1566
#define ISR_TxErr	61,1588
#define ISRh_RxErr	62,1611
#define CMR1h_RESET	64,1659
#define CMR1h_RxENABLE	65,1697
#define CMR1h_TxENABLE	66,1748
#define CMR1h_TxRxOFF	67,1799
#define CMR1_ReXmit	68,1826
#define CMR1_Xmit	69,1879
#define	CMR1_IRQ	70,1928
#define	CMR1_BufEnb	71,1974
#define	CMR1_NextPkt	72,2027
#define CMR2_NULL	74,2082
#define CMR2_IRQOUT	75,2102
#define CMR2_RAMTEST	76,2124
#define CMR2_EEPROM	77,2148
#define CMR2h_OFF	79,2217
#define CMR2h_Physical	80,2259
#define CMR2h_Normal	81,2328
#define CMR2h_PROMISC	82,2396
extern inline unsigned char inbyte(87,2571
extern inline unsigned char read_nibble(97,2814
extern inline unsigned char read_byte_mode0(112,3286
extern inline unsigned char read_byte_mode2(127,3823
extern inline unsigned char read_byte_mode4(141,4260
extern inline unsigned char read_byte_mode6(153,4632
extern inline void write_reg(165,4984
extern inline void write_reg_high(183,5433
extern inline void write_reg_byte(203,6022
extern inline void write_byte_mode0(229,6937
extern inline void write_byte_mode1(235,7098
extern inline void write_word_mode0(245,7454
#define EE_SHIFT_CLK	257,7776
#define EE_CS	258,7828
#define EE_CLK_HIGH	259,7874
#define EE_CLK_LOW	260,7899
#define EE_DATA_WRITE	261,7923
#define EE_DATA_READ	262,7977
#define eeprom_delay(eeprom_delay265,8078
#define EE_WRITE_CMD(EE_WRITE_CMD269,8236
#define EE_READ(EE_READ270,8295
#define EE_ERASE(EE_ERASE271,8350
#define EE_CMD_SIZE	272,8405

drivers/net/3c507.c,2363
static const char *version 26,945
#define NET_DEBUG 67,2042
static unsigned int net_debug 69,2069
static unsigned int netcard_portlist[72,2180
static unsigned int netcard_portlist[] __initdata 72,2180
#define	 CUC_START	90,2787
#define	 CUC_RESUME	91,2814
#define	 CUC_SUSPEND 92,2842
#define	 RX_START	93,2870
#define	 RX_RESUME	94,2896
#define	 RX_SUSPEND	95,2923
#define CMD_EOL	109,3501
#define CMD_SUSP	110,3569
#define CMD_INTR	111,3626
enum commands commands113,3686
	CmdNOp 114,3702
	CmdNOp = 0, CmdSASetup 114,3702
	CmdNOp = 0, CmdSASetup = 1, CmdConfigure 114,3702
	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList 114,3702
	CmdTx 115,3771
	CmdTx = 4, CmdTDR 115,3771
	CmdTx = 4, CmdTDR = 5, CmdDump 115,3771
	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose 115,3771
struct net_local net_local118,3882
#define	SA_DATA	136,4318
#define MISC_CTRL	137,4384
#define RESET_IRQ	138,4457
#define SIGNAL_CA	139,4512
#define ROM_CONFIG	140,4578
#define MEM_CONFIG	141,4600
#define IRQ_CONFIG	142,4622
#define EL16_IO_EXTENT 143,4644
#define ID_PORT	146,4735
#define iSCB_STATUS	149,4808
#define iSCB_CMD	150,4832
#define iSCB_CBL	151,4854
#define iSCB_RFA	152,4904
#define SCB_BASE	163,5442
#define CONFIG_CMD	181,6125
#define SET_SA_CMD	182,6151
#define SA_OFFSET	183,6177
#define IDLELOOP	184,6202
#define TDR_CMD	185,6224
#define TDR_TIME	186,6246
#define DUMP_CMD	187,6268
#define DIAG_CMD	188,6290
#define SET_MC_CMD	189,6312
#define DUMP_DATA	190,6336
#define TX_BUF_START	192,6410
#define NUM_TX_BUFS 193,6438
#define TX_BUF_SIZE 194,6461
#define RX_BUF_START	196,6523
#define RX_BUF_SIZE 197,6551
#define RX_BUF_END	198,6609
static unsigned short init_words[233,8170
struct netdev_entry netcard_drv 294,10406
__initfunc(305,10790
__initfunc(326,11271
static int el16_open(432,13962
static int el16_send_packet(446,14168
static void el16_interrupt(505,16039
static int el16_close(605,18889
static struct net_device_stats *el16_get_stats(631,19476
static void init_rx_bufs(641,19730
static void init_82586_mem(684,21278
static void hardware_send_packet(742,23042
static void el16_rx(787,24718
static char devicename[857,26924
static struct device dev_3c507 858,26960
static int io 865,27121
static int irq 866,27144
int init_module(870,27210
cleanup_module(884,27507

drivers/net/at1700.c,2012
static const char *version 37,1298
#define MC_FILTERBREAK 69,2064
static int fmv18x_probe_list[73,2167
static int at1700_probe_list[81,2280
static int at1700_ioaddr_pattern[89,2411
static int at1700_mca_probe_list[93,2502
static int at1700_irq_pattern[97,2611
#define NET_DEBUG 105,2840
static unsigned int net_debug 107,2867
typedef unsigned char uchar;uchar109,2911
struct net_local net_local112,2996
#define STATUS	127,3527
#define TX_STATUS	128,3546
#define RX_STATUS	129,3567
#define TX_INTR	130,3588
#define RX_INTR	131,3654
#define TX_MODE	132,3674
#define RX_MODE	133,3694
#define CONFIG_0	134,3714
#define CONFIG_1	135,3771
#define DATAPORT	137,3835
#define TX_START	138,3904
#define COL16CNTL	139,3925
#define MODE13	140,3985
#define EEPROM_Ctrl 142,4062
#define EEPROM_Data 143,4086
#define CARDSTATUS	144,4110
#define CARDSTATUS1	145,4160
#define IOCONFIG	146,4211
#define IOCONFIG1	147,4280
#define	SAPROM	148,4302
#define RESET	149,4369
#define AT1700_IO_EXTENT	150,4434
struct at1720_mca_adapters_struct at1720_mca_adapters_struct167,5063
struct at1720_mca_adapters_struct at1720_mca_adapters[173,5181
struct netdev_entry at1700_drv 191,5793
int at1700_probe(195,5897
int at1700_probe1(224,6785
#define EE_SHIFT_CLK	452,13245
#define EE_CS	453,13309
#define EE_DATA_WRITE	454,13368
#define EE_DATA_READ	455,13434
#define eeprom_delay(eeprom_delay458,13547
#define EE_WRITE_CMD	461,13649
#define EE_READ_CMD	462,13679
#define EE_ERASE_CMD	463,13709
static int read_eeprom(465,13740
static int net_open(501,14605
net_send_packet(538,15423
net_interrupt(616,18042
net_rx(684,20003
static int net_close(765,22256
net_get_stats(797,23014
static unsigned const ethernet_polynomial_le 810,23381
static inline unsigned ether_crc_le(811,23441
set_rx_mode(829,23838
static char devicename[877,25387
static struct device dev_at1700 878,25423
static int io 884,25587
static int irq 885,25610
int init_module(891,25706
cleanup_module(905,26008

drivers/net/net_init.c,1028
#define MAX_ETH_CARDS 64,2344
static struct device *ethdev_index[65,2369
init_etherdev(79,2804
static int eth_mac_addr(138,4282
static int eth_change_mtu(147,4463
static int fddi_change_mtu(157,4638
#define MAX_HIP_CARDS	168,4850
static struct device *hipdev_index[169,4874
static int hippi_change_mtu(171,4926
static int hippi_mac_addr(187,5276
struct device *init_hippi_dev(197,5463
static int hippi_neigh_setup_dev(255,6881
void ether_setup(271,7255
void fddi_setup(314,8438
void hippi_setup(344,9203
static int ltalk_change_mtu(394,10523
static int ltalk_mac_addr(399,10602
void ltalk_setup(405,10684
int ether_config(431,11275
static int etherdev_get_index(448,11726
static void etherdev_put_index(463,12023
int register_netdev(474,12202
void unregister_netdev(494,12512
#define MAX_TR_CARDS 505,12710
static struct device *trdev_index[506,12734
struct device *init_trdev(508,12784
void tr_setup(575,14495
void tr_freedev(593,14893
int register_trdev(606,15059
void unregister_trdev(617,15224

drivers/net/depca.h,2702
#define DEPCA_NICSR 13,306
#define DEPCA_RBI 14,368
#define DEPCA_DATA 15,442
#define DEPCA_ADDR 16,509
#define DEPCA_HBASE 17,579
#define DEPCA_PROM 18,654
#define DEPCA_CNFG 19,725
#define DEPCA_RBSA 20,789
#define CSR0 25,936
#define CSR1 26,957
#define CSR2 27,978
#define CSR3 28,999
#define TO 34,1081
#define SHE 35,1137
#define BS 36,1190
#define BUF 37,1234
#define RBE 38,1294
#define AAC 39,1358
#define _128KB 40,1430
#define IM 41,1495
#define IEN 42,1551
#define LED 43,1620
#define ERR 49,1729
#define BABL 50,1774
#define CERR 51,1839
#define MISS 52,1886
#define MERR 53,1931
#define RINT 54,1975
#define TINT 55,2025
#define IDON 56,2075
#define INTR 57,2126
#define INEA 58,2172
#define RXON 59,2220
#define TXON 60,2263
#define TDMD 61,2309
#define STOP 62,2356
#define STRT 63,2392
#define INIT 64,2429
#define INTM 65,2471
#define INTE 66,2524
#define BSWP 72,2627
#define ACON 73,2667
#define BCON 74,2709
#define PROM 80,2799
#define EMBA 81,2850
#define INTL 82,2918
#define DRTY 83,2970
#define COLL 84,3018
#define DTCR 85,3068
#define LOOP 86,3123
#define DTX 87,3166
#define DRX 88,3224
#define R_OWN 94,3344
#define R_ERR 95,3412
#define R_FRAM 96,3459
#define R_OFLO 97,3506
#define R_CRC 98,3554
#define R_BUFF 99,3597
#define R_STP 100,3643
#define R_ENP 101,3692
#define T_OWN 107,3805
#define T_ERR 108,3873
#define T_ADD_FCS 109,3920
#define T_MORE 110,3985
#define T_ONE 111,4045
#define T_DEF 112,4114
#define T_STP 113,4156
#define T_ENP 114,4210
#define T_FLAGS 115,4261
#define TMD3_BUFF 121,4379
#define TMD3_UFLO 122,4426
#define TMD3_RES 123,4476
#define TMD3_LCOL 124,4519
#define TMD3_LCAR 125,4568
#define TMD3_RTRY 126,4618
#define TIMEOUT 132,4729
#define REMOTE 133,4788
#define IRQ11 134,4847
#define IRQ10 135,4894
#define IRQ9 136,4937
#define IRQ5 137,4979
#define BUFF 138,5024
#define PADR16 139,5081
#define PADR17 140,5133
#define HASH_TABLE_LEN 145,5211
#define HASH_BITS 146,5260
#define MASK_INTERRUPTS 148,5315
#define UNMASK_INTERRUPTS 149,5343
#define EISA_EN 151,5372
#define EISA_ID 152,5440
#define EISA_CTRL 153,5511
#define	DEPCAIOCTL	160,5644
struct depca_ioctl depca_ioctl162,5679
#define DEPCA_GET_HWADDR	171,5944
#define DEPCA_SET_HWADDR	172,6005
#define DEPCA_SET_PROM 173,6066
#define DEPCA_CLR_PROM 174,6123
#define DEPCA_SAY_BOO	175,6182
#define DEPCA_GET_MCA 176,6257
#define DEPCA_SET_MCA 177,6317
#define DEPCA_CLR_MCA 178,6377
#define DEPCA_MCA_EN 179,6440
#define DEPCA_GET_STATS 180,6509
#define DEPCA_CLR_STATS 181,6572
#define DEPCA_GET_REG 182,6639
#define DEPCA_SET_REG 183,6701
#define DEPCA_DUMP 184,6763

drivers/net/depca.c,3123
static const char *version 228,11247
static int depca_debug 264,12011
static int depca_debug 266,12055
#define DEPCA_NDA 269,12091
#define PROBE_LENGTH 274,12183
#define ETH_PROM_SIG 275,12210
#define NUM_RX_DESC 284,12530
#define NUM_TX_DESC 285,12601
#define RX_BUFF_SZ	286,12672
#define TX_BUFF_SZ	287,12744
#define CRC_POLYNOMIAL_BE 289,12817
#define CRC_POLYNOMIAL_LE 290,12888
#define DEPCA_EISA_IO_PORTS 295,12989
#define MAX_EISA_SLOTS 296,13066
#define EISA_SLOT_INC 297,13092
#define DEPCA_RAM_BASE_ADDRESSES 302,13147
#define DEPCA_IO_PORTS 303,13214
#define DEPCA_TOTAL_SIZE 304,13255
static short mem_chkd 305,13285
#define DE212_ID 310,13374
#define DEPCA_SIGNATURE 315,13433
  DEPCA,322,13641
  DEPCA, de100,322,13641
  DEPCA, de100, de101,322,13641
  DEPCA, de100, de101, de200,322,13641
  DEPCA, de100, de101, de200, de201,322,13641
  DEPCA, de100, de101, de200, de201, de202,322,13641
  DEPCA, de100, de101, de200, de201, de202, de210,322,13641
  DEPCA, de100, de101, de200, de201, de202, de210, de212,322,13641
  DEPCA, de100, de101, de200, de201, de202, de210, de212, de422,322,13641
  DEPCA, de100, de101, de200, de201, de202, de210, de212, de422, unknown322,13641
} adapter;323,13714
#define DEPCA_STRLEN 328,13757
#define MAX_NUM_DEPCAS 329,13781
#define ALIGN4 337,14078
#define ALIGN8 338,14143
#define ALIGN 339,14219
struct depca_rx_desc depca_rx_desc344,14340
struct depca_tx_desc depca_tx_desc350,14509
#define LA_MASK 356,14688
struct depca_init depca_init362,14889
#define DEPCA_PKT_STAT_SZ 370,15221
#define DEPCA_PKT_BIN_SZ 371,15250
struct depca_private depca_private373,15403
#define TX_BUFFS_AVAIL 410,17376
static int    autoprobed 454,19226
static u_char de1xx_irq[456,19283
static u_char de1xx_irq[] __initdata 456,19283
static u_char de2xx_irq[457,19339
static u_char de2xx_irq[] __initdata 457,19339
static u_char de422_irq[458,19396
static u_char de422_irq[] __initdata 458,19396
static u_char *depca_irq;459,19450
static int    autoprobed 460,19476
static char   name[463,19547
static int    num_depcas 464,19581
static int    mem=465,19624
static char   *adapter_name 467,19778
#define STOP_DEPCA 473,19946
__initfunc(479,20027
__initfunc(513,20913
depca_open(726,27166
depca_init_ring(777,28306
depca_start_xmit(820,29640
depca_interrupt(878,31017
depca_rx(929,32342
depca_tx(1029,35536
depca_close(1067,36684
static void LoadCSRs(1108,37424
static int InitRestartDepca(1125,37998
depca_get_stats(1157,39046
set_multicast_list(1170,39311
static void SetMulticastFilter(1202,40424
__initfunc(1251,42065
__initfunc(1400,45793
__initfunc(1439,46941
__initfunc(1486,48356
__initfunc(1531,49490
__initfunc(1557,50265
__initfunc(1577,50631
__initfunc(1630,52355
__initfunc(1683,53562
static int load_packet(1715,54275
__initfunc(1772,56786
static void depca_dbg_open(1804,57496
static int depca_ioctl(1883,60201
static char devicename[2017,65310
static struct device thisDepca 2018,65344
static int irq=2025,65542
static int io=2026,65605
init_module(2032,65785
cleanup_module(2044,65931

drivers/net/loopback.c,172
#define LOOPBACK_MTU	55,1854
static int loopback_xmit(61,1998
static struct net_device_stats *get_stats(105,2909
static int loopback_open(110,3022
__initfunc(117,3160

drivers/net/sk_g16.c,2376
static const char *rcsid 24,682
#define SK_NAME 84,2662
#define SK_BOOT_ROM 110,3338
#define SK_ADDR 112,3403
#define POS_ADDR 120,3609
#define SK_IO_PORTS 137,4141
#define SK_IRQS 139,4228
#define SK_BOOT_ROM_LOCATIONS 141,4272
#define SK_BOOT_ROM_ID 143,4381
#define SK_POS_SIZE 157,4710
#define SK_POS0 159,4780
#define SK_POS1 160,4834
#define SK_POS2 161,4889
#define SK_POS3 162,4962
#define SK_POS4 163,5020
#define SK_MAC0 177,5262
#define SK_MAC1 178,5291
#define SK_MAC2 179,5320
#define SK_IDLOW 191,5489
#define SK_IDHIGH 192,5513
#define SK_ROM_RAM_ON 200,5606
#define SK_ROM_RAM_OFF 201,5641
#define SK_ROM_ON 202,5677
#define SK_ROM_OFF 203,5727
#define SK_RAM_ON 204,5778
#define SK_RAM_OFF 205,5828
#define POS2_CARD 207,5881
#define POS2_EPROM 208,5953
#define SK_IOREG 216,6107
#define SK_PORT 217,6179
#define SK_IOCOM 218,6250
#define SK_IORUN 231,6562
#define SK_IRQ 237,6705
#define SK_RESET 239,6741
#define SK_RW 240,6814
#define SK_ADR 241,6878
#define SK_RREG 244,6958
#define SK_WREG 245,7032
#define SK_RAP 246,7105
#define SK_RDATA 247,7167
#define SK_DOIO 259,7404
#define CSR0 279,7976
#define CSR1 280,8008
#define CSR2 281,8039
#define CSR3 282,8069
#define LC_LOG_TX_BUFFERS 297,8448
#define LC_LOG_RX_BUFFERS 298,8527
#define TMDNUM 302,8635
#define RMDNUM 303,8711
#define TMDNUMMASK 307,8849
#define RMDNUMMASK 308,8894
#define PKT_BUF_SZ 314,9001
#define ETHERCARD_TOTAL_SIZE 320,9104
#define PRINTK(PRINTK354,10133
#define PRINTK(PRINTK356,10166
#define PRINTK2(PRINTK2360,10214
#define PRINTK2(PRINTK2362,10248
} SK_RAM;SK_RAM407,11960
struct SK_ramSK_ram423,12370
struct privpriv437,12652
static SK_RAM *board;456,13397
__initfunc(534,15677
__initfunc(617,18069
static int SK_open(843,24905
static int SK_lance_init(1006,29156
static int SK_send_packet(1174,34011
static void SK_interrupt(1278,36665
static void SK_txintr(1353,38521
static void SK_rxintr(1473,41975
static int SK_close(1622,46015
static struct net_device_stats *SK_get_stats(1659,47033
static void set_multicast_list(1700,48388
__initfunc(1740,49315
void SK_reset_board(1811,50792
void SK_set_RAP(1836,51487
int SK_read_reg(1862,52144
int SK_rread_reg(1893,52953
void SK_write_reg(1925,53835
void SK_print_pos(1960,54670
void SK_print_dev(1995,55563
void SK_print_ram(2038,56878

drivers/net/sk_g16.h,1412
#define SK_G16_H23,570
#define CSR0_ERR	33,726
#define CSR0_BABL	34,774
#define CSR0_CERR	35,843
#define CSR0_MISS	36,895
#define CSR0_MERR	37,945
#define CSR0_RINT	38,996
#define CSR0_TINT 39,1051
#define CSR0_IDON	40,1113
#define CSR0_INTR	41,1169
#define CSR0_INEA	42,1219
#define CSR0_RXON	43,1272
#define CSR0_TXON	44,1319
#define CSR0_TDMD	45,1370
#define CSR0_STOP	46,1422
#define CSR0_STRT	47,1464
#define CSR0_INIT	48,1506
#define CSR0_CLRALL 50,1554
#define CSR3_BSWAP	57,1691
#define CSR3_ACON	58,1738
#define CSR3_BCON	59,1787
#define MODE_PROM	65,1901
#define MODE_INTL	66,1949
#define MODE_DRTY	67,1999
#define MODE_COLL	68,2046
#define MODE_DTCR	69,2093
#define MODE_LOOP	70,2146
#define MODE_DTX	71,2186
#define MODE_DRX	72,2241
#define MODE_NORMAL 74,2294
#define RX_OWN	80,2415
#define RX_ERR	81,2472
#define RX_FRAM	82,2513
#define RX_OFLO	83,2555
#define RX_CRC	84,2598
#define RX_BUFF	85,2636
#define RX_STP	86,2677
#define RX_ENP	87,2720
#define TX_OWN	94,2826
#define TX_ERR	95,2883
#define TX_MORE	96,2927
#define TX_ONE	97,2987
#define TX_DEF	98,3039
#define TX_STP 99,3075
#define TX_ENP	100,3119
#define TX_BUFF 106,3220
#define TX_UFLO 107,3276
#define TX_LCOL 108,3331
#define TX_LCAR 109,3377
#define TX_RTRY 110,3424
#define TX_TDR 111,3488
struct init_block init_block120,3652
struct rmd rmd132,4019
struct tmd tmd150,4393

drivers/net/znet.c,1698
static const char *version 3,59
#define ZNET_DEBUG 84,3487
static unsigned int znet_debug 86,3515
#define DMA_RX_MODE	89,3608
#define DMA_TX_MODE	90,3675
#define dma_page_eq(dma_page_eq91,3742
#define DMA_BUF_SIZE 92,3813
#define RX_BUF_SIZE 93,3839
#define TX_BUF_SIZE 94,3864
#define CMD0_CHNL_0	97,3930
#define CMD0_CHNL_1	98,3957
#define CMD0_NOP 99,4012
#define CMD0_PORT_1	100,4043
#define CMD1_PORT_0	101,4075
#define CMD0_IA_SETUP	102,4097
#define CMD0_CONFIGURE	103,4122
#define CMD0_MULTICAST_LIST 104,4148
#define CMD0_TRANSMIT	105,4178
#define CMD0_DUMP	106,4203
#define CMD0_DIAGNOSE	107,4225
#define CMD0_Rx_ENABLE	108,4250
#define CMD0_Rx_DISABLE	109,4276
#define CMD0_Rx_STOP	110,4304
#define CMD0_RETRANSMIT	111,4329
#define CMD0_ABORT	112,4357
#define CMD0_RESET	113,4381
#define CMD0_ACK 115,4406
#define CMD0_STAT0 117,4429
#define CMD0_STAT1 118,4457
#define CMD0_STAT2 119,4485
#define CMD0_STAT3 120,4513
#define net_local 122,4542
struct znet_private znet_private123,4573
static struct znet_private zn;133,4887
static ushort dma_buffer1[134,4918
static ushort dma_buffer2[135,4961
static ushort dma_buffer3[136,5004
static unsigned char i593_init[144,5386
struct netidblk netidblk168,6553
static struct sigaction znet_sigaction 195,7645
__initfunc(203,7914
static int znet_open(286,10464
static int znet_send_packet(317,11559
static void	znet_interrupt(403,14419
static void znet_rx(468,16171
static int znet_close(592,20576
static struct net_device_stats *net_get_stats(620,21230
static void set_multicast_list(635,21736
void show_dma(666,22673
static void hardware_init(680,23075
static void update_stop_hit(734,24776

drivers/net/hp-plus.c,1743
static const char *version 21,718
static unsigned int hpplus_portlist[43,1256
static unsigned int hpplus_portlist[] __initdata 43,1256
#define HP_ID	71,2707
#define HP_PAGING	72,2762
#define HPP_OPTION	73,2831
#define HPP_OUT_ADDR	74,2896
#define HPP_IN_ADDR	75,2962
#define HP_DATAPORT	76,3028
#define NIC_OFFSET	77,3093
#define HP_IO_EXTENT	78,3155
#define HP_START_PG	80,3180
#define HP_STOP_PG	81,3236
enum PageName PageName84,3338
	Perf_Page 85,3354
	MAC_Page 86,3397
	HW_Page 87,3455
	LAN_Page 88,3513
	ID_Page 89,3574
enum HP_Option HP_Option92,3646
	NICReset 93,3663
	NICReset = 1, ChipReset 93,3663
	EnableIRQ 94,3728
	EnableIRQ = 4, FakeIntr 94,3728
	EnableIRQ = 4, FakeIntr = 8, BootROMEnb 94,3728
	EnableIRQ = 4, FakeIntr = 8, BootROMEnb = 0x10,94,3728
	EnableIRQ = 4, FakeIntr = 8, BootROMEnb = 0x10, IOEnb 94,3728
	EnableIRQ = 4, FakeIntr = 8, BootROMEnb = 0x10, IOEnb = 0x20,94,3728
	MemEnable 95,3791
	MemEnable = 0x40,95,3791
	MemEnable = 0x40, ZeroWait 95,3791
	MemEnable = 0x40, ZeroWait = 0x80,95,3791
	MemEnable = 0x40, ZeroWait = 0x80, MemDisable 95,3791
	MemEnable = 0x40, ZeroWait = 0x80, MemDisable = 0x1000,95,3791
struct netdev_entry hpplus_drv 122,4933
__initfunc(126,5028
__initfunc(149,5577
hpp_open(261,8748
hpp_close(290,9516
hpp_reset_8390(305,9819
hpp_io_get_8390_hdr(332,10631
hpp_io_block_input(343,10954
hpp_mem_get_8390_hdr(357,11356
hpp_mem_block_input(370,11829
hpp_io_block_output(390,12524
hpp_mem_block_output(400,12787
#define MAX_HPP_CARDS	416,13213
#define NAMELEN	417,13278
static char namelist[418,13336
static struct device dev_hpp[419,13392
static int io[428,13545
static int irq[429,13584
init_module(437,13887
cleanup_module(466,14647

drivers/net/ac3200.c,1213
static const char *version 22,770
#define AC_NIC_BASE	42,1208
#define AC_SA_PROM	43,1233
#define AC_ADDR0	44,1291
#define AC_ADDR1	45,1352
#define AC_ADDR2	46,1377
#define AC_ID_PORT	47,1399
#define AC_EISA_ID	48,1424
#define AC_RESET_PORT	49,1454
#define AC_RESET	50,1482
#define AC_ENABLE	51,1504
#define AC_CONFIG	52,1527
#define AC_IO_EXTENT 54,1582
static unsigned char config2irqmap[64,1856
static unsigned char config2irqmap[8] __initdata 64,1856
static int addrmap[65,1937
static const char *port_name[67,2040
#define config2irq(config2irq69,2118
#define config2mem(config2mem70,2186
#define config2name(config2name71,2241
#define AC_START_PG	74,2340
#define AC_STOP_PG	75,2401
__initfunc(98,3170
__initfunc(120,3646
static int ac_open(257,7780
static void ac_reset_8390(274,8064
ac_get_8390_hdr(293,8589
static void ac_block_input(302,8933
static void ac_block_output(319,9505
static int ac_close_card(327,9725
#define MAX_AC32_CARDS	349,10110
#define NAMELEN	350,10177
static char namelist[351,10235
static struct device dev_ac32[352,10292
static int io[361,10447
static int irq[362,10487
static int mem[363,10529
init_module(369,10754
cleanup_module(397,11488

drivers/net/wavelan.c,1797
wv_splhi(30,690
wv_splx(45,918
wv_irq_to_psa(55,1113
__initfunc(67,1341
wv_struct_check(86,1714
#define	SC(SC88,1738
hasr_read(115,2485
hacr_write(125,2707
hacr_write_slow(137,3002
set_chan_attn(150,3293
wv_hacr_reset(161,3558
wv_16_off(172,3839
wv_16_on(184,4106
wv_ints_off(196,4362
wv_ints_on(215,4738
psa_read(242,5295
psa_write(265,5764
psa_crc(305,6715
update_psa_checksum(333,7388
mmc_out(374,8583
mmc_write(392,9013
mmc_in(410,9352
mmc_read(431,9955
mmc_encr(448,10246
fee_wait(465,10669
fee_read(481,11136
fee_write(516,12176
obram_read(604,14854
obram_write(618,15146
wv_ack(632,15463
wv_synchronous_cmd(674,16450
wv_config_complete(723,17494
wv_complete(785,19447
wv_82586_reconfig(935,23244
wv_psa_show(964,24060
wv_mmc_show(1054,27389
wv_scb_show(1141,30438
wv_ru_show(1204,33496
wv_cu_show_one(1221,33900
wv_cu_show(1254,34571
wv_dev_show(1281,35207
wv_local_show(1298,35687
wv_packet_info(1321,36355
wv_init_info(1359,37608
wavelan_get_stats(1474,40222
wavelan_set_multicast_list(1492,40753
wavelan_set_mac_address(1569,42566
wv_set_frequency(1592,43128
wv_frequency_list(1786,48696
wl_spy_gather(1823,49788
wl_his_gather(1855,50894
wavelan_ioctl(1878,51486
wavelan_get_wireless_stats(2348,64576
wv_packet_read(2419,67060
wv_receive(2513,69781
wv_packet_write(2696,74918
wavelan_packet_xmit(2830,78525
wv_mmc_init(2895,80163
wv_ru_start(3065,85428
wv_cu_start(3159,88107
wv_82586_start(3261,90779
wv_82586_config(3392,94288
wv_82586_stop(3578,99927
wv_hw_reset(3613,100973
wv_check_ioaddr(3661,102092
wavelan_interrupt(3703,103337
wavelan_watchdog(3844,107184
wavelan_open(3936,109208
wavelan_close(3993,110390
__initfunc(4034,111263
__initfunc(4151,114227
init_module(4249,116736
cleanup_module(4322,118663

drivers/net/3c505.c,2168
static const char *filename 121,5869
static const char *timeout_msg 123,5910
#define TIMEOUT_MSG(TIMEOUT_MSG124,5983
static const char *invalid_pcb_msg 127,6067
#define INVALID_PCB_MSG(INVALID_PCB_MSG129,6158
static const char *search_msg 132,6253
static const char *stilllooking_msg 134,6337
static const char *found_msg 136,6396
static const char *notfound_msg 138,6440
static const char *couldnot_msg 140,6504
static const int elp_debug 149,6737
static const int elp_debug 151,6783
#define	TRUE	168,7181
#define	FALSE	172,7218
static const int addr_list[182,7455
static const int addr_list[] __initdata 182,7455
static inline int __get_order(187,7592
static unsigned long dma_mem_alloc(200,7776
static inline unsigned char inb_status(214,8087
static inline int inb_command(219,8193
static inline void outb_control(224,8291
#define HCR_VAL(HCR_VAL230,8455
static inline void outb_command(232,8516
static inline unsigned int inw_data(237,8634
static inline void outw_data(242,8735
static inline unsigned int backlog_next(247,8846
#define	GET_ASF(GET_ASF264,9266
static inline int get_status(267,9324
static inline void set_hsf(279,9632
inline static void adapter_reset(288,9825
static inline void check_3c505_dma(326,11080
static inline unsigned int send_pcb_slow(349,11765
static inline unsigned int send_pcb_fast(361,12095
static inline void prime_rx(374,12475
static int send_pcb(407,13455
static int receive_pcb(490,15393
static int start_receive(574,17603
static void receive_packet(602,18462
static void elp_interrupt(666,20100
static int elp_open(888,26527
static int send_packet(1025,29867
static int elp_start_xmit(1095,31814
static struct net_device_stats *elp_get_stats(1160,33312
static int elp_close(1197,34385
static void elp_set_mc_list(1250,35446
static inline void elp_init(1309,37460
__initfunc(1342,38309
__initfunc(1409,39841
__initfunc(1453,41201
#define NAMELEN 1655,47255
static char devicename[1656,47273
static struct device dev_3c505[1657,47330
static int io[1665,47489
static int irq[1666,47528
static int dma[1667,47568
int init_module(1672,47785
void cleanup_module(1701,48539

drivers/net/3c505.h,4185
#define ELP_DMA 7,186
#define ELP_RX_PCBS 8,210
#define ELP_MAX_CARDS 9,234
#define	PORT_COMMAND	14,290
#define	PORT_STATUS	15,340
#define	PORT_AUXDMA	16,388
#define	PORT_DATA	17,437
#define	PORT_CONTROL	18,485
#define ELP_IO_EXTENT	20,536
#define	ATTN	25,634
#define	FLSH	26,668
#define DMAE	27,712
#define DIR	28,747
#define	TCEN	29,780
#define	CMDE	30,836
#define	HSF2	31,894
#define	HSF1	32,937
#define	HSF_PCB_ACK	37,1043
#define	HSF_PCB_NAK	38,1068
#define	HSF_PCB_END	39,1093
#define	HSF_PCB_MASK	40,1125
#define	HRDY	45,1195
#define	HCRE	46,1239
#define	ACRF	47,1286
#define	DONE	49,1404
#define	ASF3	50,1437
#define	ASF2	51,1483
#define	ASF1	52,1529
#define	ASF_PCB_ACK	57,1635
#define	ASF_PCB_NAK	58,1660
#define	ASF_PCB_END	59,1685
#define	ASF_PCB_MASK	60,1717
#define	DMA_BRST	65,1788
#define	MAX_PCB_DATA	70,1877
#define	TIMEOUT	81,2199
  CMD_CONFIGURE_ADAPTER_MEMORY	93,2419
  CMD_CONFIGURE_ADAPTER_MEMORY	= 0x01,93,2419
  CMD_CONFIGURE_82586	94,2458
  CMD_CONFIGURE_82586		= 0x02,94,2458
  CMD_STATION_ADDRESS	95,2489
  CMD_STATION_ADDRESS		= 0x03,95,2489
  CMD_DMA_DOWNLOAD	96,2520
  CMD_DMA_DOWNLOAD		= 0x04,96,2520
  CMD_DMA_UPLOAD	97,2548
  CMD_DMA_UPLOAD		= 0x05,97,2548
  CMD_PIO_DOWNLOAD	98,2574
  CMD_PIO_DOWNLOAD		= 0x06,98,2574
  CMD_PIO_UPLOAD	99,2602
  CMD_PIO_UPLOAD		= 0x07,99,2602
  CMD_RECEIVE_PACKET	100,2628
  CMD_RECEIVE_PACKET		= 0x08,100,2628
  CMD_TRANSMIT_PACKET	101,2658
  CMD_TRANSMIT_PACKET		= 0x09,101,2658
  CMD_NETWORK_STATISTICS	102,2689
  CMD_NETWORK_STATISTICS	= 0x0a,102,2689
  CMD_LOAD_MULTICAST_LIST	103,2722
  CMD_LOAD_MULTICAST_LIST	= 0x0b,103,2722
  CMD_CLEAR_PROGRAM	104,2756
  CMD_CLEAR_PROGRAM		= 0x0c,104,2756
  CMD_DOWNLOAD_PROGRAM	105,2785
  CMD_DOWNLOAD_PROGRAM		= 0x0d,105,2785
  CMD_EXECUTE_PROGRAM	106,2817
  CMD_EXECUTE_PROGRAM		= 0x0e,106,2817
  CMD_SELF_TEST	107,2848
  CMD_SELF_TEST			= 0x0f,107,2848
  CMD_SET_STATION_ADDRESS	108,2874
  CMD_SET_STATION_ADDRESS	= 0x10,108,2874
  CMD_ADAPTER_INFO	109,2908
  CMD_ADAPTER_INFO		= 0x11,109,2908
  NUM_TRANSMIT_CMDS,110,2936
  CMD_CONFIGURE_ADAPTER_RESPONSE	115,2995
  CMD_CONFIGURE_ADAPTER_RESPONSE	= 0x31,115,2995
  CMD_CONFIGURE_82586_RESPONSE	116,3036
  CMD_CONFIGURE_82586_RESPONSE		= 0x32,116,3036
  CMD_ADDRESS_RESPONSE	117,3076
  CMD_ADDRESS_RESPONSE			= 0x33,117,3076
  CMD_DOWNLOAD_DATA_REQUEST	118,3109
  CMD_DOWNLOAD_DATA_REQUEST		= 0x34,118,3109
  CMD_UPLOAD_DATA_REQUEST	119,3146
  CMD_UPLOAD_DATA_REQUEST		= 0x35,119,3146
  CMD_RECEIVE_PACKET_COMPLETE	120,3181
  CMD_RECEIVE_PACKET_COMPLETE		= 0x38,120,3181
  CMD_TRANSMIT_PACKET_COMPLETE	121,3220
  CMD_TRANSMIT_PACKET_COMPLETE		= 0x39,121,3220
  CMD_NETWORK_STATISTICS_RESPONSE	122,3260
  CMD_NETWORK_STATISTICS_RESPONSE	= 0x3a,122,3260
  CMD_LOAD_MULTICAST_RESPONSE	123,3302
  CMD_LOAD_MULTICAST_RESPONSE		= 0x3b,123,3302
  CMD_CLEAR_PROGRAM_RESPONSE	124,3341
  CMD_CLEAR_PROGRAM_RESPONSE		= 0x3c,124,3341
  CMD_DOWNLOAD_PROGRAM_RESPONSE	125,3379
  CMD_DOWNLOAD_PROGRAM_RESPONSE		= 0x3d,125,3379
  CMD_EXECUTE_RESPONSE	126,3420
  CMD_EXECUTE_RESPONSE			= 0x3e,126,3420
  CMD_SELF_TEST_RESPONSE	127,3453
  CMD_SELF_TEST_RESPONSE		= 0x3f,127,3453
  CMD_SET_ADDRESS_RESPONSE	128,3487
  CMD_SET_ADDRESS_RESPONSE		= 0x40,128,3487
  CMD_ADAPTER_INFO_RESPONSE	129,3523
  CMD_ADAPTER_INFO_RESPONSE		= 0x41129,3523
typedef unsigned char         byte;byte135,3626
typedef unsigned short int    word;word136,3662
typedef unsigned long int     dword;dword137,3698
struct Memconf Memconf140,3758
struct Rcv_pkt Rcv_pkt149,3837
struct Xmit_pkt Xmit_pkt156,3906
struct Rcv_resp Rcv_resp162,3965
struct Xmit_resp Xmit_resp172,4072
struct Netstat Netstat180,4142
struct Selftest Selftest190,4246
struct Info Info201,4373
struct Memdump Memdump210,4474
} pcb_struct;pcb_struct240,5169
#define RECV_STATION	243,5220
#define RECV_BROAD	244,5246
#define RECV_MULTI	245,5270
#define RECV_PROMISC	246,5294
#define NO_LOOPBACK	247,5320
#define INT_LOOPBACK	248,5345
#define EXT_LOOPBACK	249,5371
#define DMA_BUFFER_SIZE 257,5594
#define BACKLOG_SIZE 258,5624
} elp_device;elp_device292,6497

drivers/net/ni52.c,1846
static int debuglevel 102,4153
static int automatic_resume 103,4223
static int rfdadd 104,4300
static int fifo=105,4369
#define DEBUG 127,4824
#define SYSBUSVAL 128,4859
#define ni_attn586(ni_attn586130,4892
#define ni_reset586(ni_reset586131,4955
#define ni_disint(ni_disint132,5014
#define ni_enaint(ni_enaint133,5074
#define make32(make32135,5135
#define make24(make24136,5188
#define make16(make16137,5242
#define RECV_BUFF_SIZE 153,5925
#define XMIT_BUFF_SIZE 154,5978
#define NUM_XMIT_BUFFS 155,6031
#define NUM_RECV_BUFFS_8 156,6099
#define NUM_RECV_BUFFS_16 157,6158
#define NO_NOPCOMMANDS 158,6218
#define DELAY(DELAY163,6390
#define DELAY_16(DELAY_16164,6440
#define DELAY_18(DELAY_18165,6498
#define WAIT_4_SCB_CMD(WAIT_4_SCB_CMD168,6594
#define WAIT_4_SCB_CMD_RUC(WAIT_4_SCB_CMD_RUC177,6913
#define WAIT_4_STAT_COMPL(WAIT_4_STAT_COMPL185,7240
#define NI52_TOTAL_SIZE 190,7395
#define NI52_ADDR0 191,7422
#define NI52_ADDR1 192,7446
#define NI52_ADDR2 193,7470
struct privpriv216,8415
static int ni52_close(241,9225
static int ni52_open(258,9490
static int check586(284,9928
void alloc586(326,11177
__initfunc(361,11996
__initfunc(412,13276
static int init586(537,16614
static void *alloc_rfa(772,22987
static void ni52_interrupt(818,24222
static void ni52_rcv_int(896,25851
static void ni52_rnr_int(1019,29084
static void ni52_xmt_int(1042,29737
static void startrecv586(1095,30970
static int ni52_send_packet(1111,31355
static struct net_device_stats *ni52_get_stats(1261,35376
static void set_multicast_list(1286,35996
static char devicename[1306,36310
static struct device dev_ni52 1307,36346
int irq=1314,36587
int io=1315,36598
long memstart=1316,36612
long memend=1317,36647
int init_module(1324,36782
void cleanup_module(1339,37165
void ni52_dump(1352,37421

drivers/net/dummy.c,406
static int dummy_open(59,1731
static int dummy_close(65,1809
static void set_multicast_list(72,1917
static int dummy_accept_fastpath(77,2001
__initfunc(83,2101
static int dummy_xmit(110,2804
static struct net_device_stats *dummy_get_stats(122,3036
__initfunc(130,3212
static char dummy_name[136,3301
static struct device dev_dummy 138,3330
int init_module(144,3467
void cleanup_module(155,3664

drivers/net/de600.c,2617
static const char *version 1,0
#define DE600_SLOW_DOWN 43,1713
#define SLOW_IO_BY_JUMPING 50,1915
#define CHECK_LOST_DE60059,2237
#define SHUTDOWN_WHEN_LOST69,2590
#define PRINTK(PRINTK86,3083
#define DE600_DEBUG 88,3138
#define PRINTK(PRINTK89,3160
static unsigned int de600_debug 114,3679
static unsigned int delay_time 117,3758
typedef unsigned char byte;byte125,3930
#define DE600_IO 145,4631
#define DATA_PORT	148,4662
#define STATUS_PORT	149,4691
#define COMMAND_PORT	150,4726
#define DE600_IRQ	153,4781
#define SELECT_NIC	167,5070
#define SELECT_PRN	168,5130
#define NML_PRN	169,5175
#define IRQEN	170,5228
#define RX_BUSY	175,5300
#define RX_GOOD	176,5322
#define TX_FAILED16	177,5344
#define TX_BUSY	178,5369
#define WRITE_DATA	186,5525
#define READ_DATA	187,5568
#define STATUS	188,5609
#define COMMAND	189,5658
#define NULL_COMMAND	190,5729
#define RX_LEN	191,5774
#define TX_ADDR	192,5830
#define RW_ADDR	193,5894
#define HI_NIBBLE	194,5960
#define RX_ALL	200,6136
#define RX_BP	201,6175
#define RX_MBP	202,6239
#define TX_ENABLE	204,6307
#define RX_ENABLE	205,6342
#define RESET	207,6378
#define STOP_RESET	208,6419
#define RX_PAGE2_SELECT	214,6538
#define RX_BASE_PAGE	215,6603
#define FLIP_IRQ	216,6677
#define MEM_2K	229,7051
#define MEM_4K	230,7085
#define MEM_6K	231,7119
#define NODE_ADDRESS	232,7153
#define RUNT 234,7193
static volatile int		rx_page	268,8402
#define TX_PAGES 270,8438
static volatile int		tx_fifo[271,8457
static volatile int		tx_fifo_in 272,8497
static volatile int		tx_fifo_out 273,8534
static volatile int		free_tx_pages 274,8572
static int			was_down 275,8619
#define select_prn(select_prn281,8706
#define select_nic(select_nic282,8777
#define de600_put_byte(de600_put_byte285,8916
#define de600_put_command(de600_put_command293,9219
#define de600_setup_address(de600_setup_address299,9533
#define rx_page_adr(rx_page_adr305,9835
#define next_rx_page(next_rx_page308,9935
#define tx_page_adr(tx_page_adr310,9988
de600_read_status(313,10052
de600_read_byte(325,10248
de600_open(343,10908
de600_close(363,11236
get_stats(381,11533
trigger_interrupt(387,11638
de600_start_xmit(401,11872
de600_interrupt(484,13823
de600_tx_intr(535,15048
de600_rx_intr(571,15865
__initfunc(630,17300
adapter_init(710,19180
#define DE600_MIN_WINDOW 777,20856
#define DE600_MAX_WINDOW 778,20886
#define DE600_TCP_WINDOW_DIFF 779,20916
#define min(min797,21576
de600_rspace(799,21632
static char nullname[820,22124
static struct device de600_dev 821,22149
init_module(825,22248
cleanup_module(833,22341

drivers/net/e2100.c,1177
static const char *version 34,1525
static int e21_probe_list[54,1956
#define E21_NIC_OFFSET 59,2182
#define E21_ASIC	60,2239
#define E21_MEM_ENABLE	61,2262
#define  E21_MEM_ON	62,2290
#define  E21_MEM_ON_8	63,2352
#define E21_MEM_BASE	64,2415
#define E21_IRQ_LOW	65,2441
#define E21_IRQ_HIGH	66,2511
#define E21_MEDIA	67,2582
#define  E21_ALT_IFPORT 68,2621
#define  E21_BIG_MEM	69,2693
#define E21_SAPROM	70,2762
#define E21_IO_EXTENT	71,2825
extern inline void mem_on(73,2854
extern inline void mem_off(83,3194
#define E21_RX_START_PG	93,3577
#define E21_RX_STOP_PG	94,3637
#define E21_BIG_RX_STOP_PG	95,3696
#define E21_TX_START_PG	96,3758
__initfunc(120,4684
__initfunc(140,5124
e21_open(257,8606
e21_reset_8390(280,9199
e21_get_8390_hdr(298,9646
e21_block_input(322,10342
e21_block_output(336,10725
e21_close(352,11172
struct netdev_entry e21_drv 380,11789
#define MAX_E21_CARDS	386,11895
#define NAMELEN	387,11960
static char namelist[388,12018
static struct device dev_e21[389,12074
static int io[398,12227
static int irq[399,12266
static int mem[400,12307
static int xcvr[401,12347
init_module(411,12801
cleanup_module(442,13648

drivers/net/apne.c,1055
#define NE_BASE	54,1471
#define NE_CMD	55,1505
#define NE_DATAPORT	56,1528
#define NE_RESET	57,1607
#define NE_IO_EXTENT	58,1688
#define NE_EN0_ISR	60,1715
#define NE_EN0_DCFG	61,1750
#define NE_EN0_RSARLO	63,1777
#define NE_EN0_RSARHI	64,1804
#define NE_EN0_RCNTLO	65,1841
#define NE_EN0_RXCR	66,1868
#define NE_EN0_TXCR	67,1894
#define NE_EN0_RCNTHI	68,1930
#define NE_EN0_IMR	69,1967
#define NE1SM_START_PG	71,2003
#define NE1SM_STOP_PG 72,2061
#define NESM_START_PG	73,2119
#define NESM_STOP_PG	74,2176
#define IOBASE 96,2931
#define WORDSWAP(WORDSWAP116,3388
static const char *version 119,3441
static int apne_owned 122,3537
__initfunc(124,3600
__initfunc(165,4528
apne_open(341,9744
apne_close(349,9845
apne_reset_8390(361,10164
apne_get_8390_hdr(388,10985
apne_block_input(437,12647
apne_block_output(479,14015
static void apne_interrupt(540,15869
static char devicename[562,16456
static struct device apne_dev 564,16492
int init_module(572,16591
void cleanup_module(584,16797
static int init_pcmcia(601,16991

drivers/net/de620.c,1882
static const char *version 41,1642
#define DE620_CLONE 73,2614
#define READ_DELAY 85,2883
#define WRITE_DELAY 89,2983
typedef unsigned char byte;byte143,4333
#define DE620_IO 152,4754
#define DE620_IRQ	156,4835
#define DATA_PORT	159,4863
#define STATUS_PORT	160,4898
#define COMMAND_PORT	161,4939
#define RUNT 163,4982
#define GIANT 164,5031
#define PRINTK(PRINTK167,5142
#define DE620_DEBUG 169,5197
#define PRINTK(PRINTK170,5219
static int bnc 186,5496
static int utp 187,5516
static int io 188,5536
static int irq 189,5563
static int clone 190,5591
static unsigned int de620_debug 192,5624
#define SCR_DEF 231,6752
#define	TCR_DEF 232,6803
#define DE620_RX_START_PAGE 233,6862
#define DEF_NIC_CMD 234,6931
static volatile byte	NIC_Cmd;236,6971
static volatile byte	next_rx_page;237,7001
static byte		first_rx_page;238,7036
static byte		last_rx_page;239,7064
static byte		EIPRegister;240,7091
static struct nic nic242,7118
} nic_data;248,7208
#define de620_tx_buffs(de620_tx_buffs255,7523
#define de620_flip_ds(de620_flip_ds256,7587
static int tot_cnt;260,7763
de620_ready(263,7809
de620_send_command(278,8066
de620_put_byte(292,8320
de620_read_byte(301,8524
de620_write_block(313,8797
de620_read_block(349,9709
de620_set_delay(384,10572
de620_set_register(408,10955
de620_get_register(418,11148
de620_open(439,11652
de620_close(460,12030
static struct net_device_stats *get_stats(477,12289
static void de620_set_multicast_list(489,12598
de620_start_xmit(514,13231
de620_interrupt(593,14962
de620_rx_intr(637,15877
adapter_init(736,19247
#define CHECK_MASK 784,20649
#define CHECK_OK 785,20727
__initfunc(823,21727
#define sendit(sendit914,24017
__initfunc(916,24095
__initfunc(959,25407
static char nullname[1002,26713
static struct device de620_dev 1003,26743
init_module(1007,26842
cleanup_module(1015,26935

drivers/net/de620.h,2071
#define CS0	8,329
#define ICEN	9,373
#define DS0	10,429
#define DS1	11,472
#define WDIR	13,516
#define RDIR	14,565
#define PS2WDIR	15,611
#define PS2RDIR	16,665
#define IRQEN	18,688
#define SELECTIN	19,742
#define INITP	20,789
#define AUTOFEED	21,835
#define STROBE	22,890
#define RESET	24,935
#define NIS0	25,955
#define NCTL0	26,997
#define W_DUMMY	29,1043
#define W_CR	30,1092
#define W_NPR	31,1144
#define W_TBR	32,1199
#define W_RSA	33,1255
#define EMPTY	36,1346
#define INTLEVEL	37,1397
#define TXBF1	38,1453
#define TXBF0	39,1511
#define READY	40,1569
#define	W_RSA1	43,1649
#define	W_RSA0	44,1705
#define	W_NPRF	45,1761
#define	W_DFR	46,1824
#define	W_CPR	47,1878
#define	W_SPR	48,1932
#define	W_EPR	49,1984
#define	W_SCR	50,2034
#define	W_TCR	51,2096
#define	W_EIP	52,2158
#define	W_PAR0	53,2210
#define	W_PAR1	54,2271
#define	W_PAR2	55,2332
#define	W_PAR3	56,2393
#define	W_PAR4	57,2454
#define	W_PAR5	58,2515
#define	R_STS	61,2597
#define	R_CPR	62,2644
#define	R_BPR	63,2697
#define	R_TDR	64,2751
#define EEDI	67,2835
#define TXSUC	68,2872
#define T16	69,2909
#define TS1	70,2950
#define TS0	71,2994
#define RXGOOD	72,3038
#define RXCRC	73,3082
#define RXSHORT	74,3130
#define COLS	75,3176
#define LNKS	76,3226
#define CLEAR	79,3291
#define NOPER	80,3340
#define RNOP	81,3379
#define RRA	82,3398
#define RRN	83,3467
#define RW1	84,3515
#define RW0	85,3581
#define TXEN	86,3646
#define TESTON	89,3723
#define SLEEP	90,3786
#define FASTMODE	92,3829
#define BYTEMODE	93,3895
#define FASTMODE	95,3939
#define BYTEMODE	96,4005
#define NIBBLEMODE	98,4050
#define IRQINV	99,4092
#define IRQNML	100,4146
#define INTON	101,4199
#define AUTOFFSET	102,4219
#define AUTOTX	103,4277
#define JABBER	106,4373
#define TXSUCINT	107,4426
#define T16INT	108,4482
#define RXERRPKT	109,4530
#define EXTERNALB2	110,4591
#define EXTERNALB1	111,4641
#define INTERNALB	112,4691
#define NMLOPERATE	113,4738
#define RXPBM	114,4785
#define RXPB	115,4845
#define RXALL	116,4893
#define RXOFF	117,4933

drivers/net/ni52.h,3074
#define NI52_RESET 15,391
#define NI52_ATTENTION 16,466
#define NI52_TENA 17,530
#define NI52_TDIS 18,594
#define NI52_INTENA 19,639
#define NI52_INTDIS 20,688
#define NI52_MAGIC1 21,738
#define NI52_MAGIC2 22,791
#define NI52_MAGICVAL1 24,845
#define NI52_MAGICVAL2 25,909
#define SCP_DEFAULT_ADDRESS 30,1001
struct scp_structscp_struct37,1087
struct iscp_structiscp_struct51,1435
struct scb_structscb_struct62,1762
#define RUC_MASK	79,2396
#define RUC_NOP	80,2447
#define RUC_START	81,2489
#define RUC_RESUME	82,2529
#define RUC_SUSPEND	83,2585
#define RUC_ABORT	84,2629
#define CUC_MASK 86,2698
#define CUC_NOP 87,2754
#define CUC_START 88,2802
#define CUC_RESUME 89,2875
#define CUC_SUSPEND 90,2932
#define CUC_ABORT 91,2979
#define ACK_MASK 93,3052
#define ACK_CX 94,3109
#define ACK_FR 95,3166
#define ACK_CNA 96,3215
#define ACK_RNR 97,3265
#define STAT_MASK 102,3369
#define STAT_CX 103,3433
#define STAT_FR 104,3504
#define STAT_CNA 105,3570
#define STAT_RNR 106,3627
#define CU_STATUS 108,3684
#define CU_SUSPEND 109,3738
#define CU_ACTIVE 110,3790
#define RU_STATUS	112,3840
#define RU_SUSPEND	113,3887
#define RU_NOSPACE	114,3930
#define RU_READY	115,3976
struct rfd_structrfd_struct120,4058
#define RFD_LAST 134,4619
#define RFD_SUSP 135,4678
#define RFD_COMPL 136,4734
#define RFD_OK 137,4760
#define RFD_BUSY 138,4786
#define RFD_ERR_LEN 139,4812
#define RFD_ERR_CRC 140,4889
#define RFD_ERR_ALGN 141,4935
#define RFD_ERR_RNR 142,4987
#define RFD_ERR_OVR 143,5057
#define RFD_ERR_FTS 145,5107
#define RFD_ERR_NEOP 146,5156
#define RFD_ERR_TRUN 147,5225
#define RFD_MATCHADD 148,5306
#define RFD_COLLDET 149,5396
struct rbd_struct rbd_struct154,5509
#define RBD_LAST	163,5818
#define RBD_USED	164,5860
#define RBD_MASK	165,5911
#define STAT_COMPL 170,6003
#define STAT_BUSY 171,6071
#define STAT_OK 172,6135
#define CMD_NOP	177,6224
#define CMD_IASETUP	178,6258
#define CMD_CONFIGURE	179,6321
#define CMD_MCSETUP	180,6374
#define CMD_XMIT	181,6424
#define CMD_TDR	182,6471
#define CMD_DUMP	183,6541
#define CMD_DIAGNOSE	184,6584
#define CMD_LAST	189,6666
#define CMD_SUSPEND	190,6730
#define CMD_INT	191,6788
struct nop_cmd_structnop_cmd_struct196,6878
struct iasetup_cmd_struct iasetup_cmd_struct206,7124
struct configure_cmd_structconfigure_cmd_struct217,7295
struct mcsetup_cmd_struct mcsetup_cmd_struct239,8181
struct dump_cmd_structdump_cmd_struct251,8449
struct transmit_cmd_struct transmit_cmd_struct262,8655
#define TCMD_ERRMASK 272,8969
#define TCMD_MAXCOLLMASK 273,9001
#define TCMD_MAXCOLL 274,9033
#define TCMD_HEARTBEAT 275,9065
#define TCMD_DEFERRED 276,9097
#define TCMD_UNDERRUN 277,9129
#define TCMD_LOSTCTS 278,9161
#define TCMD_NOCARRIER 279,9193
#define TCMD_LATECOLL 280,9225
struct tdr_cmd_structtdr_cmd_struct282,9258
#define TDR_LNK_OK	290,9393
#define TDR_XCVR_PRB	291,9452
#define TDR_ET_OPN	292,9518
#define TDR_ET_SRT	293,9579
#define TDR_TIMEMASK	294,9640
struct tbd_structtbd_struct299,9742
#define TBD_LAST 306,9936

drivers/net/ni65.c,2431
#define RCV_PARANOIA_CHECK95,3490
#define MID_PERFORMANCE97,3518
 static int isa0=100,3576
 static int isa0=102,3649
 static int isa0=104,3718
#define NI65_ID0 110,3811
#define NI65_ID1 111,3836
#define NI65_EB_ID0 112,3861
#define NI65_EB_ID1 113,3886
#define NE2100_ID0 114,3911
#define NE2100_ID1 115,3936
#define PORT 117,3962
#define RMDNUM 123,4026
#define RMDNUMMASK 124,4044
#define RMDNUM 126,4080
#define RMDNUMMASK 127,4097
#define TMDNUM 131,4164
#define TMDNUMMASK 132,4181
#define TMDNUM 134,4217
#define TMDNUMMASK 135,4234
#define R_BUF_SIZE 139,4320
#define T_BUF_SIZE 140,4344
#define L_DATAREG 145,4402
#define L_ADDRREG 146,4425
#define L_RESET 147,4448
#define L_CONFIG 148,4471
#define L_BUSIF 149,4494
#define CSR0 155,4648
#define CSR1 156,4667
#define CSR2 157,4686
#define CSR3 158,4705
#define INIT_RING_BEFORE_START	160,4725
#define FULL_RESET_ON_ERROR	161,4760
#define writereg(writereg164,4799
#define readreg(readreg166,4948
#define writedatareg(writedatareg169,5067
#define writedatareg(writedatareg171,5147
#define writereg(writereg174,5211
#define readreg(readreg175,5290
#define writedatareg(writedatareg176,5358
static unsigned char ni_vendor[179,5416
static struct card card181,5472
} cards[190,5660
#define NUM_CARDS 195,5904
struct privpriv197,5925
static int irqtab[236,7088
static int irqtab[] __initdata 236,7088
static int dmatab[237,7163
static int dmatab[] __initdata 237,7163
static int debuglevel 239,7254
static void ni65_set_performance(244,7351
static int ni65_open(267,7913
static int ni65_close(297,8486
__initfunc(328,8970
__initfunc(350,9443
static void ni65_init_lance(499,12996
static void *ni65_alloc_mem(533,13753
static int ni65_alloc_buffer(571,14644
static void ni65_free_buffer(623,15630
static void ni65_stop_start(657,16121
static int ni65_lance_reinit(726,17752
static void ni65_interrupt(808,19895
	if(911,22165
	dev->interrupt 918,22358
	return;920,22380
static void ni65_xmit_intr(927,22474
static void ni65_recv_intr(990,24096
static int ni65_send_packet(1081,26494
static struct net_device_stats *ni65_get_stats(1161,28300
static void set_multicast_list(1178,28631
static char devicename[1186,28817
static struct device dev_ni65 1188,28854
static int irq=1195,29083
static int io=1196,29101
static int dma=1197,29118
int init_module(1203,29206
void cleanup_module(1213,29365

drivers/net/ni65.h,1318
#define CSR0_ERR	19,441
#define CSR0_BABL	20,489
#define CSR0_CERR	21,558
#define CSR0_MISS	22,610
#define CSR0_MERR	23,660
#define CSR0_RINT	24,710
#define CSR0_TINT 25,765
#define CSR0_IDON	26,827
#define CSR0_INTR	27,883
#define CSR0_INEA	28,933
#define CSR0_RXON	29,986
#define CSR0_TXON	30,1033
#define CSR0_TDMD	31,1084
#define CSR0_STOP	32,1136
#define CSR0_STRT	33,1178
#define CSR0_INIT	34,1220
#define CSR0_CLRALL 36,1268
#define M_PROM	41,1398
#define M_INTL	42,1444
#define M_DRTY	43,1492
#define M_COLL	44,1537
#define M_DTCR	45,1582
#define M_LOOP	46,1633
#define M_DTX	47,1671
#define M_DRX	48,1724
#define RCV_OWN	55,1832
#define RCV_ERR	56,1890
#define RCV_FRAM	57,1932
#define RCV_OFLO	58,1974
#define RCV_CRC	59,2017
#define RCV_BUF_ERR	60,2056
#define RCV_START	61,2100
#define RCV_END	62,2145
#define XMIT_OWN	69,2246
#define XMIT_ERR	70,2304
#define XMIT_RETRY	71,2349
#define XMIT_1_RETRY	72,2411
#define XMIT_DEF	73,2468
#define XMIT_START	74,2505
#define XMIT_END	75,2551
#define XMIT_TDRMASK 81,2650
#define XMIT_RTRY 82,2720
#define XMIT_LCAR 83,2786
#define XMIT_LCOL 84,2835
#define XMIT_RESERV 85,2883
#define XMIT_UFLO 86,2927
#define XMIT_BUFF 87,2984
struct init_block init_block89,3043
struct rmd rmd100,3341
struct tmdtmd115,3595

drivers/net/ewrk3.c,2144
static const char *version 139,6250
static int ewrk3_debug 170,6937
static int ewrk3_debug 172,6981
#define EWRK3_NDA 175,7017
#define PROBE_LENGTH 177,7067
#define ETH_PROM_SIG 178,7094
#define EWRK3_SIGNATURE 181,7156
#define EWRK3_STRLEN 182,7209
#define EWRK3_RAM_BASE_ADDRESSES 186,7273
#define EWRK3_IO_BASE 192,7393
#define EWRK3_IOP_INC 193,7458
#define EWRK3_TOTAL_SIZE 194,7513
#define MAX_NUM_EWRK3S 197,7601
#define EWRK3_EISA_IO_PORTS 201,7663
#define MAX_EISA_SLOTS 205,7765
#define EISA_SLOT_INC 206,7791
#define CRC_POLYNOMIAL_BE 209,7828
#define CRC_POLYNOMIAL_LE 210,7898
#define QUEUE_PKT_TIMEOUT 212,7972
#define IO_ONLY 217,8073
#define SHMEM_2K 218,8102
#define SHMEM_32K 219,8132
#define SHMEM_64K 220,8163
#define ENABLE_IRQs 225,8241
#define DISABLE_IRQs 230,8359
#define START_EWRK3 239,8542
#define STOP_EWRK3 245,8699
#define EWRK3_PKT_STAT_SZ 253,8877
#define EWRK3_PKT_BIN_SZ 254,8906
struct ewrk3_private ewrk3_private257,9004
#define FORCE_2K_MODE 283,9841
static int autoprobed 326,11427
static u_char irq[329,11481
static int autoprobed 331,11533
static char name[335,11605
static int num_ewrk3s 336,11641
#define INIT_EWRK3 341,11720
__initfunc(349,11801
__initfunc(381,12616
static int ewrk3_open(627,19943
static void ewrk3_init(696,21735
static int ewrk3_queue_pkt(730,22474
static void ewrk3_interrupt(877,26891
static int ewrk3_rx(940,28559
static int ewrk3_tx(1084,32858
static int ewrk3_close(1120,33743
static struct net_device_stats *ewrk3_get_stats(1158,34613
static void set_multicast_list(1169,34893
static void SetMulticastFilter(1202,35742
__initfunc(1288,38098
__initfunc(1328,39068
__initfunc(1375,40313
__initfunc(1420,41415
__initfunc(1446,42160
static int Read_EEPROM(1465,42412
static int Write_EEPROM(1480,42776
__initfunc(1502,43446
__initfunc(1539,44664
__initfunc(1576,45328
__initfunc(1627,46555
static int ewrk3_ioctl(1664,47488
static char devicename[1881,53102
static struct device thisEthwrk 1883,53136
static int io 1890,53328
static int irq 1891,53403
int init_module(1896,53522
void cleanup_module(1905,53666

drivers/net/de4x5.h,18451
#define DE4X5_BMR 16,463
#define DE4X5_TPD 17,535
#define DE4X5_RPD 18,614
#define DE4X5_RRBA 19,692
#define DE4X5_TRBA 20,771
#define DE4X5_STS 21,850
#define DE4X5_OMR 22,920
#define DE4X5_IMR 23,998
#define DE4X5_MFC 24,1076
#define DE4X5_APROM 25,1151
#define DE4X5_BROM 26,1227
#define DE4X5_SROM 27,1299
#define DE4X5_MII 28,1373
#define DE4X5_DDR 29,1450
#define DE4X5_FDR 30,1529
#define DE4X5_GPT 31,1604
#define DE4X5_GEP 32,1684
#define DE4X5_SISR 33,1763
#define DE4X5_SICR 34,1837
#define DE4X5_STRR 35,1917
#define DE4X5_SIGR 36,1990
#define EISA_ID 41,2101
#define EISA_ID0 42,2163
#define EISA_ID1 43,2226
#define EISA_ID2 44,2289
#define EISA_ID3 45,2352
#define EISA_CR 46,2415
#define EISA_REG0 47,2480
#define EISA_REG1 48,2553
#define EISA_REG2 49,2626
#define EISA_REG3 50,2699
#define EISA_APROM 51,2772
#define PCI_CFID 56,2892
#define PCI_CFCS 57,2965
#define PCI_CFRV 58,3036
#define PCI_CFLT 59,3101
#define PCI_CBIO 60,3171
#define PCI_CBMA 61,3236
#define PCI_CBER 62,3312
#define PCI_CFIT 63,3391
#define PCI_CFDA 64,3471
#define PCI_CFDD 65,3539
#define PCI_CFPM 66,3617
#define ER0_BSW 71,3751
#define ER0_BMW 72,3827
#define ER0_EPT 73,3904
#define ER0_ISTS 74,3978
#define ER0_LI 75,4042
#define ER0_INTL 76,4102
#define ER0_INTT 77,4161
#define ER1_IAM 82,4294
#define ER1_IAE 83,4354
#define ER1_UPIN 84,4419
#define ER2_BRS 89,4528
#define ER2_BRA 90,4585
#define ER3_BWE 95,4709
#define ER3_BRE 96,4771
#define ER3_LSR 97,4832
#define CFID_DID 104,5098
#define CFID_VID 105,5151
#define DC21040_DID 106,5204
#define DC21040_VID 107,5266
#define DC21041_DID 108,5330
#define DC21041_VID 109,5392
#define DC21140_DID 110,5456
#define DC21140_VID 111,5518
#define DC2114x_DID 112,5582
#define DC2114x_VID 113,5644
#define DC21040 118,5737
#define DC21041 119,5769
#define DC21140 120,5801
#define DC2114x 121,5833
#define DC21142 122,5865
#define DC21143 123,5908
#define DC2114x_BRK 124,5951
#define is_DC21040 126,6032
#define is_DC21041 127,6104
#define is_DC21140 128,6176
#define is_DC2114x 129,6248
#define is_DC21142 130,6320
#define is_DC21143 131,6388
#define CFCS_DPE 136,6519
#define CFCS_SSE 137,6588
#define CFCS_RMA 138,6657
#define CFCS_RTA 139,6726
#define CFCS_DST 140,6795
#define CFCS_DPR 141,6864
#define CFCS_FBB 142,6933
#define CFCS_SEE 143,7002
#define CFCS_PER 144,7071
#define CFCS_MO 145,7140
#define CFCS_MSA 146,7209
#define CFCS_IOSA 147,7278
#define CFRV_BC 152,7404
#define CFRV_SC 153,7458
#define CFRV_RN 154,7510
#define CFRV_SN 155,7569
#define BASE_CLASS 156,7624
#define SUB_CLASS 157,7696
#define STEP_NUMBER 158,7769
#define REV_NUMBER 159,7840
#define CFRV_MASK 160,7919
#define CFLT_BC 165,8038
#define CBIO_MASK 170,8165
#define CBIO_IOSI 171,8230
#define CCIS_ROMI 176,8385
#define CCIS_ASO 177,8438
#define CCIS_ASI 178,8502
#define SSID_SSID 183,8630
#define SSID_SVID 184,8686
#define CBER_MASK 189,8824
#define CBER_ROME 190,8899
#define CFIT_MXLT 195,9011
#define CFIT_MNGT 196,9085
#define CFIT_IRQP 197,9159
#define CFIT_IRQL 198,9216
#define SLEEP 203,9344
#define SNOOZE 204,9411
#define WAKEUP 205,9479
#define PCI_CFDA_DSU 207,9543
#define PCI_CFDA_PSM 208,9620
#define BMR_RML 213,9745
#define BMR_DBO 214,9810
#define BMR_TAP 215,9886
#define BMR_DAS 216,9955
#define BMR_CAL 217,10022
#define BMR_PBL 218,10080
#define BMR_BLE 219,10148
#define BMR_DSL 220,10208
#define BMR_BAR 221,10273
#define BMR_SWR 222,10331
#define TAP_NOPOLL 225,10469
#define TAP_200US 226,10532
#define TAP_800US 227,10607
#define TAP_1_6MS 228,10682
#define TAP_12_8US 229,10757
#define TAP_25_6US 230,10833
#define TAP_51_2US 231,10909
#define TAP_102_4US 232,10985
#define CAL_NOUSE 234,11063
#define CAL_8LONG 235,11114
#define CAL_16LONG 236,11177
#define CAL_32LONG 237,11241
#define PBL_0 239,11306
#define PBL_1 240,11386
#define PBL_2 241,11458
#define PBL_4 242,11530
#define PBL_8 243,11602
#define PBL_16 244,11674
#define PBL_32 245,11746
#define DSL_0 247,11819
#define DSL_1 248,11887
#define DSL_2 249,11955
#define DSL_4 250,12023
#define DSL_8 251,12091
#define DSL_16 252,12159
#define DSL_32 253,12227
#define TPD 258,12355
#define RPD 263,12477
#define RRBA 268,12605
#define TRBA 273,12747
#define STS_GPI 278,12860
#define STS_BE 279,12933
#define STS_TS 280,12990
#define STS_RS 281,13055
#define STS_NIS 282,13119
#define STS_AIS 283,13186
#define STS_ER 284,13255
#define STS_FBE 285,13311
#define STS_SE 286,13369
#define STS_LNF 287,13424
#define STS_FD 288,13476
#define STS_TM 289,13551
#define STS_ETI 290,13617
#define STS_AT 291,13683
#define STS_RWT 292,13736
#define STS_RPS 293,13804
#define STS_RU 294,13870
#define STS_RI 295,13939
#define STS_UNF 296,13999
#define STS_LNP 297,14060
#define STS_ANC 298,14112
#define STS_TJT 299,14179
#define STS_TU 300,14246
#define STS_TPS 301,14316
#define STS_TI 302,14383
#define EB_PAR 304,14445
#define EB_MA 305,14500
#define EB_TA 306,14555
#define EB_RES0 307,14610
#define EB_RES1 308,14661
#define TS_STOP 310,14713
#define TS_FTD 311,14763
#define TS_WEOT 312,14831
#define TS_QDAT 313,14902
#define TS_RES 314,14972
#define TS_SPKT 315,15023
#define TS_SUSP 316,15078
#define TS_CLTD 317,15130
#define RS_STOP 319,15199
#define RS_FRD 320,15249
#define RS_CEOR 321,15316
#define RS_WFRP 322,15390
#define RS_SUSP 323,15456
#define RS_CLRD 324,15508
#define RS_FLUSH 325,15575
#define RS_QRFS 326,15631
#define INT_CANCEL 328,15700
#define OMR_SC 333,15822
#define OMR_RA 334,15894
#define OMR_SDP 335,15948
#define OMR_SCR 336,16021
#define OMR_PCS 337,16078
#define OMR_TTM 338,16133
#define OMR_SF 339,16199
#define OMR_HBD 340,16259
#define OMR_PS 341,16319
#define OMR_CA 342,16373
#define OMR_BP 343,16437
#define OMR_TR 344,16493
#define OMR_ST 345,16558
#define OMR_FC 346,16632
#define OMR_OM 347,16695
#define OMR_FDX 348,16752
#define OMR_FKD 349,16811
#define OMR_PM 350,16878
#define OMR_PR 351,16939
#define OMR_SB 352,16998
#define OMR_IF 353,17067
#define OMR_PB 354,17127
#define OMR_HO 355,17185
#define OMR_SR 356,17252
#define OMR_HP 357,17313
#define TR_72 359,17392
#define TR_96 360,17466
#define TR_128 361,17540
#define TR_160 362,17615
#define OMR_DEF 364,17692
#define OMR_SIA 365,17722
#define OMR_SYM 366,17762
#define OMR_MII_10 367,17831
#define OMR_MII_100 368,17880
#define IMR_GPM 373,17983
#define IMR_NIM 374,18051
#define IMR_AIM 375,18123
#define IMR_ERM 376,18197
#define IMR_FBM 377,18258
#define IMR_SEM 378,18321
#define IMR_LFM 379,18381
#define IMR_FDM 380,18438
#define IMR_TMM 381,18511
#define IMR_ETM 382,18582
#define IMR_ATM 383,18654
#define IMR_RWM 384,18715
#define IMR_RSM 385,18788
#define IMR_RUM 386,18851
#define IMR_RIM 387,18925
#define IMR_UNM 388,18990
#define IMR_ANM 389,19057
#define IMR_LPM 390,19129
#define IMR_TJM 391,19181
#define IMR_TUM 392,19253
#define IMR_TSM 393,19328
#define IMR_TIM 394,19396
#define MFC_FOCO 399,19525
#define MFC_FOC 400,19602
#define MFC_OVFL 401,19671
#define MFC_CNTR 402,19748
#define MFC_FOCM 403,19817
#define APROM_DN 408,19940
#define APROM_DT 409,19997
#define BROM_MODE 414,20109
#define BROM_RD 415,20185
#define BROM_WR 416,20245
#define BROM_BR 417,20304
#define BROM_SR 418,20370
#define BROM_REG 419,20438
#define BROM_DT 420,20504
#define MII_MDI 425,20625
#define MII_MDO 426,20689
#define MII_MRD 427,20759
#define MII_MWR 428,20832
#define MII_MDT 429,20906
#define MII_MDC 430,20971
#define MII_RD 431,21033
#define MII_WR 432,21088
#define MII_SEL 433,21142
#define SROM_MODE 435,21206
#define SROM_RD 436,21282
#define SROM_WR 437,21342
#define SROM_BR 438,21401
#define SROM_SR 439,21467
#define SROM_REG 440,21535
#define SROM_DT 441,21601
#define DT_OUT 443,21653
#define DT_IN 444,21710
#define DT_CLK 445,21766
#define DT_CS 446,21824
#define MII_PREAMBLE 448,21889
#define MII_TEST 449,21954
#define MII_STRD 450,22011
#define MII_STWR 451,22091
#define MII_CR 453,22172
#define MII_SR 454,22245
#define MII_ID0 455,22317
#define MII_ID1 456,22384
#define MII_ANA 457,22451
#define MII_ANLPA 458,22523
#define MII_ANE 459,22602
#define MII_ANP 460,22670
#define DE4X5_MAX_MII 462,22742
#define MII_CR_RST 467,22860
#define MII_CR_LPBK 468,22920
#define MII_CR_SPD 469,22977
#define MII_CR_10 470,23040
#define MII_CR_100 471,23092
#define MII_CR_ASSE 472,23145
#define MII_CR_PD 473,23211
#define MII_CR_ISOL 474,23263
#define MII_CR_RAN 475,23317
#define MII_CR_FDM 476,23383
#define MII_CR_CTE 477,23441
#define MII_SR_T4C 482,23545
#define MII_SR_TXFD 483,23605
#define MII_SR_TXHD 484,23677
#define MII_SR_TFD 485,23749
#define MII_SR_THD 486,23819
#define MII_SR_ASSC 487,23889
#define MII_SR_RFD 488,23959
#define MII_SR_ANC 489,24022
#define MII_SR_LKS 490,24088
#define MII_SR_JABD 491,24141
#define MII_SR_XC 492,24196
#define MII_ANA_TAF 497,24324
#define MII_ANA_T4AM 498,24390
#define MII_ANA_TXAM 499,24458
#define MII_ANA_FDAM 500,24526
#define MII_ANA_HDAM 501,24603
#define MII_ANA_100M 502,24680
#define MII_ANA_10M 503,24751
#define MII_ANA_CSMA 504,24821
#define MII_ANLPA_NP 509,24940
#define MII_ANLPA_ACK 510,25000
#define MII_ANLPA_RF 511,25060
#define MII_ANLPA_TAF 512,25114
#define MII_ANLPA_T4AM 513,25180
#define MII_ANLPA_TXAM 514,25248
#define MII_ANLPA_FDAM 515,25316
#define MII_ANLPA_HDAM 516,25393
#define MII_ANLPA_100M 517,25470
#define MII_ANLPA_10M 518,25541
#define MII_ANLPA_CSMA 519,25611
#define MEDIA_NWAY 524,25720
#define MEDIA_MII 525,25792
#define MEDIA_FIBRE 526,25860
#define MEDIA_AUI 527,25921
#define MEDIA_TP 528,25980
#define MEDIA_BNC 529,26038
#define SROM_SSVID 534,26155
#define SROM_SSID 535,26224
#define SROM_CISPL 536,26286
#define SROM_CISPH 537,26358
#define SROM_IDCRC 538,26431
#define SROM_RSVD2 539,26491
#define SROM_SFV 540,26553
#define SROM_CCNT 541,26621
#define SROM_HWADD 542,26686
#define SROM_MRSVD 543,26751
#define SROM_CRC 544,26820
#define SROM_10BT 549,26921
#define SROM_10BTN 550,26984
#define SROM_10BTF 551,27045
#define SROM_10BTNLP 552,27108
#define SROM_10B2 553,27182
#define SROM_10B5 554,27239
#define SROM_100BTH 555,27296
#define SROM_100BTF 556,27360
#define SROM_100BT4 557,27424
#define SROM_100BFX 558,27477
#define SROM_M10BT 559,27550
#define SROM_M10BTF 560,27617
#define SROM_M100BT 561,27684
#define SROM_M100BTF 562,27752
#define SROM_M100BT4 563,27820
#define SROM_M100BF 564,27877
#define SROM_M100BFF 565,27946
#define SROM_PDA 566,28015
#define SROM_PAO 567,28085
#define SROM_NSMI 568,28150
#define SROM_10BASET 573,28255
#define SROM_10BASE2 574,28318
#define SROM_10BASE5 575,28375
#define SROM_100BASET 576,28432
#define SROM_10BASETF 577,28496
#define SROM_100BASETF 578,28559
#define SROM_100BASET4 579,28623
#define SROM_100BASEF 580,28676
#define SROM_100BASEFF 581,28741
#define BLOCK_LEN 583,28807
#define EXT_FIELD 584,28876
#define MEDIA_CODE 585,28953
#define COMPACT_FI 590,29068
#define COMPACT_LEN 591,29126
#define COMPACT_MC 592,29174
#define BLOCK0_FI 597,29276
#define BLOCK0_MCS 598,29334
#define BLOCK0_MC 599,29396
#define FDR_FDACV 604,29499
#define GPT_CON 609,29638
#define GPT_VAL 610,29707
#define GEP_LNP 616,29877
#define GEP_SLNK 617,29957
#define GEP_SDET 618,30037
#define GEP_HRST 619,30117
#define GEP_FDXD 620,30197
#define GEP_PHYL 621,30277
#define GEP_FLED 622,30357
#define GEP_MODE 623,30437
#define GEP_INIT 624,30517
#define GEP_CTRL 625,30597
#define CSR13 630,30709
#define CSR14 631,30734
#define CSR15 632,30814
#define SISR_LPC 637,30882
#define SISR_LPN 638,30962
#define SISR_ANS 639,31042
#define SISR_NSN 640,31122
#define SISR_TRF 641,31202
#define SISR_NSND 642,31282
#define SISR_ANR_FDS 643,31362
#define SISR_TRA 644,31442
#define SISR_NRA 645,31522
#define SISR_ARA 646,31602
#define SISR_SRA 647,31682
#define SISR_DAO 648,31762
#define SISR_DAZ 649,31842
#define SISR_DSP 650,31922
#define SISR_DSD 651,32002
#define SISR_APS 652,32082
#define SISR_LKF 653,32162
#define SISR_LS10 654,32242
#define SISR_NCR 655,32322
#define SISR_LS100 656,32402
#define SISR_PAUI 657,32482
#define SISR_MRA 658,32562
#define ANS_NDIS 660,32643
#define ANS_TDIS 661,32723
#define ANS_ADET 662,32803
#define ANS_ACK 663,32883
#define ANS_CACK 664,32963
#define ANS_NWOK 665,33043
#define ANS_LCHK 666,33123
#define SISR_RST 668,33204
#define SISR_ANR 669,33284
#define SICR_SDM 674,33413
#define SICR_OE57 675,33476
#define SICR_OE24 676,33538
#define SICR_OE13 677,33598
#define SICR_IE 678,33658
#define SICR_EXT 679,33713
#define SICR_D_SIA 680,33788
#define SICR_DPLL 681,33868
#define SICR_APLL 682,33948
#define SICR_D_RxM 683,34028
#define SICR_M_RxM 684,34108
#define SICR_LNKT 685,34188
#define SICR_SEL 686,34268
#define SICR_ASE 687,34345
#define SICR_SIM 688,34404
#define SICR_ENI 689,34481
#define SICR_EDP 690,34549
#define SICR_AUI 691,34621
#define SICR_CAC 692,34687
#define SICR_PS 693,34752
#define SICR_SRL 694,34815
#define SIA_RESET 695,34867
#define STRR_TAS 700,34982
#define STRR_SPP 701,35056
#define STRR_APE 702,35116
#define STRR_LTE 703,35179
#define STRR_SQE 704,35238
#define STRR_CLD 705,35302
#define STRR_CSQ 706,35368
#define STRR_RSQ 707,35435
#define STRR_ANE 708,35500
#define STRR_HDE 709,35564
#define STRR_CPEN 710,35625
#define STRR_LSE 711,35687
#define STRR_DREN 712,35752
#define STRR_LBK 713,35808
#define STRR_ECEN 714,35866
#define STRR_RESET 715,35923
#define SIGR_RMI 720,36030
#define SIGR_GI1 721,36096
#define SIGR_GI0 722,36163
#define SIGR_CWE 723,36230
#define SIGR_RME 724,36293
#define SIGR_GEI1 725,36356
#define SIGR_GEI0 726,36429
#define SIGR_LGS3 727,36502
#define SIGR_LGS2 728,36560
#define SIGR_LGS1 729,36618
#define SIGR_LGS0 730,36676
#define SIGR_MD 731,36734
#define SIGR_LV2 732,36806
#define SIGR_LE2 733,36875
#define SIGR_FRL 734,36945
#define SIGR_DPST 735,37006
#define SIGR_LSD 736,37068
#define SIGR_FLF 737,37130
#define SIGR_FUSQ 738,37188
#define SIGR_TSCK 739,37246
#define SIGR_LV1 740,37299
#define SIGR_LE1 741,37368
#define SIGR_RWR 742,37438
#define SIGR_RWD 743,37505
#define SIGR_ABM 744,37572
#define SIGR_JCK 745,37629
#define SIGR_HUJ 746,37684
#define SIGR_JBD 747,37737
#define SIGR_RESET 748,37794
#define R_OWN 753,37898
#define RD_FF 754,37948
#define RD_FL 755,38005
#define RD_ES 756,38060
#define RD_LE 757,38116
#define RD_DT 758,38171
#define RD_RF 759,38223
#define RD_MF 760,38276
#define RD_FS 761,38334
#define RD_LS 762,38393
#define RD_TL 763,38451
#define RD_CS 764,38508
#define RD_FT 765,38565
#define RD_RJ 766,38618
#define RD_RE 767,38677
#define RD_DB 768,38739
#define RD_CE 769,38795
#define RD_OF 770,38847
#define RD_RER 772,38899
#define RD_RCH 773,38961
#define RD_RBS2 774,39026
#define RD_RBS1 775,39082
#define T_OWN 780,39180
#define TD_ES 781,39230
#define TD_TO 782,39286
#define TD_LO 783,39353
#define TD_NC 784,39411
#define TD_LC 785,39464
#define TD_EC 786,39521
#define TD_HF 787,39584
#define TD_CC 788,39641
#define TD_LF 789,39701
#define TD_UF 790,39753
#define TD_DE 791,39811
#define TD_IC 793,39863
#define TD_LS 794,39929
#define TD_FS 795,39984
#define TD_FT1 796,40040
#define TD_SET 797,40097
#define TD_AC 798,40152
#define TD_TER 799,40210
#define TD_TCH 800,40273
#define TD_DPD 801,40338
#define TD_FT0 802,40397
#define TD_TBS2 803,40454
#define TD_TBS1 804,40510
#define PERFECT_F 806,40567
#define HASH_F 807,40597
#define INVERSE_F 808,40623
#define HASH_O_F 809,40649
#define TP 815,40754
#define TP_NW 816,40832
#define BNC 817,40910
#define AUI 818,40988
#define BNC_AUI 819,41066
#define _10Mb 820,41144
#define _100Mb 821,41222
#define AUTO 822,41300
#define NC 827,41404
#define ANS 828,41482
#define SPD_DET 829,41560
#define INIT 830,41638
#define EXT_SIA 831,41716
#define ANS_SUSPECT 832,41794
#define TP_SUSPECT 833,41872
#define BNC_AUI_SUSPECT 834,41950
#define EXT_SIA_SUSPECT 835,42028
#define BNC_SUSPECT 836,42106
#define AUI_SUSPECT 837,42184
#define MII 838,42262
#define TIMER_CB 840,42341
#define DEBUG_NONE 845,42449
#define DEBUG_VERSION 846,42508
#define DEBUG_MEDIA 847,42571
#define DEBUG_TX 848,42633
#define DEBUG_RX 849,42704
#define DEBUG_SROM 850,42774
#define DEBUG_MII 851,42835
#define DEBUG_OPEN 852,42895
#define DEBUG_CLOSE 853,42964
#define DEBUG_PCICFG 854,43034
#define DEBUG_ALL 855,43065
#define PCI 860,43120
#define EISA 861,43135
#define HASH_TABLE_LEN 863,43151
#define HASH_BITS 864,43197
#define SETUP_FRAME_LEN 866,43249
#define IMPERF_PA_OFFSET 867,43296
#define POLL_DEMAND 869,43344
#define LOST_MEDIA_THRESHOLD 871,43376
#define MASK_INTERRUPTS 873,43408
#define UNMASK_INTERRUPTS 874,43439
#define DE4X5_STRLEN 876,43471
#define DE4X5_INIT 878,43503
#define DE4X5_RUN 879,43564
#define DE4X5_SAVE_STATE 881,43615
#define DE4X5_RESTORE_STATE 882,43646
#define PERFECT 887,43711
#define HASH_PERF 888,43782
#define PERFECT_REJ 889,43858
#define ALL_HASH 890,43936
#define ALL 892,44016
#define PHYS_ADDR_ONLY 893,44087
#define NO 898,44180
#define FALSE 899,44211
#define YES 901,44243
#define TRUE 902,44275
#define INITIALISED 907,44331
#define CLOSED 908,44410
#define OPEN 909,44469
#define PDET_LINK_WAIT 914,44547
#define ANS_FINISH_WAIT 915,44626
#define NATIONAL_TX 922,44940
#define BROADCOM_T4 923,44967
#define SEEQ_T4 924,44994
#define CYPRESS_T4 925,45021
#define SET_10Mb 930,45080
#define SET_100Mb 952,46040
#define SET_100Mb_PDET 982,47365
#define	DE4X5IOCTL	1003,48097
struct de4x5_ioctl de4x5_ioctl1005,48132
#define DE4X5_GET_HWADDR	1014,48397
#define DE4X5_SET_HWADDR	1015,48458
#define DE4X5_SET_PROM 1016,48519
#define DE4X5_CLR_PROM 1017,48576
#define DE4X5_SAY_BOO	1018,48635
#define DE4X5_GET_MCA 1019,48710
#define DE4X5_SET_MCA 1020,48770
#define DE4X5_CLR_MCA 1021,48830
#define DE4X5_MCA_EN 1022,48893
#define DE4X5_GET_STATS 1023,48962
#define DE4X5_CLR_STATS 1024,49025
#define DE4X5_GET_OMR 1025,49092
#define DE4X5_SET_OMR 1026,49165
#define DE4X5_GET_REG 1027,49238
#define LinuxVersionCode(LinuxVersionCode1029,49306

drivers/net/de4x5.c,6901
static const char *version 423,21130
#define c_char 460,21959
#define TWIDDLE(TWIDDLE461,21985
struct phy_table phy_table466,22082
struct mii_phy mii_phy477,22465
#define DE4X5_MAX_PHY 496,23442
struct sia_phy sia_phy498,23521
static struct phy_table phy_info[512,24165
#define GENERIC_REG 525,24794
#define GENERIC_MASK 526,24873
#define GENERIC_VALUE 527,24952
static c_char enet_det[532,25077
#define SMC 537,25203
#define ACCTON 538,25220
static c_char srom_repair_info[545,25430
static int de4x5_debug 554,25667
static int de4x5_debug 557,25811
static char *args 570,26179
static char *args 572,26217
struct parameters parameters575,26251
#define DE4X5_AUTOSENSE_MS 580,26307
#define DE4X5_NDA 582,26378
#define PROBE_LENGTH 587,26476
#define ETH_PROM_SIG 588,26503
#define PKT_BUF_SZ	593,26564
#define IEEE802_3_SZ 594,26639
#define MAX_PKT_SZ 595,26698
#define MAX_DAT_SZ 596,26773
#define MIN_DAT_SZ 597,26846
#define PKT_HDR_LEN 598,26919
#define FAKE_FRAME_LEN 599,26996
#define QUEUE_PKT_TIMEOUT 600,27037
#define CRC_POLYNOMIAL_BE 603,27102
#define CRC_POLYNOMIAL_LE 604,27173
#define DE4X5_EISA_IO_PORTS 609,27274
#define DE4X5_EISA_TOTAL_SIZE 610,27350
#define MAX_EISA_SLOTS 612,27416
#define EISA_SLOT_INC 613,27442
#define EISA_ALLOWED_IRQ_LIST 614,27471
#define DE4X5_SIGNATURE 616,27518
#define DE4X5_NAME_LENGTH 617,27584
#define PROBE_LENGTH 622,27656
#define ETH_PROM_SIG 623,27683
#define PCI_MAX_BUS_NUM 628,27746
#define DE4X5_PCI_TOTAL_SIZE 629,27777
#define DE4X5_CLASS_CODE 630,27842
#define NO_MORE_PCI 631,27917
#define ALIGN4 639,28259
#define ALIGN8 640,28322
#define ALIGN16 641,28385
#define ALIGN32 642,28448
#define ALIGN64 643,28511
#define ALIGN128 644,28575
#define ALIGN 646,28640
#define CACHE_ALIGN 647,28712
#define DESC_SKIP_LEN 648,28745
#define DESC_ALIGN650,28894
static int dec_only 653,28992
static int dec_only 655,29023
#define ENABLE_IRQs 661,29090
#define DISABLE_IRQs 666,29204
#define UNMASK_IRQs 672,29347
#define MASK_IRQs 677,29462
#define START_DE4X5 686,29627
#define STOP_DE4X5 692,29780
#define RESET_SIA 701,29960
#define DE4X5_AUTOSENSE_MS 706,30087
struct de4x5_srom de4x5_srom711,30144
#define SUB_VENDOR_ID 723,30392
#define NUM_RX_DESC 733,30845
#define NUM_TX_DESC 734,30918
#define RX_BUFF_SZ 735,30991
struct de4x5_desc de4x5_desc738,31210
#define DE4X5_PKT_STAT_SZ 749,31352
#define DE4X5_PKT_BIN_SZ 750,31381
struct de4x5_private de4x5_private753,31527
static struct bus_type bus_type843,37166
} bus;851,37318
} last 870,37885
#define TX_BUFFS_AVAIL 879,38157
#define TX_PKT_PENDING 883,38296
static int loading_module 1018,45743
static int loading_module 1023,45864
static char name[1026,45916
static u_char de4x5_irq[1028,46032
static int lastEISA 1029,46083
static int lastEISA 1031,46114
static int num_de4x5s 1033,46191
static int cfrv 1034,46218
static int lastPCI 1035,46252
static struct device *lastModule 1036,46277
static struct pci_dev *pdev 1037,46318
struct InfoLeaf InfoLeaf1042,46410
static struct InfoLeaf infoleaf_array[1046,46480
#define INFOLEAF_SIZE 1052,46658
static int (*dc_infoblock[1057,46778
static int (*dc_infoblock[])(struct device *dev,1057,46778
static int (*dc_infoblock[])(struct device *dev, u_char,1057,46778
static int (*dc_infoblock[])(struct device *dev, u_char, u_char 1057,46778
#define COMPACT 1067,47001
#define RESET_DE4X5 1072,47093
#define PHY_HARD_RESET 1084,47370
__initfunc(1096,47716
__initfunc(1111,48029
de4x5_open(1328,54072
de4x5_init(1408,56521
de4x5_sw_reset(1422,56804
de4x5_queue_pkt(1499,59123
de4x5_interrupt(1577,61948
de4x5_rx(1643,63730
de4x5_tx(1722,66217
de4x5_ast(1773,67803
de4x5_txur(1796,68352
de4x5_rx_ovfc(1819,68855
de4x5_close(1840,69341
de4x5_get_stats(1878,70172
de4x5_local_stats(1889,70440
load_packet(1928,71773
set_multicast_list(1950,72426
SetMulticastFilter(1982,73343
__initfunc(2043,75329
#define PCI_LAST_DEV 2125,77924
__initfunc(2127,77950
__initfunc(2239,81278
__initfunc(2298,82892
autoconf_media(2326,83666
dc21040_autoconf(2367,85138
dc21040_state(2438,86955
de4x5_suspect_state(2477,87847
dc21041_autoconf(2521,89045
dc21140m_autoconf(2723,94212
dc2114x_autoconf(2907,99527
srom_autoconf(3158,106051
srom_map_media(3171,106413
de4x5_init_connection(3235,107691
de4x5_reset_phy(3264,108487
test_media(3298,109358
test_tp(3336,110246
#define SAMPLE_INTERVAL 3362,110832
#define SAMPLE_DELAY 3363,110870
test_for_100Mb(3365,110919
wait_for_link(3396,111685
test_mii_reg(3418,111970
is_spd_100(3442,112491
is_100_up(3466,113218
is_10_up(3487,113924
is_anc_capable(3510,114647
ping_media(3529,115175
de4x5_alloc_rx_buff(3570,116227
de4x5_free_rx_buffs(3621,117655
de4x5_free_tx_buffs(3638,118008
de4x5_save_skbs(3667,118740
de4x5_rst_desc_ring(3688,119215
de4x5_cache_state(3720,119868
de4x5_put_cache(3750,120609
de4x5_putb_cache(3767,120934
de4x5_get_cache(3779,121184
test_ans(3797,121558
de4x5_setup_intr(3825,122163
reset_init_sia(3846,122583
create_packet(3880,123341
de4x5_us_delay(3902,123826
de4x5_ms_delay(3913,123963
EISA_signature(3929,124172
PCI_signature(3964,125054
DevicePresent(4010,126605
enet_addr_rst(4049,127630
get_hw_addr(4089,128552
de4x5_bad_srom(4171,130834
de4x5_strncmp(4191,131227
srom_repair(4203,131369
test_bad_enet(4224,131828
an_exception(4259,132707
srom_rd(4273,132921
srom_latch(4285,133248
srom_command(4295,133426
srom_address(4305,133617
srom_data(4322,133928
sendto_srom(4358,134539
getfrom_srom(4367,134652
srom_infoleaf_info(4378,134769
srom_init(4426,136150
srom_exec(4471,137225
dc21041_infoleaf(4502,138109
dc21140_infoleaf(4508,138194
dc21142_infoleaf(4546,139025
dc21143_infoleaf(4581,139793
compact_infoblock(4619,140700
type0_infoblock(4659,141766
type1_infoblock(4699,142809
type2_infoblock(4738,143878
type3_infoblock(4779,144945
type4_infoblock(4819,146064
type5_infoblock(4864,147370
mii_rd(4893,148019
mii_wr(4906,148654
mii_rdata(4921,149390
mii_wdata(4935,149578
mii_address(4948,149764
mii_ta(4962,149974
mii_swap(4975,150241
sendto_mii(4989,150411
getfrom_mii(5003,150637
mii_get_oui(5017,150897
mii_get_phy(5064,151924
build_setup_frame(5128,154173
enable_ast(5160,155057
disable_ast(5168,155197
de4x5_switch_mac_port(5178,155361
gep_wr(5214,156280
gep_rd(5229,156615
timeout(5244,156934
yawn(5266,157442
de4x5_parse_params(5314,158409
de4x5_dbg_open(5357,159467
de4x5_dbg_mii(5408,160881
de4x5_dbg_media(5436,161930
de4x5_dbg_srom(5462,162674
de4x5_dbg_rx(5488,163459
de4x5_ioctl(5529,164535
#define DE4X5_DUMP 5640,168293
#define LP(LP5744,171675
static struct device *mdev 5745,171719
static int io=5746,171754
init_module(5750,171860
cleanup_module(5781,172486
unlink_modules(5791,172611
count_adapters(5814,173313
__initfunc(5844,174063

drivers/net/tulip.c,7897
#define SMP_CHECK20,677
static const char version[21,695
static int max_interrupt_work 26,890
#define MAX_UNITS 28,927
static int full_duplex[30,993
static int options[31,1036
static int mtu[32,1075
static const char * const medianame[35,1211
static int reverse_probe 44,1591
static int reverse_probe 46,1627
#define TX_RING_SIZE	53,1883
#define RX_RING_SIZE	54,1907
static int rx_copybreak 58,2023
static int rx_copybreak 60,2061
#define TX_TIMEOUT 65,2224
#define RUN_AT(RUN_AT93,3011
#define DEV_ALLOC_SKB(DEV_ALLOC_SKB94,3073
#define virt_to_bus(virt_to_bus95,3127
#define bus_to_virt(bus_to_virt96,3176
#define RUN_AT(RUN_AT99,3246
#define DEV_ALLOC_SKB(DEV_ALLOC_SKB100,3280
#define NEW_MULTICAST104,3374
#define IRQ(IRQ108,3444
#define IRQ(IRQ110,3507
#define hard_smp_processor_id(hard_smp_processor_id114,3599
#define test_and_set_bit(test_and_set_bit115,3650
#define USE_SHARED_IRQ120,3807
#define TULIP_TOTAL_SIZE 126,3992
struct netdev_entry tulip_drv 129,4043
int tulip_debug 134,4154
int tulip_debug 136,4191
#define PKT_BUF_SZ	224,7964
#define FULL_DUPLEX_MAGIC	230,8326
#define PCI_VENDOR_ID_DEC	233,8420
#define PCI_DEVICE_ID_TULIP	234,8455
#define PCI_DEVICE_ID_TULIP_FAST	235,8506
#define PCI_DEVICE_ID_DEC_TULIP_PLUS	239,8605
#define PCI_DEVICE_ID_DEC_TULIP_21142	242,8708
#define PCI_VENDOR_ID_LITEON	246,8790
#define	PCI_VENDOR_ID_MXIC	250,8861
#define PCI_DEVICE_ID_MX98713	251,8896
#define PCI_DEVICE_ID_MX98715	252,8933
#define PCI_DEVICE_ID_MX98725	253,8970
enum tbl_flag tbl_flag264,9289
enum tbl_flag { HAS_MII=264,9289
enum tbl_flag { HAS_MII=1, HAS_MEDIA_TABLE 264,9289
enum tbl_flag { HAS_MII=1, HAS_MEDIA_TABLE = 2, CSR12_IN_SROM 264,9289
static struct tulip_chip_table tulip_chip_table265,9358
} tulip_tbl[272,9561
enum chips chips298,10783
enum chips { DC21040=298,10783
enum chips { DC21040=0, DC21041=298,10783
enum chips { DC21040=0, DC21041=1, DC21140=298,10783
enum chips { DC21040=0, DC21041=1, DC21140=2, DC21142=298,10783
enum chips { DC21040=0, DC21041=1, DC21140=2, DC21142=3, DC21143=298,10783
			 LC82C168,299,10851
			 LC82C168, MX98713,299,10851
			 LC82C168, MX98713, MX98715,299,10851
			 LC82C168, MX98713, MX98715, MX98725}299,10851
enum MediaIs MediaIs302,10935
enum MediaIs {MediaIsFD 302,10935
enum MediaIs {MediaIsFD = 1, MediaAlwaysFD=302,10935
enum MediaIs {MediaIsFD = 1, MediaAlwaysFD=2, MediaIsMII=302,10935
enum MediaIs {MediaIsFD = 1, MediaAlwaysFD=2, MediaIsMII=4, MediaIsFx=302,10935
		  MediaIs100=303,11008
static const char media_cap[304,11028
static u16 t21041_csr13[307,11181
static u16 t21041_csr14[308,11254
static u16 t21041_csr15[309,11327
static u16 t21142_csr13[311,11401
static u16 t21142_csr14[312,11474
static u16 t21142_csr15[313,11547
enum tulip_offsets tulip_offsets317,11749
	CSR0=318,11770
	CSR0=0,    CSR1=318,11770
	CSR0=0,    CSR1=0x08,318,11770
	CSR0=0,    CSR1=0x08, CSR2=318,11770
	CSR0=0,    CSR1=0x08, CSR2=0x10,318,11770
	CSR0=0,    CSR1=0x08, CSR2=0x10, CSR3=318,11770
	CSR0=0,    CSR1=0x08, CSR2=0x10, CSR3=0x18,318,11770
	CSR0=0,    CSR1=0x08, CSR2=0x10, CSR3=0x18, CSR4=318,11770
	CSR0=0,    CSR1=0x08, CSR2=0x10, CSR3=0x18, CSR4=0x20,318,11770
	CSR0=0,    CSR1=0x08, CSR2=0x10, CSR3=0x18, CSR4=0x20, CSR5=318,11770
	CSR0=0,    CSR1=0x08, CSR2=0x10, CSR3=0x18, CSR4=0x20, CSR5=0x28,318,11770
	CSR6=319,11837
	CSR6=0x30,319,11837
	CSR6=0x30, CSR7=319,11837
	CSR6=0x30, CSR7=0x38,319,11837
	CSR6=0x30, CSR7=0x38, CSR8=319,11837
	CSR6=0x30, CSR7=0x38, CSR8=0x40,319,11837
	CSR6=0x30, CSR7=0x38, CSR8=0x40, CSR9=319,11837
	CSR6=0x30, CSR7=0x38, CSR8=0x40, CSR9=0x48,319,11837
	CSR6=0x30, CSR7=0x38, CSR8=0x40, CSR9=0x48, CSR10=319,11837
	CSR6=0x30, CSR7=0x38, CSR8=0x40, CSR9=0x48, CSR10=0x50,319,11837
	CSR6=0x30, CSR7=0x38, CSR8=0x40, CSR9=0x48, CSR10=0x50, CSR11=319,11837
	CSR6=0x30, CSR7=0x38, CSR8=0x40, CSR9=0x48, CSR10=0x50, CSR11=0x58,319,11837
	CSR12=320,11906
	CSR12=0x60,320,11906
	CSR12=0x60, CSR13=320,11906
	CSR12=0x60, CSR13=0x68,320,11906
	CSR12=0x60, CSR13=0x68, CSR14=320,11906
	CSR12=0x60, CSR13=0x68, CSR14=0x70,320,11906
	CSR12=0x60, CSR13=0x68, CSR14=0x70, CSR15=320,11906
	CSR12=0x60, CSR13=0x68, CSR14=0x70, CSR15=0x78 320,11906
enum status_bits status_bits323,12029
	TimerInt=324,12048
	TimerInt=0x800,324,12048
	TimerInt=0x800, TPLnkFail=324,12048
	TimerInt=0x800, TPLnkFail=0x1000,324,12048
	TimerInt=0x800, TPLnkFail=0x1000, TPLnkPass=324,12048
	TimerInt=0x800, TPLnkFail=0x1000, TPLnkPass=0x10,324,12048
	NormalIntr=325,12099
	NormalIntr=0x10000,325,12099
	NormalIntr=0x10000, AbnormalIntr=325,12099
	NormalIntr=0x10000, AbnormalIntr=0x8000,325,12099
	RxJabber=326,12141
	RxJabber=0x200,326,12141
	RxJabber=0x200, RxDied=326,12141
	RxJabber=0x200, RxDied=0x100,326,12141
	RxJabber=0x200, RxDied=0x100, RxNoBuf=326,12141
	RxJabber=0x200, RxDied=0x100, RxNoBuf=0x80,326,12141
	RxJabber=0x200, RxDied=0x100, RxNoBuf=0x80, RxIntr=326,12141
	RxJabber=0x200, RxDied=0x100, RxNoBuf=0x80, RxIntr=0x40,326,12141
	TxFIFOUnderflow=327,12199
	TxFIFOUnderflow=0x20,327,12199
	TxFIFOUnderflow=0x20, TxJabber=327,12199
	TxFIFOUnderflow=0x20, TxJabber=0x08,327,12199
	TxFIFOUnderflow=0x20, TxJabber=0x08, TxNoBuf=327,12199
	TxFIFOUnderflow=0x20, TxJabber=0x08, TxNoBuf=0x04,327,12199
	TxFIFOUnderflow=0x20, TxJabber=0x08, TxNoBuf=0x04, TxDied=327,12199
	TxFIFOUnderflow=0x20, TxJabber=0x08, TxNoBuf=0x04, TxDied=0x02,327,12199
	TxFIFOUnderflow=0x20, TxJabber=0x08, TxNoBuf=0x04, TxDied=0x02, TxIntr=327,12199
	TxFIFOUnderflow=0x20, TxJabber=0x08, TxNoBuf=0x04, TxDied=0x02, TxIntr=0x01,327,12199
struct tulip_rx_desc tulip_rx_desc331,12327
struct tulip_tx_desc tulip_tx_desc337,12403
struct medialeaf medialeaf343,12511
struct mediatable mediatable349,12581
struct mediainfo mediainfo356,12753
struct tulip_private tulip_private363,12851
static struct device *root_tulip_dev 437,16043
int tulip_probe(445,16346
static struct device *tulip_probe1(549,19722
static struct fixups fixups838,28777
} eeprom_fixups[842,28898
static const char * block_name[863,29854
#define EEPROM_SIZE 866,30003
#define get_u16(get_u16868,30049
#define get_u16(get_u16870,30092
static void parse_eeprom(873,30162
#define EE_SHIFT_CLK	1037,35340
#define EE_CS	1038,35392
#define EE_DATA_WRITE	1039,35439
#define EE_WRITE_0	1040,35493
#define EE_WRITE_1	1041,35518
#define EE_DATA_READ	1042,35543
#define EE_ENB	1043,35597
#define eeprom_delay(eeprom_delay1049,35850
#define eeprom_delay(eeprom_delay1051,35915
#define EE_WRITE_CMD	1055,36079
#define EE_READ_CMD	1056,36109
#define EE_ERASE_CMD	1057,36139
static int read_eeprom(1059,36170
#define mdio_delay(mdio_delay1102,37447
#define MDIO_SHIFT_CLK	1107,37689
#define MDIO_DATA_WRITE0 1108,37720
#define MDIO_DATA_WRITE1 1109,37753
#define MDIO_ENB	1110,37786
#define MDIO_ENB_IN	1111,37856
#define MDIO_DATA_READ	1112,37885
static int mdio_read(1114,37917
static void mdio_write(1159,39250
tulip_open(1204,40390
#define x86 1242,41742
static void select_media(1381,46064
static void tulip_timer(1560,52265
static void t21142_timer(1759,58857
static void t21142_lnk_change(1824,60927
static void mxic_timer(1874,62391
static void pnic_timer(1891,62814
static void tulip_tx_timeout(1976,65496
tulip_init_ring(2067,68606
tulip_start_xmit(2112,70026
static void tulip_interrupt IRQ(2166,71663
tulip_rx(2349,77037
tulip_close(2460,80544
tulip_get_stats(2527,82121
static int private_ioctl(2540,82441
static unsigned const ethernet_polynomial_le 2611,84496
static inline unsigned ether_crc_le(2612,84556
static void set_rx_mode(2630,84962
static dev_node_t *tulip_attach(2739,88511
static void tulip_detach(2764,89195
struct driver_operations tulip_ops 2781,89621
static int debug 2801,90230
init_module(2804,90258
cleanup_module(2818,90423

drivers/net/dgrs.c,2026
static char *version 76,3387
	#define IOREMAP(IOREMAP106,4063
	#define IOUNMAP(IOUNMAP107,4111
	#define COPY_FROM_USER(COPY_FROM_USER108,4150
	#define COPY_TO_USER(COPY_TO_USER109,4215
	#define IOREMAP(IOREMAP112,4309
	#define IOUNMAP(IOUNMAP113,4356
	#define COPY_FROM_USER(COPY_FROM_USER114,4393
	#define COPY_TO_USER(COPY_TO_USER115,4457
typedef unsigned char uchar;uchar121,4554
typedef unsigned int bool;bool122,4583
#define vol 123,4610
	extern int	dgrs_firmnum;140,4952
	extern char	dgrs_firmver[141,4978
	extern char	dgrs_firmdate[142,5007
	extern uchar	dgrs_code[143,5037
	extern int	dgrs_ncode;144,5064
#define	OUTB(OUTB150,5165
#define	OUTW(OUTW151,5205
#define	OUTL(OUTL152,5245
#define	S2H(S2H158,5426
#define	S2HN(S2HN159,5491
#define	H2S(H2S160,5557
#define	S2DMA(S2DMA167,5799
int	dgrs_debug 173,5987
int	dgrs_dma 174,6007
int	dgrs_spantree 175,6025
int	dgrs_hashexpire 176,6049
uchar	dgrs_ipaddr[177,6075
uchar	dgrs_iptrap[178,6125
__u32	dgrs_ipxnet 179,6175
int	dgrs_nicmode 180,6199
	static struct device *dgrs_root_dev 186,6273
} DGRS_PRIV;DGRS_PRIV245,8227
proc_reset(252,8300
check_board_dma(276,8724
do_plx_dma(349,10776
dgrs_rcv_frame(455,13745
static int dgrs_start_xmit(692,19054
#	define		mymin(mymin700,19261
dgrs_open(791,21008
static int dgrs_close(807,21186
static struct net_device_stats *dgrs_get_stats(822,21350
static void dgrs_set_multicast_list(833,21547
static int dgrs_ioctl(843,21741
static void dgrs_intr(906,23131
__initfunc(994,24936
__initfunc(1153,29038
__initfunc(1227,30663
__initfunc(1242,30948
static int is2iv[1361,33415
static int is2iv[8] __initdata 1361,33415
__initfunc(1363,33481
static int	debug 1517,37345
static int	dma 1518,37368
static int	hashexpire 1519,37389
static int	spantree 1520,37417
static int	ipaddr[1521,37443
static int	iptrap[1522,37474
static __u32	ipxnet 1523,37505
static int	nicmode 1524,37531
init_module(1536,37779
cleanup_module(1587,38689
__initfunc(1617,39291

drivers/net/hp100.c,2746
#define HP100_DEFAULT_PRIORITY_TX 76,2831
#define LINUX_2_1111,3728
typedef struct net_device_stats hp100_stats_t;hp100_stats_t112,3746
EXPORT_NO_SYMBOLS;113,3793
#define ioremap 116,3844
#define iounmap 117,3867
typedef struct enet_statistics hp100_stats_t;hp100_stats_t118,3889
#define __initfunc(__initfunc122,3962
#define HP100_BUS_ISA 133,4080
#define HP100_BUS_EISA 134,4108
#define HP100_BUS_PCI 135,4136
#define PCI_DEVICE_ID_HP_J2585B 138,4197
#define PCI_VENDOR_ID_COMPEX 141,4272
#define PCI_DEVICE_ID_COMPEX_ENET100VG4 144,4355
#define PCI_VENDOR_ID_COMPEX2 147,4439
#define PCI_DEVICE_ID_COMPEX2_100VG 150,4519
#define HP100_REGION_SIZE	153,4570
#define HP100_MAX_PACKET_SIZE	155,4620
#define HP100_MIN_PACKET_SIZE	156,4659
#define HP100_DEFAULT_RX_RATIO	160,4795
#define HP100_DEFAULT_PRIORITY_TX 165,4938
struct hp100_eisa_id hp100_eisa_id172,5005
struct hp100_pci_id hp100_pci_id178,5078
struct hp100_private hp100_private183,5140
static struct hp100_eisa_id hp100_eisa_ids[228,6578
#define HP100_EISA_IDS_SIZE	278,8251
static struct hp100_pci_id hp100_pci_ids[280,8334
#define HP100_PCI_IDS_SIZE	287,8604
static int hp100_rx_ratio 289,8684
static int hp100_priority_tx 290,8736
static int hp100_mode 291,8794
static void wait(339,10964
__initfunc(350,11176
__initfunc(527,17275
static void hp100_hwinit(945,30349
static void hp100_mmuinit(1041,33280
static int hp100_open(1234,39397
static int hp100_close(1278,40487
static void hp100_init_pdls(1313,41210
static int hp100_init_rxpdl(1366,42862
static int hp100_init_txpdl(1392,43748
int hp100_build_rx_pdl(1412,44416
static void hp100_rxfill(1496,47268
static void hp100_BM_shutdown(1544,48446
static int hp100_start_xmit_bm(1638,51597
static void hp100_clean_txring(1776,55601
static int hp100_start_xmit(1818,56679
static void hp100_rx(1988,61814
static void hp100_rx_bm(2107,65459
static hp100_stats_t *hp100_get_stats(2236,69026
static void hp100_update_stats(2250,69305
static void hp100_misc_interrupt(2275,69981
static void hp100_clear_stats(2289,70319
static void hp100_set_multicast_list(2317,70866
static void hp100_interrupt(2470,75767
static void hp100_start_interface(2613,79626
static void hp100_stop_interface(2680,81617
static void hp100_load_eeprom(2718,82729
static int hp100_sense_lan(2741,83450
static int hp100_down_vg_link(2783,84608
static int hp100_login_to_vg_hub(2877,87711
static void hp100_cascade_reset(3050,93890
void hp100_RegisterDump(3087,94905
int hp100_port[3128,95878
char hp100_name[3134,95996
static char devname[3137,96116
static char *hp100_name[3138,96175
static struct device *hp100_devlist[3144,96360
int init_module(3158,96745
void cleanup_module(3191,97742

drivers/net/wavelan.h,4551
#define	_WAVELAN_H20,587
const char	MAC_ADDRESSES[27,868
#define WAVELAN_ADDR_SIZE	36,1189
#define WAVELAN_MTU	38,1246
#define	MAXDATAZ	40,1310
typedef union hacs_u	hacs_u;hacs_u48,1527
union hacs_uhacs_u49,1556
#define		HACR_RESET	52,1623
#define		HACR_CA	53,1669
#define		HACR_16BITS	54,1733
#define		HACR_OUT0	55,1798
#define		HACR_OUT1	57,1893
#define		HACR_82586_INT_ENABLE	59,1988
#define		HACR_MMC_INT_ENABLE	60,2056
#define		HACR_INTR_CLR_ENABLE	61,2120
#define		HASR_82586_INTR	63,2248
#define		HASR_MMC_INTR	64,2316
#define		HASR_MMC_BUSY	65,2380
#define		HASR_PSA_BUSY	66,2437
typedef struct ha_t	ha_t;ha_t69,2510
struct ha_tha_t70,2536
#define 		ha_command	73,2602
#define 		ha_status	74,2640
#define HA_SIZE	84,3099
#define	hoff(hoff86,3120
#define	HACR(HACR87,3211
#define	HASR(HASR88,3248
#define	MMCR(MMCR89,3284
#define	PIOR0(PIOR090,3318
#define	PIOP0(PIOP091,3353
#define	PIOR1(PIOR192,3388
#define	PIOP1(PIOP193,3423
#define	PIOR2(PIOR294,3458
#define	PIOP2(PIOP295,3493
#define STATIC_PIO	100,3573
#define AUTOINCR_PIO	102,3647
#define AUTODECR_PIO	104,3731
#define PARAM_ACCESS_PIO	106,3815
#define PIO_MASK	108,3911
#define PIOM(PIOM109,3951
#define	HACR_DEFAULT	111,4013
#define	HACR_INTRON	112,4147
#define OFFSET_RU	120,4370
#define OFFSET_CU	121,4414
#define OFFSET_SCB	122,4458
#define OFFSET_ISCP	123,4508
#define OFFSET_SCP	124,4559
#define	RXBLOCKZ	126,4596
#define	TXBLOCKZ	127,4656
#define	NRXBLOCKS	129,4739
#define	NTXBLOCKS	130,4795
typedef struct psa_t	psa_t;psa_t137,4965
struct psa_tpsa_t138,4993
#define		PSA_UNIVERSAL	154,5963
#define		PSA_LOCAL	155,6015
#define		PSA_COMP_PC_AT_915	157,6118
#define		PSA_COMP_PC_MC_915	158,6171
#define		PSA_COMP_PC_AT_2400	159,6223
#define		PSA_COMP_PC_MC_2400	160,6276
#define		PSA_COMP_PCMCIA_915	161,6330
#define		PSA_FEATURE_CALL_CODE	164,6534
#define		PSA_SUBBAND_915	166,6657
#define		PSA_SUBBAND_2425	167,6706
#define		PSA_SUBBAND_2460	168,6751
#define		PSA_SUBBAND_2484	169,6796
#define		PSA_SUBBAND_2430_5	170,6841
#define	PSA_SIZE	186,7783
#define	psaoff(psaoff190,7905
typedef struct mmw_t	mmw_t;mmw_t197,8145
struct mmw_tmmw_t198,8173
#define	MMW_ENCR_ENABLE_MODE	202,8311
#define	MMW_ENCR_ENABLE_EN	203,8375
#define	MMW_DES_IO_INVERT_RES	206,8542
#define	MMW_DES_IO_INVERT_CTRL	207,8592
#define	MMW_LOOPT_SEL_DIS_NWID	210,8760
#define	MMW_LOOPT_SEL_INT	211,8826
#define	MMW_LOOPT_SEL_LS	212,8891
#define MMW_LOOPT_SEL_LT3A	213,8960
#define	MMW_LOOPT_SEL_LT3B	214,9010
#define	MMW_LOOPT_SEL_LT3C	215,9060
#define	MMW_LOOPT_SEL_LT3D	216,9110
#define MMW_ANTEN_SEL_SEL	222,9455
#define	MMW_ANTEN_SEL_ALG_EN	223,9517
#define	MMW_FEE_CTRL_PRE	243,10674
#define	MMW_FEE_CTRL_DWLD	244,10741
#define	MMW_FEE_CTRL_CMD	245,10802
#define	MMW_FEE_CTRL_READ	246,10856
#define	MMW_FEE_CTRL_WREN	247,10898
#define	MMW_FEE_CTRL_WRITE	248,10948
#define	MMW_FEE_CTRL_WRALL	249,11009
#define	MMW_FEE_CTRL_WDS	250,11076
#define	MMW_FEE_CTRL_PRREAD	251,11126
#define	MMW_FEE_CTRL_PREN	252,11197
#define	MMW_FEE_CTRL_PRCLEAR	253,11258
#define	MMW_FEE_CTRL_PRWRITE	254,11323
#define	MMW_FEE_CTRL_PRDS	255,11397
#define	MMW_FEE_ADDR_CHANNEL	259,11570
#define	MMW_FEE_ADDR_OFFSET	260,11630
#define	MMW_FEE_ADDR_EN	261,11692
#define	MMW_FEE_ADDR_DS	262,11755
#define	MMW_FEE_ADDR_ALL	263,11819
#define	MMW_FEE_ADDR_CLEAR	264,11879
#define	MMW_EXT_ANT_EXTANT	269,12120
#define	MMW_EXT_ANT_POL	270,12182
#define	MMW_EXT_ANT_INTERNAL	271,12242
#define	MMW_EXT_ANT_EXTERNAL	272,12299
#define	MMW_EXT_ANT_IQ_TEST	273,12356
#define	MMW_SIZE	276,12426
#define	mmwoff(mmwoff278,12447
typedef struct mmr_t	mmr_t;mmr_t283,12602
struct mmr_tmmr_t284,12630
#define	MMR_DES_AVAIL_DES	289,12819
#define	MMR_DES_AVAIL_AES	290,12871
#define	MMR_DCE_STATUS_RX_BUSY	294,13091
#define	MMR_DCE_STATUS_LOOPT_IND	295,13148
#define	MMR_DCE_STATUS_TX_BUSY	296,13212
#define	MMR_DCE_STATUS_JBR_EXPIRED	297,13270
#define MMR_DCE_STATUS	298,13337
#define	MMR_THR_PRE_SET	307,13891
#define	MMR_THR_PRE_SET_CUR	308,13951
#define	MMR_SIGNAL_LVL	310,14067
#define	MMR_SIGNAL_LVL_VALID	311,14116
#define	MMR_SILENCE_LVL	313,14242
#define	MMR_SILENCE_LVL_VALID	314,14293
#define	MMR_SGNL_QUAL	316,14412
#define	MMR_SGNL_QUAL_ANT	317,14462
#define	MMR_FEE_STATUS_ID	323,14757
#define	MMR_FEE_STATUS_DWLD	324,14813
#define	MMR_FEE_STATUS_BUSY	325,14874
#define	MMR_SIZE	331,15111
#define	mmroff(mmroff333,15132
typedef union mm_tmm_t336,15267
} mm_t;mm_t340,15371

drivers/net/ewrk3.h,5635
#define EWRK3_CSR 18,486
#define EWRK3_CR 19,555
#define EWRK3_ICR 20,613
#define EWRK3_TSR 21,681
#define EWRK3_RSVD1 22,747
#define EWRK3_RSVD2 23,797
#define EWRK3_FMQ 24,847
#define EWRK3_FMQC 25,906
#define EWRK3_RQ 26,973
#define EWRK3_RQC 27,1028
#define EWRK3_TQ 28,1091
#define EWRK3_TQC 29,1147
#define EWRK3_TDQ 30,1211
#define EWRK3_TDQC 31,1272
#define EWRK3_PIR1 32,1341
#define EWRK3_PIR2 33,1404
#define EWRK3_DATA 34,1467
#define EWRK3_IOPR 35,1522
#define EWRK3_IOBR 36,1581
#define EWRK3_MPR 37,1640
#define EWRK3_MBR 38,1702
#define EWRK3_APROM 39,1764
#define EWRK3_EPROM1 40,1818
#define EWRK3_EPROM2 41,1882
#define EWRK3_PAR0 42,1946
#define EWRK3_PAR1 43,2015
#define EWRK3_PAR2 44,2084
#define EWRK3_PAR3 45,2153
#define EWRK3_PAR4 46,2222
#define EWRK3_PAR5 47,2291
#define EWRK3_CMR 48,2360
#define PAGE0_FMQ 53,2462
#define PAGE0_RQ 54,2522
#define PAGE0_TQ 55,2578
#define PAGE0_TDQ 56,2635
#define PAGE0_HTE 57,2697
#define PAGE0_RSVD 58,2758
#define PAGE0_USRD 59,2809
#define CSR_RA	64,2927
#define CSR_PME	65,2970
#define CSR_MCE	66,3026
#define CSR_TNE	67,3076
#define CSR_RNE	68,3132
#define CSR_TXD	69,3183
#define CSR_RXD	70,3226
#define CR_APD	75,3323
#define CR_PSEL	76,3368
#define CR_LBCK	77,3421
#define CR_FDUP	78,3465
#define CR_FBUS	79,3512
#define CR_EN_16	80,3576
#define CR_LED	81,3634
#define ICR_IE	86,3744
#define ICR_IS	87,3788
#define ICR_TNEM	88,3834
#define ICR_RNEM	89,3881
#define ICR_TXDM	90,3928
#define ICR_RXDM	91,3975
#define TSR_NCL	96,4085
#define TSR_ID	97,4133
#define TSR_LCL	98,4179
#define TSR_ECL	99,4222
#define TSR_RCNTR	100,4271
#define EEPROM_INIT	105,4373
#define EEPROM_WR_EN	106,4424
#define EEPROM_WR	107,4484
#define EEPROM_WR_DIS	108,4534
#define EEPROM_RD	109,4596
#define EISA_REGS_EN	114,4702
#define EISA_IOB 115,4771
#define CMR_RA 120,4916
#define CMR_WB 121,4965
#define CMR_LINK 122,5016
#define CMR_POLARITY 123,5057
#define CMR_NO_EEPROM	124,5106
#define CMR_HS 125,5165
#define CMR_PNP 126,5234
#define CMR_DRAM 127,5285
#define CMR_0WS 128,5351
#define R_ROK 134,5461
#define R_IAM 135,5511
#define R_MCM 136,5567
#define R_DBE 137,5614
#define R_CRC 138,5663
#define R_PLL 139,5704
#define TCR_SQEE 145,5809
#define TCR_SED 146,5875
#define TCR_QMODE 147,5933
#define TCR_LAB 148,5975
#define TCR_PAD 149,6035
#define TCR_IFC 150,6085
#define TCR_ISA 151,6137
#define T_VSTS 157,6249
#define T_CTU 158,6293
#define T_SQE 159,6341
#define T_NCL 160,6393
#define T_LCL 161,6444
#define T_ID 162,6495
#define T_COLL 163,6545
#define T_XCOLL 164,6594
#define T_MCOLL 165,6653
#define T_OCOLL 166,6711
#define T_NOCOLL 167,6763
#define T_XUR 168,6815
#define T_TXE 169,6873
#define EISA_ID 175,6978
#define EISA_ID0 176,7042
#define EISA_ID1 177,7107
#define EISA_ID2 178,7172
#define EISA_ID3 179,7237
#define EISA_CR 180,7302
#define EEPROM_MEMB 185,7392
#define EEPROM_IOB 186,7421
#define EEPROM_EISA_ID0 187,7450
#define EEPROM_EISA_ID1 188,7479
#define EEPROM_EISA_ID2 189,7508
#define EEPROM_EISA_ID3 190,7537
#define EEPROM_MISC0 191,7566
#define EEPROM_MISC1 192,7595
#define EEPROM_PNAME7 193,7624
#define EEPROM_PNAME6 194,7653
#define EEPROM_PNAME5 195,7682
#define EEPROM_PNAME4 196,7711
#define EEPROM_PNAME3 197,7740
#define EEPROM_PNAME2 198,7769
#define EEPROM_PNAME1 199,7798
#define EEPROM_PNAME0 200,7827
#define EEPROM_SWFLAGS 201,7856
#define EEPROM_HWCAT 202,7885
#define EEPROM_NETMAN2 203,7914
#define EEPROM_REVLVL 204,7943
#define EEPROM_NETMAN0 205,7972
#define EEPROM_NETMAN1 206,8001
#define EEPROM_CHIPVER 207,8030
#define EEPROM_SETUP 208,8059
#define EEPROM_PADDR0 209,8088
#define EEPROM_PADDR1 210,8117
#define EEPROM_PADDR2 211,8146
#define EEPROM_PADDR3 212,8175
#define EEPROM_PADDR4 213,8204
#define EEPROM_PADDR5 214,8233
#define EEPROM_PA_CRC 215,8262
#define EEPROM_CHKSUM 216,8291
#define EEPROM_MAX 221,8360
#define RBE_SHADOW	226,8448
#define READ_AHEAD 227,8507
#define IRQ_SEL2 228,8564
#define IRQ_SEL 229,8630
#define FAST_BUS 230,8687
#define ENA_16 231,8750
#define WRITE_BEHIND 232,8820
#define _0WS_ENA 233,8879
#define NETMAN_POL 238,8982
#define NETMAN_LINK 239,9036
#define NETMAN_CCE 240,9086
#define SW_SQE	245,9173
#define SW_LAB	246,9222
#define SW_INIT	247,9273
#define SW_TIMEOUT 248,9313
#define SW_REMOTE 249,9371
#define SETUP_APD	254,9462
#define SETUP_PS	255,9508
#define SETUP_MP	256,9548
#define SETUP_1TP	257,9586
#define SETUP_1COAX	258,9626
#define SETUP_DRAM	259,9670
#define MGMT_CCE	264,9759
#define LeMAC 269,9836
#define LeMAC2 270,9865
#define EEPROM_WAIT_TIME 276,9919
#define EISA_EN 277,9981
#define HASH_TABLE_LEN 279,10045
#define XCT 281,10090
#define PRELOAD 282,10150
#define MASK_INTERRUPTS 284,10203
#define UNMASK_INTERRUPTS 285,10231
#define EEPROM_OFFSET(EEPROM_OFFSET287,10260
#define	EWRK3IOCTL	294,10372
struct ewrk3_ioctl ewrk3_ioctl296,10407
#define EWRK3_GET_HWADDR	305,10672
#define EWRK3_SET_HWADDR	306,10733
#define EWRK3_SET_PROM 307,10794
#define EWRK3_CLR_PROM 308,10851
#define EWRK3_SAY_BOO	309,10910
#define EWRK3_GET_MCA 310,10985
#define EWRK3_SET_MCA 311,11045
#define EWRK3_CLR_MCA 312,11105
#define EWRK3_MCA_EN 313,11168
#define EWRK3_GET_STATS 314,11237
#define EWRK3_CLR_STATS 315,11300
#define EWRK3_GET_CSR 316,11367
#define EWRK3_SET_CSR 317,11433
#define EWRK3_GET_EEPROM 318,11499
#define EWRK3_SET_EEPROM	319,11562
#define EWRK3_GET_CMR 320,11622
#define EWRK3_CLR_TX_CUT_THRU 321,11688
#define EWRK3_SET_TX_CUT_THRU	322,11761

drivers/net/hp100.h,10458
#define HP100_PAGE_PERFORMANCE	26,844
#define HP100_PAGE_MAC_ADDRESS	27,892
#define HP100_PAGE_HW_MAP	28,940
#define HP100_PAGE_EEPROM_CTRL	29,983
#define HP100_PAGE_MAC_CTRL	30,1031
#define HP100_PAGE_MMU_CFG	31,1076
#define HP100_PAGE_ID_MAC_ADDR	32,1120
#define HP100_PAGE_MMU_POINTER	33,1168
#define HP100_REG_HW_ID	38,1266
#define HP100_REG_TRACE	39,1336
#define HP100_REG_PAGING	40,1406
#define HP100_REG_OPTION_LSW	42,1556
#define HP100_REG_OPTION_MSW	43,1630
#define HP100_REG_IRQ_STATUS	47,1775
#define HP100_REG_IRQ_MASK	48,1849
#define HP100_REG_FRAGMENT_LEN	49,1921
#define HP100_REG_OFFSET	52,2156
#define HP100_REG_DATA32	53,2226
#define HP100_REG_DATA16	54,2296
#define HP100_REG_TX_MEM_FREE	55,2366
#define HP100_REG_TX_PDA_L 56,2441
#define HP100_REG_TX_PDA_H 57,2520
#define HP100_REG_RX_PKT_CNT	58,2599
#define HP100_REG_TX_PKT_CNT	59,2673
#define HP100_REG_RX_PDL 60,2747
#define HP100_REG_TX_PDL 61,2826
#define HP100_REG_RX_PDA 62,2905
#define HP100_REG_SL_EARLY 64,3061
#define HP100_REG_STAT_DROPPED 65,3139
#define HP100_REG_STAT_ERRORED 66,3215
#define HP100_REG_STAT_ABORT 67,3290
#define HP100_REG_RX_RING 68,3370
#define HP100_REG_32_FRAGMENT_LEN 69,3447
#define HP100_REG_32_OFFSET 70,3527
#define HP100_REG_MAC_ADDR	74,3645
#define HP100_REG_HASH_BYTE0	75,3714
#define HP100_REG_MEM_MAP_LSW	79,3864
#define HP100_REG_MEM_MAP_MSW	80,3939
#define HP100_REG_IO_MAP	81,4014
#define HP100_REG_IRQ_CHANNEL	82,4084
#define HP100_REG_SRAM	83,4159
#define HP100_REG_BM	84,4228
#define HP100_REG_MODECTRL1 87,4331
#define HP100_REG_MODECTRL2 88,4400
#define HP100_REG_PCICTRL1 89,4469
#define HP100_REG_PCICTRL2 90,4533
#define HP100_REG_PCIBUSMLAT 91,4597
#define HP100_REG_EARLYTXCFG 92,4674
#define HP100_REG_EARLYRXCFG 93,4752
#define HP100_REG_ISAPNPCFG1 94,4829
#define HP100_REG_ISAPNPCFG2 95,4907
#define HP100_REG_EEPROM_CTRL	99,5060
#define HP100_REG_BOOTROM_CTRL 100,5135
#define HP100_REG_10_LAN_CFG_1	104,5260
#define HP100_REG_10_LAN_CFG_2 105,5335
#define HP100_REG_VG_LAN_CFG_1	106,5414
#define HP100_REG_VG_LAN_CFG_2 107,5489
#define HP100_REG_MAC_CFG_1	108,5569
#define HP100_REG_MAC_CFG_2	109,5642
#define HP100_REG_MAC_CFG_3 110,5715
#define HP100_REG_MAC_CFG_4 111,5788
#define HP100_REG_DROPPED	112,5858
#define HP100_REG_CRC	113,5929
#define HP100_REG_ABORT	114,5997
#define HP100_REG_TRAIN_REQUEST 115,6067
#define HP100_REG_TRAIN_ALLOW 116,6143
#define HP100_REG_RX_MEM_STOP	120,6262
#define HP100_REG_TX_MEM_STOP	121,6337
#define HP100_REG_PDL_MEM_STOP 122,6412
#define HP100_REG_ECB_MEM_STOP 123,6485
#define HP100_REG_BOARD_ID	127,6615
#define HP100_REG_BOARD_IO_CHCK 128,6687
#define HP100_REG_SOFT_MODEL	129,6764
#define HP100_REG_LAN_ADDR	130,6838
#define HP100_REG_LAN_ADDR_CHCK 131,6910
#define HP100_REG_PTR_RXSTART	135,7067
#define HP100_REG_PTR_RXEND	136,7142
#define HP100_REG_PTR_TXSTART	137,7215
#define HP100_REG_PTR_TXEND	138,7290
#define HP100_REG_PTR_RPDLSTART 139,7363
#define HP100_REG_PTR_RPDLEND 140,7400
#define HP100_REG_PTR_RINGPTRS 141,7437
#define HP100_REG_PTR_MEMDEBUG 142,7474
#define HP100_HW_ID_CASCADE 149,7665
#define HP100_CHIPID_MASK 156,7865
#define HP100_CHIPID_SHASTA 157,7905
#define HP100_CHIPID_RAINIER 159,8052
#define HP100_CHIPID_LASSEN 161,8203
#define HP100_DEBUG_EN	168,8434
#define HP100_RX_HDR	169,8504
#define HP100_MMAP_DIS	171,8653
#define HP100_EE_EN	175,8944
#define HP100_BM_WRITE	176,9012
#define HP100_BM_READ	177,9083
#define HP100_TRI_INT	178,9153
#define HP100_MEM_EN	179,9221
#define HP100_IO_EN	182,9422
#define HP100_BOOT_EN	183,9479
#define HP100_FAKE_INT	184,9540
#define HP100_INT_EN	185,9583
#define HP100_HW_RST	186,9642
#define HP100_PRIORITY_TX	193,9858
#define HP100_EE_LOAD	194,9926
#define HP100_ADV_NXT_PKT	195,9992
#define HP100_TX_CMD	197,10141
#define HP100_RX_EARLY_INT 206,10517
#define HP100_RX_PDA_ZERO 207,10556
#define HP100_RX_PDL_FILL_COMPL 208,10595
#define HP100_RX_PACKET	209,10634
#define HP100_RX_ERROR	210,10700
#define HP100_TX_PDA_ZERO 211,10766
#define HP100_TX_SPACE_AVAIL	212,10842
#define HP100_TX_COMPLETE	213,10916
#define HP100_MISC_ERROR 214,10986
#define HP100_TX_ERROR	215,11066
#define HP100_AUTO_COMPARE	221,11233
#define HP100_FREE_SPACE	222,11303
#define HP100_ZERO_WAIT_EN	228,11427
#define HP100_IRQ_SCRAMBLE 229,11497
#define HP100_BOND_HP 230,11534
#define HP100_LEVEL_IRQ	231,11571
#define HP100_IRQMASK	233,11713
#define HP100_RAM_SIZE_MASK	239,11831
#define HP100_RAM_SIZE_SHIFT	240,11897
#define HP100_BM_BURST_RD 246,12036
#define HP100_BM_BURST_WR 248,12188
#define HP100_BM_MASTER	250,12340
#define HP100_BM_PAGE_CK 251,12395
#define HP100_BM_PCI_8CLK 253,12536
#define HP100_TX_DUALQ 260,12685
#define HP100_ISR_CLRMODE 262,12766
#define HP100_EE_NOLOAD 264,12921
#define HP100_TX_CNT_FLG 266,13061
#define HP100_PDL_USE3 267,13138
#define HP100_BUSTYPE_MASK 270,13361
#define HP100_EE_MASK 276,13506
#define HP100_DIS_CANCEL 278,13647
#define HP100_EN_PDL_WB 279,13720
#define HP100_EN_BUS_FAIL 281,13872
#define HP100_LO_MEM 288,14098
#define HP100_NO_MEM 289,14177
#define HP100_USE_ISA 291,14307
#define HP100_IRQ_HI_MASK 293,14460
#define HP100_PCI_IRQ_HI_MASK 294,14523
#define HP100_RD_LINE_PDL 300,14691
#define HP100_RD_TX_DATA_MASK 301,14771
#define HP100_MWI 302,14848
#define HP100_ARB_MODE 303,14928
#define HP100_STOP_EN 304,14997
#define HP100_IGNORE_PAR 306,15152
#define HP100_PCI_RESET 307,15232
#define HP100_EN_EARLY_TX 313,15396
#define HP100_EN_ADAPTIVE 314,15460
#define HP100_EN_TX_UR_IRQ 315,15529
#define HP100_EN_LOW_TX 316,15595
#define HP100_ET_CNT_MASK 317,15661
#define HP100_EN_EARLY_RX 323,15828
#define HP100_EN_LOW_RX 324,15893
#define HP100_RX_TRIP_MASK 325,15960
#define HP100_EEPROM_LOAD	334,16241
#define HP100_MAC10_SEL	342,16577
#define HP100_AUI_SEL	343,16638
#define HP100_LOW_TH	344,16696
#define HP100_LINK_BEAT_DIS	345,16762
#define HP100_LINK_BEAT_ST	346,16831
#define HP100_R_ROL_ST	347,16900
#define HP100_AUI_ST	349,17039
#define HP100_SQU_ST	355,17208
#define HP100_FULLDUP 357,17355
#define HP100_DOT3_MAC 358,17434
#define HP100_AUTO_SEL_10	363,17563
#define HP100_XCVR_LXT901_10	364,17611
#define HP100_XCVR_7213	365,17677
#define HP100_XCVR_82503	366,17729
#define HP100_FRAME_FORMAT	372,17886
#define HP100_BRIDGE	373,17948
#define HP100_PROM_MODE	374,18016
#define HP100_REPEATER	376,18147
#define HP100_VG_SEL	383,18396
#define HP100_LINK_UP_ST	384,18465
#define HP100_LINK_CABLE_ST	385,18531
#define HP100_LOAD_ADDR	387,18667
#define HP100_LINK_CMD	390,18868
#define HP100_TRN_DONE 393,19072
#define HP100_LINK_GOOD_ST	396,19307
#define HP100_VG_RESET	397,19379
#define HP100_RX_IDLE	404,19531
#define HP100_TX_IDLE	405,19602
#define HP100_RX_EN	406,19669
#define HP100_TX_EN	407,19728
#define HP100_ACC_ERRORED	408,19790
#define HP100_ACC_MC	409,19864
#define HP100_ACC_BC	410,19936
#define HP100_ACC_PHY	411,20008
#define HP100_MAC1MODEMASK	412,20081
#define HP100_MAC1MODE1	413,20133
#define HP100_MAC1MODE2	414,20207
#define HP100_MAC1MODE3	415,20237
#define HP100_MAC1MODE4	416,20293
#define HP100_MAC1MODE5	417,20349
#define HP100_MAC1MODE6	418,20425
#define HP100_MAC1MODE7	422,20694
#define HP100_TR_MODE	428,20841
#define HP100_TX_SAME	429,20914
#define HP100_LBK_XCVR	430,20986
#define HP100_LBK_MAC	432,21116
#define HP100_CRC_I	433,21183
#define HP100_ACCNA 434,21253
#define HP100_KEEP_CRC	436,21375
#define HP100_ACCFA 438,21524
#define HP100_MAC2MODEMASK	440,21648
#define HP100_MAC2MODE1	441,21680
#define HP100_MAC2MODE2	442,21710
#define HP100_MAC2MODE3	443,21740
#define HP100_MAC2MODE4	444,21770
#define HP100_MAC2MODE5	445,21800
#define HP100_MAC2MODE6	446,21830
#define HP100_MAC2MODE7	447,21860
#define HP100_PACKET_PACE 453,21981
#define HP100_LRF_EN 459,22277
#define HP100_AUTO_MODE 461,22393
#define HP100_MAC_SEL_ST 467,22554
#define HP100_LINK_FAIL_ST 469,22673
#define HP100_MACRQ_REPEATER 476,22966
#define HP100_MACRQ_PROMSC 479,23131
#define HP100_MACRQ_FRAMEFMT_EITHER 485,23394
#define HP100_MACRQ_FRAMEFMT_802_3 486,23471
#define HP100_MACRQ_FRAMEFMT_802_5 487,23545
#define HP100_CARD_MACVER 488,23626
#define HP100_MALLOW_REPEATER 489,23710
#define HP100_MALLOW_PROMSC 491,23827
#define HP100_MALLOW_FRAMEFMT 497,24090
#define HP100_MALLOW_ACCDENIED 500,24248
#define HP100_MALLOW_CONFIGURE 501,24305
#define HP100_MALLOW_DUPADDR 502,24362
#define HP100_HUB_MACVER 503,24419
#define HP100_SET_HB	511,24692
#define HP100_SET_LB	512,24761
#define HP100_RESET_HB	513,24835
#define HP100_RESET_LB	514,24908
#define HP100_LAN_100	519,25009
#define HP100_LAN_10	520,25068
#define HP100_LAN_ERR	521,25126
#define TRUE 523,25190
#define FALSE 524,25205
#define MAX_RX_PDL 531,25310
#define MAX_RX_FRAG 532,25369
#define MAX_TX_PDL 533,25431
#define MAX_TX_FRAG 534,25466
#define MAX_RINGSIZE 538,25649
#define MIN_ETHER_SIZE 541,25766
#define MAX_ETHER_SIZE 542,25801
typedef struct hp100_ring hp100_ring546,25977
} hp100_ring_t;hp100_ring_t552,26270
#define HP100_PKT_LEN_MASK	557,26322
#define HP100_RX_PRI	562,26529
#define HP100_SDF_ERR	563,26595
#define HP100_SKEW_ERR	564,26664
#define HP100_BAD_SYMBOL_ERR	565,26731
#define HP100_RCV_IPM_ERR	566,26809
#define HP100_SYMBOL_BAL_ERR	568,26941
#define HP100_VG_ALN_ERR	569,27016
#define HP100_TRUNC_ERR	570,27085
#define HP100_RUNT_ERR	571,27160
#define HP100_ALN_ERR	573,27290
#define HP100_CRC_ERR	574,27351
#define HP100_MULTI_ADDR_HASH	578,27482
#define HP100_BROADCAST_ADDR	579,27559
#define HP100_MULTI_ADDR_NO_HASH 580,27621
#define HP100_PHYS_ADDR_MATCH	581,27706
#define HP100_PHYS_ADDR_NO_MATCH 582,27781
#define hp100_inb(hp100_inb588,27883
#define hp100_inw(hp100_inw590,27950
#define hp100_inl(hp100_inl592,28010
#define hp100_outb(hp100_outb594,28070
#define hp100_outw(hp100_outw596,28144
#define hp100_outl(hp100_outl598,28218
#define hp100_orb(hp100_orb600,28292
#define hp100_orw(hp100_orw602,28401
#define hp100_andb(hp100_andb604,28510
#define hp100_andw(hp100_andw606,28620
#define hp100_page(hp100_page609,28731
#define hp100_ints_off(hp100_ints_off611,28814
#define hp100_ints_on(hp100_ints_on613,28911
#define hp100_mem_map_enable(hp100_mem_map_enable615,29005
#define hp100_mem_map_disable(hp100_mem_map_disable617,29110

drivers/net/eepro.c,6035
static const char *version 94,3426
#define compat_dev_kfree_skb(compat_dev_kfree_skb156,5025
#define SLOW_DOWN 158,5163
#define compat_init_func(compat_init_func160,5207
#define compat_init_data 161,5250
#define compat_dev_kfree_skb(compat_dev_kfree_skb166,5313
#define test_and_set_bit(test_and_set_bit167,5386
#define SLOW_DOWN 168,5433
#define compat_init_func(compat_init_func169,5464
#define compat_init_data170,5494
static unsigned int eepro_portlist[177,5649
static unsigned int eepro_portlist[] compat_init_data 177,5649
#define NET_DEBUG 189,6043
static unsigned int net_debug 191,6070
#define EEPRO_IO_EXTENT	194,6171
#define	LAN595	197,6227
#define	LAN595TX	198,6245
#define	LAN595FX	199,6264
struct eepro_local eepro_local202,6339
#define SA_ADDR0 220,7020
#define SA_ADDR1 221,7068
#define SA_ADDR2 222,7090
#define GetBit(GetBit224,7113
#define ee_PnP 227,7173
#define ee_Word1 228,7227
#define ee_BusWidth 229,7265
#define ee_FlashAddr 230,7304
#define ee_FlashMask 231,7348
#define ee_AutoIO 232,7386
#define ee_reserved0 233,7416
#define ee_Flash 234,7450
#define ee_AutoNeg 235,7493
#define ee_IO0 236,7549
#define ee_IO0Mask 237,7594
#define ee_IO1 238,7626
#define ee_IntSel 241,7685
#define ee_IntMask 242,7726
#define ee_LI 243,7751
#define ee_PC 244,7808
#define ee_TPE_AUI 245,7870
#define ee_Jabber 246,7921
#define ee_AutoPort 247,7981
#define ee_SMOUT 248,8044
#define ee_PROM 249,8102
#define ee_reserved1 250,8160
#define ee_AltReady 251,8201
#define ee_reserved2 252,8258
#define ee_Duplex 253,8293
#define ee_IA5 256,8335
#define ee_IA4 257,8400
#define ee_IA3 258,8465
#define ee_IA2 259,8530
#define ee_IA1 260,8595
#define ee_IA0 261,8660
#define ee_BNC_TPE 264,8740
#define ee_BootType 265,8775
#define ee_BootTypeMask 266,8837
#define ee_NumConn 267,8866
#define ee_FlashSock 268,8932
#define ee_PortTPE 269,8998
#define ee_PortBNC 270,9021
#define ee_PortAUI 271,9044
#define ee_PowerMgt 272,9067
#define ee_CP 273,9109
#define ee_CPMask 274,9161
#define ee_Stepping 277,9201
#define ee_StepMask 278,9244
#define ee_BoardID 279,9270
#define ee_BoardMask 280,9330
#define ee_INT_TO_IRQ 283,9373
#define ee_FX_INT2IRQ 284,9444
#define ee_SIZE 287,9527
#define ee_Checksum 288,9572
#define ee_addr_vendor 292,9691
#define ee_addr_id 293,9757
#define ee_addr_SN 294,9816
#define ee_addr_CRC_8 295,9865
#define ee_vendor_intel0 298,9927
#define ee_vendor_intel1 299,9980
#define ee_id_eepro10p0 300,10010
#define ee_id_eepro10p1 301,10064
#define	RAM_SIZE	352,12398
#define	RCV_HEADER	353,12422
#define RCV_RAM 354,12443
#define RCV_LOWER_LIMIT 355,12502
#define RCV_UPPER_LIMIT 357,12614
#define XMT_RAM 359,12743
#define XMT_LOWER_LIMIT 361,12877
#define XMT_UPPER_LIMIT 362,12919
#define	XMT_HEADER	363,12980
#define	RCV_DONE	365,13002
#define	RX_OK	366,13026
#define	RX_ERROR	367,13048
#define	TX_DONE_BIT	369,13073
#define	CHAIN_BIT	370,13100
#define	XMT_STATUS	371,13125
#define	XMT_CHAIN	372,13149
#define	XMT_COUNT	373,13172
#define	BANK0_SELECT	375,13196
#define	BANK1_SELECT	376,13224
#define	BANK2_SELECT	377,13252
#define	COMMAND_REG	380,13304
#define	MC_SETUP	381,13346
#define	XMT_CMD	382,13368
#define	DIAGNOSE_CMD	383,13390
#define	RCV_ENABLE_CMD	384,13416
#define	RCV_DISABLE_CMD	385,13444
#define	STOP_RCV_CMD	386,13473
#define	RESET_CMD	387,13499
#define	POWER_DOWN_CMD	388,13522
#define	RESUME_XMT_CMD	389,13550
#define	SEL_RESET_CMD	390,13578
#define	STATUS_REG	391,13605
#define	RX_INT	392,13646
#define	TX_INT	393,13667
#define	EXEC_STATUS	394,13688
#define	ID_REG	395,13713
#define	R_ROBIN_BITS	396,13751
#define	ID_REG_MASK	397,13803
#define	ID_REG_SIG	398,13828
#define	AUTO_ENABLE	399,13852
#define	INT_MASK_REG	400,13877
#define	RX_STOP_MASK	401,13920
#define	RX_MASK	402,13946
#define	TX_MASK	403,13968
#define	EXEC_MASK	404,13990
#define	ALL_MASK	405,14013
#define	IO_32_BIT	406,14035
#define	RCV_BAR	407,14058
#define	RCV_STOP	408,14128
#define	XMT_BAR	409,14150
#define	HOST_ADDRESS_REG	410,14172
#define	IO_PORT	411,14202
#define	IO_PORT_32_BIT	412,14224
#define	REG1	415,14276
#define	WORD_WIDTH	416,14294
#define	INT_ENABLE	417,14318
#define INT_NO_REG	418,14342
#define	RCV_LOWER_LIMIT_REG	419,14366
#define	RCV_UPPER_LIMIT_REG	420,14399
#define	XMT_LOWER_LIMIT_REG	421,14432
#define	XMT_UPPER_LIMIT_REG	422,14465
#define	XMT_Chain_Int	425,14522
#define	XMT_Chain_ErrStop	426,14598
#define	RCV_Discard_BadFrame	427,14694
#define	REG2	428,14788
#define	PRMSC_Mode	429,14807
#define	Multi_IA	430,14831
#define	REG3	431,14853
#define	TPE_BIT	432,14872
#define	BNC_BIT	433,14894
#define	REG13	434,14916
#define	FDX	435,14936
#define	A_N_ENABLE	436,14954
#define	I_ADD_REG0	438,14980
#define	I_ADD_REG1	439,15004
#define	I_ADD_REG2	440,15028
#define	I_ADD_REG3	441,15052
#define	I_ADD_REG4	442,15076
#define	I_ADD_REG5	443,15100
#define EEPROM_REG 445,15125
#define EESK 446,15149
#define EECS 447,15167
#define EEDI 448,15185
#define EEDO 449,15203
struct netdev_entry netcard_drv 461,15628
compat_init_func(464,15726
	#define WakeupPort 474,15930
	#define WakeupSeq 475,15956
void printEEPROMInfo(519,17010
int eepro_probe1(578,19012
static char irqrmap[747,23775
static char irqrmap2[748,23844
static int	eepro_grab_irq(749,23911
static int eepro_open(807,25448
static int eepro_send_packet(987,30833
eepro_interrupt(1088,33653
static int eepro_close(1158,35443
eepro_get_stats(1210,36631
set_multicast_list(1220,36823
#define eeprom_delay(eeprom_delay1345,40655
#define EE_READ_CMD 1346,40694
read_eeprom(1349,40728
hardware_send_packet(1389,41710
eepro_rx(1506,45104
eepro_transmit_interrupt(1600,47668
#define MAX_EEPRO 1656,48864
static char devicename[1657,48884
static struct device dev_eepro[1658,48922
static int io[1660,48966
static int irq[1667,49127
static int mem[1668,49181
static int n_eepro 1679,49392
init_module(1690,49742
cleanup_module(1711,50228

drivers/net/tlan.h,8859
#define TLAN_H2,15
#define net_device_stats	25,586
#define FALSE	36,800
#define TRUE	37,818
#define TLAN_MIN_FRAME_SIZE	39,836
#define TLAN_MAX_FRAME_SIZE	40,867
#define TLAN_NUM_RX_LISTS	42,901
#define TLAN_NUM_TX_LISTS	43,929
#define TLAN_IGNORE	45,958
#define TLAN_RECORD	46,981
#define TLAN_DBG(TLAN_DBG48,1005
#define TLAN_DEBUG_GNRL	49,1085
#define TLAN_DEBUG_TX	50,1117
#define TLAN_DEBUG_RX	51,1147
#define TLAN_DEBUG_LIST	52,1178
#define PCI_DEVICE_ID_NETELLIGENT_10	62,1395
#define PCI_DEVICE_ID_NETELLIGENT_10_100	63,1441
#define PCI_DEVICE_ID_NETFLEX_3P_INTEGRATED	64,1490
#define PCI_DEVICE_ID_NETFLEX_3P	65,1542
#define PCI_DEVICE_ID_NETFLEX_3P_BNC	66,1584
#define PCI_DEVICE_ID_NETELLIGENT_10_100_PROLIANT	67,1630
#define PCI_DEVICE_ID_NETELLIGENT_10_100_DUAL	68,1687
#define PCI_DEVICE_ID_DESKPRO_4000_5233MMX	69,1741
#define PCI_DEVICE_ID_NETELLIGENT_10_T2	70,1792
#define PCI_DEVICE_ID_NETELLIGENT_10_100_WS_5100	71,1841
#define PCI_DEVICE_ID_OLICOM_OC2183	73,1933
#define PCI_DEVICE_ID_OLICOM_OC2325	76,2021
#define PCI_DEVICE_ID_OLICOM_OC2326	79,2109
typedef struct tlan_adapter_entry tlan_adapter_entry82,2162
} TLanAdapterEntry;TLanAdapterEntry88,2274
#define TLAN_ADAPTER_NONE	90,2295
#define TLAN_ADAPTER_UNMANAGED_PHY	91,2333
#define TLAN_ADAPTER_BIT_RATE_PHY	92,2379
#define TLAN_ADAPTER_USE_INTERN_10	93,2424
#define TLAN_ADAPTER_ACTIVITY_LED	94,2470
#define TLAN_SPEED_DEFAULT	96,2516
#define TLAN_SPEED_10	97,2545
#define TLAN_SPEED_100	98,2571
#define TLAN_DUPLEX_DEFAULT	100,2600
#define TLAN_DUPLEX_HALF	101,2630
#define TLAN_DUPLEX_FULL	102,2657
#define TLAN_BUFFERS_PER_LIST	112,2856
#define TLAN_LAST_BUFFER	113,2889
#define TLAN_CSTAT_UNUSED	114,2925
#define TLAN_CSTAT_FRM_CMP	115,2958
#define TLAN_CSTAT_READY	116,2992
#define TLAN_CSTAT_EOC	117,3024
#define TLAN_CSTAT_RX_ERROR	118,3055
#define TLAN_CSTAT_PASS_CRC	119,3090
#define TLAN_CSTAT_DP_PR	120,3125
typedef struct tlan_buffer_ref_tag tlan_buffer_ref_tag123,3159
} TLanBufferRef;TLanBufferRef126,3222
typedef struct tlan_list_tag tlan_list_tag129,3241
} TLanList;TLanList134,3363
typedef u8 TLanBuffer[TLanBuffer137,3377
#define TLAN_PHY_MAX_ADDR	147,3586
#define TLAN_PHY_NONE	148,3617
typedef struct tlan_private_tag tlan_private_tag158,3829
} TLanPrivateInfo;TLanPrivateInfo190,4604
#define TLAN_TIMER_LINK	200,4802
#define TLAN_TIMER_ACTIVITY	201,4830
#define TLAN_TIMER_PHY_PDOWN	202,4861
#define TLAN_TIMER_PHY_PUP	203,4893
#define TLAN_TIMER_PHY_RESET	204,4923
#define TLAN_TIMER_PHY_START_LINK	205,4955
#define TLAN_TIMER_PHY_FINISH_AN	206,4991
#define TLAN_TIMER_FINISH_RESET	207,5026
#define TLAN_TIMER_ACT_DELAY	209,5062
#define TLAN_EEPROM_ACK	219,5275
#define TLAN_EEPROM_STOP	220,5302
#define TLAN_HOST_CMD	230,5513
#define 	TLAN_HC_GO	231,5542
#define		TLAN_HC_STOP	232,5574
#define		TLAN_HC_ACK	233,5608
#define		TLAN_HC_CS_MASK	234,5641
#define		TLAN_HC_EOC	235,5678
#define		TLAN_HC_RT	236,5711
#define		TLAN_HC_NES	237,5743
#define		TLAN_HC_AD_RST	238,5776
#define		TLAN_HC_LD_TMR	239,5812
#define		TLAN_HC_LD_THR	240,5848
#define		TLAN_HC_REQ_INT	241,5884
#define		TLAN_HC_INT_OFF	242,5921
#define		TLAN_HC_INT_ON	243,5958
#define		TLAN_HC_AC_MASK	244,5994
#define TLAN_CH_PARM	245,6031
#define TLAN_DIO_ADR	246,6059
#define		TLAN_DA_ADR_INC	247,6087
#define		TLAN_DA_RAM_ADR	248,6120
#define TLAN_HOST_INT	249,6153
#define		TLAN_HI_IV_MASK	250,6182
#define		TLAN_HI_IT_MASK	251,6215
#define TLAN_DIO_DATA	252,6248
#define TLAN_NET_CMD	257,6327
#define		TLAN_NET_CMD_NRESET	258,6355
#define		TLAN_NET_CMD_NWRAP	259,6389
#define		TLAN_NET_CMD_CSF	260,6422
#define		TLAN_NET_CMD_CAF	261,6453
#define		TLAN_NET_CMD_NOBRX	262,6484
#define		TLAN_NET_CMD_DUPLEX	263,6517
#define		TLAN_NET_CMD_TRFRAM	264,6551
#define		TLAN_NET_CMD_TXPACE	265,6585
#define TLAN_NET_SIO	266,6619
#define 	TLAN_NET_SIO_MINTEN	267,6647
#define		TLAN_NET_SIO_ECLOK	268,6681
#define		TLAN_NET_SIO_ETXEN	269,6714
#define		TLAN_NET_SIO_EDATA	270,6747
#define		TLAN_NET_SIO_NMRST	271,6780
#define		TLAN_NET_SIO_MCLK	272,6813
#define		TLAN_NET_SIO_MTXEN	273,6845
#define		TLAN_NET_SIO_MDATA	274,6878
#define TLAN_NET_STS	275,6911
#define		TLAN_NET_STS_MIRQ	276,6939
#define		TLAN_NET_STS_HBEAT	277,6971
#define		TLAN_NET_STS_TXSTOP	278,7004
#define		TLAN_NET_STS_RXSTOP	279,7038
#define		TLAN_NET_STS_RSRVD	280,7072
#define TLAN_NET_MASK	281,7105
#define		TLAN_NET_MASK_MASK7	282,7134
#define		TLAN_NET_MASK_MASK6	283,7168
#define		TLAN_NET_MASK_MASK5	284,7202
#define		TLAN_NET_MASK_MASK4	285,7236
#define		TLAN_NET_MASK_RSRVD	286,7270
#define TLAN_NET_CONFIG	287,7304
#define 	TLAN_NET_CFG_RCLK	288,7335
#define		TLAN_NET_CFG_TCLK	289,7369
#define		TLAN_NET_CFG_BIT	290,7403
#define		TLAN_NET_CFG_RXCRC	291,7436
#define		TLAN_NET_CFG_PEF	292,7471
#define		TLAN_NET_CFG_1FRAG	293,7504
#define		TLAN_NET_CFG_1CHAN	294,7539
#define		TLAN_NET_CFG_MTEST	295,7574
#define		TLAN_NET_CFG_PHY_EN	296,7609
#define		TLAN_NET_CFG_MSMASK	297,7645
#define TLAN_MAN_TEST	298,7681
#define TLAN_DEF_VENDOR_ID	299,7710
#define TLAN_DEF_DEVICE_ID	300,7743
#define TLAN_DEF_REVISION	301,7776
#define TLAN_DEF_SUBCLASS	302,7808
#define TLAN_DEF_MIN_LAT	303,7840
#define TLAN_DEF_MAX_LAT	304,7871
#define TLAN_AREG_0	305,7902
#define TLAN_AREG_1	306,7929
#define TLAN_AREG_2	307,7956
#define TLAN_AREG_3	308,7983
#define TLAN_HASH_1	309,8010
#define TLAN_HASH_2	310,8037
#define TLAN_GOOD_TX_FRMS	311,8064
#define TLAN_TX_UNDERUNS	312,8096
#define TLAN_GOOD_RX_FRMS	313,8127
#define TLAN_RX_OVERRUNS	314,8159
#define TLAN_DEFERRED_TX	315,8190
#define TLAN_CRC_ERRORS	316,8221
#define TLAN_CODE_ERRORS	317,8252
#define TLAN_MULTICOL_FRMS	318,8283
#define TLAN_SINGLECOL_FRMS	319,8316
#define TLAN_EXCESSCOL_FRMS	320,8350
#define TLAN_LATE_COLS	321,8384
#define TLAN_CARRIER_LOSS	322,8414
#define TLAN_ACOMMIT	323,8446
#define TLAN_LED_REG	324,8474
#define		TLAN_LED_ACT	325,8502
#define		TLAN_LED_LINK	326,8530
#define TLAN_BSIZE_REG	327,8559
#define TLAN_MAX_RX	328,8589
#define TLAN_INT_DIS	329,8616
#define		TLAN_ID_TX_EOC	330,8644
#define		TLAN_ID_RX_EOF	331,8674
#define		TLAN_ID_RX_EOC	332,8704
#define TLAN_INT_NUMBER_OF_INTS	338,8771
#define TLAN_INT_NONE	340,8806
#define TLAN_INT_TX_EOF	341,8837
#define TLAN_INT_STAT_OVERFLOW	342,8870
#define TLAN_INT_RX_EOF	343,8909
#define TLAN_INT_DUMMY	344,8942
#define TLAN_INT_TX_EOC	345,8974
#define TLAN_INT_STATUS_CHECK	346,9007
#define TLAN_INT_RX_EOC	347,9045
#define MII_GEN_CTL	355,9146
#define 	MII_GC_RESET	356,9173
#define		MII_GC_LOOPBK	357,9203
#define		MII_GC_SPEEDSEL	358,9234
#define		MII_GC_AUTOENB	359,9267
#define		MII_GC_PDOWN	360,9299
#define		MII_GC_ISOLATE	361,9329
#define		MII_GC_AUTORSRT	362,9361
#define		MII_GC_DUPLEX	363,9394
#define		MII_GC_COLTEST	364,9425
#define		MII_GC_RESERVED	365,9457
#define MII_GEN_STS	366,9490
#define		MII_GS_100BT4	367,9517
#define		MII_GS_100BTXFD	368,9548
#define		MII_GS_100BTXHD	369,9581
#define		MII_GS_10BTFD	370,9614
#define		MII_GS_10BTHD	371,9645
#define		MII_GS_RESERVED	372,9676
#define		MII_GS_AUTOCMPLT	373,9709
#define		MII_GS_RFLT	374,9742
#define		MII_GS_AUTONEG	375,9771
#define		MII_GS_LINK	376,9803
#define		MII_GS_JABBER	377,9832
#define		MII_GS_EXTCAP	378,9863
#define MII_GEN_ID_HI	379,9894
#define MII_GEN_ID_LO	380,9923
#define 	MII_GIL_OUI	381,9952
#define 	MII_GIL_MODEL	382,9981
#define 	MII_GIL_REVISION	383,10012
#define MII_AN_ADV	384,10045
#define MII_AN_LPA	385,10071
#define MII_AN_EXP	386,10097
#define TLAN_TLPHY_ID	390,10169
#define TLAN_TLPHY_CTL	391,10198
#define 	TLAN_TC_IGLINK	392,10228
#define		TLAN_TC_SWAPOL	393,10260
#define		TLAN_TC_AUISEL	394,10292
#define		TLAN_TC_SQEEN	395,10324
#define		TLAN_TC_MTEST	396,10355
#define		TLAN_TC_RESERVED	397,10386
#define		TLAN_TC_NFEW	398,10419
#define		TLAN_TC_INTEN	399,10449
#define		TLAN_TC_TINT	400,10480
#define TLAN_TLPHY_STS	401,10510
#define		TLAN_TS_MINT	402,10540
#define		TLAN_TS_PHOK	403,10570
#define		TLAN_TS_POLOK	404,10600
#define		TLAN_TS_TPENERGY	405,10631
#define		TLAN_TS_RESERVED	406,10664
#define CIRC_INC(CIRC_INC409,10699
inline u8 TLan_DioRead8(413,10793
inline u16 TLan_DioRead16(423,10997
inline u32 TLan_DioRead32(433,11203
inline void TLan_DioWrite8(443,11383
inline void TLan_DioWrite16(453,11574
inline void TLan_DioWrite32(463,11767
inline void TLan_ClearBit(473,11965
inline int TLan_GetBit(481,12052
inline void TLan_SetBit(489,12138
#define TLan_ClearBit(TLan_ClearBit495,12226
#define TLan_GetBit(TLan_GetBit496,12294
#define TLan_SetBit(TLan_SetBit497,12355
inline u32 TLan_HashFunc(502,12605
inline	u32	xor(518,13035
#define XOR8(XOR8522,13112
#define DA(DA523,13223
inline u32 TLan_HashFunc(525,13297

drivers/net/ibmtr.c,1637
#define IBMTR_DEBUG_MESSAGES 81,3366
#define MODULE84,3412
#define NO_AUTODETECT 93,3498
#define FALSE 97,3565
#define TRUE 98,3581
#define TR_NEWFORMAT	101,3661
#define TR_VERBOSE	102,3684
#define TR_FILTERNONUI	105,3779
static char *version 108,3831
static char pcchannelid[113,4042
static char mcchannelid[122,4225
#define DPRINTK(DPRINTK157,4963
#define DPRINTD(DPRINTD158,5039
#define MIN(MIN159,5118
#define MAX(MAX160,5160
const char *channel_def[165,5275
const char *channel_def[] __initdata 165,5275
__initfunc(169,5347
unsigned char ibmtr_debug_trace=183,5744
unsigned char ibmtr_debug_trace=186,5890
#define TRC_INIT 188,5932
#define TRC_INITV 189,6004
static unsigned int ibmtr_portlist[210,7026
static unsigned int ibmtr_portlist[] __initdata 210,7026
static __u32 ibmtr_mem_base 214,7099
__initfunc(216,7139
__initfunc(224,7312
__initfunc(245,7967
__initfunc(284,8748
__initfunc(715,21225
__initfunc(735,21850
static int tok_open(757,22274
static int tok_close(781,22772
void tok_interrupt 805,23360
static void initial_tok_int(1183,35595
static int tok_init_card(1252,37463
static void open_sap(1290,38364
void tok_open_adapter(1312,39084
static void tr_tx(1364,40900
static void tr_rx(1439,43521
static int tok_send_packet(1593,49014
void ibmtr_reset_timer(1631,49997
void ibmtr_readlog(1639,50223
static struct net_device_stats * tok_get_stats(1655,50807
int ibmtr_change_mtu(1662,50994
static struct device* dev_ibmtr[1676,51334
static int io[1677,51387
static int irq[1678,51438
static int mem[1679,51482
int init_module(1685,51719
void cleanup_module(1715,52494

drivers/net/fmv18x.c,1335
static const char *version 34,1259
static int fmv18x_probe_list[61,1895
static int fmv18x_probe_list[] __initdata 61,1895
#define NET_DEBUG 66,2080
static unsigned int net_debug 68,2107
typedef unsigned char uchar;uchar70,2151
struct net_local net_local73,2236
#define STATUS	85,2674
#define TX_STATUS	86,2693
#define RX_STATUS	87,2714
#define TX_INTR	88,2735
#define RX_INTR	89,2801
#define TX_MODE	90,2821
#define RX_MODE	91,2841
#define CONFIG_0	92,2861
#define CONFIG_1	93,2918
#define DATAPORT	95,2982
#define TX_START	96,3051
#define COL16CNTL	97,3072
#define MODE13	98,3132
#define	FJ_STATUS0	100,3193
#define	FJ_STATUS1	101,3218
#define	FJ_CONFIG0	102,3243
#define	FJ_CONFIG1	103,3268
#define	FJ_MACADDR	104,3293
#define	FJ_BUFCNTL	105,3336
#define	FJ_BUFDATA	106,3361
#define FMV18X_IO_EXTENT	107,3386
struct netdev_entry fmv18x_drv 132,4364
__initfunc(135,4467
__initfunc(166,5372
static int net_open(290,9037
net_send_packet(329,9916
net_interrupt(421,12972
net_rx(486,14807
static int net_close(575,17145
static struct net_device_stats *net_get_stats(602,17717
static void set_multicast_list(620,18210
static char devicename[639,18678
static struct device dev_fmv18x 640,18714
static int io 646,18878
static int irq 647,18901
int init_module(653,18997
cleanup_module(667,19299

drivers/net/eql.c,1610
static const char *version 19,485
#define EQL_DEBUG 149,4379
static unsigned int eql_debug 151,4406
__initfunc(212,7090
static int eql_open(271,8517
static int eql_close(304,9197
static int eql_ioctl(330,9693
static int eql_slave_xmit(355,10471
static struct net_device_stats * eql_get_stats(397,11331
static int eql_enslave(407,11505
static int eql_emancipate(469,13084
static int eql_g_slave_cfg(499,13847
static int eql_s_slave_cfg(536,14696
static int eql_g_master_cfg(573,15472
static int eql_s_master_cfg(599,16015
static inline int eql_is_slave(627,16595
static inline int eql_is_master(638,16737
static slave_t *eql_new_slave(649,16881
static void eql_delete_slave(663,17085
static long slave_Bps(671,17243
static long slave_bps(676,17317
static inline int eql_number_slaves(683,17399
static inline int eql_is_empty(688,17489
static inline int eql_is_full(695,17607
static slave_queue_t *eql_new_slave_queue(704,17800
static void eql_delete_slave_queue(739,18474
static int eql_insert_slave(758,18894
static slave_t *eql_remove_slave(783,19437
static int eql_remove_slave_dev(813,19961
static inline struct device *eql_best_slave_dev(841,20394
static inline slave_t *eql_best_slave(855,20612
static inline void eql_schedule_slaves(860,20704
static slave_t * eql_find_slave_dev(946,22695
static inline slave_t *eql_first_slave(965,23110
static inline slave_t *eql_next_slave(971,23204
static inline void eql_set_best_slave(976,23306
static void eql_timer(981,23415
static struct device dev_eql 1023,24303
int init_module(1028,24392
void cleanup_module(1037,24544

drivers/net/i82586.h,5558
#define	I82586_MEMZ	26,863
#define	I82586_SCP_ADDR	28,896
#define	ADDR_LEN	30,951
#define	I82586NULL	31,970
#define	toff(toff33,997
typedef struct scp_t	scp_t;scp_t38,1134
struct scp_tscp_t39,1162
#define		SCP_SY_16BBUS	42,1228
#define		SCP_SY_8BBUS	43,1276
typedef struct iscp_t	iscp_t;iscp_t52,1550
struct iscp_tiscp_t53,1580
typedef struct scb_t	scb_t;scb_t69,2079
struct scb_tscb_t70,2107
#define		SCB_ST_INT	73,2173
#define		SCB_ST_CX	74,2221
#define		SCB_ST_FR	75,2272
#define		SCB_ST_CNA	76,2324
#define		SCB_ST_RNR	77,2382
#define		SCB_ST_JUNK0	78,2439
#define		SCB_ST_CUS	79,2483
#define			SCB_ST_CUS_IDLE	80,2537
#define			SCB_ST_CUS_SUSP	81,2584
#define			SCB_ST_CUS_ACTV	82,2635
#define		SCB_ST_JUNK1	83,2683
#define		SCB_ST_RUS	84,2727
#define			SCB_ST_RUS_IDLE	85,2781
#define			SCB_ST_RUS_SUSP	86,2828
#define			SCB_ST_RUS_NRES	87,2879
#define			SCB_ST_RUS_RDY	88,2933
#define		SCB_CMD_ACK_CX	90,3029
#define		SCB_CMD_ACK_FR	91,3090
#define		SCB_CMD_ACK_CNA	92,3151
#define		SCB_CMD_ACK_RNR	93,3212
#define		SCB_CMD_JUNKX	94,3272
#define		SCB_CMD_CUC	95,3321
#define			SCB_CMD_CUC_NOP	96,3381
#define			SCB_CMD_CUC_GO	97,3427
#define			SCB_CMD_CUC_RES	98,3484
#define			SCB_CMD_CUC_SUS	99,3542
#define			SCB_CMD_CUC_ABT	100,3595
#define		SCB_CMD_RESET	101,3648
#define		SCB_CMD_RUC	102,3711
#define			SCB_CMD_RUC_NOP	103,3771
#define			SCB_CMD_RUC_GO	104,3817
#define			SCB_CMD_RUC_RES	105,3874
#define			SCB_CMD_RUC_SUS	106,3932
#define			SCB_CMD_RUC_ABT	107,3985
#define	scboff(scboff121,4578
typedef enum acmd_e	acmd_e;acmd_e126,4655
enum acmd_eacmd_e127,4683
	acmd_nop	129,4697
	acmd_ia_setup	130,4732
	acmd_configure	132,4813
	acmd_mc_setup	133,4878
	acmd_transmit	135,4976
	acmd_tdr	136,5021
	acmd_dump	138,5113
	acmd_diagnose	139,5166
typedef struct ach_t	ach_t;ach_t145,5264
struct ach_tach_t146,5292
#define		AC_SFLD_C	149,5357
#define		AC_SFLD_B	150,5412
#define		AC_SFLD_OK	151,5464
#define		AC_SFLD_A	152,5523
#define		AC_SFLD_FAIL	153,5576
#define		AC_SFLD_S10	154,5632
#define		AC_SFLD_S9	156,5720
#define		AC_SFLD_S8	158,5806
#define		AC_SFLD_S7	160,5892
#define		AC_SFLD_S6	162,5975
#define		AC_SFLD_S5	164,6068
#define		AC_SFLD_MAXCOL	166,6152
#define		AC_CFLD_EL	168,6266
#define		AC_CFLD_S	169,6324
#define		AC_CFLD_I	170,6383
#define		AC_CFLD_CMD	171,6444
#define	acoff(acoff175,6547
typedef struct ac_nop_t	ac_nop_t;ac_nop_t180,6620
struct ac_nop_tac_nop_t181,6654
typedef struct ac_ias_t	ac_ias_t;ac_ias_t189,6729
struct ac_ias_tac_ias_t190,6763
typedef struct ac_cfg_t	ac_cfg_t;ac_cfg_t199,6904
struct ac_cfg_tac_cfg_t200,6938
#define	AC_CFG_BYTE_CNT(AC_CFG_BYTE_CNT204,7027
#define	AC_CFG_FIFOLIM(AC_CFG_FIFOLIM206,7122
#define	AC_CFG_SAV_BF(AC_CFG_SAV_BF208,7193
#define	AC_CFG_SRDY(AC_CFG_SRDY209,7264
#define	AC_CFG_ELPBCK(AC_CFG_ELPBCK212,7388
#define	AC_CFG_ILPBCK(AC_CFG_ILPBCK213,7456
#define	AC_CFG_PRELEN(AC_CFG_PRELEN214,7524
#define		AC_CFG_PLEN_2	215,7590
#define		AC_CFG_PLEN_4	216,7632
#define		AC_CFG_PLEN_8	217,7674
#define		AC_CFG_PLEN_16	218,7716
#define	AC_CFG_ALOC(AC_CFG_ALOC219,7759
#define	AC_CFG_ADDRLEN(AC_CFG_ADDRLEN221,7858
#define	AC_CFG_BOFMET(AC_CFG_BOFMET223,7954
#define	AC_CFG_ACR(AC_CFG_ACR225,8052
#define	AC_CFG_LINPRIO(AC_CFG_LINPRIO226,8123
#define	AC_CFG_RETRYNUM(AC_CFG_RETRYNUM230,8321
#define	AC_CFG_SLTTMHI(AC_CFG_SLTTMHI231,8394
#define	AC_CFG_FLGPAD(AC_CFG_FLGPAD233,8494
#define	AC_CFG_BTSTF(AC_CFG_BTSTF234,8564
#define	AC_CFG_CRC16(AC_CFG_CRC16235,8634
#define	AC_CFG_NCRC(AC_CFG_NCRC236,8701
#define	AC_CFG_TNCRS(AC_CFG_TNCRS237,8764
#define	AC_CFG_MANCH(AC_CFG_MANCH238,8836
#define	AC_CFG_BCDIS(AC_CFG_BCDIS239,8904
#define	AC_CFG_PRM(AC_CFG_PRM240,8972
#define	AC_CFG_ICDS(AC_CFG_ICDS242,9064
#define	AC_CFG_CDTF(AC_CFG_CDTF244,9159
#define	AC_CFG_ICSS(AC_CFG_ICSS246,9258
#define	AC_CFG_CSTF(AC_CFG_CSTF248,9351
#define	AC_CFG_MNFRM(AC_CFG_MNFRM251,9480
typedef struct ac_mcs_t	ac_mcs_t;ac_mcs_t257,9600
struct ac_mcs_tac_mcs_t258,9634
#define I82586_MAX_MULTICAST_ADDRESSES	268,9814
typedef struct ac_tx_t	ac_tx_t;ac_tx_t273,9926
struct ac_tx_tac_tx_t274,9958
typedef struct ac_tdr_t	ac_tdr_t;ac_tdr_t292,10498
struct ac_tdr_tac_tdr_t293,10532
#define		AC_TDR_LNK_OK	297,10607
#define		AC_TDR_XCVR_PRB	298,10664
#define		AC_TDR_ET_OPN	299,10727
#define		AC_TDR_ET_SRT	300,10785
#define		AC_TDR_TIME	301,10844
typedef struct ac_dmp_t	ac_dmp_t;ac_dmp_t309,10998
struct ac_dmp_tac_dmp_t310,11032
#define	DUMPBYTES	319,11161
typedef struct ac_dgn_t	ac_dgn_t;ac_dgn_t324,11223
struct ac_dgn_tac_dgn_t325,11257
typedef struct tbd_t	tbd_t;tbd_t333,11338
struct tbd_ttbd_t334,11366
#define		TBD_STATUS_EOF	337,11435
#define		TBD_STATUS_ACNT	339,11525
typedef struct rbd_t	rbd_t;rbd_t349,11833
struct rbd_trbd_t350,11861
#define		RBD_STATUS_EOF	353,11932
#define		RBD_STATUS_F	355,12022
#define		RBD_STATUS_ACNT	356,12082
#define		RBD_EL	362,12396
#define		RBD_SIZE 364,12475
#define	rbdoff(rbdoff368,12563
typedef struct fd_t	fd_t;fd_t373,12636
struct fd_tfd_t374,12662
#define		FD_STATUS_C	377,12731
#define		FD_STATUS_B	378,12794
#define		FD_STATUS_OK	379,12855
#define		FD_STATUS_S11	380,12918
#define		FD_STATUS_S10	381,12970
#define		FD_STATUS_S9	382,13027
#define		FD_STATUS_S8	383,13088
#define		FD_STATUS_S7	384,13143
#define		FD_STATUS_S6	385,13199
#define		FD_COMMAND_EL	387,13296
#define		FD_COMMAND_S	388,13353
#define	fdoff(fdoff406,13961

drivers/net/ibmtr.h,4311
#define TR_RETRY_INTERVAL 6,172
#define TR_RESET_INTERVAL 7,227
#define TR_BUSY_INTERVAL 8,283
#define TR_SPIN_INTERVAL 9,338
#define TR_RETRIES 10,406
#define TR_ISA 12,469
#define TR_MCA 13,486
#define TR_ISAPNP 14,503
#define NOTOK 15,523
#define TOKDEBUG 16,539
#define IBMTR_SHARED_RAM_SIZE 18,559
#define IBMTR_IO_EXTENT 19,597
#define IBMTR_MAX_ADAPTERS 20,623
#define CHANNEL_ID 22,653
#define AIP 23,684
#define AIPCHKSUM1 24,715
#define AIPCHKSUM2 25,746
#define AIPADAPTYPE 26,777
#define AIPDATARATE 27,808
#define AIPEARLYTOKEN 28,839
#define AIPAVAILSHRAM 29,870
#define AIPSHRAMPAGE 30,901
#define AIP4MBDHB 31,932
#define AIP16MBDHB 32,963
#define AIPFID	33,994
#define ADAPTINTCNTRL 37,1151
#define ADAPTRESET 38,1215
#define ADAPTRESETREL 39,1289
#define ADAPTINTREL	40,1362
#define MMIOStartLocP 42,1420
#define MMIOStartLocA 43,1495
#define GLOBAL_INT_ENABLE 45,1573
#define RRR_EVEN 48,1643
#define RRR_ODD 52,1948
#define WRBR_EVEN 55,2107
#define WRBR_ODD 56,2188
#define WWOR_EVEN 57,2217
#define WWOR_ODD 58,2298
#define WWCR_EVEN 59,2327
#define WWCR_ODD 60,2409
#define ISRP_EVEN 63,2500
#define TCR_INT 65,2530
#define ERR_INT 67,2685
#define ACCESS_INT 69,2847
#define INT_IRQ 74,3275
#define INT_ENABLE 76,3470
#define ISRP_ODD 83,3908
#define ADAP_CHK_INT 85,3938
#define SRB_RESP_INT 88,4129
#define ASB_FREE_INT 91,4322
#define ARB_CMD_INT 96,4863
#define SSB_RESP_INT 99,5171
#define ISRA_EVEN 106,5528
#define ISRA_ODD 116,6106
#define CMD_IN_SRB 117,6135
#define RESP_IN_ASB 120,6338
#define ARB_FREE 129,7072
#define SSB_FREE 130,7093
#define TCR_EVEN 132,7115
#define TCR_ODD 133,7192
#define TVR_EVEN 134,7221
#define TVR_ODD 135,7296
#define SRPR_EVEN 136,7325
#define SRPR_ENABLE_PAGING 137,7406
#define SRPR_ODD 138,7438
#define TOKREAD 139,7483
#define TOKOR 140,7512
#define TOKAND 141,7541
#define TOKWRITE 142,7570
#define PCCHANNELID 156,8114
#define MCCHANNELID 157,8159
#define ACA_OFFSET 159,8205
#define ACA_SET 160,8231
#define ACA_RESET 161,8252
#define ACA_RW 162,8275
#define SET_PAGE(SET_PAGE165,8317
#define SET_PAGE(SET_PAGE168,8423
typedef enum { IN_PROGRESS, SUCCESS, FAILURE, CLOSED } open_state;open_state171,8451
#define FIRST_INT 174,8552
#define NOT_FIRST 175,8572
struct tok_info tok_info177,8593
#define DIR_INTERRUPT 224,10289
#define DIR_MOD_OPEN_PARAMS 225,10345
#define DIR_OPEN_ADAPTER 226,10379
#define DIR_CLOSE_ADAPTER 227,10440
#define DIR_SET_GRP_ADDR 228,10474
#define DIR_SET_FUNC_ADDR 229,10508
#define DIR_READ_LOG 230,10574
#define DLC_OPEN_SAP 231,10628
#define DLC_CLOSE_SAP 232,10682
#define DATA_LOST 233,10716
#define REC_DATA 234,10762
#define XMIT_DATA_REQ 235,10811
#define DLC_STATUS 236,10866
#define RING_STAT_CHANGE 237,10920
#define OPEN_PASS_BCON_MAC 240,11016
#define NUM_RCV_BUF 241,11050
#define RCV_BUF_LEN 242,11072
#define DHB_LENGTH 243,11097
#define NUM_DHB 244,11121
#define DLC_MAX_SAP 245,11139
#define DLC_MAX_STA 246,11161
#define MAX_I_FIELD 249,11211
#define SAP_OPEN_IND_SAP 250,11238
#define SAP_OPEN_PRIORITY 251,11268
#define SAP_OPEN_STATION_CNT 252,11299
#define XMIT_DIR_FRAME 253,11332
#define XMIT_UI_FRAME 254,11360
#define XMIT_XID_CMD 255,11388
#define XMIT_TEST_CMD 256,11416
#define SIGNAL_LOSS 259,11473
#define HARD_ERROR 260,11501
#define XMIT_BEACON 261,11529
#define LOBE_FAULT 262,11557
#define AUTO_REMOVAL 263,11585
#define REMOVE_RECV 264,11613
#define LOG_OVERFLOW 265,11641
#define RING_RECOVER 266,11669
struct srb_init_response srb_init_response268,11698
struct dir_open_adapter dir_open_adapter281,11973
struct srb_open_response srb_open_response306,12590
struct dlc_open_sap dlc_open_sap318,12812
struct srb_xmit srb_xmit340,13324
struct srb_interrupt srb_interrupt348,13465
struct srb_read_log srb_read_log354,13566
struct asb_xmit_resp asb_xmit_resp372,14029
struct arb_xmit_req arb_xmit_req383,14249
struct arb_rec_req arb_rec_req391,14392
struct asb_rec asb_rec402,14609
struct rec_buf rec_buf411,14771
struct arb_dlc_status arb_dlc_status419,14910
struct arb_ring_stat_change arb_ring_stat_change430,15143
struct srb_close_adapter srb_close_adapter436,15250
struct srb_set_funct_addr srb_set_funct_addr442,15356

drivers/net/seeq8005.c,781
static const char *version 17,453
static unsigned int seeq8005_portlist[58,1568
static unsigned int seeq8005_portlist[] __initdata 58,1568
#define NET_DEBUG 63,1738
static unsigned int net_debug 65,1765
struct net_local net_local68,1864
#define SA_ADDR0 75,2142
#define SA_ADDR1 76,2164
#define SA_ADDR2 77,2186
#define tx_done(tx_done93,2825
struct netdev_entry seeq8005_drv 108,3483
__initfunc(111,3594
__initfunc(138,4311
seeq8005_open(347,10163
seeq8005_send_packet(372,10680
seeq8005_interrupt(413,11961
seeq8005_rx(465,13240
seeq8005_close(564,16050
static struct net_device_stats *seeq8005_get_stats(587,16474
set_multicast_list(601,16903
void seeq8005_init(623,17467
static void hardware_send_packet(680,19305
inline void wait_for_buffer(725,20509

drivers/net/3c59x.c,11329
static char *version 17,630
static const int rx_copybreak 23,926
static const int mtu 25,1042
static int max_interrupt_work 27,1140
#define vortex_debug 30,1254
static int vortex_debug 32,1301
static int vortex_debug 34,1347
static int rx_nocopy 39,1471
#define TX_TIMEOUT 43,1648
#define TX_RING_SIZE	46,1742
#define RX_RING_SIZE	47,1766
#define PKT_BUF_SZ	48,1790
#define MOD_INC_USE_COUNT58,2013
#define MOD_DEC_USE_COUNT59,2039
#define RUN_AT(RUN_AT85,2729
#define ioremap(ioremap91,2844
#define iounmap(iounmap93,2923
#define	net_device_stats 98,3048
#define NETSTATS_VER299,3089
#define test_and_set_bit(test_and_set_bit102,3151
#define le32_to_cpu(le32_to_cpu103,3206
#define cpu_to_le32(cpu_to_le32104,3237
#define PCI_SUPPORT_VER1107,3308
#define PCI_SUPPORT_VER2109,3339
#define DEV_FREE_SKB(DEV_FREE_SKB112,3404
#define DEV_FREE_SKB(DEV_FREE_SKB114,3512
#define VORTEX_TOTAL_SIZE 136,4366
#define BOOMERANG_TOTAL_SIZE 137,4397
static char mii_preamble_required 142,4640
enum pci_flags_bit pci_flags_bit224,8322
	PCI_USES_IO=225,8343
	PCI_USES_IO=1, PCI_USES_MEM=225,8343
	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=225,8343
	PCI_ADDR0=226,8394
	PCI_ADDR0=0x10<226,8394
	PCI_ADDR0=0x10<<0, PCI_ADDR1=226,8394
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<226,8394
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=226,8394
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<226,8394
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=226,8394
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<226,8394
struct pci_id_info pci_id_info228,8474
enum { IS_VORTEX=236,8725
enum { IS_VORTEX=1, IS_BOOMERANG=236,8725
enum { IS_VORTEX=1, IS_BOOMERANG=2, IS_CYCLONE=236,8725
	   HAS_PWR_CTRL=237,8775
	   HAS_PWR_CTRL=0x10,237,8775
	   HAS_PWR_CTRL=0x10, HAS_MII=237,8775
	   HAS_PWR_CTRL=0x10, HAS_MII=0x20,237,8775
	   HAS_PWR_CTRL=0x10, HAS_MII=0x20, HAS_NWAY=237,8775
	   HAS_PWR_CTRL=0x10, HAS_MII=0x20, HAS_NWAY=0x40,237,8775
	   HAS_PWR_CTRL=0x10, HAS_MII=0x20, HAS_NWAY=0x40, HAS_CB_FNS=237,8775
	   HAS_PWR_CTRL=0x10, HAS_MII=0x20, HAS_NWAY=0x40, HAS_CB_FNS=0x80,237,8775
static struct pci_id_info pci_tbl[241,8998
#define EL3WINDOW(EL3WINDOW289,11523
#define EL3_CMD 290,11599
#define EL3_STATUS 291,11620
enum vortex_cmd vortex_cmd299,11943
	TotalReset 300,11961
	TotalReset = 0<<11, SelectWindow 300,11961
	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax 300,11961
	RxDisable 301,12023
	RxDisable = 3<<11, RxEnable 301,12023
	RxDisable = 3<<11, RxEnable = 4<<11, RxReset 301,12023
	UpStall 302,12078
	UpStall = 6<<11, UpUnstall 302,12078
	DownStall 303,12119
	DownStall = (6<<11)+2, DownUnstall 303,12119
	RxDiscard 304,12168
	RxDiscard = 8<<11, TxEnable 304,12168
	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable 304,12168
	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable = 10<<11, TxReset 304,12168
	FakeIntr 305,12244
	FakeIntr = 12<<11, AckIntr 305,12244
	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb 305,12244
	SetStatusEnb 306,12303
	SetStatusEnb = 15<<11, SetRxFilter 306,12303
	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold 306,12303
	SetTxThreshold 307,12374
	SetTxThreshold = 18<<11, SetTxStart 307,12374
	StartDMAUp 308,12421
	StartDMAUp = 20<<11, StartDMADown 308,12421
	StartDMAUp = 20<<11, StartDMADown = (20<<11)+1, StatsEnable 308,12421
	StatsDisable 309,12492
	StatsDisable = 22<<11, StopCoax 309,12492
	StatsDisable = 22<<11, StopCoax = 23<<11, SetFilterBit 309,12492
enum RxFilter RxFilter312,12622
	RxStation 313,12638
	RxStation = 1, RxMulticast 313,12638
	RxStation = 1, RxMulticast = 2, RxBroadcast 313,12638
	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm 313,12638
enum vortex_status vortex_status316,12746
	IntLatch 317,12767
	IntLatch = 0x0001,317,12767
	IntLatch = 0x0001, HostError 317,12767
	IntLatch = 0x0001, HostError = 0x0002,317,12767
	IntLatch = 0x0001, HostError = 0x0002, TxComplete 317,12767
	IntLatch = 0x0001, HostError = 0x0002, TxComplete = 0x0004,317,12767
	TxAvailable 318,12828
	TxAvailable = 0x0008,318,12828
	TxAvailable = 0x0008, RxComplete 318,12828
	TxAvailable = 0x0008, RxComplete = 0x0010,318,12828
	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly 318,12828
	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,318,12828
	IntReq 319,12890
	IntReq = 0x0040,319,12890
	IntReq = 0x0040, StatsFull 319,12890
	IntReq = 0x0040, StatsFull = 0x0080,319,12890
	DMADone 320,12928
	DMADone = 1<<8, DownComplete 320,12928
	DMADone = 1<<8, DownComplete = 1<<9, UpComplete 320,12928
	DMAInProgress 321,12986
	CmdInProgress 322,13047
enum Window1 Window1327,13243
	TX_FIFO 328,13258
	TX_FIFO = 0x10,328,13258
	TX_FIFO = 0x10,  RX_FIFO 328,13258
	TX_FIFO = 0x10,  RX_FIFO = 0x10,328,13258
	TX_FIFO = 0x10,  RX_FIFO = 0x10,  RxErrors 328,13258
	TX_FIFO = 0x10,  RX_FIFO = 0x10,  RxErrors = 0x14,328,13258
	RxStatus 329,13310
	RxStatus = 0x18,329,13310
	RxStatus = 0x18,  Timer=329,13310
	RxStatus = 0x18,  Timer=0x1A,329,13310
	RxStatus = 0x18,  Timer=0x1A, TxStatus 329,13310
	RxStatus = 0x18,  Timer=0x1A, TxStatus = 0x1B,329,13310
	TxFree 330,13358
	TxFree = 0x1C,330,13358
enum Window0 Window0332,13418
	Wn0EepromCmd 333,13433
	Wn0EepromData 334,13495
	IntrStatus=335,13558
	IntrStatus=0x0E,335,13558
enum Win0_EEPROM_bits Win0_EEPROM_bits337,13608
	EEPROM_Read 338,13632
	EEPROM_Read = 0x80,338,13632
	EEPROM_Read = 0x80, EEPROM_WRITE 338,13632
	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40,338,13632
	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE 338,13632
	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,338,13632
	EEPROM_EWENB 339,13695
	EEPROM_EWENB = 0x30,339,13695
	EEPROM_EWDIS 340,13760
	EEPROM_EWDIS = 0x00,340,13760
enum eeprom_offset eeprom_offset343,13854
	PhysAddr01=344,13875
	PhysAddr01=0, PhysAddr23=344,13875
	PhysAddr01=0, PhysAddr23=1, PhysAddr45=344,13875
	PhysAddr01=0, PhysAddr23=1, PhysAddr45=2, ModelID=344,13875
	EtherLink3ID=345,13929
	EtherLink3ID=7, IFXcvrIO=345,13929
	EtherLink3ID=7, IFXcvrIO=8, IRQLine=345,13929
	NodeAddr01=346,13969
	NodeAddr01=10, NodeAddr23=346,13969
	NodeAddr01=10, NodeAddr23=11, NodeAddr45=346,13969
	DriverTune=347,14015
	DriverTune=13, Checksum=347,14015
enum Window2 Window2349,14046
	Wn2_ResetOptions=350,14079
enum Window3 Window3352,14104
	Wn3_Config=353,14154
	Wn3_Config=0, Wn3_MAC_Ctrl=353,14154
	Wn3_Config=0, Wn3_MAC_Ctrl=6, Wn3_Options=353,14154
union wn3_config wn3_config355,14203
enum Window4 Window4365,14420
	Wn4_FIFODiag 366,14469
	Wn4_FIFODiag = 4, Wn4_NetDiag 366,14469
	Wn4_FIFODiag = 4, Wn4_NetDiag = 6, Wn4_PhysicalMgmt=366,14469
	Wn4_FIFODiag = 4, Wn4_NetDiag = 6, Wn4_PhysicalMgmt=8, Wn4_Media 366,14469
enum Win4_Media_bits Win4_Media_bits368,14544
	Media_SQE 369,14567
	Media_SQE = 0x0008,369,14567
	Media_10TP 370,14630
	Media_10TP = 0x00C0,370,14630
	Media_Lnk 371,14699
	Media_Lnk = 0x0080,371,14699
	Media_LnkBeat 372,14766
	Media_LnkBeat = 0x0800,372,14766
enum Window7 Window7374,14794
	Wn7_MasterAddr 375,14849
	Wn7_MasterAddr = 0, Wn7_MasterLen 375,14849
	Wn7_MasterAddr = 0, Wn7_MasterLen = 6, Wn7_MasterStatus 375,14849
enum MasterCtrl MasterCtrl378,14961
	PktStatus 379,14979
	PktStatus = 0x20,379,14979
	PktStatus = 0x20, DownListPtr 379,14979
	PktStatus = 0x20, DownListPtr = 0x24,379,14979
	PktStatus = 0x20, DownListPtr = 0x24, FragAddr 379,14979
	PktStatus = 0x20, DownListPtr = 0x24, FragAddr = 0x28,379,14979
	PktStatus = 0x20, DownListPtr = 0x24, FragAddr = 0x28, FragLen 379,14979
	PktStatus = 0x20, DownListPtr = 0x24, FragAddr = 0x28, FragLen = 0x2c,379,14979
	TxFreeThreshold 380,15051
	TxFreeThreshold = 0x2f,380,15051
	TxFreeThreshold = 0x2f, UpPktStatus 380,15051
	TxFreeThreshold = 0x2f, UpPktStatus = 0x30,380,15051
	TxFreeThreshold = 0x2f, UpPktStatus = 0x30, UpListPtr 380,15051
	TxFreeThreshold = 0x2f, UpPktStatus = 0x30, UpListPtr = 0x38,380,15051
#define LAST_FRAG 386,15280
struct boom_rx_desc boom_rx_desc387,15352
enum rx_desc_status rx_desc_status394,15590
	RxDComplete=395,15612
	RxDComplete=0x00008000,395,15612
	RxDComplete=0x00008000, RxDError=395,15612
	RxDComplete=0x00008000, RxDError=0x4000,395,15612
	IPChksumErr=397,15702
	IPChksumErr=1<<25, TCPChksumErr=397,15702
	IPChksumErr=1<<25, TCPChksumErr=1<<26, UDPChksumErr=397,15702
	IPChksumValid=398,15762
	IPChksumValid=1<<29, TCPChksumValid=398,15762
	IPChksumValid=1<<29, TCPChksumValid=1<<30, UDPChksumValid=398,15762
struct boom_tx_desc boom_tx_desc401,15832
enum tx_desc_status tx_desc_status409,16027
	CRCDisable=410,16049
	CRCDisable=0x2000,410,16049
	CRCDisable=0x2000, TxDComplete=410,16049
	CRCDisable=0x2000, TxDComplete=0x8000,410,16049
	AddIPChksum=411,16089
	AddIPChksum=0x02000000,411,16089
	AddIPChksum=0x02000000, AddTCPChksum=411,16089
	AddIPChksum=0x02000000, AddTCPChksum=0x04000000,411,16089
	AddIPChksum=0x02000000, AddTCPChksum=0x04000000, AddUDPChksum=411,16089
	AddIPChksum=0x02000000, AddTCPChksum=0x04000000, AddUDPChksum=0x08000000,411,16089
	TxIntrUploaded=412,16164
	TxIntrUploaded=0x80000000,412,16164
enum ChipCaps ChipCaps416,16318
enum ChipCaps { CapBusMaster=416,16318
enum ChipCaps { CapBusMaster=0x20 416,16318
struct vortex_private vortex_private418,16356
enum xcvr_types xcvr_types459,18117
	XCVR_10baseT=460,18135
	XCVR_10baseT=0, XCVR_AUI,460,18135
	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly,460,18135
	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2,460,18135
	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,460,18135
	XCVR_100baseFx,461,18210
	XCVR_100baseFx, XCVR_MII=461,18210
	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=461,18210
	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=8, XCVR_ExtMII=461,18210
	XCVR_100baseFx, XCVR_MII=6, XCVR_NWAY=8, XCVR_ExtMII=9, XCVR_Default=461,18210
static struct media_table media_table464,18288
} media_tbl[470,18562
#define MAX_UNITS 506,20294
static int options[507,20314
static int full_duplex[508,20382
static struct device *root_vortex_dev 510,20530
static int compaq_ioaddr 515,20669
static dev_node_t *vortex_attach(522,20798
static void vortex_detach(567,22307
struct driver_operations vortex_ops 591,22952
int init_module(598,23082
int tc59x_probe(611,23272
static int vortex_scan(622,23479
static struct device *vortex_probe1(776,28588
vortex_open(978,34671
static void vortex_timer(1171,41330
static void vortex_tx_timeout(1275,44710
vortex_error(1346,47096
vortex_start_xmit(1435,49982
boomerang_start_xmit(1497,51837
static void vortex_interrupt(1559,53774
static int vortex_rx(1686,57691
boomerang_rx(1759,60163
vortex_close(1855,63512
static struct net_device_stats *vortex_get_stats(1915,65090
static void update_stats(1936,65707
static int vortex_ioctl(1967,66875
static void set_rx_mode(1995,67799
#define mdio_delay(mdio_delay2021,68675
#define MDIO_SHIFT_CLK	2023,68712
#define MDIO_DIR_WRITE	2024,68740
#define MDIO_DATA_WRITE0 2025,68768
#define MDIO_DATA_WRITE1 2026,68817
#define MDIO_DATA_READ	2027,68866
#define MDIO_ENB_IN	2028,68894
static void mdio_sync(2032,69019
static int mdio_read(2045,69322
static void mdio_write(2078,70211
void cleanup_module(2108,70919

drivers/net/seeq8005.h,3866
#define SEEQ8005_IO_EXTENT	13,259
#define SEEQ_B	15,290
#define	SEEQ_CMD	17,316
#define	SEEQ_STATUS	18,360
#define SEEQ_CFG1	19,406
#define SEEQ_CFG2	20,437
#define	SEEQ_REA	21,468
#define SEEQ_RPR	22,531
#define	SEEQ_TPR	23,594
#define	SEEQ_DMAAR	24,658
#define SEEQ_BUFFER	25,719
#define	DEFAULT_TEA	27,783
#define SEEQCMD_DMA_INT_EN	29,811
#define SEEQCMD_RX_INT_EN	30,874
#define SEEQCMD_TX_INT_EN	31,940
#define SEEQCMD_WINDOW_INT_EN	32,1007
#define SEEQCMD_INT_MASK	33,1080
#define SEEQCMD_DMA_INT_ACK	35,1115
#define SEEQCMD_RX_INT_ACK	36,1166
#define SEEQCMD_TX_INT_ACK	37,1202
#define	SEEQCMD_WINDOW_INT_ACK	38,1238
#define SEEQCMD_ACK_ALL	39,1278
#define SEEQCMD_SET_DMA_ON	41,1313
#define SEEQCMD_SET_RX_ON	42,1381
#define SEEQCMD_SET_TX_ON	43,1440
#define SEEQCMD_SET_DMA_OFF	44,1495
#define SEEQCMD_SET_RX_OFF	45,1532
#define SEEQCMD_SET_TX_OFF	46,1568
#define SEEQCMD_SET_ALL_OFF	47,1604
#define SEEQCMD_FIFO_READ	49,1666
#define SEEQCMD_FIFO_WRITE	50,1748
#define SEEQSTAT_DMA_INT_EN	52,1814
#define SEEQSTAT_RX_INT_EN	53,1884
#define SEEQSTAT_TX_INT_EN	54,1920
#define SEEQSTAT_WINDOW_INT_EN	55,1956
#define	SEEQSTAT_DMA_INT	57,1997
#define SEEQSTAT_RX_INT	58,2055
#define SEEQSTAT_TX_INT	59,2089
#define	SEEQSTAT_WINDOW_INT	60,2123
#define SEEQSTAT_ANY_INT	61,2160
#define SEEQSTAT_DMA_ON	63,2195
#define SEEQSTAT_RX_ON	64,2248
#define SEEQSTAT_TX_ON	65,2300
#define SEEQSTAT_FIFO_FULL	67,2351
#define SEEQSTAT_FIFO_EMPTY	68,2387
#define SEEQSTAT_FIFO_DIR	69,2424
#define SEEQCFG1_BUFFER_MASK	71,2482
#define SEEQCFG1_BUFFER_MAC0	72,2568
#define SEEQCFG1_BUFFER_MAC1	73,2638
#define SEEQCFG1_BUFFER_MAC2	74,2676
#define SEEQCFG1_BUFFER_MAC3	75,2714
#define SEEQCFG1_BUFFER_MAC4	76,2752
#define SEEQCFG1_BUFFER_MAC5	77,2790
#define SEEQCFG1_BUFFER_PROM	78,2828
#define SEEQCFG1_BUFFER_TEA	79,2893
#define SEEQCFG1_BUFFER_BUFFER	80,2954
#define SEEQCFG1_BUFFER_INT_VEC	81,3021
#define SEEQCFG1_DMA_INTVL_MASK	83,3086
#define SEEQCFG1_DMA_CONT	84,3127
#define SEEQCFG1_DMA_800ns	85,3162
#define SEEQCFG1_DMA_1600ns	86,3198
#define SEEQCFG1_DMA_3200ns	87,3235
#define SEEQCFG1_DMA_LEN_MASK	89,3273
#define SEEQCFG1_DMA_LEN1	90,3312
#define SEEQCFG1_DMA_LEN2	91,3347
#define SEEQCFG1_DMA_LEN4	92,3382
#define SEEQCFG1_DMA_LEN8	93,3417
#define SEEQCFG1_MAC_MASK	95,3453
#define SEEQCFG1_MAC0_EN	96,3528
#define SEEQCFG1_MAC1_EN	97,3562
#define SEEQCFG1_MAC2_EN	98,3596
#define SEEQCFG1_MAC3_EN	99,3630
#define	SEEQCFG1_MAC4_EN	100,3664
#define SEEQCFG1_MAC5_EN	101,3698
#define	SEEQCFG1_MATCH_MASK	103,3733
#define SEEQCFG1_MATCH_SPECIFIC	104,3807
#define SEEQCFG1_MATCH_BROAD	105,3882
#define SEEQCFG1_MATCH_MULTI	106,3959
#define SEEQCFG1_MATCH_ALL	107,4037
#define SEEQCFG1_DEFAULT	109,4097
#define SEEQCFG2_BYTE_SWAP	111,4190
#define SEEQCFG2_AUTO_REA	112,4251
#define SEEQCFG2_CRC_ERR_EN	114,4359
#define SEEQCFG2_DRIBBLE_EN	115,4447
#define SEEQCFG2_SHORT_EN	116,4531
#define	SEEQCFG2_SLOTSEL	118,4608
#define SEEQCFG2_NO_PREAM	119,4703
#define SEEQCFG2_ADDR_LEN	120,4781
#define SEEQCFG2_REC_CRC	121,4841
#define SEEQCFG2_XMIT_NO_CRC	122,4934
#define SEEQCFG2_LOOPBACK	123,5029
#define SEEQCFG2_CTRLO	124,5064
#define SEEQCFG2_RESET	125,5097
struct seeq_pkt_hdr seeq_pkt_hdr127,5161
#define SEEQPKTH_BAB_INT_EN	140,5761
#define SEEQPKTH_COL_INT_EN	141,5813
#define SEEQPKTH_COL16_INT_EN	142,5865
#define SEEQPKTH_XMIT_INT_EN	143,5919
#define SEEQPKTH_DATA_FOLLOWS	144,5972
#define SEEQPKTH_CHAIN	145,6040
#define SEEQPKTH_XMIT	146,6098
#define SEEQPKTS_BABBLE	148,6129
#define SEEQPKTS_OVERSIZE	149,6179
#define SEEQPKTS_COLLISION	150,6230
#define SEEQPKTS_CRC_ERR	151,6282
#define SEEQPKTS_COLL16	152,6332
#define SEEQPKTS_DRIB	153,6382
#define SEEQPKTS_SHORT	154,6430
#define SEEQPKTS_DONE	155,6479
#define SEEQPKTS_ANY_ERROR	156,6511

drivers/net/3c523.c,1733
#define DEBUG	108,3982
#define SYSBUSVAL 109,4013
#define make32(make32111,4088
#define make24(make24112,4141
#define make16(make16113,4192
static int irq_table[119,4441
static int irq_table[] __initdata 119,4441
static int csr_table[123,4496
static int csr_table[] __initdata 123,4496
static int shm_table[127,4569
static int shm_table[] __initdata 127,4569
#define RECV_BUFF_SIZE 146,5238
#define XMIT_BUFF_SIZE 147,5291
#define NUM_XMIT_BUFFS 148,5344
#define NUM_RECV_BUFFS_8 149,5409
#define NUM_RECV_BUFFS_16 150,5468
#define NO_NOPCOMMANDS	153,5555
#define DELAY(DELAY158,5707
#define DELAY_16(DELAY_16166,5970
#define WAIT_4_SCB_CMD(WAIT_4_SCB_CMD169,6066
struct priv priv195,7093
#define elmc_attn586(elmc_attn586216,7837
#define elmc_reset586(elmc_reset586217,7911
#define elmc_id_attn586(elmc_id_attn586222,8165
#define elmc_id_reset586(elmc_id_reset586223,8229
static void elmc_do_attn586(229,8454
static void elmc_do_reset586(249,9242
static int elmc_close(263,9581
static int elmc_open(283,9873
__initfunc(314,10454
void alloc586(354,11585
static int elmc_getinfo(386,12419
__initfunc(417,13365
static int init586(588,18734
static void *alloc_rfa(826,25721
static void elmc_interrupt(870,26886
static void elmc_rcv_int(947,28904
static void elmc_rnr_int(994,30426
static void elmc_xmt_int(1016,31004
static void startrecv586(1061,32219
static int elmc_send_packet(1075,32556
static struct net_device_stats *elmc_get_stats(1187,35737
static void set_multicast_list(1213,36374
static char devicename[1230,36702
static struct device dev_elmc 1232,36737
static int irq 1237,36846
static int io 1238,36866
int init_module(1242,36931
void cleanup_module(1254,37094

drivers/net/cs89x0.c,1308
static char *version 32,1288
#define NET_DEBUG 39,1536
#define MOD_INC_USE_COUNT51,1812
#define MOD_DEC_USE_COUNT52,1838
#define PRINTK(PRINTK55,1872
static unsigned int netcard_portlist[89,2589
static unsigned int netcard_portlist[] __initdata 89,2589
static unsigned int net_debug 92,2728
#define NETCARD_IO_EXTENT	95,2829
struct net_local net_local98,2914
#define tx_done(tx_done133,4207
struct netdev_entry netcard_drv 145,4638
__initfunc(148,4743
readreg(172,5344
writereg(179,5491
readword(187,5651
writeword(193,5754
__initfunc(198,5851
__initfunc(211,6179
__initfunc(229,6739
__initfunc(247,7162
__initfunc(395,12115
control_dc_dc(426,13015
detect_tp(447,13577
send_test_pkt(492,15082
detect_aui(537,16480
detect_bnc(553,16815
write_irq(570,17155
net_open(596,17834
net_send_packet(733,23124
static void net_interrupt(790,25106
net_rx(862,27745
net_close(909,29111
net_get_stats(931,29505
static void set_multicast_list(944,29812
static int set_mac_address(969,30520
static char namespace[987,30954
static struct device dev_cs89x0 988,30986
static int io=994,31102
static int irq=995,31119
static int debug=996,31137
static char media[997,31157
static int duplex=998,31179
EXPORT_NO_SYMBOLS;1006,31324
init_module(1035,32095
cleanup_module(1074,33292

drivers/net/eth16i.c,5871
static char *version 139,5343
#define __init172,6086
#define __initdata173,6101
#define __initfunc(__initfunc174,6120
#define test_and_set_bit(test_and_set_bit178,6185
typedef struct enet_statistics eth16i_stats_type;eth16i_stats_type182,6280
typedef struct net_device_stats eth16i_stats_type;eth16i_stats_type184,6336
#define BIT(BIT188,6412
#define BITSET(BITSET189,6452
#define BITCLR(BITCLR190,6527
#define ETH16I_IO_EXTENT 193,6668
#define TX_TIMEOUT 196,6759
#define MAX_RX_LOOP 199,6853
#define ETH16I_INTR_ON	202,6915
#define ETH16I_INTR_OFF	203,6987
#define PKT_GOOD 206,7070
#define PKT_GOOD_RMT 207,7108
#define PKT_SHORT 208,7146
#define PKT_ALIGN_ERR 209,7184
#define PKT_CRC_ERR 210,7222
#define PKT_RX_BUF_OVERFLOW 211,7260
#define TX_STATUS_REG 214,7338
#define TX_DONE 215,7371
#define NET_BUSY 216,7409
#define TX_PKT_RCD 217,7447
#define CR_LOST 218,7485
#define TX_JABBER_ERR	219,7523
#define COLLISION 220,7559
#define COLLISIONS_16 221,7597
#define RX_STATUS_REG 224,7674
#define RX_PKT 225,7707
#define BUS_RD_ERR 226,7768
#define SHORT_PKT_ERR 227,7806
#define ALIGN_ERR 228,7844
#define CRC_ERR 229,7882
#define RX_BUF_OVERFLOW 230,7920
#define TX_INTR_REG 233,8022
#define TX_INTR_DONE 234,8055
#define TX_INTR_COL 235,8093
#define TX_INTR_16_COL 236,8131
#define RX_INTR_REG 239,8218
#define RX_INTR_RECEIVE 240,8251
#define RX_INTR_SHORT_PKT 241,8289
#define RX_INTR_CRC_ERR 242,8327
#define RX_INTR_BUF_OVERFLOW 243,8365
#define TRANSMIT_MODE_REG 246,8441
#define LOOPBACK_CONTROL 247,8474
#define CONTROL_OUTPUT 248,8512
#define RECEIVE_MODE_REG 251,8587
#define RX_BUFFER_EMPTY 252,8620
#define ACCEPT_BAD_PACKETS 253,8658
#define RECEIVE_SHORT_ADDR 254,8696
#define ACCEPT_SHORT_PACKETS 255,8734
#define REMOTE_RESET 256,8772
#define ADDRESS_FILTER_MODE 258,8811
#define REJECT_ALL 259,8858
#define ACCEPT_ALL 260,8891
#define MODE_1 261,8924
#define MODE_2 262,9002
#define CONFIG_REG_0 265,9120
#define DLC_EN 266,9153
#define SRAM_CYCLE_TIME_100NS 267,9191
#define SYSTEM_BUS_WIDTH_8 268,9229
#define BUFFER_WIDTH_8 269,9299
#define TBS1 270,9369
#define TBS0 271,9414
#define SRAM_BS1 272,9452
#define SRAM_BS0 273,9520
#define ETH16I_TX_BUF_SIZE 276,9659
#define TX_BUF_1x2048 278,9773
#define TX_BUF_2x2048 279,9806
#define TX_BUF_2x4098 280,9839
#define TX_BUF_2x8192 281,9872
#define CONFIG_REG_1 284,9945
#define POWERUP 285,9978
#define TRANSMIT_START_REG 288,10047
#define TRANSMIT_START_RB 289,10081
#define TX_START 290,10114
#define NODE_ID_0 293,10308
#define NODE_ID_RB 294,10341
#define HASH_TABLE_0 297,10411
#define HASH_TABLE_RB 298,10444
#define BUFFER_MEM_PORT_LB 301,10504
#define DATAPORT 302,10537
#define BUFFER_MEM_PORT_HB 303,10587
#define COL_16_REG 306,10666
#define HALT_ON_16 307,10700
#define RETRANS_AND_HALT_ON_16 308,10736
#define MAX_COL_16	311,10846
#define TRANSCEIVER_MODE_REG 314,10931
#define TRANSCEIVER_MODE_RB 315,10965
#define IO_BASE_UNLOCK	316,11007
#define LOWER_SQUELCH_TRESH 317,11044
#define LINK_TEST_DISABLE 318,11082
#define AUI_SELECT 319,11120
#define DIS_AUTO_PORT_SEL 320,11158
#define FILTER_SELF_RX_REG 323,11242
#define SKIP_RX_PACKET 324,11276
#define FILTER_SELF_RECEIVE 325,11314
#define EEPROM_CTRL_REG 328,11393
#define EEPROM_DATA_REG 331,11465
#define CS_0 334,11536
#define CS_1 335,11572
#define SK_0 336,11608
#define SK_1 337,11644
#define DI_0 338,11680
#define DI_1 339,11716
#define EEPROM_READ 342,11789
#define E_NODEID_0 345,11859
#define E_NODEID_1 346,11895
#define E_NODEID_2 347,11931
#define E_PORT_SELECT 348,11967
  #define E_PORT_BNC 349,12003
  #define E_PORT_DIX 350,12039
  #define E_PORT_TP 351,12075
  #define E_PORT_AUTO 352,12111
  #define E_PORT_FROM_EPROM 353,12147
#define E_PRODUCT_CFG 354,12183
#define eeprom_slow_io(eeprom_slow_io358,12283
#define JUMPERLESS_CONFIG 361,12416
#define ID_ROM_0 364,12522
#define ID_ROM_7 365,12556
#define RESET 366,12590
static unsigned int eth16i_portlist[369,12701
static unsigned int eth32i_portlist[372,12808
static unsigned int eth16i_irqmap[377,13041
#define NUM_OF_ISA_IRQS 378,13100
static unsigned int eth32i_irqmap[381,13187
#define EISA_IRQ_REG	382,13262
#define NUM_OF_EISA_IRQS 383,13289
static unsigned int eth16i_tx_buf_map[385,13319
static unsigned int boot 386,13389
#define ETH16I_DEBUG 390,13502
static unsigned int eth16i_debug 392,13532
struct eth16i_local eth16i_local396,13616
static char *cardname 443,15413
/struct netdev_entry eth16i_drv 448,15526
__initfunc(453,15659
__initfunc(487,16516
static void eth16i_initialize(596,19461
static int eth16i_probe_port(686,21619
static void eth16i_set_port(738,22797
static int eth16i_send_probe_packet(771,23480
static int eth16i_receive_probe_packet(792,23911
static int eth16i_set_irq(827,24794
static int eth16i_get_irq(853,25323
static int eth16i_check_signature(871,25754
static int eth16i_read_eeprom(918,26775
static int eth16i_read_eeprom_word(930,27044
static void eth16i_eeprom_cmd(949,27405
static int eth16i_open(969,27959
static int eth16i_close(1010,28884
static int eth16i_tx(1039,29430
static void eth16i_rx(1188,33344
static void eth16i_interrupt(1301,36013
static void eth16i_skip_packet(1409,39052
static void eth16i_reset(1421,39319
static void eth16i_multicast(1444,39848
static struct enet_statistics *eth16i_get_stats(1457,40138
static void eth16i_select_regbank(1464,40293
static ushort eth16i_parse_mediatype(1474,40516
#define MAX_ETH16I_CARDS 1491,40912
#define NAMELEN 1492,40984
static char namelist[1494,41057
static struct device dev_eth16i[1495,41116
static int ioaddr[1504,41233
static int irq[1506,41285
static char* mediatype[1508,41335
static int debug 1509,41386
int init_module(1530,42015
void cleanup_module(1572,42999

drivers/net/dlci.c,692
static const char *devname 60,1823
static const char *version 61,1860
static struct device *open_dev[63,1947
static char *basename[65,1999
int register_frad(70,2121
int unregister_frad(99,2587
static int dlci_header(125,3066
static void dlci_receive(164,3828
static int dlci_transmit(237,5556
int dlci_config(287,6413
int dlci_dev_ioctl(321,7049
static int dlci_change_mtu(353,7642
static int dlci_open(362,7809
static int dlci_close(389,8214
static struct net_device_stats *dlci_get_stats(406,8459
int dlci_add(415,8598
int dlci_del(499,10306
int dlci_ioctl(540,10956
int dlci_init(572,11431
__initfunc(604,12138
int init_module(623,12425
void cleanup_module(630,12507

drivers/net/sdla.c,1591
static const char* version 65,1979
static const char* devname 67,2067
static unsigned int valid_port[69,2105
static unsigned int valid_port[] __initdata 69,2105
static unsigned int valid_mem[71,2211
static unsigned int valid_mem[]  __initdata 71,2211
#define SDLA_WINDOW(SDLA_WINDOW84,2961
static void sdla_read(86,3062
static void sdla_write(111,3575
static void sdla_clear(134,4084
static char sdla_byte(158,4453
void sdla_stop(174,4730
void sdla_start(201,5370
int sdla_z80_poll(239,6407
#define Z80_READY 264,6979
#define LOADER_READY 265,7031
#define Z80_SCC_OK 266,7089
#define Z80_SCC_BAD	267,7136
static int sdla_cpuspeed(269,7187
struct _dlci_stat _dlci_stat319,8180
struct _frad_stat _frad_stat325,8282
static void sdla_errors(331,8364
static int sdla_cmd(414,10680
int sdla_activate(497,12577
int sdla_deactivate(519,13023
int sdla_assoc(541,13488
int sdla_deassoc(578,14239
int sdla_dlci_conf(607,14767
static int sdla_transmit(646,15688
static void sdla_receive(745,17892
static void sdla_isr(873,20703
static void sdla_poll(931,22155
static int sdla_close(946,22416
struct conf_data conf_data1003,23739
static int sdla_open(1008,23829
static int sdla_config(1108,26494
static int sdla_xfer(1206,28923
static int sdla_reconfig(1237,29535
static int sdla_ioctl(1261,30114
int sdla_change_mtu(1328,31472
int sdla_set_config(1341,31675
static struct net_device_stats *sdla_stats(1619,37544
__initfunc(1627,37678
__initfunc(1669,38620
static struct device sdla0 1676,38725
int init_module(1678,38810
void cleanup_module(1688,38940

drivers/net/bsd_comp.c,1547
#define  PACKETPTR 91,3526
#define BSD_VERSION(BSD_VERSION122,4681
#define BSD_NBITS(BSD_NBITS123,4715
#define BSD_CURRENT_VERSION	125,4750
struct bsd_dict bsd_dict131,4829
struct bsd_db bsd_db152,5470
#define BSD_OVHD	179,6871
#define MIN_BSD_BITS	180,6926
#define BSD_INIT_BITS	181,6949
#define MAX_BSD_BITS	182,6984
#define CLEAR	215,8306
#define FIRST	216,8356
#define LAST	217,8399
#define MAXCODE(MAXCODE219,8417
#define BADCODEM1	220,8453
#define BSD_HASH(BSD_HASH222,8495
#define BSD_KEY(BSD_KEY224,8608
#define CHECK_GAP	227,8711
#define RATIO_SCALE_LOG	229,8764
#define RATIO_SCALE	230,8790
#define RATIO_MAX	231,8831
bsd_clear(238,8924
static int bsd_check 263,9612
static void bsd_comp_stats 309,10626
static void bsd_reset 327,11141
static void bsd_free 341,11351
static void *bsd_alloc 375,11816
static void *bsd_comp_alloc 476,14030
static void *bsd_decomp_alloc 481,14149
static int bsd_init 490,14306
static int bsd_comp_init 533,15086
static int bsd_decomp_init 539,15272
#define dict_ptrx(dict_ptrx550,15557
#define lens_ptrx(lens_ptrx551,15598
static unsigned short *lens_ptr(554,15653
static struct bsd_dict *dict_ptr(564,15887
#define lens_ptr(lens_ptr575,16124
#define dict_ptr(dict_ptr576,16167
static int bsd_compress 590,16566
#define PUTBYTE(PUTBYTE610,16999
#define OUTPUT(OUTPUT623,17199
static void bsd_incomp 832,21484
static int bsd_decompress 854,22357
static struct compressor ppp_bsd_compress 1159,29134
init_module(1181,29856
cleanup_module(1190,30041

drivers/net/sunlance.c,3055
static char *version 67,1893
static char *lancestr 70,1991
static char *lancedma 71,2024
#define LANCE_LOG_TX_BUFFERS 116,3117
#define LANCE_LOG_RX_BUFFERS 117,3148
#define CRC_POLYNOMIAL_BE 120,3187
#define CRC_POLYNOMIAL_LE 121,3258
#define LE_CSR0 123,3333
#define LE_CSR1 124,3351
#define LE_CSR2 125,3369
#define LE_CSR3 126,3387
#define LE_MO_PROM 128,3406
#define	LE_C0_ERR	130,3469
#define	LE_C0_BABL	131,3542
#define	LE_C0_CERR	132,3600
#define	LE_C0_MISS	133,3659
#define	LE_C0_MERR	134,3713
#define	LE_C0_RINT	135,3764
#define	LE_C0_TINT	136,3815
#define	LE_C0_IDON	137,3869
#define	LE_C0_INTR	138,3922
#define	LE_C0_INEA	139,3973
#define	LE_C0_RXON	140,4022
#define	LE_C0_TXON	141,4066
#define	LE_C0_TDMD	142,4113
#define	LE_C0_STOP	143,4164
#define	LE_C0_STRT	144,4210
#define	LE_C0_INIT	145,4257
#define	LE_C3_BSWP	147,4304
#define	LE_C3_ACON	148,4342
#define	LE_C3_BCON	149,4383
#define LE_R1_OWN 152,4461
#define LE_R1_ERR 153,4518
#define LE_R1_FRA 154,4594
#define LE_R1_OFL 155,4649
#define LE_R1_CRC 156,4707
#define LE_R1_BUF 157,4755
#define LE_R1_SOP 158,4811
#define LE_R1_EOP 159,4865
#define LE_R1_POK 160,4917
#define LE_T1_OWN 162,4986
#define LE_T1_ERR 163,5046
#define LE_T1_EMORE 164,5098
#define LE_T1_EONE 165,5170
#define LE_T1_EDEF 166,5232
#define LE_T1_SOP 167,5286
#define LE_T1_EOP 168,5340
#define LE_T1_POK	169,5392
#define LE_T3_BUF 171,5452
#define LE_T3_UFL 172,5503
#define LE_T3_LCOL 173,5557
#define LE_T3_CLOS 174,5616
#define LE_T3_RTY 175,5673
#define LE_T3_TDR 176,5723
#define TX_RING_SIZE	178,5796
#define TX_RING_MOD_MASK	179,5849
#define TX_RING_LEN_BITS	180,5894
#define RX_RING_SIZE	182,5952
#define RX_RING_MOD_MASK	183,6005
#define RX_RING_LEN_BITS	184,6050
#define PKT_BUF_SZ	186,6108
#define RX_BUFF_SIZE 187,6133
#define TX_BUFF_SIZE 188,6176
struct lance_rx_desc lance_rx_desc190,6220
struct lance_tx_desc lance_tx_desc200,6599
struct lance_init_block lance_init_block210,7009
#define libdesc_offset(libdesc_offset230,7809
#define libbuff_offset(libbuff_offset233,7919
struct lance_private lance_private236,8032
#define TX_BUFFS_AVAIL 262,8743
struct lance_regs lance_regs267,8931
int sparc_lance_debug 272,9054
#define LANCE_ADDR(LANCE_ADDR282,9433
static struct lance_private *root_lance_dev 285,9496
static void load_csrs 289,9585
#define ZERO 311,10080
static void lance_init_ring 315,10156
static int init_restart_lance 392,12524
static int lance_rx 448,13797
static int lance_tx 522,15773
static void lance_interrupt 601,17710
struct device *last_dev 664,19075
static int lance_open 666,19105
static int lance_close 748,21185
static inline int lance_reset 766,21542
static int lance_start_xmit 797,22300
static struct net_device_stats *lance_get_stats 865,23950
static void lance_load_multicast 873,24143
static void lance_set_multicast 919,25160
__initfunc(969,26302
find_ledma 1146,31232
__initfunc(1161,31489
__initfunc(1183,32019
init_module(1230,32983
cleanup_module(1237,33068

drivers/net/sunhme.c,4341
static char *version 8,291
static struct happy_meal *root_happy_dev 58,1356
static struct quattro *qfe_sbus_list 61,1413
static struct quattro *qfe_pci_list 63,1476
struct hme_tx_logent hme_tx_logent73,1624
#define TXLOG_ACTION_IRQ	77,1712
#define TXLOG_ACTION_TXMIT	78,1742
#define TXLOG_ACTION_TBUSY	79,1774
#define TXLOG_ACTION_NBUFS	80,1806
#define TX_LOG_LEN	83,1863
static struct hme_tx_logent tx_log[84,1886
static int txlog_cur_entry 85,1934
static __inline__ void tx_add_log(86,1966
static __inline__ void tx_dump_log(101,2377
static __inline__ void tx_dump_ring(114,2748
#define tx_add_log(tx_add_log130,3351
#define tx_dump_log(tx_dump_log131,3397
#define tx_dump_ring(tx_dump_ring132,3437
#define HMD(HMD136,3503
#define HMD(HMD138,3534
#define ASD(ASD144,3615
#define ASD(ASD146,3646
#define DEFAULT_IPG0 149,3669
#define DEFAULT_IPG1 150,3724
#define DEFAULT_IPG2 151,3773
#define DEFAULT_JAMSIZE 152,3822
#define BB_PUT_BIT(BB_PUT_BIT155,3950
#define BB_GET_BIT(BB_GET_BIT161,4151
#define BB_GET_BIT2(BB_GET_BIT2171,4455
#define TCVR_FAILURE 184,4837
static inline int happy_meal_bb_read(186,4911
static inline void happy_meal_bb_write(233,6218
#define TCVR_READ_TRIES 276,7295
static inline int happy_meal_tcvr_read(278,7325
#define TCVR_WRITE_TRIES 308,8133
static inline void happy_meal_tcvr_write(310,8163
static int try_next_permutation(368,10753
static void display_link_mode(392,11356
static void display_forced_link_mode(414,11949
static int set_happy_link_modes(433,12457
static void happy_meal_timer(495,14220
#define TX_RESET_TRIES 658,19028
#define RX_RESET_TRIES 659,19058
static inline void happy_meal_tx_reset(661,19089
static inline void happy_meal_rx_reset(681,19590
#define STOP_TRIES 701,20111
static inline void happy_meal_stop(703,20142
static void happy_meal_get_counters(723,20684
static inline void happy_meal_poll_start(746,21373
static inline void happy_meal_poll_stop(792,22491
#define TCVR_RESET_TRIES 824,23324
#define TCVR_UNISOLATE_TRIES 825,23395
static int happy_meal_tcvr_reset(827,23467
static void happy_meal_transceiver_check(919,26212
static inline void happy_meal_clean_rings(1027,29971
static void happy_meal_init_rings(1046,30321
static void sun4c_happy_meal_init_rings(1109,32039
static void happy_meal_begin_auto_negotiation(1132,32657
#define CRC_POLYNOMIAL_BE 1254,36686
#define CRC_POLYNOMIAL_LE 1255,36757
static int happy_meal_init(1257,36832
static void happy_meal_set_initial_advertisement(1537,45568
static int happy_meal_is_not_so_happy(1595,47335
static inline void happy_meal_mif_interrupt(1710,50744
#define TXD(TXD1738,51785
#define TXD(TXD1740,51815
static inline void happy_meal_tx(1743,51838
static inline void pci_happy_meal_tx(1771,52408
static inline void sun4c_happy_meal_tx(1808,53193
#define RXD(RXD1832,53635
#define RXD(RXD1834,53665
static inline void happy_meal_rx(1844,54122
static inline void pci_happy_meal_rx(1950,56853
static inline void sun4c_happy_meal_rx(2070,59864
static inline void sun4d_happy_meal_rx(2133,61593
static void happy_meal_interrupt(2243,64508
static void pci_happy_meal_interrupt(2288,65563
static void sun4c_happy_meal_interrupt(2334,66695
static void sun4d_happy_meal_interrupt(2378,67750
static void quattro_sbus_interrupt(2423,68806
static int happy_meal_open(2442,69315
static int happy_meal_close(2502,70998
#define SXD(SXD2528,71673
#define SXD(SXD2530,71703
static int happy_meal_start_xmit(2533,71726
static int pci_happy_meal_start_xmit(2596,73480
static int sun4c_happy_meal_start_xmit(2650,74790
static int sun4d_happy_meal_start_xmit(2706,76127
static struct net_device_stats *happy_meal_get_stats(2759,77642
static void happy_meal_set_multicast(2767,77849
static int happy_meal_ioctl(2825,79339
void __init quattro_get_ranges(2902,81550
static void __init quattro_apply_ranges(2917,81877
static struct quattro * __init quattro_sbus_find(2944,82543
static struct quattro * __init quattro_pci_find(2995,83577
static void __init quattro_sbus_register_irqs(3029,84334
static unsigned hme_version_printed 3062,85083
static int __init happy_meal_ether_init(3064,85125
static int __init happy_meal_pci_init(3253,90500
int __init happy_meal_probe(3427,95608
init_module(3482,96693
cleanup_module(3489,96777

drivers/net/smc9194.c,1603
static const char *version 50,2043
#define REALLY_NEW_KERNEL87,2927
#define free_irq(free_irq89,2979
#define request_irq(request_irq90,3018
#define USE_32_BIT 104,3331
static unsigned int smc_portlist[111,3543
static unsigned int smc_portlist[] __initdata 111,3543
#define MEMORY_WAIT_TIME 120,3870
#define SMC_DEBUG 131,4122
#define PRINTK3(PRINTK3134,4164
#define PRINTK3(PRINTK3136,4198
#define PRINTK2(PRINTK2140,4243
#define PRINTK2(PRINTK2142,4277
#define PRINTK(PRINTK146,4321
#define PRINTK(PRINTK148,4354
#define NO_AUTOPROBE154,4473
#define CARDNAME 165,4822
char kernel_version[168,4876
struct smc_local smc_local172,4967
#define tx_done(tx_done304,8808
static void smc_reset(361,10545
static void smc_enable(401,11708
static void smc_shutdown(427,12454
static void smc_setmulticast(464,13603
static int crc32(506,14777
static int smc_wait_to_send_packet(547,15877
static void smc_hardware_send_packet(641,18727
__initfunc(753,21803
__initfunc(798,22857
__initfunc(880,25018
__initfunc(945,27270
static void print_packet(1126,31991
static int smc_open(1168,32618
static int smc_send_packet(1223,33901
static void smc_interrupt(1270,35469
static void smc_rcv(1417,39257
static void smc_tx(1556,43057
static int smc_close(1617,44601
static struct net_device_stats* smc_query_statistics(1637,45040
static void smc_set_multicast_list(1652,45521
static char devicename[1727,47757
static struct device devSMC9194 1728,47793
int io 1734,47977
int irq 1735,47989
int ifport 1736,48002
int init_module(1742,48091
void cleanup_module(1760,48464

drivers/net/smc9194.h,2932
#define _SMC9194_H_26,956
typedef unsigned char			byte;byte30,1009
typedef unsigned short			word;word31,1039
typedef unsigned long int 		dword;dword32,1070
#define SMC_IO_EXTENT	37,1177
#define	BANK_SELECT	60,1919
#define	TCR 64,1959
#define TCR_ENABLE	65,2011
#define TCR_FDUPLX 66,2074
#define TCR_STP_SQET	67,2136
#define	TCR_MON_CNS	68,2212
#define	TCR_PAD_ENABLE	69,2273
#define	TCR_CLEAR	71,2341
#define	TCR_NORMAL 74,2491
#define EPH_STATUS	77,2526
#define ES_LINK_OK	78,2547
#define	RCR	80,2607
#define RCR_SOFTRESET	81,2622
#define	RCR_STRIP_CRC	82,2675
#define RCR_ENABLE	83,2720
#define RCR_ALMUL	84,2791
#define	RCR_PROMISC	85,2850
#define	RCR_NORMAL	88,2954
#define RCR_CLEAR	89,3002
#define	COUNTER	91,3055
#define	MIR	92,3074
#define	MCR	93,3089
#define CONFIG	97,3140
#define CFG_AUI_SELECT	98,3159
#define	BASE	99,3190
#define	ADDR0	100,3207
#define	ADDR1	101,3225
#define	ADDR2	102,3243
#define	GENERAL	103,3261
#define	CONTROL	104,3282
#define	CTL_POWERDOWN	105,3303
#define	CTL_LE_ENABLE	106,3333
#define	CTL_CR_ENABLE	107,3361
#define	CTL_TE_ENABLE	108,3389
#define CTL_AUTO_RELEASE	109,3419
#define	CTL_EPROM_ACCESS	110,3451
#define MMU_CMD	113,3531
#define MC_BUSY	114,3550
#define MC_NOP	115,3609
#define	MC_ALLOC	116,3627
#define	MC_RESET	117,3692
#define	MC_REMOVE	118,3715
#define MC_RELEASE 119,3775
#define MC_FREEPKT 120,3850
#define MC_ENQUEUE	121,3915
#define	PNR_ARR	123,3981
#define FIFO_PORTS	124,4000
#define FP_RXEMPTY 126,4022
#define FP_TXEMPTY 127,4049
#define	POINTER	129,4075
#define PTR_READ	130,4094
#define	PTR_RCV	131,4118
#define	PTR_AUTOINC 132,4142
#define PTR_AUTO_INC	133,4170
#define	DATA_1	135,4199
#define	DATA_2	136,4217
#define	INTERRUPT	137,4236
#define INT_MASK	139,4258
#define IM_RCV_INT	140,4278
#define	IM_TX_INT	141,4301
#define	IM_TX_EMPTY_INT	142,4323
#define	IM_ALLOC_INT	143,4352
#define	IM_RX_OVRN_INT	144,4377
#define	IM_EPH_INT	145,4405
#define	IM_ERCV_INT	146,4429
#define	MULTICAST1	149,4491
#define	MULTICAST2	150,4512
#define	MULTICAST3	151,4533
#define	MULTICAST4	152,4554
#define	MGMT	153,4575
#define	REVISION	154,4591
#define	ERCV	158,4677
#define CHIP_9190	160,4695
#define CHIP_9194	161,4715
#define CHIP_9195	162,4735
#define CHIP_91100	163,4755
static const char * chip_ids[165,4777
#define TS_SUCCESS 178,5018
#define TS_LOSTCAR 179,5044
#define TS_LATCOL 180,5070
#define TS_16COL 181,5096
#define RS_ALGNERR	186,5152
#define RS_BADCRC	187,5178
#define RS_ODDFRAME	188,5203
#define RS_TOOLONG	189,5230
#define RS_TOOSHORT	190,5256
#define RS_MULTICAST	191,5283
#define RS_ERRORS	192,5311
static const char * interfaces[194,5383
#define SMC_SELECT_BANK(SMC_SELECT_BANK203,5743
#define SMC_DELAY(SMC_DELAY206,5851
#define SMC_ENABLE_INT(SMC_ENABLE_INT211,6011
#define SMC_DISABLE_INT(SMC_DISABLE_INT221,6245
#define SMC_INTERRUPT_MASK 237,6775

drivers/net/a2065.c,1178
#define LANCE_LOG_TX_BUFFERS	71,1962
#define LANCE_LOG_RX_BUFFERS	72,1995
#define TX_RING_SIZE	74,2029
#define RX_RING_SIZE	75,2077
#define TX_RING_MOD_MASK	77,2126
#define RX_RING_MOD_MASK	78,2168
#define PKT_BUF_SIZE	80,2211
#define RX_BUFF_SIZE 81,2240
#define TX_BUFF_SIZE 82,2285
struct lance_init_block lance_init_block90,2381
struct lance_private lance_private114,3156
#define TX_BUFFS_AVAIL 141,3920
#define LANCE_ADDR(LANCE_ADDR146,4051
static void load_csrs 149,4128
#define ZERO 168,4521
static void lance_init_ring 172,4597
static int init_restart_lance 250,6842
static int lance_rx 273,7408
static int lance_tx 348,9522
static void lance_interrupt 431,11570
struct device *last_dev 491,12984
static int lance_open 493,13014
static int lance_close 524,13577
static inline int lance_reset 544,13933
static int lance_start_xmit 567,14421
static struct net_device_stats *lance_get_stats 647,16262
static void lance_load_multicast 655,16455
static void lance_set_multicast 705,17492
__initfunc(743,18248
static char devicename[823,20630
static struct device a2065_dev 825,20667
int init_module(833,20841
void cleanup_module(845,21029

drivers/net/hamradio/baycom_par.c,1870
#define put_user(put_user104,4003
#define get_user(get_user105,4089
extern __inline__ int copy_from_user(107,4183
extern __inline__ int copy_to_user(116,4416
#define __init129,4715
#define __initdata130,4730
#define __initfunc(__initfunc131,4749
#define BAYCOM_DEBUG136,4858
#define BAYCOM_OPTIONS_SOFTDCD 141,4914
static const char bc_drvname[145,5026
static const char bc_drvinfo[146,5073
#define NR_PORTS 151,5321
static struct device baycom_device[153,5341
} baycom_ports[158,5436
#define SER12_EXTENT 162,5559
#define LPT_DATA(LPT_DATA164,5583
#define LPT_STATUS(LPT_STATUS165,5629
#define LPT_CONTROL(LPT_CONTROL166,5675
#define LPT_IRQ_ENABLE 167,5721
#define PAR96_BURSTBITS 169,5755
#define PAR96_BURST 170,5782
#define PAR96_PTT 171,5808
#define PAR96_TXBIT 172,5834
#define PAR96_ACK 173,5860
#define PAR96_RXBIT 174,5889
#define PAR96_DCD 175,5918
#define PAR97_POWER 176,5947
struct baycom_state baycom_state183,6114
#define min(min214,6727
#define max(max215,6771
static void __inline__ baycom_int_freq(219,6893
#define PAR96_DESCRAM_TAP1 242,7571
#define PAR96_DESCRAM_TAP2 243,7606
#define PAR96_DESCRAM_TAP3 244,7641
#define PAR96_DESCRAM_TAPSH1 246,7677
#define PAR96_DESCRAM_TAPSH2 247,7709
#define PAR96_DESCRAM_TAPSH3 248,7741
#define PAR96_SCRAM_TAP1 250,7773
#define PAR96_SCRAM_TAPN 251,7817
static __inline__ void par96_tx(255,7942
static __inline__ void par96_rx(278,8653
static void par96_interrupt(330,10504
static void par96_wakeup(360,11199
static int par96_open(372,11609
static int par96_close(416,13126
static struct hdlcdrv_ops par96_ops 445,14024
static int baycom_setmode(455,14212
static int baycom_ioctl(468,14560
__initfunc(536,16224
static const char *mode[581,17172
static int iobase[582,17223
__initfunc(596,17697
void cleanup_module(611,18027
__initfunc(636,18542

drivers/net/hamradio/baycom_ser_fdx.c,1670
#define BAYCOM_DEBUG90,3724
#define BAYCOM_OPTIONS_SOFTDCD 95,3780
static const char bc_drvname[99,3892
static const char bc_drvinfo[100,3943
#define NR_PORTS 105,4204
static struct device baycom_device[107,4224
} baycom_ports[112,4324
#define RBR(RBR116,4450
#define THR(THR117,4481
#define IER(IER118,4512
#define IIR(IIR119,4543
#define FCR(FCR120,4574
#define LCR(LCR121,4605
#define MCR(MCR122,4636
#define LSR(LSR123,4667
#define MSR(MSR124,4698
#define SCR(SCR125,4729
#define DLL(DLL126,4760
#define DLM(DLM127,4791
#define SER12_EXTENT 129,4823
struct baycom_state baycom_state136,4984
#define min(min169,5709
#define max(max170,5753
static void inline baycom_int_freq(174,5875
static inline void ser12_set_divisor(199,6626
extern inline unsigned int hweight16(223,7564
extern inline unsigned int hweight8(236,8024
static __inline__ void ser12_rx(246,8327
static void ser12_interrupt(301,10060
enum uart uart388,12400
enum uart { c_uart_unknown,388,12400
enum uart { c_uart_unknown, c_uart_8250,388,12400
	    c_uart_16450,389,12441
	    c_uart_16450, c_uart_16550,389,12441
	    c_uart_16450, c_uart_16550, c_uart_16550A}389,12441
static const char *uart_str[390,12490
static enum uart ser12_check_uart(394,12577
static int ser12_open(427,13444
static int ser12_close(482,15233
static struct hdlcdrv_ops ser12_ops 513,16105
static int baycom_setmode(523,16293
static int baycom_ioctl(538,16658
__initfunc(608,18398
static char *mode[655,19437
static int iobase[656,19482
static int irq[657,19524
static int baud[658,19559
__initfunc(676,20261
void cleanup_module(693,20661
__initfunc(719,21202

drivers/net/hamradio/baycom_ser_hdx.c,1691
#define BAYCOM_DEBUG79,2984
#define BAYCOM_OPTIONS_SOFTDCD 84,3040
static const char bc_drvname[88,3152
static const char bc_drvinfo[89,3203
#define NR_PORTS 94,3464
static struct device baycom_device[96,3484
} baycom_ports[101,3578
#define RBR(RBR105,3704
#define THR(THR106,3735
#define IER(IER107,3766
#define IIR(IIR108,3797
#define FCR(FCR109,3828
#define LCR(LCR110,3859
#define MCR(MCR111,3890
#define LSR(LSR112,3921
#define MSR(MSR113,3952
#define SCR(SCR114,3983
#define DLL(DLL115,4014
#define DLM(DLM116,4045
#define SER12_EXTENT 118,4077
struct baycom_state baycom_state125,4238
#define min(min159,4962
#define max(max160,5006
static void inline baycom_int_freq(164,5128
static void inline ser12_set_divisor(187,5802
#define SER12_ARB_DIVIDER(SER12_ARB_DIVIDER213,6619
#define SER12_DCD_INTERVAL(SER12_DCD_INTERVAL215,6712
static inline void ser12_tx(218,6802
static inline void ser12_rx(236,7385
static void ser12_interrupt(392,11973
enum uart uart446,13115
enum uart { c_uart_unknown,446,13115
enum uart { c_uart_unknown, c_uart_8250,446,13115
	    c_uart_16450,447,13156
	    c_uart_16450, c_uart_16550,447,13156
	    c_uart_16450, c_uart_16550, c_uart_16550A}447,13156
static const char *uart_str[448,13205
static enum uart ser12_check_uart(452,13292
static int ser12_open(485,14159
static int ser12_close(527,15564
static struct hdlcdrv_ops ser12_ops 558,16434
static int baycom_setmode(568,16622
static int baycom_ioctl(576,16826
__initfunc(646,18538
static char *mode[692,19541
static int iobase[693,19586
static int irq[694,19628
__initfunc(710,20193
void cleanup_module(726,20559
__initfunc(752,21097

drivers/net/hamradio/bpqether.c,1094
static unsigned char ax25_bcast[89,2983
static unsigned char ax25_defaddr[91,3105
static char bcast_addr[94,3230
static char bpq_eth_addr[96,3290
static struct packet_type bpq_packet_type 102,3524
static struct notifier_block bpq_dev_notifier 110,3642
#define MAXBPQDEV 116,3719
static struct bpqdev bpqdev118,3742
} *bpq_devices 126,4116
static __inline__ struct device *bpq_get_ether_dev(135,4273
static __inline__ struct device *bpq_get_ax25_dev(147,4504
static __inline__ int dev_is_ethdev(158,4720
static int bpq_check_devices(170,4982
static int bpq_rcv(214,5716
static int bpq_xmit(267,6920
static struct net_device_stats *bpq_get_stats(334,8236
static int bpq_set_mac_address(346,8415
static int bpq_ioctl(362,8805
static int bpq_open(406,9766
static int bpq_close(419,9949
static int bpq_dev_init(432,10089
static char * bpq_print_ethaddr(444,10257
int bpq_get_info(454,10441
static int bpq_new_device(501,11373
static int bpq_device_event(590,13297
__initfunc(624,14031
EXPORT_NO_SYMBOLS;653,14609
int init_module(658,14764
void cleanup_module(663,14811

drivers/net/hamradio/hdlcdrv.c,1521
static char ax25_bcast[77,2559
static char ax25_nocall[79,2671
#define KISS_VERBOSE84,2862
#define PARAM_TXDELAY 88,2961
#define PARAM_PERSIST 89,2987
#define PARAM_SLOTTIME 90,3013
#define PARAM_TXTAIL 91,3039
#define PARAM_FULLDUP 92,3065
#define PARAM_HARDWARE 93,3091
#define PARAM_RETURN 94,3117
#define min(min98,3223
#define max(max99,3267
static const unsigned short crc_ccitt_table[107,3458
static inline void append_crc_ccitt(144,5672
static inline int check_crc_ccitt(157,5997
static int calc_crc_ccitt(169,6306
#define tenms_to_2flags(tenms_to_2flags182,6611
static int hdlc_rx_add_bytes(189,6789
static void hdlc_rx_flag(207,7141
void hdlcdrv_receiver(234,7800
static void inline do_kiss_params(290,9536
#define PKP(PKP295,9664
#define PKP(PKP297,9775
void hdlcdrv_transmitter(331,10584
static void start_tx(433,13142
static unsigned short random_seed;445,13513
static inline unsigned short random_num(447,13549
void hdlcdrv_arbitrate(455,13741
static inline int hdlcdrv_paranoia_check(481,14389
static int hdlcdrv_send_packet(495,14790
static int hdlcdrv_set_mac_address(509,15162
static struct net_device_stats *hdlcdrv_get_stats(521,15549
static int hdlcdrv_open(548,16377
static int hdlcdrv_close(596,17326
static int hdlcdrv_ioctl(621,17898
static int hdlcdrv_probe(759,21795
int hdlcdrv_register_hdlcdrv(840,23999
int hdlcdrv_unregister_hdlcdrv(884,25128
static struct symbol_table hdlcdrv_syms 914,25786
__initfunc(939,26437
void cleanup_module(951,26793

drivers/net/hamradio/mkiss.c,2173
#define AX25_VERSION 60,1722
#define	min(min61,1777
#define	AX25_VERSION	63,1816
#define NR_MKISS 66,1868
#define MKISS_SERIAL_TYPE_NORMAL 67,1887
struct mkiss_channel mkiss_channel69,1923
typedef struct ax25_ctrl ax25_ctrl75,2075
} ax25_ctrl_t;ax25_ctrl_t79,2221
static ax25_ctrl_t **ax25_ctrls 81,2237
int ax25_maxdev 83,2278
static struct tty_ldisc	ax_ldisc;85,2348
static struct tty_driver mkiss_driver;86,2382
static int mkiss_refcount;87,2421
static struct tty_struct *mkiss_table[88,2448
static struct termios *mkiss_termios[89,2497
static struct termios *mkiss_termios_locked[90,2545
struct mkiss_channel MKISS_Info[91,2600
static const unsigned short Crc_flex_table[102,3069
calc_crc_flex(140,5337
check_crc_flex(153,5617
static inline struct ax_disp *ax_alloc(172,6020
static inline void ax_free(235,7564
static void ax_changedmtu(248,7892
static inline void ax_lock(321,9318
static inline void ax_unlock(329,9579
static void ax_bump(336,9851
static void ax_encaps(377,10797
static void ax25_write_wakeup(431,12367
static int ax_xmit(463,13176
static int ax_header(526,14612
static int ax_rebuild_header(537,14875
static int ax_open(549,15104
static int ax_close(603,16137
static int ax25_receive_room(618,16368
static void ax25_receive_buf(629,16743
static int ax25_open(656,17343
static void ax25_close(716,18582
static struct net_device_stats *ax_get_stats(740,18997
int kiss_esc(763,19704
static int kiss_esc_crc(802,20329
static void kiss_unesc(836,21127
int ax_set_mac_address(876,21923
static int ax_set_dev_mac_address(883,22069
static int ax25_disp_ioctl(894,22288
static int ax_open_dev(929,23143
__initfunc(940,23362
static int ax25_init(989,24752
static int mkiss_open(1036,25998
static void mkiss_close(1061,26491
static int mkiss_write(1073,26757
static int mkiss_ioctl(1078,26872
static void mkiss_dummy(1097,27280
static void mkiss_dummy2(1108,27442
static int mkiss_write_room(1120,27624
static int mkiss_chars_in_buffer(1134,27865
static void mkiss_set_termios(1148,28053
__initfunc(1157,28359
EXPORT_NO_SYMBOLS;1208,30141
int init_module(1216,30367
void cleanup_module(1221,30425

drivers/net/hamradio/mkiss.h,467
#define AX25_MAXDEV	5,196
#define AX_MTU	8,324
#define END 11,383
#define ESC 12,442
#define ESC_END 13,502
#define ESC_ESC 14,567
struct ax_disp ax_disp16,633
#define AXF_INUSE	46,1962
#define AXF_ESCAPE	47,2018
#define AXF_ERROR	48,2088
#define AXF_KEEPTEST	49,2157
#define AXF_OUTWAIT	50,2208
#define CRC_MODE_NONE 54,2363
#define CRC_MODE_FLEX 55,2389
#define CRC_MODE_SMACK 56,2415
#define AX25_MAGIC	59,2445
#define MKISS_DRIVER_MAGIC	60,2472

drivers/net/hamradio/pi2.c,1778
#define PI_DMA 70,3296
#define DEF_A_SPEED 72,3314
#define DEF_A_TXDELAY 73,3366
#define DEF_A_PERSIST 74,3418
#define DEF_A_SLOTIME 75,3466
#define DEF_A_SQUELDELAY 76,3513
#define DEF_A_CLOCKMODE 77,3587
#define DEF_B_SPEED 79,3645
#define DEF_B_TXDELAY 80,3686
#define DEF_B_PERSIST 81,3724
#define DEF_B_SLOTIME 82,3760
#define DEF_B_SQUELDELAY 83,3798
#define DEF_B_CLOCKMODE 84,3837
#define REALLY_SLOW_IO 88,4005
struct mbuf mbuf119,4728
static int pi0_preprobe(133,4877
static struct device pi0a 134,4959
static struct device pi0b 135,5046
#define PI_TOTAL_SIZE	139,5187
static char ax25_bcast[161,6145
static char ax25_test[163,6245
static int ext2_secrm_seed 166,6345
extern inline unsigned char random(168,6408
extern inline void wrtscc(174,6535
extern inline int rdscc(183,6845
static void switchbuffers(195,7156
static void hardware_send_packet(203,7308
static void setup_rx_dma(235,7886
static void setup_tx_dma(278,9033
static void tdelay(306,9735
static void a_txint(335,10482
static void a_exint(389,11834
static void a_rxint(496,14503
static void b_rxint(571,16493
static void b_txint(664,19275
static void b_exint(764,22105
__initfunc(930,26633
static void rts(988,28207
static void scc_init(1066,30739
static void chipset_init(1168,33809
__initfunc(1185,34193
static int valid_dma_page(1246,35863
static int pi_set_mac_address(1254,36026
get_dma_buffer(1263,36352
static int pi_probe(1277,36669
static int pi_open(1426,41382
static int pi_send_packet(1467,42215
static void pi_interrupt(1479,42513
static int pi_close(1534,44223
static int pi_ioctl(1565,44773
static struct net_device_stats *pi_get_stats(1646,46517
EXPORT_NO_SYMBOLS;1654,46676
int init_module(1659,46824
void cleanup_module(1664,46873

drivers/net/hamradio/pt.c,2034
#define PT_DMA 44,1911
#define DEF_A_SPEED	46,1929
#define DEF_A_TXDELAY	47,1971
#define DEF_A_PERSIST	48,2011
#define DEF_A_SLOTIME	49,2059
#define DEF_A_SQUELDELAY 50,2097
#define DEF_A_CLOCKMODE	51,2138
#define DEF_A_NRZI	52,2189
#define DEF_B_SPEED	54,2229
#define DEF_B_TXDELAY	55,2281
#define DEF_B_PERSIST	56,2321
#define DEF_B_SLOTIME	57,2357
#define DEF_B_SQUELDELAY 58,2395
#define DEF_B_CLOCKMODE 59,2436
#define DEF_B_NRZI	60,2492
#define	PARAM_TXDELAY	63,2533
#define	PARAM_PERSIST	64,2557
#define	PARAM_SLOTTIME	65,2581
#define	PARAM_FULLDUP	66,2606
#define	PARAM_HARDWARE	67,2630
#define	PARAM_RETURN	68,2655
struct mbuf mbuf99,3377
static int pt0_preprobe(108,3493
static struct device pt0a 109,3576
static struct device pt0b 110,3663
static unsigned char pt_sercfg 114,3870
static unsigned char pt_dmacfg 115,3906
#define PT_TOTAL_SIZE 118,3989
static char ax25_bcast[140,4943
static char ax25_test[142,5043
static int ext2_secrm_seed 147,5145
static inline unsigned char random(149,5180
static inline void wrtscc(154,5302
static inline unsigned char rdscc(160,5489
static void switchbuffers(169,5685
static void hardware_send_packet(177,5841
static void setup_rx_dma(246,7474
static void setup_tx_dma(293,8551
static void scc_init(325,9355
static void chipset_init(446,12872
__initfunc(478,14098
__initfunc(540,15816
static void pt_rts(600,17420
static int valid_dma_page(695,20588
static int pt_set_mac_address(703,20763
static char * get_dma_buffer(712,21064
static int pt_probe(730,21492
static int pt_open(882,26178
static int pt_send_packet(932,27290
static int pt_close(948,27624
static int pt_ioctl(984,28260
static struct net_device_stats *pt_get_stats(1068,29986
static void tdelay(1085,30349
static void pt_txisr(1104,30797
static void pt_rxisr(1223,34036
static void pt_tmrisr(1395,39676
static void pt_interrupt(1433,40493
static void pt_exisr(1511,42974
EXPORT_NO_SYMBOLS;1755,49564
int init_module(1760,49722
void cleanup_module(1765,49768

drivers/net/hamradio/scc.c,3219
#define RCS_ID 1,0
#define VERSION 3,78
#define BANNER 4,100
#define SCC_MAXCHIPS	140,5236
#define SCC_BUFSIZE	141,5302
#define SCC_DEFAULT_CLOCK	146,5488
static unsigned char *SCC_DriverName 223,7947
static struct irqflags irqflags225,7994
static struct irqflags { unsigned char used : 1; } Ivec[225,7994
static struct scc_channel SCC_Info[227,8057
static struct scc_ctrl scc_ctrl229,8142
} SCC_ctrl[233,8211
static unsigned char Driver_Initialized 235,8240
static int Nchips 236,8285
static io_port Vector_Latch 237,8308
static inline unsigned char InReg(249,8791
static inline void OutReg(269,9104
static inline void wr(285,9405
static inline void or(291,9545
static inline void cl(296,9685
static inline void scc_cli(302,9854
static inline void scc_sti(304,9901
static inline void scc_cli(307,9954
static inline void scc_sti(309,10012
static inline void scc_lock_dev(318,10268
static inline void scc_unlock_dev(323,10352
static inline void scc_discard_buffers(328,10438
static inline void scc_notify(356,11017
static inline void flush_rx_FIFO(375,11354
static void start_hunt(390,11639
static inline void scc_txint(401,12028
static inline void scc_exint(465,13228
static inline void scc_rxint(550,15409
static inline void scc_spint(598,16308
static void scc_isr_dispatch(644,17367
#define SCC_IRQTIMEOUT 660,17802
static void scc_isr(662,17832
static inline void set_brg(749,19760
static inline void set_speed(757,20034
static inline void init_brg(770,20303
static void init_channel(822,21851
static void scc_key_trx(928,24460
static void scc_start_tx_timer(1025,26573
static void scc_start_defer(1050,27025
static void scc_start_maxkeyup(1069,27422
static void scc_tx_done(1094,27986
static unsigned char Rand 1119,28519
static inline int is_grouped(1121,28552
static void t_dwait(1157,29321
static void t_txdelay(1200,30250
static void t_tail(1221,30624
static void t_busy(1255,31299
static void t_maxkeyup(1275,31609
static void t_idle(1311,32363
static void scc_init_timer(1324,32655
#define CAST(CAST1346,33102
static unsigned int scc_set_param(1348,33138
static unsigned long scc_get_param(1416,34835
static void scc_stop_calibrate(1448,36055
scc_start_calibrate(1470,36472
static void z8530_init(1512,37439
static int scc_net_setup(1569,38639
static unsigned char ax25_bcast[1608,39532
static unsigned char ax25_nocall[1610,39653
static int scc_net_init(1615,39814
static int scc_net_open(1646,40605
static int scc_net_close(1671,41008
static void scc_net_rx(1703,41581
static int scc_net_tx(1724,41924
static int scc_net_ioctl(1802,43838
static int scc_net_set_mac_address(2034,49590
static int  scc_net_header(2043,49807
static struct net_device_stats *scc_net_get_stats(2051,50038
static int scc_net_get_info(2071,50706
#define K(K2129,52363
struct proc_dir_entry scc_proc_dir_entry 2178,53664
#define scc_net_procfs_init(scc_net_procfs_init2184,53826
#define scc_net_procfs_remove(scc_net_procfs_remove2185,53898
#define scc_net_procfs_init(scc_net_procfs_init2187,53973
#define scc_net_procfs_remove(scc_net_procfs_remove2188,54003
__initfunc(2196,54235
int init_module(2238,55180
void cleanup_module(2250,55373

drivers/net/hamradio/soundmodem/gentbl.c,1560
static void gentbl_offscostab(34,1299
static void gentbl_costab(56,1967
#define AFSK12_SAMPLE_RATE 76,2654
#define AFSK12_TX_FREQ_LO 77,2686
#define AFSK12_TX_FREQ_HI 78,2717
#define AFSK12_CORRLEN 79,2748
static void gentbl_afsk1200(81,2774
#define ARGLO(ARGLO85,2837
#define ARGHI(ARGHI86,2926
static const float fsk96_tx_coeff_4[125,4533
static const float fsk96_tx_coeff_5[136,5188
#define HAMMING(HAMMING149,5995
static inline float hamming(151,6044
static inline float sinc(156,6119
static void gentbl_fsk9600(164,6213
#define AFSK26_SAMPLERATE 246,8118
#define AFSK26_NUMCAR 248,8152
#define AFSK26_FIRSTCAR 249,8181
#define AFSK26_MSK_LEN 250,8213
#define AFSK26_RXOVER 251,8242
#define AFSK26_DEMCORRLEN 253,8272
#define AFSK26_WINDOW(AFSK26_WINDOW255,8318
#define AFSK26_AMPL(AFSK26_AMPL257,8372
#define AFSK26_AMPL(AFSK26_AMPL260,8431
static void gentbl_afsk2666(262,8457
#define ATAN_TABLEN 318,10814
static void gentbl_atantab(320,10840
#define PSK48_TXF_OVERSAMPLING 342,11489
#define PSK48_TXF_NUMSAMPLES 343,11522
#define PSK48_RXF_LEN 344,11554
static const float psk48_tx_coeff[346,11584
static const float psk48_rx_coeff[369,13149
static void gentbl_psk4800(388,14421
static void gentbl_hapn4800(437,16460
#define AFSK24_SAMPLERATE 574,19762
#define AFSK24_CORRLEN 575,19795
static void gentbl_afsk2400(577,19826
#define ARGLO(ARGLO589,20241
#define ARGHI(ARGHI590,20323
#define WINDOW(WINDOW591,20405
static char *progname;624,21760
static void gentbl_banner(626,21784
int main(634,22004

drivers/net/hamradio/soundmodem/sm.c,2447
/*static*/ const char sm_drvname[69,2443
static const char sm_drvinfo[70,2494
/*static*/ const struct modem_tx_info *sm_modem_tx_table[75,2747
/*static*/ const struct modem_rx_info *sm_modem_rx_table[104,3559
static const struct hardware_info *sm_hardware_table[133,4371
#define NR_PORTS 147,4703
static struct device sm_device[151,4800
} sm_ports[156,4935
#define UART_RBR(UART_RBR162,5077
#define UART_THR(UART_THR163,5113
#define UART_IER(UART_IER164,5149
#define UART_IIR(UART_IIR165,5185
#define UART_FCR(UART_FCR166,5221
#define UART_LCR(UART_LCR167,5257
#define UART_MCR(UART_MCR168,5293
#define UART_LSR(UART_LSR169,5329
#define UART_MSR(UART_MSR170,5365
#define UART_SCR(UART_SCR171,5401
#define UART_DLL(UART_DLL172,5437
#define UART_DLM(UART_DLM173,5473
#define SER_EXTENT 175,5510
#define LPT_DATA(LPT_DATA177,5532
#define LPT_STATUS(LPT_STATUS178,5571
#define LPT_CONTROL(LPT_CONTROL179,5610
#define LPT_IRQ_ENABLE 180,5649
#define LPT_EXTENT 182,5683
#define MIDI_DATA(MIDI_DATA184,5705
#define MIDI_STATUS(MIDI_STATUS185,5744
#define MIDI_READ_FULL 186,5785
#define MIDI_WRITE_EMPTY 187,5849
#define MIDI_EXTENT 189,5914
#define PARAM_TXDELAY 193,6015
#define PARAM_PERSIST 194,6041
#define PARAM_SLOTTIME 195,6067
#define PARAM_TXTAIL 196,6093
#define PARAM_FULLDUP 197,6119
#define PARAM_HARDWARE 198,6145
#define PARAM_RETURN 199,6171
#define SP_SER 201,6200
#define SP_PAR 202,6218
#define SP_MIDI 203,6236
static int check_lpt(220,6610
enum uart uart246,7309
enum uart { c_uart_unknown,246,7309
enum uart { c_uart_unknown, c_uart_8250,246,7309
	c_uart_16450,247,7350
	c_uart_16450, c_uart_16550,247,7350
	c_uart_16450, c_uart_16550, c_uart_16550A}247,7350
static const char *uart_str[248,7395
static enum uart check_uart(251,7480
static int check_midi(288,8554
void sm_output_status(317,9267
static void sm_output_open(339,9954
static void sm_output_close(386,11771
static const struct hdlcdrv_ops sm_ops 409,12616
static int sm_open(415,12793
static int sm_close(443,13622
static int sethw(467,14279
static int sm_ioctl(496,15051
__initfunc(643,19243
static char *mode 694,20476
static int iobase 695,20502
static int irq 696,20526
static int dma 697,20547
static int dma2 698,20568
static int serio 699,20590
static int pario 700,20612
static int midiio 701,20634
__initfunc(727,21540
void cleanup_module(752,22114
__initfunc(781,22735

drivers/net/hamradio/soundmodem/sm_sbc.c,2369
#define put_user(put_user59,1917
#define get_user(get_user60,2003
extern inline int copy_from_user(62,2097
extern inline int copy_to_user(71,2326
struct sc_state_sbc sc_state_sbc83,2634
#define SCSTATE 89,2733
#define DSP_RESET(DSP_RESET95,2903
#define DSP_READ_DATA(DSP_READ_DATA96,2949
#define DSP_WRITE_DATA(DSP_WRITE_DATA97,2995
#define DSP_WRITE_STATUS(DSP_WRITE_STATUS98,3041
#define DSP_DATA_AVAIL(DSP_DATA_AVAIL99,3087
#define DSP_MIXER_ADDR(DSP_MIXER_ADDR100,3133
#define DSP_MIXER_DATA(DSP_MIXER_DATA101,3179
#define DSP_INTACK_16BIT(DSP_INTACK_16BIT102,3225
#define SBC_EXTENT 103,3271
#define SBC_OUTPUT 109,3407
#define SBC_INPUT 110,3443
#define SBC_BLOCKSIZE 111,3479
#define SBC_HI_OUTPUT 112,3515
#define SBC_HI_INPUT 113,3552
#define SBC_LO_OUTPUT_AUTOINIT 114,3589
#define SBC_LO_INPUT_AUTOINIT 115,3625
#define SBC_HI_OUTPUT_AUTOINIT 116,3661
#define SBC_HI_INPUT_AUTOINIT 117,3698
#define SBC_IMMED_INT 118,3734
#define SBC_GET_REVISION 119,3770
#define ESS_GET_REVISION 120,3806
#define SBC_SPEAKER_ON 121,3842
#define SBC_SPEAKER_OFF 122,3878
#define SBC_DMA_ON 123,3914
#define SBC_DMA_OFF 124,3950
#define SBC_SAMPLE_RATE 125,3986
#define SBC_SAMPLE_RATE_OUT 126,4022
#define SBC_SAMPLE_RATE_IN 127,4058
#define SBC_MONO_8BIT 128,4094
#define SBC_MONO_16BIT 129,4130
#define SBC_STEREO_8BIT 130,4166
#define SBC_STEREO_16BIT 131,4202
#define SBC4_OUT8_AI 133,4239
#define SBC4_IN8_AI 134,4275
#define SBC4_MODE_UNS_MONO 135,4311
#define SBC4_MODE_SIGN_MONO 136,4347
#define SBC4_OUT16_AI 138,4384
#define SBC4_IN16_AI 139,4420
static int inline reset_dsp(143,4534
static void inline write_dsp(159,4917
static int inline read_dsp(172,5227
static int config_resources(188,5568
static void inline sbc_int_ack_8bit(269,6946
static void inline sbc_int_ack_16bit(276,7122
static void setup_dma_dsp(283,7301
static void sbc_interrupt(324,8690
static int sbc_open(367,9840
static int sbc_close(452,12328
static int sbc_sethw(470,12710
static int sbc_ioctl(527,14416
const struct hardware_info sm_hw_sbc 615,16527
static void setup_dma_fdx_dsp(622,16730
static void sbcfdx_interrupt(685,18718
static int sbcfdx_open(750,20398
static int sbcfdx_close(833,22746
static int sbcfdx_sethw(854,23225
static int sbcfdx_ioctl(920,25259
const struct hardware_info sm_hw_sbcfdx 936,25793

drivers/net/hamradio/soundmodem/sm.h,2727
#define _SM_H29,1116
#define SM_DEBUG38,1320
struct sm_state sm_state45,1475
#define DIAGDATALEN 82,2066
struct modem_tx_info modem_tx_info108,2545
struct modem_rx_info modem_rx_info118,2838
struct hardware_info hardware_info135,3319
#define min(min150,3807
#define max(max151,3851
extern const char sm_drvname[155,3973
extern const char sm_drvinfo[156,4005
extern inline void diag_trigger(163,4197
#define SHRT_MAX 172,4446
#define SHRT_MIN 173,4501
extern inline void diag_add(175,4533
extern inline void diag_add_one(194,5047
static inline void diag_add_constellation(210,5472
extern inline unsigned int hweight32(234,6098
extern inline unsigned int hweight16(250,6727
extern inline unsigned int hweight8(258,7015
extern inline unsigned int gcd(267,7243
extern inline unsigned int lcm(286,7595
#define HAS_RDTSC 301,7895
#define time_exec(time_exec308,8120
#define time_exec(time_exec323,8855
extern const struct modem_tx_info sm_afsk1200_tx;329,8987
extern const struct modem_tx_info sm_afsk2400_7_tx;330,9037
extern const struct modem_tx_info sm_afsk2400_8_tx;331,9089
extern const struct modem_tx_info sm_afsk2666_tx;332,9141
extern const struct modem_tx_info sm_psk4800_tx;333,9191
extern const struct modem_tx_info sm_hapn4800_8_tx;334,9240
extern const struct modem_tx_info sm_hapn4800_10_tx;335,9292
extern const struct modem_tx_info sm_hapn4800_pm8_tx;336,9345
extern const struct modem_tx_info sm_hapn4800_pm10_tx;337,9399
extern const struct modem_tx_info sm_fsk9600_4_tx;338,9454
extern const struct modem_tx_info sm_fsk9600_5_tx;339,9505
extern const struct modem_rx_info sm_afsk1200_rx;341,9557
extern const struct modem_rx_info sm_afsk2400_7_rx;342,9607
extern const struct modem_rx_info sm_afsk2400_8_rx;343,9659
extern const struct modem_rx_info sm_afsk2666_rx;344,9711
extern const struct modem_rx_info sm_psk4800_rx;345,9761
extern const struct modem_rx_info sm_hapn4800_8_rx;346,9810
extern const struct modem_rx_info sm_hapn4800_10_rx;347,9862
extern const struct modem_rx_info sm_hapn4800_pm8_rx;348,9915
extern const struct modem_rx_info sm_hapn4800_pm10_rx;349,9969
extern const struct modem_rx_info sm_fsk9600_4_rx;350,10024
extern const struct modem_rx_info sm_fsk9600_5_rx;351,10075
extern const struct hardware_info sm_hw_sbc;353,10127
extern const struct hardware_info sm_hw_sbcfdx;354,10172
extern const struct hardware_info sm_hw_wss;355,10220
extern const struct hardware_info sm_hw_wssfdx;356,10265
extern const struct modem_tx_info *sm_modem_tx_table[358,10314
extern const struct modem_rx_info *sm_modem_rx_table[359,10370
extern const struct hardware_info *sm_hardware_table[360,10426
extern void inline sm_int_freq(370,10775

drivers/net/hamradio/soundmodem/sm_afsk1200.c,677
struct demod_state_afsk12 demod_state_afsk1233,1233
struct mod_state_afsk12 mod_state_afsk1243,1448
static const int dds_inc[53,1668
static void modulator_1200_u8(58,1799
static void modulator_1200_s16(78,2379
extern __inline__ int convolution8_u8(97,2938
extern __inline__ int convolution8_s16(114,3324
extern __inline__ int do_filter_1200_u8(131,3693
extern __inline__ int do_filter_1200_s16(140,4044
static const int pll_corr[151,4469
static void demodulator_1200_u8(153,4522
static void demodulator_1200_s16(202,5888
static void demod_init_1200(251,7229
const struct modem_tx_info sm_afsk1200_tx 261,7481
const struct modem_rx_info sm_afsk1200_rx 266,7649

drivers/net/hamradio/soundmodem/sm_fsk9600.c,943
struct demod_state_fsk96 demod_state_fsk9634,1275
struct mod_state_fsk96 mod_state_fsk9644,1486
#define DESCRAM_TAP1 54,1704
#define DESCRAM_TAP2 55,1733
#define DESCRAM_TAP3 56,1762
#define DESCRAM_TAPSH1 58,1792
#define DESCRAM_TAPSH2 59,1818
#define DESCRAM_TAPSH3 60,1844
#define SCRAM_TAP1 62,1870
#define SCRAM_TAPN 63,1908
static void modulator_9600_4_u8(67,2027
static void modulator_9600_4_s16(92,2802
static void demodulator_9600_4_u8(117,3584
static void demodulator_9600_4_s16(165,5048
static void modulator_9600_5_u8(213,6479
static void modulator_9600_5_s16(238,7254
static void demodulator_9600_5_u8(263,8034
static void demodulator_9600_5_s16(311,9505
static void demod_init_9600(359,10943
const struct modem_tx_info sm_fsk9600_4_tx 369,11186
const struct modem_rx_info sm_fsk9600_4_rx 374,11343
const struct modem_tx_info sm_fsk9600_5_tx 381,11600
const struct modem_rx_info sm_fsk9600_5_rx 386,11757

drivers/net/hamradio/soundmodem/sm_hapn4800.c,1179
struct demod_state_hapn48 demod_state_hapn4844,1844
struct mod_state_hapn48 mod_state_hapn4855,2074
static void modulator_hapn4800_10_u8(64,2274
static void modulator_hapn4800_10_s16(87,2927
static void modulator_hapn4800_8_u8(110,3585
static void modulator_hapn4800_8_s16(132,4220
static void modulator_hapn4800_pm10_u8(154,4860
static void modulator_hapn4800_pm10_s16(177,5517
static void modulator_hapn4800_pm8_u8(200,6179
static void modulator_hapn4800_pm8_s16(222,6818
static void demodulator_hapn4800_10_u8(244,7462
static void demodulator_hapn4800_10_s16(309,9422
static void demodulator_hapn4800_8_u8(374,11356
static void demodulator_hapn4800_8_s16(439,13315
static void demod_init_hapn4800(504,15248
const struct modem_tx_info sm_hapn4800_8_tx 514,15497
const struct modem_rx_info sm_hapn4800_8_rx 519,15666
const struct modem_tx_info sm_hapn4800_10_tx 526,15939
const struct modem_rx_info sm_hapn4800_10_rx 531,16110
const struct modem_tx_info sm_hapn4800_pm8_tx 538,16387
const struct modem_rx_info sm_hapn4800_pm8_rx 543,16564
const struct modem_tx_info sm_hapn4800_pm10_tx 550,16841
const struct modem_rx_info sm_hapn4800_pm10_rx 555,17020

drivers/net/hamradio/soundmodem/sm_afsk2400_7.c,648
struct demod_state_afsk24 demod_state_afsk2442,1564
struct mod_state_afsk24 mod_state_afsk2452,1779
static const int dds_inc[62,1996
static void modulator_2400_u8(65,2125
static void modulator_2400_s16(86,2742
extern __inline__ int convolution14_u8(107,3348
extern __inline__ int convolution14_s16(130,3917
extern __inline__ int do_filter_2400_u8(153,4469
extern __inline__ int do_filter_2400_s16(162,4824
static void demodulator_2400_u8(173,5253
static void demodulator_2400_s16(224,6720
static void demod_init_2400(275,8162
const struct modem_tx_info sm_afsk2400_7_tx 285,8413
const struct modem_rx_info sm_afsk2400_7_rx 290,8584

drivers/net/hamradio/soundmodem/sm_wss.c,1324
#define put_user(put_user58,1889
#define get_user(get_user59,1975
extern inline int copy_from_user(61,2069
extern inline int copy_to_user(70,2298
struct sc_state_wss sc_state_wss82,2606
#define SCSTATE 88,2723
#define WSS_CONFIG(WSS_CONFIG92,2852
#define WSS_STATUS(WSS_STATUS93,2896
#define WSS_CODEC_IA(WSS_CODEC_IA94,2940
#define WSS_CODEC_ID(WSS_CODEC_ID95,2984
#define WSS_CODEC_STATUS(WSS_CODEC_STATUS96,3028
#define WSS_CODEC_DATA(WSS_CODEC_DATA97,3072
#define WSS_EXTENT 99,3117
#define CS423X_HOTFIX101,3141
static void write_codec(105,3241
static unsigned char read_codec(120,3627
extern void inline wss_ack_int(133,4004
static int wss_srate_tab[140,4181
static int wss_srate_index(145,4321
static int wss_set_codec_fmt(157,4604
static int wss_init_codec(205,5896
static void setup_dma_wss(344,10645
static void wss_interrupt(384,11853
static int wss_open(429,13127
static int wss_close(487,14721
static int wss_sethw(505,15139
static int wss_ioctl(603,18068
const struct hardware_info sm_hw_wss 661,19611
static void setup_fdx_dma_wss(668,19814
static void wssfdx_interrupt(704,20925
static int wssfdx_open(784,23294
static int wssfdx_close(843,24908
static int wssfdx_sethw(864,25423
static int wssfdx_ioctl(941,27807
const struct hardware_info sm_hw_wssfdx 958,28342

drivers/net/hamradio/soundmodem/smdma.h,534
#define _SMDMA_H29,1121
#define DMA_MODE_AUTOINIT 37,1312
#define NUM_FRAGMENTS 38,1348
extern __inline__ unsigned int dma_setup(55,1888
extern __inline__ unsigned int dma_ptr(82,2705
extern __inline__ int dma_end_transmit(123,3846
extern __inline__ void dma_transmit(140,4218
extern __inline__ void dma_init_transmit(158,4733
extern __inline__ void dma_start_transmit(164,4845
extern __inline__ void dma_clear_transmit(177,5207
extern __inline__ void dma_receive(185,5459
extern __inline__ void dma_init_receive(208,6132

drivers/net/hamradio/soundmodem/sm_afsk2400_8.c,648
struct demod_state_afsk24 demod_state_afsk2442,1559
struct mod_state_afsk24 mod_state_afsk2452,1774
static const int dds_inc[62,1991
static void modulator_2400_u8(65,2120
static void modulator_2400_s16(86,2737
extern __inline__ int convolution14_u8(107,3343
extern __inline__ int convolution14_s16(130,3912
extern __inline__ int do_filter_2400_u8(153,4464
extern __inline__ int do_filter_2400_s16(162,4819
static void demodulator_2400_u8(173,5248
static void demodulator_2400_s16(224,6715
static void demod_init_2400(275,8157
const struct modem_tx_info sm_afsk2400_8_tx 285,8408
const struct modem_rx_info sm_afsk2400_8_rx 290,8579

drivers/net/hamradio/soundmodem/sm_afsk2666.c,934
struct demod_state_afsk26 demod_state_afsk2633,1233
struct mod_state_afsk26 mod_state_afsk2646,1495
#define DESCRAM_TAP1 56,1711
#define DESCRAM_TAP2 57,1740
#define DESCRAM_TAP3 58,1769
#define DESCRAM_TAPSH1 60,1799
#define DESCRAM_TAPSH2 61,1825
#define DESCRAM_TAPSH3 62,1851
#define SCRAM_TAP1 64,1877
#define SCRAM_TAPN 65,1915
static void modulator_2666_u8(69,2034
static void modulator_2666_s16(93,2770
extern __inline__ int convolution12_u8(117,3495
extern __inline__ int convolution12_s16(137,3984
static int binexp(161,4551
static const sqrt_tab[188,4878
static unsigned int int_sqrt_approx(194,5026
extern unsigned int est_pwr(208,5313
static void demod_one_sample(227,5648
static void demodulator_2666_u8(296,7528
static void demodulator_2666_s16(316,8530
static void demod_init_2666(336,9513
const struct modem_tx_info sm_afsk2666_tx 346,9758
const struct modem_rx_info sm_afsk2666_rx 351,9925

drivers/net/hamradio/soundmodem/sm_psk4800.c,839
#define DESCRAM_TAP1 33,1231
#define DESCRAM_TAP2 34,1260
#define DESCRAM_TAP3 35,1289
#define DESCRAM_TAPSH1 37,1319
#define DESCRAM_TAPSH2 38,1345
#define DESCRAM_TAPSH3 39,1371
#define SCRAM_TAP1 41,1397
#define SCRAM_TAPN 42,1435
#define SCRAM_SHIFT 44,1477
struct demod_state_psk48 demod_state_psk4848,1578
struct mod_state_psk48 mod_state_psk4883,2239
static void modulator_4800_u8(94,2498
static void modulator_4800_s16(131,3631
static __inline__ unsigned short tbl_atan(168,4748
#define ATAN(ATAN204,5334
static void demod_psk48_baseband(208,5445
static void demodulator_4800_u8(319,8745
static void demodulator_4800_s16(354,9890
static void mod_init_4800(387,10998
static void demod_init_4800(396,11210
const struct modem_tx_info sm_psk4800_tx 406,11453
const struct modem_rx_info sm_psk4800_rx 412,11626

drivers/net/hamradio/z8530.h,4088
#define	FLAG	3,66
#define	R0	6,108
#define	R1	7,145
#define	R2	8,158
#define	R3	9,171
#define	R4	10,184
#define	R5	11,197
#define	R6	12,210
#define	R7	13,223
#define	R8	14,236
#define	R9	15,249
#define	R10	16,262
#define	R11	17,277
#define	R12	18,292
#define	R13	19,307
#define	R14	20,322
#define	R15	21,337
#define	NULLCODE	23,353
#define	POINT_HIGH	24,388
#define	RES_EXT_INT	25,448
#define	SEND_ABORT	26,508
#define	RES_RxINT_FC	27,549
#define	RES_Tx_P	28,612
#define	ERR_RES	29,660
#define	RES_H_IUS	30,700
#define	RES_Rx_CRC	32,748
#define	RES_Tx_CRC	33,799
#define	RES_EOM_L	34,850
#define	EXT_INT_ENAB	38,920
#define	TxINT_ENAB	39,966
#define	PAR_SPEC	40,1009
#define	RxINT_DISAB	42,1065
#define	RxINT_FCERR	43,1108
#define	INT_ALL_Rx	44,1178
#define	INT_ERR_Rx	45,1242
#define	WT_RDY_RT	47,1291
#define	WT_FN_RDYFN	48,1338
#define	WT_RDY_ENAB	49,1386
#define	RxENABLE	55,1504
#define	SYNC_L_INH	56,1541
#define	ADD_SM	57,1598
#define	RxCRC_ENAB	58,1651
#define	ENT_HM	59,1694
#define	AUTO_ENAB	60,1737
#define	Rx5	61,1779
#define	Rx7	62,1822
#define	Rx6	63,1866
#define	Rx8	64,1910
#define	PAR_ENA	68,1979
#define	PAR_EVEN	69,2020
#define	SYNC_ENAB	71,2065
#define	SB1	72,2109
#define	SB15	73,2148
#define	SB2	74,2191
#define	MONSYNC	76,2232
#define	BISYNC	77,2278
#define	SDLC	78,2327
#define	EXTSYNC	79,2383
#define	X1CLK	81,2431
#define	X16CLK	82,2470
#define	X32CLK	83,2512
#define	X64CLK	84,2554
#define	TxCRC_ENAB	88,2621
#define	RTS	89,2664
#define	SDLC_CRC	90,2691
#define	TxENAB	91,2730
#define	SND_BRK	92,2766
#define	Tx5	93,2805
#define	Tx7	94,2858
#define	Tx6	95,2902
#define	Tx8	96,2946
#define	DTR	97,2990
#define	VIS	106,3225
#define	NV	107,3268
#define	DLC	108,3297
#define	MIE	109,3337
#define	STATHI	110,3381
#define	NORESET	111,3419
#define	CHRB	112,3467
#define	CHRA	113,3507
#define	FHWRES	114,3547
#define	BIT6	117,3639
#define	LOOPMODE 118,3676
#define	ABUNDER	119,3716
#define	MARKIDLE 120,3773
#define	GAOP	121,3816
#define	NRZ	122,3858
#define	NRZI	123,3887
#define	FM1	124,3921
#define	FM0	125,3965
#define	CRCPS	126,4009
#define	TRxCXT	129,4095
#define	TRxCTC	130,4137
#define	TRxCBR	131,4182
#define	TRxCDP	132,4232
#define	TRxCOI	133,4274
#define	TCRTxCP	134,4306
#define	TCTRxCP	135,4356
#define	TCBR	136,4406
#define	TCDPLL	137,4467
#define	RCRTxCP	138,4522
#define	RCTRxCP	139,4571
#define	RCBR	140,4623
#define	RCDPLL	141,4683
#define	RTxCX	142,4737
#define	BRENABL	149,4975
#define	BRSRC	150,5026
#define	DTRREQ	151,5075
#define	AUTOECHO 152,5119
#define	LOOPBAK	153,5154
#define	SEARCH	154,5196
#define	RMC	155,5240
#define	DISDPLL	156,5283
#define	SSBR	157,5323
#define	SSRTxC	158,5378
#define	SFMM	159,5427
#define	SNRZI	160,5463
#define	ZCIE	163,5563
#define	DCDIE	164,5598
#define	SYNCIE	165,5627
#define	CTSIE	166,5666
#define	TxUIE	167,5698
#define	BRKIE	168,5742
#define	Rx_CH_AV	172,5806
#define	ZCOUNT	173,5856
#define	Tx_BUF_EMP	174,5893
#define	DCD	175,5938
#define	SYNC_HUNT	176,5965
#define	CTS	177,6004
#define	TxEOM	178,6032
#define	BRK_ABRT	179,6070
#define	ALL_SNT	182,6133
#define	RES3	184,6218
#define	RES4	185,6246
#define	RES5	186,6274
#define	RES6	187,6302
#define	RES7	188,6330
#define	RES8	189,6358
#define	RES18	190,6386
#define	RES28	191,6415
#define	PAR_ERR	193,6482
#define	Rx_OVR	194,6523
#define	CRC_ERR	195,6567
#define	END_FR	196,6613
#define	CHBEXT	201,6781
#define	CHBTxIP	202,6829
#define	CHBRxIP	203,6872
#define	CHAEXT	204,6915
#define	CHATxIP	205,6963
#define	CHARxIP	206,7007
#define	ONLOOP	211,7142
#define	LOOPSEND 212,7174
#define	CLK2MIS	213,7216
#define	CLK1MIS	214,7263
#define AUTOTXF	225,7606
#define AUTOEOM 226,7647
#define AUTORTS	227,7696
#define TXDNRZI 228,7733
#define RXFIFOH 229,7795
#define FASTDTR 230,7856
#define CRCCBCR	231,7902
#define TXFIFOE 232,7966
#define EXTRDEN	233,8034
#define SHDLCE	236,8145
#define FIFOE	237,8199
#define BCLSB	240,8277
#define BCMSB	243,8367
#define FDA	244,8414
#define FOS	245,8465

drivers/net/hamradio/6pack.c,1165
typedef unsigned char byte;byte50,1146
typedef struct sixpack_ctrl sixpack_ctrl53,1176
} sixpack_ctrl_t;sixpack_ctrl_t57,1338
static sixpack_ctrl_t	**sixpack_ctrls 58,1356
int sixpack_maxdev 59,1402
static struct tty_ldisc	sp_ldisc;61,1474
sp_alloc(77,2051
sp_free(143,3599
sp_lock(163,3971
sp_unlock(172,4195
sp_bump(185,4592
sp_encaps(219,5273
static void sixpack_write_wakeup(298,7279
sp_xmit(330,8068
void sp_xmit_on_air(360,8750
static int sp_header(385,9458
static int sp_rebuild_header(396,9721
sp_open(409,9962
sp_close(472,11220
sixpack_receive_room(487,11457
sixpack_receive_buf(501,11873
sixpack_open(542,12789
sixpack_close(588,13782
sp_get_stats(615,14301
sp_set_mac_address(636,14866
sp_set_dev_mac_address(651,15143
sixpack_ioctl(661,15359
static int sp_open_dev(716,16603
static int sixpack_init_ctrl_dev(727,16838
sixpack_init(781,18502
init_module(827,19720
cleanup_module(833,19781
sp_start_tx_timer(866,20456
int encode_sixpack(880,20742
sixpack_decode(922,21784
tnc_init(946,22392
void decode_prio_command(965,22776
resync_tnc(1025,24607
void decode_std_command(1064,25449
void decode_data(1112,26873

drivers/net/hamradio/dmascc.c,3669
#define __init52,1474
#define __initdata53,1489
#define __initfunc(__initfunc54,1508
#define MODULE_AUTHOR(MODULE_AUTHOR56,1533
#define MODULE_DESCRIPTION(MODULE_DESCRIPTION57,1558
#define MODULE_PARM(MODULE_PARM58,1588
#define copy_to_user(copy_to_user60,1614
#define copy_from_user(copy_from_user61,1661
#define test_and_set_bit(test_and_set_bit62,1712
#define register_netdevice(register_netdevice63,1755
#define unregister_netdevice(unregister_netdevice64,1804
#define dev_kfree_skb(dev_kfree_skb65,1857
#define SET_DEV_INIT(SET_DEV_INIT66,1910
#define SHDLCE 68,1955
#define AUTOEOM 70,1988
#define RXFIFOH 71,2020
#define TXFIFOE 72,2041
static int dmascc_dev_init(74,2063
static void dev_init_buffers(79,2127
#define SET_DEV_INIT(SET_DEV_INIT94,2328
#define NUM_TX_BUF 102,2400
#define NUM_RX_BUF 103,2473
#define BUF_SIZE 104,2546
#define HW_PI 109,2600
#define HW_PI2 111,2716
#define HW_TWIN 113,2812
#define HARDWARE 116,2918
#define TYPE_PI 118,2970
#define TYPE_PI2 119,2996
#define TYPE_TWIN 120,3022
#define NUM_TYPES 121,3048
#define MAX_NUM_DEVS 123,3075
#define Z8530 128,3131
#define Z85C30 129,3157
#define Z85230 130,3183
#define CHIPNAMES 132,3210
#define SCCB_CMD 138,3332
#define SCCB_DATA 139,3361
#define SCCA_CMD 140,3390
#define SCCA_DATA 141,3419
#define TMR_CNT0 144,3497
#define TMR_CNT1 145,3526
#define TMR_CNT2 146,3555
#define TMR_CTRL 147,3584
#define PI_DREQ_MASK 150,3670
#define TWIN_INT_REG 153,3759
#define TWIN_CLR_TMR1 154,3788
#define TWIN_CLR_TMR2 155,3817
#define TWIN_SPARE_1 156,3846
#define TWIN_DMA_CFG 157,3875
#define TWIN_SERIAL_CFG 158,3904
#define TWIN_DMA_CLR_FF 159,3933
#define TWIN_SPARE_2 160,3962
#define TWIN_SCC_MSK 166,4044
#define TWIN_TMR1_MSK 167,4076
#define TWIN_TMR2_MSK 168,4108
#define TWIN_INT_MSK 169,4140
#define TWIN_DTRA_ON 172,4190
#define TWIN_DTRB_ON 173,4222
#define TWIN_EXTCLKA 174,4254
#define TWIN_EXTCLKB 175,4286
#define TWIN_LOOPA_ON 176,4318
#define TWIN_LOOPB_ON 177,4350
#define TWIN_EI 178,4382
#define TWIN_DMA_HDX_T1 181,4429
#define TWIN_DMA_HDX_R1 182,4461
#define TWIN_DMA_HDX_T3 183,4493
#define TWIN_DMA_HDX_R3 184,4525
#define TWIN_DMA_FDX_T3R1 185,4557
#define TWIN_DMA_FDX_T1R3 186,4589
#define TX_IDLE 192,4659
#define TX_OFF 193,4680
#define TX_TXDELAY 194,4701
#define TX_ACTIVE 195,4722
#define TX_SQDELAY 196,4743
struct scc_hardware scc_hardware201,4784
struct scc_priv scc_priv213,4953
struct scc_info scc_info235,5441
int dmascc_init(250,5660
static struct scc_hardware hw[278,6879
static struct scc_hardware hw[NUM_TYPES] __initdata 278,6879
static char ax25_broadcast[279,6943
static char ax25_broadcast[7] __initdata 279,6943
static char ax25_test[281,7048
static char ax25_test[7] __initdata 281,7048
static struct scc_info *first 287,7174
static unsigned long rand;288,7212
int init_module(302,7430
void cleanup_module(308,7482
__initfunc(339,8055
__initfunc(353,8243
__initfunc(457,11061
static inline void write_scc(613,15342
static inline int read_scc(620,15444
static int scc_open(627,15536
static int scc_close(744,18938
static int scc_ioctl(776,19672
static int scc_send_packet(801,20369
static struct enet_statistics *scc_get_stats(855,21733
static int scc_set_mac_address(863,21865
static void scc_isr(870,22018
static inline void z8530_isr(912,23209
static void rx_isr(938,23800
static void special_condition(965,24524
static void rx_bh(1034,26305
static void tx_isr(1085,27597
static void es_isr(1107,28079
static void tm_isr(1265,32700
static inline void delay(1330,34691
static inline unsigned char random(1340,34867

drivers/net/hamradio/baycom_epp.c,4572
#define __KERNEL_SYSCALLS__68,2301
#define put_user(put_user91,2923
#define get_user(get_user92,3009
extern inline int copy_from_user(94,3103
extern inline int copy_to_user(103,3332
#define __init116,3627
#define __initdata117,3642
#define __initfunc(__initfunc118,3661
#define BAYCOM_DEBUG123,3770
#define BAYCOM_MAGIC 124,3791
static const char paranoia_str[128,3899
#define baycom_paranoia_check(baycom_paranoia_check131,4018
#define baycom_paranoia_check_void(baycom_paranoia_check_void139,4562
static const char bc_drvname[149,5183
static const char bc_drvinfo[150,5230
#define NR_PORTS 155,5478
static struct device baycom_device[157,5498
} baycom_ports[162,5593
#define EPP_DCDBIT 167,5742
#define EPP_PTTBIT 168,5771
#define EPP_NREF 169,5800
#define EPP_NRAEF 170,5829
#define EPP_NRHF 171,5858
#define EPP_NTHF 172,5887
#define EPP_NTAEF 173,5916
#define EPP_NTEF 174,5945
#define EPP_TX_FIFO_ENABLE 177,6008
#define EPP_RX_FIFO_ENABLE 178,6040
#define EPP_MODEM_ENABLE 179,6072
#define EPP_LEDS 180,6104
#define EPP_IRQ_ENABLE 181,6136
#define LPTREG_ECONTROL 184,6189
#define LPTREG_CONFIGB 185,6225
#define LPTREG_CONFIGA 186,6261
#define LPTREG_EPPDATA 187,6297
#define LPTREG_EPPADDR 188,6333
#define LPTREG_CONTROL 189,6369
#define LPTREG_STATUS 190,6405
#define LPTREG_DATA 191,6441
#define LPTCTRL_PROGRAM 194,6505
#define LPTCTRL_WRITE 195,6563
#define LPTCTRL_ADDRSTB 196,6598
#define LPTCTRL_DATASTB 197,6633
#define LPTCTRL_INTEN 198,6668
#define LPTSTAT_SHIFT_NINTR 201,6730
#define LPTSTAT_WAIT 202,6762
#define LPTSTAT_NINTR 203,6797
#define LPTSTAT_PE 204,6852
#define LPTSTAT_DONE 205,6887
#define LPTSTAT_NERROR 206,6922
#define LPTSTAT_EPPTIMEOUT 207,6957
#define LPTDATA_SHIFT_TDI 210,7017
#define LPTDATA_SHIFT_TMS 211,7049
#define LPTDATA_TDI 212,7081
#define LPTDATA_TCK 213,7134
#define LPTDATA_TMS 214,7169
#define LPTDATA_INITBIAS 215,7222
#define EPP_DCDBIT 219,7294
#define EPP_PTTBIT 220,7329
#define EPP_RXEBIT 221,7364
#define EPP_RXAEBIT 222,7399
#define EPP_RXHFULL 223,7434
#define EPP_NTHF 225,7470
#define EPP_NTAEF 226,7505
#define EPP_NTEF 227,7540
#define EPP_TX_FIFO_ENABLE 229,7582
#define EPP_RX_FIFO_ENABLE 230,7617
#define EPP_MODEM_ENABLE 231,7652
#define EPP_LEDS 232,7687
#define EPP_IRQ_ENABLE 233,7722
#define XC4K_IRLENGTH 236,7792
#define XC4K_EXTEST 237,7818
#define XC4K_PRELOAD 238,7844
#define XC4K_CONFIGURE 239,7870
#define XC4K_BYPASS 240,7896
#define EPP_CONVENTIONAL 242,7923
#define EPP_FPGA 243,7951
#define EPP_FPGAEXTSTATUS 244,7979
#define TXBUFFER_SIZE 246,8008
struct baycom_state baycom_state253,8198
#define min(min311,9450
#define max(max312,9494
#define KISS_VERBOSE316,9616
#define PARAM_TXDELAY 320,9715
#define PARAM_PERSIST 321,9741
#define PARAM_SLOTTIME 322,9767
#define PARAM_TXTAIL 323,9793
#define PARAM_FULLDUP 324,9819
#define PARAM_HARDWARE 325,9845
#define PARAM_RETURN 326,9871
static const unsigned short crc_ccitt_table[334,10046
extern inline void append_crc_ccitt(372,12266
extern inline int check_crc_ccitt(386,12598
extern inline int calc_crc_ccitt(397,12901
#define tenms_to_flags(tenms_to_flags409,13206
static void inline baycom_int_freq(413,13347
char eppconfig_path[436,14002
static char *envp[438,14047
static int errno;440,14126
static int exec_eppfpga(442,14145
static int eppconfig(474,15304
static void epp_interrupt(499,16032
static void inline do_kiss_params(505,16186
#define PKP(PKP510,16314
#define PKP(PKP512,16426
#define ENCODEITERA(ENCODEITERA550,17334
#define ENCODEITERB(ENCODEITERB557,17583
static void encode_hdlc(569,18182
static unsigned short random_seed;648,20634
static inline unsigned short random_num(650,20670
static void transmit(658,20862
static void do_rxpacket(745,22971
#define DECODEITERA(DECODEITERA772,23662
#define DECODEITERB(DECODEITERB781,24226
static void receive(803,26018
#define GETTICK(GETTICK859,27746
#define GETTICK(GETTICK865,28021
static void epp_bh(868,28063
static int baycom_send_packet(973,30575
static int baycom_set_mac_address(986,30929
static struct net_device_stats *baycom_get_stats(997,31281
static void epp_wakeup(1012,31671
static int epp_open(1035,32513
static int epp_close(1156,36347
static int baycom_setmode(1187,37265
static int baycom_ioctl(1215,37988
static int baycom_probe(1354,42242
__initfunc(1418,44064
static const char *mode[1476,45361
static int iobase[1477,45409
__initfunc(1491,45792
void cleanup_module(1506,46199
__initfunc(1532,46686

drivers/net/hamradio/6pack.h,1117
#define _LINUX_6PACK_H18,406
#define SIXPACK_VERSION 20,430
#define SIXP_SEOF	25,527
#define SIXP_TX_URUN	26,587
#define SIXP_RX_ORUN	27,636
#define SIXP_RX_BUF_OVL	28,684
#define SIXP_CHKSUM	30,744
#define SIXP_CMD_MASK	34,881
#define SIXP_CHN_MASK	35,909
#define SIXP_PRIO_CMD_MASK	36,937
#define SIXP_STD_CMD_MASK	37,969
#define SIXP_PRIO_DATA_MASK	38,1000
#define SIXP_TX_MASK	39,1033
#define SIXP_RX_MASK	40,1060
#define SIXP_RX_DCD_MASK	41,1087
#define SIXP_LEDS_ON	42,1117
#define SIXP_LEDS_OFF	43,1144
#define SIXP_CON	44,1172
#define SIXP_STA	45,1195
#define SIXP_FOUND_TNC	47,1219
#define SIXP_CON_ON	48,1248
#define SIXP_DCD_MASK	49,1274
#define SIXP_DAMA_OFF	50,1302
#define SIXP_TXDELAY	53,1361
#define SIXP_PERSIST	54,1402
#define SIXP_SLOTTIME	55,1444
#define SIXP_INIT_RESYNC_TIMEOUT	56,1486
#define SIXP_RESYNC_TIMEOUT	57,1538
#define SIXP_NRUNIT	60,1614
#define SIXP_MTU	61,1675
enum sixpack_flags sixpack_flags63,1717
	SIXPF_INUSE,64,1738
	SIXPF_ERROR,65,1773
struct sixpack sixpack68,1816
#define AX25_6PACK_HEADER_LEN 128,3889
#define SIXPACK_MAGIC 129,3921

drivers/net/hydra.c,960
#define HYDRA_DEBUG43,1464
#define HYDRA_VERSION 46,1507
	#define TX_RING_SIZE	51,1702
	#define RX_RING_SIZE	52,1726
	#define TX_RING_SIZE 54,1757
	#define RX_RING_SIZE 55,1781
#define ETHER_MIN_LEN 58,1813
#define ETHER_MAX_LEN 59,1838
#define ETHER_ADDR_LEN 60,1865
#define WRITE_REG(WRITE_REG69,2087
#define READ_REG(READ_REG70,2156
#define NIC_INTS 73,2259
#define NIC_RCRBITS 76,2388
struct hydra_privatehydra_private81,2445
static __inline__ void *memcpyw(110,3375
static void memcpyw(146,4412
__initfunc(160,4559
static int hydra_open(213,5991
static int hydra_close(294,8212
static void hydra_interrupt(321,8809
static int hydra_start_xmit(436,11885
static void __inline__ hydra_rx(527,14252
static struct net_device_stats *hydra_get_stats(636,17642
static void set_multicast_list(650,17946
static char devicename[663,18284
static struct device hydra_dev 665,18321
int init_module(673,18495
void cleanup_module(685,18683

drivers/net/ariadne.c,864
int ariadne_debug 65,1865
int ariadne_debug 67,1906
#define swapw(swapw76,2030
#define lowb(lowb78,2118
#define swhighw(swhighw80,2190
#define swloww(swloww82,2293
#define TX_RING_SIZE	89,2408
#define RX_RING_SIZE	90,2431
#define PKT_BUF_SIZE	92,2456
struct ariadne_private ariadne_private99,2527
struct lancedata lancedata118,3025
static void memcpyw(138,3740
__initfunc(149,3915
static int ariadne_open(196,5395
static void ariadne_init_ring(309,9458
static int ariadne_close(356,11265
static void ariadne_interrupt(386,12060
static int ariadne_start_xmit(545,16119
static int ariadne_rx(695,20111
static struct net_device_stats *ariadne_get_stats(783,22670
static void set_multicast_list(808,23453
static char devicename[843,24693
static struct device ariadne_dev 845,24730
int init_module(853,24922
void cleanup_module(865,25126

drivers/net/dgrs_es4h.h,3576
#define	ES4H_MANUFmsb	20,859
#define	ES4H_MANUFlsb	21,903
#	define ES4H_MANUF_CODE	22,947
#define	ES4H_PRODUCT	24,995
#	define ES4H_PRODUCT_CODE	25,1038
#	define EPC_PRODUCT_CODE	26,1070
#define	ES4H_REVISION	28,1103
#	define ES4H_REVISION_CODE	29,1147
#define	ES4H_EC	31,1181
#	define ES4H_EC_RESET	32,1223
#	define ES4H_EC_ENABLE	33,1273
#define	ES4H_PC	35,1369
#	define ES4H_PC_RESET	36,1416
#	define ES4H_PC_INT	37,1466
#define	ES4H_MW	39,1524
#	define ES4H_MW_ENABLE	40,1585
#	define ES4H_MW_SELECT_MASK	41,1639
#define	ES4H_IS	43,1704
#	define ES4H_IS_INTMASK	44,1756
#	define ES4H_IS_INTOFF	45,1814
#	define ES4H_IS_INT3	46,1858
#	define ES4H_IS_INT5	47,1899
#	define ES4H_IS_INT7	48,1940
#	define ES4H_IS_INT10	49,1981
#	define ES4H_IS_INT11	50,2024
#	define ES4H_IS_INT12	51,2067
#	define ES4H_IS_INT15	52,2110
#	define ES4H_IS_INTACK	53,2153
#	define ES4H_IS_INTPEND	54,2207
#	define ES4H_IS_LINEAR	55,2266
#	define ES4H_IS_AS15	56,2326
#define	ES4H_AS_23_16	58,2387
#define	ES4H_AS_31_24	59,2447
#define ES4H_IO_MAX	61,2508
#define SE6_RESET	66,2574
#define	SE4_NPORTS	75,2892
#define	SE6_NPORTS	76,2941
#define	SE_NPORTS	77,2990
#define	ES4H_RAM_BASE	79,3043
#define	ES4H_RAM_SIZE	80,3103
#define	ES4H_RAM_INTBASE	81,3161
#define	ES4H_ETHER0_PORT	86,3315
#define	ES4H_ETHER0_CMD	87,3351
#define	ES4H_ETHER1_PORT	88,3387
#define	ES4H_ETHER1_CMD	89,3423
#define	ES4H_ETHER2_PORT	90,3459
#define	ES4H_ETHER2_CMD	91,3495
#define	ES4H_ETHER3_PORT	92,3531
#define	ES4H_ETHER3_CMD	93,3567
#define	ES4H_ETHER4_PORT	94,3603
#define	ES4H_ETHER4_CMD	95,3658
#define	ES4H_ETHER5_PORT	96,3713
#define	ES4H_ETHER5_CMD	97,3768
#define	ES4H_I8254	99,3824
#define	SE4_I8254_HZ	102,3900
#define	SE4_IDT_HZ	103,3964
#define	SE6_I8254_HZ	104,4016
#define	SE6_IDT_HZ	105,4079
#define	ES4H_I8254_HZ	106,4130
#define	ES4H_GPP	108,4196
#	define ES4H_GPP_C0_100	112,4286
#	define ES4H_GPP_C0_SQE	113,4348
#	define ES4H_GPP_C1_100	114,4414
#	define ES4H_GPP_C1_SQE	115,4476
#	define ES4H_GPP_C2_100	116,4542
#	define ES4H_GPP_C2_SQE	117,4604
#	define ES4H_GPP_C3_100	118,4670
#	define ES4H_GPP_C3_SQE	119,4732
#	define ES4H_GPP_SQE	120,4798
#	define ES4H_GPP_100	121,4858
#	define ES4H_GPP_HOSTINT	122,4914
#	define SE4_GPP_EED	124,5011
#	define SE4_GPP_EECS	125,5066
#	define SE4_GPP_EECK	126,5125
#	define SE6_GPP_EED	131,5212
#	define SE6_GPP_EECS	132,5267
#	define SE6_GPP_EECK	133,5326
#	define SE6_GPP_LINK	134,5379
#define	ES4H_INTVEC	136,5436
#	define ES4H_IV_DMA0	137,5495
#	define ES4H_IV_PKT0	138,5550
#	define ES4H_IV_DMA1	139,5605
#	define ES4H_IV_PKT1	140,5660
#	define ES4H_IV_DMA2	141,5715
#	define ES4H_IV_PKT2	142,5770
#	define ES4H_IV_DMA3	143,5825
#	define ES4H_IV_PKT3	144,5880
#define	ES4H_INTACK	146,5936
#	define ES4H_INTACK_8254	147,5992
#	define ES4H_INTACK_HOST	148,6054
#	define ES4H_INTACK_PKT0	149,6105
#	define ES4H_INTACK_PKT1	150,6162
#	define ES4H_INTACK_PKT2	151,6219
#	define ES4H_INTACK_PKT3	152,6276
#define	SE6_PLX	154,6334
#define	SE6_PCI_VENDOR_ID	157,6422
#define	SE6_PCI_DEVICE_ID	158,6481
#define	SE6_PCI_ID	159,6539
#define	ES4H_INT_8254	164,6631
#define	ES4H_INT_HOST	165,6663
#define	ES4H_INT_ETHER0	166,6695
#define	ES4H_INT_ETHER1	167,6729
#define	ES4H_INT_ETHER2	168,6763
#define	ES4H_INT_ETHER3	169,6797
extern ushort	Gpp;176,7033
extern ushort	EEck;177,7084
extern ushort	EEcs;178,7121
extern ushort	EEd;179,7155
extern ulong	I8254_Hz;180,7190
extern ulong	IDT_Hz;181,7241
extern int	Nports;182,7287
extern int	Nchan;183,7344

drivers/net/dgrs_ether.h,326
typedef int (FILTER_FUNC)FILTER_FUNC5,134
#define	NFILTERS	6,212
#	define		rfd_freed	74,1880
} PORT;PORT104,2772
extern PORT	Port[113,3013
extern int	Nports;115,3047
extern int	Nchan;116,3112
extern int	FirstChan;118,3170
extern int	NumChan;119,3240
extern int	IsPromisc;124,3298
extern int	MultiNicMode;125,3320

drivers/net/hydra.h,2370
#define HYDRA_NIC_BASE 51,2361
#define NIC_CR 55,2415
#define NIC_PSTART 56,2467
#define NIC_PSTOP 57,2519
#define NIC_BNDRY 58,2571
#define NIC_TSR 59,2623
#define NIC_TPSR 60,2679
#define NIC_NCR 61,2740
#define NIC_TBCR0 62,2801
#define NIC_FIFO 63,2867
#define NIC_TBCR1 64,2919
#define NIC_ISR 65,2985
#define NIC_RBCR0 66,3044
#define NIC_RBCR1 67,3108
#define NIC_RSR 68,3172
#define NIC_RCR 69,3228
#define NIC_CNTR0 70,3284
#define NIC_TCR 71,3352
#define NIC_CNTR1 72,3410
#define NIC_DCR 73,3468
#define NIC_CNTR2 74,3521
#define NIC_IMR 75,3583
#define NIC_PAR0 79,3669
#define NIC_PAR1 80,3719
#define NIC_PAR2 81,3744
#define NIC_PAR3 82,3769
#define NIC_PAR4 83,3794
#define NIC_PAR5 84,3819
#define NIC_CURR 85,3844
#define NIC_MAR0 86,3905
#define NIC_MAR1 87,3956
#define NIC_MAR2 88,3981
#define NIC_MAR3 89,4008
#define NIC_MAR4 90,4035
#define NIC_MAR5 91,4062
#define NIC_MAR6 92,4089
#define NIC_MAR7 93,4116
#define CR_STOP 97,4180
#define CR_START 98,4240
#define CR_TXP 99,4275
#define CR_RD0 101,4320
#define CR_RD1 102,4364
#define CR_RD2 103,4387
#define CR_NODMA 105,4411
#define CR_PS0 107,4437
#define CR_PS1 108,4478
#define CR_PAGE0 110,4502
#define CR_PAGE1 111,4522
#define CR_PAGE2 112,4547
#define ISR_PRX 116,4614
#define ISR_PTX 117,4674
#define ISR_RXE 118,4737
#define ISR_TXE 119,4781
#define ISR_OVW 120,4825
#define ISR_CNT 121,4874
#define ISR_RDC 122,4923
#define ISR_RST 123,4971
#define DCR_WTS 127,5055
#define DCR_BOS 128,5106
#define DCR_LAS 129,5157
#define DCR_LS 130,5208
#define DCR_AR 131,5259
#define DCR_FT0 132,5310
#define DCR_FT1 133,5361
#define TCR_CRC 137,5425
#define TCR_LB0 138,5465
#define TCR_LB1 139,5510
#define TCR_ATD 140,5532
#define TCR_OFST 141,5582
#define TSR_PTX 145,5675
#define TSR_COL 146,5722
#define TSR_ABT 147,5768
#define TSR_CRS 148,5813
#define TSR_FU 149,5860
#define TSR_CDH 150,5902
#define TSR_OWC 151,5943
#define RCR_SEP 155,6040
#define RCR_AR 156,6089
#define RCR_AB 157,6137
#define RCR_AM 158,6182
#define RCR_PRO 159,6227
#define RCR_MON 160,6272
#define RSR_PRX 164,6358
#define RSR_CRC 165,6416
#define RSR_FAE 166,6454
#define RSR_FO 167,6504
#define RSR_MPA 168,6545
#define RSR_PHY 169,6587
#define RSR_DIS 170,6632
#define RSR_DFR 171,6678
#define HYDRA_ADDRPROM 175,6771

drivers/net/ariadne.h,4663
struct Am79C960 Am79C96044,1370
#define CSR0	63,1902
#define CSR1	64,1959
#define CSR2	65,1999
#define CSR3	66,2040
#define CSR4	67,2106
#define CSR6	68,2161
#define CSR8	69,2222
#define CSR9	70,2287
#define CSR10	71,2353
#define CSR11	72,2420
#define CSR12	73,2487
#define CSR13	74,2555
#define CSR14	75,2624
#define CSR15	76,2693
#define CSR16	77,2737
#define CSR17	78,2802
#define CSR18	79,2867
#define CSR19	80,2928
#define CSR20	81,2989
#define CSR21	82,3051
#define CSR22	83,3113
#define CSR23	84,3171
#define CSR24	85,3229
#define CSR25	86,3288
#define CSR26	87,3347
#define CSR27	88,3409
#define CSR28	89,3471
#define CSR29	90,3536
#define CSR30	91,3601
#define CSR31	92,3661
#define CSR32	93,3721
#define CSR33	94,3784
#define CSR34	95,3847
#define CSR35	96,3913
#define CSR36	97,3979
#define CSR37	98,4046
#define CSR38	99,4113
#define CSR39	100,4181
#define CSR40	101,4249
#define CSR41	102,4317
#define CSR42	103,4385
#define CSR43	104,4454
#define CSR44	105,4523
#define CSR45	106,4588
#define CSR46	107,4653
#define CSR47	108,4701
#define CSR48	109,4748
#define CSR49	110,4796
#define CSR50	111,4844
#define CSR51	112,4892
#define CSR52	113,4940
#define CSR53	114,4988
#define CSR54	115,5036
#define CSR55	116,5084
#define CSR56	117,5132
#define CSR57	118,5180
#define CSR58	119,5228
#define CSR59	120,5276
#define CSR60	121,5324
#define CSR61	122,5391
#define CSR62	123,5458
#define CSR63	124,5528
#define CSR64	125,5598
#define CSR65	126,5657
#define CSR66	127,5716
#define CSR67	128,5782
#define CSR68	129,5848
#define CSR69	130,5912
#define CSR70	131,5976
#define CSR71	132,6024
#define CSR72	133,6072
#define CSR74	134,6123
#define CSR76	135,6175
#define CSR78	136,6225
#define CSR80	137,6276
#define CSR82	138,6339
#define CSR84	139,6388
#define CSR85	140,6430
#define CSR86	141,6472
#define CSR88	142,6522
#define CSR89	143,6560
#define CSR92	144,6598
#define CSR94	145,6651
#define CSR96	146,6722
#define CSR97	147,6785
#define CSR98	148,6848
#define CSR99	149,6911
#define CSR104	150,6974
#define CSR105	151,7010
#define CSR108	152,7046
#define CSR109	153,7103
#define CSR112	154,7160
#define CSR114	155,7210
#define CSR124	156,7265
#define ISACSR0	165,7441
#define ISACSR1	166,7495
#define ISACSR2	167,7550
#define ISACSR4	168,7608
#define ISACSR5	169,7667
#define ISACSR6	170,7709
#define ISACSR7	171,7751
#define ERR	180,7923
#define BABL	181,7955
#define CERR	182,8016
#define MISS	183,8067
#define MERR	184,8107
#define RINT	185,8147
#define TINT	186,8192
#define IDON	187,8238
#define INTR	188,8285
#define INEA	189,8327
#define RXON	190,8371
#define TXON	191,8409
#define TDMD	192,8448
#define STOP	193,8491
#define STRT	194,8523
#define INIT	195,8556
#define BABLM	204,8733
#define MISSM	205,8773
#define MERRM	206,8819
#define RINTM	207,8865
#define TINTM	208,8916
#define IDONM	209,8968
#define DXMT2PD	210,9021
#define EMBA	211,9086
#define ENTST	220,9276
#define DMAPLUS	221,9321
#define TIMER	222,9385
#define DPOLL	223,9435
#define APAD_XMT	224,9488
#define ASTRP_RCV	225,9536
#define MFCO	226,9586
#define MFCOM	227,9653
#define RCVCCO	228,9716
#define RCVCCOM	229,9790
#define TXSTRT	230,9860
#define TXSTRTM	231,9911
#define JAB	232,9961
#define JABM	233,10000
#define PROM	242,10162
#define DRCVBC	243,10206
#define DRCVPA	244,10261
#define DLNKTST	245,10323
#define DAPC	246,10373
#define MENDECL	247,10438
#define LRTTSEL	248,10489
#define PORTSEL1	249,10561
#define PORTSEL2	250,10608
#define INTL	251,10655
#define DRTY	252,10700
#define FCOLL	253,10741
#define DXMTFCS	254,10785
#define LOOP	255,10836
#define DTX	256,10879
#define DRX	257,10925
#define ASEL	266,11101
#define LEDOUT	275,11282
#define PSE	276,11330
#define XMTE	277,11379
#define RVPOLE	278,11436
#define RCVE	279,11496
#define JABE	280,11552
#define COLE	281,11600
struct RDRE RDRE288,11706
struct TDRE TDRE300,12006
#define RF_OWN	312,12283
#define RF_ERR	313,12353
#define RF_FRAM	314,12388
#define RF_OFLO	315,12432
#define RF_CRC	316,12477
#define RF_BUFF	317,12516
#define RF_STP	318,12559
#define RF_ENP	319,12604
#define TF_OWN	326,12687
#define TF_ERR	327,12757
#define TF_ADD_FCS	328,12792
#define TF_MORE	329,12848
#define TF_ONE	330,12905
#define TF_DEF	331,12951
#define TF_STP	332,12989
#define TF_ENP	333,13034
#define EF_BUFF	340,13114
#define EF_UFLO	341,13157
#define EF_LCOL	342,13203
#define EF_LCAR	343,13248
#define EF_RTRY	344,13294
#define EF_TDR	345,13336
struct MC68230 MC68230353,13450
struct AriadneBoard AriadneBoard407,15346

drivers/net/dgrs_i82596.h,6288
#define	I596_PORT_RESET	17,684
#define	I596_PORT_SELFTEST	18,753
#define	I596_PORT_SCP_ADDR	19,804
#define	I596_PORT_DUMP	20,861
} I596_ST;I596_ST29,1097
#define	I596_ST_SELFTEST_FAIL	31,1109
#define	I596_ST_DIAGNOSE_FAIL	32,1168
#define	I596_ST_BUSTIMER_FAIL	33,1227
#define	I596_ST_REGISTER_FAIL	34,1287
#define	I596_ST_ROM_FAIL	35,1346
} I596_DUMP;I596_DUMP43,1473
} I596_TBD;I596_TBD57,1853
#define	I596_TBD_NOLINK	59,1866
#define	I596_TBD_EOF	60,1917
#define I596_TBD_COUNT_MASK	61,1946
} I596_TFD;I596_TFD86,2595
#define	I596_TFD_NOCRC	88,2608
#define	I596_TFD_FLEX	89,2666
} I596_RBD;I596_RBD118,3467
#define	I596_RBD_NOLINK	120,3480
#define	I596_RBD_EOF	121,3531
#define	I596_RBD_F	122,3597
#define	I596_RBD_EL	124,3657
} I596_RFD;I596_RFD149,4390
#define	I596_RFD_C	151,4403
#define	I596_RFD_B	152,4459
#define	I596_RFD_OK	153,4522
#define	I596_RFD_ERR_LENGTH	154,4573
#define	I596_RFD_ERR_CRC	155,4635
#define	I596_RFD_ERR_ALIGN	156,4691
#define	I596_RFD_ERR_NOBUFS	157,4755
#define	I596_RFD_ERR_DMA	158,4819
#define	I596_RFD_ERR_SHORT	159,4875
#define	I596_RFD_NOMATCH	160,4939
#define	I596_RFD_COLLISION	161,5004
#define	I596_RFD_EL	163,5078
#define	I596_RFD_FLEX	164,5133
#define	I596_RFD_EOF	165,5188
#define	I596_RFD_F	166,5255
#define I596_CB_CMD	175,5578
#define I596_CB_CMD_NOP	176,5622
#define I596_CB_CMD_IA	177,5649
#define I596_CB_CMD_CONF	178,5675
#define I596_CB_CMD_MCAST	179,5702
#define I596_CB_CMD_XMIT	180,5730
#define I596_CB_CMD_TDR	181,5757
#define I596_CB_CMD_DUMP	182,5784
#define I596_CB_CMD_DIAG	183,5811
#define	I596_CB_CMD_EL	185,5839
#define	I596_CB_CMD_S	186,5902
#define	I596_CB_CMD_I	187,5962
#define	I596_CB_STATUS	190,6077
#define	I596_CB_STATUS_C	191,6135
#define	I596_CB_STATUS_B	192,6190
#define	I596_CB_STATUS_C_OR_B	193,6251
#define	I596_CB_STATUS_OK	194,6319
#define	I596_CB_STATUS_A	195,6386
#define	I596_CB_NOLINK	197,6448
} I596_CB_NOP;I596_CB_NOP207,6626
} I596_CB_FAST;I596_CB_FAST216,6777
#define	FASTs(FASTs217,6793
#define	FASTc(FASTc218,6814
} I596_CB_IA;I596_CB_IA229,7008
} I596_CB_CONF;I596_CB_CONF240,7177
#define	I596_CONF0_P	242,7194
#define	I596_CONF0_COUNT	243,7251
#define	I596_CONF1_MON_OFF	245,7315
#define	I596_CONF1_MON_ON	246,7379
#define	I596_CONF1_TxFIFO(I596_CONF1_TxFIFO247,7441
#define	I596_CONF2_SAVEBF	249,7506
#define	I596_CONF3_ADDRLEN(I596_CONF3_ADDRLEN251,7560
#define	I596_CONF3_NOSRCINSERT	252,7615
#define	I596_CONF3_PREAMBLE8	253,7686
#define	I596_CONF3_LOOPOFF	254,7742
#define	I596_CONF3_LOOPINT	255,7794
#define	I596_CONF3_LOOPEXT	256,7851
#define	I596_CONF4_LINPRI(I596_CONF4_LINPRI258,7909
#define	I596_CONF4_EXPPRI(I596_CONF4_EXPPRI259,7978
#define	I596_CONF4_IEEE_BOM	260,8052
#define	I596_CONF5_IFS(I596_CONF5_IFS262,8115
#define	I596_CONF6_ST_LOW(I596_CONF6_ST_LOW264,8181
#define	I596_CONF7_ST_HI(I596_CONF7_ST_HI266,8245
#define	I596_CONF7_RETRY(I596_CONF7_RETRY267,8307
#define	I596_CONF8_PROMISC	269,8366
#define	I596_CONF8_NOBROAD	270,8419
#define	I596_CONF8_MANCHESTER	271,8451
#define	I596_CONF8_TxNOCRS	272,8486
#define	I596_CONF8_NOCRC	273,8518
#define	I596_CONF8_CRC_CCITT	274,8548
#define	I596_CONF8_BITSTUFFING	275,8582
#define	I596_CONF8_PADDING	276,8618
#define	I596_CONF9_CSFILTER(I596_CONF9_CSFILTER278,8651
#define	I596_CONF9_CSINT(I596_CONF9_CSINT279,8686
#define	I596_CONF9_CDFILTER(I596_CONF9_CDFILTER280,8719
#define	I596_CONF9_CDINT(I596_CONF9_CDINT281,8757
#define	I596_CONF10_MINLEN(I596_CONF10_MINLEN283,8791
#define	I596_CONF11_PRECRS_	285,8853
#define	I596_CONF11_LNGFLD_	286,8922
#define	I596_CONF11_CRCINM_	287,8987
#define	I596_CONF11_AUTOTX	288,9040
#define	I596_CONF11_CSBSAC_	289,9094
#define	I596_CONF11_MCALL_	290,9167
#define I596_CONF13_RESERVED	292,9220
#define I596_CONF13_MULTIA	293,9283
#define I596_CONF13_DISBOF	294,9353
} I596_CB_MCAST;I596_CB_MCAST305,9639
typedef	I596_TFD	I596_CB_XMIT;I596_CB_XMIT310,9708
#define	I596_CB_XMIT_NOCRC	312,9740
#define	I596_CB_XMIT_FLEX	313,9802
#define	I596_CB_XMIT_ERR_LATE	315,9868
#define	I596_CB_XMIT_ERR_NOCRS	316,9941
#define	I596_CB_XMIT_ERR_NOCTS	317,10018
#define	I596_CB_XMIT_ERR_UNDER	318,10089
#define	I596_CB_XMIT_ERR_MAXCOL	319,10161
#define	I596_CB_XMIT_COLLISIONS	320,10240
} I596_CB_TDR;I596_CB_TDR331,10481
} I596_CB_DUMP;I596_CB_DUMP342,10642
} I596_CB_DIAG;I596_CB_DIAG352,10793
typedef union _I596_CB_I596_CB357,10843
} I596_CB;I596_CB370,11104
} I596_SCB;I596_SCB391,11648
#define	I596_SCB_ACK	394,11688
#define	I596_SCB_ACK_CX	395,11739
#define	I596_SCB_ACK_FR	396,11800
#define	I596_SCB_ACK_CNA	397,11857
#define	I596_SCB_ACK_RNR	398,11923
#define	I596_SCB_ACK_ALL	399,11984
#define	I596_SCB_CUC	401,12038
#define	I596_SCB_CUC_NOP	402,12095
#define	I596_SCB_CUC_START	403,12146
#define	I596_SCB_CUC_RESUME	404,12214
#define	I596_SCB_CUC_SUSPEND	405,12272
#define	I596_SCB_CUC_ABORT	406,12339
#define	I596_SCB_CUC_LOAD	407,12408
#define	I596_SCB_CUC_LOADIMM	408,12472
#define	I596_SCB_RUC	410,12545
#define	I596_SCB_RUC_NOP	411,12602
#define	I596_SCB_RUC_START	412,12653
#define	I596_SCB_RUC_RESUME	413,12709
#define	I596_SCB_RUC_SUSPEND	414,12767
#define	I596_SCB_RUC_ABORT	415,12827
#define	I596_SCB_RESET	417,12884
#define	I596_SCB_STAT	420,12968
#define	I596_SCB_CX	421,13011
#define	I596_SCB_FR	422,13064
#define	I596_SCB_CNA	423,13113
#define	I596_SCB_RNR	424,13172
#define	I596_SCB_CUS	426,13227
#define	I596_SCB_CUS_IDLE	427,13282
#define	I596_SCB_CUS_SUSPENDED	428,13326
#define	I596_SCB_CUS_ACTIVE	429,13380
#define	I596_SCB_RUS	431,13429
#define	I596_SCB_RUS_IDLE	432,13484
#define	I596_SCB_RUS_SUSPENDED	433,13528
#define	I596_SCB_RUS_NORES	434,13582
#define	I596_SCB_RUS_READY	435,13635
#define	I596_SCB_RUS_NORBDS	436,13681
#define	I596_SCB_LOADED	438,13745
} I596_ISCP;I596_ISCP449,14150
} I596_SCP;I596_SCP461,14475
#define I596_SCP_RESERVED	464,14510
#define I596_SCP_INTLOW	465,14577
#define I596_SCP_INTHIGH	466,14643
#define I596_SCP_LOCKDIS	467,14704
#define I596_SCP_LOCKEN	468,14767
#define I596_SCP_ETHROTTLE	469,14823
#define I596_SCP_ITHROTTLE	470,14887
#define I596_SCP_LINEAR	471,14945
#define I596_SCP_SEGMENTED	472,14997
#define I596_SCP_82586	473,15054

drivers/net/dgrs.h,162
#define DGRSIOCTL 24,514
typedef struct dgrs_ioctl dgrs_ioctl26,553
} DGRS_IOCTL;DGRS_IOCTL32,862
#define	DGRS_GETMEM	37,913
#define	DGRS_SETFILTER	38,978

drivers/net/a2065.h,1777
struct lance_regs lance_regs41,1249
#define CRC_POLYNOMIAL_BE 47,1371
#define CRC_POLYNOMIAL_LE 48,1442
#define LE_CSR0	54,1565
#define LE_CSR1	55,1620
#define LE_CSR2	56,1662
#define LE_CSR3	57,1705
#define LE_C0_ERR	64,1806
#define LE_C0_BABL	65,1844
#define LE_C0_CERR	66,1911
#define LE_C0_MISS	67,1968
#define LE_C0_MERR	68,2014
#define LE_C0_RINT	69,2060
#define LE_C0_TINT	70,2111
#define LE_C0_IDON	71,2163
#define LE_C0_INTR	72,2216
#define LE_C0_INEA	73,2264
#define LE_C0_RXON	74,2314
#define LE_C0_TXON	75,2358
#define LE_C0_TDMD	76,2403
#define LE_C0_STOP	77,2452
#define LE_C0_STRT	78,2490
#define LE_C0_INIT	79,2529
#define LE_C3_BSWP	86,2612
#define LE_C3_ACON	88,2694
#define LE_C3_BCON	90,2771
#define LE_MO_PROM	97,2842
#define LE_MO_INTL	98,2892
#define LE_MO_DRTY	99,2943
#define LE_MO_FCOLL	100,2990
#define LE_MO_DXMTFCS	101,3040
#define LE_MO_LOOP	102,3097
#define LE_MO_DTX	103,3146
#define LE_MO_DRX	104,3198
struct lance_rx_desc lance_rx_desc107,3249
struct lance_tx_desc lance_tx_desc117,3618
#define LE_R1_OWN	130,3933
#define LE_R1_ERR	131,3989
#define LE_R1_FRA	132,4025
#define LE_R1_OFL	133,4069
#define LE_R1_CRC	134,4114
#define LE_R1_BUF	135,4154
#define LE_R1_SOP	136,4197
#define LE_R1_EOP	137,4243
#define LE_R1_POK 138,4287
#define LE_T1_OWN	145,4382
#define LE_T1_ERR	146,4438
#define LE_T1_RES	147,4474
#define LE_T1_EMORE	149,4552
#define LE_T1_EONE	150,4611
#define LE_T1_EDEF	151,4659
#define LE_T1_SOP	152,4699
#define LE_T1_EOP	153,4745
#define LE_T1_POK	154,4789
#define LE_T3_BUF 161,4875
#define LE_T3_UFL 162,4921
#define LE_T3_LCOL 163,4970
#define LE_T3_CLOS 164,5019
#define LE_T3_RTY 165,5069
#define LE_T3_TDR	166,5114
struct A2065Board A2065Board173,5218

drivers/net/dgrs_asstruct.h,611
#	define MO(MO9,144
#	define VMO(VMO10,166
#	define	BEGIN_STRUCT(BEGIN_STRUCT12,190
#	define	S1A(S1A13,222
#	define	S2A(S2A14,284
#	define	S4A(S4A15,346
#	define	WORD(WORD16,408
#	define	WORDA(WORDA17,464
#	define	VWORD(VWORD18,526
#	define	S1(S119,582
#	define	S2(S220,638
#	define	S4(S421,694
#	define	END_STRUCT(END_STRUCT22,750
#define VMO(VMO26,815
#	define BEGIN_STRUCT(BEGIN_STRUCT28,861
#	define S1(S129,897
#	define S1A(S1A30,928
#	define S2(S231,962
#	define S2A(S2A32,993
#	define S4(S433,1027
#	define S4A(S4A34,1058
#	define END_STRUCT(END_STRUCT35,1092

drivers/net/atarilance.c,3510
static char *version 45,1927
#define	LANCE_DEBUG	78,2713
static int lance_debug 81,2755
static int lance_debug 83,2799
#define	DPRINTK(DPRINTK90,2931
# define PROBE_PRINT(PROBE_PRINT97,3068
# define PROBE_PRINT(PROBE_PRINT99,3107
#define TX_LOG_RING_SIZE	109,3433
#define RX_LOG_RING_SIZE	110,3462
#define TX_RING_SIZE	114,3528
#define TX_RING_LEN_BITS	115,3575
#define	TX_RING_MOD_MASK	116,3625
#define RX_RING_SIZE	118,3671
#define RX_RING_LEN_BITS	119,3718
#define	RX_RING_MOD_MASK	120,3768
struct lance_rx_head lance_rx_head123,3858
struct lance_tx_head lance_tx_head131,4152
struct ringdesc ringdesc139,4401
struct lance_init_block lance_init_block146,4639
struct lance_memory lance_memory156,4989
#define	RIEBL_RSVD_START	173,5683
#define	RIEBL_RSVD_END	174,5715
#define RIEBL_MAGIC	175,5746
#define RIEBL_MAGIC_ADDR	176,5779
#define RIEBL_HWADDR_ADDR	177,5848
#define RIEBL_IVEC_ADDR	178,5918
static unsigned char OldRieblDefHwaddr[185,6192
struct lance_ioreg lance_ioreg192,6318
enum lance_type lance_type205,6703
	OLD_RIEBL,206,6721
	NEW_RIEBL,207,6771
	PAM_CARD	208,6818
static char *lance_names[211,6860
struct lance_private lance_private219,7022
#define	MEM	235,7464
#define	DREG	236,7485
#define	AREG	237,7507
#define	REGA(REGA238,7529
#define PKT_BUF_SZ	241,7611
#define	PKTBUF_ADDR(PKTBUF_ADDR243,7714
struct lance_addr lance_addr247,7831
} lance_addr_list[251,7917
#define	N_LANCE_ADDR	266,8548
#define TMD1_ENP	272,8675
#define TMD1_STP	273,8718
#define TMD1_DEF	274,8763
#define TMD1_ONE	275,8801
#define TMD1_MORE	276,8847
#define TMD1_ERR	277,8904
#define TMD1_OWN 278,8947
#define TMD1_OWN_CHIP	280,9005
#define TMD1_OWN_HOST	281,9036
#define TMD3_TDR	284,9086
#define TMD3_RTRY	285,9151
#define TMD3_LCAR	286,9207
#define TMD3_LCOL	287,9252
#define TMD3_UFLO	288,9299
#define TMD3_BUFF	289,9355
#define RMD1_ENP	292,9433
#define RMD1_STP	293,9476
#define RMD1_BUFF	294,9521
#define RMD1_CRC	295,9564
#define RMD1_OFLO	296,9603
#define RMD1_FRAM	297,9642
#define RMD1_ERR	298,9686
#define RMD1_OWN 299,9729
#define RMD1_OWN_CHIP	301,9787
#define RMD1_OWN_HOST	302,9818
#define CSR0	305,9864
#define CSR1	306,9898
#define CSR2	307,9942
#define CSR3	308,9987
#define CSR8	309,10014
#define CSR15	310,10053
#define CSR0_INIT	314,10172
#define CSR0_STRT	315,10220
#define CSR0_STOP	316,10263
#define CSR0_TDMD	317,10305
#define CSR0_TXON	318,10358
#define CSR0_RXON	319,10409
#define CSR0_INEA	320,10457
#define CSR0_INTR	321,10511
#define CSR0_IDON	322,10564
#define CSR0_TINT	323,10621
#define CSR0_RINT	324,10680
#define CSR0_MERR	325,10736
#define CSR0_MISS	326,10786
#define CSR0_CERR	327,10836
#define CSR0_BABL	328,10905
#define CSR0_ERR	329,10970
#define CSR3_BCON	332,11024
#define CSR3_ACON	333,11069
#define CSR3_BSWP	334,11113
void *slow_memcpy(360,12080
__initfunc(373,12263
__initfunc(396,12735
__initfunc(446,13633
static int lance_open(626,19157
static void lance_init_ring(670,20142
#define	CHECK_OFFSET(CHECK_OFFSET685,20532
static int lance_start_xmit(716,21379
static void lance_interrupt(845,25173
static int lance_rx(955,28284
static int lance_close(1048,31275
static struct net_device_stats *lance_get_stats(1070,31703
static void set_multicast_list(1085,32135
static int lance_set_mac_address(1127,33388
static char devicename[1155,34145
static struct device atarilance_dev 1157,34182
int init_module(1165,34360
void cleanup_module(1178,34573

drivers/net/dgrs_bcomm.h,369
BEGIN_STRUCT(32,1314
#define	bc	121,4963
#define	BC_INIT	126,5036
#define	BC_RUN	127,5054
#define	BC_DIAGS	132,5099
#define BC_SASWITCH	133,5119
#define	BC_SWITCH	134,5141
#define	BC_MULTINIC	135,5161
#define	BC_SPEW_ENABLE	140,5222
#define	BC_FILTER_ERR	145,5283
#define	BC_FILTER_OK	146,5308
#define	BC_FILTER_SET	147,5331
#define	BC_FILTER_CLR	148,5355

drivers/net/dgrs_plx9060.h,4255
#define	PCI_PLXREGS_BASE_ADDR	9,173
#define	PCI_PLXREGS_IO_ADDR	11,209
#define	PCI_SPACE0_BASE_ADDR	13,243
#define	PCI_ROM_BASE_ADDR	15,278
#	define PCI_ROM_ENABLED	16,309
#define	PCI_INT_LINE	18,347
#define	PLX_LCL_OFFSET	24,507
#define	PLX_SPACE0_RANGE	29,613
#define	PLX_SPACE0_BASE_ADDR	30,683
#define	PLX_ROM_RANGE	32,747
#define	PLX_ROM_BASE_ADDR	33,811
#define	PLX_BUS_REGION	35,880
#define	PLX_MBOX0	40,975
#define	PLX_MBOX1	41,999
#define	PLX_MBOX2	42,1023
#define	PLX_MBOX3	43,1047
#define	PLX_MBOX4	44,1071
#define	PLX_MBOX5	45,1095
#define	PLX_MBOX6	46,1119
#define	PLX_MBOX7	47,1143
#define	PLX_PCI2LCL_DOORBELL	49,1168
#define	PLX_LCL2PCI_DOORBELL	51,1203
#define	PLX_INT_CSR	53,1238
#	define	PLX_LSERR_ENABLE	54,1295
#	define	PLX_LSERR_PE	55,1332
#	define	PLX_SERR	56,1366
#	define PLX_PCI_IE	62,1596
#	define	PLX_PCI_DOORBELL_IE	63,1628
#	define	PLX_PCI_ABORT_IE	64,1668
#	define	PLX_PCI_LOCAL_IE	65,1705
#	define	PLX_RETRY_ABORT_ENABLE	66,1742
#	define	PLX_PCI_DOORBELL_INT	67,1785
#	define	PLX_PCI_ABORT_INT	68,1826
#	define	PLX_PCI_LOCAL_INT	69,1864
#	define	PLX_LCL_IE	70,1902
#	define	PLX_LCL_DOORBELL_IE	71,1934
#	define	PLX_LCL_DMA0_IE	72,1974
#	define	PLX_LCL_DMA1_IE	73,2011
#	define	PLX_LCL_DOORBELL_INT	74,2048
#	define	PLX_LCL_DMA0_INT	75,2089
#	define	PLX_LCL_DMA1_INT	76,2126
#	define	PLX_LCL_BIST_INT	77,2163
#	define	PLX_BM_DIRECT_	78,2200
#	define	PLX_BM_DMA0_	79,2236
#	define	PLX_BM_DMA1_	80,2270
#	define	PLX_BM_ABORT_	81,2304
#define	PLX_MISC_CSR	87,2500
#	define PLX_USEROUT	88,2568
#	define PLX_USERIN	89,2601
#	define PLX_EECK	90,2633
#	define PLX_EECS	91,2664
#	define PLX_EEWD	92,2695
#	define PLX_EERD	93,2726
#define	PLX_DMA0_MODE	98,2810
#	define PLX_DMA_MODE_WIDTH32	99,2839
#	define PLX_DMA_MODE_WAITSTATES(PLX_DMA_MODE_WAITSTATES100,2880
#	define PLX_DMA_MODE_NOREADY	101,2925
#	define PLX_DMA_MODE_READY	102,2966
#	define PLX_DMA_MODE_NOBTERM	103,3005
#	define PLX_DMA_MODE_BTERM	104,3046
#	define PLX_DMA_MODE_NOBURST	105,3085
#	define PLX_DMA_MODE_BURST	106,3126
#	define PLX_DMA_MODE_NOCHAIN	107,3165
#	define PLX_DMA_MODE_CHAIN	108,3206
#	define PLX_DMA_MODE_DONE_IE	109,3245
#	define PLX_DMA_MODE_ADDR_HOLD	110,3286
#define	PLX_DMA0_PCI_ADDR	112,3330
#define	PLX_DMA0_LCL_ADDR	115,3404
#define	PLX_DMA0_SIZE	118,3480
#define	PLX_DMA0_DESCRIPTOR	121,3546
#	define	PLX_DMA_DESC_EOC	122,3580
#	define	PLX_DMA_DESC_TC_IE	123,3617
#	define	PLX_DMA_DESC_TO_HOST	124,3656
#	define	PLX_DMA_DESC_TO_BOARD	125,3697
#	define	PLX_DMA_DESC_NEXTADDR	126,3739
#define	PLX_DMA1_MODE	128,3782
#define	PLX_DMA1_PCI_ADDR	129,3811
#define	PLX_DMA1_LCL_ADDR	130,3843
#define	PLX_DMA1_SIZE	131,3875
#define	PLX_DMA1_DESCRIPTOR	132,3904
#define	PLX_DMA_CSR	134,3939
#	define PLX_DMA_CSR_0_ENABLE	135,3966
#	define PLX_DMA_CSR_0_START	136,4007
#	define PLX_DMA_CSR_0_ABORT	137,4047
#	define PLX_DMA_CSR_0_CLR_INTR	138,4087
#	define PLX_DMA_CSR_0_DONE	139,4130
#	define PLX_DMA_CSR_1_ENABLE	140,4169
#	define PLX_DMA_CSR_1_START	141,4210
#	define PLX_DMA_CSR_1_ABORT	142,4250
#	define PLX_DMA_CSR_1_CLR_INTR	143,4290
#	define PLX_DMA_CSR_1_DONE	144,4333
#define	PLX_DMA_ARB0	146,4373
#	define PLX_DMA_ARB0_LATENCY_T	147,4401
#	define PLX_DMA_ARB0_PAUSE_T	148,4444
#	define PLX_DMA_ARB0_LATENCY_EN	149,4485
#	define PLX_DMA_ARB0_PAUSE_EN	150,4529
#	define PLX_DMA_ARB0_BREQ_EN	151,4571
#	define PLX_DMA_ARB0_PRI	152,4612
#	define PLX_DMA_ARB0_PRI_ROUND	153,4650
#	define PLX_DMA_ARB0_PRI_0	154,4693
#	define PLX_DMA_ARB0_PRI_1	155,4732
#define	PLX_DMA_ARB1	157,4772
#	define PLX_DMA_ARB1_0_P2L_LW_TRIG(PLX_DMA_ARB1_0_P2L_LW_TRIG159,4834
#	define PLX_DMA_ARB1_0_L2P_LR_TRIG(PLX_DMA_ARB1_0_L2P_LR_TRIG160,4892
#	define PLX_DMA_ARB1_0_L2P_PW_TRIG(PLX_DMA_ARB1_0_L2P_PW_TRIG161,4950
#	define PLX_DMA_ARB1_0_P2L_PR_TRIG(PLX_DMA_ARB1_0_P2L_PR_TRIG162,5008
#	define PLX_DMA_ARB1_1_P2L_LW_TRIG(PLX_DMA_ARB1_1_P2L_LW_TRIG164,5099
#	define PLX_DMA_ARB1_1_L2P_LR_TRIG(PLX_DMA_ARB1_1_L2P_LR_TRIG165,5157
#	define PLX_DMA_ARB1_1_L2P_PW_TRIG(PLX_DMA_ARB1_1_L2P_PW_TRIG166,5215
#	define PLX_DMA_ARB1_1_P2L_PR_TRIG(PLX_DMA_ARB1_1_P2L_PR_TRIG167,5273
typedef struct _dmachain_dmachain169,5332
} DMACHAIN;DMACHAIN175,5420

drivers/net/dgrs_firmware.c,174
int dgrs_firmnum 1,0
char dgrs_firmver[2,24
char dgrs_firmdate[3,59
unsigned char dgrs_code[4,103
unsigned char dgrs_code[] __initdata 4,103
int dgrs_ncode 9966,359105

drivers/net/sunhme.h,11097
#define _SUNHME_H8,211
struct hmeal_gregs hmeal_gregs13,292
#define GREG_RESET_ETX 22,646
#define GREG_RESET_ERX 23,682
#define GREG_RESET_ALL 24,718
#define GREG_CFG_BURSTMSK 27,785
#define GREG_CFG_BURST16 28,821
#define GREG_CFG_BURST32 29,857
#define GREG_CFG_BURST64 30,893
#define GREG_CFG_64BIT 31,929
#define GREG_CFG_PARITY 32,965
#define GREG_CFG_RESV 33,1001
#define GREG_STAT_GOTFRAME 36,1068
#define GREG_STAT_RCNTEXP 37,1157
#define GREG_STAT_ACNTEXP 38,1246
#define GREG_STAT_CCNTEXP 39,1335
#define GREG_STAT_LCNTEXP 40,1424
#define GREG_STAT_RFIFOVF 41,1513
#define GREG_STAT_CVCNTEXP 42,1602
#define GREG_STAT_STSTERR 43,1691
#define GREG_STAT_SENTFRAME 44,1780
#define GREG_STAT_TFIFO_UND 45,1869
#define GREG_STAT_MAXPKTERR 46,1958
#define GREG_STAT_NCNTEXP 47,2047
#define GREG_STAT_ECNTEXP 48,2136
#define GREG_STAT_LCCNTEXP 49,2225
#define GREG_STAT_FCNTEXP 50,2314
#define GREG_STAT_DTIMEXP 51,2403
#define GREG_STAT_RXTOHOST 52,2492
#define GREG_STAT_NORXD 53,2581
#define GREG_STAT_RXERR 54,2670
#define GREG_STAT_RXLATERR 55,2759
#define GREG_STAT_RXPERR 56,2848
#define GREG_STAT_RXTERR 57,2937
#define GREG_STAT_EOPERR 58,3026
#define GREG_STAT_MIFIRQ 59,3115
#define GREG_STAT_HOSTTOTX 60,3204
#define GREG_STAT_TXALL 61,3293
#define GREG_STAT_TXEACK 62,3382
#define GREG_STAT_TXLERR 63,3471
#define GREG_STAT_TXPERR 64,3560
#define GREG_STAT_TXTERR 65,3649
#define GREG_STAT_SLVERR 66,3738
#define GREG_STAT_SLVPERR 67,3827
#define GREG_STAT_ERRORS 70,3957
#define GREG_IMASK_GOTFRAME 73,4038
#define GREG_IMASK_RCNTEXP 74,4127
#define GREG_IMASK_ACNTEXP 75,4216
#define GREG_IMASK_CCNTEXP 76,4305
#define GREG_IMASK_LCNTEXP 77,4394
#define GREG_IMASK_RFIFOVF 78,4483
#define GREG_IMASK_CVCNTEXP 79,4572
#define GREG_IMASK_STSTERR 80,4661
#define GREG_IMASK_SENTFRAME 81,4750
#define GREG_IMASK_TFIFO_UND 82,4839
#define GREG_IMASK_MAXPKTERR 83,4928
#define GREG_IMASK_NCNTEXP 84,5017
#define GREG_IMASK_ECNTEXP 85,5106
#define GREG_IMASK_LCCNTEXP 86,5195
#define GREG_IMASK_FCNTEXP 87,5284
#define GREG_IMASK_DTIMEXP 88,5373
#define GREG_IMASK_RXTOHOST 89,5462
#define GREG_IMASK_NORXD 90,5551
#define GREG_IMASK_RXERR 91,5640
#define GREG_IMASK_RXLATERR 92,5729
#define GREG_IMASK_RXPERR 93,5818
#define GREG_IMASK_RXTERR 94,5907
#define GREG_IMASK_EOPERR 95,5996
#define GREG_IMASK_MIFIRQ 96,6085
#define GREG_IMASK_HOSTTOTX 97,6174
#define GREG_IMASK_TXALL 98,6263
#define GREG_IMASK_TXEACK 99,6352
#define GREG_IMASK_TXLERR 100,6441
#define GREG_IMASK_TXPERR 101,6530
#define GREG_IMASK_TXTERR 102,6619
#define GREG_IMASK_SLVERR 103,6708
#define GREG_IMASK_SLVPERR 104,6797
struct hmeal_etxregs hmeal_etxregs107,6936
#define ETX_TP_DMAWAKEUP 124,8001
#define ETX_CFG_DMAENABLE 127,8112
#define ETX_CFG_FIFOTHRESH 128,8195
#define ETX_CFG_IRQDAFTER 129,8278
#define ETX_CFG_IRQDBEFORE 130,8361
#define ETX_RSIZE_SHIFT 132,8445
struct hmeal_erxregs hmeal_erxregs135,8527
#define ERX_CFG_DMAENABLE 147,9197
#define ERX_CFG_RESV1 148,9269
#define ERX_CFG_BYTEOFFSET 149,9341
#define ERX_CFG_RESV2 150,9413
#define ERX_CFG_SIZE32 151,9485
#define ERX_CFG_SIZE64 152,9557
#define ERX_CFG_SIZE128 153,9629
#define ERX_CFG_SIZE256 154,9701
#define ERX_CFG_RESV3 155,9773
#define ERX_CFG_CSUMSTART 156,9845
struct hmeal_bigmacregs hmeal_bigmacregs159,9992
#define BIGMAC_XCFG_ODENABLE 209,13747
#define BIGMAC_XCFG_XLBACK 210,13823
#define BIGMAC_XCFG_MLBACK 211,13899
#define BIGMAC_XCFG_MIIDISAB 212,13975
#define BIGMAC_XCFG_SQENABLE 213,14051
#define BIGMAC_XCFG_SQETWIN 214,14127
#define BIGMAC_XCFG_LANCE 215,14203
#define BIGMAC_XCFG_LIPG0 216,14279
#define BIGMAC_TXCFG_ENABLE 219,14395
#define BIGMAC_TXCFG_SMODE 220,14471
#define BIGMAC_TXCFG_CIGN 221,14547
#define BIGMAC_TXCFG_FCSOFF 222,14623
#define BIGMAC_TXCFG_DBACKOFF 223,14699
#define BIGMAC_TXCFG_FULLDPLX 224,14775
#define BIGMAC_TXCFG_DGIVEUP 225,14851
#define BIGMAC_RXCFG_ENABLE 228,14966
#define BIGMAC_RXCFG_PSTRIP 229,15045
#define BIGMAC_RXCFG_PMISC 230,15124
#define BIGMAC_RXCFG_DERR 231,15203
#define BIGMAC_RXCFG_DCRCS 232,15282
#define BIGMAC_RXCFG_ME 233,15361
#define BIGMAC_RXCFG_PGRP 234,15440
#define BIGMAC_RXCFG_HENABLE 235,15519
#define BIGMAC_RXCFG_AENABLE 236,15598
struct hmeal_tcvregs hmeal_tcvregs239,15761
#define FRAME_WRITE 251,16386
#define FRAME_READ 252,16427
#define TCV_CFG_PSELECT 255,16503
#define TCV_CFG_PENABLE 256,16582
#define TCV_CFG_BENABLE 257,16661
#define TCV_CFG_PREGADDR 258,16740
#define TCV_CFG_MDIO0 259,16819
#define TCV_CFG_MDIO1 260,16898
#define TCV_CFG_PDADDR 261,16977
#define TCV_PADDR_ETX 264,17092
#define TCV_PADDR_ITX 265,17171
#define TCV_STAT_BASIC 268,17285
#define TCV_STAT_NORMAL 269,17364
#define DP83840_BMCR 284,18005
#define DP83840_BMSR 285,18083
#define DP83840_PHYSID1 286,18161
#define DP83840_PHYSID2 287,18239
#define DP83840_ADVERTISE 288,18317
#define DP83840_LPA 289,18395
#define DP83840_EXPANSION 290,18473
#define DP83840_DCOUNTER 291,18551
#define DP83840_FCSCOUNTER 292,18629
#define DP83840_NWAYTEST 293,18707
#define DP83840_RERRCOUNTER 294,18785
#define DP83840_SREVISION 295,18863
#define DP83840_CSCONFIG 296,18941
#define DP83840_LBRERROR 297,19019
#define DP83840_PHYADDR 298,19097
#define DP83840_RESERVED 299,19175
#define DP83840_TPISTATUS 300,19253
#define DP83840_NCONFIG 301,19331
#define BMCR_RESV 304,19445
#define BMCR_CTST 305,19519
#define BMCR_FULLDPLX 306,19593
#define BMCR_ANRESTART 307,19667
#define BMCR_ISOLATE 308,19741
#define BMCR_PDOWN 309,19815
#define BMCR_ANENABLE 310,19889
#define BMCR_SPEED100 311,19963
#define BMCR_LOOPBACK 312,20037
#define BMCR_RESET 313,20111
#define BMSR_ERCAP 316,20220
#define BMSR_JCD 317,20294
#define BMSR_LSTATUS 318,20368
#define BMSR_ANEGCAPABLE 319,20442
#define BMSR_RFAULT 320,20516
#define BMSR_ANEGCOMPLETE 321,20590
#define BMSR_RESV 322,20664
#define BMSR_10HALF 323,20738
#define BMSR_10FULL 324,20812
#define BMSR_100HALF 325,20886
#define BMSR_100FULL 326,20960
#define BMSR_100BASE4 327,21034
#define ADVERTISE_SLCT 330,21147
#define ADVERTISE_CSMA 331,21221
#define ADVERTISE_10HALF 332,21295
#define ADVERTISE_10FULL 333,21369
#define ADVERTISE_100HALF 334,21443
#define ADVERTISE_100FULL 335,21517
#define ADVERTISE_100BASE4 336,21591
#define ADVERTISE_RESV 337,21665
#define ADVERTISE_RFAULT 338,21739
#define ADVERTISE_LPACK 339,21813
#define ADVERTISE_NPAGE 340,21887
#define ADVERTISE_ALL 342,21962
#define LPA_SLCT 346,22125
#define LPA_10HALF 347,22199
#define LPA_10FULL 348,22273
#define LPA_100HALF 349,22347
#define LPA_100FULL 350,22421
#define LPA_100BASE4 351,22495
#define LPA_RESV 352,22569
#define LPA_RFAULT 353,22643
#define LPA_LPACK 354,22717
#define LPA_NPAGE 355,22791
#define EXPANSION_NWAY 358,22913
#define EXPANSION_LCWP 359,22987
#define EXPANSION_ENABLENPAGE 360,23061
#define EXPANSION_NPCAPABLE 361,23135
#define EXPANSION_MFAULTS 362,23209
#define EXPANSION_RESV 363,23283
#define NWAYTEST_RESV1 366,23385
#define NWAYTEST_LOOPBACK 367,23459
#define NWAYTEST_RESV2 368,23533
#define CSCONFIG_RESV1 371,23649
#define CSCONFIG_LED4 372,23723
#define CSCONFIG_LED1 373,23797
#define CSCONFIG_RESV2 374,23871
#define CSCONFIG_TCVDISAB 375,23945
#define CSCONFIG_DFBYPASS 376,24019
#define CSCONFIG_GLFORCE 377,24093
#define CSCONFIG_CLKTRISTATE 378,24167
#define CSCONFIG_RESV3 379,24241
#define CSCONFIG_ENCODE 380,24315
#define CSCONFIG_RENABLE 381,24389
#define CSCONFIG_TCDISABLE 382,24463
#define CSCONFIG_RESV4 383,24537
#define CSCONFIG_NDISABLE 384,24611
#define LBRERROR_EBUFFER 387,24734
#define LBRERROR_PACKET 388,24808
#define LBRERROR_LINK 389,24882
#define LBRERROR_END 390,24956
#define LBRERROR_CODE 391,25030
#define LBRERROR_RESV1 392,25104
#define LBRERROR_LBACK 393,25178
#define LBRERROR_10TX 394,25252
#define LBRERROR_ENDEC 395,25326
#define LBRERROR_ALIGN 396,25400
#define LBRERROR_SCRAMBLER 397,25474
#define LBRERROR_ENCODER 398,25548
#define LBRERROR_BEBUF 399,25622
#define PHYADDR_ADDRESS 402,25730
#define PHYADDR_DISCONNECT 403,25804
#define PHYADDR_10MBPS 404,25878
#define PHYADDR_RESV 405,25952
#define TPISTATUS_RESV1 408,26065
#define TPISTATUS_SERIAL 409,26139
#define TPISTATUS_RESV2 410,26213
#define NCONFIG_JENABLE 413,26329
#define NCONFIG_RESV1 414,26403
#define NCONFIG_SQUELCH 415,26477
#define NCONFIG_UTP 416,26551
#define NCONFIG_HBEAT 417,26625
#define NCONFIG_LDISABLE 418,26699
#define NCONFIG_RESV2 419,26773
struct happy_meal_rxd happy_meal_rxd425,26998
#define RXFLAG_OWN 430,27073
#define RXFLAG_OVERFLOW 431,27144
#define RXFLAG_SIZE 432,27215
#define RXFLAG_CSUM 433,27286
struct happy_meal_txd happy_meal_txd435,27358
#define TXFLAG_OWN 440,27433
#define TXFLAG_SOP 441,27504
#define TXFLAG_EOP 442,27575
#define TXFLAG_CSENABLE 443,27646
#define TXFLAG_CSLOCATION 444,27717
#define TXFLAG_CSBUFBEGIN 445,27788
#define TXFLAG_SIZE 446,27859
#define TX_RING_SIZE 448,27931
#define RX_RING_SIZE 449,28013
#define TX_RING_MAXSIZE 451,28096
#define RX_RING_MAXSIZE 452,28127
#define ERX_CFG_DEFAULT(ERX_CFG_DEFAULT458,28415
#define NEXT_RX(NEXT_RX460,28502
#define NEXT_TX(NEXT_TX461,28564
#define PREV_RX(PREV_RX462,28626
#define PREV_TX(PREV_TX463,28688
#define TX_BUFFS_AVAIL(TX_BUFFS_AVAIL465,28751
#define RX_OFFSET 470,28977
#define RX_BUF_ALLOC_SIZE 471,29006
#define RX_COPY_THRESHOLD 473,29058
struct hmeal_init_block hmeal_init_block475,29090
#define hblock_offset(hblock_offset480,29232
#define SUN4C_PKT_BUF_SZ	483,29341
#define SUN4C_RX_BUFF_SIZE	484,29371
#define SUN4C_TX_BUFF_SIZE	485,29415
struct hmeal_buffers hmeal_buffers487,29460
#define hbuf_offset(hbuf_offset492,29583
enum happy_transceiver happy_transceiver496,29722
	external 497,29747
	internal 498,29762
	none 499,29777
enum happy_timer_state happy_timer_state503,29822
	arbwait 504,29847
	lupwait 505,29920
	ltrywait 506,29993
	asleep 507,30066
struct happy_meal happy_meal513,30188
#define	sun4d_buffers	530,31084
#define HFLAG_POLL 570,33766
#define HFLAG_FENABLE 571,33856
#define HFLAG_LANCE 572,33946
#define HFLAG_RXENABLE 573,34036
#define HFLAG_AUTO 574,34126
#define HFLAG_FULL 575,34216
#define HFLAG_MACFULL 576,34306
#define HFLAG_POLLENABLE 577,34396
#define HFLAG_RXCV 578,34486
#define HFLAG_INIT 579,34576
#define HFLAG_LINKUP 580,34666
#define HFLAG_PCI 581,34756
#define HFLAG_QUATTRO	582,34846
#define HFLAG_20_21 584,34921
#define HFLAG_NOT_A0 585,34977
struct quattro quattro588,35098
#define ALIGNED_RX_SKB_ADDR(ALIGNED_RX_SKB_ADDR605,35525
static inline struct sk_buff *happy_meal_alloc_skb(607,35644
extern inline u32 kva_to_hva(624,36019
extern inline unsigned int hme_read32(643,36464
extern inline void hme_write32(654,36683
extern inline void pcihme_write_rxd(668,36959
extern inline void pcihme_write_txd(680,37250
extern inline void pcihme_write_rxd(693,37547
extern inline void pcihme_write_txd(701,37739

drivers/net/shaper.c,1241
int sh_debug;82,2958
#define SHAPER_BANNER	84,2991
static int shaper_lock(90,3086
static void shaper_unlock(108,3358
static int shaper_clocks(119,3521
static void shaper_setspeed(131,3862
static int shaper_qframe(143,4100
static void shaper_queue_xmit(252,6446
static void shaper_timer(275,6938
static void shaper_kick(286,7134
static void shaper_flush(352,8326
static int shaper_open(370,8679
static int shaper_close(392,9049
static int shaper_start_xmit(410,9446
static struct net_device_stats *shaper_get_stats(416,9583
static int shaper_header(421,9671
static int shaper_rebuild_header(434,9985
static int shaper_cache(448,10247
static void shaper_cache_update(462,10550
static int shaper_neigh_setup(472,10783
static int shaper_neigh_setup_dev(481,10944
static int shaper_attach(491,11159
static int shaper_ioctl(544,12295
static struct shaper *shaper_alloc(575,12975
__initfunc(592,13340
static char devicename[643,14303
static struct device dev_shape 645,14331
int init_module(653,14434
void cleanup_module(665,14666
static struct device dev_sh0 685,15018
static struct device dev_sh1 694,15119
static struct device dev_sh2 703,15220
static struct device dev_sh3 711,15320
void shaper_init(719,15420

drivers/net/eexpress.h,2586
#define DATAPORT 10,155
#define WRITE_PTR 11,184
#define READ_PTR 12,213
#define SIGNAL_CA 13,242
#define SET_IRQ 14,271
#define SM_PTR 15,300
#define	MEM_Dec	16,329
#define MEM_Ctrl 17,358
#define MEM_Page_Ctrl 18,387
#define Config 19,416
#define EEPROM_Ctrl 20,445
#define ID_PORT 21,474
#define	MEM_ECtrl 22,503
#define SIRQ_en 29,580
#define SIRQ_dis 30,607
#define EC_Clk 33,653
#define EC_CS 34,680
#define EC_Wr 35,707
#define EC_Rd 36,734
#define ASIC_RST 37,761
#define i586_RST 38,788
#define eeprom_delay(eeprom_delay40,816
#define SCP_START 47,974
#define ISCP_START 50,1048
#define SCB_START 53,1102
#define TX_BUF_START 61,1368
#define TX_BUF_SIZE 63,1397
#define RX_BUF_SIZE 64,1447
#define SCB_complete(SCB_complete71,1602
#define SCB_rxdframe(SCB_rxdframe72,1642
#define SCB_CUdead(SCB_CUdead73,1682
#define SCB_RUdead(SCB_RUdead74,1722
#define SCB_ack(SCB_ack75,1762
#define SCB_CUstat(SCB_CUstat78,1857
#define SCB_RUstat(SCB_RUstat81,1974
#define SCB_CUnop 84,2034
#define SCB_CUstart 85,2065
#define SCB_CUresume 86,2096
#define SCB_CUsuspend 87,2127
#define SCB_CUabort 88,2158
#define SCB_resetchip 89,2189
#define SCB_RUnop 91,2221
#define SCB_RUstart 92,2252
#define SCB_RUresume 93,2283
#define SCB_RUsuspend 94,2314
#define SCB_RUabort 95,2345
#define Stat_Done(Stat_Done101,2411
#define Stat_Busy(Stat_Busy102,2451
#define Stat_OK(Stat_OK103,2491
#define Stat_Abort(Stat_Abort104,2531
#define Stat_STFail 105,2571
#define Stat_TNoCar(Stat_TNoCar106,2611
#define Stat_TNoCTS(Stat_TNoCTS107,2651
#define Stat_TNoDMA(Stat_TNoDMA108,2691
#define Stat_TDefer(Stat_TDefer109,2731
#define Stat_TColl(Stat_TColl110,2771
#define Stat_TXColl(Stat_TXColl111,2811
#define Stat_NoColl(Stat_NoColl112,2851
#define Cmd_END 121,3175
#define Cmd_SUS 122,3202
#define Cmd_INT 123,3229
#define Cmd_Nop 125,3257
#define Cmd_SetAddr 126,3284
#define Cmd_Config 127,3311
#define Cmd_MCast 128,3338
#define Cmd_Xmit 129,3365
#define Cmd_TDR 130,3392
#define Cmd_Dump 131,3419
#define Cmd_Diag 132,3446
#define FD_Done(FD_Done139,3527
#define FD_Busy(FD_Busy140,3563
#define FD_OK(FD_OK141,3599
#define FD_CRC(FD_CRC143,3636
#define FD_Align(FD_Align144,3672
#define FD_Resrc(FD_Resrc145,3708
#define FD_DMA(FD_DMA146,3744
#define FD_Short(FD_Short147,3780
#define FD_NoEOF(FD_NoEOF148,3816
struct rfd_header rfd_header150,3853
#define TDR_LINKOK 175,4655
#define TDR_XCVRPROBLEM 176,4688
#define TDR_OPEN 177,4721
#define TDR_SHORT 178,4754
#define TDR_TIME 179,4787

drivers/net/3c523.h,3086
#define _3c523_INCLUDE_2,24
#define SCP_DEFAULT_ADDRESS 24,597
struct scp_structscp_struct31,683
struct iscp_structiscp_struct45,1031
struct scb_structscb_struct56,1359
#define RUC_MASK	71,1920
#define RUC_NOP	72,1971
#define RUC_START	73,2013
#define RUC_RESUME	74,2053
#define RUC_SUSPEND	75,2109
#define RUC_ABORT	76,2153
#define CUC_MASK	78,2222
#define CUC_NOP	79,2272
#define CUC_START	80,2314
#define CUC_RESUME	81,2382
#define CUC_SUSPEND	82,2435
#define CUC_ABORT	83,2479
#define ACK_MASK	85,2547
#define ACK_CX	86,2598
#define ACK_FR	87,2648
#define ACK_CNA	88,2690
#define ACK_RNR	89,2734
#define STAT_MASK	94,2832
#define STAT_CX	95,2891
#define STAT_FR	96,2956
#define STAT_CNA	97,3016
#define STAT_RNR	98,3067
#define CU_STATUS	100,3118
#define CU_SUSPEND	101,3166
#define CU_ACTIVE	102,3213
#define RU_STATUS	104,3257
#define RU_SUSPEND	105,3304
#define RU_NOSPACE	106,3347
#define RU_READY	107,3393
struct rfd_structrfd_struct112,3475
#define RFD_LAST 124,3941
#define RFD_SUSP 125,4002
#define RFD_ERRMASK 126,4060
#define RFD_MATCHADD 127,4116
#define RFD_RNR 128,4193
struct rbd_struct rbd_struct133,4304
#define RBD_LAST	142,4613
#define RBD_USED	143,4655
#define RBD_MASK	144,4706
#define STAT_COMPL 149,4798
#define STAT_BUSY 150,4866
#define STAT_OK 151,4930
#define CMD_NOP	156,5019
#define CMD_IASETUP	157,5053
#define CMD_CONFIGURE	158,5116
#define CMD_MCSETUP	159,5169
#define CMD_XMIT	160,5219
#define CMD_TDR	161,5266
#define CMD_DUMP	162,5336
#define CMD_DIAGNOSE	163,5379
#define CMD_LAST	168,5461
#define CMD_SUSPEND	169,5525
#define CMD_INT	170,5583
struct nop_cmd_structnop_cmd_struct175,5673
struct iasetup_cmd_struct iasetup_cmd_struct185,5919
struct configure_cmd_structconfigure_cmd_struct196,6090
struct mcsetup_cmd_struct mcsetup_cmd_struct218,6976
struct transmit_cmd_struct transmit_cmd_struct230,7249
#define TCMD_ERRMASK 240,7563
#define TCMD_MAXCOLLMASK 241,7595
#define TCMD_MAXCOLL 242,7627
#define TCMD_HEARTBEAT 243,7659
#define TCMD_DEFERRED 244,7691
#define TCMD_UNDERRUN 245,7723
#define TCMD_LOSTCTS 246,7755
#define TCMD_NOCARRIER 247,7787
#define TCMD_LATECOLL 248,7819
struct tdr_cmd_structtdr_cmd_struct250,7852
#define TDR_LNK_OK	258,7987
#define TDR_XCVR_PRB	259,8046
#define TDR_ET_OPN	260,8112
#define TDR_ET_SRT	261,8173
#define TDR_TIMEMASK	262,8234
struct tbd_structtbd_struct267,8336
#define TBD_LAST 274,8530
#define	ELMC_SA	316,9549
#define ELMC_CTRL	317,9613
#define ELMC_REVISION	318,9665
#define ELMC_IO_EXTENT 319,9732
#define ELMC_STATUS_ENABLED	322,9815
#define ELMC_STATUS_CSR_SELECT	323,9848
#define ELMC_STATUS_MEMORY_SELECT	324,9884
#define ELMC_STATUS_DISABLE_THIN	325,9923
#define ELMC_STATUS_IRQ_SELECT	326,9961
#define ELMC_MCA_ID 330,10091
#define ELMC_CTRL_BS0	341,10519
#define ELMC_CTRL_BS1	342,10567
#define ELMC_CTRL_INTE	343,10615
#define ELMC_CTRL_INT	344,10682
#define ELMC_CTRL_LBK	346,10791
#define ELMC_CTRL_CA	347,10856
#define ELMC_CTRL_RST	348,10922
#define ELMC_NORMAL 353,11084

drivers/net/wavelan.p.h,1377
#define WAVELAN_P_H14,304
#define DEBUG_INTERRUPT_ERROR	324,12093
#define DEBUG_CONFIG_ERRORS	327,12245
#define DEBUG_TX_ERROR	330,12412
#define DEBUG_RX_ERROR	333,12573
#define DEBUG_IOCTL_ERROR	337,12791
#define DEBUG_BASIC_SHOW	338,12842
#define USE_PSA_CONFIG	347,13224
#define SET_PSA_CRC	348,13277
#define IGNORE_NORMAL_XMIT_ERRS	349,13337
#define MULTICAST_AVOID	354,13605
#define WIRELESS_SPY	358,13799
static const char	*version	365,14016
#define	WATCHDOG_JIFFIES	369,14133
#define	NELS(NELS372,14245
#define SIOCSIPQTHR	376,14363
#define SIOCGIPQTHR	377,14427
#define SIOCSIPLTHR	378,14494
#define SIOCGIPLTHR	379,14559
#define SIOCSIPHISTO	381,14625
#define SIOCGIPHISTO	382,14692
typedef struct device		device;device387,14847
typedef struct net_device_stats	en_stats;en_stats388,14878
typedef struct iw_statistics	iw_stats;iw_stats389,14920
typedef struct iw_quality	iw_qual;iw_qual390,14959
typedef struct iw_freq		iw_freq;iw_freq391,14994
typedef struct net_local	net_local;net_local392,15027
typedef struct timer_list	timer_list;timer_list393,15063
typedef u_char		mac_addr[mac_addr396,15120
struct net_localnet_local407,15511
static net_local *	wavelan_list	593,21587
static u_char	irqvals[599,21731
static unsigned short	iobase[610,21939
static int	io[626,22317
static int	irq[627,22352
static char	name[628,22388

drivers/net/myri_code.h,9251
static unsigned int lanai4_code_off 4,119
static unsigned char lanai4_code[5,189
static unsigned char lanai4_code[76256] __initdata 5,189
static unsigned int lanai4_data_off 4777,424455
static unsigned char lanai4_data[4778,424524
static unsigned char lanai4_data[20472] __initdata 4778,424524
#define MYRI_GenerateMapVersion 6064,538547
#define MYRI_MoreToGenerate 6065,538591
#define MYRI_GenerateMessage 6066,538635
#define MYRI_RelayMapVersion 6067,538679
#define MYRI_RelayStart 6068,538723
#define MYRI_RelayDirection 6069,538767
#define MYRI_RelayIndex 6070,538811
#define MYRI_RelayStop 6071,538855
#define MYRI_RelayMessage 6072,538899
#define MYRI_BroadcastRelayMessagesSent 6073,538943
#define MYRI_SendMultiplexGrabbed 6074,538990
#define MYRI_HostReceiveItem 6075,539034
#define MYRI_HostReceiveNumScatters 6076,539078
#define MYRI_HostReceiveScatterIndex 6077,539122
#define MYRI_HostReceiveScatterPointer 6078,539166
#define MYRI_HostReceiveScatterLength 6079,539212
#define MYRI_HostReceiveChecksum 6080,539257
#define MYRI_RouteNumFragments 6081,539301
#define MYRI_RouteFragment 6082,539345
#define MYRI_RouteStamp 6083,539389
#define MYRI_RoutesSoFar 6084,539433
#define MYRI_MapVersionChanged 6085,539477
#define MYRI_map_c 6086,539521
#define MYRI_pack_list 6087,539565
#define MYRI_pack_table 6088,539609
#define MYRI_msg2event 6089,539653
#define MYRI_VersionString 6090,539697
#define MYRI_SizeofChannel 6091,539741
#define MYRI_EndOfQueueSpace 6092,539785
#define MYRI_FreeCode 6093,539829
#define MYRI_FreeData 6094,539873
#define MYRI_Asserting 6095,539917
#define MYRI_Version 6096,539961
#define MYRI_Processor 6097,540005
#define MYRI_NetReceive 6098,540049
#define MYRI_NetReceiveBuffer 6099,540093
#define MYRI_MapLength 6100,540137
#define MYRI_MapSendAlignment 6101,540181
#define MYRI_HostReplyLength 6102,540225
#define MYRI_HostReplySendAlignment 6103,540269
#define MYRI_MapSendMessages 6104,540313
#define MYRI_bitmask 6105,540357
#define MYRI_HostSendFull 6106,540401
#define MYRI_HostReplies 6107,540445
#define MYRI_Interrupts 6108,540489
#define MYRI_NetReceiveDrops 6109,540533
#define MYRI_SendMultiplexDoneEvent 6110,540577
#define MYRI_bEvents 6111,540621
#define MYRI_bHostReceiveShortcuts 6112,540665
#define MYRI_the_map 6113,540709
#define MYRI_Channels 6114,540753
#define MYRI_bEventIndex 6115,540797
#define MYRI_NoBuffersChannel0 6116,540841
#define MYRI_bShakes 6117,540885
#define MYRI_MAPPER 6118,540929
#define MYRI_CORE_timeout_counter 6119,540973
#define MYRI_the_map_is_valid 6120,541017
#define MYRI_bBadScatters 6121,541061
#define MYRI_HostReceiveChannel 6122,541105
#define MYRI_send_space 6123,541149
#define MYRI_MapReceiveMessages 6124,541193
#define MYRI_wakeup_mask 6125,541237
#define MYRI_NetSendBuffer 6126,541281
#define MYRI_HostReceiveMulticast 6127,541325
#define MYRI_HostSendChannel 6128,541369
#define MYRI_NetReceiveDmaDone 6129,541413
#define MYRI_HostSendChecksum 6130,541457
#define MYRI_HostReceiveScatter 6131,541501
#define MYRI_compares 6132,541545
#define MYRI_NetSendQueue 6133,541589
#define MYRI_HostTable 6134,541633
#define MYRI_map_h 6135,541677
#define MYRI_HostSendBytes 6136,541721
#define MYRI_L3_end_loaded_memory 6137,541765
#define MYRI_NetSendBytes 6138,541809
#define MYRI_map_space 6139,541853
#define MYRI_MAP_ACK 6140,541897
#define MYRI_NetReceiveMisroutes 6141,541941
#define MYRI_HostReceiveBytes 6142,541985
#define MYRI_BroadcastRelayIdle 6143,542029
#define MYRI_HostReceiveIdle 6144,542073
#define MYRI_timing 6145,542117
#define MYRI_HostReceive 6146,542161
#define MYRI_routeHandleMessage 6147,542205
#define MYRI_Freses 6148,542249
#define MYRI_NextToPut 6149,542293
#define MYRI_HostSendIdle 6150,542337
#define MYRIedata 6151,542381
#define MYRI_SendingHostReply 6152,542425
#define MYRI_timing_period 6153,542469
#define MYRI_debug 6154,542513
#define MYRI_NetSendBusy 6155,542557
#define MYRI_routeInitialize 6156,542601
#define MYRI_HostReceiveQueue 6157,542645
#define MYRI_bWakes 6158,542689
#define MYRI_NetReceiveBadLengths 6159,542733
#define MYRI_NetReceiveQueue 6160,542777
#define MYRI_MapBuffer 6161,542821
#define MYRI_MapChecksum 6162,542865
#define MYRI_the_routes_are_valid 6163,542909
#define MYRI_MAPPER_probe_stamp 6164,542953
#define MYRI_memory 6165,542997
#define MYRI_Events 6166,543041
#define MYRI_switches 6167,543085
#define MYRI_Hosts 6168,543129
#define MYRI_HostReceiveGoingToBroadcast 6169,543173
#define MYRI_NetSendIdle 6170,543221
#define MYRI_host_reply_space 6171,543265
#define MYRI_HostReceiveWaitingToBroadcast 6172,543309
#define MYRI_bSetRoutes 6173,543359
#define MYRI_bSends 6174,543403
#define MYRI_BroadcastGenerateIdle 6175,543447
#define MYRI_WatchdogOff 6176,543491
#define MYRI_TIMER 6177,543535
#define MYRI_SendMultiplex 6178,543579
#define MYRI_HostReplyBuffer 6179,543623
#define MYRI_the_new_switch 6180,543667
#define MYRI_current_switch 6181,543711
#define MYRI_memcpy 6182,543755
#define MYRI_server 6183,543799
#define MYRI_WatchdogOn 6184,543843
#define MYRI_NetSendContinuing 6185,543887
#define MYRI_NetReceiveBadChannels 6186,543931
#define MYRI_SendMultiplexFreeMachine 6187,543975
#define MYRI_NetReceiveFlush 6188,544020
#define MYRI_NetSendBroadcasting 6189,544064
#define MYRI_looking_for_a_loopback 6190,544108
#define MYRI_HostSendGatherPointer 6191,544152
#define MYRI_HostSendItem 6192,544196
#define MYRI_MAP_REQ 6193,544240
#define MYRI_memory_free_list 6194,544284
#define MYRIend 6195,544328
#define MYRI_MapVersion 6196,544372
#define MYRI_client 6197,544416
#define MYRI_HostReceiveBroadcasting 6198,544460
#define MYRIetext 6199,544504
#define MYRI_NetSendMapBusy 6200,544548
#define MYRI_bRouteMessages 6201,544592
#define MYRI_DmaDirection 6202,544636
#define MYRI_SendMultiplexFreeEvent 6203,544680
#define MYRI_idle_mapper 6204,544724
#define MYRI_NetSend 6205,544768
#define MYRI_current_port 6206,544812
#define MYRI_HostConnectedSwitches 6207,544856
#define MYRI_try_loopback 6208,544900
#define MYRI_the_host_reply_message 6209,544944
#define MYRI_MAPPER_queue 6210,544988
#define MYRI_bHostSendShortcuts 6211,545032
#define MYRI_BroadcastGenerate 6212,545076
#define MYRI_DmaFreeEvent 6213,545120
#define MYRI_host_timeout_counter 6214,545164
#define MYRI_NetReceiveDma 6215,545208
#define MYRI_MAPPER_try_port 6216,545252
#define MYRI_bcopy 6217,545296
#define MYRI_queue_h 6218,545340
#define MYRI_bUpdates 6219,545384
#define MYRI_SendMultiplexMachine 6220,545428
#define MYRI_MAPPER_repeat 6221,545472
#define MYRI_the_return_port 6222,545516
#define MYRI_NetReceiveFull 6223,545560
#define MYRI_MyHostTableIndex 6224,545604
#define MYRI_CORE 6225,545648
#define MYRI_I_have_a_map 6226,545692
#define MYRI_bWaiting 6227,545736
#define MYRI_NetReceiveOverflows 6228,545780
#define MYRI_NumMachines 6229,545824
#define MYRI_MapMessagesSentCounter 6230,545868
#define MYRI_HostReceiveBuffer 6231,545912
#define MYRI_HostSendDma 6232,545956
#define MYRI_NextToGet 6233,546000
#define MYRI_HostReceiveDmaBusy 6234,546044
#define MYRI_bUpdateMessages 6235,546088
#define MYRI_try_the_switch 6236,546132
#define MYRI_BroadcastRelay 6237,546176
#define MYRI_the_msg 6238,546220
#define MYRI_bEventsRTC 6239,546264
#define MYRI_HostReceiveMessages 6240,546308
#define MYRI_CURRENT_MSG 6241,546352
#define MYRI_MAPPER_phase 6242,546396
#define MYRI_HostReceiveDma 6243,546440
#define MYRI_Watchdog 6244,546484
#define MYRI_HostSendEmpty 6245,546528
#define MYRI_abort 6246,546572
#define MYRI_SendMultiplexIdle 6247,546616
#define MYRI_looking_for_a_switch 6248,546660
#define MYRI_NetSendMessages 6249,546704
#define MYRI_updating 6250,546748
#define MYRI_BroadcastGenerateSending 6251,546792
#define MYRI_HostSendBuffer 6252,546837
#define MYRI_HostSendMessages 6253,546881
#define MYRI_BroadcastRelaySending 6254,546925
#define MYRI_HostSendDmaBusy 6255,546969
#define MYRI_BroadcastsPending 6256,547013
#define MYRI_NetSendMapWaiting 6257,547057
#define MYRI_NetReceiveBadTypes 6258,547101
#define MYRI_looking_for_hosts 6259,547145
#define MYRI_bBadHeader 6260,547189
#define MYRI_HostSendGatherIndex 6261,547233
#define MYRI_routeLookup 6262,547277
#define MYRI_NetReceiveMessages 6263,547321
#define MYRI_DmaInUse 6264,547365
#define MYRI_explores 6265,547409
#define MYRI_HostSend 6266,547453
#define MYRI_DmaResetSpin 6267,547497
#define MYRIstart 6268,547541
#define MYRI_RouteTable 6269,547585
#define MYRI_Machines 6270,547629
#define MYRI_try_the_host 6271,547673
#define MYRI_isr_record 6272,547717
#define MYRI_HostReceiveDrops 6273,547761
#define MYRI_HostReceiveLength 6274,547805
#define MYRI_timers 6275,547849
#define MYRI_NetSendWaiting 6276,547893
#define MYRI_NetSendDrops 6277,547937
#define MYRI_comparing_a_switch 6278,547981
#define MYRI_OldMapChecksum 6279,548025
#define MYRI_HostSendQueue 6280,548069
#define MYRI_MAPPER_host 6281,548113
#define MYRI_compare_switch 6282,548157
#define MYRI_main 6283,548201
#define MYRI_NetReceiveBadCrcs 6284,548245
#define MYRI_NetReceiveBytes 6285,548289

drivers/net/defxx.c,1331
static const char *version 201,9725
#define DYNAMIC_BUFFERS 228,10333
#define SKBUFF_RX_COPYBREAK 230,10360
#define NEW_SKB_SIZE 235,10515
static int		num_boards 280,12221
static int		already_probed 281,12293
static inline void dfx_port_write_byte(337,14302
static inline void dfx_port_read_byte(350,14462
static inline void dfx_port_write_long(363,14623
static inline void dfx_port_read_long(376,14784
__initfunc(449,17368
__initfunc(644,23613
__initfunc(739,26486
__initfunc(874,30025
__initfunc(978,32931
int dfx_adap_init(1200,39811
int dfx_open(1388,45189
int dfx_close(1480,47416
void dfx_int_pr_halt_id(1566,49218
void dfx_int_type_0_process(1674,52493
void dfx_int_common(1822,57018
void dfx_interrupt(1894,59057
struct net_device_stats *dfx_ctl_get_stats(2005,61841
void dfx_ctl_set_multicast_list(2193,73494
int dfx_ctl_set_mac_address(2311,77196
int dfx_ctl_update_cam(2402,79699
int dfx_ctl_update_filters(2488,81959
int dfx_hw_dma_cmd_req(2566,84212
int dfx_hw_port_ctrl_req(2683,87886
void dfx_hw_adap_reset(2767,90019
int dfx_hw_adap_state_rd(2816,90942
int dfx_hw_dma_uninit(2859,91931
void my_skb_align(2890,92499
void dfx_rcv_init(2932,93421
void dfx_rcv_queue_process(3029,96666
int dfx_xmt_queue_pkt(3202,101938
void dfx_xmt_done(3381,107652
void dfx_xmt_flush(3460,109806

drivers/net/myri_sbus.c,1758
static char *version 6,121
#define DET(DET62,1299
#define DET(DET64,1331
#define DIRQ(DIRQ68,1371
#define DIRQ(DIRQ70,1403
#define DTX(DTX74,1449
#define DTX(DTX76,1480
#define DRX(DRX80,1524
#define DRX(DRX82,1555
#define DHDR(DHDR86,1598
#define DHDR(DHDR88,1629
static struct myri_eth *root_myri_dev 92,1667
static inline void myri_reset_off(95,1721
static inline void myri_reset_on(101,1921
static inline void myri_disable_irq(107,2106
static inline void myri_enable_irq(114,2269
static inline void bang_the_chip(120,2415
static inline int myri_do_handshake(129,2601
static inline int myri_load_lanai(177,3562
static void myri_clean_rings(237,5006
static void myri_init_rings(260,5466
static int myri_init(289,6146
static void myri_is_not_so_happy(295,6250
static void dump_ehdr(300,6329
static void dump_ehdr_and_myripad(311,6768
static inline void myri_tx(326,7329
static unsigned short myri_type_trans(351,7990
static inline void myri_rx(391,9105
static void myri_interrupt(507,12066
static int myri_open(540,12941
static int myri_close(547,13081
static int myri_start_xmit(555,13217
static int myri_header(659,15687
static int myri_rebuild_header(707,17075
int myri_header_cache(742,17842
void myri_header_cache_update(764,18474
static int myri_change_mtu(769,18628
static struct net_device_stats *myri_get_stats(777,18814
#define CRC_POLYNOMIAL_BE 780,18940
#define CRC_POLYNOMIAL_LE 781,19011
static void myri_set_multicast(783,19086
static inline void set_boardid_from_idprom(790,19235
static inline void determine_reg_space_size(800,19562
static void dump_eeprom(825,20099
static inline int myri_ether_init(864,22303
__initfunc(1076,29121
init_module(1107,29712
cleanup_module(1114,29794

drivers/net/sunqe.c,1147
static char *version 9,303
static struct sunqec *root_qec_dev 49,1166
#define QEC_RESET_TRIES 52,1217
static inline int qec_global_reset(54,1246
#define MACE_RESET_RETRIES 72,1563
#define QE_RESET_RETRIES 73,1594
static inline int qe_stop(75,1626
static inline void qe_clean_rings(112,2322
static void qe_init_rings(131,2666
static void sun4c_qe_init_rings(166,3458
static int qe_init(190,4136
static int qe_is_bolixed(282,6978
static inline void qe_tx(433,10893
static inline void sun4c_qe_tx(456,11357
static inline void qe_rx(475,11835
static inline void sun4c_qe_rx(567,14272
static void qec_interrupt(623,15955
static void sun4c_qec_interrupt(663,16759
static int qe_open(703,17587
static int qe_close(715,17764
static int qe_start_xmit(726,17974
static int sun4c_qe_start_xmit(777,19117
static struct net_device_stats *qe_get_stats(826,20251
#define CRC_POLYNOMIAL_BE 833,20396
#define CRC_POLYNOMIAL_LE 834,20467
static void qe_set_multicast(836,20542
static inline void qec_init_once(903,22423
static inline int qec_ether_init(929,23199
__initfunc(1176,30474
init_module(1216,31350
cleanup_module(1223,31425

drivers/net/sunqe.h,7492
#define _SUNQE_H7,145
struct qe_globreg qe_globreg10,191
#define GLOB_CTRL_MMODE 19,605
#define GLOB_CTRL_BMODE 20,677
#define GLOB_CTRL_EPAR 21,749
#define GLOB_CTRL_ACNTRL 22,821
#define GLOB_CTRL_B64 23,893
#define GLOB_CTRL_B32 24,965
#define GLOB_CTRL_B16 25,1037
#define GLOB_CTRL_RESET 26,1109
#define GLOB_STAT_TX 28,1182
#define GLOB_STAT_RX 29,1254
#define GLOB_STAT_BM 30,1326
#define GLOB_STAT_ER 31,1398
#define GLOB_PSIZE_2048 33,1471
#define GLOB_PSIZE_4096 34,1543
#define GLOB_PSIZE_6144 35,1615
#define GLOB_PSIZE_8192 36,1687
#define GLOB_STAT_PER_QE(GLOB_STAT_PER_QE42,1923
struct qe_creg qe_creg45,2077
#define CREG_CTRL_RXOFF 62,3036
#define CREG_CTRL_RESET 63,3110
#define CREG_CTRL_TWAKEUP 64,3184
#define CREG_STAT_EDEFER 66,3259
#define CREG_STAT_CLOSS 67,3333
#define CREG_STAT_ERETRIES 68,3407
#define CREG_STAT_LCOLL 69,3481
#define CREG_STAT_FUFLOW 70,3555
#define CREG_STAT_JERROR 71,3629
#define CREG_STAT_BERROR 72,3703
#define CREG_STAT_TXIRQ 73,3777
#define CREG_STAT_CCOFLOW 74,3851
#define CREG_STAT_TXDERROR 75,3925
#define CREG_STAT_TXLERR 76,3999
#define CREG_STAT_TXPERR 77,4073
#define CREG_STAT_TXSERR 78,4147
#define CREG_STAT_RCCOFLOW 79,4221
#define CREG_STAT_RUOFLOW 80,4295
#define CREG_STAT_MCOFLOW 81,4369
#define CREG_STAT_RXFOFLOW 82,4443
#define CREG_STAT_RLCOLL 83,4517
#define CREG_STAT_FCOFLOW 84,4591
#define CREG_STAT_CECOFLOW 85,4665
#define CREG_STAT_RXIRQ 86,4739
#define CREG_STAT_RXDROP 87,4813
#define CREG_STAT_RXSMALL 88,4887
#define CREG_STAT_RXLERR 89,4961
#define CREG_STAT_RXPERR 90,5035
#define CREG_STAT_RXSERR 91,5109
#define CREG_STAT_ERRORS 93,5184
#define CREG_QMASK_COFLOW 102,5750
#define CREG_QMASK_TXDERROR 103,5824
#define CREG_QMASK_TXLERR 104,5898
#define CREG_QMASK_TXPERR 105,5972
#define CREG_QMASK_TXSERR 106,6046
#define CREG_QMASK_RXDROP 107,6120
#define CREG_QMASK_RXBERROR 108,6194
#define CREG_QMASK_RXLEERR 109,6268
#define CREG_QMASK_RXPERR 110,6342
#define CREG_QMASK_RXSERR 111,6416
#define CREG_MMASK_EDEFER 113,6491
#define CREG_MMASK_CLOSS 114,6565
#define CREG_MMASK_ERETRY 115,6639
#define CREG_MMASK_LCOLL 116,6713
#define CREG_MMASK_UFLOW 117,6787
#define CREG_MMASK_JABBER 118,6861
#define CREG_MMASK_BABBLE 119,6935
#define CREG_MMASK_OFLOW 120,7009
#define CREG_MMASK_RXCOLL 121,7083
#define CREG_MMASK_RPKT 122,7157
#define CREG_MMASK_MPKT 123,7231
#define CREG_PIPG_TENAB 125,7306
#define CREG_PIPG_MMODE 126,7380
#define CREG_PIPG_WMASK 127,7454
struct qe_mregs qe_mregs130,7574
#define MREGS_TXFCNTL_DRETRY 165,9868
#define MREGS_TXFCNTL_DFCS 166,9946
#define MREGS_TXFCNTL_AUTOPAD 167,10024
#define MREGS_TXFSTAT_VALID 169,10103
#define MREGS_TXFSTAT_UNDERFLOW 170,10181
#define MREGS_TXFSTAT_LCOLL 171,10259
#define MREGS_TXFSTAT_MRETRY 172,10337
#define MREGS_TXFSTAT_ORETRY 173,10415
#define MREGS_TXFSTAT_PDEFER 174,10493
#define MREGS_TXFSTAT_CLOSS 175,10571
#define MREGS_TXFSTAT_RERROR 176,10649
#define MREGS_TXRCNT_EDEFER 178,10728
#define MREGS_TXRCNT_CMASK 179,10806
#define MREGS_RXFCNTL_LOWLAT 181,10885
#define MREGS_RXFCNTL_AREJECT 182,10963
#define MREGS_RXFCNTL_AUTOSTRIP 183,11041
#define MREGS_RXFSTAT_OVERFLOW 185,11120
#define MREGS_RXFSTAT_LCOLL 186,11198
#define MREGS_RXFSTAT_FERROR 187,11276
#define MREGS_RXFSTAT_FCSERROR 188,11354
#define MREGS_RXFSTAT_RBCNT 189,11432
#define MREGS_FFCNT_RX 191,11511
#define MREGS_FFCNT_TX 192,11589
#define MREGS_IREG_JABBER 194,11668
#define MREGS_IREG_BABBLE 195,11746
#define MREGS_IREG_COLL 196,11824
#define MREGS_IREG_RCCO 197,11902
#define MREGS_IREG_RPKTCO 198,11980
#define MREGS_IREG_MPKTCO 199,12058
#define MREGS_IREG_RXIRQ 200,12136
#define MREGS_IREG_TXIRQ 201,12214
#define MREGS_IMASK_BABBLE 203,12293
#define MREGS_IMASK_COLL 204,12371
#define MREGS_IMASK_MPKTCO 205,12449
#define MREGS_IMASK_RXIRQ 206,12527
#define MREGS_IMASK_TXIRQ 207,12605
#define MREGS_POLL_TXVALID 209,12684
#define MREGS_POLL_TDTR 210,12762
#define MREGS_POLL_RDTR 211,12840
#define MREGS_BCONFIG_BSWAP 213,12919
#define MREGS_BCONFIG_4TS 214,12997
#define MREGS_BCONFIG_16TS 215,13075
#define MREGS_BCONFIG_64TS 216,13153
#define MREGS_BCONFIG_112TS 217,13231
#define MREGS_BCONFIG_RESET 218,13309
#define MREGS_FCONFIG_TXF8 220,13388
#define MREGS_FCONFIG_TXF32 221,13466
#define MREGS_FCONFIG_TXF16 222,13544
#define MREGS_FCONFIG_RXF64 223,13622
#define MREGS_FCONFIG_RXF32 224,13700
#define MREGS_FCONFIG_RXF16 225,13778
#define MREGS_FCONFIG_TFWU 226,13856
#define MREGS_FCONFIG_RFWU 227,13934
#define MREGS_FCONFIG_TBENAB 228,14012
#define MREGS_FCONFIG_RBENAB 229,14090
#define MREGS_MCONFIG_PROMISC 231,14169
#define MREGS_MCONFIG_TPDDISAB 232,14247
#define MREGS_MCONFIG_MBAENAB 233,14325
#define MREGS_MCONFIG_RPADISAB 234,14403
#define MREGS_MCONFIG_RBDISAB 235,14481
#define MREGS_MCONFIG_TXENAB 236,14559
#define MREGS_MCONFIG_RXENAB 237,14637
#define MREGS_PLSCONFIG_TXMS 239,14716
#define MREGS_PLSCONFIG_GPSI 240,14794
#define MREGS_PLSCONFIG_DAI 241,14872
#define MREGS_PLSCONFIG_TP 242,14950
#define MREGS_PLSCONFIG_AUI 243,15028
#define MREGS_PLSCONFIG_IOENAB 244,15106
#define MREGS_PHYCONFIG_LSTAT 246,15185
#define MREGS_PHYCONFIG_LTESTDIS 247,15263
#define MREGS_PHYCONFIG_RXPOLARITY 248,15341
#define MREGS_PHYCONFIG_APCDISAB 249,15419
#define MREGS_PHYCONFIG_LTENAB 250,15497
#define MREGS_PHYCONFIG_AUTO 251,15575
#define MREGS_PHYCONFIG_RWU 252,15653
#define MREGS_PHYCONFIG_AW 253,15731
#define MREGS_IACONFIG_ACHNGE 255,15810
#define MREGS_IACONFIG_PARESET 256,15888
#define MREGS_IACONFIG_LARESET 257,15966
#define MREGS_UTEST_RTRENAB 259,16045
#define MREGS_UTEST_RTRDISAB 260,16123
#define MREGS_UTEST_RPACCEPT 261,16201
#define MREGS_UTEST_FCOLL 262,16279
#define MREGS_UTEST_FCSENAB 263,16357
#define MREGS_UTEST_INTLOOPM 264,16435
#define MREGS_UTEST_INTLOOP 265,16513
#define MREGS_UTEST_EXTLOOP 266,16591
#define MREGS_UTEST_NOLOOP 267,16669
struct qe_rxd qe_rxd269,16748
#define RXD_OWN 274,16815
#define RXD_UPDATE 275,16869
#define RXD_LENGTH 276,16923
struct qe_txd qe_txd278,16978
#define TXD_OWN 283,17045
#define TXD_SOP 284,17099
#define TXD_EOP 285,17153
#define TXD_UPDATE 286,17207
#define TXD_LENGTH 287,17261
#define TX_RING_MAXSIZE 289,17316
#define RX_RING_MAXSIZE 290,17346
#define TX_RING_SIZE 292,17377
#define RX_RING_SIZE 293,17407
#define NEXT_RX(NEXT_RX295,17438
#define NEXT_TX(NEXT_TX296,17500
#define PREV_RX(PREV_RX297,17562
#define PREV_TX(PREV_TX298,17624
#define TX_BUFFS_AVAIL(TX_BUFFS_AVAIL300,17687
#define SUN4C_TX_BUFFS_AVAIL(SUN4C_TX_BUFFS_AVAIL306,17914
#define RX_COPY_THRESHOLD 312,18189
#define RX_BUF_ALLOC_SIZE 313,18220
struct qe_init_block qe_init_block315,18260
#define qib_offset(qib_offset320,18367
struct sunqec sunqec325,18485
#define SUN4C_PKT_BUF_SZ	334,18747
#define SUN4C_RX_BUFF_SIZE	335,18777
#define SUN4C_TX_BUFF_SIZE	336,18821
#define SUN4C_RX_RING_SIZE	338,18866
#define SUN4C_TX_RING_SIZE	339,18896
struct sunqe_buffers sunqe_buffers341,18927
#define qebuf_offset(qebuf_offset347,19116
#define SUN4C_NEXT_RX(SUN4C_NEXT_RX350,19224
#define SUN4C_NEXT_TX(SUN4C_NEXT_TX351,19292
#define SUN4C_PREV_RX(SUN4C_PREV_RX352,19360
#define SUN4C_PREV_TX(SUN4C_PREV_TX353,19428
struct sunqe sunqe355,19497
#define ALIGNED_RX_SKB_ADDR(ALIGNED_RX_SKB_ADDR378,20599
static inline struct sk_buff *qe_alloc_skb(381,20719

drivers/net/defxx.h,29664
#define _DEFXX_H_36,870
typedef u8	PI_UINT8;PI_UINT840,949
typedef u16	PI_UINT16;PI_UINT1641,970
typedef u32	PI_UINT32;PI_UINT3242,993
	} PI_CNTR;PI_CNTR50,1127
	} PI_LAN_ADDR;PI_LAN_ADDR56,1232
	} PI_STATION_ID;PI_STATION_ID62,1344
#define PI_ALIGN_K_DESC_BLK	67,1396
#define PI_ALIGN_K_CONS_BLK	68,1467
#define PI_ALIGN_K_CMD_REQ_BUFF 69,1539
#define PI_ALIGN_K_CMD_RSP_BUFF	70,1619
#define PI_ALIGN_K_UNSOL_BUFF	71,1699
#define PI_ALIGN_K_XMT_DATA_BUFF 72,1775
#define PI_ALIGN_K_RCV_DATA_BUFF 73,1852
#define PI_PHY_K_S	77,1958
#define PI_PHY_K_A	78,2006
#define PI_PHY_K_B	79,2054
#define PI_PHY_K_MAX	80,2102
#define PI_FMC_DESCR_V_SOP	84,2192
#define PI_FMC_DESCR_V_EOP	85,2225
#define PI_FMC_DESCR_V_FSC	86,2258
#define PI_FMC_DESCR_V_FSB_ERROR	87,2291
#define PI_FMC_DESCR_V_FSB_ADDR_RECOG	88,2328
#define PI_FMC_DESCR_V_FSB_ADDR_COPIED	89,2369
#define PI_FMC_DESCR_V_FSB	90,2411
#define PI_FMC_DESCR_V_RCC_FLUSH	91,2444
#define PI_FMC_DESCR_V_RCC_CRC	92,2481
#define PI_FMC_DESCR_V_RCC_RRR	93,2517
#define PI_FMC_DESCR_V_RCC_DD	94,2553
#define PI_FMC_DESCR_V_RCC_SS	95,2588
#define PI_FMC_DESCR_V_RCC	96,2623
#define PI_FMC_DESCR_V_LEN	97,2656
#define PI_FMC_DESCR_M_SOP	99,2689
#define PI_FMC_DESCR_M_EOP	100,2730
#define PI_FMC_DESCR_M_FSC	101,2771
#define PI_FMC_DESCR_M_FSB_ERROR	102,2812
#define PI_FMC_DESCR_M_FSB_ADDR_RECOG	103,2857
#define PI_FMC_DESCR_M_FSB_ADDR_COPIED	104,2906
#define PI_FMC_DESCR_M_FSB	105,2956
#define PI_FMC_DESCR_M_RCC_FLUSH	106,2997
#define PI_FMC_DESCR_M_RCC_CRC	107,3042
#define PI_FMC_DESCR_M_RCC_RRR	108,3086
#define PI_FMC_DESCR_M_RCC_DD	109,3130
#define PI_FMC_DESCR_M_RCC_SS	110,3173
#define PI_FMC_DESCR_M_RCC	111,3216
#define PI_FMC_DESCR_M_LEN	112,3257
#define PI_FMC_DESCR_K_RCC_FMC_INT_ERR	114,3299
#define PI_FMC_DESCR_K_RRR_SUCCESS	116,3346
#define PI_FMC_DESCR_K_RRR_SA_MATCH	117,3387
#define PI_FMC_DESCR_K_RRR_DA_MATCH	118,3429
#define PI_FMC_DESCR_K_RRR_FMC_ABORT	119,3471
#define PI_FMC_DESCR_K_RRR_LENGTH_BAD	120,3513
#define PI_FMC_DESCR_K_RRR_FRAGMENT	121,3556
#define PI_FMC_DESCR_K_RRR_FORMAT_ERR	122,3598
#define PI_FMC_DESCR_K_RRR_MAC_RESET	123,3641
#define PI_FMC_DESCR_K_DD_NO_MATCH	125,3684
#define PI_FMC_DESCR_K_DD_PROMISCUOUS	126,3724
#define PI_FMC_DESCR_K_DD_CAM_MATCH	127,3766
#define PI_FMC_DESCR_K_DD_LOCAL_MATCH	128,3807
#define PI_FMC_DESCR_K_SS_NO_MATCH	130,3850
#define PI_FMC_DESCR_K_SS_BRIDGE_MATCH	131,3890
#define PI_FMC_DESCR_K_SS_NOT_POSSIBLE	132,3933
#define PI_FMC_DESCR_K_SS_LOCAL_MATCH	133,3976
#define PI_CMD_REQ_K_SIZE_MAX	137,4055
#define PI_CMD_RSP_K_SIZE_MAX	138,4091
#define PI_UNSOL_K_SIZE_MAX	139,4127
#define PI_SMT_HOST_K_SIZE_MAX	140,4162
#define PI_RCV_DATA_K_SIZE_MAX	141,4215
#define PI_XMT_DATA_K_SIZE_MAX	142,4268
#define PI_STATE_K_RESET	146,4351
#define PI_STATE_K_UPGRADE	147,4381
#define PI_STATE_K_DMA_UNAVAIL	148,4415
#define PI_STATE_K_DMA_AVAIL	149,4450
#define PI_STATE_K_LINK_AVAIL	150,4483
#define PI_STATE_K_LINK_UNAVAIL	151,4517
#define PI_STATE_K_HALTED	152,4554
#define PI_STATE_K_RING_MEMBER	153,4588
#define PI_STATE_K_NUMBER	154,4623
#define PI_CMD_K_START	158,4693
#define PI_CMD_K_FILTERS_SET	159,4725
#define PI_CMD_K_FILTERS_GET	160,4761
#define PI_CMD_K_CHARS_SET	161,4797
#define PI_CMD_K_STATUS_CHARS_GET	162,4832
#define PI_CMD_K_CNTRS_GET	163,4872
#define PI_CMD_K_CNTRS_SET	164,4907
#define PI_CMD_K_ADDR_FILTER_SET	165,4942
#define PI_CMD_K_ADDR_FILTER_GET	166,4981
#define PI_CMD_K_ERROR_LOG_CLEAR	167,5020
#define PI_CMD_K_ERROR_LOG_GET	168,5059
#define PI_CMD_K_FDDI_MIB_GET	169,5097
#define PI_CMD_K_DEC_EXT_MIB_GET	170,5134
#define PI_CMD_K_DEVICE_SPECIFIC_GET	171,5173
#define PI_CMD_K_SNMP_SET	172,5215
#define PI_CMD_K_UNSOL_TEST	173,5249
#define PI_CMD_K_SMT_MIB_GET	174,5285
#define PI_CMD_K_SMT_MIB_SET	175,5321
#define PI_CMD_K_MAX	176,5357
#define PI_ITEM_K_EOL	180,5474
#define PI_ITEM_K_T_REQ	181,5533
#define PI_ITEM_K_TVX	182,5591
#define PI_ITEM_K_RESTRICTED_TOKEN	183,5646
#define PI_ITEM_K_LEM_THRESHOLD	184,5723
#define PI_ITEM_K_RING_PURGER	185,5793
#define PI_ITEM_K_CNTR_INTERVAL	186,5865
#define PI_ITEM_K_IND_GROUP_PROM	187,5927
#define PI_ITEM_K_GROUP_PROM	188,5991
#define PI_ITEM_K_BROADCAST	189,6052
#define PI_ITEM_K_SMT_PROM	190,6113
#define PI_ITEM_K_SMT_USER	191,6172
#define PI_ITEM_K_RESERVED	192,6232
#define PI_ITEM_K_IMPLEMENTOR	193,6292
#define PI_ITEM_K_LOOPBACK_MODE	194,6354
#define PI_ITEM_K_CONFIG_POLICY	195,6416
#define PI_ITEM_K_CON_POLICY	196,6483
#define PI_ITEM_K_T_NOTIFY	197,6550
#define PI_ITEM_K_STATION_ACTION	198,6609
#define PI_ITEM_K_MAC_PATHS_REQ	199,6676
#define PI_ITEM_K_MAC_ACTION	200,6747
#define PI_ITEM_K_CON_POLICIES	201,6806
#define PI_ITEM_K_PORT_PATHS_REQ	202,6876
#define PI_ITEM_K_MAC_LOOP_TIME	203,6945
#define PI_ITEM_K_TB_MAX	204,7012
#define PI_ITEM_K_LER_CUTOFF	205,7068
#define PI_ITEM_K_LER_ALARM	206,7130
#define PI_ITEM_K_PORT_ACTION	207,7191
#define PI_ITEM_K_FLUSH_TIME	208,7252
#define PI_ITEM_K_MAC_T_REQ	209,7311
#define PI_ITEM_K_EMAC_RING_PURGER	210,7369
#define PI_ITEM_K_EMAC_RTOKEN_TIMEOUT	211,7441
#define PI_ITEM_K_FDX_ENB_DIS	212,7518
#define PI_ITEM_K_MAX	213,7578
#define PI_K_FALSE	217,7677
#define PI_K_TRUE	218,7726
#define PI_SNMP_K_TRUE	220,7775
#define PI_SNMP_K_FALSE	221,7836
#define PI_FSTATE_K_BLOCK	223,7867
#define PI_FSTATE_K_PASS	224,7920
#define PI_RSP_K_SUCCESS	228,7986
#define PI_RSP_K_FAILURE	229,8019
#define PI_RSP_K_WARNING	230,8052
#define PI_RSP_K_LOOP_MODE_BAD	231,8085
#define PI_RSP_K_ITEM_CODE_BAD	232,8123
#define PI_RSP_K_TVX_BAD	233,8161
#define PI_RSP_K_TREQ_BAD	234,8194
#define PI_RSP_K_TOKEN_BAD	235,8228
#define PI_RSP_K_NO_EOL	236,8263
#define PI_RSP_K_FILTER_STATE_BAD	237,8296
#define PI_RSP_K_CMD_TYPE_BAD	238,8336
#define PI_RSP_K_ADAPTER_STATE_BAD	239,8373
#define PI_RSP_K_RING_PURGER_BAD	240,8414
#define PI_RSP_K_LEM_THRESHOLD_BAD	241,8453
#define PI_RSP_K_LOOP_NOT_SUPPORTED	242,8494
#define PI_RSP_K_FLUSH_TIME_BAD	243,8536
#define PI_RSP_K_NOT_IMPLEMENTED	244,8575
#define PI_RSP_K_CONFIG_POLICY_BAD	245,8614
#define PI_RSP_K_STATION_ACTION_BAD	246,8655
#define PI_RSP_K_MAC_ACTION_BAD	247,8697
#define PI_RSP_K_CON_POLICIES_BAD	248,8736
#define PI_RSP_K_MAC_LOOP_TIME_BAD	249,8776
#define PI_RSP_K_TB_MAX_BAD	250,8817
#define PI_RSP_K_LER_CUTOFF_BAD	251,8853
#define PI_RSP_K_LER_ALARM_BAD	252,8892
#define PI_RSP_K_MAC_PATHS_REQ_BAD	253,8930
#define PI_RSP_K_MAC_T_REQ_BAD	254,8971
#define PI_RSP_K_EMAC_RING_PURGER_BAD	255,9009
#define PI_RSP_K_EMAC_RTOKEN_TIME_BAD	256,9052
#define PI_RSP_K_NO_SUCH_ENTRY	257,9095
#define PI_RSP_K_T_NOTIFY_BAD	258,9133
#define PI_RSP_K_TR_MAX_EXP_BAD	259,9170
#define PI_RSP_K_MAC_FRM_ERR_THR_BAD	260,9209
#define PI_RSP_K_MAX_T_REQ_BAD	261,9251
#define PI_RSP_K_FDX_ENB_DIS_BAD	262,9289
#define PI_RSP_K_ITEM_INDEX_BAD	263,9328
#define PI_RSP_K_PORT_ACTION_BAD	264,9367
	} PI_ITEM_LIST;PI_ITEM_LIST272,9523
	} PI_RSP_HEADER;PI_RSP_HEADER279,9653
	} PI_CMD_START_REQ;PI_CMD_START_REQ287,9734
	} PI_CMD_START_RSP;PI_CMD_START_RSP294,9823
#define PI_CMD_FILTERS_SET_K_ITEMS_MAX 298,9872
	} PI_CMD_FILTERS_SET_REQ;PI_CMD_FILTERS_SET_REQ304,10042
	} PI_CMD_FILTERS_SET_RSP;PI_CMD_FILTERS_SET_RSP311,10142
	} PI_CMD_FILTERS_GET_REQ;PI_CMD_FILTERS_GET_REQ318,10240
	} PI_CMD_FILTERS_GET_RSP;PI_CMD_FILTERS_GET_RSP332,10518
#define PI_CMD_CHARS_SET_K_ITEMS_MAX 337,10572
	} PI_CMD_CHARS_SET_REQ;PI_CMD_CHARS_SET_REQ348,10831
	} PI_CMD_CHARS_SET_RSP;PI_CMD_CHARS_SET_RSP355,10927
#define PI_CMD_SNMP_SET_K_ITEMS_MAX 360,10978
	} PI_CMD_SNMP_SET_REQ;PI_CMD_SNMP_SET_REQ371,11239
	} PI_CMD_SNMP_SET_RSP;PI_CMD_SNMP_SET_RSP378,11333
#define PI_CMD_SMT_MIB_SET_K_ITEMS_MAX 383,11386
	} PI_CMD_SMT_MIB_SET_REQ;PI_CMD_SMT_MIB_SET_REQ394,11615
	} PI_CMD_SMT_MIB_SET_RSP;PI_CMD_SMT_MIB_SET_RSP401,11715
	} PI_CMD_SMT_MIB_GET_REQ;PI_CMD_SMT_MIB_GET_REQ408,11810
	} PI_CMD_SMT_MIB_GET_RSP;PI_CMD_SMT_MIB_GET_RSP505,14821
#define PI_GRP_K_SMT_STATION_ID	515,15152
#define PI_ITEM_K_SMT_STATION_ID	516,15193
#define PI_ITEM_K_SMT_OP_VERS_ID	517,15234
#define PI_ITEM_K_SMT_HI_VERS_ID	518,15275
#define PI_ITEM_K_SMT_LO_VERS_ID	519,15316
#define PI_ITEM_K_SMT_USER_DATA	520,15357
#define PI_ITEM_K_SMT_MIB_VERS_ID	521,15398
#define PI_GRP_K_SMT_STATION_CONFIG	523,15443
#define PI_ITEM_K_SMT_MAC_CT	524,15487
#define PI_ITEM_K_SMT_NON_MASTER_CT	525,15525
#define PI_ITEM_K_SMT_MASTER_CT	526,15569
#define PI_ITEM_K_SMT_AVAIL_PATHS	527,15610
#define PI_ITEM_K_SMT_CONFIG_CAPS	528,15652
#define PI_ITEM_K_SMT_CONFIG_POL	529,15694
#define PI_ITEM_K_SMT_CONN_POL	530,15735
#define PI_ITEM_K_SMT_T_NOTIFY	531,15775
#define PI_ITEM_K_SMT_STAT_POL	532,15815
#define PI_ITEM_K_SMT_TR_MAX_EXP	533,15855
#define PI_ITEM_K_SMT_PORT_INDEXES	534,15896
#define PI_ITEM_K_SMT_MAC_INDEXES	535,15939
#define PI_ITEM_K_SMT_BYPASS_PRESENT	536,15981
#define PI_GRP_K_SMT_STATUS	538,16026
#define PI_ITEM_K_SMT_ECM_STATE	539,16064
#define PI_ITEM_K_SMT_CF_STATE	540,16105
#define PI_ITEM_K_SMT_REM_DISC_FLAG	541,16146
#define PI_ITEM_K_SMT_STATION_STATUS	542,16190
#define PI_ITEM_K_SMT_PEER_WRAP_FLAG	543,16234
#define PI_GRP_K_SMT_MIB_OPERATION	545,16280
#define PI_ITEM_K_SMT_MSG_TIME_STAMP 546,16324
#define PI_ITEM_K_SMT_TRN_TIME_STAMP 547,16369
#define PI_ITEM_K_SMT_STATION_ACT	549,16415
#define PI_GRP_K_MAC_CAPABILITIES	551,16458
#define PI_ITEM_K_MAC_FRM_STAT_FUNC	552,16502
#define PI_ITEM_K_MAC_T_MAX_CAP	553,16546
#define PI_ITEM_K_MAC_TVX_CAP	554,16587
#define PI_GRP_K_MAC_CONFIG	556,16629
#define PI_ITEM_K_MAC_AVAIL_PATHS	557,16667
#define PI_ITEM_K_MAC_CURRENT_PATH	558,16711
#define PI_ITEM_K_MAC_UP_NBR	559,16755
#define PI_ITEM_K_MAC_DOWN_NBR	560,16793
#define PI_ITEM_K_MAC_OLD_UP_NBR	561,16833
#define PI_ITEM_K_MAC_OLD_DOWN_NBR	562,16875
#define PI_ITEM_K_MAC_DUP_ADDR_TEST	563,16919
#define PI_ITEM_K_MAC_REQ_PATHS	564,16963
#define PI_ITEM_K_MAC_DOWN_PORT_TYPE 565,17004
#define PI_ITEM_K_MAC_INDEX	566,17051
#define PI_GRP_K_MAC_ADDRESS	568,17090
#define PI_ITEM_K_MAC_SMT_ADDRESS	569,17128
#define PI_GRP_K_MAC_OPERATION	571,17171
#define PI_ITEM_K_MAC_TREQ	572,17211
#define PI_ITEM_K_MAC_TNEG	573,17248
#define PI_ITEM_K_MAC_TMAX	574,17285
#define PI_ITEM_K_MAC_TVX_VALUE	575,17322
#define PI_GRP_K_MAC_COUNTERS	577,17364
#define PI_ITEM_K_MAC_FRAME_CT	578,17403
#define PI_ITEM_K_MAC_COPIED_CT	579,17443
#define PI_ITEM_K_MAC_TRANSMIT_CT	580,17484
#define PI_ITEM_K_MAC_ERROR_CT	581,17526
#define PI_ITEM_K_MAC_LOST_CT	582,17566
#define PI_GRP_K_MAC_FRM_ERR_COND	584,17606
#define PI_ITEM_K_MAC_FRM_ERR_THR	585,17648
#define PI_ITEM_K_MAC_FRM_ERR_RAT	586,17690
#define PI_GRP_K_MAC_STATUS	588,17733
#define PI_ITEM_K_MAC_RMT_STATE	589,17771
#define PI_ITEM_K_MAC_DA_FLAG	590,17812
#define PI_ITEM_K_MAC_UNDA_FLAG	591,17851
#define PI_ITEM_K_MAC_FRM_ERR_FLAG	592,17892
#define PI_ITEM_K_MAC_MA_UNIT_AVAIL	593,17935
#define PI_ITEM_K_MAC_HW_PRESENT	594,17979
#define PI_ITEM_K_MAC_MA_UNIT_ENAB	595,18020
#define PI_GRP_K_PATH_CONFIG	597,18064
#define PI_ITEM_K_PATH_INDEX	598,18102
#define PI_ITEM_K_PATH_CONFIGURATION 599,18140
#define PI_ITEM_K_PATH_TVX_LB	600,18185
#define PI_ITEM_K_PATH_T_MAX_LB	601,18224
#define PI_ITEM_K_PATH_MAX_T_REQ	602,18265
#define PI_GRP_K_PORT_CONFIG	604,18307
#define PI_ITEM_K_PORT_MY_TYPE	605,18345
#define PI_ITEM_K_PORT_NBR_TYPE	606,18385
#define PI_ITEM_K_PORT_CONN_POLS	607,18426
#define PI_ITEM_K_PORT_MAC_INDICATED 608,18467
#define PI_ITEM_K_PORT_CURRENT_PATH	609,18513
#define PI_ITEM_K_PORT_REQ_PATHS	610,18557
#define PI_ITEM_K_PORT_MAC_PLACEMENT 611,18598
#define PI_ITEM_K_PORT_AVAIL_PATHS	612,18643
#define PI_ITEM_K_PORT_PMD_CLASS	613,18686
#define PI_ITEM_K_PORT_CONN_CAPS	614,18727
#define PI_ITEM_K_PORT_INDEX	615,18768
#define PI_GRP_K_PORT_OPERATION	617,18807
#define PI_ITEM_K_PORT_BS_FLAG	618,18848
#define PI_GRP_K_PORT_ERR_CNTRS	620,18890
#define PI_ITEM_K_PORT_LCT_FAIL_CT	621,18931
#define PI_GRP_K_PORT_LER	623,18976
#define PI_ITEM_K_PORT_LER_ESTIMATE	624,19014
#define PI_ITEM_K_PORT_LEM_REJ_CT	625,19058
#define PI_ITEM_K_PORT_LEM_CT	626,19100
#define PI_ITEM_K_PORT_LER_CUTOFF	627,19139
#define PI_ITEM_K_PORT_LER_ALARM	628,19181
#define PI_GRP_K_PORT_STATUS	630,19223
#define PI_ITEM_K_PORT_CONNECT_STATE	631,19261
#define PI_ITEM_K_PORT_PCM_STATE	632,19305
#define PI_ITEM_K_PORT_PC_WITHHOLD	633,19346
#define PI_ITEM_K_PORT_LER_FLAG	634,19389
#define PI_ITEM_K_PORT_HW_PRESENT	635,19430
#define PI_ITEM_K_PORT_ACT	637,19473
#define PI_CMD_ADDR_FILTER_K_SIZE 641,19542
	} PI_CMD_ADDR_FILTER_SET_REQ;PI_CMD_ADDR_FILTER_SET_REQ647,19668
	} PI_CMD_ADDR_FILTER_SET_RSP;PI_CMD_ADDR_FILTER_SET_RSP654,19777
	} PI_CMD_ADDR_FILTER_GET_REQ;PI_CMD_ADDR_FILTER_GET_REQ661,19879
	} PI_CMD_ADDR_FILTER_GET_RSP;PI_CMD_ADDR_FILTER_GET_RSP669,20035
	} PI_CMD_STATUS_CHARS_GET_REQ;PI_CMD_STATUS_CHARS_GET_REQ676,20139
	} PI_CMD_STATUS_CHARS_GET_RSP;PI_CMD_STATUS_CHARS_GET_RSP723,21448
	} PI_CMD_FDDI_MIB_GET_REQ;PI_CMD_FDDI_MIB_GET_REQ730,21549
	} PI_CMD_FDDI_MIB_GET_RSP;PI_CMD_FDDI_MIB_GET_RSP828,24578
	} PI_CMD_DEC_EXT_MIB_GET_REQ;PI_CMD_DEC_EXT_MIB_GET_REQ835,24678
	} PI_CMD_DEC_EXT_MIB_GET_RSP;PI_CMD_DEC_EXT_MIB_GET_RSP869,25494
	} PI_CNTR_BLK;PI_CNTR_BLK910,26671
	} PI_CMD_CNTRS_GET_REQ;PI_CMD_CNTRS_GET_REQ917,26756
	} PI_CMD_CNTRS_GET_RSP;PI_CMD_CNTRS_GET_RSP926,26911
	} PI_CMD_CNTRS_SET_REQ;PI_CMD_CNTRS_SET_REQ934,27028
	} PI_CMD_CNTRS_SET_RSP;PI_CMD_CNTRS_SET_RSP941,27128
	} PI_CMD_ERROR_LOG_CLEAR_REQ;PI_CMD_ERROR_LOG_CLEAR_REQ948,27225
	} PI_CMD_ERROR_LOG_CLEAR_RSP;PI_CMD_ERROR_LOG_CLEAR_RSP955,27333
#define PI_LOG_ENTRY_K_INDEX_MIN	959,27394
	} PI_CMD_ERROR_LOG_GET_REQ;PI_CMD_ERROR_LOG_GET_REQ965,27526
#define PI_K_LOG_FW_SIZE	969,27586
#define PI_K_LOG_DIAG_SIZE	970,27651
	} PI_LOG_ENTRY;PI_LOG_ENTRY981,27884
	} PI_CMD_ERROR_LOG_GET_RSP;PI_CMD_ERROR_LOG_GET_RSP992,28096
#define PI_LOG_EVENT_STATUS_K_VALID	998,28315
#define PI_LOG_EVENT_STATUS_K_INVALID	999,28381
#define PI_LOG_CALLER_ID_K_NONE	1000,28449
#define PI_LOG_CALLER_ID_K_SELFTEST	1001,28506
#define PI_LOG_CALLER_ID_K_MFG	1002,28580
#define PI_LOG_CALLER_ID_K_ONLINE	1003,28645
#define PI_LOG_CALLER_ID_K_HW	1004,28710
#define PI_LOG_CALLER_ID_K_FW	1005,28763
#define PI_LOG_CALLER_ID_K_CNS_HW	1006,28816
#define PI_LOG_CALLER_ID_K_CNS_FW	1007,28875
#define PI_LOG_CALLER_ID_K_CONSOLE	1008,28934
	} PI_DMA_CMD_REQ;PI_DMA_CMD_REQ1035,29803
	} PI_DMA_CMD_RSP;PI_DMA_CMD_RSP1057,30518
	} PI_DMA_CMD_BUFFER;PI_DMA_CMD_BUFFER1063,30606
	} PI_CONSUMER_BLOCK;PI_CONSUMER_BLOCK1080,31022
#define PI_CONS_M_RCV_INDEX	1082,31045
#define PI_CONS_M_XMT_INDEX	1083,31086
#define PI_CONS_V_RCV_INDEX	1084,31127
#define PI_CONS_V_XMT_INDEX	1085,31159
#define PI_CONS_BLK_K_XMT_RCV	1089,31228
#define PI_CONS_BLK_K_SMT_HOST	1090,31264
#define PI_CONS_BLK_K_UNSOL	1091,31301
#define PI_CONS_BLK_K_CMD_RSP	1092,31336
#define PI_CONS_BLK_K_CMD_REQ	1093,31372
#define PI_DESCR_BLK_K_RCV_DATA	1097,31446
#define PI_DESCR_BLK_K_XMT_DATA	1098,31486
#define PI_DESCR_BLK_K_SMT_HOST 1099,31526
#define PI_DESCR_BLK_K_UNSOL	1100,31566
#define PI_DESCR_BLK_K_CMD_RSP	1101,31603
#define PI_DESCR_BLK_K_CMD_REQ	1102,31642
	} PI_RCV_DESCR;PI_RCV_DESCR1115,32189
#define	PI_RCV_DESCR_M_SOP	1117,32207
#define PI_RCV_DESCR_M_SEG_LEN_LO 1118,32249
#define PI_RCV_DESCR_M_MBZ	1119,32296
#define PI_RCV_DESCR_M_SEG_LEN	1120,32339
#define PI_RCV_DESCR_M_SEG_LEN_HI	1121,32382
#define PI_RCV_DESCR_M_SEG_CNT	1122,32430
#define PI_RCV_DESCR_M_BUFF_HI	1123,32475
#define	PI_RCV_DESCR_V_SOP	1125,32521
#define PI_RCV_DESCR_V_SEG_LEN_LO 1126,32555
#define PI_RCV_DESCR_V_MBZ	1127,32593
#define PI_RCV_DESCR_V_SEG_LEN	1128,32627
#define PI_RCV_DESCR_V_SEG_LEN_HI 1129,32664
#define PI_RCV_DESCR_V_SEG_CNT	1130,32705
#define PI_RCV_DESCR_V_BUFF_HI	1131,32742
	} PI_XMT_DESCR;PI_XMT_DESCR1139,32904
#define	PI_XMT_DESCR_M_SOP	1141,32922
#define PI_XMT_DESCR_M_EOP	1142,32962
#define PI_XMT_DESCR_M_MBZ	1143,33002
#define PI_XMT_DESCR_M_SEG_LEN	1144,33043
#define PI_XMT_DESCR_M_BUFF_HI	1145,33086
#define	PI_XMT_DESCR_V_SOP	1147,33130
#define	PI_XMT_DESCR_V_EOP	1148,33162
#define PI_XMT_DESCR_V_MBZ	1149,33194
#define PI_XMT_DESCR_V_SEG_LEN	1150,33226
#define PI_XMT_DESCR_V_BUFF_HI	1151,33261
#define PI_RCV_DATA_K_NUM_ENTRIES	1155,33367
#define PI_XMT_DATA_K_NUM_ENTRIES	1156,33407
#define PI_SMT_HOST_K_NUM_ENTRIES	1157,33447
#define PI_UNSOL_K_NUM_ENTRIES	1158,33486
#define PI_CMD_RSP_K_NUM_ENTRIES	1159,33523
#define PI_CMD_REQ_K_NUM_ENTRIES	1160,33561
	} PI_DESCR_BLOCK;PI_DESCR_BLOCK1170,33920
#define PI_PDQ_K_REG_PORT_RESET	1174,34001
#define PI_PDQ_K_REG_HOST_DATA	1175,34046
#define PI_PDQ_K_REG_PORT_CTRL	1176,34090
#define PI_PDQ_K_REG_PORT_DATA_A	1177,34134
#define PI_PDQ_K_REG_PORT_DATA_B	1178,34179
#define PI_PDQ_K_REG_PORT_STATUS	1179,34224
#define PI_PDQ_K_REG_TYPE_0_STATUS 1180,34269
#define PI_PDQ_K_REG_HOST_INT_ENB	1181,34317
#define PI_PDQ_K_REG_TYPE_2_PROD_NOINT 1182,34365
#define PI_PDQ_K_REG_TYPE_2_PROD	1183,34416
#define PI_PDQ_K_REG_CMD_RSP_PROD	1184,34461
#define PI_PDQ_K_REG_CMD_REQ_PROD	1185,34507
#define PI_PDQ_K_REG_SMT_HOST_PROD 1186,34553
#define PI_PDQ_K_REG_UNSOL_PROD	1187,34602
#define PI_PCTRL_M_CMD_ERROR	1191,34714
#define PI_PCTRL_M_BLAST_FLASH	1192,34752
#define PI_PCTRL_M_HALT	1193,34792
#define PI_PCTRL_M_COPY_DATA	1194,34827
#define PI_PCTRL_M_ERROR_LOG_START	1195,34865
#define PI_PCTRL_M_ERROR_LOG_READ	1196,34908
#define PI_PCTRL_M_XMT_DATA_FLUSH_DONE	1197,34950
#define PI_PCTRL_M_INIT	1198,34996
#define PI_PCTRL_M_INIT_START	1199,35031
#define PI_PCTRL_M_CONS_BLOCK	1200,35073
#define PI_PCTRL_M_UNINIT	1201,35112
#define PI_PCTRL_M_RING_MEMBER	1202,35148
#define PI_PCTRL_M_MLA	1203,35188
#define PI_PCTRL_M_FW_REV_READ	1204,35224
#define PI_PCTRL_M_DEV_SPECIFIC	1205,35264
#define PI_PCTRL_M_SUB_CMD	1206,35305
#define PI_SUB_CMD_K_LINK_UNINIT	1210,35414
#define PI_SUB_CMD_K_BURST_SIZE_SET	1211,35455
#define PI_SUB_CMD_K_PDQ_REV_GET	1212,35499
#define PI_SUB_CMD_K_HW_REV_GET	1213,35540
#define PI_PDATA_B_DMA_BURST_SIZE_4	1217,35620
#define PI_PDATA_B_DMA_BURST_SIZE_8	1218,35692
#define PI_PDATA_B_DMA_BURST_SIZE_16	1219,35732
#define PI_PDATA_B_DMA_BURST_SIZE_32	1220,35771
#define PI_PDATA_B_DMA_BURST_SIZE_DEF	1221,35838
#define PI_PDATA_A_RESET_M_UPGRADE	1225,35937
#define PI_PDATA_A_RESET_M_SOFT_RESET	1226,35984
#define PI_PDATA_A_RESET_M_SKIP_ST	1227,36033
#define PI_PDATA_A_MLA_K_LO	1231,36144
#define PI_PDATA_A_MLA_K_HI	1232,36177
#define PI_PDATA_A_INIT_M_DESC_BLK_ADDR	1236,36252
#define PI_PDATA_A_INIT_M_RESERVED	1237,36306
#define PI_PDATA_A_INIT_M_BSWAP_DATA	1238,36356
#define PI_PDATA_A_INIT_M_BSWAP_LITERAL	1239,36408
#define PI_PDATA_A_INIT_V_DESC_BLK_ADDR	1241,36463
#define PI_PDATA_A_INIT_V_RESERVED	1242,36508
#define PI_PDATA_A_INIT_V_BSWAP_DATA	1243,36548
#define PI_PDATA_A_INIT_V_BSWAP_LITERAL	1244,36590
#define PI_RESET_M_ASSERT_RESET	1248,36662
#define PI_PSTATUS_V_RCV_DATA_PENDING	1252,36727
#define PI_PSTATUS_V_XMT_DATA_PENDING	1253,36768
#define PI_PSTATUS_V_SMT_HOST_PENDING	1254,36809
#define PI_PSTATUS_V_UNSOL_PENDING	1255,36850
#define PI_PSTATUS_V_CMD_RSP_PENDING	1256,36889
#define PI_PSTATUS_V_CMD_REQ_PENDING	1257,36929
#define PI_PSTATUS_V_TYPE_0_PENDING	1258,36969
#define PI_PSTATUS_V_RESERVED_1	1259,37009
#define PI_PSTATUS_V_RESERVED_2	1260,37046
#define PI_PSTATUS_V_STATE	1261,37083
#define PI_PSTATUS_V_HALT_ID	1262,37115
#define PI_PSTATUS_M_RCV_DATA_PENDING	1264,37149
#define PI_PSTATUS_M_XMT_DATA_PENDING	1265,37198
#define PI_PSTATUS_M_SMT_HOST_PENDING	1266,37247
#define PI_PSTATUS_M_UNSOL_PENDING	1267,37296
#define PI_PSTATUS_M_CMD_RSP_PENDING	1268,37343
#define PI_PSTATUS_M_CMD_REQ_PENDING	1269,37391
#define PI_PSTATUS_M_TYPE_0_PENDING	1270,37439
#define PI_PSTATUS_M_RESERVED_1	1271,37487
#define PI_PSTATUS_M_RESERVED_2	1272,37532
#define PI_PSTATUS_M_STATE	1273,37577
#define PI_PSTATUS_M_HALT_ID	1274,37618
#define PI_HALT_ID_K_SELFTEST_TIMEOUT	1279,37744
#define PI_HALT_ID_K_PARITY_ERROR	1280,37784
#define PI_HALT_ID_K_HOST_DIR_HALT	1281,37821
#define PI_HALT_ID_K_SW_FAULT	1282,37859
#define PI_HALT_ID_K_HW_FAULT	1283,37893
#define PI_HALT_ID_K_PC_TRACE	1284,37927
#define PI_HALT_ID_K_DMA_ERROR	1285,37961
#define PI_HALT_ID_K_IMAGE_CRC_ERROR	1286,38028
#define PI_HALT_ID_K_BUS_EXCEPTION	1287,38101
#define PI_HOST_INT_M_XMT_DATA_ENB	1291,38227
#define PI_HOST_INT_M_RCV_DATA_ENB	1292,38295
#define PI_HOST_INT_M_SMT_HOST_ENB	1293,38344
#define PI_HOST_INT_M_UNSOL_ENB	1294,38413
#define PI_HOST_INT_M_CMD_RSP_ENB	1295,38458
#define PI_HOST_INT_M_CMD_REQ_ENB	1296,38504
#define	PI_HOST_INT_M_TYPE_1_RESERVED	1297,38550
#define	PI_HOST_INT_M_TYPE_0_RESERVED	1298,38599
#define PI_HOST_INT_M_1MS	1299,38669
#define PI_HOST_INT_M_20MS	1300,38709
#define PI_HOST_INT_M_CSR_CMD_DONE	1301,38750
#define PI_HOST_INT_M_STATE_CHANGE	1302,38797
#define PI_HOST_INT_M_XMT_FLUSH	1303,38844
#define PI_HOST_INT_M_NXM	1304,38889
#define PI_HOST_INT_M_PM_PAR_ERR	1305,38929
#define PI_HOST_INT_M_BUS_PAR_ERR	1306,38974
#define PI_HOST_INT_V_XMT_DATA_ENB	1308,39021
#define PI_HOST_INT_V_RCV_DATA_ENB	1309,39083
#define PI_HOST_INT_V_SMT_HOST_ENB	1310,39124
#define PI_HOST_INT_V_UNSOL_ENB	1311,39187
#define PI_HOST_INT_V_CMD_RSP_ENB	1312,39224
#define PI_HOST_INT_V_CMD_REQ_ENB	1313,39262
#define	PI_HOST_INT_V_TYPE_1_RESERVED	1314,39300
#define	PI_HOST_INT_V_TYPE_0_RESERVED 1315,39341
#define PI_HOST_INT_V_1MS_ENB	1316,39406
#define PI_HOST_INT_V_20MS_ENB	1317,39440
#define PI_HOST_INT_V_CSR_CMD_DONE_ENB	1318,39475
#define PI_HOST_INT_V_STATE_CHANGE_ENB	1319,39516
#define PI_HOST_INT_V_XMT_FLUSH_ENB 1320,39557
#define PI_HOST_INT_V_NXM_ENB	1321,39596
#define PI_HOST_INT_V_PM_PAR_ERR_ENB	1322,39630
#define PI_HOST_INT_V_BUS_PAR_ERR_ENB	1323,39669
#define PI_HOST_INT_K_ACK_ALL_TYPE_0	1325,39710
#define PI_HOST_INT_K_DISABLE_ALL_INTS	1326,39758
#define PI_HOST_INT_K_ENABLE_ALL_INTS	1327,39808
#define PI_HOST_INT_K_ENABLE_DEF_INTS	1328,39857
#define PI_TYPE_0_STAT_M_1MS	1332,39947
#define PI_TYPE_0_STAT_M_20MS	1333,39989
#define PI_TYPE_0_STAT_M_CSR_CMD_DONE	1334,40032
#define PI_TYPE_0_STAT_M_STATE_CHANGE	1335,40081
#define PI_TYPE_0_STAT_M_XMT_FLUSH	1336,40130
#define PI_TYPE_0_STAT_M_NXM	1337,40177
#define PI_TYPE_0_STAT_M_PM_PAR_ERR	1338,40219
#define PI_TYPE_0_STAT_M_BUS_PAR_ERR	1339,40267
#define PI_TYPE_0_STAT_V_1MS	1341,40316
#define PI_TYPE_0_STAT_V_20MS	1342,40352
#define PI_TYPE_0_STAT_V_CSR_CMD_DONE	1343,40387
#define PI_TYPE_0_STAT_V_STATE_CHANGE	1344,40427
#define PI_TYPE_0_STAT_V_XMT_FLUSH	1345,40467
#define PI_TYPE_0_STAT_V_NXM	1346,40505
#define PI_TYPE_0_STAT_V_PM_PAR_ERR	1347,40538
#define PI_TYPE_0_STAT_V_BUS_PAR_ERR	1348,40577
	} PI_TYPE_1_PROD_REG;PI_TYPE_1_PROD_REG1366,40911
	} PI_TYPE_2_PROD_REG;PI_TYPE_2_PROD_REG1380,41133
	} PI_TYPE_1_CONSUMER;PI_TYPE_1_CONSUMER1394,41345
	} PI_TYPE_2_CONSUMER;PI_TYPE_2_CONSUMER1408,41565
	} PI_TYPE_1_PROD_REG;PI_TYPE_1_PROD_REG1424,41777
	} PI_TYPE_2_PROD_REG;PI_TYPE_2_PROD_REG1438,41996
	} PI_TYPE_1_CONSUMER;PI_TYPE_1_CONSUMER1452,42205
	} PI_TYPE_2_CONSUMER;PI_TYPE_2_CONSUMER1466,42422
#define PI_ESIC_K_BURST_HOLDOFF	1472,42526
#define PI_ESIC_K_SLOT_ID 1473,42566
#define PI_ESIC_K_SLOT_CNTRL	1474,42610
#define PI_ESIC_K_MEM_ADD_CMP_0 1475,42647
#define PI_ESIC_K_MEM_ADD_CMP_1 1476,42690
#define PI_ESIC_K_MEM_ADD_CMP_2 1477,42733
#define PI_ESIC_K_MEM_ADD_HI_CMP_0 1478,42776
#define PI_ESIC_K_MEM_ADD_HI_CMP_1 1479,42819
#define PI_ESIC_K_MEM_ADD_HI_CMP_2 1480,42862
#define PI_ESIC_K_MEM_ADD_MASK_0 1481,42905
#define PI_ESIC_K_MEM_ADD_MASK_1 1482,42949
#define PI_ESIC_K_MEM_ADD_MASK_2 1483,42993
#define PI_ESIC_K_MEM_ADD_LO_CMP_0 1484,43037
#define PI_ESIC_K_MEM_ADD_LO_CMP_1 1485,43080
#define PI_ESIC_K_MEM_ADD_LO_CMP_2 1486,43123
#define PI_ESIC_K_IO_CMP_0_0	1487,43166
#define PI_ESIC_K_IO_CMP_0_1	1488,43203
#define PI_ESIC_K_IO_CMP_1_0	1489,43240
#define PI_ESIC_K_IO_CMP_1_1	1490,43277
#define PI_ESIC_K_IO_CMP_2_0	1491,43314
#define PI_ESIC_K_IO_CMP_2_1	1492,43351
#define PI_ESIC_K_IO_CMP_3_0	1493,43388
#define PI_ESIC_K_IO_CMP_3_1	1494,43425
#define PI_ESIC_K_IO_ADD_MASK_0_0 1495,43462
#define PI_ESIC_K_IO_ADD_MASK_0_1 1496,43506
#define PI_ESIC_K_IO_ADD_MASK_1_0 1497,43550
#define PI_ESIC_K_IO_ADD_MASK_1_1 1498,43594
#define PI_ESIC_K_IO_ADD_MASK_2_0 1499,43638
#define PI_ESIC_K_IO_ADD_MASK_2_1 1500,43682
#define PI_ESIC_K_IO_ADD_MASK_3_0 1501,43726
#define PI_ESIC_K_IO_ADD_MASK_3_1 1502,43770
#define PI_ESIC_K_MOD_CONFIG_1	1503,43814
#define PI_ESIC_K_MOD_CONFIG_2	1504,43853
#define PI_ESIC_K_MOD_CONFIG_3	1505,43892
#define PI_ESIC_K_MOD_CONFIG_4	1506,43931
#define PI_ESIC_K_MOD_CONFIG_5 1507,43970
#define PI_ESIC_K_MOD_CONFIG_6	1508,44012
#define PI_ESIC_K_MOD_CONFIG_7	1509,44051
#define PI_ESIC_K_DIP_SWITCH 1510,44090
#define PI_ESIC_K_IO_CONFIG_STAT_0 1511,44134
#define PI_ESIC_K_IO_CONFIG_STAT_1 1512,44178
#define PI_ESIC_K_DMA_CONFIG 1513,44222
#define PI_ESIC_K_INPUT_PORT 1514,44266
#define PI_ESIC_K_OUTPUT_PORT 1515,44310
#define PI_ESIC_K_FUNCTION_CNTRL	1516,44354
#define PI_ESIC_K_CSR_IO_LEN	1517,44394
#define PI_ESIC_K_FUNCTION_CNTRL_IO_ENB	1521,44560
#define PI_SLOT_CNTRL_M_RESET	1525,44659
#define PI_SLOT_CNTRL_M_ERROR	1526,44718
#define PI_SLOT_CNTRL_M_ENB	1527,44777
#define PI_BURST_HOLDOFF_M_HOLDOFF	1531,44890
#define PI_BURST_HOLDOFF_M_RESERVED	1532,44930
#define PI_BURST_HOLDOFF_M_MEM_MAP	1533,44971
#define PI_BURST_HOLDOFF_V_HOLDOFF	1535,45012
#define PI_BURST_HOLDOFF_V_RESERVED	1536,45049
#define PI_BURST_HOLDOFF_V_MEM_MAP	1537,45087
#define PI_IO_CMP_V_SLOT	1545,45283
#define PI_CONFIG_STAT_0_M_PEND	1549,45391
#define PI_CONFIG_STAT_0_M_RES_1	1550,45430
#define PI_CONFIG_STAT_0_M_IREQ_OUT	1551,45469
#define PI_CONFIG_STAT_0_M_IREQ_IN	1552,45511
#define PI_CONFIG_STAT_0_M_INT_ENB	1553,45552
#define PI_CONFIG_STAT_0_M_RES_0	1554,45593
#define PI_CONFIG_STAT_0_M_IRQ	1555,45632
#define PI_CONFIG_STAT_0_V_PEND	1557,45671
#define PI_CONFIG_STAT_0_V_RES_1	1558,45707
#define PI_CONFIG_STAT_0_V_IREQ_OUT	1559,45743
#define PI_CONFIG_STAT_0_V_IREQ_IN	1560,45782
#define PI_CONFIG_STAT_0_V_INT_ENB	1561,45820
#define PI_CONFIG_STAT_0_V_RES_0	1562,45858
#define PI_CONFIG_STAT_0_V_IRQ	1563,45894
#define PI_CONFIG_STAT_0_IRQ_K_9	1565,45930
#define PI_CONFIG_STAT_0_IRQ_K_10	1566,45966
#define PI_CONFIG_STAT_0_IRQ_K_11	1567,46003
#define PI_CONFIG_STAT_0_IRQ_K_15	1568,46040
#define DEFEA_PRODUCT_ID	1572,46143
#define DEFEA_PROD_ID_1	1573,46211
#define DEFEA_PROD_ID_2	1574,46277
#define DEFEA_PROD_ID_3	1575,46343
#define PFI_K_LAT_TIMER_DEF	1583,46599
#define PFI_K_LAT_TIMER_MIN	1584,46669
#define PFI_K_CSR_MEM_LEN	1585,46739
#define PFI_K_CSR_IO_LEN	1586,46788
#define PFI_K_PKT_MEM_LEN	1587,46836
#define PFI_K_REG_RESERVED_0	1591,46957
#define PFI_K_REG_RESERVED_1	1592,46999
#define PFI_K_REG_MODE_CTRL	1593,47041
#define PFI_K_REG_STATUS	1594,47083
#define PFI_K_REG_FIFO_WRITE	1595,47122
#define PFI_K_REG_FIFO_READ	1596,47164
#define PFI_MODE_M_RESERVED	1600,47250
#define PFI_MODE_M_TGT_ABORT_ENB	1601,47292
#define PFI_MODE_M_PDQ_INT_ENB	1602,47337
#define PFI_MODE_M_PFI_INT_ENB	1603,47381
#define PFI_MODE_M_DMA_ENB	1604,47425
#define PFI_MODE_V_RESERVED	1606,47467
#define PFI_MODE_V_TGT_ABORT_ENB	1607,47500
#define PFI_MODE_V_PDQ_INT_ENB	1608,47536
#define PFI_MODE_V_PFI_INT_ENB	1609,47571
#define PFI_MODE_V_DMA_ENB	1610,47606
#define PFI_MODE_K_ALL_DISABLE	1612,47639
#define PFI_STATUS_M_RESERVED	1616,47721
#define PFI_STATUS_M_PFI_ERROR	1617,47764
#define PFI_STATUS_M_PDQ_INT	1618,47848
#define PFI_STATUS_M_PDQ_DMA_ABORT	1619,47890
#define PFI_STATUS_M_FIFO_FULL	1620,47937
#define PFI_STATUS_M_FIFO_EMPTY	1621,47981
#define PFI_STATUS_M_DMA_IN_PROGRESS 1622,48026
#define PFI_STATUS_V_RESERVED	1624,48075
#define PFI_STATUS_V_PFI_ERROR	1625,48109
#define PFI_STATUS_V_PDQ_INT	1626,48186
#define PFI_STATUS_V_PDQ_DMA_ABORT	1627,48219
#define PFI_STATUS_V_FIFO_FULL	1628,48257
#define PFI_STATUS_V_FIFO_EMPTY	1629,48292
#define PFI_STATUS_V_DMA_IN_PROGRESS 1630,48328
#define DFX_MAX_EISA_SLOTS	1632,48368
#define DFX_MAX_NUM_BOARDS	1633,48444
#define DFX_BUS_TYPE_PCI	1635,48520
#define DFX_BUS_TYPE_EISA	1636,48593
#define DFX_FC_PRH2_PRH1_PRH0	1638,48669
#define DFX_PRH0_BYTE	1639,48749
#define DFX_PRH1_BYTE	1640,48814
#define DFX_PRH2_BYTE	1641,48879
#define DFX_K_SUCCESS	1645,48989
#define DFX_K_FAILURE	1646,49041
#define DFX_K_OUTSTATE	1647,49090
#define DFX_K_HW_TIMEOUT	1648,49147
#define RCV_BUFS_MIN	1652,49263
#define RCV_BUFS_MAX	1653,49334
#define RCV_BUFS_DEF	1654,49406
#define RCV_BUFF_K_DESCR	1658,49573
#define RCV_BUFF_K_PADDING	1659,49634
#define RCV_BUFF_K_FC	1660,49689
#define RCV_BUFF_K_DA	1661,49746
#define RCV_BUFF_K_SA	1662,49809
#define RCV_BUFF_K_DATA	1663,49868
#define XMT_BUFF_K_FC	1667,50023
#define XMT_BUFF_K_DA	1668,50080
#define XMT_BUFF_K_SA	1669,50143
#define XMT_BUFF_K_DATA	1670,50201
#define ALIGN(ALIGN1677,50384
#define IN_RANGE(IN_RANGE1681,50511
#define DBG_printk(DBG_printk1686,50667
#define DBG_printk(DBG_printk1688,50717
#define DFX_MASK_INTERRUPTS	1693,50810
#define DFX_UNMASK_INTERRUPTS	1694,50841
	} XMT_DRIVER_DESCR;XMT_DRIVER_DESCR1701,50998
typedef struct DFX_board_tagDFX_board_tag1703,51020
	} DFX_board_t;DFX_board_t1780,54233

drivers/net/myri_sbus.h,2540
#define _MYRI_SBUS_H7,154
struct lanai_regs lanai_regs9,176
#define ISTAT_DEBUG	57,2454
#define ISTAT_HOST	58,2485
#define ISTAT_LAN7	59,2515
#define ISTAT_LAN6	60,2545
#define ISTAT_LAN5	61,2575
#define ISTAT_LAN4	62,2605
#define ISTAT_LAN3	63,2635
#define ISTAT_LAN2	64,2665
#define ISTAT_LAN1	65,2695
#define ISTAT_LAN0	66,2725
#define ISTAT_WRDY	67,2755
#define ISTAT_HRDY	68,2785
#define ISTAT_SRDY	69,2815
#define ISTAT_LINK	70,2845
#define ISTAT_FRES	71,2875
#define ISTAT_NRES	72,2905
#define ISTAT_WAKE	73,2935
#define ISTAT_OB2	74,2965
#define ISTAT_OB1	75,2994
#define ISTAT_TAIL	76,3023
#define ISTAT_WDOG	77,3053
#define ISTAT_TIME	78,3083
#define ISTAT_DMA	79,3113
#define ISTAT_SEND	80,3142
#define ISTAT_BUF	81,3172
#define ISTAT_RECV	82,3201
#define ISTAT_BRDY	83,3231
struct myri_regs myri_regs85,3262
#define SHMEM_IMASK_RX	98,3629
#define SHMEM_IMASK_TX	99,3664
#define KERNEL_CHANNEL	102,3736
struct myri_eeprom myri_eeprom105,3808
#define BUS_TYPE_SBUS	122,4230
#define CPUVERS_2_3	125,4284
#define CPUVERS_3_0	126,4312
#define CPUVERS_3_1	127,4340
#define CPUVERS_3_2	128,4368
#define CPUVERS_4_0	129,4396
#define CPUVERS_4_1	130,4424
#define CPUVERS_4_2	131,4452
#define CPUVERS_5_0	132,4480
struct myri_control myri_control134,4509
#define CONTROL_ROFF	140,4638
#define CONTROL_RON	141,4685
#define CONTROL_EIRQ	142,4730
#define CONTROL_DIRQ	143,4779
#define CONTROL_WON	144,4829
#define MYRI_SCATTER_ENTRIES	146,4877
#define MYRI_GATHER_ENTRIES	147,4908
struct myri_sglist myri_sglist149,4940
struct myri_rxd myri_rxd154,5004
struct myri_txd myri_txd161,5235
#define MYRINET_MTU 171,5642
#define RX_ALLOC_SIZE 172,5674
#define MYRI_PAD_LEN 173,5706
#define RX_COPY_THRESHOLD 174,5735
#define TX_RING_MAXSIZE 179,5861
#define RX_RING_MAXSIZE 180,5891
#define TX_RING_SIZE 182,5922
#define RX_RING_SIZE 183,5952
static __inline__ int NEXT_RX(186,5997
static __inline__ int PREV_RX(193,6091
#define NEXT_TX(NEXT_TX200,6185
#define PREV_TX(PREV_TX201,6241
#define TX_BUFFS_AVAIL(TX_BUFFS_AVAIL203,6298
struct sendq sendq208,6428
struct recvq recvq216,6575
#define MYRI_MLIST_SIZE 224,6726
struct mclist mclist226,6753
struct myri_channel myri_channel237,6956
#define STATE_WFH	251,7489
#define STATE_WFN	252,7535
#define STATE_READY	253,7580
struct myri_shmem myri_shmem255,7619
struct myri_eth myri_eth267,8098
#define ALIGNED_RX_SKB_ADDR(ALIGNED_RX_SKB_ADDR296,9596
static inline struct sk_buff *myri_alloc_skb(298,9715

drivers/net/lapbether.c,1147
static char bcast_addr[46,1260
static struct packet_type lapbeth_packet_type 51,1483
static struct notifier_block lapbeth_dev_notifier 59,1609
#define MAXLAPBDEV 65,1694
static struct lapbethdev lapbethdev67,1718
} *lapbeth_devices 73,1978
static __inline__ struct device *lapbeth_get_ether_dev(82,2140
static __inline__ struct device *lapbeth_get_x25_dev(94,2401
static __inline__ int dev_is_ethdev(105,2656
static int lapbeth_check_devices(117,2919
static int lapbeth_rcv(157,3661
static void lapbeth_data_indication(188,4357
static int lapbeth_xmit(207,4752
static void lapbeth_data_transmit(253,5766
static void lapbeth_connected(278,6228
static void lapbeth_disconnected(300,6676
static struct net_device_stats *lapbeth_get_stats(325,7148
static int lapbeth_set_mac_address(337,7351
static int lapbeth_ioctl(346,7545
static int lapbeth_open(354,7670
static int lapbeth_close(387,8586
static int lapbeth_dev_init(405,8903
static int lapbeth_new_device(415,9077
static int lapbeth_device_event(491,10641
int lapbeth_init(525,11396
EXPORT_NO_SYMBOLS;545,11781
int init_module(550,11926
void cleanup_module(555,11977

drivers/net/atari_bionet.c,998
#define MAX_POLL_TIME	80,3391
static char *version 82,3417
#define NET_DEBUG 123,4365
unsigned int bionet_debug 128,4470
static unsigned int bionet_min_poll_time 131,4542
struct net_local net_local136,4646
static struct nic_pkt_s nic_pkt_s142,4799
} *nic_packet;147,4947
unsigned char *phys_nic_packet;148,4962
static struct timer_list bionet_timer 161,5406
#define STRAM_ADDR(STRAM_ADDR163,5482
#define NODE_ADR 168,5638
#define C_READ 170,5661
#define C_WRITE 171,5678
#define C_GETEA 172,5699
#define C_SETCR 173,5720
sendcmd(176,5753
set_status(192,6118
get_status(200,6267
bionet_intr(226,6775
get_frame(232,6854
hardware_send_packet(281,7904
__initfunc(327,8956
bionet_open(407,11125
bionet_send_packet(433,11640
bionet_poll_rx(500,13505
bionet_tick(601,16486
bionet_close(617,16906
static struct net_device_stats *net_get_stats(639,17349
static char bio_name[648,17512
static struct device bio_dev 649,17538
init_module(658,17713
cleanup_module(671,17919

drivers/net/ltpc.c,1854
static int debug=197,7950
#define DEBUG_VERBOSE 198,7970
#define DEBUG_UPPER 199,7994
#define DEBUG_LOWER 200,8016
static int io=202,8039
static int irq=203,8056
static int dma=204,8074
static inline int __get_order(250,9061
static unsigned long dma_mem_alloc(263,9315
static unsigned char *ltdmabuf;271,9498
static unsigned char *ltdmacbuf;272,9530
struct ltpc_privateltpc_private276,9615
struct xmitQel xmitQel284,9735
static struct xmitQel *xmQhd=298,10001
static void enQ(300,10049
static struct xmitQel *deQ(318,10339
static struct xmitQel qels[345,10816
static unsigned char mailbox[348,10889
static unsigned char mboxinuse[349,10923
static int wait_timeout(351,10996
static int getmbox(369,11377
static void handlefc(386,11631
static void handlefd(410,12135
static void handlewrite(432,12584
static void handleread(460,13215
static void handlecommand(483,13705
static unsigned char rescbuf[504,14254
static unsigned char resdbuf[505,14306
static int QInIdle=507,14340
static void idle(513,14492
static int do_write(668,17702
static int do_read(692,18202
static struct timer_list ltpc_timer;718,18773
static int ltpc_open(723,18943
static int ltpc_close(731,19041
static int read_30 739,19140
static int set_30 746,19287
static int sendup_buffer 756,19493
static void ltpc_interrupt(826,21074
static int ltpc_ioctl(855,21663
static void set_multicast_list(900,22626
static int ltpc_hard_header 906,22777
static int ltpc_init(915,23018
static int ltpc_poll_counter 946,23747
static void ltpc_poll(948,23782
static int ltpc_xmit(973,24196
static struct net_device_stats *ltpc_get_stats(1013,25128
__initfunc(1021,25324
__initfunc(1091,26788
__initfunc(1253,30492
static char dev_name[1282,30951
static struct device dev_ltpc 1284,30977
int init_module(1295,31176
void cleanup_module(1318,31649

drivers/net/es3210.c,1370
static const char *version 48,1677
#define ES_START_PG	76,2534
#define ES_STOP_PG	77,2593
#define ES_IO_EXTENT	79,2652
#define ES_ID_PORT	80,2717
#define ES_SA_PROM	81,2774
#define ES_RESET_PORT	82,2828
#define ES_NIC_OFFSET	83,2892
#define ES_ADDR0	85,2954
#define ES_ADDR1	86,3005
#define ES_ADDR2	87,3027
#define ES_EISA_ID1	95,3343
#define ES_EISA_ID2	96,3395
#define ES_CFG1	98,3448
#define ES_CFG2	99,3513
#define ES_CFG3	100,3536
#define ES_CFG4	101,3559
#define ES_CFG5	102,3582
#define ES_CFG6	103,3605
#define ES_D_PROBE	111,3838
#define ES_D_RX_PKT	112,3862
#define ES_D_TX_PKT	113,3887
#define ED_D_IRQ	114,3912
#define ES_DEBUG	116,3935
static unsigned char lo_irq_map[118,3955
static unsigned char lo_irq_map[] __initdata 118,3955
static unsigned char hi_irq_map[119,4026
static unsigned char hi_irq_map[] __initdata 119,4026
__initfunc(127,4301
__initfunc(154,4947
static void es_reset_8390(287,8673
es_get_8390_hdr(321,9699
static void es_block_input(334,10207
static void es_block_output(351,10762
static int es_open(360,11039
static int es_close(369,11131
#define MAX_ES_CARDS	383,11315
#define NAMELEN	384,11382
static char namelist[385,11440
static struct device dev_es3210[386,11495
static int io[395,11650
static int irq[396,11688
static int mem[397,11728
init_module(404,11946
cleanup_module(432,12676

drivers/net/atari_pamsnet.c,2472
#define MAX_POLL_TIME	75,3173
static char *version 77,3199
#define NET_DEBUG 119,4154
unsigned int pamsnet_debug 124,4260
static unsigned int pamsnet_min_poll_time 127,4334
struct net_local net_local132,4439
static struct nic_pkt_s nic_pkt_s138,4592
} *nic_packet 140,4668
unsigned char *phys_nic_packet;141,4687
typedef unsigned char HADDR[HADDR143,4720
static struct timer_list pamsnet_timer 171,5890
#define STRAM_ADDR(STRAM_ADDR173,5968
} DMAHWADDR;DMAHWADDR180,6115
enum {UNKNOWN1=230,8407
enum {UNKNOWN1=3, READPKT=230,8407
enum {UNKNOWN1=3, READPKT=8, UNKNOWN2,230,8407
enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=230,8407
enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=230,8407
enum {UNKNOWN1=3, READPKT=8, UNKNOWN2, WRITEPKT=10, INQUIRY=18, START,230,8407
      NUMPKTS=231,8478
      NUMPKTS=22, UNKNOWN3,231,8478
      NUMPKTS=22, UNKNOWN3, UNKNOWN4,231,8478
      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5,231,8478
      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT,231,8478
      NUMPKTS=22, UNKNOWN3, UNKNOWN4, UNKNOWN5, DESELECT, STOP}231,8478
#define READSECTOR 233,8544
#define WRITESECTOR 234,8572
u_char *inquire8=236,8602
#define DMALOW 238,8644
#define DMAMID 239,8675
#define DMAHIGH 240,8706
#define DACCESS 241,8737
#define MFP_GPIP 243,8781
#define INT 247,8843
#define DELAY 248,8881
#define WRITEMODE(WRITEMODE249,8929
#define WRITEBOTH(WRITEBOTH254,9073
#define READ 262,9286
#define WRITE 263,9312
#define DMA_FDC 265,9339
#define DMA_ACSI 266,9365
#define DMA_DISABLE 268,9392
#define SEC_COUNT 270,9419
#define DMA_WINDOW 271,9445
#define REG_ACSI 273,9472
#define REG_FDC 274,9498
#define A1 276,9525
#define TIMEOUTCMD 280,9577
#define TIMEOUTDMA 281,9619
#define COMMAND_DELAY 282,9658
unsigned rw;284,9701
int lance_target 285,9714
int if_up 286,9737
setup_dma 301,10106
send_first 323,10812
send_1_5 344,11210
get_status 367,11642
calc_received 377,11826
start 390,12140
stop 399,12301
testpkt(421,12730
inquiry 437,13035
*read_hw_addr(474,13980
pamsnet_intr(497,14514
receivepkt 508,14687
sendpkt 533,15243
__initfunc(564,16029
pamsnet_open(664,18665
pamsnet_send_packet(694,19250
pamsnet_poll_rx(741,20333
pamsnet_tick(815,22243
pamsnet_close(831,22646
static struct net_device_stats *net_get_stats(858,23156
static char devicename[867,23319
static struct device pam_dev 868,23355
init_module(877,23533
cleanup_module(890,23745

drivers/net/smc-mca.c,720
#define START_PG 60,2083
#define ULTRA_CMDREG 62,2146
#define ULTRA_RESET 63,2213
#define ULTRA_MEMENB 64,2277
#define ULTRA_NIC_OFFSET 65,2337
#define ULTRA_IO_EXTENT 66,2411
#define EN0_ERWCNT 67,2438
__initfunc(70,2505
static int ultramca_open(194,5559
static void ultramca_reset_8390(221,6215
static void ultramca_get_8390_hdr(241,6816
static void ultramca_block_input(256,7320
static void ultramca_block_output(276,7898
static int ultramca_close_card(284,8130
#define MAX_ULTRAMCA_CARDS 310,8665
#define NAMELEN 311,8740
static char namelist[312,8803
static struct device dev_ultra[314,8865
static int io[324,9051
static int irq[325,9095
int init_module(333,9410
void cleanup_module(365,10187

drivers/net/smc-mca.h,110
} addr_table[8,118
#define MEM_MASK 27,396
} mem_table[32,506
#define IRQ_MASK 51,943
} irq_table[54,995

drivers/net/eepro100.c,4658
static const char *version 23,902
static int congenb 29,1166
static int txfifo 30,1239
static int rxfifo 31,1309
static int txdmacount 33,1454
static int rxdmacount 34,1483
static int rx_copybreak 38,1631
static int max_interrupt_work 41,1732
static int multicast_filter_limit 44,1847
#define RUN_AT(RUN_AT83,2877
#define dev_free_skb(dev_free_skb85,2912
#define SPEEDO3_TOTAL_SIZE 89,3060
int speedo_debug 91,3093
#define TX_RING_SIZE	227,9653
#define RX_RING_SIZE	228,9713
#define PKT_BUF_SZ	230,9802
#define TX_TIMEOUT 233,9893
static inline void wait_for_cmd_done(237,10023
enum speedo_offsets speedo_offsets250,10345
	SCBStatus 251,10367
	SCBStatus = 0, SCBCmd 251,10367
	SCBPointer 252,10437
	SCBPort 253,10488
	SCBflash 254,10541
	SCBflash = 12, SCBeeprom 254,10541
	SCBCtrlMDI 255,10612
	SCBEarlyRx 256,10661
enum commands commands259,10772
	CmdNOp 260,10788
	CmdNOp = 0, CmdIASetup 260,10788
	CmdNOp = 0, CmdIASetup = 1, CmdConfigure 260,10788
	CmdNOp = 0, CmdIASetup = 1, CmdConfigure = 2, CmdMulticastList 260,10788
	CmdTx 261,10857
	CmdTx = 4, CmdTDR 261,10857
	CmdTx = 4, CmdTDR = 5, CmdDump 261,10857
	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose 261,10857
	CmdSuspend 262,10911
	CmdSuspend = 0x4000,262,10911
	CmdIntr 263,10966
	CmdIntr = 0x2000,263,10966
	CmdTxFlex 264,11021
	CmdTxFlex = 0x0008,264,11021
#define	 CU_START	268,11163
#define	 CU_RESUME	269,11189
#define	 CU_STATSADDR	270,11216
#define	 CU_SHOWSTATS	271,11245
#define	 CU_CMD_BASE	272,11306
#define	 CU_DUMPSTATS	273,11380
#define	 RX_START	275,11448
#define	 RX_RESUME	276,11473
#define	 RX_ABORT	277,11499
#define	 RX_ADDR_LOAD	278,11524
#define	 RX_RESUMENR	279,11553
#define INT_MASK	280,11581
#define DRVR_INT	281,11605
struct descriptor descriptor284,11719
struct RxFD RxFD292,11950
enum RxFD_bits RxFD_bits301,12160
	RxComplete=302,12177
	RxComplete=0x8000,302,12177
	RxComplete=0x8000, RxOK=302,12177
	RxComplete=0x8000, RxOK=0x2000,302,12177
	RxErrCRC=303,12210
	RxErrCRC=0x0800,303,12210
	RxErrCRC=0x0800, RxErrAlign=303,12210
	RxErrCRC=0x0800, RxErrAlign=0x0400,303,12210
	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=303,12210
	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=0x0200,303,12210
	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=0x0200, RxErrSymbol=303,12210
	RxErrCRC=0x0800, RxErrAlign=0x0400, RxErrTooBig=0x0200, RxErrSymbol=0x0010,303,12210
	RxEth2Type=304,12287
	RxEth2Type=0x0020,304,12287
	RxEth2Type=0x0020, RxNoMatch=304,12287
	RxEth2Type=0x0020, RxNoMatch=0x0004,304,12287
	RxEth2Type=0x0020, RxNoMatch=0x0004, RxNoIAMatch=304,12287
	RxEth2Type=0x0020, RxNoMatch=0x0004, RxNoIAMatch=0x0002,304,12287
	StatusComplete=305,12345
	StatusComplete=0x8000,305,12345
struct TxFD TxFD308,12373
struct speedo_stats speedo_stats321,12959
struct speedo_private speedo_private341,13328
const char i82557_config_cmd[376,15133
const char i82558_config_cmd[381,15346
static const char *phys[388,15600
enum phy_chips phy_chips393,15829
enum phy_chips { NonSuchPhy=393,15829
enum phy_chips { NonSuchPhy=0, I82553AB,393,15829
enum phy_chips { NonSuchPhy=0, I82553AB, I82553C,393,15829
enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503,393,15829
enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840,393,15829
enum phy_chips { NonSuchPhy=0, I82553AB, I82553C, I82503, DP83840, S80C240,393,15829
					 S80C24,394,15905
					 S80C24, I82555,394,15905
					 S80C24, I82555, DP83840A=394,15905
static const char is_mii[395,15943
static int full_duplex[419,17045
static int options[420,17106
static int debug 422,17177
static int mii_ctrl[428,17350
static struct device *root_speedo_dev 433,17537
int eepro100_init(435,17584
static void speedo_found1(495,19361
#define EE_SHIFT_CLK	667,25133
#define EE_CS	668,25185
#define EE_DATA_WRITE	669,25232
#define EE_WRITE_0	670,25286
#define EE_WRITE_1	671,25311
#define EE_DATA_READ	672,25336
#define EE_ENB	673,25390
#define eeprom_delay(eeprom_delay677,25527
#define EE_WRITE_CMD	680,25631
#define EE_READ_CMD	681,25668
#define EE_ERASE_CMD	682,25705
static int read_eeprom(684,25743
static int mdio_read(717,26560
static int mdio_write(730,26962
speedo_open(746,27400
static void speedo_timer(876,31368
speedo_init_rx_ring(900,32181
static void speedo_tx_timeout(938,33320
speedo_start_xmit(976,34603
static void speedo_interrupt(1049,37038
speedo_rx(1161,40127
speedo_close(1272,43726
speedo_get_stats(1350,45989
static int speedo_ioctl(1376,46982
set_rx_mode(1409,48200
init_module(1584,53770
cleanup_module(1599,54009
int eepro100_probe(1613,54419

drivers/net/cs89x0.h,10276
#define PP_ChipID 17,695
#define PP_ISAIOB 21,858
#define PP_CS8900_ISAINT 22,906
#define PP_CS8920_ISAINT 23,966
#define PP_CS8900_ISADMA 24,1026
#define PP_CS8920_ISADMA 25,1085
#define PP_ISASOF 26,1144
#define PP_DmaFrameCnt 27,1191
#define PP_DmaByteCnt 28,1248
#define PP_CS8900_ISAMemB 29,1303
#define PP_CS8920_ISAMemB 30,1355
#define PP_ISABootBase 32,1396
#define PP_ISABootMask 33,1449
#define PP_EECMD 36,1542
#define PP_EEData 37,1605
#define PP_DebugReg 38,1665
#define PP_RxCFG 40,1715
#define PP_RxCTL 41,1761
#define PP_TxCFG 42,1818
#define PP_TxCMD 43,1875
#define PP_BufCFG 44,1933
#define PP_LineCTL 45,1992
#define PP_SelfCTL 46,2046
#define PP_BusCTL 47,2101
#define PP_TestCTL 48,2158
#define PP_AutoNegCTL 49,2205
#define PP_ISQ 51,2264
#define PP_RxEvent 52,2311
#define PP_TxEvent 53,2362
#define PP_BufEvent 54,2413
#define PP_RxMiss 55,2466
#define PP_TxCol 56,2517
#define PP_LineST 57,2574
#define PP_SelfST 58,2626
#define PP_BusST 59,2678
#define PP_TDR 60,2721
#define PP_AutoNegST 61,2777
#define PP_TxCommand 62,2828
#define PP_TxLength 63,2874
#define PP_LAF 64,2918
#define PP_IA 65,2959
#define PP_RxStatus 67,3015
#define PP_RxLength 68,3072
#define PP_RxFrame 69,3130
#define PP_TxFrame 70,3185
#define DEFAULTIOBASE 74,3399
#define FIRST_IO 75,3428
#define LAST_IO 76,3484
#define ADD_MASK 77,3545
#define ADD_SIG 78,3614
#define CHIP_EISA_ID_SIG 80,3668
#define EISA_ID_SIG 83,3777
#define PART_NO_SIG 84,3815
#define MONGOOSE_BIT 85,3853
#define EISA_ID_SIG 87,3898
#define PART_NO_SIG 88,3982
#define MONGOOSE_BIT 89,4063
#define PRODUCT_ID_ADD 92,4151
#define REG_TYPE_MASK 95,4261
#define ERSE_WR_ENBL 98,4314
#define ERSE_WR_DISABLE 99,4342
#define RX_BUF_CFG 102,4432
#define RX_CONTROL 103,4458
#define TX_CFG 104,4484
#define TX_COMMAND 105,4506
#define BUF_CFG 106,4532
#define LINE_CONTROL 107,4555
#define SELF_CONTROL 108,4583
#define BUS_CONTROL 109,4611
#define TEST_CONTROL 110,4638
#define RX_EVENT 113,4724
#define TX_EVENT 114,4748
#define BUF_EVENT 115,4772
#define RX_MISS_COUNT 116,4797
#define TX_COL_COUNT 117,4826
#define LINE_STATUS 118,4854
#define SELF_STATUS 119,4881
#define BUS_STATUS 120,4908
#define TDR 121,4934
#define SKIP_1 124,5042
#define RX_STREAM_ENBL 125,5064
#define RX_OK_ENBL 126,5094
#define RX_DMA_ONLY 127,5120
#define AUTO_RX_DMA 128,5147
#define BUFFER_CRC 129,5174
#define RX_CRC_ERROR_ENBL 130,5200
#define RX_RUNT_ENBL 131,5233
#define RX_EXTRA_DATA_ENBL 132,5261
#define RX_IA_HASH_ACCEPT 135,5357
#define RX_PROM_ACCEPT 136,5390
#define RX_OK_ACCEPT 137,5420
#define RX_MULTCAST_ACCEPT 138,5448
#define RX_IA_ACCEPT 139,5482
#define RX_BROADCAST_ACCEPT 140,5510
#define RX_BAD_CRC_ACCEPT 141,5545
#define RX_RUNT_ACCEPT 142,5578
#define RX_EXTRA_DATA_ACCEPT 143,5608
#define RX_ALL_ACCEPT 144,5644
#define DEF_RX_ACCEPT 146,5817
#define TX_LOST_CRS_ENBL 149,5975
#define TX_SQE_ERROR_ENBL 150,6007
#define TX_OK_ENBL 151,6040
#define TX_LATE_COL_ENBL 152,6066
#define TX_JBR_ENBL 153,6098
#define TX_ANY_COL_ENBL 154,6125
#define TX_16_COL_ENBL 155,6156
#define TX_START_4_BYTES 158,6248
#define TX_START_64_BYTES 159,6280
#define TX_START_128_BYTES 160,6313
#define TX_START_ALL_BYTES 161,6347
#define TX_FORCE 162,6381
#define TX_ONE_COL 163,6405
#define TX_TWO_PART_DEFF_DISABLE 164,6431
#define TX_NO_CRC 165,6471
#define TX_RUNT 166,6496
#define GENERATE_SW_INTERRUPT 169,6602
#define RX_DMA_ENBL 170,6639
#define READY_FOR_TX_ENBL 171,6666
#define TX_UNDERRUN_ENBL 172,6699
#define RX_MISS_ENBL 173,6731
#define RX_128_BYTE_ENBL 174,6759
#define TX_COL_COUNT_OVRFLOW_ENBL 175,6791
#define RX_MISS_COUNT_OVRFLOW_ENBL 176,6832
#define RX_DEST_MATCH_ENBL 177,6874
#define SERIAL_RX_ON 180,6969
#define SERIAL_TX_ON 181,6997
#define AUI_ONLY 182,7025
#define AUTO_AUI_10BASET 183,7049
#define MODIFIED_BACKOFF 184,7081
#define NO_AUTO_POLARITY 185,7113
#define TWO_PART_DEFDIS 186,7145
#define LOW_RX_SQUELCH 187,7176
#define POWER_ON_RESET 190,7276
#define SW_STOP 191,7306
#define SLEEP_ON 192,7329
#define AUTO_WAKEUP 193,7353
#define HCB0_ENBL 194,7380
#define HCB1_ENBL 195,7405
#define HCB0 196,7430
#define HCB1 197,7450
#define RESET_RX_DMA 200,7533
#define MEMORY_ON 201,7561
#define DMA_BURST_MODE 202,7586
#define IO_CHANNEL_READY_ON 203,7616
#define RX_DMA_SIZE_64K 204,7651
#define ENABLE_IRQ 205,7682
#define LINK_OFF 208,7769
#define ENDEC_LOOPBACK 209,7793
#define AUI_LOOPBACK 210,7823
#define BACKOFF_OFF 211,7851
#define FAST_TEST 212,7878
#define RX_IA_HASHED 215,7964
#define RX_DRIBBLE 216,7992
#define RX_OK 217,8018
#define RX_HASHED 218,8039
#define RX_IA 219,8064
#define RX_BROADCAST 220,8085
#define RX_CRC_ERROR 221,8113
#define RX_RUNT 222,8141
#define RX_EXTRA_DATA 223,8164
#define HASH_INDEX_MASK 225,8194
#define TX_LOST_CRS 228,8288
#define TX_SQE_ERROR 229,8315
#define TX_OK 230,8343
#define TX_LATE_COL 231,8364
#define TX_JBR 232,8391
#define TX_16_COL 233,8413
#define TX_SEND_OK_BITS 234,8438
#define TX_COL_COUNT_MASK 235,8482
#define SW_INTERRUPT 238,8576
#define RX_DMA 239,8604
#define READY_FOR_TX 240,8626
#define TX_UNDERRUN 241,8654
#define RX_MISS 242,8681
#define RX_128_BYTE 243,8704
#define TX_COL_OVRFLW 244,8731
#define RX_MISS_OVRFLW 245,8760
#define RX_DEST_MATCH 246,8790
#define LINK_OK 249,8886
#define AUI_ON 250,8909
#define TENBASET_ON 251,8931
#define POLARITY_OK 252,8958
#define CRS_OK 253,8985
#define ACTIVE_33V 256,9062
#define INIT_DONE 257,9088
#define SI_BUSY 258,9113
#define EEPROM_PRESENT 259,9136
#define EEPROM_OK 260,9166
#define EL_PRESENT 261,9191
#define EE_SIZE_64 262,9217
#define TX_BID_ERROR 265,9291
#define READY_FOR_TX_NOW 266,9319
#define RE_NEG_NOW 269,9414
#define ALLOW_FDX 270,9440
#define AUTO_NEG_ENABLE 271,9465
#define NLP_ENABLE 272,9496
#define FORCE_FDX 273,9522
#define AUTO_NEG_BITS 274,9547
#define AUTO_NEG_MASK 275,9608
#define AUTO_NEG_BUSY 278,9751
#define FLP_LINK 279,9780
#define FLP_LINK_GOOD 280,9804
#define LINK_FAULT 281,9833
#define HDX_ACTIVE 282,9859
#define FDX_ACTIVE 283,9885
#define ISQ_RECEIVER_EVENT 286,9967
#define ISQ_TRANSMITTER_EVENT 287,9999
#define ISQ_BUFFER_EVENT 288,10034
#define ISQ_RX_MISS_EVENT 289,10064
#define ISQ_TX_COL_EVENT 290,10095
#define ISQ_EVENT_MASK 292,10126
#define ISQ_HIST 293,10200
#define AUTOINCREMENT 294,10249
#define TXRXBUFSIZE 296,10327
#define RXDMABUFSIZE 297,10354
#define RXDMASIZE 298,10382
#define TXRX_LENGTH_MASK 299,10407
#define RCV_WITH_RXON	302,10463
#define RCV_COUNTS	303,10513
#define RCV_PONG	304,10561
#define RCV_DONG	305,10609
#define RCV_POLLING	306,10656
#define RCV_ISQ	307,10701
#define RCV_AUTO_DMA	308,10743
#define RCV_DMA	309,10792
#define RCV_DMA_ALL	310,10837
#define RCV_FIXED_DATA	311,10886
#define RCV_IO	312,10939
#define RCV_MEMORY	313,10985
#define RAM_SIZE	315,11034
#define PKT_START 316,11100
#define RX_FRAME_PORT	318,11158
#define TX_FRAME_PORT 319,11187
#define TX_CMD_PORT	320,11223
#define TX_NOW	321,11250
#define TX_AFTER_381	322,11319
#define TX_AFTER_ALL	323,11393
#define TX_LEN_PORT	324,11467
#define ISQ_PORT	325,11494
#define ADD_PORT	326,11518
#define DATA_PORT	327,11542
#define EEPROM_WRITE_EN	329,11568
#define EEPROM_WRITE_DIS	330,11600
#define EEPROM_WRITE_CMD	331,11632
#define EEPROM_READ_CMD	332,11664
#define RBUF_EVENT_LOW	336,11789
#define RBUF_EVENT_HIGH	337,11870
#define RBUF_LEN_LOW	338,11953
#define RBUF_LEN_HI	339,12020
#define RBUF_HEAD_LEN	340,12087
#define CHIP_READ 342,12143
#define DMA_READ 343,12226
#define BIOS_START_SEG 349,12400
#define BIOS_OFFSET_INC 350,12431
#define BIOS_START_SEG 352,12468
#define BIOS_OFFSET_INC 353,12499
#define BIOS_LAST_OFFSET 356,12538
#define ISA_CNF_OFFSET 359,12629
#define TX_CTL_OFFSET 360,12656
#define AUTO_NEG_CNF_OFFSET 361,12720
#define EE_FORCE_FDX 367,13022
#define EE_NLP_ENABLE 368,13051
#define EE_AUTO_NEG_ENABLE 369,13080
#define EE_ALLOW_FDX 370,13114
#define EE_AUTO_NEG_CNF_MASK 371,13142
#define IMM_BIT 373,13233
#define ADAPTER_CNF_OFFSET 375,13287
#define A_CNF_10B_T 376,13340
#define A_CNF_AUI 377,13367
#define A_CNF_10B_2 378,13392
#define A_CNF_MEDIA_TYPE 379,13419
#define A_CNF_MEDIA_AUTO 380,13451
#define A_CNF_MEDIA_10B_T 381,13483
#define A_CNF_MEDIA_AUI 382,13516
#define A_CNF_MEDIA_10B_2 383,13547
#define A_CNF_DC_DC_POLARITY 384,13580
#define A_CNF_NO_AUTO_POLARITY 385,13616
#define A_CNF_LOW_RX_SQUELCH 386,13654
#define A_CNF_EXTND_10B_2 387,13690
#define PACKET_PAGE_OFFSET 389,13724
#define INT_NO_MASK 392,13826
#define DMA_NO_MASK 393,13853
#define ISA_DMA_SIZE 394,13880
#define ISA_AUTO_RxDMA 395,13908
#define ISA_RxDMA 396,13938
#define DMA_BURST 397,13963
#define STREAM_TRANSFER 398,13988
#define ANY_ISA_DMA 399,14019
#define DMA_BASE 402,14101
#define DMA_BASE_2 403,14154
#define DMA_STAT 405,14210
#define DMA_MASK 406,14274
#define DMA_MODE 407,14336
#define DMA_RESETFF 408,14398
#define DMA_DISABLE 411,14487
#define DMA_ENABLE 412,14541
#define DMA_RX_MODE 414,14658
#define DMA_TX_MODE 416,14747
#define DMA_SIZE 418,14773
#define CS8900 420,14833
#define CS8920 421,14855
#define CS8920M 422,14880
#define REVISON_BITS 423,14906
#define EEVER_NUMBER 424,14934
#define CHKSUM_LEN 425,14960
#define CHKSUM_VAL 426,14984
#define START_EEPROM_DATA 427,15010
#define IRQ_MAP_EEPROM_DATA 428,15087
#define IRQ_MAP_LEN 429,15164
#define PNP_IRQ_FRMT 430,15234
#define CS8900_IRQ_MAP 431,15295
#define CS8920_NO_INTS 433,15355
#define PNP_ADD_PORT 435,15423
#define PNP_WRITE_PORT 436,15451
#define GET_PNP_ISA_STRUCT 438,15482
#define PNP_ISA_STRUCT_LEN 439,15514
#define PNP_CSN_CNT_OFF 440,15546
#define PNP_RD_PORT_OFF 441,15575
#define PNP_FUNCTION_OK 442,15604
#define PNP_WAKE 443,15633
#define PNP_RSRC_DATA 444,15655
#define PNP_RSRC_READY 445,15682
#define PNP_STATUS 446,15710
#define PNP_ACTIVATE 447,15734
#define PNP_CNF_IO_H 448,15760
#define PNP_CNF_IO_L 449,15786
#define PNP_CNF_INT 450,15812
#define PNP_CNF_DMA 451,15837
#define PNP_CNF_MEM 452,15862
#define BIT0 454,15888
#define BIT15 455,15903

drivers/net/ltpc.h,585
#define LT_GETRESULT 6,27
#define LT_WRITEMEM 7,54
#define LT_READMEM 8,81
#define LT_GETFLAGS 9,108
#define LT_SETFLAGS 10,135
#define LT_INIT 11,162
#define LT_SENDLAP 12,189
#define LT_RCVLAP 13,216
#define LT_FLAG_ALLLAP 16,278
struct lt_getresult lt_getresult18,307
struct lt_mem lt_mem23,381
struct lt_setflags lt_setflags30,529
struct lt_getflags lt_getflags36,624
struct lt_init lt_init41,697
struct lt_sendlap lt_sendlap47,787
struct lt_rcvlap lt_rcvlap55,946
union lt_command lt_command63,1102
typedef union lt_command lt_command;lt_command72,1312

drivers/net/sdla_fr.c,3048
#define	_GNUC_97,5245
#define	MAX_CMD_RETRY	103,5436
#define	FR_HEADER_LEN	104,5498
#define	FR_CHANNEL_MTU	105,5558
#define	Q922_UI	109,5651
#define	Q922_XID	110,5701
#define DLCI_NOT_CONFIGURED	114,5764
#define DLCI_CONFIG_PENDING	115,5797
#define DLCI_CONFIGURED	116,5830
#define CIR_ENABLED	120,5887
#define CIR_DISABLED	121,5912
#define BUFFER_INTR_MODE	125,5974
#define DLCI_LIST_INTR_MODE	126,6004
#define DISABLED 130,6071
#define WAITING_TO_BE_ENABLED	131,6095
#define CVHexToAscii(CVHexToAscii135,6158
typedef struct fr_channel fr_channel142,6549
} fr_channel_t;fr_channel_t202,9302
typedef struct dlci_status dlci_status204,9319
} dlci_status_t;dlci_status_t207,9406
typedef struct dlci_IB_mapping dlci_IB_mapping209,9424
} dlci_IB_mapping_t;dlci_IB_mapping_t212,9520
typedef struct fr_dlci_interface fr_dlci_interface218,9688
} fr_dlci_interface_t;fr_dlci_interface_t222,9830
static unsigned short num_frames;224,9854
static unsigned long curr_trace_addr;225,9888
static unsigned long start_trace_addr;226,9926
static unsigned short available_buffer_space;227,9965
static char TracingEnabled;228,10011
static int rCount 229,10113
static int Intr_test_counter;236,10317
int wpf_init(316,14400
static int update(472,19077
static int new_if(502,19929
static int del_if(573,21689
static int wpf_exec(588,22030
static int if_init(630,23182
static int if_open(671,24544
static int if_close(800,28749
static int if_header(829,29547
static int if_rebuild_hdr(853,30089
static int if_send(882,31173
static int reply_udp(1103,37262
static void switch_net_numbers(1179,39211
static struct net_device_stats *if_stats(1233,41070
static void fr502_isr(1247,41437
static void fr508_isr(1268,41891
static void fr502_rx_intr(1428,46458
static void fr508_rx_intr(1516,48725
static void tx_intr(1654,52386
static void spur_intr(1684,52953
static int handle_IPXWAN(1694,53146
static void wpf_poll(1802,56757
static int fr_read_version(1858,58410
static int fr_configure(1882,58980
static int fr_dlci_configure(1908,59721
static int fr_set_intr_mode(1928,60287
static int fr_comm_enable(1963,61225
static int fr_comm_disable(1981,61669
static int fr_get_err_stats(1999,62127
static int fr_get_stats(2027,62927
static int fr_add_dlci(2052,63656
static int fr_activate_dlci(2075,64372
static int fr_issue_isf(2097,65015
static int fr502_send(2117,65520
static int fr508_send(2140,66109
static int fr_event(2177,67094
static int fr_modem_failure(2226,68470
static int fr_dlci_change(2243,68906
static int update_chan_state(2328,71295
static void set_chan_state(2368,72194
static struct device *find_channel(2405,73046
static int is_tx_ready(2421,73521
static unsigned int dec_to_uint(2443,74020
static int process_udp_mgmt_pkt(2457,74367
static int intr_test(2786,82919
static int process_udp_driver_call(2821,83817
static int udp_pkt_type(2982,90213
void init_chan_statistics(3025,91467
void init_global_statistics(3071,93174
static void read_DLCI_IB_mapping(3089,93777

drivers/net/sdla_ppp.c,2118
#define	_GNUC_69,3640
#define	STATIC75,3814
#define	STATIC	77,3835
#define	PPP_DFLT_MTU	79,3865
#define	PPP_MAX_MTU	80,3909
#define PPP_HDR_LEN	81,3952
#define	CONNECT_TIMEOUT	82,3974
#define	HOLD_DOWN_TIME	83,4036
#define CVHexToAscii(CVHexToAscii86,4120
typedef struct ppp_private_area ppp_private_area94,4612
} ppp_private_area_t;ppp_private_area_t138,6420
static int rCount 142,6518
static int Intr_test_counter;195,9182
static char TracingEnabled;196,9212
static unsigned long curr_trace_addr;197,9240
static unsigned long start_trace_addr;198,9278
static unsigned short available_buffer_space;199,9317
int wpp_init(218,10178
static int update(284,12384
static int new_if(313,13216
static int del_if(346,14267
static int wpp_exec(361,14607
static int if_init(394,15586
static int if_open(432,16783
static int if_close(490,18411
static int if_header(515,19152
static int if_rebuild_hdr(537,19621
static int if_send(565,20654
static int reply_udp(722,25663
static void switch_net_numbers(797,27612
static struct enet_statistics *if_stats(849,29453
static int ppp_read_version(872,29968
static int ppp_configure(893,30472
static int ppp_set_intr_mode(913,31026
static int ppp_comm_enable(939,31615
static int ppp_comm_disable(955,32004
static int ppp_get_err_stats(971,32408
static int ppp_send(996,33191
static int ppp_error(1029,34188
STATIC void wpp_isr(1050,34732
static void rx_intr(1123,36989
static void tx_intr(1228,40175
static int handle_IPXWAN(1239,40377
static void wpp_poll(1333,43884
static void poll_active(1396,45789
static void poll_connecting(1414,46353
static void poll_disconnected(1431,46865
static int config502(1448,47343
static int config508(1482,48237
static void show_disc_cause(1518,49258
static unsigned char bps_to_speed_code(1558,50598
static int process_udp_driver_call(1594,51332
static int process_udp_mgmt_pkt(1778,57629
static void init_ppp_priv_struct(2093,66154
static void init_global_statistics(2135,67960
static void init_ppp_tx_rx_buff(2157,68696
static int intr_test(2193,70018
static int udp_pkt_type(2226,70962

drivers/net/sdla_x25.c,2558
#define	_GNUC_52,2469
#define	CMD_OK	57,2629
#define	CMD_TIMEOUT	58,2682
#define	MAX_CMD_RETRY	59,2741
#define	X25_CHAN_MTU	61,2805
#define	X25_HRDHDR_SZ	62,2871
#define	X25_CONCT_TMOUT	63,2932
#define	X25_RECON_TMOUT	64,2995
#define	CONNECT_TIMEOUT	65,3058
#define	HOLD_DOWN_TIME	66,3121
#define CVHexToAscii(CVHexToAscii69,3197
typedef struct x25_channelx25_channel76,3593
} x25_channel_t;x25_channel_t97,4578
typedef struct x25_call_infox25_call_info99,4596
} x25_call_info_t;x25_call_info_t111,4943
int wpx_init 211,9332
static int update 366,13738
static int new_if 397,14591
static int del_if 473,16313
static int wpx_exec 489,16654
static int if_init 534,17813
static int if_open 580,19179
static int if_close 608,19851
static int if_header 640,20717
static int if_rebuild_hdr 666,21287
static int if_send 695,22314
static struct net_device_stats* if_stats 826,25602
static void wpx_isr 840,25958
static void rx_intr 929,28394
static void tx_intr 1042,30946
static void status_intr 1058,31304
static void event_intr 1065,31467
static void spur_intr 1075,31717
static void wpx_poll 1092,32232
static void poll_connecting 1136,33372
static void poll_disconnected 1155,33946
static void poll_active 1166,34280
static int x25_get_version 1219,36010
static int x25_configure 1246,36596
static int x25_get_err_stats 1266,37192
static int x25_get_stats 1294,37964
static int x25_close_hdlc 1320,38579
static int x25_open_hdlc 1339,39037
static int x25_setup_hdlc 1358,39494
static int x25_set_dtr 1377,39959
static int x25_set_intr_mode 1400,40531
static int x25_get_chan_conf 1425,41182
static int x25_place_call 1502,42829
static int x25_accept_call 1531,43493
static int x25_clear_call 1552,44019
static int x25_send 1574,44592
static int x25_fetch_events 1596,45193
static int x25_error 1626,46253
static int incoming_call 1744,49821
static int call_accepted 1855,52570
static int call_cleared 1887,53353
static int restart_event 1905,53913
static int timeout_event 1923,54443
static int connect 1951,55261
static int disconnect 1967,55599
static struct device* get_dev_by_lcn 1979,55974
static int chan_connect 1998,56474
static int chan_disc 2027,57148
static void set_chan_state 2040,57457
static int chan_send 2095,58951
static void parse_call_info 2143,59949
static unsigned char bps_to_speed_code 2207,61223
static unsigned int dec_to_uint 2232,62031
static unsigned int hex_to_uint 2246,62451
static int handle_IPXWAN(2265,62803
static void switch_net_numbers(2372,66028

drivers/net/sdladrv.c,2958
#define	_LINUX_80,3067
#define _INB(_INB94,3669
#define _OUTB(_OUTB95,3701
#define	SYSTEM_TICK	96,3749
#define _INB(_INB105,4098
#define _OUTB(_OUTB106,4130
#define	SYSTEM_TICK	107,4178
#define	MOD_VERSION	113,4248
#define	MOD_RELEASE	114,4270
#define	SDLA_IODELAY	116,4293
#define	EXEC_DELAY	117,4364
#define	EXEC_TIMEOUT	118,4424
#define S502A_IORANGE	121,4514
#define S502E_IORANGE	122,4538
#define S503_IORANGE	123,4562
#define S507_IORANGE	124,4585
#define S508_IORANGE	125,4608
#define S502_MAXMEM	128,4663
#define S503_MAXMEM	129,4692
#define S507_MAXMEM	130,4721
#define S508_MAXMEM	131,4750
#define S502_MINMEM	134,4811
#define S503_MINMEM	135,4839
#define S507_MINMEM	136,4867
#define S508_MINMEM	137,4896
static char modname[180,6444
static char fullname[181,6479
static char copyright[182,6527
static unsigned	exec_idle;183,6596
static unsigned	s502_port_options[189,6812
static unsigned	s503_port_options[192,6887
static unsigned	s508_port_options[195,6990
static unsigned s502a_irq_options[199,7094
static unsigned s502e_irq_options[200,7139
static unsigned s503_irq_options[201,7196
static unsigned s508_irq_options[202,7256
static unsigned s502a_dpmbase_options[204,7330
static unsigned s507_dpmbase_options[212,7638
static unsigned s508_dpmbase_options[220,7981
static unsigned	s502a_pclk_options[235,8544
static unsigned	s502e_pclk_options[236,8602
static unsigned	s503_pclk_options[237,8679
static unsigned	s507_pclk_options[238,8744
static unsigned	s508_pclk_options[239,8797
static unsigned char s502a_hmcr[242,8892
static unsigned char s502e_hmcr[249,9185
static unsigned char s507_hmcr[256,9502
static unsigned char s508_hmcr[263,9818
static unsigned char s507_irqmask[271,10135
int init_module 290,10591
void cleanup_module 309,11068
int sdla_setup 330,11530
int sdla_down 456,14550
int sdla_mapmem 501,15371
int sdla_inten 565,16562
int sdla_intde 622,17685
int sdla_intack 681,18944
int sdla_intr 733,19884
int sdla_exec 781,20673
int sdla_peek 812,21452
int sdla_poke 854,22711
static int sdla_detect 899,24090
static int sdla_autodpm 954,25099
static int sdla_setdpm 996,25996
static int sdla_load 1027,26805
static int sdla_init 1124,29114
static unsigned long sdla_memtest 1148,29705
static int sdla_bootcfg 1168,30207
static unsigned char make_config_byte 1200,31114
static int sdla_start 1227,31782
static int init_s502a 1323,33626
static int init_s502e 1364,34347
static int init_s503 1408,35196
static int init_s507 1450,35906
static int init_s508 1507,36992
static int detect_s502a 1548,38197
static int detect_s502e 1601,39534
static int detect_s503 1644,40718
static int detect_s507 1687,41841
static int detect_s508 1730,42883
static int calibrate_delay 1760,43629
static int get_option_index 1773,44014
static unsigned check_memregion 1787,44330
static unsigned test_memregion 1808,44853
static unsigned short checksum 1841,45594

drivers/net/sdlamain.c,864
#define	STATIC50,2331
#define	STATIC	52,2352
#define	DRV_VERSION	55,2383
#define	DRV_RELEASE	56,2427
#define	MAX_CARDS	57,2487
#define	CONFIG_WANPIPE_CARDS 60,2594
#define	CMD_OK	63,2633
#define	CMD_TIMEOUT	64,2686
#define	MAX_CMD_RETRY	65,2745
static char drvname[91,3619
static char fullname[92,3654
static char copyright[93,3715
static int ncards 94,3784
static int active 95,3826
static sdla_t* card_array 96,3880
static struct tq_struct sdla_tq 99,3989
int init_module 123,4552
void cleanup_module 183,5951
static int setup 216,6879
static int shutdown 356,10245
static int ioctl 400,11472
static int ioctl_dump 444,12545
static int ioctl_exec 496,14062
STATIC void sdla_isr 517,14705
#define	card	519,14774
STATIC void sdla_poll 546,15412
void wanpipe_open 570,16065
void wanpipe_close 582,16503
void wanpipe_set_state 591,16689

drivers/net/pcnet32.c,1699
static const char *version 16,506
static unsigned int pcnet32_portlist[43,1135
static unsigned int pcnet32_portlist[] __initdata 43,1135
static int pcnet32_debug 45,1221
static struct device *pcnet32_dev 48,1266
static const int max_interrupt_work 51,1316
static const int rx_copybreak 52,1358
#define PORT_AUI 54,1396
#define PORT_10BT 55,1423
#define PORT_GPSI 56,1450
#define PORT_MII 57,1477
#define PORT_PORTSEL 59,1505
#define PORT_ASEL 60,1532
#define PORT_FD 61,1559
static int options 63,1587
#define PCNET32_LOG_TX_BUFFERS 128,4513
#define PCNET32_LOG_RX_BUFFERS 129,4546
#define TX_RING_SIZE	132,4587
#define TX_RING_MOD_MASK	133,4642
#define TX_RING_LEN_BITS	134,4687
#define RX_RING_SIZE	136,4747
#define RX_RING_MOD_MASK	137,4802
#define RX_RING_LEN_BITS	138,4847
#define PKT_BUF_SZ	140,4906
#define PCNET32_DATA 143,4969
#define PCNET32_ADDR 144,4995
#define PCNET32_RESET 145,5021
#define PCNET32_BUS_IF 146,5048
#define PCNET32_TOTAL_SIZE 147,5076
#define CRC_POLYNOMIAL_LE 149,5109
struct pcnet32_rx_head pcnet32_rx_head152,5230
struct pcnet32_tx_head pcnet32_tx_head160,5344
struct pcnet32_init_block pcnet32_init_block170,5514
struct pcnet32_private pcnet32_private181,5717
__initfunc(215,7169
__initfunc(281,9250
pcnet32_open(433,13868
pcnet32_purge_tx_ring(540,17311
pcnet32_init_ring(556,17627
pcnet32_restart(594,18878
pcnet32_start_xmit(615,19315
pcnet32_interrupt(706,21978
pcnet32_rx(842,26209
pcnet32_close(934,29252
pcnet32_get_stats(978,30317
static void pcnet32_load_multicast 998,30833
static void pcnet32_set_multicast_list(1050,31975
static int debug 1077,32841
init_module(1080,32869
cleanup_module(1090,33007

drivers/net/x25_asy.c,1304
typedef struct x25_ctrl x25_ctrl34,814
} x25_asy_ctrl_t;x25_asy_ctrl_t38,975
static x25_asy_ctrl_t	**x25_asy_ctrls 40,994
int x25_asy_maxdev 42,1041
static struct tty_ldisc	x25_ldisc;45,1146
static inline struct x25_asy *x25_asy_alloc(51,1377
static inline void x25_asy_free(119,3054
static void x25_asy_changed_mtu(140,3603
static inline void x25_asy_lock(206,4862
static inline void x25_asy_unlock(215,5114
static void x25_asy_bump(223,5372
static void x25_asy_encaps(257,6082
static void x25_asy_write_wakeup(300,7312
static int x25_asy_xmit(327,7960
static void x25_asy_data_indication(403,9929
static void x25_asy_data_transmit(414,10212
static void x25_asy_connected(437,10648
static void x25_asy_disconnected(459,11059
static int x25_asy_open(484,11532
static int x25_asy_close(545,12930
static int x25_asy_receive_room(563,13315
static void x25_asy_receive_buf(575,13698
static int x25_asy_open_tty(612,14556
static void x25_asy_close_tty(656,15552
static struct net_device_stats *x25_asy_get_stats(679,15973
int x25_asy_esc(703,16762
static void x25_asy_unesc(742,17475
static int x25_asy_ioctl(780,18206
static int x25_asy_open_dev(809,18836
static int x25_asy_init_ctrl_dev(819,19073
int x25_asy_init(872,20757
init_module(909,21486
cleanup_module(915,21547

drivers/net/x25_asy.h,377
#define _LINUX_X25_ASY_H2,25
#define SL_NRUNIT	5,81
#define SL_MTU	8,211
#define X25_END 11,270
#define X25_ESC 12,329
#define X25_ESCAPE(X25_ESCAPE13,389
#define X25_UNESCAPE(X25_UNESCAPE14,422
struct x25_asy x25_asy17,459
#define SLF_INUSE	46,1855
#define SLF_ESCAPE	47,1911
#define SLF_ERROR	48,1981
#define SLF_OUTWAIT	49,2050
#define X25_ASY_MAGIC 54,2105

drivers/net/cops.c,1255
static const char *version 35,1275
static const char *cardname 91,2714
static int board_type 94,2778
static int board_type 96,2837
static int io 100,2892
static int irq 101,2943
static int io 103,2988
static int irq 104,3035
static unsigned int cops_portlist[154,5063
static int cops_irqlist[164,5267
static struct timer_list cops_timer;168,5314
#define COPS_DEBUG 172,5452
static unsigned int cops_debug 174,5481
#define COPS_IO_EXTENT 177,5579
struct cops_localcops_local181,5668
__initfunc(221,7288
__initfunc(255,8407
__initfunc(351,11152
static int cops_open(400,12871
static int cops_jumpstart(441,13734
static void tangent_wait_reset(464,14415
static void cops_reset(475,14630
static void cops_load 509,15640
static int cops_nodeid 604,18272
static void cops_poll(676,20770
static void cops_interrupt(708,21434
static void cops_rx(757,22627
static int cops_send_packet(863,25795
static void set_multicast_list(940,28342
static int cops_hard_header(950,28559
static int cops_ioctl(963,28891
static int cops_close(999,30038
static struct enet_statistics *cops_get_stats(1022,30478
static char lt_name[1029,30654
static struct device cops0_dev 1031,30680
int init_module(1044,30918
void cleanup_module(1066,31412

drivers/net/cops.h,776
#define __LINUX_COPSLTALK_H8,151
#define MAX_LLAP_SIZE	13,235
#define TANG_CARD_STATUS 16,277
#define TANG_CLEAR_INT 17,311
#define TANG_RESET 18,345
#define TANG_TX_READY 20,380
#define TANG_RX_READY 21,414
#define DAYNA_CMD_DATA 24,461
#define DAYNA_CLEAR_INT 25,495
#define DAYNA_CARD_STATUS 26,529
#define DAYNA_INT_CARD 27,563
#define DAYNA_RESET 28,597
#define DAYNA_RX_READY 30,632
#define DAYNA_TX_READY 31,666
#define DAYNA_RX_REQUEST 32,700
#define COPS_CLEAR_INT 35,765
#define LAP_INIT 38,842
#define LAP_INIT_RSP 39,889
#define LAP_WRITE 40,941
#define DATA_READ 41,989
#define LAP_RESPONSE 42,1037
#define LAP_GETSTAT 43,1104
#define LAP_RSPSTAT 44,1164
struct ltfirmwareltfirmware51,1281
#define DAYNA 57,1364
#define TANGENT 58,1380

drivers/net/cops_ffdrv.h,33
unsigned char ffdrv_code[31,841

drivers/net/cops_ltdrv.h,33
unsigned char ltdrv_code[30,843

drivers/net/sgiseeq.c,2179
static char *version 41,843
static char *sgiseeqstr 44,918
#define SEEQ_RX_BUFFERS 57,1541
#define SEEQ_TX_BUFFERS 58,1569
#define PKT_BUF_SZ 60,1598
#define NEXT_RX(NEXT_RX62,1629
#define NEXT_TX(NEXT_TX63,1685
#define PREV_RX(PREV_RX64,1741
#define PREV_TX(PREV_TX65,1797
#define TX_BUFFS_AVAIL(TX_BUFFS_AVAIL67,1854
#define DEBUG71,2009
struct sgiseeq_rx_desc sgiseeq_rx_desc73,2024
struct sgiseeq_tx_desc sgiseeq_tx_desc78,2106
struct sgiseeq_init_block sgiseeq_init_block87,2365
struct sgiseeq_private sgiseeq_private97,2719
static inline void hpc3_eth_reset(114,3062
static inline void reset_hpc3_and_seeq(121,3235
#define RSTAT_GO_BITS 128,3426
static inline void seeq_go(131,3549
static inline void seeq_load_eaddr(139,3776
#define TCNTINFO_INIT 149,3988
#define RCNTCFG_INIT 150,4037
#define RCNTINFO_INIT 151,4099
static void seeq_init_ring(153,4166
static struct sgiseeq_private *gpriv;200,5431
static struct device *gdev;201,5469
void sgiseeq_dump_rings(203,5498
#define TSTAT_INIT_SEEQ 242,6804
#define TSTAT_INIT_EDLC 243,6885
#define RDMACFG_INIT 244,6945
static void init_seeq(246,7031
static inline void record_rx_errors(271,7662
static inline void rx_maybe_restart(285,8035
#define for_each_rx(for_each_rx295,8336
static inline void sgiseeq_rx(299,8505
static inline void tx_maybe_reset_collisions(348,9897
static inline void kick_tx(357,10146
static inline void sgiseeq_tx(376,10781
static inline void tx_maybe_unbusy(416,11859
static void sgiseeq_interrupt(425,12041
static int sgiseeq_open(447,12697
static int sgiseeq_close(469,13206
static inline int sgiseeq_reset(485,13515
void sgiseeq_my_reset(500,13816
static inline int verify_tx(506,13892
static int sgiseeq_start_xmit(534,14519
static struct enet_statistics *sgiseeq_get_stats(590,16304
static void sgiseeq_set_multicast(597,16467
static inline void setup_tx_ring(601,16526
static inline void setup_rx_ring(613,16762
static char onboard_eth_addr[626,17021
#define ALIGNED(ALIGNED628,17055
int sgiseeq_init(630,17116
static inline unsigned char str2hexnum(701,19190
static inline void str2eaddr(710,19365
int sgiseeq_probe(725,19605

drivers/net/sgiseeq.h,2066
#define _SGISEEQ_H7,197
struct sgiseeq_wregs sgiseeq_wregs9,217
struct sgiseeq_rregs sgiseeq_rregs15,355
struct sgiseeq_regs sgiseeq_regs22,532
#define SEEQ_RSTAT_OVERF 34,816
#define SEEQ_RSTAT_CERROR 35,864
#define SEEQ_RSTAT_DERROR 36,913
#define SEEQ_RSTAT_SFRAME 37,966
#define SEEQ_RSTAT_REOF 38,1017
#define SEEQ_RSTAT_FIG 39,1078
#define SEEQ_RSTAT_TIMEO 40,1131
#define SEEQ_RSTAT_WHICH 41,1195
#define SEEQ_RSTAT_LITTLE 42,1260
#define SEEQ_RSTAT_SDMA 43,1335
#define SEEQ_RSTAT_ADMA 44,1390
#define SEEQ_RSTAT_ROVERF 45,1443
#define SEEQ_RCMD_RDISAB 48,1547
#define SEEQ_RCMD_IOVERF 49,1619
#define SEEQ_RCMD_ICRC 50,1682
#define SEEQ_RCMD_IDRIB 51,1739
#define SEEQ_RCMD_ISHORT 52,1800
#define SEEQ_RCMD_IEOF 53,1859
#define SEEQ_RCMD_IGOOD 54,1918
#define SEEQ_RCMD_RANY 55,1976
#define SEEQ_RCMD_RBCAST 56,2033
#define SEEQ_RCMD_RBMCAST 57,2091
#define SEEQ_TSTAT_UFLOW 60,2201
#define SEEQ_TSTAT_CLS 61,2266
#define SEEQ_TSTAT_R16 62,2324
#define SEEQ_TSTAT_PTRANS 63,2392
#define SEEQ_TSTAT_LCLS 64,2457
#define SEEQ_TSTAT_WHICH 65,2520
#define SEEQ_TSTAT_TLE 66,2585
#define SEEQ_TSTAT_SDMA 67,2660
#define SEEQ_TSTAT_ADMA 68,2715
#define SEEQ_TCMD_RB0 71,2810
#define SEEQ_TCMD_IUF 72,2882
#define SEEQ_TCMD_IC 73,2940
#define SEEQ_TCMD_I16 74,2996
#define SEEQ_TCMD_IPT 75,3075
#define SEEQ_TCMD_RB1 76,3154
#define SEEQ_TCMD_RB2 77,3233
#define SEEQ_CTRL_XCNT 80,3345
#define SEEQ_CTRL_ACCNT 81,3377
#define SEEQ_CTRL_SFLAG 82,3409
#define SEEQ_CTRL_EMULTI 83,3441
#define SEEQ_CTRL_ESHORT 84,3473
#define SEEQ_CTRL_ENCARR 85,3505
#define SEEQ_HPIO_P1BITS 88,3597
#define SEEQ_HPIO_P2BITS 89,3675
#define SEEQ_HPIO_P3BITS 90,3753
#define SEEQ_HDMA_D1BITS 91,3831
#define SEEQ_HDMA_D2BITS 92,3909
#define SEEQ_HDMA_D3BITS 93,3987
#define SEEQ_HDMA_TIMEO 94,4065
#define SEEQ_HCTL_NORM 95,4131
#define SEEQ_HCTL_RESET 96,4196
#define SEEQ_HCTL_IPEND 97,4272
#define SEEQ_HCTL_IPG 98,4343
#define SEEQ_HCTL_RFIX 99,4403
#define SEEQ_HCTL_EFIX 100,4475
#define SEEQ_HCTL_IFIX 101,4549

drivers/net/sonic.c,698
static const char *version 16,392
static unsigned int sonic_debug 56,1429
static unsigned int sonic_debug 58,1483
#define SONIC_NUM_RRS 65,1664
#define SONIC_NUM_RDS 66,1738
#define SONIC_NUM_TDS 67,1814
#define SONIC_RBSIZE 68,1884
#define SONIC_RDS_MASK 70,1952
#define SONIC_TDS_MASK 71,1995
    } sonic_portlist[79,2175
struct sonic_local sonic_local83,2309
static unsigned short known_revisions[107,3670
__initfunc(131,4529
__initfunc(156,5217
static int sonic_open(296,9194
sonic_close(337,10215
static int sonic_send_packet(363,10664
sonic_interrupt(456,13292
sonic_rx(573,16359
sonic_get_stats(647,18829
sonic_multicast_list(668,19420
static int sonic_init(715,20895

drivers/net/sonic.h,4104
#define SONIC_H15,379
#define SONIC_READ(SONIC_READ20,439
#define SONIC_WRITE(SONIC_WRITE23,509
#define SONIC_CMD 31,626
#define SONIC_DCR 32,662
#define SONIC_RCR 33,698
#define SONIC_TCR 34,734
#define SONIC_IMR 35,770
#define SONIC_ISR 36,806
#define SONIC_UTDA 38,843
#define SONIC_CTDA 39,879
#define SONIC_URDA 41,916
#define SONIC_CRDA 42,952
#define SONIC_EOBC 43,988
#define SONIC_URRA 44,1024
#define SONIC_RSA 45,1060
#define SONIC_REA 46,1096
#define SONIC_RRP 47,1132
#define SONIC_RWP 48,1168
#define SONIC_RSC 49,1204
#define SONIC_CEP 51,1241
#define SONIC_CAP2 52,1277
#define SONIC_CAP1 53,1313
#define SONIC_CAP0 54,1349
#define SONIC_CE 55,1385
#define SONIC_CDP 56,1421
#define SONIC_CDC 57,1457
#define SONIC_WT0 59,1494
#define SONIC_WT1 60,1530
#define SONIC_SR 62,1567
#define SONIC_TPS	67,1632
#define SONIC_TFC	68,1656
#define SONIC_TSA0	69,1680
#define SONIC_TSA1	70,1705
#define SONIC_TFS	71,1730
#define SONIC_CRBA0	73,1755
#define SONIC_CRBA1	74,1781
#define SONIC_RBWC0	75,1807
#define SONIC_RBWC1	76,1833
#define SONIC_TTDA	77,1859
#define SONIC_MDT	78,1884
#define SONIC_TRBA0	80,1909
#define SONIC_TRBA1	81,1935
#define SONIC_TBWC0	82,1961
#define SONIC_TBWC1	83,1987
#define SONIC_LLFA	84,2013
#define SONIC_ADDR0	86,2039
#define SONIC_ADDR1	87,2065
#define SONIC_CRCT 92,2117
#define SONIC_FAET 93,2154
#define SONIC_MPT 94,2191
#define SONIC_CR_LCAM 101,2260
#define SONIC_CR_RRRA 102,2299
#define SONIC_CR_RST 103,2338
#define SONIC_CR_ST 104,2377
#define SONIC_CR_STP 105,2416
#define SONIC_CR_RXEN 106,2455
#define SONIC_CR_RXDIS 107,2494
#define SONIC_CR_TXP 108,2533
#define SONIC_CR_HTX 109,2572
#define SONIC_DCR_EXBUS 115,2653
#define SONIC_DCR_LBR 116,2692
#define SONIC_DCR_PO1 117,2731
#define SONIC_DCR_PO0 118,2770
#define SONIC_DCR_SBUS 119,2809
#define SONIC_DCR_USR1 120,2848
#define SONIC_DCR_USR0 121,2887
#define SONIC_DCR_WC1 122,2926
#define SONIC_DCR_WC0 123,2965
#define SONIC_DCR_DW 124,3004
#define SONIC_DCR_BMS 125,3043
#define SONIC_DCR_RFT1 126,3082
#define SONIC_DCR_RFT0 127,3121
#define SONIC_DCR_TFT1 128,3160
#define SONIC_DCR_TFT0 129,3199
#define SONIC_RCR_ERR 135,3300
#define SONIC_RCR_RNT 136,3339
#define SONIC_RCR_BRD 137,3378
#define SONIC_RCR_PRO 138,3417
#define SONIC_RCR_AMC 139,3456
#define SONIC_RCR_LB1 140,3495
#define SONIC_RCR_LB0 141,3534
#define SONIC_RCR_MC 143,3574
#define SONIC_RCR_BC 144,3613
#define SONIC_RCR_LPKT 145,3652
#define SONIC_RCR_CRS 146,3691
#define SONIC_RCR_COL 147,3730
#define SONIC_RCR_CRCR 148,3769
#define SONIC_RCR_FAER 149,3808
#define SONIC_RCR_LBK 150,3847
#define SONIC_RCR_PRX 151,3886
#define SONIC_RCR_LB_OFF 153,3926
#define SONIC_RCR_LB_MAC 154,3960
#define SONIC_RCR_LB_ENDEC 155,4006
#define SONIC_RCR_LB_TRANS 156,4052
#define SONIC_RCR_DEFAULT 160,4142
#define SONIC_TCR_PINTR 167,4240
#define SONIC_TCR_POWC 168,4279
#define SONIC_TCR_CRCI 169,4318
#define SONIC_TCR_EXDIS 170,4357
#define SONIC_TCR_EXD 171,4396
#define SONIC_TCR_DEF 172,4435
#define SONIC_TCR_NCRS 173,4474
#define SONIC_TCR_CRLS 174,4513
#define SONIC_TCR_EXC 175,4552
#define SONIC_TCR_PMB 176,4591
#define SONIC_TCR_FU 177,4630
#define SONIC_TCR_BCM 178,4669
#define SONIC_TCR_PTX 179,4708
#define SONIC_TCR_DEFAULT 181,4748
#define SONIC_INT_BR	188,4880
#define SONIC_INT_HBL	189,4909
#define SONIC_INT_LCD 190,4939
#define SONIC_INT_PINT 191,4978
#define SONIC_INT_PKTRX 192,5017
#define SONIC_INT_TXDN 193,5056
#define SONIC_INT_TXER 194,5095
#define SONIC_INT_TC 195,5134
#define SONIC_INT_RDE 196,5173
#define SONIC_INT_RBE 197,5212
#define SONIC_INT_RBAE	198,5251
#define SONIC_INT_CRC	199,5282
#define SONIC_INT_FAE	200,5312
#define SONIC_INT_MP	201,5342
#define SONIC_INT_RFO	202,5371
#define SONIC_IMR_DEFAULT	209,5439
#define	SONIC_END_OF_LINKS	223,6009
} sonic_rr_t;sonic_rr_t236,6240
} sonic_rd_t;sonic_rd_t273,7010
} sonic_td_t;sonic_td_t298,7533
} sonic_cd_t;sonic_cd_t314,7747
#define CAM_DESCRIPTORS 316,7762
} sonic_cda_t;sonic_cda_t323,7877

drivers/net/ipddp.h,217
#define __LINUX_IPDDP_H6,85
#define SIOCADDIPDDPRT 10,129
#define SIOCDELIPDDPRT 11,171
#define SIOCFINDIPDDPRT 12,215
struct ipddp_routeipddp_route14,260
#define IPDDP_ENCAP	23,528
#define IPDDP_DECAP	24,550

drivers/net/arc-rimi.c,1180
static int shmem=93,2922
static int irq=94,2995
static char *device;95,3061
static int node=96,3125
extern struct device arcnet_devs[104,3356
extern char arcnet_dev_names[105,3392
extern int arcnet_num_devs;106,3428
#define _INTMASK 112,3572
#define _STATUS 113,3615
#define _COMMAND 114,3658
#define _RESET 115,3734
#define _MEMDATA 116,3792
#define _ADDR_HI 117,3870
#define _ADDR_LO 118,3944
#define _CONFIG 119,3974
#define RDDATAflag 121,4037
#define ARCSTATUS	123,4106
#define ACOMMAND(ACOMMAND124,4139
#define ARCRESET	125,4184
#define AINTMASK(AINTMASK126,4249
#define SETCONF	127,4294
static const char *version 129,4338
__initfunc(143,5062
__initfunc(170,5740
#define BUFFER_SIZE 189,6270
#define MIRROR_SIZE 190,6296
int arcrimi_reset(278,9068
static void arcrimi_openclose(328,10111
static void arcrimi_setmask(336,10221
static u_char arcrimi_status(343,10341
static void arcrimi_command(350,10451
arcrimi_inthandler(362,10675
arcrimi_rx(581,16186
arcrimi_prepare_tx(639,17632
static char devicename[736,20584
static struct device thiscard 737,20616
int init_module(745,20808
void cleanup_module(772,21333
__initfunc(800,21810

drivers/net/mace.c,1092
static struct device *mace_devs 26,530
#define N_RX_RING	29,578
#define N_TX_RING	30,598
#define MAX_TX_ACTIVE	31,618
#define NCMDS_TX	32,642
#define RX_BUFLEN	33,703
#define TX_TIMEOUT	34,741
#define TX_DMA_ERR	37,813
struct mace_data mace_data39,838
#define PRIV_BYTES	68,1734
static unsigned char dummy_buf[91,2838
bitrev(95,2962
mace_probe(105,3080
static void dbdma_reset(210,5955
static void mace_reset(225,6281
static void __mace_set_address(272,7417
static int mace_set_address(286,7795
static int mace_open(304,8197
static inline void mace_clean_rings(377,10353
static int mace_close(395,10712
static inline void mace_set_timeout(419,11349
static int mace_xmit_start(436,11817
static struct net_device_stats *mace_stats(492,13309
#define CRC_POLY	502,13528
static void mace_set_multicast(504,13557
static void mace_handle_misc_intrs(559,14815
static void mace_interrupt(580,15504
static void mace_tx_timeout(721,19831
static void mace_txdma_intr(789,21590
static void mace_rxdma_intr(793,21668
int init_module(907,24732
void cleanup_module(917,24859

drivers/net/mace.h,2202
#define REG(REG13,419
struct mace mace15,480
#define DRTRY	51,1734
#define DXMTFCS	52,1801
#define AUTO_PAD_XMIT	53,1867
#define XMTSV	56,2006
#define UFLO	57,2067
#define LCOL	58,2122
#define MORE	59,2185
#define ONE	60,2249
#define DEFER	61,2302
#define LCAR	62,2367
#define RTRY	63,2431
#define EXDEF	66,2565
#define RETRY_MASK	67,2623
#define LLRCV	70,2701
#define M_RBAR	71,2766
#define AUTO_STRIP_RCV	72,2820
#define RS_OFLO	82,3184
#define RS_CLSN	83,3238
#define RS_FRAMERR	84,3309
#define RS_FCSERR	85,3360
#define RS_COUNT	86,3411
#define RCVFC_SH	89,3498
#define RCVFC_MASK	90,3551
#define XMTFC_SH	91,3575
#define XMTFC_MASK	92,3629
#define JABBER	98,3787
#define BABBLE	99,3855
#define CERR	100,3921
#define RCVCCO	101,3986
#define RNTPCO	102,4028
#define MPCO	103,4070
#define RCVINT	104,4108
#define XMTINT	105,4153
#define XMTSV	108,4220
#define TDTREQ	109,4277
#define RDTREQ	110,4342
#define BSWP	113,4428
#define XMTSP_4	114,4484
#define XMTSP_16	115,4548
#define XMTSP_64	116,4613
#define XMTSP_112	117,4678
#define SWRST	118,4745
#define XMTFW_8	121,4808
#define XMTFW_16	122,4871
#define XMTFW_32	123,4914
#define RCVFW_16	124,4957
#define RCVFW_32	125,5022
#define RCVFW_64	126,5066
#define XMTFWU	127,5110
#define RCVFWU	128,5171
#define XMTBRST	129,5232
#define RCVBRST	130,5287
#define PROM	133,5362
#define DXMT2PD	134,5404
#define EMBA	135,5473
#define DRCVPA	136,5532
#define DRCVBC	137,5594
#define ENXMT	138,5650
#define ENRCV	139,5695
#define XMTSEL	142,5758
#define PORTSEL_AUI	143,5816
#define PORTSEL_10T	144,5863
#define PORTSEL_DAI	145,5915
#define PORTSEL_GPSI	146,5962
#define ENPLSIO	147,6011
#define LNKFL	150,6089
#define DLNKTST	151,6145
#define REVPOL	152,6200
#define DAPC	153,6263
#define LRT	154,6330
#define ASEL	155,6391
#define RWAKE	156,6449
#define AWAKE	157,6496
#define ADDRCHG	160,6560
#define PHYADDR	161,6611
#define LOGADDR	162,6663
#define RTRE	165,6734
#define RTRD	166,6801
#define RPAC	167,6866
#define FCOLL	168,6911
#define RCVFCSE	169,6953
#define LOOP_NONE	170,7000
#define LOOP_EXT	171,7041
#define LOOP_INT	172,7087
#define LOOP_MENDEC	173,7150

drivers/net/com20020.c,1679
static int node=83,2652
static int io=84,2671
static int irq=85,2741
static char *device;86,2807
static int timeout=87,2871
static int backplane=88,2893
static int clock=89,2917
extern struct device arcnet_devs[100,3172
extern char arcnet_dev_names[101,3208
extern int arcnet_num_devs;102,3244
static char *clockrates[108,3328
#define ARCNET_TOTAL_SIZE 114,3521
#define _INTMASK 116,3550
#define _STATUS 117,3593
#define _COMMAND 118,3636
#define _CONFIG 119,3712
#define _DIAGSTAT 120,3774
#define _MEMDATA 121,3840
#define _ADDR_HI 122,3910
#define _ADDR_LO 123,3976
#define RDDATAflag 125,4006
#define NEWNXTIDflag 126,4074
#define TXENflag 128,4154
#define PROMISCflag 130,4225
#define REGTENTID 132,4300
#define REGNID 133,4338
#define REGSETUP 134,4387
#define REGNXTID 135,4438
#define ARCRESET 137,4475
#define ARCRESET0 141,4634
#define ARCSTATUS	146,4789
#define ACOMMAND(ACOMMAND147,4820
#define AINTMASK(AINTMASK148,4863
#define SETCONF 149,4906
u_char get_buffer_byte 158,5344
void put_buffer_byte 168,5544
void get_whole_buffer 182,5795
void put_whole_buffer 197,6168
static const char *version 213,6528
__initfunc(227,7166
__initfunc(330,9587
int arc20020_reset(447,13391
arc20020_set_mc_list(518,15007
static void arc20020_openclose(544,15644
static void arc20020_en_dis_able_TX(553,15756
static void arc20020_setmask(563,16001
static u_char arc20020_status(571,16119
static void arc20020_command(579,16227
arc20020_inthandler(591,16448
arc20020_rx(831,22363
arc20020_prepare_tx(888,23791
static struct device *cards[960,26185
int init_module(964,26308
void cleanup_module(1007,27103
__initfunc(1038,27691

drivers/net/lne390.c,1440
static const char *version 31,1099
#define LNE390_START_PG	61,2020
#define LNE390_STOP_PG	62,2083
#define LNE390_ID_PORT	64,2146
#define LNE390_IO_EXTENT	65,2207
#define LNE390_SA_PROM	66,2237
#define LNE390_RESET_PORT	67,2294
#define LNE390_NIC_OFFSET	68,2359
#define LNE390_ADDR0	70,2423
#define LNE390_ADDR1	71,2478
#define LNE390_ADDR2	72,2505
#define LNE390_ID0	74,2533
#define LNE390_ID1	75,2602
#define LNE390_CFG1	77,2672
#define LNE390_CFG2	78,2737
#define LNE390_D_PROBE	86,2948
#define LNE390_D_RX_PKT	87,2976
#define LNE390_D_TX_PKT	88,3005
#define LNE390_D_IRQ	89,3034
#define LNE390_DEBUG	91,3061
static unsigned char irq_map[93,3085
static unsigned char irq_map[] __initdata 93,3085
static unsigned int shmem_mapA[94,3159
static unsigned int shmem_mapA[] __initdata 94,3159
static unsigned int shmem_mapB[95,3257
static unsigned int shmem_mapB[] __initdata 95,3257
__initfunc(103,3551
__initfunc(130,4216
static void lne390_reset_8390(284,9105
lne390_get_8390_hdr(316,10054
static void lne390_block_input(329,10575
static void lne390_block_output(346,11138
static int lne390_open(355,11423
static int lne390_close(362,11517
#define MAX_LNE_CARDS	374,11703
#define NAMELEN	375,11771
static char namelist[376,11829
static struct device dev_lne[377,11885
static int io[386,12038
static int irq[387,12077
static int mem[388,12118
int init_module(394,12336
void cleanup_module(421,13032

drivers/net/com90io.c,1189
static int io=82,2517
static int irq=83,2587
static char *device;84,2653
extern struct device arcnet_devs[91,2850
extern char arcnet_dev_names[92,2886
extern int arcnet_num_devs;93,2922
#define ARCNET_TOTAL_SIZE 100,3058
#define _INTMASK 103,3149
#define _STATUS 104,3192
#define _COMMAND 105,3235
#define _RESET 106,3311
#define _MEMDATA 107,3369
#define _ADDR_HI 108,3447
#define _ADDR_LO 109,3521
#define _CONFIG 110,3551
#define ARCSTATUS	112,3614
#define ACOMMAND(ACOMMAND113,3645
#define AINTMASK(AINTMASK114,3688
#define ARCRESET	116,3732
#define SETCONF 118,3762
u_char get_buffer_byte 127,4200
void put_buffer_byte 137,4386
void get_whole_buffer 151,4636
void put_whole_buffer 166,4996
static const char *version 182,5355
__initfunc(196,5992
__initfunc(290,8083
int arc90io_reset(384,11034
static void arc90io_openclose(447,12321
static void arc90io_setmask(456,12432
static u_char arc90io_status(463,12548
static void arc90io_command(470,12654
arc90io_inthandler(482,12874
arc90io_rx(714,18607
arc90io_prepare_tx(771,20034
static struct device *cards[843,22427
int init_module(847,22550
void cleanup_module(882,23177
__initfunc(917,23908

drivers/net/com90xx.c,1502
static int io 110,3478
static int irq 111,3551
static int shmem 112,3620
static char *device;113,3642
char __initdata com90xx_explicit 121,3864
extern struct device arcnet_devs[123,3903
extern char arcnet_dev_names[124,3939
extern int arcnet_num_devs;125,3975
#define ARCNET_TOTAL_SIZE	132,4111
#define _INTMASK 135,4202
#define _STATUS 136,4245
#define _COMMAND 137,4288
#define _RESET 138,4364
#define _MEMDATA 139,4422
#define _ADDR_HI 140,4489
#define _ADDR_LO 141,4552
#define _CONFIG 142,4582
#define RDDATAflag 144,4640
#define ARCSTATUS	146,4705
#define ACOMMAND(ACOMMAND147,4736
#define AINTMASK(AINTMASK148,4780
#define SETCONF	149,4823
#define ARCRESET	150,4865
static const char *version 152,4895
static int ports[175,6007
static int ports[(0x3f0 - 0x200) / 16 + 1] __initdata 175,6007
static u_long shmems[178,6071
static u_long shmems[(0xFF800 - 0xA0000) / 2048 + 1] __initdata 178,6071
__initfunc(182,6146
__initfunc(496,14279
#define BUFFER_SIZE 514,14872
#define MIRROR_SIZE 515,14898
int arc90xx_reset(626,18427
static void arc90xx_openclose(684,19725
static void arc90xx_setmask(693,19830
static u_char arc90xx_status(701,19947
static void arc90xx_command(709,20054
static void arc90xx_inthandler(720,20262
static void arc90xx_rx(912,25754
static void arc90xx_prepare_tx(965,27163
static char devicename[1055,30145
static struct device thiscard 1056,30177
int init_module(1065,30367
void cleanup_module(1091,30859
__initfunc(1124,31567

drivers/net/ethertap.c,627
static int ethertap_debug 46,1315
static struct device *tap_map[48,1347
struct net_localnet_local54,1477
__initfunc(68,1723
static int ethertap_open(112,2578
static unsigned ethertap_mc_hash(133,2983
static void set_multicast_list(145,3180
static int ethertap_start_xmit(172,3819
static __inline__ int ethertap_rx_skb(220,5014
static void ethertap_rx(286,6503
static int ethertap_close(304,6898
static struct net_device_stats *ethertap_get_stats(324,7229
static int unit;332,7395
static char devicename[335,7436
static struct device dev_ethertap 337,7473
int init_module(345,7579
void cleanup_module(359,7860

drivers/net/ni5010.c,1062
static const char *boardname 72,2106
static char *version 73,2147
unsigned int bufsize_rcv 77,2281
#define jumpered_interrupts	79,2312
static unsigned int ni5010_portlist[85,2547
static unsigned int ni5010_portlist[] __initdata 85,2547
#define NI5010_DEBUG 91,2738
struct ni5010_local ni5010_local95,2825
#define tx_done(tx_done115,3584
__initfunc(122,3839
static inline int rd_port(154,4642
__initfunc(160,4724
__initfunc(185,5715
static int ni5010_open(358,11097
static void reset_receiver(417,12994
static int ni5010_send_packet(429,13412
ni5010_interrupt(473,14731
static void dump_packet(516,15809
ni5010_rx(534,16205
static int process_xmt_interrupt(597,18044
ni5010_close(638,19251
ni5010_get_stats(662,19794
ni5010_set_multicast_list(685,20474
extern void hardware_send_packet(705,21198
extern void chipset_init(754,22696
static void show_registers(760,22866
static char devicename[774,23473
static struct device dev_ni5010 775,23509
int io 781,23639
int irq 782,23652
int init_module(787,23712
cleanup_module(815,24510

drivers/net/ni5010.h,2700
#define NI5010_BUFSIZE	13,351
#define NI5010_MAGICVAL0 15,414
#define NI5010_MAGICVAL1 16,480
#define NI5010_MAGICVAL2 17,510
#define SA_ADDR0 19,541
#define SA_ADDR1 20,563
#define SA_ADDR2 21,585
#define NI5010_IO_EXTENT 24,672
#define PRINTK(PRINTK26,707
#define PRINTK2(PRINTK227,752
#define PRINTK3(PRINTK328,801
#define EDLC_XSTAT	31,890
#define EDLC_XCLR	32,949
#define EDLC_XMASK	33,1015
#define EDLC_RSTAT	34,1082
#define EDLC_RCLR	35,1140
#define EDLC_RMASK	36,1205
#define EDLC_XMODE	37,1271
#define EDLC_RMODE	38,1331
#define EDLC_RESET	39,1390
#define EDLC_TDR1	40,1451
#define EDLC_ADDR	41,1524
#define EDLC_TDR2	43,1632
#define IE_GP	44,1705
#define IE_RCNT	46,1810
#define IE_MMODE	48,1924
#define IE_DMA_RST	49,1984
#define IE_ISTAT	50,2051
#define IE_RBUF	51,2122
#define IE_XBUF	52,2184
#define IE_SAPROM	53,2247
#define IE_RESET	54,2315
#define XS_TPOK	57,2453
#define XS_CS	58,2508
#define XS_RCVD	59,2548
#define XS_SHORT	60,2604
#define XS_UFLW	61,2662
#define XS_COLL	62,2719
#define XS_16COLL	63,2766
#define XS_PERR	64,2819
#define XS_CLR_UFLW	66,2861
#define XS_CLR_COLL	67,2908
#define XS_CLR_16COLL	68,2955
#define XS_CLR_PERR	69,3009
#define XM_TPOK	72,3136
#define XM_RCVD	73,3199
#define XM_UFLW	74,3258
#define XM_COLL	75,3318
#define XM_COLL16	76,3378
#define XM_PERR	77,3439
#define XM_ALL	79,3541
#define RS_PKT_OK	82,3679
#define RS_RST_PKT	83,3729
#define RS_RUNT	84,3781
#define RS_ALIGN	85,3840
#define RS_CRC_ERR	86,3903
#define RS_OFLW	87,3953
#define RS_VALID_BITS	88,4003
#define RS_CLR_PKT_OK	91,4129
#define RS_CLR_RST_PKT	92,4190
#define RS_CLR_RUNT	93,4252
#define RS_CLR_ALIGN	94,4308
#define RS_CLR_CRC_ERR	95,4362
#define RS_CLR_OFLW	96,4412
#define RM_PKT_OK	99,4543
#define RM_RST_PKT	100,4607
#define RM_RUNT	101,4668
#define RM_ALIGN	102,4728
#define RM_CRC_ERR	103,4790
#define RM_OFLW	104,4852
#define RMD_TEST	107,4982
#define RMD_ADD_SIZ	108,5043
#define RMD_EN_RUNT	109,5108
#define RMD_EN_RST	110,5171
#define RMD_PROMISC	112,5235
#define RMD_MULTICAST	113,5298
#define RMD_BROADCAST	114,5364
#define RMD_NO_PACKETS	115,5432
#define XMD_COLL_CNT	118,5571
#define XMD_IG_PAR	119,5636
#define XMD_T_MODE	120,5699
#define XMD_LBC	121,5763
#define XMD_DIS_C	122,5822
#define RS_RESET	125,5924
#define MM_EN_DMA	128,6019
#define MM_EN_RCV	129,6080
#define MM_EN_XMT	130,6142
#define MM_BUS_PAGE	131,6203
#define MM_NET_PAGE	132,6263
#define MM_MUX	133,6323
#define IS_TDIAG	137,6459
#define IS_EN_RCV	138,6512
#define IS_EN_XMT	139,6570
#define IS_EN_DMA	140,6628
#define IS_DMA_INT	141,6689
#define IS_R_INT	142,6746
#define IS_X_INT	143,6804

drivers/net/ppp_deflate.c,655
struct ppp_deflate_state ppp_deflate_state64,2123
#define DEFLATE_OVHD	74,2278
struct chunk_header chunk_header100,3489
#define GUARD_MAGIC	105,3620
#define MIN_VMALLOC	106,3651
zfree(112,3792
zalloc(130,4121
zalloc_init(147,4426
z_comp_free(167,4821
z_comp_alloc(183,5067
z_comp_init(225,6146
z_comp_reset(250,6774
z_compress(260,6934
z_comp_stats(341,8852
z_decomp_free(351,9031
z_decomp_alloc(367,9281
z_decomp_init(407,10293
z_decomp_reset(433,10954
z_decompress(459,11864
z_incomp(567,14714
struct compressor ppp_deflate 625,16076
struct compressor ppp_deflate_draft 642,16574
init_module(665,17256
cleanup_module(676,17531

drivers/net/ptifddi.c,934
static char *version 8,243
static struct ptifddi *root_pti_dev 18,435
static inline void pti_reset(21,487
static inline void pti_unreset(26,557
static inline void pti_load_code_base(31,631
static inline void pti_clear_dpram(36,785
#define CARD_TEST_TIMEOUT	41,880
static inline int pti_card_test(43,914
static inline void pti_init_firmware_loader(80,1722
static inline void pti_load_main_firmware(89,1932
static void pti_init_rings(98,2085
static int pti_init(102,2151
static void pti_is_not_so_happy(106,2210
static inline void pti_tx(110,2267
static inline void myri_rx(114,2338
static void pti_interrupt(118,2410
static int pti_open(125,2589
static int pti_close(132,2725
static int pti_start_xmit(139,2835
static struct enet_statistics *pti_get_stats(144,2959
static void pti_set_multicast(147,3082
static inline int pti_fddi_init(151,3137
__initfunc(215,4781
init_module(247,5368
cleanup_module(254,5452

drivers/net/ptifddi.h,229
#define _PTIFDDI_H8,214
struct dpram_loader dpram_loader10,234
struct dfddi_ram dfddi_ram21,515
#define DPRAM_SIZE	64,2002
#define DPRAM_STAT_VALID	66,2029
#define DPRAM_STAT_EMPTY	67,2059
struct ptifddi ptifddi69,2090

drivers/net/ptifddi_asm.h,958
#define _PTIFDDI_ASM_H3,83
const unsigned short firmware_loader_code_addr 6,161
const unsigned short firmware_loader_dev_addr 7,250
const unsigned short firmware_loader_size 8,339
static unsigned char firmware_loader[10,429
static unsigned char firmware_loader[] __initdata 10,429
const unsigned short test_firmware_code_addr 25,1274
const unsigned short test_firmware_dev_addr 26,1362
const unsigned short test_firmware_size 27,1450
static unsigned char test_firmware[29,1539
static unsigned char test_firmware[] __initdata 29,1539
const unsigned short main_firmware_dev_addr 116,8117
const unsigned short main_firmware_size 117,8205
static unsigned char main_firmware[119,8294
static unsigned char main_firmware[] __initdata 119,8294
const unsigned short smt_firmware_dev_addr 439,33609
const unsigned short smt_firmware_size 440,33698
static unsigned char smt_firmware[442,33788
static unsigned char smt_firmware[] __initdata 442,33788

drivers/net/zlib.c,10926
#define NO_DUMMY_DECL23,752
#define NO_ZCFUNCS24,774
#define MY_ZCALLOC25,793
#define inflate	28,879
#define _Z_UTIL_H46,1446
#  define HAVE_MEMCPY55,1635
#  define memcpy(memcpy56,1657
#  define memset(memset57,1704
#  define memcmp	58,1746
#define HAVE_MEMCPY64,1862
    extern int errno;72,2039
#  define local 82,2201
typedef unsigned char  uch;uch86,2302
typedef uch FAR uchf;uchf87,2330
typedef unsigned short ush;ush88,2352
typedef ush FAR ushf;ushf89,2380
typedef unsigned long  ulg;ulg90,2402
extern const char *z_errmsg[92,2431
#define ERR_MSG(ERR_MSG95,2554
#define ERR_RETURN(ERR_RETURN97,2604
#  define DEF_WBITS 104,2794
#  define DEF_MEM_LEVEL 109,2933
#  define DEF_MEM_LEVEL 111,2965
#define STORED_BLOCK 115,3035
#define STATIC_TREES 116,3058
#define DYN_TREES 117,3081
#define MIN_MATCH 120,3141
#define MAX_MATCH 121,3162
#define PRESET_DICT 124,3230
#  define OS_CODE 129,3348
#  define OS_CODE 138,3494
#  define OS_CODE 142,3568
#  define OS_CODE 146,3634
#  define FOPEN(FOPEN147,3658
#  define OS_CODE 152,3779
#  define OS_CODE 156,3850
#  define OS_CODE 160,3895
#  define OS_CODE 164,3964
#  define OS_CODE 168,4010
#  define fdopen(fdopen172,4081
#  define OS_CODE 178,4185
#  define FOPEN(FOPEN182,4250
#  define zstrerror(zstrerror189,4391
#  define zstrerror(zstrerror191,4442
#  define NO_MEMCPY195,4498
#  define NO_MEMCPY201,4733
#  define HAVE_MEMCPY204,4826
#    define zmemcpy 208,4930
#    define zmemcmp 209,4959
#    define zmemzero(zmemzero210,4988
#    define zmemcpy 212,5051
#    define zmemcmp 213,5078
#    define zmemzero(zmemzero214,5105
#    define verbose 226,5450
#  define Assert(Assert229,5522
#  define Trace(Trace230,5577
#  define Tracev(Tracev231,5606
#  define Tracevv(Tracevv232,5653
#  define Tracec(Tracec233,5703
#  define Tracecv(Tracecv234,5759
#  define Assert(Assert236,5824
#  define Trace(Trace237,5851
#  define Tracev(Tracev238,5870
#  define Tracevv(Tracevv239,5890
#  define Tracec(Tracec240,5911
#  define Tracecv(Tracecv241,5933
typedef uLong (*check_func)check_func245,5965
#define ZALLOC(ZALLOC250,6157
#define ZFREE(ZFREE252,6257
#define TRY_FREE(TRY_FREE253,6335
#define _DEFLATE_H272,6882
#define LENGTH_CODES 280,7043
#define LITERALS 283,7138
#define L_CODES 286,7198
#define D_CODES 289,7311
#define BL_CODES 292,7364
#define HEAP_SIZE 295,7441
#define MAX_BITS 298,7498
#define INIT_STATE 301,7565
#define BUSY_STATE 302,7590
#define FINISH_STATE 303,7615
typedef struct ct_data_s ct_data_s308,7730
} FAR ct_data;ct_data317,8001
#define Freq 319,8017
#define Code 320,8038
#define Dad 321,8059
#define Len 322,8079
typedef struct static_tree_desc_s  static_tree_desc;static_tree_desc324,8100
typedef struct tree_desc_s tree_desc_s326,8154
} FAR tree_desc;tree_desc330,8384
typedef ush Pos;Pos332,8402
typedef Pos FAR Posf;Posf333,8419
typedef unsigned IPos;IPos334,8441
typedef struct deflate_state deflate_state340,8625
#   define max_insert_length max_insert_length421,12073
} FAR deflate_state;deflate_state508,15914
#define put_byte(put_byte513,16026
#define MIN_LOOKAHEAD 516,16089
#define MAX_DIST(MAX_DIST521,16262
char deflate_copyright[593,19344
} block_state;block_state609,20103
typedef block_state (*compress_func)compress_func611,20119
#define NIL 638,21203
#  define TOO_FAR 642,21260
#define MIN_LOOKAHEAD 646,21365
typedef struct config_s config_s656,21802
} config;config662,22077
local config configuration_table[664,22088
#define EQUAL 683,22871
struct static_tree_desc_s static_tree_desc_s687,22951
#define UPDATE_HASH(UPDATE_HASH696,23369
#define INSERT_STRING(INSERT_STRING707,23934
#define CLEAR_HASH(CLEAR_HASH716,24346
int deflateInit_(721,24565
int deflateInit2_(733,24967
int deflateSetDictionary 821,27722
int deflateReset 864,29030
int deflateParams(894,29831
local void putShortMSB 934,31066
local void flush_pending(948,31526
int deflate 971,32123
int deflateEnd 1108,36788
int deflateCopy 1138,37543
int deflateOutputPending 1190,39399
local int read_buf(1205,39961
local void lm_init 1230,40570
local uInt longest_match(1268,41928
local void check_match(1411,47723
#  define check_match(check_match1432,48394
local void fill_window(1445,48909
#define FLUSH_BLOCK_ONLY(FLUSH_BLOCK_ONLY1539,52602
#define FLUSH_BLOCK(FLUSH_BLOCK1551,53004
local block_state deflate_stored(1565,53615
local block_state deflate_fast(1623,55643
local block_state deflate_slow(1716,59438
#define MAX_BL_BITS 1877,65356
#define END_BLOCK 1880,65435
#define REP_3_6 1883,65490
#define REPZ_3_10 1886,65583
#define REPZ_11_138 1889,65672
local int extra_lbits[1892,65763
local int extra_dbits[1895,65904
local int extra_blbits[1898,66052
local uch bl_order[1901,66173
#define Buf_size 1907,66412
local ct_data static_ltree[1916,66696
local ct_data static_dtree[1923,66977
local uch dist_code[1928,67105
local uch length_code[1934,67294
local int base_length[1937,67409
local int base_dist[1940,67507
struct static_tree_desc_s static_tree_desc_s1943,67604
local static_tree_desc  static_l_desc 1951,67974
local static_tree_desc  static_d_desc 1954,68075
local static_tree_desc  static_bl_desc 1957,68176
#  define send_code(send_code1985,69560
#  define send_code(send_code1989,69734
#define d_code(d_code1994,69883
#define put_short(put_short2005,70315
local void send_bits(2017,70704
#define send_bits(send_bits2042,71513
#define MAX(MAX2058,71911
local void tr_static_init(2066,72288
void _tr_init(2136,74909
local void init_block(2166,75586
#define SMALLEST 2181,76007
#define pqremove(pqremove2189,76308
#define smaller(smaller2200,76690
local void pqdownheap(2210,77146
local void gen_bitlen(2245,78441
local void gen_codes 2332,81811
local void build_tree(2374,83647
local void scan_tree 2461,86827
local void send_tree 2506,88515
local int build_bl_tree(2557,90486
local void send_all_trees(2592,91935
void _tr_stored_block(2621,93145
void _tr_stored_type_only(2636,93706
void _tr_align(2656,94557
ulg _tr_flush_block(2682,95586
int _tr_tally 2794,99742
local void compress_block(2842,101661
local void set_data_type(2895,103843
local unsigned bi_reverse(2912,104452
local void bi_flush(2927,104859
local void bi_windup(2944,105296
local void copy_block(2963,105766
typedef struct inflate_blocks_state FAR inflate_blocks_statef;inflate_blocks_statef3008,107064
struct inflate_blocks_state inflate_blocks_state3044,108075
struct internal_state internal_state3048,108179
int inflateReset(3087,109597
int inflateEnd(3103,109927
int inflateInit2_(3119,110245
int inflateInit_(3178,111488
#define NEEDBYTE 3187,111647
#define NEXTBYTE 3188,111703
int inflate(3190,111765
int inflateSetDictionary(3322,115394
int inflateIncomp(3354,116379
int inflateSync(3363,116527
typedef struct inflate_huft_s FAR inflate_huft;inflate_huft3439,118405
struct inflate_huft_s inflate_huft_s3441,118454
  extern uInt inflate_hufts;3456,118959
typedef struct inflate_codes_state FAR inflate_codes_statef;inflate_codes_statef3499,120724
#define _INFUTIL_H3529,121512
inflate_block_mode;inflate_block_mode3542,122076
struct inflate_blocks_state inflate_blocks_state3545,122137
#define UPDBITS 3584,123538
#define UPDIN 3585,123577
#define UPDOUT 3586,123647
#define UPDATE 3587,123676
#define LEAVE 3588,123714
#define LOADIN 3590,123793
#define NEEDBYTE 3591,123858
#define NEXTBYTE 3592,123900
#define NEEDBITS(NEEDBITS3593,123928
#define DUMPBITS(DUMPBITS3594,124003
#define WAVAIL 3596,124062
#define LOADOUT 3597,124116
#define WWRAP 3598,124161
#define FLUSH 3599,124240
#define NEEDOUT 3600,124295
#define OUTBYTE(OUTBYTE3601,124373
#define LOAD 3603,124442
extern uInt inflate_mask[3606,124553
struct internal_state internal_state3615,124767
struct inflate_codes_state inflate_codes_state3622,124892
local const uInt border[3626,125017
void inflate_blocks_reset(3675,127776
inflate_blocks_statef *inflate_blocks_new(3700,128376
  extern uInt inflate_hufts;3725,128900
int inflate_blocks(3727,128936
int inflate_blocks_free(3996,136985
void inflate_set_dictionary(4009,137208
int inflate_addhistory(4026,137794
int inflate_packet_flush(4076,139176
char inflate_copyright[4095,139600
struct internal_state internal_state4104,139976
#define base 4108,140113
#define next 4109,140136
#define exop 4110,140159
#define bits 4111,140187
local const uInt cplens[4130,140929
local const uInt cplext[4134,141188
local const uInt cpdist[4137,141397
local const uInt cpdext[4141,141640
#define BMAX 4180,143745
#define N_MAX 4181,143806
  uInt inflate_hufts;4184,143890
local int huft_build(4187,143920
#define C0 4226,146099
#define C2 4227,146120
#define C4 4228,146143
int inflate_trees_bits(4391,151102
int inflate_trees_dynamic(4412,151692
  return Z_OK;4465,153223
local int fixed_built 4470,153293
#define FIXEDH 4471,153320
local inflate_huft fixed_mem[4472,153387
local uInt fixed_bl;4473,153425
local uInt fixed_bd;4474,153446
local inflate_huft *fixed_tl;4475,153467
local inflate_huft *fixed_td;4476,153497
local voidpf falloc(4479,153529
int inflate_trees_fixed(4491,153865
int inflate_trees_free(4540,155217
#define base 4603,156814
#define next 4604,156837
#define exop 4605,156860
#define bits 4606,156888
struct inflate_codes_state inflate_codes_state4609,156951
inflate_codes_statef *inflate_codes_new(4648,158451
int inflate_codes(4670,158937
void inflate_codes_free(4830,163779
struct inflate_codes_state inflate_codes_state4852,164302
uInt inflate_mask[4856,164427
int inflate_flush(4864,164679
struct inflate_codes_state inflate_codes_state4949,166488
#define base 4953,166629
#define next 4954,166652
#define exop 4955,166675
#define bits 4956,166703
#define GRABBITS(GRABBITS4959,166807
#define UNGRAB 4960,166873
int inflate_fast(4967,167188
struct internal_state internal_state5123,172183
const char *z_errmsg[5130,172307
const char *zlibVersion(5143,172793
void z_error 5149,172867
void zmemcpy(5159,172975
int zmemcmp(5170,173178
void zmemzero(5183,173374
#  define MY_ZCALLOC5199,173771
#define MAX_PTR 5207,174054
local int next_ptr 5210,174094
typedef struct ptr_table_s ptr_table_s5212,174119
} ptr_table;ptr_table5215,174188
local ptr_table table[5217,174202
voidpf zcalloc 5225,174577
void  zcfree 5249,175314
#  define MY_ZCALLOC5277,175944
#  define _halloc 5280,176011
#  define _hfree 5281,176037
voidpf zcalloc 5284,176070
void  zcfree 5290,176233
voidpf zcalloc 5306,176552
void  zcfree 5315,176756
#define BASE 5336,177216
#define NMAX 5337,177275
#define DO1(DO15340,177370
#define DO2(DO25341,177416
#define DO4(DO45342,177462
#define DO8(DO85343,177508
#define DO16(DO165344,177554
uLong adler32(5347,177679

drivers/net/zlib.h,3507
#define _ZLIB_H50,1854
#define _ZCONF_H66,2189
#  define deflateInit_	73,2386
#  define deflate	74,2424
#  define deflateEnd	75,2452
#  define inflateInit_ 76,2486
#  define inflate	77,2525
#  define inflateEnd	78,2553
#  define deflateInit2_	79,2587
#  define deflateSetDictionary 80,2627
#  define deflateCopy	81,2681
#  define deflateReset	82,2717
#  define deflateParams	83,2755
#  define inflateInit2_	84,2795
#  define inflateSetDictionary 85,2835
#  define inflateSync	86,2889
#  define inflateReset	87,2925
#  define compress	88,2963
#  define uncompress	89,2993
#  define adler32	90,3027
#  define crc32	91,3055
#  define get_crc_table 92,3080
#  define Byte	94,3121
#  define uInt	95,3144
#  define uLong	96,3167
#  define Bytef	97,3192
#  define charf	98,3224
#  define intf	99,3249
#  define uIntf	100,3272
#  define uLongf	101,3297
#  define voidpf	102,3323
#  define voidp	103,3349
#  define WIN32107,3445
#    define __32BIT__111,3565
#  define MSDOS115,3645
#  define MAXSEG_64K123,3855
#  define UNALIGNED_OK126,3896
#  define STDC130,4006
#  define STDC133,4094
#    define const138,4204
#  define NO_DUMMY_DECL144,4376
#    define MAX_MEM_LEVEL 150,4499
#    define MAX_MEM_LEVEL 152,4535
#  define MAX_WBITS 158,4666
#    define OF(OF178,5444
#    define OF(OF180,5479
#  define SMALL_MEDIUM192,5943
#    define FAR 194,5984
#    define FAR 196,6014
#    define SMALL_MEDIUM201,6143
#    define FAR 202,6168
#   define FAR206,6218
typedef unsigned char  Byte;Byte209,6241
typedef unsigned int   uInt;uInt210,6284
typedef unsigned long  uLong;uLong211,6336
#  define Bytef 215,6490
   typedef Byte  FAR Bytef;Bytef217,6521
typedef char  FAR charf;charf219,6556
typedef int   FAR intf;intf220,6581
typedef uInt  FAR uIntf;uIntf221,6605
typedef uLong FAR uLongf;uLongf222,6630
   typedef void FAR *voidpf;voidpf225,6669
   typedef void     *voidp;voidp226,6698
   typedef Byte FAR *voidpf;voidpf228,6732
   typedef Byte     *voidp;voidp229,6761
#  define EXPORT 236,6940
#  define EXPORT238,6971
#define ZLIB_VERSION 244,7037
typedef voidpf (*alloc_func)alloc_func270,8243
typedef void   (*free_func)free_func271,8316
typedef struct z_stream_s z_stream_s275,8407
} z_stream;z_stream294,9355
typedef z_stream FAR *z_streamp;z_streamp296,9368
#define Z_NO_FLUSH 329,11026
#define Z_PARTIAL_FLUSH 330,11052
#define Z_PACKET_FLUSH	331,11078
#define Z_SYNC_FLUSH 332,11103
#define Z_FULL_FLUSH 333,11129
#define Z_FINISH 334,11155
#define Z_OK 337,11242
#define Z_STREAM_END 338,11268
#define Z_NEED_DICT 339,11294
#define Z_ERRNO 340,11320
#define Z_STREAM_ERROR 341,11348
#define Z_DATA_ERROR 342,11376
#define Z_MEM_ERROR 343,11404
#define Z_BUF_ERROR 344,11432
#define Z_VERSION_ERROR 345,11460
#define Z_NO_COMPRESSION 350,11642
#define Z_BEST_SPEED 351,11677
#define Z_BEST_COMPRESSION 352,11712
#define Z_DEFAULT_COMPRESSION 353,11747
#define Z_FILTERED 356,11809
#define Z_HUFFMAN_ONLY 357,11841
#define Z_DEFAULT_STRATEGY 358,11873
#define Z_BINARY 361,11971
#define Z_ASCII 362,11992
#define Z_UNKNOWN 363,12013
#define Z_DEFLATED 366,12080
#define Z_NULL 369,12182
#define zlib_version 371,12247
typedef voidp gzFile;gzFile865,37309
#define deflateInit(deflateInit989,42342
#define inflateInit(inflateInit991,42453
#define deflateInit2(deflateInit2993,42557
#define inflateInit2(inflateInit2996,42767
    struct internal_state internal_state1000,42936

drivers/net/7990.c,702
#define WRITERAP(WRITERAP48,1385
#define WRITERDP(WRITERDP49,1426
#define READRDP(READRDP50,1467
#define DECLARE_LL 55,1678
#define PRINT_RINGS(PRINT_RINGS60,1808
#define PRINT_RINGS(PRINT_RINGS77,2544
static void load_csrs 81,2657
#define DEBUG_IRING 101,3244
static void lance_init_ring 104,3346
static int init_restart_lance 197,6978
static int lance_reset 222,7704
static int lance_rx 245,8261
static int lance_tx 323,11617
static void lance_interrupt 406,15064
int lance_open 463,16884
int lance_close 475,17252
int lance_start_xmit 492,17581
struct net_device_stats *lance_get_stats 563,19732
static void lance_load_multicast 571,19944
void lance_set_multicast 622,21577

drivers/net/smc-ultra32.c,1011
static const char *version 46,2063
#define ULTRA32_CMDREG	76,2969
#define	 ULTRA32_RESET	77,3033
#define	 ULTRA32_MEMENB	78,3099
#define ULTRA32_NIC_OFFSET 79,3160
#define ULTRA32_IO_EXTENT 80,3236
#define EN0_ERWCNT	81,3265
#define ULTRA32_BASE	88,3502
#define ULTRA32_ID	89,3529
#define ULTRA32_IDPORT	90,3559
#define ULTRA32_CFG1	92,3658
#define ULTRA32_CFG2	93,3696
#define ULTRA32_CFG3	94,3734
#define ULTRA32_CFG4	95,3775
#define ULTRA32_CFG5	96,3816
#define ULTRA32_CFG6	97,3857
#define ULTRA32_CFG7	98,3898
__initfunc(106,4087
__initfunc(129,4870
static int ultra32_open(243,8223
static int ultra32_close(264,8978
static void ultra32_reset_8390(285,9399
static void ultra32_get_8390_hdr(305,10139
static void ultra32_block_input(328,10957
static void ultra32_block_output(356,11908
#define MAX_ULTRA32_CARDS 371,12289
#define NAMELEN	372,12362
static char namelist[373,12424
static struct device dev_ultra[374,12484
int init_module(383,12643
void cleanup_module(405,13134

drivers/net/am79c961a.c,723
#define TX_BUFFERS 31,645
#define RX_BUFFERS 32,667
static unsigned int net_debug 36,714
static char *version 41,819
#define FUNC_PROLOGUE 43,897
write_rreg 49,1071
write_ireg 58,1282
#define am_writeword(am_writeword66,1473
am_writebuffer(72,1621
read_rreg 107,2485
am_readword 118,2716
am_readbuffer(130,2938
am79c961_ramtest(171,3965
am79c961_init_for_open(199,4638
am79c961_init(267,6650
am79c961_probe1(289,7050
am79c961_probe(354,8589
am79c961_open(377,9135
am79c961_close(400,9546
static struct enet_statistics *am79c961_getstats 417,9792
static void am79c961_setmulticastlist 429,10169
am79c961_sendpacket(449,10492
am79c961_interrupt(495,11809
am79c961_rx(530,12642
am79c961_tx(592,14080

drivers/net/epic100.c,6527
static const char *version 20,707
#define TX_RING_SIZE	29,1092
#define RX_RING_SIZE	30,1116
static int rx_copybreak 34,1265
static int max_interrupt_work 37,1366
#define TX_TIMEOUT 41,1527
#define PKT_BUF_SZ	43,1565
#define TX_FIFO_THRESH 46,1692
#define RX_FIFO_THRESH 47,1756
#define MOD_INC_USE_COUNT56,1983
#define MOD_DEC_USE_COUNT57,2009
#define PCI_SUPPORT_VER269,2283
#define RUN_AT(RUN_AT90,2856
#define test_and_set_bit(test_and_set_bit102,3311
#define	net_device_stats 105,3407
#define NETSTATS_VER2106,3448
#define DEV_FREE_SKB(DEV_FREE_SKB109,3510
#define DEV_FREE_SKB(DEV_FREE_SKB111,3617
#define EPIC_TOTAL_SIZE 115,3693
#define epic_debug 117,3724
static int epic_debug 118,3749
enum pci_flags_bit pci_flags_bit158,4776
	PCI_USES_IO=159,4797
	PCI_USES_IO=1, PCI_USES_MEM=159,4797
	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=159,4797
	PCI_ADDR0=160,4848
	PCI_ADDR0=0x10<160,4848
	PCI_ADDR0=0x10<<0, PCI_ADDR1=160,4848
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<160,4848
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=160,4848
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<160,4848
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=160,4848
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<160,4848
struct chip_info chip_info163,4929
} chip_tbl[169,5180
enum epic_registers epic_registers178,5513
  COMMAND=179,5535
  COMMAND=0, INTSTAT=179,5535
  COMMAND=0, INTSTAT=4, INTMASK=179,5535
  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=179,5535
  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C,179,5535
  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=179,5535
  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10,179,5535
  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=179,5535
  COMMAND=0, INTSTAT=4, INTMASK=8, GENCTL=0x0C, NVCTL=0x10, EECTL=0x14,179,5535
  PCIBurstCnt=180,5607
  PCIBurstCnt=0x18,180,5607
  TEST1=181,5627
  TEST1=0x1C,181,5627
  TEST1=0x1C, CRCCNT=181,5627
  TEST1=0x1C, CRCCNT=0x20,181,5627
  TEST1=0x1C, CRCCNT=0x20, ALICNT=181,5627
  TEST1=0x1C, CRCCNT=0x20, ALICNT=0x24,181,5627
  TEST1=0x1C, CRCCNT=0x20, ALICNT=0x24, MPCNT=181,5627
  TEST1=0x1C, CRCCNT=0x20, ALICNT=0x24, MPCNT=0x28,181,5627
  MIICtrl=182,5704
  MIICtrl=0x30,182,5704
  MIICtrl=0x30, MIIData=182,5704
  MIICtrl=0x30, MIIData=0x34,182,5704
  MIICtrl=0x30, MIIData=0x34, MIICfg=182,5704
  MIICtrl=0x30, MIIData=0x34, MIICfg=0x38,182,5704
  LAN0=183,5747
  MC0=184,5782
  RxCtrl=185,5827
  RxCtrl=96, TxCtrl=185,5827
  RxCtrl=96, TxCtrl=112, TxSTAT=185,5827
  RxCtrl=96, TxCtrl=112, TxSTAT=0x74,185,5827
  PRxCDAR=186,5865
  PRxCDAR=0x84,186,5865
  PRxCDAR=0x84, RxSTAT=186,5865
  PRxCDAR=0x84, RxSTAT=0xA4,186,5865
  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=186,5865
  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0,186,5865
  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=186,5865
  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4,186,5865
  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4, TxThresh=186,5865
  PRxCDAR=0x84, RxSTAT=0xA4, EarlyRx=0xB0, PTxCDAR=0xC4, TxThresh=0xDC,186,5865
enum IntrStatus IntrStatus190,6003
  TxIdle=191,6021
  TxIdle=0x40000,191,6021
  TxIdle=0x40000, RxIdle=191,6021
  TxIdle=0x40000, RxIdle=0x20000,191,6021
  TxIdle=0x40000, RxIdle=0x20000, IntrSummary=191,6021
  TxIdle=0x40000, RxIdle=0x20000, IntrSummary=0x010000,191,6021
  PCIBusErr170=192,6077
  PCIBusErr170=0x7000,192,6077
  PCIBusErr170=0x7000, PCIBusErr175=192,6077
  PCIBusErr170=0x7000, PCIBusErr175=0x1000,192,6077
  PCIBusErr170=0x7000, PCIBusErr175=0x1000, PhyEvent175=192,6077
  PCIBusErr170=0x7000, PCIBusErr175=0x1000, PhyEvent175=0x8000,192,6077
  RxStarted=193,6141
  RxStarted=0x0800,193,6141
  RxStarted=0x0800, RxEarlyWarn=193,6141
  RxStarted=0x0800, RxEarlyWarn=0x0400,193,6141
  RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=193,6141
  RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=0x0200,193,6141
  RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=0x0200, TxUnderrun=193,6141
  RxStarted=0x0800, RxEarlyWarn=0x0400, CntFull=0x0200, TxUnderrun=0x0100,193,6141
  TxEmpty=194,6216
  TxEmpty=0x0080,194,6216
  TxEmpty=0x0080, TxDone=194,6216
  TxEmpty=0x0080, TxDone=0x0020,194,6216
  TxEmpty=0x0080, TxDone=0x0020, RxError=194,6216
  TxEmpty=0x0080, TxDone=0x0020, RxError=0x0010,194,6216
  RxOverflow=195,6265
  RxOverflow=0x0008,195,6265
  RxOverflow=0x0008, RxFull=195,6265
  RxOverflow=0x0008, RxFull=0x0004,195,6265
  RxOverflow=0x0008, RxFull=0x0004, RxHeader=195,6265
  RxOverflow=0x0008, RxFull=0x0004, RxHeader=0x0002,195,6265
  RxOverflow=0x0008, RxFull=0x0004, RxHeader=0x0002, RxDone=195,6265
  RxOverflow=0x0008, RxFull=0x0004, RxHeader=0x0002, RxDone=0x0001,195,6265
struct epic_tx_desc epic_tx_desc200,6386
struct epic_rx_desc epic_rx_desc209,6495
struct epic_private epic_private217,6590
#define MAX_UNITS 252,8023
static int full_duplex[253,8043
static int options[254,8113
static struct device *root_epic_dev 274,9087
int epic100_probe(277,9148
static struct device *epic_probe1(384,12512
#define EE_SHIFT_CLK	505,16052
#define EE_CS	506,16104
#define EE_DATA_WRITE	507,16151
#define EE_WRITE_0	508,16205
#define EE_WRITE_1	509,16230
#define EE_DATA_READ	510,16255
#define EE_ENB	511,16309
#define eeprom_delay(eeprom_delay518,16481
#define eeprom_delay(eeprom_delay520,16527
#define EE_WRITE_CMD	524,16645
#define EE_READ64_CMD	525,16675
#define EE_READ256_CMD	526,16706
#define EE_ERASE_CMD	527,16738
static int read_eeprom(529,16769
#define MII_READOP	563,17608
#define MII_WRITEOP	564,17630
static int mdio_read(565,17653
static void mdio_write(577,17967
epic_open(592,18274
static void epic_pause(683,21067
static void epic_restart(704,21676
static void epic_timer(753,23251
static void epic_tx_timeout(787,24374
epic_init_ring(818,25259
epic_start_xmit(859,26570
static void epic_interrupt(921,28588
static int epic_rx(1066,32803
static int epic_close(1141,35253
static struct net_device_stats *epic_get_stats(1197,36632
static unsigned const ethernet_polynomial_le 1220,37459
static inline unsigned ether_crc_le(1221,37519
static void set_rx_mode(1239,37905
static int mii_ioctl(1278,39296
static dev_node_t *epic_attach(1325,40547
static void epic_suspend(1357,41523
static void epic_resume(1372,41981
static void epic_detach(1384,42328
struct driver_operations epic_ops 1401,42750
int init_module(1410,42904
void cleanup_module(1423,43078

drivers/net/ne2k-pci.c,754
static const char *version 26,884
static int debug 48,1431
#define USE_LONGIO53,1577
pci_clone_list[65,1854
pci_clone_list[] __initdata 65,1854
#define NE_BASE	79,2226
#define NE_CMD	80,2260
#define NE_DATAPORT	81,2282
#define NE_RESET	82,2349
#define NE_IO_EXTENT	83,2418
#define NESM_START_PG	85,2445
#define NESM_STOP_PG	86,2502
struct ne2k_pci_card ne2k_pci_card105,3232
static struct ne2k_pci_card *ne2k_card_list 111,3405
init_module(116,3477
cleanup_module(135,3792
struct netdev_entry netcard_drv 169,4769
__initfunc 173,4859
__initfunc 250,7133
ne2k_pci_open(395,11282
ne2k_pci_close(405,11464
ne2k_pci_reset_8390(416,11728
ne2k_pci_get_8390_hdr(442,12512
ne2k_pci_block_input(480,13797
ne2k_pci_block_output(522,15018

drivers/net/82596.c,3358
static const char *version 38,1357
#define WSWAPrfd(WSWAPrfd75,2214
#define WSWAPrbd(WSWAPrbd76,2295
#define WSWAPiscp(WSWAPiscp77,2376
#define WSWAPscb(WSWAPscb78,2457
#define WSWAPcmd(WSWAPcmd79,2538
#define WSWAPtbd(WSWAPtbd80,2619
#define WSWAPchar(WSWAPchar81,2700
#define ISCP_BUSY	82,2781
#define MACH_IS_APRICOT	83,2810
#define WSWAPrfd(WSWAPrfd85,2842
#define WSWAPiscp(WSWAPiscp86,2864
#define WSWAPscb(WSWAPscb87,2911
#define WSWAPcmd(WSWAPcmd88,2956
#define WSWAPtbd(WSWAPtbd89,2978
#define WSWAPchar(WSWAPchar90,3000
#define ISCP_BUSY	91,3023
#define MACH_IS_APRICOT	92,3048
#define PORT_RESET	101,3344
#define PORT_SELFTEST	102,3387
#define PORT_ALTSCP	103,3430
#define PORT_ALTDUMP	104,3484
#define check_region(check_region107,3566
#define request_region(request_region108,3601
#define alloc_skb(alloc_skb112,3686
#define kfree_skbmem(kfree_skbmem113,3762
#define APRICOT_DEBUG 116,3822
int i596_debug 119,3868
int i596_debug 121,3906
#define I596_TOTAL_SIZE 124,3934
#define I596_NULL 126,3962
#define CMD_EOL	128,3984
#define CMD_SUSP	129,4050
#define CMD_INTR	130,4105
#define CMD_FLEX	132,4163
enum commands commands134,4223
	CmdNOp 135,4239
	CmdNOp = 0, CmdSASetup 135,4239
	CmdNOp = 0, CmdSASetup = 1, CmdConfigure 135,4239
	CmdNOp = 0, CmdSASetup = 1, CmdConfigure = 2, CmdMulticastList 135,4239
	CmdTx 136,4308
	CmdTx = 4, CmdTDR 136,4308
	CmdTx = 4, CmdTDR = 5, CmdDump 136,4308
	CmdTx = 4, CmdTDR = 5, CmdDump = 6, CmdDiagnose 136,4308
#define STAT_C	139,4365
#define STAT_B	140,4419
#define STAT_OK	141,4471
#define STAT_A	142,4521
#define	 CUC_START	144,4567
#define	 CUC_RESUME	145,4593
#define	 CUC_SUSPEND 146,4620
#define	 CUC_ABORT	147,4651
#define	 RX_START	148,4677
#define	 RX_RESUME	149,4702
#define	 RX_SUSPEND	150,4728
#define	 RX_ABORT	151,4755
struct i596_reg i596_reg153,4781
struct i596_cmd i596_cmd159,4870
#define EOF	165,4965
#define SIZE_MASK	166,4985
struct i596_tbd i596_tbd168,5011
struct tx_cmd tx_cmd175,5113
struct i596_rfd i596_rfd183,5276
#define RX_RING_SIZE 193,5439
struct i596_scb i596_scb195,5464
struct i596_iscp i596_iscp210,5782
struct i596_scp i596_scp215,5849
struct i596_private i596_private221,5939
char init_setup[240,6403
static int ticks_limit 270,7396
static int max_cmd_backlog 271,7425
static inline void CA(274,7461
static inline void MPU_PORT(294,7836
static void i596_error(316,8414
static inline int init_rx_bufs(341,9354
static inline void remove_rx_bufs(376,10057
static inline void init_i596_mem(391,10389
static inline int i596_rx(531,13563
static inline void i596_cleanup_cmd(599,15258
static inline void i596_reset(648,16280
static void i596_add_cmd(691,17114
static int i596_open(749,18682
static int i596_start_xmit(782,19405
static void print_eth(864,21606
__initfunc(881,21994
static void i596_interrupt(984,24693
static int i596_close(1179,29732
 i596_get_stats(1242,31055
static void set_multicast_list(1253,31245
static unsigned int i596_portlist[1311,33074
static unsigned int i596_portlist[] __initdata 1311,33074
struct netdev_entry i596_drv 1313,33135
static char devicename[1318,33250
static struct device dev_apricot 1320,33284
static int io 1327,33452
static int irq 1328,33475
int init_module(1331,33520
void cleanup_module(1340,33667

drivers/net/hplance.c,473
#define LANCE_LOG_TX_BUFFERS 40,1035
#define LANCE_LOG_RX_BUFFERS 41,1066
struct hplance_private hplance_private46,1211
static struct hplance_private *root_hplance_dev 66,2019
__initfunc(70,2141
__initfunc 101,3081
static void hplance_writerap(175,6101
static void hplance_writerdp(183,6360
static unsigned short hplance_readrdp(191,6619
static int hplance_open(201,6911
static int hplance_close(217,7404
int init_module(228,7771
void cleanup_module(234,7865

drivers/net/bmac.c,3234
#define trunc_page(trunc_page24,564
#define round_page(round_page25,655
#define ENET_CRCPOLY 30,816
#define SUNHME_MULTICAST33,910
#define N_RX_RING	35,936
#define N_TX_RING	36,957
#define MAX_TX_ACTIVE	37,978
#define ETHERCRC	38,1002
#define ETHERMINPACKET	39,1021
#define ETHERMTU	40,1047
#define RX_BUFLEN	41,1069
#define TX_TIMEOUT	42,1118
#define TX_DMA_ERR	45,1190
#define XXDEBUG(XXDEBUG47,1215
struct bmac_data bmac_data49,1238
typedef struct bmac_reg_entry bmac_reg_entry76,1968
} bmac_reg_entry_t;bmac_reg_entry_t79,2041
#define N_REG_ENTRIES 81,2062
bmac_reg_entry_t reg_entries[83,2088
struct device *bmac_devs 117,2734
static int is_bmac_plus;118,2767
static unsigned char dummy_buf[124,2877
#define PRIV_BYTES	133,3154
#define	DBDMA_SET(DBDMA_SET158,4464
#define	DBDMA_CLEAR(DBDMA_CLEAR159,4507
dbdma_st32(162,4567
dbdma_ld32(169,4738
dbdma_stop(177,4883
dbdma_continue(187,5139
dbdma_reset(195,5322
dbdma_setcmd(204,5585
void bmwrite(217,5935
volatile unsigned short bmread(224,6088
bmac_reset_chip(230,6238
#define MIFDELAY	247,6653
bmac_mif_readbits(250,6703
bmac_mif_writebits(270,7029
bmac_mif_read(284,7263
bmac_mif_write(305,7718
bmac_init_registers(318,8046
bmac_disable_interrupts(399,10220
bmac_enable_interrupts(405,10320
bmac_start_chip(413,10429
bmac_init_chip(432,10923
static int bmac_set_address(451,11302
static inline void bmac_set_timeout(475,11832
bmac_construct_xmt(493,12280
bmac_construct_rxbuff(507,12568
bitrev(514,12808
bmac_init_tx_ring(525,12936
bmac_init_rx_ring(549,13471
static int bmac_transmit_packet(583,14345
static int rxintcount 615,15127
static void bmac_rxdma_intr(617,15155
static int txintcount 683,16639
static void bmac_txdma_intr(685,16667
static struct net_device_stats *bmac_stats(733,17797
static int reverse6[742,18018
crc416(754,18389
bmac_crc(782,19026
bmac_addhash(800,19474
bmac_removehash(815,19908
bmac_rx_off(836,20596
bmac_rx_on(849,20829
bmac_update_hash_table_mask(867,21341
bmac_add_multi(877,21697
bmac_remove_multi(889,22038
static void bmac_set_multicast(905,22545
#define CRC_POLYNOMIAL_BE 946,23939
#define CRC_POLYNOMIAL_LE 947,24010
static void bmac_set_multicast(949,24085
static int miscintcount 1013,25608
static void bmac_misc_intr(1015,25638
#define SROMAddressLength	1041,26630
#define DataInOn	1042,26658
#define DataInOff	1043,26683
#define Clk	1044,26709
#define ChipSelect	1045,26730
#define SDIShiftCount	1046,26757
#define SD0ShiftCount	1047,26782
#define	DelayValue	1048,26807
#define SROMStartOffset	1049,26861
#define SROMReadCount	1050,26912
#define SROMAddressBits	1051,26977
#define EnetAddressOffset	1052,27004
bmac_clock_out_bit(1055,27055
bmac_clock_in_bit(1074,27402
reset_and_select_srom(1092,27782
read_srom(1105,28045
bmac_verify_checksum(1134,28623
bmac_get_station_address(1147,28868
static int bmac_reset_and_enable(1161,29182
bmac_probe(1194,30039
static int bmac_open(1325,33715
static int bmac_close(1336,33905
bmac_start(1382,35077
bmac_output(1402,35458
static void bmac_tx_timeout(1410,35613
static void dump_dbdma(1484,37911
bmac_proc_info(1502,38226
int init_module(1540,38997
void cleanup_module(1549,39133

drivers/net/sktr.c,2513
static const char *version 43,1474
static unsigned int sktr_portlist[79,2360
static unsigned int sktr_portlist[] __initdata 79,2360
static unsigned short sktr_irqlist[87,2616
static int sktr_dmalist[93,2741
static int sktr_dmalist[] __initdata 93,2741
static char *pci_cardname 99,2816
static char *isa_cardname 100,2868
static char *AdapterName;101,2920
#define SKTR_DEBUG 107,3061
static unsigned int sktr_debug 109,3089
#define SKTR_IO_EXTENT 112,3192
__initfunc(189,6492
__initfunc(220,7133
__initfunc(298,9091
__initfunc(389,11863
__initfunc(430,12862
__initfunc(442,13139
static int sktr_open(482,14119
static void sktr_timer_end_wait(549,15555
static int sktr_chipset_init(566,15847
static void sktr_init_net_local(623,16942
static void sktr_init_ipb(721,19696
static void sktr_init_opb(742,20159
static void sktr_open_adapter(780,21139
static void sktr_disable_interrupts(797,21483
static void sktr_enable_interrupts(808,21711
static void sktr_exec_cmd(818,21884
static unsigned char *sktr_fix_srouting(833,22257
static int sktr_send_packet(857,22823
static void sktr_hardware_send_packet(908,24055
static void sktr_write_tpl_status(990,26388
static void sktr_chk_src_addr(995,26481
static void sktr_timer_chk(1014,26907
static void sktr_interrupt(1045,27667
static void sktr_reset_interrupt(1141,29567
static unsigned char sktr_chk_ssb(1168,30287
static void sktr_cmd_status_irq(1227,32086
static int sktr_close(1424,37780
static struct enet_statistics *sktr_get_stats(1475,38772
static void sktr_set_multicast_list(1485,39011
static void sktr_wait(1525,39835
static void sktr_exec_sifcmd(1541,40111
static int sktr_reset_adapter(1563,40692
static int sktr_bringup_diags(1632,42264
static int sktr_init_adapter(1687,43696
static void sktr_chk_outstanding_cmds(1789,46409
static void sktr_ring_status_irq(1969,51162
static void sktr_chk_irq(2039,53021
static void sktr_read_ptr(2198,56662
static void sktr_read_ram(2217,57157
static void sktr_read_addr(2258,58113
static void sktr_cancel_tx_queue(2280,58539
static void sktr_tx_status_irq(2324,59439
static void sktr_rcv_status_irq(2398,61130
static void sktr_write_rpl_status(2573,65757
static void sktr_update_rcv_stats(2585,66018
static unsigned char sktr_chk_frame(2601,66391
static void sktr_dump(2621,66733
static struct device* dev_sktr[2637,67095
static int io[2638,67146
static int irq[2639,67191
static int mem[2640,67238
int init_module(2646,67476
void cleanup_module(2681,68446

drivers/net/bmac.h,3719
#define	XIFC	21,592
#	define	TxOutputEnable	22,648
#	define	XIFLoopback	23,706
#	define	MIILoopback	24,765
#	define	MIILoopbackBits	25,824
#	define	MIIBuffDisable	26,856
#	define	SQETestEnable	27,920
#	define	SQETimeWindow	28,972
#	define	XIFLanceMode	29,1024
#	define	XIFLanceIPG0	30,1077
#define	TXFIFOCSR	31,1128
#	define	TxFIFOEnable	32,1182
#define	TXTH	33,1211
#	define	TxThreshold	34,1258
#define RXFIFOCSR	35,1286
#	define	RxFIFOEnable	36,1339
#define MEMADD	37,1368
#define MEMDATAHI	38,1431
#define MEMDATALO	39,1508
#define XCVRIF	40,1584
#	define	COLActiveLow	41,1644
#	define	SerialMode	42,1673
#	define	ClkBit	43,1700
#	define	LinkStatus	44,1724
#define CHIPID 45,1751
#define	MIFCSR	46,1797
#define	SROMCSR	47,1831
#	define	ChipSelect	48,1875
#	define	Clk	49,1902
#define TXPNTR	50,1923
#define	RXPNTR	51,1970
#define	STATUS	52,2016
#define	INTDISABLE	53,2077
#	define	FrameReceived	55,2213
#	define	RxFrameCntExp	56,2270
#	define	RxAlignCntExp	57,2340
#	define	RxCRCCntExp	58,2408
#	define	RxLenCntExp	59,2472
#	define	RxOverFlow	60,2539
#	define	RxCodeViolation	61,2598
#	define	SQETestError	62,2671
#	define	FrameSent	63,2736
#	define	TxUnderrun	64,2792
#	define	TxMaxSizeError	65,2852
#	define	TxNormalCollExp	66,2915
#	define	TxExcessCollExp	67,2990
#	define	TxLateCollExp	68,3065
#	define	TxNetworkCollExp 69,3136
#	define	TxDeferTimerExp	70,3211
#	define	RxFIFOToHost	71,3273
#	define	RxNoDescriptors	72,3341
#	define	RxDMAError	73,3411
#	define	RxDMALateErr	74,3473
#	define	RxParityErr	75,3535
#	define	RxTagError	76,3605
#	define	TxEOPError	77,3671
#	define	MIFIntrEvent	78,3743
#	define	TxHostToFIFO	79,3812
#	define	TxFIFOAllSent	80,3881
#	define	TxDMAError	81,3953
#	define	TxDMALateError	82,4016
#	define	TxParityError	83,4088
#	define	TxTagError	84,4161
#	define	PIOError	85,4228
#	define	PIOParityError	86,4287
#	define	DisableAll	87,4359
#	define	EnableAll	88,4390
#	define	EnableNormal	90,4493
#	define	EnableErrors	91,4544
#	define	RxErrorMask	92,4594
#	define	TxErrorMask	94,4713
#define	TXRST	98,4866
#	define	TxResetBit	99,4910
#define	TXCFG	100,4937
#	define	TxMACEnable	101,4996
#	define	TxSlowMode	102,5051
#	define	TxIgnoreColl	103,5101
#	define	TxNoFCS	104,5163
#	define	TxNoBackoff	105,5210
#	define	TxFullDuplex	106,5277
#	define	TxNeverGiveUp	107,5331
#define IPG1	108,5394
#define IPG2	109,5441
#define ALIMIT	110,5488
#define SLOT	111,5541
#define PALEN	112,5588
#define PAPAT	113,5643
#define TXSFD	114,5702
#define JAM	115,5756
#define TXMAX	116,5792
#define TXMIN	117,5843
#define PAREG	118,5894
#define DCNT	119,5955
#define NCCNT	120,6004
#define NTCNT	121,6067
#define EXCNT	122,6129
#define LTCNT	123,6192
#define RSEED	124,6253
#define TXSM	125,6310
#define RXRST	128,6384
#	define	RxResetValue	129,6427
#define RXCFG	130,6456
#	define	RxMACEnable	131,6515
#	define	RxCFGReserved	132,6573
#	define	RxPadStripEnab	133,6603
#	define	RxPromiscEnable	134,6666
#	define	RxNoErrCheck	135,6729
#	define	RxCRCNoStrip	136,6795
#	define	RxRejectOwnPackets 137,6857
#	define	RxGrpPromisck	138,6928
#	define	RxHashFilterEnable 139,6994
#	define	RxAddrFilterEnable 140,7054
#define RXMAX	141,7117
#define RXMIN	142,7170
#define MADD2	143,7223
#define MADD1	144,7280
#define MADD0	145,7339
#define FRCNT	146,7395
#define LECNT	147,7446
#define AECNT	148,7511
#define FECNT	149,7573
#define RXSM	150,7628
#define RXCV	151,7678
#define BHASH3	153,7730
#define BHASH2	154,7784
#define BHASH1	155,7838
#define BHASH0	156,7892
#define AFR2	158,7947
#define AFR1	159,8000
#define AFR0	160,8053
#define AFCR	161,8106
#	define	EnableAllCompares 162,8167

drivers/net/z85230.c,1855
#define RT_LOCK46,1206
#define RT_UNLOCK47,1222
static spinlock_t z8530_buffer_lock 53,1289
extern __inline__ int z8530_read_port(60,1496
extern __inline__ void z8530_write_port(68,1670
extern inline u8 read_zsreg(85,1926
extern inline u8 read_zsdata(98,2159
extern inline void write_zsreg(105,2267
extern inline void write_zsctrl(116,2497
extern inline void write_zsdata(121,2602
u8 z8530_dead_port[130,2763
u8 z8530_hdlc_kilostream[147,3040
u8 z8530_hdlc_kilostream_85230[172,3497
static void z8530_flush_fifo(200,4041
static void z8530_rtsdtr(217,4349
static void z8530_rx(245,5240
static void z8530_tx(309,6149
static void z8530_status(342,6723
struct z8530_irqhandler z8530_sync=378,7472
static void z8530_dma_rx(392,7684
static void z8530_dma_tx(417,8126
static void z8530_dma_status(429,8328
struct z8530_irqhandler z8530_dma_sync=470,9171
struct z8530_irqhandler z8530_txdma_sync=479,9297
static void z8530_rx_clear(495,9620
static void z8530_tx_clear(514,9894
static void z8530_status_clear(520,10008
struct z8530_irqhandler z8530_nop=529,10220
void z8530_interrupt(543,10416
static char reg_init[601,11641
int z8530_sync_open(610,11716
int z8530_sync_close(629,12134
int z8530_sync_dma_open(644,12388
int z8530_sync_dma_close(760,14492
int z8530_sync_txdma_open(826,15626
int z8530_sync_txdma_close(910,17098
static char *z8530_type_name[963,18146
void z8530_describe(969,18214
int z8530_init(986,18481
int z8530_shutdown(1048,19834
int z8530_channel_load(1065,20159
static void z8530_tx_begin(1097,20764
static void z8530_tx_done(1172,22179
void z8530_null_rx(1199,22757
static void z8530_rx_done(1206,22875
extern inline int spans_boundary(1352,25902
int z8530_queue_xmit(1371,26340
struct net_device_stats *z8530_get_stats(1414,27391
int init_module(1427,27556
void cleanup_module(1433,27663

drivers/net/rtl8139.c,9446
static const char *version 22,711
static int max_interrupt_work 27,946
#define rtl8129_debug 28,982
static int rtl8129_debug 29,1010
static int multicast_filter_limit 33,1192
#define MAX_UNITS 36,1279
static int options[37,1348
static int full_duplex[38,1414
#define RX_BUF_LEN_IDX	41,1527
#define RX_BUF_LEN 42,1590
#define TX_BUF_SIZE	44,1707
#define TX_FIFO_THRESH 48,1831
#define RX_FIFO_THRESH	51,1982
#define RX_DMA_BURST	52,2054
#define TX_DMA_BURST	53,2120
#define TX_TIMEOUT 57,2297
#define RUN_AT(RUN_AT80,2947
#define test_and_set_bit(test_and_set_bit85,3041
#define	net_device_stats 88,3137
#define NETSTATS_VER290,3184
#define PCI_SUPPORT_VER195,3361
#define PCI_SUPPORT_VER297,3392
#define dev_free_skb(dev_free_skb100,3457
#define dev_free_skb(dev_free_skb102,3521
#define RTL8129_TOTAL_SIZE 106,3597
enum pci_flags_bit pci_flags_bit160,5340
	PCI_USES_IO=161,5361
	PCI_USES_IO=1, PCI_USES_MEM=161,5361
	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=161,5361
	PCI_ADDR0=162,5412
	PCI_ADDR0=0x10<162,5412
	PCI_ADDR0=0x10<<0, PCI_ADDR1=162,5412
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<162,5412
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=162,5412
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<162,5412
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=162,5412
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<162,5412
struct pci_id_info pci_id_info164,5492
static struct pci_id_info pci_tbl[176,5890
enum {HAS_MII_XCVR=187,6384
enum {HAS_MII_XCVR=0x01,187,6384
enum {HAS_MII_XCVR=0x01, HAS_CHIP_XCVR=187,6384
enum {HAS_MII_XCVR=0x01, HAS_CHIP_XCVR=0x02,187,6384
enum {HAS_MII_XCVR=0x01, HAS_CHIP_XCVR=0x02, HAS_LNK_CHNG=187,6384
enum {HAS_MII_XCVR=0x01, HAS_CHIP_XCVR=0x02, HAS_LNK_CHNG=0x04}187,6384
static int rtl_cap_tbl[188,6449
#define NUM_TX_DESC	194,6606
enum RTL8129_registers RTL8129_registers197,6709
	MAC0=198,6734
	MAR0=199,6781
	TxStatus0=200,6819
	TxStatus0=0x10,200,6819
	TxAddr0=201,6885
	TxAddr0=0x20,201,6885
	RxBuf=202,6943
	RxBuf=0x30,202,6943
	RxBuf=0x30, RxEarlyCnt=202,6943
	RxBuf=0x30, RxEarlyCnt=0x34,202,6943
	RxBuf=0x30, RxEarlyCnt=0x34, RxEarlyStatus=202,6943
	RxBuf=0x30, RxEarlyCnt=0x34, RxEarlyStatus=0x36,202,6943
	ChipCmd=203,6993
	ChipCmd=0x37,203,6993
	ChipCmd=0x37, RxBufPtr=203,6993
	ChipCmd=0x37, RxBufPtr=0x38,203,6993
	ChipCmd=0x37, RxBufPtr=0x38, RxBufAddr=203,6993
	ChipCmd=0x37, RxBufPtr=0x38, RxBufAddr=0x3A,203,6993
	IntrMask=204,7039
	IntrMask=0x3C,204,7039
	IntrMask=0x3C, IntrStatus=204,7039
	IntrMask=0x3C, IntrStatus=0x3E,204,7039
	TxConfig=205,7072
	TxConfig=0x40,205,7072
	TxConfig=0x40, RxConfig=205,7072
	TxConfig=0x40, RxConfig=0x44,205,7072
	Timer=206,7103
	Timer=0x48,206,7103
	RxMissed=207,7153
	RxMissed=0x4C,207,7153
	Cfg9346=208,7207
	Cfg9346=0x50,208,7207
	Cfg9346=0x50, Config0=208,7207
	Cfg9346=0x50, Config0=0x51,208,7207
	Cfg9346=0x50, Config0=0x51, Config1=208,7207
	Cfg9346=0x50, Config0=0x51, Config1=0x52,208,7207
	FlashReg=209,7250
	FlashReg=0x54,209,7250
	FlashReg=0x54, GPPinData=209,7250
	FlashReg=0x54, GPPinData=0x58,209,7250
	FlashReg=0x54, GPPinData=0x58, GPPinDir=209,7250
	FlashReg=0x54, GPPinData=0x58, GPPinDir=0x59,209,7250
	FlashReg=0x54, GPPinData=0x58, GPPinDir=0x59, MII_SMI=209,7250
	FlashReg=0x54, GPPinData=0x58, GPPinDir=0x59, MII_SMI=0x5A,209,7250
	FlashReg=0x54, GPPinData=0x58, GPPinDir=0x59, MII_SMI=0x5A, HltClk=209,7250
	FlashReg=0x54, GPPinData=0x58, GPPinDir=0x59, MII_SMI=0x5A, HltClk=0x5B,209,7250
	MultiIntr=210,7324
	MultiIntr=0x5C,210,7324
	MultiIntr=0x5C, TxSummary=210,7324
	MultiIntr=0x5C, TxSummary=0x60,210,7324
	MII_BMCR=211,7357
	MII_BMCR=0x62,211,7357
	MII_BMCR=0x62, MII_BMSR=211,7357
	MII_BMCR=0x62, MII_BMSR=0x64,211,7357
	MII_BMCR=0x62, MII_BMSR=0x64, NWayAdvert=211,7357
	MII_BMCR=0x62, MII_BMSR=0x64, NWayAdvert=0x66,211,7357
	MII_BMCR=0x62, MII_BMSR=0x64, NWayAdvert=0x66, NWayLPAR=211,7357
	MII_BMCR=0x62, MII_BMSR=0x64, NWayAdvert=0x66, NWayLPAR=0x68,211,7357
	NWayExpansion=212,7420
	NWayExpansion=0x6A,212,7420
	FIFOTMS=214,7507
	FIFOTMS=0x70,214,7507
	CSCR=215,7550
	CSCR=0x74,215,7550
	PARA78=216,7608
	PARA78=0x78,216,7608
	PARA78=0x78, PARA7c=216,7608
	PARA78=0x78, PARA7c=0x7c,216,7608
enum ChipCmdBits ChipCmdBits219,7683
	CmdReset=220,7702
	CmdReset=0x10,220,7702
	CmdReset=0x10, CmdRxEnb=220,7702
	CmdReset=0x10, CmdRxEnb=0x08,220,7702
	CmdReset=0x10, CmdRxEnb=0x08, CmdTxEnb=220,7702
	CmdReset=0x10, CmdRxEnb=0x08, CmdTxEnb=0x04,220,7702
	CmdReset=0x10, CmdRxEnb=0x08, CmdTxEnb=0x04, RxBufEmpty=220,7702
	CmdReset=0x10, CmdRxEnb=0x08, CmdTxEnb=0x04, RxBufEmpty=0x01,220,7702
enum IntrStatusBits IntrStatusBits223,7831
	PCIErr=224,7853
	PCIErr=0x8000,224,7853
	PCIErr=0x8000, PCSTimeout=224,7853
	PCIErr=0x8000, PCSTimeout=0x4000,224,7853
	RxFIFOOver=225,7888
	RxFIFOOver=0x40,225,7888
	RxFIFOOver=0x40, RxUnderrun=225,7888
	RxFIFOOver=0x40, RxUnderrun=0x20,225,7888
	RxFIFOOver=0x40, RxUnderrun=0x20, RxOverflow=225,7888
	RxFIFOOver=0x40, RxUnderrun=0x20, RxOverflow=0x10,225,7888
	TxErr=226,7940
	TxErr=0x08,226,7940
	TxErr=0x08, TxOK=226,7940
	TxErr=0x08, TxOK=0x04,226,7940
	TxErr=0x08, TxOK=0x04, RxErr=226,7940
	TxErr=0x08, TxOK=0x04, RxErr=0x02,226,7940
	TxErr=0x08, TxOK=0x04, RxErr=0x02, RxOK=226,7940
	TxErr=0x08, TxOK=0x04, RxErr=0x02, RxOK=0x01,226,7940
enum TxStatusBits TxStatusBits228,7990
	TxHostOwns=229,8010
	TxHostOwns=0x2000,229,8010
	TxHostOwns=0x2000, TxUnderrun=229,8010
	TxHostOwns=0x2000, TxUnderrun=0x4000,229,8010
	TxHostOwns=0x2000, TxUnderrun=0x4000, TxStatOK=229,8010
	TxHostOwns=0x2000, TxUnderrun=0x4000, TxStatOK=0x8000,229,8010
	TxOutOfWindow=230,8066
	TxOutOfWindow=0x20000000,230,8066
	TxOutOfWindow=0x20000000, TxAborted=230,8066
	TxOutOfWindow=0x20000000, TxAborted=0x40000000,230,8066
	TxOutOfWindow=0x20000000, TxAborted=0x40000000, TxCarrierLost=230,8066
	TxOutOfWindow=0x20000000, TxAborted=0x40000000, TxCarrierLost=0x80000000,230,8066
enum RxStatusBits RxStatusBits232,8144
	RxMulticast=233,8164
	RxMulticast=0x8000,233,8164
	RxMulticast=0x8000, RxPhysical=233,8164
	RxMulticast=0x8000, RxPhysical=0x4000,233,8164
	RxMulticast=0x8000, RxPhysical=0x4000, RxBroadcast=233,8164
	RxMulticast=0x8000, RxPhysical=0x4000, RxBroadcast=0x2000,233,8164
	RxBadSymbol=234,8224
	RxBadSymbol=0x0020,234,8224
	RxBadSymbol=0x0020, RxRunt=234,8224
	RxBadSymbol=0x0020, RxRunt=0x0010,234,8224
	RxBadSymbol=0x0020, RxRunt=0x0010, RxTooLong=234,8224
	RxBadSymbol=0x0020, RxRunt=0x0010, RxTooLong=0x0008,234,8224
	RxBadSymbol=0x0020, RxRunt=0x0010, RxTooLong=0x0008, RxCRCErr=234,8224
	RxBadSymbol=0x0020, RxRunt=0x0010, RxTooLong=0x0008, RxCRCErr=0x0004,234,8224
	RxBadAlign=235,8295
	RxBadAlign=0x0002,235,8295
	RxBadAlign=0x0002, RxStatusOK=235,8295
	RxBadAlign=0x0002, RxStatusOK=0x0001,235,8295
enum CSCRBits CSCRBits238,8338
	CSCR_LinkOKBit=239,8354
	CSCR_LinkOKBit=0x0400,239,8354
	CSCR_LinkOKBit=0x0400, CSCR_LinkChangeBit=239,8354
	CSCR_LinkOKBit=0x0400, CSCR_LinkChangeBit=0x0800,239,8354
	CSCR_LinkStatusBits=240,8405
	CSCR_LinkStatusBits=0x0f000,240,8405
	CSCR_LinkStatusBits=0x0f000, CSCR_LinkDownOffCmd=240,8405
	CSCR_LinkStatusBits=0x0f000, CSCR_LinkDownOffCmd=0x003c0,240,8405
	CSCR_LinkDownCmd=241,8464
	CSCR_LinkDownCmd=0x0f3c0,241,8464
unsigned long param[245,8568
struct rtl8129_private rtl8129_private252,8807
static struct device *root_rtl8129_dev 312,11426
int rtl8139_probe(319,11720
static struct device * rtl8129_probe1(405,14334
#define EE_SHIFT_CLK	513,17417
#define EE_CS	514,17469
#define EE_DATA_WRITE	515,17516
#define EE_WRITE_0	516,17570
#define EE_WRITE_1	517,17595
#define EE_DATA_READ	518,17620
#define EE_ENB	519,17674
#define eeprom_delay(eeprom_delay525,17826
#define EE_WRITE_CMD	528,17924
#define EE_READ_CMD	529,17954
#define EE_ERASE_CMD	530,17984
static int read_eeprom(532,18015
#define MDIO_DIR	572,19125
#define MDIO_DATA_OUT	573,19148
#define MDIO_DATA_IN	574,19175
#define MDIO_CLK	575,19201
#define MDIO_WRITE0 576,19224
#define MDIO_WRITE1 577,19255
#define mdio_delay(mdio_delay579,19303
static char mii_2_8139_map[581,19340
static void mdio_sync(585,19526
static int mdio_read(597,19725
static void mdio_write(630,20659
rtl8129_open(663,21481
static void rtl8129_timer(758,24399
static void rtl8129_tx_timeout(801,25898
rtl8129_init_ring(884,28777
rtl8129_start_xmit(900,29086
static void rtl8129_interrupt(944,30493
static int rtl8129_rx(1122,35906
rtl8129_close(1232,39555
static int mii_ioctl(1277,40598
rtl8129_get_stats(1300,41279
static unsigned const ethernet_polynomial 1316,41676
static inline u32 ether_crc(1317,41733
enum rx_mode_bits rx_mode_bits1332,42083
	AcceptErr=1333,42103
	AcceptErr=0x20,1333,42103
	AcceptErr=0x20, AcceptRunt=1333,42103
	AcceptErr=0x20, AcceptRunt=0x10,1333,42103
	AcceptErr=0x20, AcceptRunt=0x10, AcceptBroadcast=1333,42103
	AcceptErr=0x20, AcceptRunt=0x10, AcceptBroadcast=0x08,1333,42103
	AcceptMulticast=1334,42159
	AcceptMulticast=0x04,1334,42159
	AcceptMulticast=0x04, AcceptMyPhys=1334,42159
	AcceptMulticast=0x04, AcceptMyPhys=0x02,1334,42159
	AcceptMulticast=0x04, AcceptMyPhys=0x02, AcceptAllPhys=1334,42159
	AcceptMulticast=0x04, AcceptMyPhys=0x02, AcceptAllPhys=0x01,1334,42159
static void set_rx_mode(1337,42225
int init_module(1374,43610
cleanup_module(1380,43668

drivers/net/yellowfin.c,7554
static const char *version 19,670
static int max_interrupt_work 25,877
static int min_pci_latency 26,913
static int mtu 27,946
static int bogus_rx 30,1077
static int dma_ctrl 31,1102
static int fifo_cfg 32,1167
static int dma_ctrl 34,1283
static int fifo_cfg 35,1355
static int dma_ctrl 37,1391
static int fifo_cfg 38,1456
static int rx_copybreak 43,1652
#define MAX_UNITS 49,1808
static int options[50,1879
static int full_duplex[51,1945
#define TX_RING_SIZE	59,2294
#define RX_RING_SIZE	60,2318
#define TX_TIMEOUT 64,2467
#define RUN_AT(RUN_AT88,3118
#define test_and_set_bit(test_and_set_bit91,3188
#define	net_device_stats 94,3284
#define NETSTATS_VER295,3325
#define PCI_SUPPORT_VER198,3387
#define pci_present 99,3412
#define DEV_FREE_SKB(DEV_FREE_SKB102,3488
#define DEV_FREE_SKB(DEV_FREE_SKB104,3552
#define YELLOWFIN_TOTAL_SIZE 108,3638
int yellowfin_debug 110,3674
#define PKT_BUF_SZ	191,6930
#define PCI_VENDOR_ID_PKT_ENG	194,7063
#define PCI_DEVICE_ID_SYM58C885	195,7129
#define PCI_DEVICE_ID_YELLOWFIN	196,7170
enum capability_flags capability_flags203,7322
enum capability_flags {HasMII=203,7322
enum capability_flags {HasMII=1, FullTxStatus=203,7322
static struct chip_info chip_info204,7372
} chip_tbl[210,7587
enum yellowfin_offsets yellowfin_offsets219,7878
	TxCtrl=220,7903
	TxCtrl=0x00,220,7903
	TxCtrl=0x00, TxStatus=220,7903
	TxCtrl=0x00, TxStatus=0x04,220,7903
	TxCtrl=0x00, TxStatus=0x04, TxPtr=220,7903
	TxCtrl=0x00, TxStatus=0x04, TxPtr=0x0C,220,7903
	TxIntrSel=221,7944
	TxIntrSel=0x10,221,7944
	TxIntrSel=0x10, TxBranchSel=221,7944
	TxIntrSel=0x10, TxBranchSel=0x14,221,7944
	TxIntrSel=0x10, TxBranchSel=0x14, TxWaitSel=221,7944
	TxIntrSel=0x10, TxBranchSel=0x14, TxWaitSel=0x18,221,7944
	RxCtrl=222,7995
	RxCtrl=0x40,222,7995
	RxCtrl=0x40, RxStatus=222,7995
	RxCtrl=0x40, RxStatus=0x44,222,7995
	RxCtrl=0x40, RxStatus=0x44, RxPtr=222,7995
	RxCtrl=0x40, RxStatus=0x44, RxPtr=0x4C,222,7995
	RxIntrSel=223,8036
	RxIntrSel=0x50,223,8036
	RxIntrSel=0x50, RxBranchSel=223,8036
	RxIntrSel=0x50, RxBranchSel=0x54,223,8036
	RxIntrSel=0x50, RxBranchSel=0x54, RxWaitSel=223,8036
	RxIntrSel=0x50, RxBranchSel=0x54, RxWaitSel=0x58,223,8036
	EventStatus=224,8087
	EventStatus=0x80,224,8087
	EventStatus=0x80, IntrEnb=224,8087
	EventStatus=0x80, IntrEnb=0x82,224,8087
	EventStatus=0x80, IntrEnb=0x82, IntrClear=224,8087
	EventStatus=0x80, IntrEnb=0x82, IntrClear=0x84,224,8087
	EventStatus=0x80, IntrEnb=0x82, IntrClear=0x84, IntrStatus=224,8087
	EventStatus=0x80, IntrEnb=0x82, IntrClear=0x84, IntrStatus=0x86,224,8087
	ChipRev=225,8153
	ChipRev=0x8C,225,8153
	ChipRev=0x8C, DMACtrl=225,8153
	ChipRev=0x8C, DMACtrl=0x90,225,8153
	ChipRev=0x8C, DMACtrl=0x90, Cnfg=225,8153
	ChipRev=0x8C, DMACtrl=0x90, Cnfg=0xA0,225,8153
	ChipRev=0x8C, DMACtrl=0x90, Cnfg=0xA0, FrameGap0=225,8153
	ChipRev=0x8C, DMACtrl=0x90, Cnfg=0xA0, FrameGap0=0xA2,225,8153
	ChipRev=0x8C, DMACtrl=0x90, Cnfg=0xA0, FrameGap0=0xA2, FrameGap1=225,8153
	ChipRev=0x8C, DMACtrl=0x90, Cnfg=0xA0, FrameGap0=0xA2, FrameGap1=0xA4,225,8153
	MII_Cmd=226,8225
	MII_Cmd=0xA6,226,8225
	MII_Cmd=0xA6, MII_Addr=226,8225
	MII_Cmd=0xA6, MII_Addr=0xA8,226,8225
	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=226,8225
	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA,226,8225
	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=226,8225
	MII_Cmd=0xA6, MII_Addr=0xA8, MII_Wr_Data=0xAA, MII_Rd_Data=0xAC,226,8225
	MII_Status=227,8291
	MII_Status=0xAE,227,8291
	RxDepth=228,8309
	RxDepth=0xB8,228,8309
	RxDepth=0xB8, FlowCtrl=228,8309
	RxDepth=0xB8, FlowCtrl=0xBC,228,8309
	AddrMode=229,8339
	AddrMode=0xD0,229,8339
	AddrMode=0xD0, StnAddr=229,8339
	AddrMode=0xD0, StnAddr=0xD2,229,8339
	AddrMode=0xD0, StnAddr=0xD2, HashTbl=229,8339
	AddrMode=0xD0, StnAddr=0xD2, HashTbl=0xD8,229,8339
	AddrMode=0xD0, StnAddr=0xD2, HashTbl=0xD8, FIFOcfg=229,8339
	AddrMode=0xD0, StnAddr=0xD2, HashTbl=0xD8, FIFOcfg=0xF8,229,8339
	EEStatus=230,8397
	EEStatus=0xF0,230,8397
	EEStatus=0xF0, EECtrl=230,8397
	EEStatus=0xF0, EECtrl=0xF1,230,8397
	EEStatus=0xF0, EECtrl=0xF1, EEAddr=230,8397
	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2,230,8397
	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=230,8397
	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3,230,8397
	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3, EEWrite=230,8397
	EEStatus=0xF0, EECtrl=0xF1, EEAddr=0xF2, EERead=0xF3, EEWrite=0xF4,230,8397
	EEFeature=231,8466
	EEFeature=0xF5,231,8466
struct yellowfin_desc yellowfin_desc235,8537
struct tx_status_words tx_status_words244,8652
enum desc_cmd_bits desc_cmd_bits252,8773
	CMD_TX_PKT=253,8794
	CMD_TX_PKT=0x1000,253,8794
	CMD_TX_PKT=0x1000, CMD_RX_BUF=253,8794
	CMD_TX_PKT=0x1000, CMD_RX_BUF=0x2000,253,8794
	CMD_TX_PKT=0x1000, CMD_RX_BUF=0x2000, CMD_TXSTATUS=253,8794
	CMD_TX_PKT=0x1000, CMD_RX_BUF=0x2000, CMD_TXSTATUS=0x3000,253,8794
	CMD_NOP=254,8854
	CMD_NOP=0x6000,254,8854
	CMD_NOP=0x6000, CMD_STOP=254,8854
	CMD_NOP=0x6000, CMD_STOP=0x7000,254,8854
	BRANCH_ALWAYS=255,8888
	BRANCH_ALWAYS=0x0C,255,8888
	BRANCH_ALWAYS=0x0C, INTR_ALWAYS=255,8888
	BRANCH_ALWAYS=0x0C, INTR_ALWAYS=0x30,255,8888
	BRANCH_ALWAYS=0x0C, INTR_ALWAYS=0x30, WAIT_ALWAYS=255,8888
	BRANCH_ALWAYS=0x0C, INTR_ALWAYS=0x30, WAIT_ALWAYS=0x03,255,8888
	BRANCH_IFTRUE=256,8945
	BRANCH_IFTRUE=0x04,256,8945
enum desc_status_bits desc_status_bits260,9006
enum desc_status_bits { RX_EOP=260,9006
enum desc_status_bits { RX_EOP=0x0040,260,9006
enum intr_status_bits intr_status_bits263,9100
	IntrRxDone=264,9124
	IntrRxDone=0x01,264,9124
	IntrRxDone=0x01, IntrRxInvalid=264,9124
	IntrRxDone=0x01, IntrRxInvalid=0x02,264,9124
	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=264,9124
	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=0x04,264,9124
	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=0x04,IntrRxPCIErr=264,9124
	IntrRxDone=0x01, IntrRxInvalid=0x02, IntrRxPCIFault=0x04,IntrRxPCIErr=0x08,264,9124
	IntrTxDone=265,9201
	IntrTxDone=0x10,265,9201
	IntrTxDone=0x10, IntrTxInvalid=265,9201
	IntrTxDone=0x10, IntrTxInvalid=0x20,265,9201
	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=265,9201
	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=0x40,265,9201
	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=0x40,IntrTxPCIErr=265,9201
	IntrTxDone=0x10, IntrTxInvalid=0x20, IntrTxPCIFault=0x40,IntrTxPCIErr=0x80,265,9201
	IntrEarlyRx=266,9278
	IntrEarlyRx=0x100,266,9278
	IntrEarlyRx=0x100, IntrWakeup=266,9278
	IntrEarlyRx=0x100, IntrWakeup=0x200,266,9278
struct yellowfin_private yellowfin_private268,9320
static struct device *root_yellowfin_dev 341,12396
int yellowfin_probe(343,12446
static struct device *yellowfin_probe1(438,15286
static int read_eeprom(533,17949
static int mdio_read(548,18355
static void mdio_write(560,18625
static int yellowfin_open(575,18932
static void yellowfin_timer(658,21550
static void yellowfin_tx_timeout(698,22631
static void yellowfin_init_ring(732,23611
static int yellowfin_start_xmit(800,26022
static void yellowfin_interrupt(872,28254
static int yellowfin_rx(1036,33000
static void yellowfin_error(1170,37935
static int yellowfin_close(1183,38368
static struct enet_statistics *yellowfin_get_stats(1275,41292
static unsigned const ethernet_polynomial_le 1286,41708
static inline unsigned ether_crc_le(1288,41769
static void set_rx_mode(1306,42155
static int mii_ioctl(1353,43882
static int debug 1380,44643
int init_module(1382,44667
void cleanup_module(1390,44767

drivers/net/daynaport.c,1549
static const char *version 21,474
#define WD_START_PG	70,2166
#define WD03_STOP_PG	71,2221
#define WD13_STOP_PG	72,2277
#define DAYNA_MAC_BASE	75,2335
#define DAYNA_8390_BASE	76,2367
#define DAYNA_8390_MEM	77,2408
#define DAYNA_MEMSIZE	78,2440
#define APPLE_8390_BASE	80,2504
#define APPLE_8390_MEM	81,2537
#define APPLE_MEMSIZE	82,2569
#define KINETICS_8390_BASE	84,2640
#define KINETICS_8390_MEM	85,2675
#define KINETICS_MEMSIZE	86,2709
static int test_8390(88,2782
#define NS8390_DAYNA	116,3380
#define NS8390_INTERLAN	117,3404
#define NS8390_KINETICS	118,3431
#define NS8390_APPLE	119,3458
#define NS8390_FARALLON	120,3482
#define NS8390_ASANTE	121,3509
int ns8390_ident(123,3535
int apple_8390_mem_probe(151,4149
int ns8390_probe(200,5283
int ns8390_probe1(339,8374
static int ns8390_open(472,12219
static void ns8390_no_reset(479,12313
static int ns8390_close_card(488,12525
struct nubus_device_specifier nubus_8390=497,12700
static void interlan_reset(507,12818
static void dayna_cpu_memcpy(534,13599
static void cpu_dayna_memcpy(557,14039
static void dayna_get_8390_hdr(580,14481
static void dayna_block_input(588,14793
static void dayna_block_output(613,15495
static void sane_get_8390_hdr(626,15739
static void sane_block_input(634,16058
static void sane_block_output(655,16642
static void word_memcpy_tocard(663,16852
static void word_memcpy_fromcard(675,17052
static void slow_sane_get_8390_hdr(687,17254
static void slow_sane_block_input(695,17592
static void slow_sane_block_output(715,18222

drivers/net/z85230.h,4901
#define _Z8530_H9,203
#define BRG_TO_BPS(BRG_TO_BPS14,303
#define BPS_TO_BRG(BPS_TO_BRG15,360
#define	FLAG	19,460
#define	R0	22,502
#define	R1	23,539
#define	R2	24,552
#define	R3	25,565
#define	R4	26,578
#define	R5	27,591
#define	R6	28,604
#define	R7	29,617
#define	R8	30,630
#define	R9	31,643
#define	R10	32,656
#define	R11	33,671
#define	R12	34,686
#define	R13	35,701
#define	R14	36,716
#define	R15	37,731
#define RPRIME	39,747
#define	NULLCODE	41,813
#define	POINT_HIGH	42,848
#define	RES_EXT_INT	43,908
#define	SEND_ABORT	44,968
#define	RES_RxINT_FC	45,1009
#define	RES_Tx_P	46,1072
#define	ERR_RES	47,1120
#define	RES_H_IUS	48,1160
#define	RES_Rx_CRC	50,1208
#define	RES_Tx_CRC	51,1259
#define	RES_EOM_L	52,1310
#define	EXT_INT_ENAB	56,1380
#define	TxINT_ENAB	57,1426
#define	PAR_SPEC	58,1469
#define	RxINT_DISAB	60,1525
#define	RxINT_FCERR	61,1568
#define	INT_ALL_Rx	62,1638
#define	INT_ERR_Rx	63,1702
#define	WT_RDY_RT	65,1751
#define	WT_FN_RDYFN	66,1798
#define	WT_RDY_ENAB	67,1846
#define	RxENABLE	73,1964
#define	SYNC_L_INH	74,2001
#define	ADD_SM	75,2058
#define	RxCRC_ENAB	76,2111
#define	ENT_HM	77,2154
#define	AUTO_ENAB	78,2197
#define	Rx5	79,2239
#define	Rx7	80,2282
#define	Rx6	81,2326
#define	Rx8	82,2370
#define	PAR_ENA	86,2439
#define	PAR_EVEN	87,2480
#define	SYNC_ENAB	89,2525
#define	SB1	90,2569
#define	SB15	91,2608
#define	SB2	92,2651
#define	MONSYNC	94,2692
#define	BISYNC	95,2738
#define	SDLC	96,2787
#define	EXTSYNC	97,2843
#define	X1CLK	99,2891
#define	X16CLK	100,2930
#define	X32CLK	101,2972
#define	X64CLK	102,3014
#define	TxCRC_ENAB	106,3081
#define	RTS	107,3124
#define	SDLC_CRC	108,3151
#define	TxENAB	109,3190
#define	SND_BRK	110,3226
#define	Tx5	111,3265
#define	Tx7	112,3318
#define	Tx6	113,3362
#define	Tx8	114,3406
#define	DTR	115,3450
#define	VIS	124,3685
#define	NV	125,3728
#define	DLC	126,3757
#define	MIE	127,3797
#define	STATHI	128,3841
#define	NORESET	129,3879
#define	CHRB	130,3927
#define	CHRA	131,3967
#define	FHWRES	132,4007
#define	BIT6	135,4099
#define	LOOPMODE 136,4136
#define	ABUNDER	137,4176
#define	MARKIDLE 138,4233
#define	GAOP	139,4276
#define	NRZ	140,4318
#define	NRZI	141,4347
#define	FM1	142,4381
#define	FM0	143,4425
#define	CRCPS	144,4469
#define	TRxCXT	147,4555
#define	TRxCTC	148,4597
#define	TRxCBR	149,4642
#define	TRxCDP	150,4692
#define	TRxCOI	151,4734
#define	TCRTxCP	152,4766
#define	TCTRxCP	153,4816
#define	TCBR	154,4866
#define	TCDPLL	155,4927
#define	RCRTxCP	156,4982
#define	RCTRxCP	157,5031
#define	RCBR	158,5083
#define	RCDPLL	159,5143
#define	RTxCX	160,5197
#define	BRENABL	167,5435
#define	BRSRC	168,5486
#define	DTRREQ	169,5535
#define	AUTOECHO 170,5579
#define	LOOPBAK	171,5614
#define	SEARCH	172,5656
#define	RMC	173,5700
#define	DISDPLL	174,5743
#define	SSBR	175,5783
#define	SSRTxC	176,5838
#define	SFMM	177,5887
#define	SNRZI	178,5923
#define PRIME	181,6023
#define	ZCIE	182,6087
#define FIFOE	183,6122
#define	DCDIE	184,6156
#define	SYNCIE	185,6185
#define	CTSIE	186,6224
#define	TxUIE	187,6256
#define	BRKIE	188,6300
#define	Rx_CH_AV	192,6364
#define	ZCOUNT	193,6414
#define	Tx_BUF_EMP	194,6451
#define	DCD	195,6496
#define	SYNC_HUNT	196,6523
#define	CTS	197,6562
#define	TxEOM	198,6590
#define	BRK_ABRT	199,6628
#define	ALL_SNT	202,6691
#define	RES3	204,6776
#define	RES4	205,6804
#define	RES5	206,6832
#define	RES6	207,6860
#define	RES7	208,6888
#define	RES8	209,6916
#define	RES18	210,6944
#define	RES28	211,6973
#define	PAR_ERR	213,7040
#define	Rx_OVR	214,7081
#define	CRC_ERR	215,7125
#define	END_FR	216,7171
#define	CHBEXT	221,7339
#define	CHBTxIP	222,7387
#define	CHBRxIP	223,7430
#define	CHAEXT	224,7473
#define	CHATxIP	225,7521
#define	CHARxIP	226,7565
#define	ONLOOP	231,7700
#define	LOOPSEND 232,7732
#define	CLK2MIS	233,7774
#define	CLK1MIS	234,7821
struct z8530_irqhandlerz8530_irqhandler249,8125
struct z8530_channelz8530_channel260,8304
#define Z8530_PORT_SLEEP	312,9736
#define Z8530_PORT_OF(Z8530_PORT_OF313,9772
struct z8530_devz8530_dev374,11374
#define Z8530	380,11542
#define Z85C30	381,11579
#define Z85230	382,11616
extern u8 z8530_dead_port[393,11836
extern u8 z8530_hdlc_kilostream_85230[394,11865
extern u8 z8530_hdlc_kilostream[395,11906
struct z8530_irqhandler z8530_sync,416,12926
struct z8530_irqhandler z8530_sync, z8530_async,416,12926
struct z8530_irqhandler z8530_sync, z8530_async, z8530_nop;416,12926
#define SERIAL_MAGIC 422,13023
#define SERIAL_XMIT_SIZE 428,13123
#define WAKEUP_CHARS	429,13153
#define RS_EVENT_WRITE_WAKEUP	435,13295
#define ZILOG_INITIALIZED	438,13386
#define ZILOG_CALLOUT_ACTIVE	439,13457
#define ZILOG_NORMAL_ACTIVE	440,13529
#define ZILOG_BOOT_AUTOCONF	441,13598
#define ZILOG_CLOSING	442,13672
#define ZILOG_CTS_FLOW	443,13735
#define ZILOG_CHECK_CD	444,13796

drivers/net/am79c961a.h,2106
#define _LINUX_am79c961a_H6,67
#define DEBUG_TX	9,170
#define DEBUG_RX	10,190
#define DEBUG_INT	11,210
#define DEBUG_IC	12,231
#define NET_DEBUG 14,269
#define NET_UID	17,298
#define NET_RDP	18,317
#define NET_RAP	19,339
#define NET_RESET	20,361
#define NET_IDP	21,384
#define CSR0	26,431
#define CSR0_INIT	27,447
#define CSR0_STRT	28,472
#define CSR0_STOP	29,497
#define CSR0_TDMD	30,522
#define CSR0_TXON	31,547
#define CSR0_RXON	32,572
#define CSR0_IENA	33,597
#define CSR0_INTR	34,622
#define CSR0_IDON	35,647
#define CSR0_TINT	36,672
#define CSR0_RINT	37,697
#define CSR0_MERR	38,722
#define CSR0_MISS	39,747
#define CSR0_CERR	40,772
#define CSR0_BABL	41,797
#define CSR0_ERR	42,822
#define CSR3	44,847
#define CSR3_EMBA	45,863
#define CSR3_DXMT2PD	46,888
#define CSR3_LAPPEN	47,916
#define CSR3_IDONM	48,943
#define CSR3_TINTM	49,969
#define CSR3_RINTM	50,995
#define CSR3_MERRM	51,1021
#define CSR3_MISSM	52,1047
#define CSR3_BABLM	53,1073
#define CSR3_MASKALL	54,1099
#define LADRL	56,1128
#define LADRM1	57,1145
#define LADRM2	58,1163
#define LADRH	59,1182
#define PADRL	60,1200
#define PADRM	61,1218
#define PADRH	62,1236
#define MODE	64,1255
#define MODE_DISRX	65,1272
#define MODE_DISTX	66,1298
#define MODE_LOOP	67,1324
#define MODE_DTCRC	68,1349
#define MODE_COLL	69,1375
#define MODE_DRETRY	70,1400
#define MODE_INTLOOP	71,1427
#define MODE_PORT0	72,1455
#define MODE_DRXPA	73,1481
#define MODE_DRXBA	74,1507
#define MODE_PROMISC	75,1533
#define BASERXL	77,1562
#define BASERXH	78,1582
#define BASETXL	79,1602
#define BASETXH	80,1622
#define POLLINT	82,1643
#define SIZERXR	84,1664
#define SIZETXR	85,1684
#define RMD_ENP	87,1705
#define RMD_STP	88,1729
#define RMD_CRC	89,1753
#define RMD_FRAM	90,1777
#define RMD_ERR	91,1801
#define RMD_OWN	92,1825
#define TMD_ENP	94,1850
#define TMD_STP	95,1874
#define TMD_MORE	96,1898
#define TMD_ERR	97,1922
#define TMD_OWN	98,1946
#define TST_RTRY	100,1971
#define TST_LCAR	101,1995
#define TST_LCOL	102,2019
#define TST_UFLO	103,2043
struct dev_priv dev_priv105,2068

drivers/net/hostess_sv11.c,670
#define LINUX_211,0
static int dma;40,896
struct sv11_devicesv11_device42,913
static void hostess_input(58,1155
static int hostess_open(76,1565
static int hostess_close(129,2361
static int hostess_ioctl(161,2851
static struct enet_statistics *hostess_get_stats(168,3048
static int hostess_queue_xmit(181,3282
static int hostess_neigh_setup(188,3457
static int hostess_neigh_setup_dev(197,3619
static int return_0(209,3843
static struct sv11_device *sv11_init(220,3967
static void sv11_shutdown(384,7141
static int io=400,7473
static int irq=401,7494
static struct sv11_device *sv11_unit;415,7938
int init_module(417,7977
void cleanup_module(426,8210

drivers/net/irda/actisys.c,360
static int baud_rates[50,1846
static struct dongle dongle 52,1911
__initfunc(61,2053
void actisys_cleanup(66,2127
static void actisys_open(71,2194
static void actisys_close(81,2390
static void actisys_change_speed(93,2681
static void actisys_reset(194,5076
static void actisys_init_qos(230,5780
int init_module(252,6343
void cleanup_module(264,6475

drivers/net/irda/esi.c,305
static struct dongle dongle 50,1734
__initfunc(59,1852
void esi_cleanup(64,1923
static void esi_open(69,1987
static void esi_close(79,2169
static void esi_change_speed(90,2375
static void esi_reset(140,3286
static void esi_qos_init(151,3452
int init_module(164,3672
void cleanup_module(176,3796

drivers/net/irda/irport.c,469
#define IO_EXTENT 66,2465
static unsigned int io[68,2486
static unsigned int irq[69,2537
__initfunc(75,2773
static void irport_cleanup(97,3189
int irport_open(116,3481
void irport_close(136,3898
void irport_change_speed(153,4177
void irport_interrupt(188,5061
static void irport_write_wakeup(231,5973
static int irport_write(272,6922
int irport_hard_xmit(303,7668
static void irport_receive(350,8695
void cleanup_module(382,9246
int init_module(392,9344

drivers/net/irda/irtty.c,905
static hashbin_t *irtty 44,1573
static hashbin_t *dongles 45,1605
static struct tty_ldisc irda_ldisc;47,1640
char *driver_name 65,2463
__initfunc(67,2493
static void irtty_cleanup(117,3793
static int irtty_open(147,4536
static void irtty_close(247,7412
static void irtty_change_speed(285,8318
static void irtty_init_dongle(346,9471
static int irtty_ioctl(409,10978
static void irtty_receive_buf(451,12064
static int irtty_hard_xmit(482,12777
static int irtty_receive_room(547,14397
static void irtty_write_wakeup(559,14695
static int irtty_is_receiving(608,15781
static void irtty_wait_until_sent(620,16133
int irtty_register_dongle(633,16470
void irtty_unregister_dongle(658,17133
void irtty_set_dtr_rts(671,17367
static int irtty_net_init(699,18052
static int irtty_net_open(710,18241
static int irtty_net_close(724,18439
int init_module(748,18797
void cleanup_module(760,18925

drivers/net/irda/pc87108.c,1376
#define BROKEN_DONGLE_ID67,2151
static char *driver_name 69,2177
#define CHIP_IO_EXTENT 71,2216
static unsigned int io[73,2242
static unsigned int io2[74,2293
static unsigned int irq[75,2340
static unsigned int dma[76,2384
static struct pc87108 *dev_self[78,2429
static char *dongle_types[80,2493
__initfunc(129,4343
static void pc87108_cleanup(150,4701
static int pc87108_open(169,4979
static int pc87108_close(263,7603
static int pc87108_probe(291,8189
static int pc87108_read_dongle_id 398,11167
static void pc87108_init_dongle_interface 442,12140
static void pc87108_change_dongle_speed(529,14611
static void pc87108_change_speed(616,16968
static int pc87108_hard_xmit(713,19326
static void pc87108_dma_write(795,21278
static int pc87108_pio_write(834,22162
static void pc87108_dma_xmit_complete(874,23074
static int pc87108_dma_receive(923,24168
static int pc87108_dma_receive_complete(980,25501
static void pc87108_pio_receive(1108,28529
static __u8 pc87108_sir_interrupt(1138,29116
static __u8 pc87108_fir_interrupt(1195,30394
static void pc87108_interrupt(1269,32059
static void pc87108_wait_until_sent(1315,33177
static int pc87108_is_receiving(1328,33438
static int pc87108_net_init(1360,34097
static int pc87108_net_open(1379,34392
static int pc87108_net_close(1434,35429
int init_module(1482,36207
void cleanup_module(1495,36318

drivers/net/irda/tekram.c,316
static struct dongle dongle 47,1702
__initfunc(56,1838
void tekram_cleanup(61,1912
static void tekram_open(66,1979
static void tekram_close(76,2167
static void tekram_change_speed(97,2833
void tekram_reset(185,4606
static void tekram_init_qos(230,5491
int init_module(247,5898
void cleanup_module(259,6028

drivers/net/irda/w83977af_ir.c,1202
#define NETWINDER64,2069
static char *driver_name 66,2088
#define CHIP_IO_EXTENT 68,2131
static unsigned int io[70,2157
static unsigned int irq[71,2207
static unsigned int dma[72,2252
static struct irda_device *dev_self[74,2297
struct st_fifo_entry st_fifo_entry77,2410
static struct st_fifo_entry prev;82,2460
__initfunc(109,3659
void w83977af_cleanup(134,4065
int w83977af_open(153,4330
static int w83977af_close(242,6848
int w83977af_probe(279,7571
void w83977af_change_speed(375,9925
int w83977af_hard_xmit(458,11883
static void w83977af_dma_write(540,13735
static int w83977af_pio_write(578,14561
void w83977af_dma_xmit_complete(618,15439
int w83977af_dma_receive(667,16516
int w83977af_dma_receive_complete(746,18335
static void w83977af_pio_receive(868,21022
static __u8 w83977af_sir_interrupt(898,21610
static __u8 w83977af_fir_interrupt(957,22958
static void w83977af_interrupt(1035,24590
static void w83977af_wait_until_sent(1081,25712
static int w83977af_is_receiving(1093,25951
static int w83977af_net_init(1125,26584
static int w83977af_net_open(1144,26882
static int w83977af_net_close(1203,28050
int init_module(1251,28818
void cleanup_module(1264,28930

drivers/net/irda/uircc.c,942
static char *driver_name 60,2045
#define CHIP_IO_EXTENT 62,2082
static unsigned int io[64,2109
static unsigned int io2[65,2160
static unsigned int irq[66,2207
static unsigned int dma[67,2252
static struct uircc_cb *dev_self[69,2297
__initfunc(95,3456
static void uircc_cleanup(116,3808
static int uircc_open(135,4080
static int uircc_close(236,6987
static int uircc_probe(273,7800
static void uircc_change_speed(362,9741
static int uircc_hard_xmit(433,11291
static void uircc_dma_write(490,12482
static void uircc_dma_xmit_complete(530,13488
static int uircc_dma_receive(580,14642
static int uircc_dma_receive_complete(621,15472
static void uircc_interrupt(688,17037
static void uircc_wait_until_sent(752,18574
static int uircc_is_receiving(765,18831
static int uircc_net_init(787,19229
static int uircc_net_open(806,19520
static int uircc_net_close(852,20355
int init_module(891,20957
void cleanup_module(904,21066

drivers/net/irda/girbil.c,816
#define GIRBIL_TXEN 48,1718
#define GIRBIL_RXEN 49,1771
#define GIRBIL_ECAN 50,1821
#define GIRBIL_ECHO 51,1880
#define GIRBIL_HIGH 54,1972
#define GIRBIL_MEDIUM 55,2000
#define GIRBIL_LOW 56,2028
#define GIRBIL_2400 59,2083
#define GIRBIL_4800 60,2111
#define GIRBIL_9600 61,2140
#define GIRBIL_19200 62,2168
#define GIRBIL_38400 63,2196
#define GIRBIL_57600 64,2225
#define GIRBIL_115200 65,2254
#define GIRBIL_IRDA 68,2309
#define GIRBIL_ASK 69,2337
#define GIRBIL_LOAD 72,2397
static struct dongle dongle 74,2461
__initfunc(83,2597
void girbil_cleanup(88,2670
static void girbil_open(93,2736
static void girbil_close(103,2924
static void girbil_change_speed(115,3174
void girbil_reset(194,4808
static void girbil_init_qos(242,5836
int init_module(259,6236
void cleanup_module(271,6366

drivers/net/syncppp.c,2690
#define MAXALIVECNT 54,1761
#define PPP_ALLSTATIONS 56,1827
#define PPP_UI 57,1904
#define PPP_IP 58,1973
#define PPP_ISO 59,2037
#define PPP_XNS 60,2100
#define PPP_IPX 61,2164
#define PPP_LCP 62,2230
#define PPP_IPCP 63,2298
#define LCP_CONF_REQ 65,2380
#define LCP_CONF_ACK 66,2452
#define LCP_CONF_NAK 67,2528
#define LCP_CONF_REJ 68,2605
#define LCP_TERM_REQ 69,2676
#define LCP_TERM_ACK 70,2748
#define LCP_CODE_REJ 71,2824
#define LCP_PROTO_REJ 72,2890
#define LCP_ECHO_REQ 73,2960
#define LCP_ECHO_REPLY 74,3027
#define LCP_DISC_REQ 75,3092
#define LCP_OPT_MRU 77,3163
#define LCP_OPT_ASYNC_MAP 78,3230
#define LCP_OPT_AUTH_PROTO 79,3304
#define LCP_OPT_QUAL_PROTO 80,3374
#define LCP_OPT_MAGIC 81,3437
#define LCP_OPT_RESERVED 82,3496
#define LCP_OPT_PROTO_COMP 83,3551
#define LCP_OPT_ADDR_COMP 84,3624
#define IPCP_CONF_REQ 86,3705
#define IPCP_CONF_ACK 87,3778
#define IPCP_CONF_NAK 88,3855
#define IPCP_CONF_REJ 89,3933
#define IPCP_TERM_REQ 90,4005
#define IPCP_TERM_ACK 91,4078
#define IPCP_CODE_REJ 92,4155
#define CISCO_MULTICAST 94,4223
#define CISCO_UNICAST 95,4293
#define CISCO_KEEPALIVE 96,4361
#define CISCO_ADDR_REQ 97,4432
#define CISCO_ADDR_REPLY 98,4500
#define CISCO_KEEPALIVE_REQ 99,4566
struct ppp_header ppp_header101,4637
#define PPP_HEADER_LEN 106,4701
struct lcp_header lcp_header108,4761
#define LCP_HEADER_LEN 113,4815
struct cisco_packet cisco_packet115,4875
#define CISCO_PACKET_LEN 123,4967
static struct sppp *spppq;125,4996
static struct timer_list sppp_keepalive_timer;126,5023
static int debug 144,5871
static void if_down(150,5926
static void sppp_set_timeout(159,6014
static void sppp_clear_timeout(172,6304
void sppp_input 185,6487
static int sppp_hard_header(314,9551
static int sppp_rebuild_header(347,10231
static void sppp_keepalive 356,10352
static void sppp_lcp_input 412,11815
static void sppp_cisco_input 647,18076
static void sppp_cp_send 732,20290
static void sppp_cisco_send 782,21625
int sppp_close 821,22648
int sppp_open 834,22910
int sppp_reopen 846,23143
int sppp_change_mtu(865,23565
int sppp_do_ioctl(875,23759
void sppp_attach(908,24346
void sppp_detach 965,25760
sppp_lcp_conf_parse_options 992,26378
static void sppp_ipcp_input 1038,27378
static void sppp_lcp_open 1140,30016
static void sppp_ipcp_open 1158,30435
static void sppp_cp_timeout 1169,30664
static char *sppp_lcp_type_name 1220,31909
static char *sppp_ipcp_type_name 1240,32522
static void sppp_print_bytes 1256,32965
int sppp_rcv(1268,33178
struct packet_type sppp_packet_type=1276,33319
void sync_ppp_init(1286,33398
int init_module(1296,33695
void cleanup_module(1304,33780

drivers/net/syncppp.h,646
#define _SYNCPPP_H_ 21,574
struct slcp slcp24,615
struct sipcp sipcp31,847
struct sppp sppp36,971
struct ppp_deviceppp_device52,1505
#define PP_KEEPALIVE 58,1612
#define PP_CISCO 59,1673
#define PP_TIMO 60,1745
#define PP_DEBUG	61,1809
#define PPP_MTU 63,1832
#define LCP_STATE_CLOSED 65,1891
#define LCP_STATE_ACK_RCVD 66,1971
#define LCP_STATE_ACK_SENT 67,2046
#define LCP_STATE_OPENED 68,2117
#define IPCP_STATE_CLOSED 70,2182
#define IPCP_STATE_ACK_RCVD 71,2263
#define IPCP_STATE_ACK_SENT 72,2339
#define IPCP_STATE_OPENED 73,2411
#define SPPPIOCCISCO	87,2930
#define SPPPIOCPPP	88,2968
#define SPPPIOCDEBUG	89,3006

drivers/net/ariadne2.c,985
#define ARIADNE2_BASE	41,1119
#define ARIADNE2_BOOTROM	42,1149
#define NE_BASE	45,1183
#define NE_CMD	46,1217
#define NE_DATAPORT	47,1242
#define NE_RESET	48,1313
#define NE_IO_EXTENT	49,1386
#define NE_EN0_ISR	51,1417
#define NE_EN0_DCFG	52,1445
#define NE_EN0_RSARLO	54,1475
#define NE_EN0_RSARHI	55,1506
#define NE_EN0_RCNTLO	56,1537
#define NE_EN0_RXCR	57,1568
#define NE_EN0_TXCR	58,1597
#define NE_EN0_RCNTHI	59,1626
#define NE_EN0_IMR	60,1657
#define NESM_START_PG	62,1686
#define NESM_STOP_PG	63,1743
#define WORDSWAP(WORDSWAP66,1801
__initfunc(85,2473
__initfunc(104,2910
static int ariadne2_open(222,6579
static int ariadne2_close(229,6684
static void ariadne2_reset_8390(240,7006
static void ariadne2_get_8390_hdr(265,7812
static void ariadne2_block_input(305,9255
static void ariadne2_block_output(339,10433
static char devicename[394,12104
static struct device ariadne2_dev 396,12141
int init_module(404,12260
void cleanup_module(416,12476

drivers/net/rrunner.c,914
#define DEBUG 18,706
#define RX_DMA_SKBUFF 19,722
#define PKT_COPY_THRESHOLD 20,746
static const char *version 62,1873
extern __u32 sysctl_wmem_max;78,2436
extern __u32 sysctl_rmem_max;79,2466
__initfunc(81,2497
static void rr_issue_cmd(231,6015
static int rr_reset(263,6822
static unsigned int read_eeprom(363,8769
static u32 read_eeprom_word(395,9425
static unsigned int write_eeprom(412,9737
__initfunc(459,10691
static int rr_init1(505,11905
	dev->tbusy 658,15649
	dev->interrupt 660,15672
	dev->start 662,15700
	return 663,15717
static u32 rr_handle_event(672,15914
static int rx_int(763,18135
static void rr_interrupt(842,19957
static int rr_open(918,21653
static void rr_dump(954,22333
static int rr_close(1017,24301
static int rr_start_xmit(1087,25624
static struct net_device_stats *rr_get_stats(1149,27081
static int rr_load_firmware(1166,27476
static int rr_ioctl(1263,29733

drivers/net/rrunner.h,6768
#define _RRUNNER_H_2,20
struct rr_regs rr_regs11,177
#define RR_INT	171,2016
#define RR_CLEAR_INT	172,2037
#define NO_SWAP	173,2063
#define NO_SWAP1	174,2091
#define PCI_RESET_NIC	175,2119
#define HALT_NIC	176,2146
#define SSTEP_NIC	177,2168
#define MEM_READ_MULTI	178,2191
#define NIC_HALTED	179,2219
#define HALT_INST	180,2244
#define PARITY_ERR	181,2268
#define INVALID_INST_B	182,2293
#define RR_REV_2	183,2322
#define RR_REV_MASK	184,2350
#define INTA_STATE	190,2422
#define CLEAR_INTA	191,2447
#define FAST_EEPROM_ACCESS	192,2472
#define ENABLE_EXTRA_SRAM	193,2504
#define ENABLE_EXTRA_DESC	194,2536
#define ENABLE_PARITY	195,2568
#define FORCE_DMA_PARITY_ERROR	196,2597
#define ENABLE_EEPROM_WRITE	197,2634
#define ENABLE_DATA_CACHE	198,2669
#define SRAM_LO_PARITY_ERR	199,2702
#define SRAM_HI_PARITY_ERR	200,2736
#define FORCE_PCI_RESET	206,2798
#define PROVIDE_LENGTH	207,2828
#define MASK_DMA_READ_MAX	208,2857
#define RBURST_DISABLE	209,2888
#define RBURST_4	210,2917
#define RBURST_16	211,2940
#define RBURST_32	212,2964
#define RBURST_64	213,2988
#define RBURST_128	214,3012
#define RBURST_256	215,3037
#define RBURST_1024	216,3062
#define MASK_DMA_WRITE_MAX	217,3088
#define WBURST_DISABLE	218,3120
#define WBURST_4	219,3149
#define WBURST_16	220,3172
#define WBURST_32	221,3196
#define WBURST_64	222,3220
#define WBURST_128	223,3244
#define WBURST_256	224,3269
#define WBURST_1024	225,3294
#define MASK_MIN_DMA	226,3320
#define FIFO_RETRY_ENABLE	227,3349
#define DMA_WRITE_DONE	233,3410
#define DMA_READ_DONE	234,3442
#define DMA_WRITE_ERR	235,3473
#define DMA_READ_ERR	236,3504
#define ENABLE_NEW_CON	246,3734
#define RESET_RECV	247,3763
#define RECV_ALL	248,3788
#define RECV_1K	249,3811
#define RECV_2K	250,3834
#define RECV_4K	251,3857
#define RECV_8K	252,3880
#define RECV_16K	253,3903
#define RECV_32K	254,3926
#define RECV_64K	255,3949
#define ENA_XMIT	261,4001
#define PERM_CON	262,4024
#define RESET_DMA	268,4075
#define NO_SWAP_DMA	269,4099
#define DMA_ACTIVE	270,4125
#define THRESH_MASK	271,4150
#define DMA_ERROR_MASK	272,4176
#define TRACE_ON_WHAT_BIT	278,4261
#define ONEM_BUF_WHAT_BIT	279,4317
#define CHAR_API_WHAT_BIT	280,4376
#define MS_DOS_WHAT_BIT	281,4447
#define CMD_EVT_WHAT_BIT	282,4499
#define LONG_TX_WHAT_BIT	283,4558
#define LONG_RX_WHAT_BIT	284,4594
#define WHAT_BIT_MASK	285,4630
#define EVENT_OVFL	291,4714
#define FATAL_ERR	292,4745
#define LOOP_BACK	293,4775
#define MODE_PH	294,4799
#define MODE_FP	295,4822
#define PTR64BIT	296,4845
#define PTR32BIT	297,4868
#define PTR_WD_SWAP	298,4891
#define PTR_WD_NOSWAP	299,4917
#define POST_WARN_EVENT	300,4945
#define ERR_TERM	301,4975
#define DIRECT_CONN	302,4998
#define NO_NIC_WATCHDOG	303,5024
#define SWAP_DATA	304,5054
#define SWAP_CONTROL	305,5079
#define NIC_HALT_ON_ERR	306,5107
#define NIC_NO_RESTART	307,5138
#define HALF_DUP_TX	308,5168
#define HALF_DUP_RX	309,5196
#define ERR_UNKNOWN_MBOX	317,5290
#define ERR_UNKNOWN_CMD	318,5322
#define ERR_MAX_RING	319,5354
#define ERR_RING_CLOSED	320,5383
#define ERR_RING_OPEN	321,5415
#define ERR_EVENT_RING_FULL	323,5476
#define ERR_DW_PEND_CMND_FULL	324,5509
#define ERR_DR_PEND_CMND_FULL	325,5544
#define ERR_DW_PEND_DATA_FULL	326,5579
#define ERR_DR_PEND_DATA_FULL	327,5614
#define ERR_ILLEGAL_JUMP	328,5649
#define ERR_UNIMPLEMENTED	329,5679
#define ERR_TX_INFO_FULL	330,5710
#define ERR_RX_INFO_FULL	331,5740
#define ERR_ILLEGAL_MODE	332,5770
#define ERR_MAIN_TIMEOUT	333,5800
#define ERR_EVENT_BITS	334,5830
#define ERR_UNPEND_FULL	335,5859
#define ERR_TIMER_QUEUE_FULL	336,5889
#define ERR_TIMER_QUEUE_EMPTY	337,5923
#define ERR_TIMER_NO_FREE	338,5958
#define ERR_INTR_START	339,5989
#define ERR_BAD_STARTUP	340,6018
#define ERR_NO_PKT_END	341,6048
#define ERR_HALTED_ON_ERR	342,6077
#define ERR_WRITE_DMA	344,6134
#define ERR_READ_DMA	345,6164
#define ERR_EXT_SERIAL	346,6193
#define ERR_TX_INT_PARITY	347,6224
#define EVT_RING_ENTRIES	354,6288
#define EVT_RING_SIZE	355,6316
struct event event357,6381
#define E_NIC_UP	374,6574
#define E_WATCHDOG	375,6596
#define E_STAT_UPD	377,6621
#define E_INVAL_CMD	378,6645
#define E_SET_CMD_CONS	379,6670
#define E_LINK_ON	380,6698
#define E_LINK_OFF	381,6721
#define E_INTERN_ERR	382,6745
#define E_HOST_ERR	383,6771
#define E_STATS_UPDATE	384,6795
#define E_REJECTING	385,6823
#define E_CON_REJ	390,6872
#define E_CON_TMOUT	391,6895
#define E_CON_NC_TMOUT	392,6920
#define E_DISC_ERR	393,6988
#define E_INT_PRTY	394,7012
#define E_TX_IDLE	395,7036
#define E_TX_LINK_DROP	396,7059
#define E_TX_INV_RNG	397,7087
#define E_TX_INV_BUF	398,7113
#define E_TX_INV_DSC	399,7139
#define E_VAL_RNG	407,7228
#define E_RX_RNG_ENER	408,7251
#define E_INV_RNG	409,7278
#define E_RX_RNG_SPC	410,7301
#define E_RX_RNG_OUT	411,7327
#define E_PKT_DISCARD	412,7353
#define E_INFO_EVT	413,7380
#define E_RX_PAR_ERR	418,7437
#define E_RX_LLRC_ERR	419,7463
#define E_IP_CKSM_ERR	420,7490
#define E_DTA_CKSM_ERR	421,7517
#define E_SHT_BST	422,7545
#define E_LST_LNK_ERR	427,7596
#define E_FLG_SYN_ERR	428,7623
#define E_FRM_ERR	429,7650
#define E_RX_IDLE	430,7673
#define E_PKT_LN_ERR	431,7696
#define E_STATE_ERR	432,7722
#define E_UNEXP_DATA	433,7747
#define E_RX_INV_BUF	438,7797
#define E_RX_INV_DSC	439,7823
#define E_RNG_BLK	440,7849
#define E_RX_TO	445,7898
#define E_BFR_SPC	446,7920
#define E_INV_ULP	447,7943
#define E_NOT_IMPLEMENTED 449,7967
#define CMD_RING_ENTRIES	456,8020
struct cmd cmd458,8049
#define C_START_FW	470,8194
#define C_UPD_STAT	471,8218
#define C_WATCHDOG	472,8242
#define C_DEL_RNG	473,8266
#define C_NEW_RNG	474,8289
#define C_CONN	475,8312
#define  INTERRUPT	482,8356
#define  TX_IP_CKSUM	483,8381
#define  PACKET_END	484,8408
#define  PACKET_START	485,8434
#define  SAME_IFIELD	486,8462
#define TX_RING_ENTRIES	494,8547
#define TX_RING_ENTRIES	496,8580
#define TX_RING_SIZE	498,8614
struct tx_desc{tx_desc500,8679
#define RX_RING_ENTRIES	521,8922
#define RX_RING_ENTRIES 523,8955
#define RX_RING_SIZE	525,8989
struct rx_desc{rx_desc527,9054
#define SIOCRRPFW	551,9279
#define SIOCRRGFW	552,9332
#define SIOCRRID	553,9386
struct seg_hdr seg_hdr556,9437
#define EEPROM_BASE 563,9507
#define EEPROM_WORDS 564,9538
#define EEPROM_BYTES 565,9564
struct eeprom_boot eeprom_boot567,9615
struct eeprom_manf eeprom_manf576,9736
struct eeprom_phase_info eeprom_phase_info605,10186
struct eeprom_rncd_info eeprom_rncd_info615,10354
struct phase1_hdr{phase1_hdr626,10536
struct eeprom eeprom632,10608
struct rr_stats rr_stats644,10836
struct ring_ctrl ring_ctrl716,11898
struct rr_info rr_info738,12151
struct rr_privaterr_private757,12519

drivers/net/ne2.c,1056
static const char *version 57,1989
#define NE_BASE	101,3045
#define NE_CMD	102,3079
#define NE_DATAPORT	103,3101
#define NE_RESET	104,3168
#define NE_IO_EXTENT	105,3237
#define NE1SM_START_PG	107,3264
#define NE1SM_STOP_PG 108,3322
#define NESM_START_PG	109,3380
#define NESM_STOP_PG	110,3437
static unsigned int addresses[113,3520
static int irqs[115,3614
struct ne2_adapters_t ne2_adapters_t117,3650
const struct ne2_adapters_t ne2_adapters[122,3710
__initfunc 149,4518
static int ne2_procinfo(178,5235
#define HW_ADDR(HW_ADDR192,5860
__initfunc 202,6069
static int ne_open(374,10959
static int ne_close(381,11049
static void ne_reset_8390(392,11354
static void ne_get_8390_hdr(419,12198
static void ne_block_input(459,13514
static void ne_block_output(522,15518
#define MAX_NE_CARDS	625,18430
#define NAMELEN	626,18493
static char namelist[627,18551
static struct device dev_ne[628,18606
static int io[637,18757
static int irq[638,18795
static int bad[639,18835
int init_module(649,19158
void cleanup_module(671,19668

drivers/net/via-rhine.c,7868
static const char *versionA 22,704
static const char *versionB 24,790
static int debug 30,982
static int max_interrupt_work 31,1053
static int min_pci_latency 32,1089
static int rx_copybreak 36,1247
#define MAX_UNITS 43,1454
static int options[44,1523
static int full_duplex[45,1589
static const int multicast_filter_limit 49,1791
#define TX_RING_SIZE	58,2189
#define RX_RING_SIZE	59,2212
#define TX_TIMEOUT 63,2361
#define PKT_BUF_SZ	65,2389
#define VIA_USE_IO86,3029
#define readb 94,3147
#define readw 95,3165
#define readl 96,3183
#define writeb 97,3201
#define writew 98,3221
#define writel 99,3241
#define RUN_AT(RUN_AT105,3406
#define ioremap 110,3501
#define iounmap 111,3524
#define test_and_set_bit(test_and_set_bit125,4024
#define	net_device_stats 128,4120
#define NETSTATS_VER2130,4167
#define PCI_SUPPORT_VER1135,4344
#define PCI_SUPPORT_VER2137,4375
#define dev_free_skb(dev_free_skb140,4440
#define dev_free_skb(dev_free_skb142,4504
enum pci_flags_bit pci_flags_bit242,8436
	PCI_USES_IO=243,8457
	PCI_USES_IO=1, PCI_USES_MEM=243,8457
	PCI_USES_IO=1, PCI_USES_MEM=2, PCI_USES_MASTER=243,8457
	PCI_ADDR0=244,8508
	PCI_ADDR0=0x10<244,8508
	PCI_ADDR0=0x10<<0, PCI_ADDR1=244,8508
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<244,8508
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=244,8508
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<244,8508
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=244,8508
	PCI_ADDR0=0x10<<0, PCI_ADDR1=0x10<<1, PCI_ADDR2=0x10<<2, PCI_ADDR3=0x10<244,8508
struct pci_id_info pci_id_info246,8588
static struct pci_id_info pci_tbl[258,8977
enum chip_capability_flags chip_capability_flags268,9372
enum chip_capability_flags {CanHaveMII=268,9372
struct chip_info chip_info269,9417
} static cap_tbl[272,9462
enum register_offsets register_offsets280,9573
	StationAddr=281,9597
	StationAddr=0x00,281,9597
	StationAddr=0x00, RxConfig=281,9597
	StationAddr=0x00, RxConfig=0x06,281,9597
	StationAddr=0x00, RxConfig=0x06, TxConfig=281,9597
	StationAddr=0x00, RxConfig=0x06, TxConfig=0x07,281,9597
	StationAddr=0x00, RxConfig=0x06, TxConfig=0x07, ChipCmd=281,9597
	StationAddr=0x00, RxConfig=0x06, TxConfig=0x07, ChipCmd=0x08,281,9597
	IntrStatus=282,9660
	IntrStatus=0x0C,282,9660
	IntrStatus=0x0C, IntrEnable=282,9660
	IntrStatus=0x0C, IntrEnable=0x0E,282,9660
	MulticastFilter0=283,9695
	MulticastFilter0=0x10,283,9695
	MulticastFilter0=0x10, MulticastFilter1=283,9695
	MulticastFilter0=0x10, MulticastFilter1=0x14,283,9695
	RxRingPtr=284,9742
	RxRingPtr=0x18,284,9742
	RxRingPtr=0x18, TxRingPtr=284,9742
	RxRingPtr=0x18, TxRingPtr=0x1C,284,9742
	MIIPhyAddr=285,9775
	MIIPhyAddr=0x6C,285,9775
	MIIPhyAddr=0x6C, MIIStatus=285,9775
	MIIPhyAddr=0x6C, MIIStatus=0x6D,285,9775
	MIIPhyAddr=0x6C, MIIStatus=0x6D, PCIConfig=285,9775
	MIIPhyAddr=0x6C, MIIStatus=0x6D, PCIConfig=0x6E,285,9775
	MIICmd=286,9825
	MIICmd=0x70,286,9825
	MIICmd=0x70, MIIRegAddr=286,9825
	MIICmd=0x70, MIIRegAddr=0x71,286,9825
	MIICmd=0x70, MIIRegAddr=0x71, MIIData=286,9825
	MIICmd=0x70, MIIRegAddr=0x71, MIIData=0x72,286,9825
	Config=287,9870
	Config=0x78,287,9870
	Config=0x78, RxMissed=287,9870
	Config=0x78, RxMissed=0x7C,287,9870
	Config=0x78, RxMissed=0x7C, RxCRCErrs=287,9870
	Config=0x78, RxMissed=0x7C, RxCRCErrs=0x7E,287,9870
enum intr_status_bits intr_status_bits291,9970
	IntrRxDone=292,9994
	IntrRxDone=0x0001,292,9994
	IntrRxDone=0x0001, IntrRxErr=292,9994
	IntrRxDone=0x0001, IntrRxErr=0x0004,292,9994
	IntrRxDone=0x0001, IntrRxErr=0x0004, IntrRxEmpty=292,9994
	IntrRxDone=0x0001, IntrRxErr=0x0004, IntrRxEmpty=0x0020,292,9994
	IntrTxDone=293,10052
	IntrTxDone=0x0002,293,10052
	IntrTxDone=0x0002, IntrTxAbort=293,10052
	IntrTxDone=0x0002, IntrTxAbort=0x0008,293,10052
	IntrTxDone=0x0002, IntrTxAbort=0x0008, IntrTxUnderrun=293,10052
	IntrTxDone=0x0002, IntrTxAbort=0x0008, IntrTxUnderrun=0x0010,293,10052
	IntrPCIErr=294,10115
	IntrPCIErr=0x0040,294,10115
	IntrStatsMax=295,10135
	IntrStatsMax=0x0080,295,10135
	IntrStatsMax=0x0080, IntrRxEarly=295,10135
	IntrStatsMax=0x0080, IntrRxEarly=0x0100,295,10135
	IntrStatsMax=0x0080, IntrRxEarly=0x0100, IntrMIIChange=295,10135
	IntrStatsMax=0x0080, IntrRxEarly=0x0100, IntrMIIChange=0x0200,295,10135
	IntrRxOverflow=296,10199
	IntrRxOverflow=0x0400,296,10199
	IntrRxOverflow=0x0400, IntrRxDropped=296,10199
	IntrRxOverflow=0x0400, IntrRxDropped=0x0800,296,10199
	IntrRxOverflow=0x0400, IntrRxDropped=0x0800, IntrRxNoBuf=296,10199
	IntrRxOverflow=0x0400, IntrRxDropped=0x0800, IntrRxNoBuf=0x1000,296,10199
	IntrTxAborted=297,10265
	IntrTxAborted=0x2000,297,10265
	IntrTxAborted=0x2000, IntrLinkChange=297,10265
	IntrTxAborted=0x2000, IntrLinkChange=0x4000,297,10265
	IntrRxWakeUp=298,10311
	IntrRxWakeUp=0x8000,298,10311
	IntrNormalSummary=299,10333
	IntrNormalSummary=0x0003,299,10333
	IntrNormalSummary=0x0003, IntrAbnormalSummary=299,10333
	IntrNormalSummary=0x0003, IntrAbnormalSummary=0x8260,299,10333
struct rx_desc rx_desc304,10433
struct tx_desc tx_desc311,10530
enum rx_status_bits rx_status_bits320,10653
	RxDescOwn=321,10675
	RxDescOwn=0x80000000,321,10675
	RxDescOwn=0x80000000, RxOK=321,10675
	RxDescOwn=0x80000000, RxOK=0x8000,321,10675
	RxDescOwn=0x80000000, RxOK=0x8000, RxWholePkt=321,10675
	RxDescOwn=0x80000000, RxOK=0x8000, RxWholePkt=0x0300,321,10675
	RxDescOwn=0x80000000, RxOK=0x8000, RxWholePkt=0x0300, RxErr=321,10675
	RxDescOwn=0x80000000, RxOK=0x8000, RxWholePkt=0x0300, RxErr=0x008F}321,10675
enum desc_status_bits desc_status_bits322,10745
	DescOwn=323,10769
	DescOwn=0x8000,323,10769
	DescOwn=0x8000, DescEndPacket=323,10769
	DescOwn=0x8000, DescEndPacket=0x4000,323,10769
	DescOwn=0x8000, DescEndPacket=0x4000, DescIntr=323,10769
	DescOwn=0x8000, DescEndPacket=0x4000, DescIntr=0x1000,323,10769
enum chip_cmd_bits chip_cmd_bits327,10852
	CmdInit=328,10873
	CmdInit=0x0001,328,10873
	CmdInit=0x0001, CmdStart=328,10873
	CmdInit=0x0001, CmdStart=0x0002,328,10873
	CmdInit=0x0001, CmdStart=0x0002, CmdStop=328,10873
	CmdInit=0x0001, CmdStart=0x0002, CmdStop=0x0004,328,10873
	CmdInit=0x0001, CmdStart=0x0002, CmdStop=0x0004, CmdRxOn=328,10873
	CmdInit=0x0001, CmdStart=0x0002, CmdStop=0x0004, CmdRxOn=0x0008,328,10873
	CmdTxOn=329,10939
	CmdTxOn=0x0010,329,10939
	CmdTxOn=0x0010, CmdTxDemand=329,10939
	CmdTxOn=0x0010, CmdTxDemand=0x0020,329,10939
	CmdTxOn=0x0010, CmdTxDemand=0x0020, CmdRxDemand=329,10939
	CmdTxOn=0x0010, CmdTxDemand=0x0020, CmdRxDemand=0x0040,329,10939
	CmdEarlyRx=330,10996
	CmdEarlyRx=0x0100,330,10996
	CmdEarlyRx=0x0100, CmdEarlyTx=330,10996
	CmdEarlyRx=0x0100, CmdEarlyTx=0x0200,330,10996
	CmdEarlyRx=0x0100, CmdEarlyTx=0x0200, CmdFDuplex=330,10996
	CmdEarlyRx=0x0100, CmdEarlyTx=0x0200, CmdFDuplex=0x0400,330,10996
	CmdNoTxPoll=331,11054
	CmdNoTxPoll=0x0800,331,11054
	CmdNoTxPoll=0x0800, CmdReset=331,11054
	CmdNoTxPoll=0x0800, CmdReset=0x8000,331,11054
struct netdev_private netdev_private334,11096
static struct device *root_net_dev 388,13617
static int pci_etherdev_probe(395,13913
int via_rhine_probe(503,17144
static struct device *via_probe1(509,17238
static int mdio_read(602,19865
static void mdio_write(620,20375
static int netdev_open(637,20831
static void check_duplex(708,22722
static void netdev_timer(732,23430
static void tx_timeout(749,23865
static void init_ring(772,24508
static int start_tx(819,25892
static void intr_handler(876,27617
static int netdev_rx(989,31019
static void netdev_error(1083,34227
static struct enet_statistics *get_stats(1124,35708
static unsigned const ethernet_polynomial 1142,36365
static inline u32 ether_crc(1143,36422
static void set_rx_mode(1158,36754
static int mii_ioctl(1189,37805
static int netdev_close(1210,38421
int init_module(1258,39485
void cleanup_module(1270,39750

drivers/net/7990.h,2594
#define _7990_H14,485
struct lance_regs lance_regs17,585
#define LANCE_LOG_TX_BUFFERS 37,1506
#define LANCE_LOG_RX_BUFFERS 38,1537
#define TX_RING_SIZE 41,1576
#define RX_RING_SIZE 42,1623
#define TX_RING_MOD_MASK 43,1670
#define RX_RING_MOD_MASK 44,1714
#define TX_RING_LEN_BITS 45,1758
#define RX_RING_LEN_BITS 46,1814
#define PKT_BUFF_SIZE 47,1870
#define RX_BUFF_SIZE 48,1899
#define TX_BUFF_SIZE 49,1934
struct lance_rx_desc lance_rx_desc52,2047
struct lance_tx_desc lance_tx_desc63,2481
struct lance_init_block lance_init_block76,3087
struct lance_privatelance_private104,4498
#define CRC_POLYNOMIAL_BE 133,5649
#define CRC_POLYNOMIAL_LE 134,5720
#define LE_CSR0 139,5854
#define LE_CSR1 140,5924
#define LE_CSR2 141,6007
#define LE_CSR3 142,6086
#define LE_C0_ERR	147,6200
#define LE_C0_BABL	148,6266
#define LE_C0_CERR	149,6333
#define LE_C0_MISS	150,6390
#define LE_C0_MERR	151,6464
#define LE_C0_RINT	152,6510
#define LE_C0_TINT	153,6561
#define LE_C0_IDON	154,6613
#define LE_C0_INTR	155,6666
#define LE_C0_INEA	157,6798
#define LE_C0_RXON	158,6848
#define LE_C0_TXON	159,6892
#define LE_C0_TDMD	160,6937
#define LE_C0_STOP	161,6986
#define LE_C0_STRT	162,7024
#define LE_C0_INIT	163,7063
#define LE_C3_BSWP	169,7145
#define LE_C3_ACON	171,7227
#define LE_C3_BCON	173,7304
#define LE_MO_PROM	179,7374
#define LE_MO_DRCVBC 183,7581
#define LE_MO_DRCVPA 184,7651
#define LE_MO_DLNKTST 185,7730
#define LE_MO_DAPC 186,7794
#define LE_MO_MENDECL 187,7876
#define LE_MO_LRTTSEL 188,7941
#define LE_MO_PSEL1 189,8024
#define LE_MO_PSEL0 190,8088
#define LE_MO_EMBA 192,8205
#define LE_MO_INTL	194,8359
#define LE_MO_DRTY	195,8410
#define LE_MO_FCOLL	196,8457
#define LE_MO_DXMTFCS	197,8507
#define LE_MO_LOOP	198,8564
#define LE_MO_DTX	199,8613
#define LE_MO_DRX	200,8665
#define LE_R1_OWN	206,8741
#define LE_R1_ERR	207,8797
#define LE_R1_FRA	208,8833
#define LE_R1_OFL	209,8877
#define LE_R1_CRC	210,8922
#define LE_R1_BUF	211,8962
#define LE_R1_SOP	212,9005
#define LE_R1_EOP	213,9051
#define LE_R1_POK 214,9095
#define LE_T1_OWN	220,9189
#define LE_T1_ERR	221,9245
#define LE_T1_RES	222,9281
#define LE_T1_EMORE	223,9351
#define LE_T1_EONE	224,9410
#define LE_T1_EDEF	225,9458
#define LE_T1_SOP	226,9498
#define LE_T1_EOP	227,9544
#define LE_T1_POK	228,9588
#define LE_T3_BUF 233,9672
#define LE_T3_UFL 234,9718
#define LE_T3_LCOL 235,9767
#define LE_T3_CLOS 236,9816
#define LE_T3_RTY 237,9866
#define LE_T3_TDR	238,9911
#define TX_BUFFS_AVAIL 242,10005
#define LANCE_ADDR(LANCE_ADDR247,10250

drivers/net/sktr.h,9473
#define __LINUX_SKTR_H8,134
#define SKTR_MAX_ADAPTERS 12,177
#define SEND_TIMEOUT 14,206
#define TR_RCF_LONGEST_FRAME_MASK 16,234
#define TR_RCF_FRAME4K 17,275
#define SWAPB(SWAPB34,1217
#define SWAPW(SWAPW37,1348
#define LOBYTE(LOBYTE40,1449
#define HIBYTE(HIBYTE43,1550
#define LOWORD(LOWORD46,1674
#define HIWORD(HIWORD49,1776
#define SIFDAT 54,1904
#define SIFINC 55,1949
#define SIFINH 56,2016
#define SIFADR 57,2083
#define SIFCMD 58,2133
#define SIFSTS 59,2179
#define SIFACL 60,2224
#define SIFADD 61,2287
#define SIFADX 62,2337
#define DMALEN 63,2363
#define POSREG 64,2412
#define POSREG_2 67,2534
#define CMD_INTERRUPT_ADAPTER 73,2675
#define CMD_ADAPTER_RESET 74,2754
#define CMD_SSB_CLEAR	75,2823
#define CMD_EXECUTE	78,2919
#define CMD_SCB_REQUEST	79,2973
#define CMD_RX_CONTINUE	83,3113
#define CMD_RX_VALID	86,3236
#define CMD_TX_VALID	87,3297
#define CMD_SYSTEM_IRQ	90,3408
#define CMD_CLEAR_SYSTEM_IRQ	93,3507
#define EXEC_SOFT_RESET	96,3618
#define ACL_SWHLDA	102,3762
#define ACL_SWDDIR	103,3823
#define ACL_SWHRQ	104,3882
#define ACL_PSDMAEN	105,3937
#define ACL_ARESET	106,3998
#define ACL_CPHALT	110,4134
#define ACL_BOOT	116,4357
#define ACL_SINTEN	117,4382
#define ACL_SPEED4	121,4515
#define ACL_SPEED16	122,4542
#define PS_DMA_MASK	123,4570
#define STS_SYSTEM_IRQ	127,4665
#define STS_INITIALIZE	130,4763
#define STS_TEST	133,4856
#define STS_ERROR	134,4921
#define STS_MASK	137,5016
#define STS_ERROR_MASK	138,5078
#define ADAPTER_INT_PTRS	141,5181
#define STS_IRQ_ADAPTER_CHECK 148,5389
#define STS_IRQ_RING_STATUS 151,5492
#define STS_IRQ_SCB_CLEAR 152,5571
#define STS_IRQ_COMMAND_STATUS 155,5672
#define STS_IRQ_RECEIVE_STATUS 158,5770
#define STS_IRQ_TRANSMIT_STATUS 161,5866
#define STS_IRQ_MASK 164,5997
#define COMMAND_COMPLETE 168,6116
#define FRAME_COMPLETE 172,6310
#define LIST_ERROR 179,6590
#define FRAME_SIZE_ERROR 186,6849
#define TX_THRESHOLD 193,7138
#define ODD_ADDRESS 196,7254
#define FRAME_ERROR 200,7396
#define ACCESS_PRIORITY_ERROR 203,7509
#define UNENABLED_MAC_FRAME 206,7617
#define ILLEGAL_FRAME_FORMAT 210,7769
#define OC_OPEN 225,8378
#define OC_TRANSMIT 226,8436
#define OC_TRANSMIT_HALT 227,8499
#define OC_RECEIVE 228,8567
#define OC_CLOSE 229,8629
#define OC_SET_GROUP_ADDR 230,8689
#define OC_SET_FUNCT_ADDR 231,8758
#define OC_READ_ERROR_LOG 232,8827
#define OC_READ_ADAPTER 233,8896
#define OC_MODIFY_OPEN_PARMS 234,8963
#define OC_RESTORE_OPEN_PARMS 235,9035
#define OC_SET_FIRST_16_GROUP 236,9108
#define OC_SET_BRIDGE_PARMS 237,9181
#define OC_CONFIG_BRIDGE_PARMS 238,9252
#define OPEN	240,9327
#define TRANSMIT	241,9388
#define TRANSMIT_HALT	247,9619
#define RECEIVE	252,9812
#define CLOSE	258,10042
#define SET_GROUP_ADDR	261,10156
#define SET_FUNCT_ADDR	265,10312
#define READ_ERROR_LOG	269,10472
#define READ_ADAPTER	273,10618
#define MODIFY_OPEN_PARMS	279,10839
#define RESTORE_OPEN_PARMS	285,11054
#define SET_FIRST_16_GROUP	291,11269
#define SET_BRIDGE_PARMS	296,11435
#define CONFIG_BRIDGE_PARMS 302,11648
#define SPEED_4 307,11758
#define SPEED_16 308,11784
#define BURST_SIZE 312,11917
#define BURST_MODE 313,11974
#define DMA_RETRIES 314,12030
#define CYCLE_TIME 316,12095
#define LINE_SPEED_BIT	319,12215
#define ONE_SECOND_TICKS	322,12290
#define HALF_SECOND	323,12323
#define ONE_SECOND	324,12367
#define TWO_SECONDS	325,12406
#define THREE_SECONDS	326,12450
#define FOUR_SECONDS	327,12496
#define FIVE_SECONDS	328,12541
#define BUFFER_SIZE 330,12587
} IPB, *IPB_Ptr;IPB_Ptr352,13587
#define BUFFER_SIZE	359,13719
#define TPL_SIZE	360,13771
#define RPL_SIZE	361,13842
#define TX_BUF_MIN 364,13947
#define TX_BUF_MAX 365,14012
#define DISABLE_EARLY_TOKEN_RELEASE 367,14089
#define WRAP_INTERFACE	370,14163
#define DISABLE_HARD_ERROR	375,14353
#define DISABLE_SOFT_ERROR	378,14466
#define PASS_ADAPTER_MAC_FRAMES 381,14562
#define PASS_ATTENTION_FRAMES 384,14664
#define PAD_ROUTING_FIELD	387,14783
#define FRAME_HOLD	390,14874
#define CONTENDER	395,15063
#define PASS_BEACON_MAC_FRAMES 398,15166
#define EARLY_TOKEN_RELEASE 401,15274
#define COPY_ALL_MAC_FRAMES	405,15413
#define COPY_ALL_NON_MAC_FRAMES	411,15633
#define PASS_FIRST_BUF_ONLY	414,15738
#define ENABLE_FULL_DUPLEX_SELECTION 419,15946
#define OPEN_FULL_DUPLEX_OFF	426,16162
#define OPEN_FULL_DUPLEX_ON	427,16198
#define OPEN_FULL_DUPLEX_AUTO	428,16233
#define PROD_ID_SIZE	430,16271
#define TX_FRAG_NUM	432,16324
#define TX_MORE_FRAGMENTS 433,16390
#define ISA_MAX_ADDRESS 437,16503
} OPB, *OPB_Ptr;OPB_Ptr470,17579
} SCB;SCB482,17965
} SSB;SSB497,18485
} INTPTRS;INTPTRS513,19185
} ERRORTAB;ERRORTAB546,20352
} Fragment;Fragment563,20857
#define MAX_FRAG_NUMBERS 566,20885
#define MAX_TX_QUEUE	570,21036
#define HEADER_SIZE	578,21350
#define SRC_SIZE	579,21387
#define MIN_DATA_SIZE	580,21408
#define DEFAULT_DATA_SIZE	581,21435
#define MAX_DATA_SIZE	582,21466
#define DEFAULT_PACKET_SIZE 584,21496
#define MIN_PACKET_SIZE 585,21569
#define MAX_PACKET_SIZE 586,21638
#define AC_NOT_RECOGNIZED	591,21762
#define GROUP_BIT	592,21793
#define GET_TRANSMIT_STATUS_HIGH_BYTE(GET_TRANSMIT_STATUS_HIGH_BYTE593,21817
#define GET_FRAME_STATUS_HIGH_AC(GET_FRAME_STATUS_HIGH_AC594,21888
#define GET_FRAME_STATUS_LOW_AC(GET_FRAME_STATUS_LOW_AC595,21965
#define DIRECTED_FRAME(DIRECTED_FRAME596,22045
#define TX_VALID	602,22273
#define TX_FRAME_COMPLETE	605,22380
#define TX_START_FRAME	608,22474
#define TX_END_FRAME	611,22564
#define TX_FRAME_IRQ	614,22649
#define TX_ERROR	618,22773
#define TX_INTERFRAME_WAIT	621,22865
#define TX_PASS_CRC	622,22899
#define TX_PASS_SRC_ADDR	627,23053
#define TX_STRIP_FS	634,23284
#define TPL_NUM	645,23658
typedef struct s_TPL TPL;TPL650,23767
struct s_TPL s_TPL652,23794
#define RX_VALID	698,25431
#define RX_FRAME_COMPLETE	702,25553
#define RX_START_FRAME	705,25648
#define RX_END_FRAME	708,25753
#define RX_FRAME_IRQ	712,25884
#define RX_INTERFRAME_WAIT	716,26003
#define RX_PASS_CRC	721,26159
#define RX_PASS_SRC_ADDR	728,26394
#define RX_RECEIVE_FS	735,26628
#define RX_ADDR_MATCH	740,26835
#define RX_STATUS_MASK	743,26951
#define RX_INTERN_ADDR_MATCH 745,27020
#define RX_EXTERN_ADDR_MATCH 746,27095
#define RX_INTEXT_ADDR_MATCH 749,27205
#define RX_READY 752,27303
#define ILLEGAL_COMMAND	757,27478
#define ADDRESS_ERROR	760,27581
#define ADAPTER_OPEN	763,27695
#define ADAPTER_CLOSE	766,27787
#define SAME_COMMAND	769,27882
#define NODE_ADDR_ERROR	774,28033
#define LIST_SIZE_ERROR	777,28126
#define BUF_SIZE_ERROR	780,28220
#define TX_BUF_COUNT_ERROR	783,28317
#define OPEN_ERROR	786,28413
#define GOOD_COMPLETION	791,28549
#define INVALID_OPEN_OPTION	792,28606
#define OPEN_PHASES_MASK 797,28781
#define LOBE_MEDIA_TEST 798,28857
#define PHYSICAL_INSERTION 799,28900
#define ADDRESS_VERIFICATION 800,28943
#define PARTICIPATION_IN_RING_POLL 801,28986
#define REQUEST_INITIALISATION 802,29029
#define FULLDUPLEX_CHECK 803,29072
#define OPEN_ERROR_CODES_MASK	806,29181
#define OPEN_FUNCTION_FAILURE 807,29252
#define OPEN_SIGNAL_LOSS	810,29378
#define OPEN_TIMEOUT	813,29474
#define OPEN_RING_FAILURE	816,29573
#define OPEN_RING_BEACONING	819,29671
#define OPEN_DUPLICATE_NODEADDR	822,29774
#define OPEN_REQUEST_INIT	825,29885
#define OPEN_REMOVE_RECEIVED 826,29958
#define OPEN_FULLDUPLEX_SET	829,30063
#define BRIDGE_INVALID_MAX_LEN 834,30226
#define BRIDGE_INVALID_SRC_RING 837,30337
#define BRIDGE_INVALID_TRG_RING 840,30450
#define BRIDGE_INVALID_BRDGE_NO 843,30563
#define BRIDGE_INVALID_OPTIONS 844,30634
#define BRIDGE_DIAGS_FAILED 845,30704
#define BRIDGE_NO_SRA 846,30783
#define BUD_INITIAL_ERROR 853,30938
#define BUD_CHECKSUM_ERROR 854,30974
#define BUD_ADAPTER_RAM_ERROR 855,31010
#define BUD_INSTRUCTION_ERROR 856,31046
#define BUD_CONTEXT_ERROR 857,31082
#define BUD_PROTOCOL_ERROR 858,31118
#define BUD_INTERFACE_ERROR	859,31154
#define BUD_MAX_RETRIES 862,31207
#define BUD_MAX_LOOPCNT 863,31241
#define BUD_TIMEOUT 864,31275
#define INIT_MAX_RETRIES 867,31344
#define INIT_MAX_LOOPCNT 868,31407
#define SIGNAL_LOSS 871,31517
#define HARD_ERROR 874,31614
#define SOFT_ERROR 877,31715
#define TRANSMIT_BEACON 880,31811
#define LOBE_WIRE_FAULT 883,31911
#define AUTO_REMOVAL_ERROR 887,32047
#define REMOVE_RECEIVED 890,32158
#define COUNTER_OVERFLOW 893,32288
#define SINGLE_STATION 896,32412
#define RING_RECOVERY 899,32513
#define ADAPTER_CLOSED 903,32640
#define DIO_PARITY 907,32802
#define DMA_READ_ABORT 910,32916
#define DMA_WRITE_ABORT 916,33148
#define ILLEGAL_OP_CODE 920,33297
#define PARITY_ERRORS 925,33480
#define RAM_DATA_ERROR 928,33583
#define RAM_PARITY_ERROR 932,33740
#define RING_UNDERRUN 936,33899
#define INVALID_IRQ 939,34010
#define INVALID_ERROR_IRQ 943,34168
#define INVALID_XOP 947,34312
#define CHECKADDR 951,34469
#define ROM_PAGE_0 954,34578
#define RX_COMPLETE 960,34769
#define RX_SUSPENDED 963,34883
#define RX_FRAME_CONTROL_BITS 969,35053
#define VALID_SINGLE_BUFFER_FRAME 971,35158
typedef enum SKB_STAT SKB_STAT;SKB_STAT974,35254
enum SKB_STAT SKB_STAT975,35286
	SKB_UNAVAILABLE,976,35302
	SKB_DMA_DIRECT,977,35320
	SKB_DATA_COPY978,35337
#define RPL_NUM	984,35475
#define RX_FRAG_NUM 986,35495
typedef struct s_RPL RPL;RPL991,35641
struct s_RPL s_RPL992,35667
typedef struct net_local net_local1035,37162
} NET_LOCAL;NET_LOCAL1095,38697

drivers/net/sktr_firmware.h,32
unsigned char sktr_code[24,707

drivers/net/hplance.h,280
struct hplance_reghplance_reg7,216
#define LE_IE 16,511
#define LE_IR 17,584
#define LE_LOCK 18,660
#define LE_ACK 19,737
#define LE_JAB 20,805
#define HPLANCE_IDOFF 28,1111
#define HPLANCE_REGOFF 29,1202
#define HPLANCE_MEMOFF 30,1276
#define HPLANCE_NVRAMOFF 31,1356

drivers/net/ne3210.c,1318
static const char *version 28,843
#define NE3210_START_PG	58,1764
#define NE3210_STOP_PG	59,1827
#define NE3210_ID_PORT	61,1890
#define NE3210_IO_EXTENT	62,1951
#define NE3210_SA_PROM	63,1981
#define NE3210_RESET_PORT	64,2038
#define NE3210_NIC_OFFSET	65,2070
#define NE3210_ADDR0	67,2134
#define NE3210_ADDR1	68,2189
#define NE3210_ADDR2	69,2216
#define NE3210_ID	71,2244
#define NE3210_CFG1	73,2313
#define NE3210_CFG2	74,2378
#define NE3210_D_PROBE	82,2589
#define NE3210_D_RX_PKT	83,2617
#define NE3210_D_TX_PKT	84,2646
#define NE3210_D_IRQ	85,2675
#define NE3210_DEBUG	87,2702
static unsigned char irq_map[89,2728
static unsigned char irq_map[] __initdata 89,2728
static unsigned int shmem_map[90,2802
static unsigned int shmem_map[] __initdata 90,2802
__initfunc(98,3101
__initfunc(125,3766
static void ne3210_reset_8390(275,8454
ne3210_get_8390_hdr(307,9403
static void ne3210_block_input(320,9924
static void ne3210_block_output(337,10487
static int ne3210_open(346,10772
static int ne3210_close(353,10866
#define MAX_NE3210_CARDS	365,11052
#define NAMELEN	366,11123
static char namelist[367,11182
static struct device dev_ne3210[368,11241
static int io[377,11400
static int irq[378,11442
static int mem[379,11486
int init_module(385,11716
void cleanup_module(412,12418

drivers/net/3c515.c,7584
static char *version 15,519
#define CORKSCREW 16,596
static const int rx_copybreak 21,792
static const int mtu 23,908
static int max_interrupt_work 25,1006
#define AUTOMEDIA 28,1107
#define VORTEX_BUS_MASTER34,1396
#define TX_RING_SIZE	38,1520
#define RX_RING_SIZE	39,1544
#define PKT_BUF_SZ	40,1568
#define NEW_MULTICAST63,2098
#define RUN_AT(RUN_AT67,2192
#define DEV_ALLOC_SKB(DEV_ALLOC_SKB68,2226
#define FREE_IRQ(FREE_IRQ70,2277
#define REQUEST_IRQ(REQUEST_IRQ71,2329
#define IRQ(IRQ72,2399
#define test_and_set_bit(test_and_set_bit75,2492
#define DRIVER_DEBUG 88,3018
static int rx_nocopy 91,3128
#define WAIT_TX_AVAIL 95,3282
#define TX_TIMEOUT 98,3367
#define CORKSCREW_TOTAL_SIZE 103,3557
struct netdev_entry tc515_drv 106,3612
int vortex_debug 111,3724
int vortex_debug 113,3763
#define CORKSCREW_ID 116,3793
#define EL3WINDOW(EL3WINDOW177,6010
#define EL3_CMD 178,6086
#define EL3_STATUS 179,6107
enum vortex_cmd vortex_cmd187,6431
	TotalReset 188,6449
	TotalReset = 0<<11, SelectWindow 188,6449
	TotalReset = 0<<11, SelectWindow = 1<<11, StartCoax 188,6449
	RxDisable 189,6511
	RxDisable = 3<<11, RxEnable 189,6511
	RxDisable = 3<<11, RxEnable = 4<<11, RxReset 189,6511
	UpStall 190,6566
	UpStall = 6<<11, UpUnstall 190,6566
	DownStall 191,6607
	DownStall = (6<<11)+2, DownUnstall 191,6607
	RxDiscard 192,6656
	RxDiscard = 8<<11, TxEnable 192,6656
	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable 192,6656
	RxDiscard = 8<<11, TxEnable = 9<<11, TxDisable = 10<<11, TxReset 192,6656
	FakeIntr 193,6732
	FakeIntr = 12<<11, AckIntr 193,6732
	FakeIntr = 12<<11, AckIntr = 13<<11, SetIntrEnb 193,6732
	SetStatusEnb 194,6791
	SetStatusEnb = 15<<11, SetRxFilter 194,6791
	SetStatusEnb = 15<<11, SetRxFilter = 16<<11, SetRxThreshold 194,6791
	SetTxThreshold 195,6862
	SetTxThreshold = 18<<11, SetTxStart 195,6862
	StartDMAUp 196,6909
	StartDMAUp = 20<<11, StartDMADown 196,6909
	StartDMAUp = 20<<11, StartDMADown = (20<<11)+1, StatsEnable 196,6909
	StatsDisable 197,6980
	StatsDisable = 22<<11, StopCoax 197,6980
enum RxFilter RxFilter200,7087
	RxStation 201,7103
	RxStation = 1, RxMulticast 201,7103
	RxStation = 1, RxMulticast = 2, RxBroadcast 201,7103
	RxStation = 1, RxMulticast = 2, RxBroadcast = 4, RxProm 201,7103
enum vortex_status vortex_status204,7211
	IntLatch 205,7232
	IntLatch = 0x0001,205,7232
	IntLatch = 0x0001, AdapterFailure 205,7232
	IntLatch = 0x0001, AdapterFailure = 0x0002,205,7232
	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete 205,7232
	IntLatch = 0x0001, AdapterFailure = 0x0002, TxComplete = 0x0004,205,7232
	TxAvailable 206,7298
	TxAvailable = 0x0008,206,7298
	TxAvailable = 0x0008, RxComplete 206,7298
	TxAvailable = 0x0008, RxComplete = 0x0010,206,7298
	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly 206,7298
	TxAvailable = 0x0008, RxComplete = 0x0010, RxEarly = 0x0020,206,7298
	IntReq 207,7360
	IntReq = 0x0040,207,7360
	IntReq = 0x0040, StatsFull 207,7360
	IntReq = 0x0040, StatsFull = 0x0080,207,7360
	DMADone 208,7398
	DMADone = 1<<8, DownComplete 208,7398
	DMADone = 1<<8, DownComplete = 1<<9, UpComplete 208,7398
	DMAInProgress 209,7456
	CmdInProgress 210,7517
enum Window1 Window1215,7716
	TX_FIFO 216,7731
	TX_FIFO = 0x10,216,7731
	TX_FIFO = 0x10,  RX_FIFO 216,7731
	TX_FIFO = 0x10,  RX_FIFO = 0x10,216,7731
	TX_FIFO = 0x10,  RX_FIFO = 0x10,  RxErrors 216,7731
	TX_FIFO = 0x10,  RX_FIFO = 0x10,  RxErrors = 0x14,216,7731
	RxStatus 217,7783
	RxStatus = 0x18,217,7783
	RxStatus = 0x18,  Timer=217,7783
	RxStatus = 0x18,  Timer=0x1A,217,7783
	RxStatus = 0x18,  Timer=0x1A, TxStatus 217,7783
	RxStatus = 0x18,  Timer=0x1A, TxStatus = 0x1B,217,7783
	TxFree 218,7831
	TxFree = 0x1C,218,7831
enum Window0 Window0220,7891
  Wn0IRQ 221,7906
  Wn0IRQ = 0x08,221,7906
	Wn0EepromCmd 223,7946
	Wn0EepromCmd = 0x200A,223,7946
	Wn0EepromData 224,8012
	Wn0EepromData = 0x200C,224,8012
	Wn0EepromCmd 226,8085
	Wn0EepromData 227,8147
enum Win0_EEPROM_bits Win0_EEPROM_bits230,8220
	EEPROM_Read 231,8244
	EEPROM_Read = 0x80,231,8244
	EEPROM_Read = 0x80, EEPROM_WRITE 231,8244
	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40,231,8244
	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE 231,8244
	EEPROM_Read = 0x80, EEPROM_WRITE = 0x40, EEPROM_ERASE = 0xC0,231,8244
	EEPROM_EWENB 232,8307
	EEPROM_EWENB = 0x30,232,8307
	EEPROM_EWDIS 233,8372
	EEPROM_EWDIS = 0x00,233,8372
enum eeprom_offset eeprom_offset236,8466
	PhysAddr01=237,8487
	PhysAddr01=0, PhysAddr23=237,8487
	PhysAddr01=0, PhysAddr23=1, PhysAddr45=237,8487
	PhysAddr01=0, PhysAddr23=1, PhysAddr45=2, ModelID=237,8487
	EtherLink3ID=238,8541
enum Window3 Window3240,8562
	Wn3_Config=241,8612
	Wn3_Config=0, Wn3_MAC_Ctrl=241,8612
	Wn3_Config=0, Wn3_MAC_Ctrl=6, Wn3_Options=241,8612
union wn3_config wn3_config243,8661
enum Window4 Window4253,8887
	Wn4_NetDiag 254,8902
	Wn4_NetDiag = 6, Wn4_Media 254,8902
enum Win4_Media_bits Win4_Media_bits256,8973
	Media_SQE 257,8996
	Media_SQE = 0x0008,257,8996
	Media_10TP 258,9059
	Media_10TP = 0x00C0,258,9059
	Media_Lnk 259,9128
	Media_Lnk = 0x0080,259,9128
	Media_LnkBeat 260,9195
	Media_LnkBeat = 0x0800,260,9195
enum Window7 Window7262,9223
	Wn7_MasterAddr 263,9278
	Wn7_MasterAddr = 0, Wn7_MasterLen 263,9278
	Wn7_MasterAddr = 0, Wn7_MasterLen = 6, Wn7_MasterStatus 263,9278
enum MasterCtrl MasterCtrl266,9415
	PktStatus 267,9433
	PktStatus = 0x400,267,9433
	PktStatus = 0x400, DownListPtr 267,9433
	PktStatus = 0x400, DownListPtr = 0x404,267,9433
	PktStatus = 0x400, DownListPtr = 0x404, FragAddr 267,9433
	PktStatus = 0x400, DownListPtr = 0x404, FragAddr = 0x408,267,9433
	PktStatus = 0x400, DownListPtr = 0x404, FragAddr = 0x408, FragLen 267,9433
	PktStatus = 0x400, DownListPtr = 0x404, FragAddr = 0x408, FragLen = 0x40c,267,9433
	TxFreeThreshold 268,9509
	TxFreeThreshold = 0x40f,268,9509
	TxFreeThreshold = 0x40f, UpPktStatus 268,9509
	TxFreeThreshold = 0x40f, UpPktStatus = 0x410,268,9509
	TxFreeThreshold = 0x40f, UpPktStatus = 0x410, UpListPtr 268,9509
	TxFreeThreshold = 0x40f, UpPktStatus = 0x410, UpListPtr = 0x418,268,9509
struct boom_rx_desc boom_rx_desc274,9741
enum rx_desc_status rx_desc_status281,9852
	RxDComplete=282,9874
	RxDComplete=0x00008000,282,9874
	RxDComplete=0x00008000, RxDError=282,9874
	RxDComplete=0x00008000, RxDError=0x4000,282,9874
struct boom_tx_desc boom_tx_desc286,9968
struct vortex_private vortex_private293,10042
enum xcvr_types xcvr_types323,11425
	XCVR_10baseT=324,11443
	XCVR_10baseT=0, XCVR_AUI,324,11443
	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly,324,11443
	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2,324,11443
	XCVR_10baseT=0, XCVR_AUI, XCVR_10baseTOnly, XCVR_10base2, XCVR_100baseTx,324,11443
	XCVR_100baseFx,325,11518
	XCVR_100baseFx, XCVR_MII=325,11518
	XCVR_100baseFx, XCVR_MII=6, XCVR_Default=325,11518
static struct media_table media_table328,11567
} media_tbl[334,11844
static int options[379,14010
static int debug 382,14085
static struct device *root_vortex_dev 384,14186
init_module(387,14237
int tc515_probe(402,14456
static int vortex_scan(415,14674
static struct device *vortex_found_device(455,15861
static int vortex_probe1(520,17875
vortex_open(610,20804
static void vortex_timer(778,26229
vortex_start_xmit(853,28595
static void vortex_interrupt IRQ(1017,33890
vortex_rx(1164,38416
boomerang_rx(1233,40733
vortex_close(1322,43687
vortex_get_stats(1388,45321
static void update_stats(1409,45906
set_rx_mode(1445,47352
cleanup_module(1464,47857

drivers/net/acenic.c,1900
#define PKT_COPY_THRESHOLD 24,883
#define MAX_TEXT_LEN	53,1471
#define MAX_RODATA_LEN	54,1500
#define MAX_DATA_LEN	55,1530
#define PCI_VENDOR_ID_ALTEON	60,1618
#define PCI_DEVICE_ID_ALTEON_ACENIC	61,1656
#define PCI_DEVICE_ID_3COM_3C985	64,1739
#define PCI_VENDOR_ID_NETGEAR	67,1816
#define PCI_DEVICE_ID_NETGEAR_GA620	68,1854
#define DEF_TX_RATIO	158,5701
#define DEF_TX_COAL	159,5725
#define DEF_TX_MAX_DESC	160,5765
#define DEF_RX_COAL	161,5791
#define DEF_RX_MAX_DESC	162,5833
#define DEF_TRACE	163,5859
#define DEF_STAT	164,5879
static int link[166,5915
static int trace[167,5943
static int tx_coal_tick[168,5972
static int rx_coal_tick[169,6008
static int max_tx_desc[170,6044
static int max_rx_desc[171,6079
static int tx_ratio[172,6114
static const char __initdata *version 174,6147
static struct device *root_dev 176,6255
static int probed __initdata 178,6295
__initfunc(180,6330
int init_module(352,10482
void cleanup_module(362,10599
static inline void ace_issue_cmd(413,11639
__initfunc(426,11870
static void ace_timer(803,21954
static void ace_dump_trace(827,22598
static int ace_load_std_rx_ring(840,22803
static int ace_load_jumbo_rx_ring(909,24361
static int ace_flush_jumbo_rx_ring(965,25585
static u32 ace_handle_event(1001,26419
static int ace_rx_int(1062,27890
static void ace_interrupt(1209,31178
static int ace_open(1296,33005
static int ace_close(1358,34050
static int ace_start_xmit(1408,34978
static int ace_change_mtu(1453,36077
static int ace_set_mac_addr(1489,36774
static void ace_set_multicast_list(1515,37261
static struct net_device_stats *ace_get_stats(1569,38657
__initfunc(1577,38788
__initfunc(1612,39459
__initfunc(1645,40145
static void eeprom_start(1696,41688
static void eeprom_prep(1719,42123
static int eeprom_check_ack(1752,42730
static void eeprom_stop(1777,43221
static u8 read_eeprom_byte(1807,43758

drivers/net/acenic.h,4787
#define _ACENIC_H_2,19
} aceaddr;aceaddr24,729
static inline void set_aceaddr(27,742
static inline void set_aceaddr_bus(41,1038
static inline void *get_aceaddr(55,1332
static inline void *get_aceaddr_bus(68,1541
struct ace_regs ace_regs81,1749
#define ACE_WINDOW_SIZE	211,3552
#define ACE_JUMBO_MTU 213,3583
#define ACE_STD_MTU 214,3610
#define ACE_TRACE_SIZE 216,3636
#define IN_INT	222,3707
#define CLR_INT	223,3728
#define BYTE_SWAP	224,3750
#define WORD_SWAP	225,3773
#define MASK_INTS	226,3796
#define EEPROM_DATA_IN	232,3860
#define EEPROM_DATA_OUT	233,3893
#define EEPROM_WRITE_ENABLE	234,3927
#define EEPROM_CLK_OUT	235,3964
#define EEPROM_BASE	237,3998
#define EEPROM_WRITE_SELECT	239,4031
#define EEPROM_READ_SELECT	240,4064
#define SRAM_BANK_512K	242,4097
#define SYNC_SRAM_TIMING	249,4157
#define CPU_RESET	256,4220
#define CPU_TRACE	257,4244
#define CPU_PROM_FAILED	258,4268
#define CPU_HALT	259,4298
#define CPU_HALTED	260,4327
#define DMA_READ_MAX_4	267,4387
#define DMA_READ_MAX_16	268,4416
#define DMA_READ_MAX_32	269,4446
#define DMA_READ_MAX_64	270,4476
#define DMA_READ_MAX_128	271,4506
#define DMA_READ_MAX_256	272,4536
#define DMA_READ_MAX_1K	273,4566
#define DMA_WRITE_MAX_4	274,4596
#define DMA_WRITE_MAX_16	275,4626
#define DMA_WRITE_MAX_32	276,4656
#define DMA_WRITE_MAX_64	277,4686
#define DMA_WRITE_MAX_128	278,4716
#define DMA_WRITE_MAX_256	279,4747
#define DMA_WRITE_MAX_1K	280,4778
#define MEM_READ_MULTIPLE	281,4808
#define DMA_WRITE_ALL_ALIGN	282,4845
#define READ_CMD_MEM	283,4884
#define WRITE_CMD_MEM	284,4917
#define ACE_BYTE_SWAP_DATA	291,4976
#define ACE_WARN	292,5008
#define ACE_WORD_SWAP	293,5031
#define ACE_NO_JUMBO_FRAG	294,5059
#define ACE_FATAL	295,5091
#define DMA_THRESH_8W	302,5145
#define TICKS_PER_SEC	309,5204
#define LNK_PREF	316,5258
#define LNK_10MB	317,5287
#define LNK_100MB	318,5316
#define LNK_1000MB	319,5346
#define LNK_FULL_DUPLEX	320,5377
#define LNK_HALF_DUPLEX	321,5413
#define LNK_TX_FLOW_CTL_Y	322,5449
#define LNK_NEG_ADVANCED	323,5486
#define LNK_RX_FLOW_CTL_Y	324,5522
#define LNK_NIC	325,5559
#define LNK_JAM	326,5588
#define LNK_JUMBO	327,5617
#define LNK_ALTEON	328,5647
#define LNK_NEG_FCTL	329,5678
#define LNK_NEGOTIATE	330,5711
#define LNK_ENABLE	331,5745
#define LNK_UP	332,5776
#define EVT_RING_ENTRIES	339,5835
#define EVT_RING_SIZE	340,5864
struct event event342,5929
#define E_FW_RUNNING	360,6095
#define E_STATS_UPDATED	361,6122
#define E_STATS_UPDATE	363,6153
#define E_LNK_STATE	365,6183
#define E_C_LINK_UP	366,6209
#define E_C_LINK_DOWN	367,6235
#define E_ERROR	369,6264
#define E_C_ERR_INVAL_CMD	370,6287
#define E_C_ERR_UNIMP_CMD	371,6318
#define E_C_ERR_BAD_CFG	372,6349
#define E_MCAST_LIST	374,6380
#define E_C_MCAST_ADDR_ADD	375,6407
#define E_C_MCAST_ADDR_DEL	376,6439
#define E_RESET_JUMBO_RNG	378,6472
#define CMD_RING_ENTRIES	385,6525
struct cmd cmd387,6554
#define C_HOST_STATE	400,6686
#define C_C_STACK_UP	401,6713
#define C_C_STACK_DOWN	402,6740
#define C_FDR_FILTERING	404,6770
#define C_C_FDR_FILT_ENABLE	405,6800
#define C_C_FDR_FILT_DISABLE	406,6833
#define C_SET_RX_PRD_IDX	408,6868
#define C_UPDATE_STATS	409,6898
#define C_RESET_JUMBO_RNG	410,6927
#define C_ADD_MULTICAST_ADDR	411,6958
#define C_DEL_MULTICAST_ADDR	412,6992
#define C_SET_PROMISC_MODE	414,7027
#define C_C_PROMISC_ENABLE	415,7059
#define C_C_PROMISC_DISABLE	416,7091
#define C_LNK_NEGOTIATION	418,7125
#define C_SET_MAC_ADDR	419,7156
#define C_CLEAR_PROFILE	420,7185
#define C_SET_MULTICAST_MODE	422,7216
#define C_C_MCAST_ENABLE	423,7250
#define C_C_MCAST_DISABLE	424,7280
#define C_CLEAR_STATS	426,7312
#define C_SET_RX_JUMBO_PRD_IDX	427,7340
#define C_REFRESH_STATS	428,7376
#define DESC_TX	435,7437
#define DESC_RX	436,7460
#define DESC_END	437,7483
#define DESC_MORE	438,7506
#define FLG_RX_TCP_UDP_SUM	444,7562
#define FLG_RX_IP_SUM	445,7594
#define FLG_RX_SPLIT_HDRS	446,7622
#define FLG_RX_NO_PSDO_HDR_SUM	447,7653
#define FLG_RNG_DISABLED	448,7689
#define DFLG_RX_JUMBO	453,7748
#define TX_RING_ENTRIES	459,7796
#define TX_RING_SIZE	460,7824
#define TX_RING_BASE	461,7888
struct tx_desc{tx_desc463,7917
#define RX_STD_RING_ENTRIES	483,8177
#define RX_STD_RING_SIZE	484,8209
#define RX_JUMBO_RING_ENTRIES	486,8282
#define RX_JUMBO_RING_SIZE	487,8316
#define RX_MINI_RING_ENTRIES	489,8392
#define RX_MINI_RING_SIZE	490,8426
#define RX_RETURN_RING_ENTRIES	492,8500
#define RX_RETURN_RING_SIZE	493,8536
#define RX_RING_THRESH	496,8626
#define RX_RING_JUMBO_THRESH	497,8653
struct rx_desc{rx_desc499,8686
struct ring_ctrl ring_ctrl537,9165
struct ace_mac_stats ace_mac_stats550,9304
struct ace_info ace_info584,9750
struct ace_privateace_private605,10149

drivers/net/acenic_firmware.h,1427
int tigonFwReleaseMajor 2,27
int tigonFwReleaseMinor 3,58
int tigonFwReleaseFix 4,89
u32 tigonFwStartAddr 5,118
u32 tigonFwTextAddr 6,153
int tigonFwTextLen 7,187
u32 tigonFwRodataAddr 8,217
int tigonFwRodataLen 9,253
u32 tigonFwDataAddr 10,283
int tigonFwDataLen 11,317
u32 tigonFwSbssAddr 12,345
int tigonFwSbssLen 13,379
u32 tigonFwBssAddr 14,406
int tigonFwBssLen 15,439
u32 tigonFwText[16,467
u32 tigonFwText[(MAX_TEXT_LEN/4) + 1] __initdata 16,467
u32 tigonFwRodata[4259,193890
u32 tigonFwRodata[(MAX_RODATA_LEN/4) + 1] __initdata 4259,193890
u32 tigonFwData[4431,201295
u32 tigonFwData[(MAX_DATA_LEN/4) + 1] __initdata 4431,201295
int tigon2FwReleaseMajor 4455,201972
int tigon2FwReleaseMinor 4456,202004
int tigon2FwReleaseFix 4457,202036
u32 tigon2FwStartAddr 4458,202066
u32 tigon2FwTextAddr 4459,202102
int tigon2FwTextLen 4460,202137
u32 tigon2FwRodataAddr 4461,202167
int tigon2FwRodataLen 4462,202204
u32 tigon2FwDataAddr 4463,202235
int tigon2FwDataLen 4464,202270
u32 tigon2FwSbssAddr 4465,202299
int tigon2FwSbssLen 4466,202334
u32 tigon2FwBssAddr 4467,202362
int tigon2FwBssLen 4468,202396
u32 tigon2FwText[4469,202425
u32 tigon2FwText[(MAX_TEXT_LEN/4) + 1] __initdata 4469,202425
u32 tigon2FwRodata[8255,376895
u32 tigon2FwRodata[(MAX_RODATA_LEN/4) + 1] __initdata 8255,376895
u32 tigon2FwData[8508,388140
u32 tigon2FwData[(MAX_DATA_LEN/4) + 1] __initdata 8508,388140

drivers/net/cosa.c,3494
#define COSA_MAX_ID_STRING	102,3823
#define COSA_MAX_NAME	105,3896
struct channel_data channel_data109,3980
struct cosa_data cosa_data138,4947
static int cosa_major 172,6190
#define CARD_MINOR_BITS	179,6377
#define MAX_CARDS	185,6642
#define DRIVER_RX_READY	188,6715
#define DRIVER_TX_READY	189,6747
#define DRIVER_TXMAP_SHIFT	190,6779
#define DRIVER_TXMAP_MASK	191,6808
#define TXBIT 197,7012
#define RXBIT 198,7028
#define IRQBIT 199,7044
#define COSA_MTU 201,7062
static struct cosa_data cosa_cards[208,7368
static int nr_cards 209,7415
static int io[212,7467
static int dma[214,7570
int io[216,7638
int dma[217,7669
static int irq[220,7742
#define cosa_outb 236,8388
#define cosa_outw 237,8413
#define cosa_inb 238,8438
#define cosa_inw 239,8462
#define cosa_outb 241,8492
#define cosa_outw 242,8515
#define cosa_inb 243,8538
#define cosa_inw 244,8560
#define is_8bit(is_8bit247,8590
#define cosa_getstatus(cosa_getstatus249,8640
#define cosa_putstatus(cosa_putstatus250,8697
#define cosa_getdata16(cosa_getdata16251,8767
#define cosa_getdata8(cosa_getdata8252,8822
#define cosa_putdata16(cosa_putdata16253,8876
#define cosa_putdata8(cosa_putdata8254,8940
static struct file_operations cosa_fops 298,10987
int init_module(355,12769
void cleanup_module 390,13675
static __inline__ void channel_init(417,14340
static int cosa_probe(428,14610
static void sppp_channel_init(561,18472
static void sppp_channel_delete(585,19074
static int cosa_sppp_open(592,19211
static int cosa_sppp_tx(627,19973
static int cosa_sppp_close(659,20751
static char *sppp_setup_rx(683,21215
static int sppp_rx_done(702,21714
static int sppp_tx_done(723,22254
static struct net_device_stats *cosa_net_stats(741,22655
static void chardev_channel_init(750,22836
static long long cosa_lseek(756,22943
static ssize_t cosa_read(762,23044
static char *chrdev_setup_rx(813,24385
static int chrdev_rx_done(820,24531
static ssize_t cosa_write(832,24754
static int chrdev_tx_done(886,26183
static unsigned int cosa_poll(897,26421
static int cosa_open(903,26546
static int cosa_release(941,27370
static struct fasync_struct *fasync[958,27777
static int cosa_fasync(961,27853
static inline int cosa_reset(976,28217
static inline int cosa_download(992,28761
static inline int cosa_readmem(1028,29870
static inline int cosa_start(1061,30829
static inline int cosa_getidstr(1087,31608
static inline int cosa_gettype(1095,31847
static int cosa_ioctl_common(1102,32014
static int cosa_sppp_ioctl(1160,33401
static int cosa_chardev_ioctl(1172,33703
static void cosa_enable_rx(1187,34179
static void cosa_disable_rx(1195,34356
static int cosa_start_tx(1209,34790
static void put_driver_status(1236,35396
static void put_driver_status_nolock(1271,36198
static void cosa_kick(1304,36987
static int cosa_dma_able(1340,37867
static int download(1366,38722
static int startmicrocode(1410,39920
static int readmem(1439,40908
static int cosa_reset_and_read_id(1484,42066
static int get_wait_data(1533,43426
static int put_wait_data(1562,44219
static int puthexnumber(1592,45068
static inline void tx_interrupt(1640,46793
static inline void rx_interrupt(1762,50287
static void inline eot_interrupt(1848,52757
static void cosa_interrupt(1896,54203
static void debug_status_in(1947,55443
static void debug_status_out(1973,55946
static void debug_data_in(1986,56385
static void debug_data_out(1991,56515
static void debug_data_cmd(1996,56646

drivers/net/cosa.h,1130
#define COSA_H__22,858
#define SR_RX_DMA_ENA 28,956
#define SR_TX_DMA_ENA 29,1018
#define SR_RST 30,1083
#define SR_USR_INT_ENA 31,1131
#define SR_TX_INT_ENA 32,1195
#define SR_RX_INT_ENA 33,1266
#define SR_USR_RQ 36,1370
#define SR_TX_RDY 37,1438
#define SR_RX_RDY 38,1502
#define SR_UP_REQUEST 40,1561
#define SR_DOWN_REQUEST 42,1677
#define SR_END_OF_TRANSFER 44,1799
#define SR_CMD_FROM_SRP_MASK 47,1932
#define SR_RDY_RCV 50,2050
#define SR_RDY_SND 51,2112
#define SR_CMD_PND 52,2171
#define SR_PKT_UP 55,2262
#define SR_PKT_DOWN 56,2334
#define SR_LOAD_ADDR 60,2434
#define SR_START_ADDR 61,2499
#define COSA_LOAD_ADDR 63,2566
#define COSA_MAX_FIRMWARE_SIZE	64,2632
struct cosa_download cosa_download67,2685
#define COSAIORSET	73,2764
#define COSAIOSTRT	76,2837
#define COSAIORMEM	79,2928
#define COSAIODOWNLD	82,3067
#define COSAIORTYPE	85,3206
#define COSAIORIDSTR	88,3301
#define COSA_MAX_ID_STRING 90,3403
#define COSAIONRCARDS	97,3613
#define COSAIONRCHANS	100,3696
#define COSAIOBMSET	103,3784
#define COSA_BM_OFF	105,3845
#define COSA_BM_ON	106,3915
#define COSAIOBMGET	109,4014

drivers/net/rcif.h,1964
#define RCIF_H37,1319
int USER_PROTOCOL_REV 41,1467
__attribute__(__attribute__51,1853
__attribute__(__attribute__72,2690
typedef struct RC_user_tag RCuser_struct;RCuser_struct104,3964
struct RC_user_tagRC_user_tag107,4037
        #define FirmStringLen 153,5455
        #define MAC_SIZE 171,6035
union RC_user_data_tag RC_user_data_tag202,6981
} _RC_user_data;218,7721
#define RCUS_GETINFO 222,7934
#define RCUS_GETSPEED 223,7981
#define RCUS_GETPROM 224,8029
#define RCUS_GETBROADCAST 225,8076
#define RCUS_GETFWVER 226,8128
#define RCUS_GETIPANDMASK 227,8176
#define RCUS_GETMAC 228,8228
#define RCUS_GETLINKSTATUS 229,8274
#define RCUS_GETLINKSTATISTICS 230,8326
#define RCUS_DEFAULT 231,8378
#define RCUS_SETSPEED 232,8425
#define RCUS_SETPROM 233,8473
#define RCUS_SETBROADCAST 234,8520
#define RCUS_SETIPANDMASK 235,8572
#define RCUS_SETMAC 236,8624
#define RCUD_GETINFO 240,8810
#define RCUD_GETSPEED 241,8863
#define RCUD_GETPROM 242,8917
#define RCUD_GETBROADCAST 243,8970
#define RCUD_GETFWVER 244,9028
#define RCUD_GETIPANDMASK 245,9082
#define RCUD_GETMAC 246,9140
#define RCUD_GETLINKSTATUS 247,9192
#define RCUD_GETLINKSTATISTICS 248,9251
#define RCUD_DEFAULT 249,9314
#define RCUD_SETSPEED 250,9369
#define RCUD_SETPROM 251,9423
#define RCUD_SETBROADCAST 252,9476
#define RCUD_SETIPANDMASK 253,9534
#define RCUD_SETMAC 254,9592
#define RCUC_GETINFO 258,9712
#define RCUC_GETSPEED 259,9749
#define RCUC_GETFWVER 260,9786
#define RCUC_GETIPANDMASK 261,9823
#define RCUC_GETMAC 262,9860
#define RCUC_GETLINKSTATUS 263,9897
#define RCUC_GETLINKSTATISTICS 264,9934
#define RCUC_GETPROM 265,9971
#define RCUC_GETBROADCAST 266,10008
#define RCUC_DEFAULT 267,10045
#define RCUC_SETSPEED 268,10082
#define RCUC_SETIPANDMASK 269,10119
#define RCUC_SETMAC 270,10156
#define RCUC_SETPROM 271,10193
#define RCUC_SETBROADCAST 272,10230
#define RCU_PROTOCOL_REV 275,10337
#define RCU_COMMAND 276,10385

drivers/net/rcpci45.c,1270
static char *version 47,1761
#define LINUX_2_170,2339
#define RC_LINUX_MODULE83,2531
#define RUN_AT(RUN_AT87,2596
#define NEW_MULTICAST89,2631
#define ioremap 93,2697
#define iounmap 94,2720
#define RC_PCI45_VENDOR_ID 98,2790
#define RC_PCI45_DEVICE_ID 99,2825
#define MAX_ETHER_SIZE 101,2861
#define MAX_NMBR_RCV_BUFFERS 102,2898
#define RC_POSTED_BUFFERS_LOW_MARK 103,2933
#define BD_SIZE 104,2992
#define BD_LEN_OFFSET 105,3049
#define RC_LAN_TARGET_ID 109,3162
#define DEFAULT_RECV_INIT_CONTEXT 111,3245
static U32 DriverControlWord 114,3290
DPA, *PDPA;PDPA145,4219
#define MAX_ADAPTERS 147,4232
static PDPA  PCIAdapters[149,4257
static struct device *root_RCdev 178,5374
int init_module(181,5430
static int RCscan(199,5684
RCfound_device(311,9745
static int RCprobe1(429,13531
RCopen(441,13788
RC_xmit_packet(506,15829
RCxmit_callback(579,17845
RCreset_callback(628,19064
RCreboot_callback(672,20263
int broadcast_packet(704,21372
RCrecv_callback(721,21729
RCinterrupt(878,27012
#define REBOOT_REINIT_RETRY_LIMIT 904,27608
static void rc_timer(905,27645
RCclose(988,30389
RCget_stats(1027,31393
static int RCioctl(1114,34694
static int RCconfig(1271,40907
cleanup_module(1290,41377
RC_allocate_and_post_buffers(1320,42018

drivers/net/rclanmtl.c,7548
#define RC_LINUX_MODULE37,1401
#define dprintf 40,1448
#define RC_LAN_TARGET_ID 45,1553
#define DEFAULT_RECV_INIT_CONTEXT 47,1637
#define    I2O_TID_SZ 54,1715
#define    I2O_FUNCTION_SZ 55,1773
#define    I2O_TRL_FLAGS_SINGLE_FIXED_LENGTH 59,1891
#define    I2O_TRL_FLAGS_SINGLE_VARIABLE_LENGTH 60,1951
#define    I2O_TRL_FLAGS_MULTIPLE_FIXED_LENGTH 61,2011
#define    I2O_LAN_PACKET_SEND 65,2108
#define    I2O_LAN_SDU_SEND 66,2168
#define    I2O_LAN_RECEIVE_POST 67,2228
#define    I2O_LAN_RESET 68,2288
#define    I2O_LAN_SHUTDOWN 69,2348
#define    I2O_PRIVATE 72,2446
#define    I2O_EXEC_ADAPTER_ASSIGN 76,2546
#define    I2O_EXEC_ADAPTER_READ 77,2606
#define    I2O_EXEC_ADAPTER_RELEASE 78,2666
#define    I2O_EXEC_BIOS_INFO_SET 79,2726
#define    I2O_EXEC_BOOT_DEVICE_SET 80,2786
#define    I2O_EXEC_CONFIG_VALIDATE 81,2846
#define    I2O_EXEC_CONN_SETUP 82,2906
#define    I2O_EXEC_DEVICE_ASSIGN 83,2966
#define    I2O_EXEC_DEVICE_RELEASE 84,3026
#define    I2O_EXEC_HRT_GET 85,3086
#define    I2O_EXEC_IOP_CLEAR 86,3146
#define    I2O_EXEC_IOP_CONNECT 87,3206
#define    I2O_EXEC_IOP_RESET 88,3266
#define    I2O_EXEC_LCT_NOTIFY 89,3326
#define    I2O_EXEC_OUTBOUND_INIT 90,3386
#define    I2O_EXEC_PATH_ENABLE 91,3446
#define    I2O_EXEC_PATH_QUIESCE 92,3506
#define    I2O_EXEC_PATH_RESET 93,3566
#define    I2O_EXEC_STATIC_MF_CREATE 94,3626
#define    I2O_EXEC_STATIC_MF_RELEASE 95,3686
#define    I2O_EXEC_STATUS_GET 96,3746
#define    I2O_EXEC_SW_DOWNLOAD 97,3806
#define    I2O_EXEC_SW_UPLOAD 98,3866
#define    I2O_EXEC_SW_REMOVE 99,3926
#define    I2O_EXEC_SYS_ENABLE 100,3986
#define    I2O_EXEC_SYS_MODIFY 101,4046
#define    I2O_EXEC_SYS_QUIESCE 102,4106
#define    I2O_EXEC_SYS_TAB_SET 103,4166
#define    I2O_EXEC_OUTBOUND_INIT_IN_PROGRESS 107,4258
#define    I2O_EXEC_OUTBOUND_INIT_REJECTED 108,4318
#define    I2O_EXEC_OUTBOUND_INIT_FAILED 109,4378
#define    I2O_EXEC_OUTBOUND_INIT_COMPLETE 110,4438
#define    I2O_UTIL_NOP 113,4500
#define    I2O_IOP_STATE_INITIALIZING 118,4597
#define    I2O_IOP_STATE_RESET 119,4657
#define    I2O_IOP_STATE_HOLD 120,4717
#define    I2O_IOP_STATE_READY 121,4777
#define    I2O_IOP_STATE_OPERATIONAL 122,4837
#define    I2O_IOP_STATE_FAILED 123,4897
#define    I2O_IOP_STATE_FAULTED 124,4957
#define    I2O_REPLY_STATUS_SUCCESS 129,5092
#define    I2O_REPLY_STATUS_ABORT_DIRTY 130,5152
#define    I2O_REPLY_STATUS_ABORT_NO_DATA_TRANSFER 131,5212
#define    I2O_REPLY_STATUS_ABORT_PARTIAL_TRANSFER 132,5272
#define    I2O_REPLY_STATUS_ERROR_DIRTY 133,5332
#define    I2O_REPLY_STATUS_ERROR_NO_DATA_TRANSFER 134,5392
#define    I2O_REPLY_STATUS_ERROR_PARTIAL_TRANSFER 135,5452
#define    I2O_REPLY_STATUS_PROCESS_ABORT_DIRTY 136,5512
#define    I2O_REPLY_STATUS_PROCESS_ABORT_NO_DATA_TRANSFER 137,5572
#define    I2O_REPLY_STATUS_PROCESS_ABORT_PARTIAL_TRANSFER 138,5638
#define    I2O_REPLY_STATUS_TRANSACTION_ERROR 139,5704
#define    I2O_REPLY_STATUS_PROGRESS_REPORT 140,5764
#define    I2O_DETAIL_STATUS_SUCCESS 145,5910
#define    I2O_DETAIL_STATUS_BAD_KEY 146,5977
#define    I2O_DETAIL_STATUS_CHAIN_BUFFER_TOO_LARGE 147,6044
#define    I2O_DETAIL_STATUS_DEVICE_BUSY 148,6111
#define    I2O_DETAIL_STATUS_DEVICE_LOCKED 149,6178
#define    I2O_DETAIL_STATUS_DEVICE_NOT_AVAILABLE 150,6245
#define    I2O_DETAIL_STATUS_DEVICE_RESET 151,6312
#define    I2O_DETAIL_STATUS_INAPPROPRIATE_FUNCTION 152,6379
#define    I2O_DETAIL_STATUS_INSUFFICIENT_RESOURCE_HARD 153,6446
#define    I2O_DETAIL_STATUS_INSUFFICIENT_RESOURCE_SOFT 154,6513
#define    I2O_DETAIL_STATUS_INVALID_INITIATOR_ADDRESS 155,6580
#define    I2O_DETAIL_STATUS_INVALID_MESSAGE_FLAGS 156,6647
#define    I2O_DETAIL_STATUS_INVALID_OFFSET 157,6714
#define    I2O_DETAIL_STATUS_INVALID_PARAMETER 158,6781
#define    I2O_DETAIL_STATUS_INVALID_REQUEST 159,6848
#define    I2O_DETAIL_STATUS_INVALID_TARGET_ADDRESS 160,6915
#define    I2O_DETAIL_STATUS_MESSAGE_TOO_LARGE 161,6982
#define    I2O_DETAIL_STATUS_MESSAGE_TOO_SMALL 162,7049
#define    I2O_DETAIL_STATUS_MISSING_PARAMETER 163,7116
#define    I2O_DETAIL_STATUS_NO_SUCH_PAGE 164,7183
#define    I2O_DETAIL_STATUS_REPLY_BUFFER_FULL 165,7250
#define    I2O_DETAIL_STATUS_TCL_ERROR 166,7317
#define    I2O_DETAIL_STATUS_TIMEOUT 167,7384
#define    I2O_DETAIL_STATUS_UNKNOWN_ERROR 168,7451
#define    I2O_DETAIL_STATUS_UNKNOWN_FUNCTION 169,7518
#define    I2O_DETAIL_STATUS_UNSUPPORTED_FUNCTION 170,7585
#define    I2O_DETAIL_STATUS_UNSUPPORTED_VERSION 171,7652
#define I2OMSGVER_1_5 174,7768
#define SGL_OFFSET_0 175,7799
#define SGL_OFFSET_4 176,7837
#define TRL_OFFSET_5 177,7886
#define TRL_OFFSET_6 178,7935
#define MSG_STATIC 181,8028
#define MSG_64BIT_CNTXT 182,8059
#define MSG_MULTI_TRANS 183,8090
#define MSG_FAIL 184,8121
#define MSG_LAST 185,8152
#define MSG_REPLY 186,8183
#define LAN_MSG_REQST 189,8286
#define THREE_WORD_MSG_SIZE 192,8367
#define FOUR_WORD_MSG_SIZE 193,8406
#define FIVE_WORD_MSG_SIZE 194,8445
#define SIX_WORD_MSG_SIZE 195,8484
#define SEVEN_WORD_MSG_SIZE 196,8523
#define EIGHT_WORD_MSG_SIZE 197,8562
#define NINE_WORD_MSG_SIZE 198,8601
#define I2O_IOP_TID 202,8672
#define I2O_HOST_TID 203,8696
#define RC_PRIVATE_GET_MAC_ADDR 206,8763
#define RC_PRIVATE_SET_MAC_ADDR 207,8825
#define RC_PRIVATE_GET_NIC_STATS 208,8868
#define RC_PRIVATE_GET_LINK_STATUS 209,8911
#define RC_PRIVATE_SET_LINK_SPEED 210,8954
#define RC_PRIVATE_SET_IP_AND_MASK 211,8997
#define RC_PRIVATE_GET_LINK_SPEED 213,9104
#define RC_PRIVATE_GET_FIRMWARE_REV 214,9147
#define RC_PRIVATE_GET_IP_AND_MASK 216,9243
#define RC_PRIVATE_DEBUG_MSG 217,9291
#define RC_PRIVATE_REPORT_DRIVER_CAPABILITY 218,9334
#define RC_PRIVATE_SET_PROMISCUOUS_MODE 219,9386
#define RC_PRIVATE_GET_PROMISCUOUS_MODE 220,9434
#define RC_PRIVATE_SET_BROADCAST_MODE 221,9482
#define RC_PRIVATE_GET_BROADCAST_MODE 222,9530
#define RC_PRIVATE_REBOOT 224,9579
typedef struct _I2O_MESSAGE_FRAME _I2O_MESSAGE_FRAME228,9649
I2O_MESSAGE_FRAME, *PI2O_MESSAGE_FRAME;PI2O_MESSAGE_FRAME239,10066
#define MSG_FRAME_SIZE 243,10184
#define NMBR_MSG_FRAMES 244,10212
typedef struct tag_rcatu tag_rcatu249,10304
ATU, *PATU;PATU277,11762
PAB, *PPAB;PPAB298,12402
#define MAX_ADAPTERS 309,12630
static PPAB  PCIAdapterBlock[310,12654
typedef struct tag_NicStat tag_NicStat325,13087
NICSTAT, *P_NICSTAT;P_NICSTAT345,13800
#define DUMP_DONE 348,13824
#define DUMP_CLEAR 349,13893
static volatile int msgFlag;352,13976
#define ADAPTER_BLOCK_RESERVED_SPACE 364,14367
RCInitI2OMsgLayer(385,15296
#define i960_OUT_POST_Q_INT_BIT 466,18176
RC_RETURN RCDisableI2OInterrupts(468,18254
RC_RETURN RCEnableI2OInterrupts(483,18528
RCI2OSendPacket(505,18994
RCPostRecvBuffers(571,20944
RCProcI2OMsgQ(638,22973
RCGetLinkStatistics(772,27517
RCGetLinkStatus(859,29944
RCGetMAC(940,32194
RCSetMAC(1024,34381
RCSetLinkSpeed(1073,35853
RCSetPromiscuousMode(1115,37044
RCGetPromiscuousMode(1158,38278
RCSetBroadcastMode(1236,40475
RCGetBroadcastMode(1279,41703
RCGetLinkSpeed(1362,43956
RCReportDriverCapability(1443,46206
RCGetFirmwareVer(1483,47355
RCResetLANCard(1564,49669
RCResetIOP(1625,51395
RCShutdownLANCard(1698,53503
RCSetRavlinIPandMask(1764,55445
RCGetRavlinIPandMask(1806,56589
SendI2OOutboundQInitMsg(1904,59572
GetI2OStatus(2006,62436
SendEnableSysMsg(2105,65617
FillI2OMsgSGLFromTCB(2151,66965
#define EOB 2157,67148
#define LE 2158,67178
#define SIMPLE_SGL 2159,67208
#define BC_PRESENT 2160,67238
ProcessOutboundI2OMsg(2247,69338

drivers/net/rclanmtl.h,3157
#define RCLANMTL_H38,1441
#define kprintf 41,1491
#define RC_PCI45_VENDOR_ID 49,1706
#define RC_PCI45_DEVICE_ID 50,1741
#define RC_RTN_NO_ERROR 54,1821
#define RC_RTN_I2O_NOT_INIT 55,1859
#define RC_RTN_FREE_Q_EMPTY 56,1897
#define RC_RTN_TCB_ERROR 57,1935
#define RC_RTN_TRANSACTION_ERROR 58,1973
#define RC_RTN_ADAPTER_ALREADY_INIT 59,2011
#define RC_RTN_MALLOC_ERROR 60,2049
#define RC_RTN_ADPTR_NOT_REGISTERED 61,2087
#define RC_RTN_MSG_REPLY_TIMEOUT 62,2125
#define RC_RTN_NO_I2O_STATUS 63,2163
#define RC_RTN_NO_FIRM_VER 64,2201
#define RC_RTN_NO_LINK_SPEED 65,2239
#define WARM_REBOOT_CAPABLE 68,2308
typedef unsigned char   U8;U871,2372
typedef unsigned char*  PU8;PU872,2400
typedef unsigned short  U16;U1673,2429
typedef unsigned short* PU16;PU1674,2458
typedef unsigned long   U32;U3275,2488
typedef unsigned long*  PU32;PU3276,2517
typedef unsigned long   BF;BF77,2547
typedef int             RC_RETURN;RC_RETURN78,2575
typedef void (*PFNWAITCALLBACK)PFNWAITCALLBACK86,2727
typedef void (*PFNTXCALLBACK)PFNTXCALLBACK100,3455
typedef void (*PFNRXCALLBACK)PFNRXCALLBACK114,4047
typedef void (*PFNCALLBACK)PFNCALLBACK128,4561
#define    I2O_REPLY_STATUS_SUCCESS 148,5222
#define    I2O_REPLY_STATUS_ABORT_NO_DATA_TRANSFER 149,5282
#define    I2O_REPLY_STATUS_TRANSACTION_ERROR 150,5342
#define    I2O_LAN_DSC_SUCCESS 154,5437
#define    I2O_LAN_DSC_DEVICE_FAILURE 155,5499
#define    I2O_LAN_DSC_DESTINATION_NOT_FOUND 156,5561
#define    I2O_LAN_DSC_TRANSMIT_ERROR 157,5623
#define    I2O_LAN_DSC_TRANSMIT_ABORTED 158,5685
#define    I2O_LAN_DSC_RECEIVE_ERROR 159,5747
#define    I2O_LAN_DSC_RECEIVE_ABORTED 160,5809
#define    I2O_LAN_DSC_DMA_ERROR 161,5871
#define    I2O_LAN_DSC_BAD_PACKET_DETECTED 162,5933
#define    I2O_LAN_DSC_OUT_OF_MEMORY 163,5995
#define    I2O_LAN_DSC_BUCKET_OVERRUN 164,6057
#define    I2O_LAN_DSC_IOP_INTERNAL_ERROR 165,6119
#define    I2O_LAN_DSC_CANCELED 166,6181
#define    I2O_LAN_DSC_INVALID_TRANSACTION_CONTEXT 167,6243
#define    I2O_LAN_DSC_DESTINATION_ADDRESS_DETECTED 168,6305
#define    I2O_LAN_DSC_DESTINATION_ADDRESS_OMITTED 169,6367
#define    I2O_LAN_DSC_PARTIAL_PACKET_RETURNED 170,6429
 BSD, *PBSD;PBSD281,10494
typedef PU32 PRCTCB;PRCTCB283,10509
#define MAX_NMBR_POST_BUFFERS_PER_MSG 381,14670
typedef struct tag_RC_link_statstag_RC_link_stats399,15314
 RCLINKSTATS, *P_RCLINKSTATS;P_RCLINKSTATS418,16362
#define RC_LAN_LINK_STATUS_DOWN 443,17280
#define RC_LAN_LINK_STATUS_UP 444,17318
#define LNK_SPD_AUTO_NEG_NWAY 472,18191
#define LNK_SPD_100MB_FULL 473,18225
#define LNK_SPD_100MB_HALF 474,18259
#define LNK_SPD_10MB_FULL 475,18293
#define LNK_SPD_10MB_HALF 476,18327
#define LNK_SPD_UNKNOWN 487,18457
#define LNK_SPD_100MB_FULL 488,18491
#define LNK_SPD_100MB_HALF 489,18525
#define LNK_SPD_10MB_FULL 490,18559
#define LNK_SPD_10MB_HALF 491,18593
#define PROMISCUOUS_MODE_OFF 505,19031
#define PROMISCUOUS_MODE_ON 506,19062
#define BROADCAST_MODE_OFF 534,19937
#define BROADCAST_MODE_ON 535,19966
#define RC_RESOURCE_RETURN_POSTED_RX_BUCKETS 580,21378
#define RC_RESOURCE_RETURN_PEND_TX_BUFFERS 581,21432

drivers/net/3c527.c,1344
static const char *version 17,465
static const char* cardname 64,1569
#define NET_DEBUG 68,1688
static unsigned int mc32_debug 70,1715
#define NETCARD_IO_EXTENT	73,1817
struct mc32_mailboxmc32_mailbox76,1847
#define TX_RING_MAX	84,1998
#define RX_RING_MAX	85,2058
struct mc32_local mc32_local87,2119
#define SA_ADDR0 114,2848
#define SA_ADDR1 115,2870
#define SA_ADDR2 116,2892
struct mca_adapters_t mca_adapters_t118,2915
const struct mca_adapters_t mc32_adapters[123,2975
__initfunc(150,3932
__initfunc(186,4888
static void mc32_ring_poll(437,9856
static int mc32_command(448,10022
static void mc32_rx_abort(490,10870
static void mc32_rx_begin(506,11162
static void mc32_tx_abort(520,11459
static void mc32_tx_begin(567,12285
static int mc32_load_rx_ring(590,12705
static void mc32_flush_rx_ring(624,13380
static void mc32_flush_tx_ring(631,13503
static int mc32_open(654,13987
static int mc32_send_packet(719,15126
static void mc32_update_stats(798,16938
static void mc32_rx_ring(803,16994
static void mc32_interrupt(879,18715
static int mc32_close(1004,21196
static struct net_device_stats *mc32_get_stats(1052,21989
static void mc32_set_multicast_list(1065,22412
static char devicename[1111,23194
static struct device this_device 1112,23230
int init_module(1118,23411
void cleanup_module(1128,23533

drivers/net/3c527.h,470
#define HOST_CMD	9,70
#define HOST_STATUS	11,91
#define		HOST_STATUS_CRR	12,114
#define		HOST_STATUS_CWR	13,146
#define HOST_CTRL	15,179
#define		HOST_CTRL_ATTN	16,200
#define 	HOST_CTRL_RESET	17,231
#define 	HOST_CTRL_INTE	18,263
#define HOST_RAMPAGE	20,295
struct skb_headerskb_header22,320
#define STATUS_MASK	31,535
#define COMPLETED	32,560
#define COMPLETED_OK	33,583
#define BUFFER_BUSY	34,609
#define CONTROL_EOP	36,635
#define CONTROL_EL	37,680

drivers/net/sunbmac.c,2022
static char *version 6,143
#define DP(DP49,1070
#define DP(DP51,1100
#define DTX(DTX55,1138
#define DTX(DTX57,1169
#define DIRQ(DIRQ61,1209
#define DIRQ(DIRQ63,1241
static struct bigmac *root_bigmac_dev 67,1279
#define DEFAULT_JAMSIZE 70,1333
#define QEC_RESET_TRIES 72,1377
static inline int qec_global_reset(74,1406
static void qec_init(92,1714
#define TX_RESET_TRIES 119,2458
#define RX_RESET_TRIES 120,2488
static inline void bigmac_tx_reset(122,2519
static inline void bigmac_rx_reset(141,2926
static void bigmac_stop(156,3254
static void bigmac_get_counters(162,3360
static inline void bigmac_clean_rings(181,3833
static void bigmac_init_rings(200,4175
static void sun4c_bigmac_init_rings(239,5133
#define MGMT_CLKON 258,5620
#define MGMT_CLKOFF 259,5709
static inline void idle_transceiver(261,5783
static void write_tcvr_bit(274,6035
static int read_tcvr_bit(299,6777
static int read_tcvr_bit2(322,7478
static inline void put_tcvr_byte(345,8185
static void bigmac_tcvr_write(357,8408
static unsigned short bigmac_tcvr_read(396,9199
static void bigmac_tcvr_init(463,10548
static int try_next_permutation(505,11717
static void bigmac_timer(538,12555
static void bigmac_begin_auto_negotiation(594,14025
static int bigmac_init(633,15166
static void bigmac_is_medium_rare(723,17560
static inline void bigmac_tx(764,18697
static inline void sun4c_bigmac_tx(794,19338
static inline void bigmac_rx(812,19724
static inline void sun4c_bigmac_rx(902,22159
static void bigmac_interrupt(955,23652
static void sun4c_bigmac_interrupt(988,24439
static int bigmac_open(1018,25130
static int bigmac_close(1045,25768
static int bigmac_start_xmit(1061,26088
static int sun4c_bigmac_start_xmit(1127,27647
static struct enet_statistics *bigmac_get_stats(1186,28997
#define CRC_POLYNOMIAL_BE 1194,29183
#define CRC_POLYNOMIAL_LE 1195,29254
static void bigmac_set_multicast(1197,29329
__initfunc(1257,30739
__initfunc(1496,37909
init_module(1530,38535
cleanup_module(1537,38616

drivers/net/sunbmac.h,5816
#define _SUNBMAC_H7,159
struct qe_globreg qe_globreg10,207
#define GLOB_CTRL_MMODE 19,621
#define GLOB_CTRL_BMODE 20,693
#define GLOB_CTRL_EPAR 21,765
#define GLOB_CTRL_ACNTRL 22,837
#define GLOB_CTRL_B64 23,909
#define GLOB_CTRL_B32 24,981
#define GLOB_CTRL_B16 25,1053
#define GLOB_CTRL_RESET 26,1125
#define GLOB_STAT_TX 28,1198
#define GLOB_STAT_RX 29,1270
#define GLOB_STAT_BM 30,1342
#define GLOB_STAT_ER 31,1414
#define GLOB_PSIZE_2048 33,1487
#define GLOB_PSIZE_4096 34,1559
#define GLOB_PSIZE_6144 35,1631
#define GLOB_PSIZE_8192 36,1703
struct qe_creg qe_creg39,1812
#define CREG_CTRL_TWAKEUP 55,2730
#define CREG_STAT_BERROR 57,2805
#define CREG_STAT_TXIRQ 58,2879
#define CREG_STAT_TXDERROR 59,2953
#define CREG_STAT_TXLERR 60,3027
#define CREG_STAT_TXPERR 61,3101
#define CREG_STAT_TXSERR 62,3175
#define CREG_STAT_RXIRQ 63,3249
#define CREG_STAT_RXDROP 64,3323
#define CREG_STAT_RXSMALL 65,3397
#define CREG_STAT_RXLERR 66,3471
#define CREG_STAT_RXPERR 67,3545
#define CREG_STAT_RXSERR 68,3619
#define CREG_STAT_ERRORS 70,3694
#define CREG_QMASK_TXDERROR 75,4011
#define CREG_QMASK_TXLERR 76,4085
#define CREG_QMASK_TXPERR 77,4159
#define CREG_QMASK_TXSERR 78,4233
#define CREG_QMASK_RXDROP 79,4307
#define CREG_QMASK_RXBERROR 80,4381
#define CREG_QMASK_RXLEERR 81,4455
#define CREG_QMASK_RXPERR 82,4529
#define CREG_QMASK_RXSERR 83,4603
struct BIG_MAC_regs BIG_MAC_regs85,4678
#define BIGMAC_XCFG_ODENABLE 137,8565
#define BIGMAC_XCFG_RESV 138,8654
#define BIGMAC_XCFG_MLBACK 139,8743
#define BIGMAC_XCFG_SMODE 140,8832
#define BIGMAC_STAT_GOTFRAME 143,8952
#define BIGMAC_STAT_RCNTEXP 144,9041
#define BIGMAC_STAT_ACNTEXP 145,9130
#define BIGMAC_STAT_CCNTEXP 146,9219
#define BIGMAC_STAT_LCNTEXP 147,9308
#define BIGMAC_STAT_RFIFOVF 148,9397
#define BIGMAC_STAT_CVCNTEXP 149,9486
#define BIGMAC_STAT_SENTFRAME 150,9575
#define BIGMAC_STAT_TFIFO_UND 151,9664
#define BIGMAC_STAT_MAXPKTERR 152,9753
#define BIGMAC_STAT_NCNTEXP 153,9842
#define BIGMAC_STAT_ECNTEXP 154,9931
#define BIGMAC_STAT_LCCNTEXP 155,10020
#define BIGMAC_STAT_FCNTEXP 156,10109
#define BIGMAC_STAT_DTIMEXP 157,10198
#define BIGMAC_IMASK_GOTFRAME 160,10326
#define BIGMAC_IMASK_RCNTEXP 161,10415
#define BIGMAC_IMASK_ACNTEXP 162,10504
#define BIGMAC_IMASK_CCNTEXP 163,10593
#define BIGMAC_IMASK_LCNTEXP 164,10682
#define BIGMAC_IMASK_RFIFOVF 165,10771
#define BIGMAC_IMASK_CVCNTEXP 166,10860
#define BIGMAC_IMASK_SENTFRAME 167,10949
#define BIGMAC_IMASK_TFIFO_UND 168,11038
#define BIGMAC_IMASK_MAXPKTERR 169,11127
#define BIGMAC_IMASK_NCNTEXP 170,11216
#define BIGMAC_IMASK_ECNTEXP 171,11305
#define BIGMAC_IMASK_LCCNTEXP 172,11394
#define BIGMAC_IMASK_FCNTEXP 173,11483
#define BIGMAC_IMASK_DTIMEXP 174,11572
#define BIGMAC_TXCFG_ENABLE 177,11701
#define BIGMAC_TXCFG_FIFO 178,11790
#define BIGMAC_TXCFG_SMODE 179,11879
#define BIGMAC_TXCFG_CIGN 180,11968
#define BIGMAC_TXCFG_FCSOFF 181,12057
#define BIGMAC_TXCFG_DBACKOFF 182,12146
#define BIGMAC_TXCFG_FULLDPLX 183,12235
#define BIGMAC_RXCFG_ENABLE 186,12363
#define BIGMAC_RXCFG_FIFO 187,12452
#define BIGMAC_RXCFG_PSTRIP 188,12541
#define BIGMAC_RXCFG_PMISC 189,12630
#define BIGMAC_RXCFG_DERR 190,12719
#define BIGMAC_RXCFG_DCRCS 191,12808
#define BIGMAC_RXCFG_ME 192,12897
#define BIGMAC_RXCFG_PGRP 193,12986
#define BIGMAC_RXCFG_HENABLE 194,13075
#define BIGMAC_RXCFG_AENABLE 195,13164
struct bmac_tcvr bmac_tcvr200,13389
#define FRAME_WRITE 206,13485
#define FRAME_READ 207,13526
#define TCVR_PAL_SERIAL 210,13596
#define TCVR_PAL_EXTLBACK 211,13675
#define TCVR_PAL_MSENSE 212,13754
#define TCVR_PAL_LTENABLE 213,13833
#define TCVR_PAL_LTSTATUS 214,13912
#define MGMT_PAL_DCLOCK 217,14014
#define MGMT_PAL_OENAB 218,14093
#define MGMT_PAL_MDIO 219,14172
#define MGMT_PAL_TIMEO 220,14251
#define MGMT_PAL_EXT_MDIO 221,14330
#define MGMT_PAL_INT_MDIO 222,14374
#define BIGMAC_PHY_EXTERNAL 225,14455
#define BIGMAC_PHY_INTERNAL 226,14514
#define BIGMAC_BMCR 229,14594
#define BIGMAC_BMSR 230,14663
#define BMCR_ISOLATE 233,14748
#define BMCR_PDOWN 234,14822
#define BMCR_ANENABLE 235,14896
#define BMCR_SPEED100 236,14970
#define BMCR_LOOPBACK 237,15044
#define BMCR_RESET 238,15118
#define BMSR_ERCAP 241,15209
#define BMSR_JCD 242,15283
#define BMSR_LSTATUS 243,15357
struct be_rxd be_rxd246,15488
#define RXD_OWN 251,15555
#define RXD_UPDATE 252,15609
#define RXD_LENGTH 253,15663
struct be_txd be_txd255,15718
#define TXD_OWN 260,15785
#define TXD_SOP 261,15839
#define TXD_EOP 262,15893
#define TXD_UPDATE 263,15947
#define TXD_LENGTH 264,16001
#define TX_RING_MAXSIZE 266,16056
#define RX_RING_MAXSIZE 267,16086
#define TX_RING_SIZE 269,16117
#define RX_RING_SIZE 270,16147
#define NEXT_RX(NEXT_RX272,16178
#define NEXT_TX(NEXT_TX273,16240
#define PREV_RX(PREV_RX274,16302
#define PREV_TX(PREV_TX275,16364
#define TX_BUFFS_AVAIL(TX_BUFFS_AVAIL277,16427
#define SUN4C_TX_BUFFS_AVAIL(SUN4C_TX_BUFFS_AVAIL283,16654
#define RX_COPY_THRESHOLD 289,16929
#define RX_BUF_ALLOC_SIZE 290,16960
struct bmac_init_block bmac_init_block292,17015
#define bib_offset(bib_offset297,17124
#define SUN4C_PKT_BUF_SZ	300,17229
#define SUN4C_RX_BUFF_SIZE	301,17259
#define SUN4C_TX_BUFF_SIZE	302,17303
#define SUN4C_RX_RING_SIZE	304,17348
#define SUN4C_TX_RING_SIZE	305,17378
struct bigmac_buffers bigmac_buffers307,17409
#define bbuf_offset(bbuf_offset313,17599
enum bigmac_transceiver bigmac_transceiver317,17739
	external 318,17765
	internal 319,17780
	none 320,17795
enum bigmac_timer_state bigmac_timer_state324,17840
	ltrywait 325,17866
	asleep 326,17939
struct bigmac bigmac329,18016
#define ALIGNED_RX_SKB_ADDR(ALIGNED_RX_SKB_ADDR364,19299
static inline struct sk_buff *big_mac_alloc_skb(367,19419

drivers/block/hd.c,1961
#define REALLY_SLOW_IO44,1249
#define MAJOR_NR 49,1342
#define	HD_DELAY	54,1436
#define MAX_ERRORS 56,1456
#define RESET_FREQ 57,1517
#define RECAL_FREQ 58,1582
#define MAX_HD	59,1642
#define STAT_OK	61,1661
#define OK_STATUS(OK_STATUS62,1701
static char recalibrate[67,1844
static char special_op[68,1886
static int access_count[69,1927
static char busy[70,1968
static struct wait_queue * busy_wait 71,2002
static int reset 73,2048
static int hd_error 74,2070
#define SUBSECTOR(SUBSECTOR76,2096
struct hd_i_struct hd_i_struct81,2213
static struct hd_i_struct hd_info[86,2299
static int NR_HD 87,2350
static struct hd_i_struct hd_info[89,2427
static int NR_HD 90,2498
static struct hd_struct hd[93,2528
static int hd_sizes[94,2576
static int hd_blocksizes[95,2616
unsigned long last_req;98,2681
unsigned long read_timer(100,2706
__initfunc(116,2934
static void dump_status 133,3289
void check_status(184,4955
static int controller_busy(194,5088
static int status_ok(205,5270
static int controller_ready(220,5553
static void hd_out(234,5811
static int drive_busy(264,6466
static void reset_controller(278,6716
static void reset_hd(292,7060
void unexpected_hd_interrupt(325,7859
static void bad_rw_intr(340,8224
static inline int wait_DRQ(357,8654
static void read_intr(368,8846
static void write_intr(412,9727
static void recal_intr(450,10425
static void hd_times_out(463,10689
int do_special_op 486,11076
static void hd_request(511,11927
static void do_hd_request 578,13519
static int hd_ioctl(585,13615
static int hd_open(637,15015
static int hd_release(654,15356
static struct gendisk hd_gendisk 666,15588
static void hd_interrupt(680,15990
static void hd_geninit(701,16547
static struct file_operations hd_fops 778,18778
__initfunc(792,19148
#define DEVICE_BUSY 806,19535
#define USAGE 807,19568
#define CAPACITY 808,19603
#define GENDISK_STRUCT 812,19800
static int revalidate_hddisk(822,20206

drivers/block/ll_rw_blk.c,1002
static struct request all_requests[31,650
spinlock_t io_request_lock 51,1327
struct wait_queue * wait_for_request 56,1435
int read_ahead[60,1548
struct blk_dev_struct blk_dev[66,1646
int * blk_size[76,1912
int * blksize_size[85,2115
int * hardsect_size[99,2508
int * max_readahead[104,2631
int * max_sectors[109,2727
static inline int get_max_sectors(111,2777
static inline struct request **get_queue(123,3050
void unplug_device(136,3311
static inline void plug_device(165,4081
static inline struct request * get_request(178,4467
static struct request * __get_request_wait(208,5132
static inline struct request * get_request_wait(230,5675
static long ro_bits[245,6012
int is_read_only(247,6049
void set_device_ro(257,6251
static inline void drive_stat_acct(268,6522
void add_request(292,7314
static inline void attempt_merge 360,9015
void make_request(378,9536
void ll_rw_block(569,15121
end_that_request_first(668,17394
end_that_request_last(704,18249
__initfunc(712,18399

drivers/block/floppy.c,10625
#define FLOPPY_SANITY_CHECK109,3380
#define REALLY_SLOW_IO112,3441
#define DEBUGT 114,3465
#define DCL_DEBUG 115,3482
static int print_unex=118,3580
static int FLOPPY_IRQ=127,3954
static int FLOPPY_DMA=128,3979
static int allowed_drive_mask 129,4004
static int irqdma_allocated 130,4042
#define FDPATCHES138,4202
static int slow_floppy 161,4746
static int can_use_virtual_dma=169,4887
static int use_virtual_dma=178,5191
static unsigned short virtual_dma_port=190,5595
#define K_64	194,5812
#define MAJOR_NR 198,5871
#define fd_get_dma_residue(fd_get_dma_residue204,6018
static inline int __get_order(210,6151
#define fd_dma_mem_free(fd_dma_mem_free224,6355
#define fd_dma_mem_alloc(fd_dma_mem_alloc228,6460
static inline void fallback_on_nodma_alloc(231,6545
static unsigned long fake_change 247,6935
static int initialising=248,6973
static inline int TYPE(250,7001
static inline int DRIVE(253,7069
#define ITYPE(ITYPE256,7157
#define TOMINOR(TOMINOR257,7192
#define UNIT(UNIT258,7238
#define FDC(FDC259,7287
#define REVDRIVE(REVDRIVE260,7342
#define DP 262,7447
#define DRS 263,7489
#define DRWE 264,7531
#define FDCS 265,7575
#define CLEARF(CLEARF266,7606
#define SETF(SETF267,7658
#define TESTF(TESTF268,7706
#define UDP 270,7757
#define UDRS 271,7792
#define UDRWE 272,7827
#define UFDCS 273,7864
#define UCLEARF(UCLEARF274,7903
#define USETF(USETF275,7957
#define UTESTF(UTESTF276,8007
#define DPRINT(DPRINT278,8060
#define PH_HEAD(PH_HEAD280,8152
#define STRETCH(STRETCH281,8227
#define CLEARSTRUCT(CLEARSTRUCT283,8285
#define INT_OFF 285,8338
#define INT_ON 286,8379
#define COMMAND 289,8434
#define DR_SELECT 290,8466
#define TRACK 291,8500
#define HEAD 292,8530
#define SECTOR 293,8559
#define SIZECODE 294,8590
#define SECT_PER_TRACK 295,8623
#define GAP 296,8662
#define SIZECODE2 297,8690
#define NR_RW 298,8724
#define F_SIZECODE 301,8754
#define F_SECT_PER_TRACK 302,8789
#define F_GAP 303,8830
#define F_FILL 304,8860
#define NR_F 305,8891
#define MAX_DISK_SIZE 312,9050
#define MAX_REPLIES 318,9123
static unsigned char reply_buffer[319,9146
static int inr;320,9194
#define ST0 321,9265
#define ST1 322,9295
#define ST2 323,9325
#define ST3 324,9355
#define R_TRACK 325,9411
#define R_HEAD 326,9445
#define R_SECTOR 327,9478
#define R_SIZECODE 328,9513
#define SEL_DLY 330,9551
#define ARRAY_SIZE(ARRAY_SIZE332,9579
} default_drive_params[339,9798
static struct floppy_drive_params drive_params[381,12104
static struct floppy_drive_struct drive_state[382,12161
static struct floppy_write_errors write_errors[383,12217
static struct floppy_raw_cmd *raw_cmd,384,12274
static struct floppy_raw_cmd *raw_cmd, default_raw_cmd;384,12274
static struct floppy_struct floppy_type[400,13068
#define	NUMBER(NUMBER438,15426
#define SECTSIZE 439,15471
static struct floppy_struct *current_type[442,15586
static struct floppy_struct user_params[451,15798
static int floppy_sizes[453,15849
static int floppy_blocksizes[454,15879
static int probing 461,16073
#define FD_COMMAND_NONE 464,16135
#define FD_COMMAND_ERROR 465,16162
#define FD_COMMAND_OKAY 466,16189
static volatile int command_status 468,16216
static struct wait_queue *fdc_wait 469,16284
#define NO_SIGNAL 470,16349
#define CALL(CALL471,16412
#define ECALL(ECALL472,16461
#define _WAIT(_WAIT473,16507
#define WAIT(WAIT474,16557
#define IWAIT(IWAIT475,16598
static int format_errors;478,16678
static struct format_descr format_req;481,16738
static char *floppy_track_buffer=495,17126
static int max_buffer_sectors=496,17162
static int *errors;498,17196
typedef void (*done_f)done_f499,17216
static struct cont_t cont_t500,17245
} *cont=507,17580
#define CHECK_RESET 525,18227
#define NO_TRACK 533,18475
#define NEED_1_RECAL 534,18495
#define NEED_2_RECAL 535,18519
static int usage_count 538,18550
static int buffer_track 542,18611
static int buffer_drive 543,18641
static int buffer_min 544,18671
static int buffer_max 545,18699
static struct floppy_fdc_state fdc_state[548,18783
static int fdc;549,18832
static struct floppy_struct *_floppy 551,18867
static unsigned char current_drive 552,18919
static long current_count_sectors 553,18959
static unsigned char sector_t;554,18998
static unsigned char in_sector_offset;555,19051
#define fd_eject(fd_eject559,19189
static long unsigned debugtimer;564,19240
static inline void set_debugt(571,19314
static inline void debugt(578,19399
typedef void (*timeout_fn)timeout_fn586,19554
static struct timer_list fd_timeout 587,19597
static const char *timeout_message;590,19698
static void is_alive(593,19762
#define OLOGSIZE 604,20017
static int interruptjiffies=607,20079
static int resultjiffies=608,20110
static int resultsize=609,20138
static int lastredo=610,20163
static struct output_log output_log612,20187
} output_log[616,20282
static int output_log_pos=618,20307
#define CURRENTD 621,20344
#define MAXTIMEOUT 622,20364
static void reschedule_timeout(624,20387
static int maximum(643,20841
#define INFBOUND(INFBOUND650,20919
static int minimum(652,20964
#define SUPBOUND(SUPBOUND659,21042
static int disk_change(695,22432
static inline int is_selected(746,23765
static int set_dor(751,23874
static void twaddle(792,24857
static void reset_fdc_info(803,25154
static void set_fdc(818,25522
static int lock_fdc(839,25906
#define LOCK_FDC(LOCK_FDC864,26389
static inline void unlock_fdc(869,26506
static void motor_off_callback(887,26905
static struct timer_list motor_off_timer[894,27031
static void floppy_off(906,27458
static void scandrives(932,28187
static void empty(954,28731
static struct tq_struct floppy_tq 958,28760
static void schedule_bh(961,28813
static struct timer_list fd_timer 968,28979
static void cancel_activity(970,29040
static void fd_watchdog(979,29247
static void main_command_interrupt(1000,29662
static int wait_for_completion(1007,29802
static int hlt_disabled=1026,30214
static void floppy_disable_hlt(1027,30241
static void floppy_enable_hlt(1041,30415
static void setup_DMA(1056,30587
static int wait_til_ready(1113,31824
static int output_byte(1133,32220
#define LAST_OUT(LAST_OUT1157,32819
static int result(1160,32921
#define MORE_OUTPUT 1189,33534
static int need_more_output(1191,33594
static inline void perpendicular_mode(1204,33949
static int fifo_depth 1238,34703
static int no_fifo 1239,34732
static int fdc_configure(1241,34757
#define NOMINAL_DTR 1254,35049
static void fdc_specify(1275,35846
static int fdc_dtr(1353,37842
static void tell_sector(1372,38420
static int interpret_errors(1386,38810
static void setup_rw_floppy(1462,40823
static int blind_seek;1515,42057
static void seek_interrupt(1521,42193
static void check_wp(1547,42761
static void seek_floppy(1572,43254
static void recal_interrupt(1634,44659
static void print_result(1691,46087
void floppy_interrupt(1703,46354
static void recalibrate_floppy(1766,48038
static void reset_interrupt(1779,48296
static void reset_fdc(1796,48733
static void show_floppy(1820,49236
static void floppy_shutdown(1866,50586
static int start_motor(1897,51241
static void floppy_ready(1925,52045
static void floppy_start(1967,53019
static void do_wakeup(1995,53782
static struct cont_t wakeup_cont=2003,53922
static struct cont_t intr_cont=2011,54005
static int wait_til_done(2018,54095
static void generic_done(2051,54713
static void generic_success(2057,54803
static void generic_failure(2062,54858
static void success_and_wakeup(2067,54913
static int next_valid_format(2079,55059
static void bad_flp_intr(2098,55414
static void set_floppy(2115,55761
static void format_interrupt(2127,55965
#define CODE2SIZE 2140,56129
#define FM_MODE(FM_MODE2141,56184
#define CT(CT2142,56239
static void setup_format_params(2143,56266
static void redo_format(2204,57967
static struct cont_t format_cont=2214,58153
static int do_format(2220,58254
static void request_done(2252,59013
static void rw_interrupt(2308,60609
static int buffer_chain_size(2395,62596
static int transfer_size(2416,62960
static void copy_buffer(2432,63332
static inline int check_dma_crossing(2521,65750
static void virtualdmabug_workaround(2540,66326
static int make_raw_rw_request(2569,67254
static void redo_fd_request(2842,76128
#define REPEAT 2844,76164
static struct cont_t rw_cont=2914,77678
static void process_fd_request(2920,77775
static void do_fd_request(2926,77884
static struct cont_t poll_cont=2944,78327
static int poll_drive(2950,78432
static void reset_intr(2974,78867
static struct cont_t reset_cont=2979,78945
static int user_reset_fdc(2985,79049
static inline int fd_copyout(3005,79378
static inline int fd_copyin(3010,79513
#define _COPYOUT(_COPYOUT3015,79644
#define _COPYIN(_COPYIN3016,79725
#define COPYOUT(COPYOUT3018,79808
#define COPYIN(COPYIN3019,79846
static inline const char *drive_name(3021,79883
static void raw_cmd_done(3041,80217
static struct cont_t raw_cmd_cont=3087,81371
static inline int raw_cmd_copyout(3094,81479
static void raw_cmd_free(3115,81921
static inline int raw_cmd_copyin(3134,82253
static int raw_cmd_ioctl(3189,83643
static int invalidate_drive(3240,84565
static inline void clear_write_error(3250,84762
static inline int set_geometry(3255,84836
static int ioctl_table[3319,86805
static inline int normalize_ioctl(3347,87150
static int get_floppy_geometry(3365,87510
static int fd_ioctl(3380,87780
#define IOCTL_MODE_BIT 3383,87887
#define OPEN_WRITE_BIT 3384,87912
#define IOCTL_ALLOWED 3385,87938
#define OUT(OUT3386,88002
#define IN(IN3387,88064
static void config_types(3587,92782
static ssize_t floppy_read(3634,93818
static ssize_t floppy_write(3646,94125
static int floppy_release(3667,94660
#define RETERR(RETERR3697,95470
static int floppy_open(3699,95542
static int check_floppy_change(3804,98058
static int floppy_revalidate(3834,98818
#define NO_GEOM 3836,98861
static struct file_operations floppy_fops 3882,99908
__initfunc(3906,100570
__initfunc(3984,102782
__initfunc(3997,103118
__initfunc(4013,103596
static struct param_table param_table4032,104017
} config_params[4038,104151
#define FLOPPY_SETUP4072,105289
__initfunc(4073,105310
static int have_no_fdc=4108,106117
__initfunc(4111,106149
static int floppy_grab_irq_and_dma(4232,109167
static void floppy_release_irq_and_dma(4301,110720
char *floppy=4370,112097
__initfunc(4372,112117
__initfunc(4388,112387
int init_module(4434,113093
void cleanup_module(4446,113308
void floppy_eject(4471,113838

drivers/block/cmd640.c,2436
#define CMD640_PREFETCH_MASKS 102,4501
int cmd640_vlb 120,4892
#define VID	126,4962
#define DID	127,4980
#define PCMD	128,4998
#define   PCMD_ENA	129,5017
#define PSTTS	130,5041
#define REVID	131,5061
#define PROGIF	132,5081
#define SUBCL	133,5102
#define BASCL	134,5122
#define BaseA0	135,5142
#define BaseA1	136,5163
#define BaseA2	137,5184
#define BaseA3	138,5205
#define INTLINE	139,5226
#define INPINE	140,5248
#define	CFR	142,5270
#define   CFR_DEVREV	143,5288
#define   CFR_IDE01INTR	144,5315
#define	  CFR_DEVID	145,5345
#define	  CFR_AT_VESA_078h	146,5371
#define	  CFR_DSA1	147,5403
#define	  CFR_DSA0	148,5428
#define CNTRL	150,5454
#define	  CNTRL_DIS_RA0	151,5474
#define   CNTRL_DIS_RA1	152,5504
#define	  CNTRL_ENA_2ND	153,5534
#define	CMDTIM	155,5565
#define	ARTTIM0	156,5586
#define	DRWTIM0	157,5608
#define ARTTIM1 158,5630
#define DRWTIM1	159,5652
#define ARTTIM23	160,5674
#define   ARTTIM23_DIS_RA2	161,5696
#define   ARTTIM23_DIS_RA3	162,5728
#define DRWTIM23	163,5760
#define BRST	164,5782
static byte prefetch_regs[169,5864
static byte prefetch_masks[170,5932
static byte arttim_regs[174,6072
static byte drwtim_regs[175,6141
static byte setup_counts[181,6325
static byte active_counts[182,6414
static byte recovery_counts[183,6496
static ide_hwif_t  *cmd_hwif0,190,6691
static ide_hwif_t  *cmd_hwif0, *cmd_hwif1;190,6691
static ide_drive_t *cmd_drives[191,6734
static unsigned int cmd640_key;196,6818
static unsigned int cmd640_chip_version;203,7035
static void put_cmd640_reg_pci1 213,7290
static byte get_cmd640_reg_pci1 224,7508
static void put_cmd640_reg_pci2 239,7782
static byte get_cmd640_reg_pci2 251,7997
static void put_cmd640_reg_vlb 267,8238
static byte get_cmd640_reg_vlb 278,8435
static int match_pci_cmd640_device 291,8640
static int probe_for_cmd640_pci1 311,9109
static int probe_for_cmd640_pci2 325,9430
static int probe_for_cmd640_vlb 339,9734
static int secondary_port_responding 360,10203
void cmd640_dump_regs 385,10783
static void check_prefetch 404,11206
static void setup_device_ptrs 425,11642
static void set_prefetch_mode 451,12362
static void display_clocks 481,13018
inline static byte pack_nibbles 500,13559
static void retrieve_drive_counts 508,13746
static void program_drive_counts 537,14427
static void cmd640_set_mode 592,16079
static void cmd640_tune_drive 647,17924
int ide_probe_for_cmd640x 694,19168

drivers/block/genhd.c,1486
#define SYS_IND(SYS_IND41,1130
#define NR_SECTS(NR_SECTS42,1178
#define START_SECT(START_SECT47,1299
struct gendisk *gendisk_head 52,1426
static int current_minor 54,1464
extern int *blk_size[55,1494
char *disk_name 74,1978
static void add_partition 118,3003
static inline int is_extended_partition(126,3217
static int sector_partition_scale(133,3419
static unsigned int get_ptable_blocksize(141,3622
#define MSDOS_LABEL_MAGIC	200,5149
static void extended_partition(202,5184
solaris_x86_partition(292,7919
static void check_and_add_bsd_partition(331,8877
static void bsd_disklabel_partition(375,10396
static void unixware_partition(411,11302
static int msdos_partition(445,12160
static int osf_partition(634,17872
#define DISKLABELMAGIC 671,18711
static int sun_partition(707,19540
#define SUN_LABEL_MAGIC 734,20633
static int sgi_partition(780,21851
#define SGI_LABEL_MAGIC 805,22838
checksum_block(851,24044
amiga_partition(861,24159
#define MAC_PARTITION_MAGIC	954,26685
#define APPLE_AUX_TYPE	957,26778
struct mac_partition mac_partition959,26820
#define MAC_STATUS_BOOTABLE	981,27560
#define MAC_DRIVER_MAGIC	983,27619
struct mac_driver_desc mac_driver_desc986,27698
static int mac_partition(993,27847
#define ICD_PARTS1080,30256
static int atari_partition 1082,30275
static void check_partition(1210,33487
void resetup_one_dev(1271,35099
static inline void setup_dev(1292,35716
__initfunc(1315,36378
int get_partition_list(1365,37257

drivers/block/xd.c,2380
#define MAJOR_NR 50,1584
#define XD_DONT_USE_DMA	55,1656
#define XD_INIT_DISK_DELAY	57,1760
XD_INFO xd_info[62,1976
static inline int __get_order(90,3812
#define xd_dma_mem_alloc(xd_dma_mem_alloc102,3991
#define xd_dma_mem_free(xd_dma_mem_free103,4068
static char *xd_dma_buffer 104,4140
static XD_SIGNATURE xd_sigs[106,4173
static XD_SIGNATURE xd_sigs[] __initdata 106,4173
static unsigned int xd_bases[120,5912
static unsigned int xd_bases[] __initdata 120,5912
static struct hd_struct xd_struct[129,6083
static int xd_sizes[130,6137
static int xd_sizes[XD_MAXDRIVES << 6], xd_access[130,6137
static int xd_blocksizes[131,6213
static struct gendisk xd_gendisk 132,6258
static struct file_operations xd_fops 149,6731
static struct wait_queue *xd_wait_int 162,7100
static u_char xd_valid[163,7168
static u_char xd_drives 164,7216
static u_char xd_override __initdata 165,7284
static u_short xd_iobase 166,7339
static int xd_geo[167,7373
static int xd_geo[XD_MAXDRIVES*3] __initdata 167,7373
static volatile int xdc_busy 169,7438
static struct wait_queue *xdc_wait 170,7472
typedef void (*timeout_fn)timeout_fn172,7516
static struct timer_list xd_timer 173,7559
static volatile u_char xd_error;176,7712
static int nodma 177,7745
__initfunc(180,7856
__initfunc(195,8275
__initfunc(219,8939
static int xd_open 264,10317
static void do_xd_request 285,10662
static int xd_ioctl 318,11504
static int xd_release 378,13283
static int xd_reread_partitions(396,13617
static int xd_readwrite 434,14510
static void xd_recalibrate 508,17158
static void xd_interrupt_handler(518,17475
static u_char xd_setup_dma 532,17979
static u_char *xd_build 558,18638
static void xd_wakeup 571,19054
static void xd_watchdog 577,19156
static inline u_char xd_waitport 584,19327
static inline u_int xd_wait_for_IRQ 602,19727
static u_int xd_command 629,20281
__initfunc(691,21870
__initfunc(713,22389
__initfunc(720,22625
__initfunc(737,23137
__initfunc(784,24559
__initfunc(811,25690
__initfunc(833,26396
__initfunc(917,29274
__initfunc(933,29735
__initfunc(949,30310
__initfunc(966,30767
__initfunc(976,31004
__initfunc(1009,31871
__initfunc(1052,33545
__initfunc(1079,34341
__initfunc(1102,35057
__initfunc(1115,35396
static int xd[1137,36130
static void xd_done 1143,36248
int init_module(1160,36621
void cleanup_module(1186,37177

drivers/block/ide-cd.c,2968
#define IDECD_VERSION 250,14928
static void cdrom_saw_media_change 277,15579
void cdrom_analyze_sense_data 288,15817
static void restore_request 437,19910
static void cdrom_queue_request_sense 449,20190
static void cdrom_end_request 493,21493
static int cdrom_decode_status 514,22122
static int cdrom_start_packet_command 655,26475
static int cdrom_transfer_packet_command 695,27695
static void cdrom_buffer_sectors 735,28898
int cdrom_read_check_ireason 789,30550
static void cdrom_read_intr 821,31338
static int cdrom_read_from_buffer 954,35138
static void cdrom_start_read_continuation 1014,36900
#define IDECD_SEEK_THRESHOLD	1071,38745
#define IDECD_SEEK_TIMER	1072,38801
#define IDECD_SEEK_TIMEOUT 1073,38859
static void cdrom_seek_intr 1075,38928
static void cdrom_start_seek_continuation 1093,39340
static void cdrom_start_seek 1111,39835
static void cdrom_start_read 1123,40122
static void cdrom_pc_intr 1173,41486
static void cdrom_do_pc_continuation 1286,44389
static void cdrom_do_packet_command 1297,44701
void cdrom_sleep 1319,45208
int cdrom_queue_packet_command 1326,45311
void ide_do_rw_cdrom 1397,47379
int bin2bcd 1446,48941
int bcd2bin 1453,49013
void msf_from_bcd 1459,49081
void lba_to_msf 1470,49289
int msf_to_lba 1482,49553
cdrom_check_status 1489,49673
cdrom_lockdoor 1512,50258
cdrom_eject 1559,51403
cdrom_pause 1577,51794
cdrom_startstop 1592,52088
cdrom_read_capacity 1607,52388
cdrom_read_tocentry 1634,52865
cdrom_read_toc 1657,53449
cdrom_read_subchannel 1767,56747
cdrom_mode_sense 1790,57344
cdrom_mode_select 1809,57796
cdrom_select_speed 1830,58369
cdrom_play_lba_range_1 1859,59161
cdrom_play_lba_range 1889,59952
int cdrom_get_toc_entry 1921,60723
cdrom_read_block 1950,61434
cdrom_load_unload 1989,62343
cdrom_read_mech_status 2032,63353
cdrom_read_changer_info 2052,63861
int ide_cdrom_dev_ioctl 2092,64679
int ide_cdrom_audio_ioctl 2316,69643
int ide_cdrom_reset 2506,74751
int ide_cdrom_tray_move 2518,74998
int ide_cdrom_lock_door 2533,75301
int ide_cdrom_select_speed 2540,75473
int ide_cdrom_select_disc 2579,76944
int ide_cdrom_drive_status 2665,78790
int ide_cdrom_get_last_session 2707,79795
int ide_cdrom_get_mcn 2728,80262
int ide_cdrom_check_media_change_real 2755,80920
int ide_cdrom_open_real 2794,81767
void ide_cdrom_release_real 2805,81925
struct cdrom_device_ops ide_cdrom_dops 2816,82108
static int ide_cdrom_register 2837,82928
int ide_cdrom_probe_capabilities 2855,83471
static void ide_cdrom_add_settings(2948,86441
int ide_cdrom_setup 2960,87116
int ide_cdrom_ioctl 3094,91591
int ide_cdrom_open 3102,91785
void ide_cdrom_release 3116,91999
int ide_cdrom_check_media_change 3124,92153
int ide_cdrom_cleanup(3133,92330
static ide_driver_t ide_cdrom_driver 3153,92919
static ide_module_t ide_cdrom_module 3174,93516
char *ignore 3182,93638
int init_module 3188,93744
void cleanup_module(3193,93798
int ide_cdrom_init 3207,94166

drivers/block/rd.c,1913
#define MAJOR_NR 70,2427
#define NUM_RAMDISKS 74,2525
#define RD_LOADER78,2671
#define BUILD_CRAMDISK79,2689
static int initrd_users 85,2821
static int rd_length[92,2949
static int rd_blocksizes[93,2985
int rd_size 101,3260
int rd_doload 104,3325
int rd_prompt 105,3385
int rd_image_start 106,3453
unsigned long initrd_start,108,3539
unsigned long initrd_start,initrd_end;108,3539
int mount_initrd 109,3578
int initrd_below_start_ok 110,3644
static void rd_request(120,3892
static int rd_ioctl(159,4600
static ssize_t initrd_read(187,5241
static int initrd_release(201,5542
static struct file_operations initrd_fops 213,5765
static int rd_open(230,6060
static int rd_release(249,6408
static struct file_operations fd_fops 255,6508
__initfunc(270,6969
int init_module(298,7492
void cleanup_module(307,7697
__initfunc(335,8335
__initfunc(428,10670
__initfunc(548,13752
__initfunc(570,14143
#define OF(OF584,14315
#define memzero(memzero586,14339
typedef unsigned char  uch;uch589,14388
typedef unsigned short ush;ush590,14416
typedef unsigned long  ulg;ulg591,14444
#define INBUFSIZ 593,14473
#define WSIZE 594,14495
static uch *inbuf;597,14615
static uch *window;598,14634
static unsigned insize 600,14655
static unsigned inptr 601,14711
static unsigned outcnt 602,14790
static int exit_code 603,14848
static long bytes_out 604,14874
static struct file *crd_infp,605,14901
static struct file *crd_infp, *crd_outfp;605,14901
#define get_byte(get_byte607,14944
#define Assert(Assert610,15057
#define Trace(Trace611,15082
#define Tracev(Tracev612,15099
#define Tracevv(Tracevv613,15117
#define Tracec(Tracec614,15136
#define Tracecv(Tracecv615,15156
#define STATIC 617,15178
__initfunc(629,15453
__initfunc(634,15535
__initfunc(639,15597
__initfunc(643,15648
__initfunc(652,15900
__initfunc(669,16324
__initfunc(686,16722
__initfunc(692,16809

drivers/block/amiflop.c,4655
#define MAJOR_NR 80,2931
#define RAW_IOCTL85,3027
#define IOCTL_RAW_TRACK 87,3062
#define FD_OK	97,3162
#define FD_ERROR	98,3205
#define FD_NOUNIT	99,3270
#define FD_UNITBUSY	100,3316
#define FD_NOTACTIVE	101,3364
#define FD_NOTREADY	102,3412
#define MFM_NOSYNC	104,3482
#define MFM_HEADER	105,3503
#define MFM_DATA	106,3524
#define MFM_TRACK	107,3543
#define FD_NODRIVE	112,3592
#define FD_DD_3 113,3662
#define FD_HD_3 114,3730
#define FD_DD_5 115,3797
static long int fd_def_df0 117,3867
#define MOTOR_ON	124,4003
#define MOTOR_OFF	125,4044
#define SELECT(SELECT126,4085
#define DESELECT(DESELECT127,4129
#define SELMASK(SELMASK128,4172
#define DRIVE(DRIVE130,4222
#define PROBE(PROBE131,4249
#define TYPE(TYPE132,4282
#define DATA(DATA133,4315
static struct fd_drive_type drive_types[135,4349
static int num_dr_types 143,4795
static int floppy_sizes[146,4903
static int floppy_blocksizes[147,4968
static struct fd_data_type data_types[152,5138
static struct amiga_floppy_struct unit[158,5300
static struct timer_list flush_track_timer[160,5365
static struct timer_list post_write_timer;161,5423
static struct timer_list motor_on_timer;162,5466
static struct timer_list motor_off_timer[163,5507
static int on_attempts;164,5563
static volatile int fdc_busy 168,5657
static volatile int fdc_nested 169,5692
static struct wait_queue *fdc_wait 170,5728
static struct wait_queue *motor_wait 172,5773
static volatile int selected 174,5819
static int writepending 176,5886
static int writefromint 177,5915
static char *raw_buf;178,5944
#define RAW_BUF_SIZE 180,5967
static volatile char block_flag 187,6177
static struct wait_queue *wait_fd_block 188,6214
static unsigned char mfmencode[191,6321
static unsigned char mfmdecode[195,6460
static volatile int ms_busy 198,6544
static struct wait_queue *ms_wait 199,6578
#define MS_TICKS 200,6620
#define MAX_ERRORS 207,6880
static int fd_ref[210,6937
static int fd_device[211,6973
#define CURRENT_DEVICE 217,7123
#define CURRENT_ERRORS 220,7192
static void ms_isr(232,7450
static void ms_delay(240,7644
static inline int try_fdc(262,8107
static void get_fdc(268,8211
static inline void rel_fdc(285,8575
static void fd_select 299,8893
static void fd_deselect 323,9325
static void motor_on_callback(352,9793
static int fd_motor_on(362,10009
static void fd_motor_off(396,10635
static void floppy_off 428,11336
static int fd_calibrate(440,11631
static int fd_seek(492,12659
static unsigned long fd_get_drive_id(549,13682
static void fd_block_done(599,14767
static void raw_read(616,15180
static int raw_write(644,15808
static void post_write 680,16825
static unsigned long scan_sync(703,17316
static inline unsigned long checksum(717,17591
static unsigned long decode 729,17823
struct header header749,18190
static int amiga_read(759,18369
static void encode(823,20290
static void encode_block(837,20558
static unsigned long *putsec(855,20925
static void amiga_write(889,21770
struct dos_header dos_header906,22170
static ushort dos_crc(973,24742
static unsigned char CRCTable2[994,26173
register int i;1014,27614
register unsigned char *CRCT1,1015,27630
register unsigned char *CRCT1, *CRCT2,1015,27630
register unsigned char *CRCT1, *CRCT2, *data,1015,27630
register unsigned char *CRCT1, *CRCT2, *data, c,1015,27630
register unsigned char *CRCT1, *CRCT2, *data, c, crch,1015,27630
register unsigned char *CRCT1, *CRCT2, *data, c, crch, crcl;1015,27630
CRCT1=1017,27692
CRCT2=1018,27709
data=1019,27726
crcl=1020,27740
crch=1021,27754
  c 1023,27797
  crch 1024,27821
  crcl 1025,27847
return (crch<<8)|crcl;1027,27868
static inline ushort dos_hdr_crc 1030,27894
static inline ushort dos_data_crc(1035,28027
static inline unsigned char dos_decode_byte(1040,28150
static unsigned long dos_decode(1056,28404
static void dbg(1066,28595
static int dos_read(1073,28782
static inline ushort dos_encode_byte(1163,31653
static void dos_encode_block(1176,31888
static unsigned long *ms_putsec(1187,32098
static void dos_write(1237,33299
static void flush_track_callback(1280,34428
static int non_int_flush_track 1300,34871
static int get_track(1335,35559
static void redo_fd_request(1370,36192
static void do_fd_request(1476,38747
static int fd_ioctl(1481,38804
static void fd_probe(1577,41142
static int floppy_open(1612,41925
static int floppy_release(1670,43205
static int amiga_floppy_change(1709,44224
static struct file_operations floppy_fops 1741,44803
__initfunc(1758,45283
__initfunc(1764,45439
__initfunc(1794,46149
int init_module(1880,48567
void cleanup_module(1887,48665

drivers/block/ide.h,5700
#define _IDE_H2,15
#define INITIAL_MULT_COUNT	34,1140
#define SUPPORT_SLOW_DATA_PORTS	37,1273
#define SUPPORT_VLB_SYNC	40,1408
#define DISK_RECOVERY_TIME	43,1534
#define OK_TO_RESET_CONTROLLER	46,1675
#define FAKE_FDISK_FOR_EZDRIVE 49,1829
#define FANCY_STATUS_DUMPS	52,1968
#define CMD640_DUMP_REGS 58,2149
#define IDE_DRIVE_CMD	65,2353
typedef unsigned char	byte;byte71,2559
#define ERROR_MAX	76,2659
#define ERROR_RESET	77,2718
#define ERROR_RECAL	78,2779
#define HWIF(HWIF87,2963
#define HWGROUP(HWGROUP88,3016
#define IDE_NR_PORTS	93,3144
#define IDE_DATA_OFFSET	95,3172
#define IDE_ERROR_OFFSET	96,3201
#define IDE_NSECTOR_OFFSET	97,3230
#define IDE_SECTOR_OFFSET	98,3261
#define IDE_LCYL_OFFSET	99,3291
#define IDE_HCYL_OFFSET	100,3320
#define IDE_SELECT_OFFSET	101,3349
#define IDE_STATUS_OFFSET	102,3379
#define IDE_CONTROL_OFFSET	103,3409
#define IDE_IRQ_OFFSET	104,3440
#define IDE_FEATURE_OFFSET	106,3469
#define IDE_COMMAND_OFFSET	107,3513
#define IDE_DATA_REG	109,3559
#define IDE_ERROR_REG	110,3622
#define IDE_NSECTOR_REG	111,3687
#define IDE_SECTOR_REG	112,3756
#define IDE_LCYL_REG	113,3823
#define IDE_HCYL_REG	114,3886
#define IDE_SELECT_REG	115,3949
#define IDE_STATUS_REG	116,4016
#define IDE_CONTROL_REG	117,4083
#define IDE_IRQ_REG	118,4152
#define IDE_FEATURE_REG	120,4214
#define IDE_COMMAND_REG	121,4253
#define IDE_ALTSTATUS_REG	122,4293
#define IDE_IREASON_REG	123,4335
#define IDE_BCOUNTL_REG	124,4376
#define IDE_BCOUNTH_REG	125,4414
#define OUT_BYTE(OUT_BYTE128,4475
#define IN_BYTE(IN_BYTE129,4512
#define OUT_BYTE(OUT_BYTE131,4551
#define IN_BYTE(IN_BYTE132,4590
#define GET_ERR(GET_ERR135,4654
#define GET_STAT(GET_STAT136,4696
#define OK_STAT(OK_STAT137,4740
#define BAD_R_STAT	138,4805
#define BAD_W_STAT	139,4850
#define BAD_STAT	140,4897
#define DRIVE_READY	141,4940
#define DATA_READY	142,4987
#define IDE_MAJOR_NAME	147,5058
#define MAJOR_NAME	148,5132
#define PARTN_BITS	149,5166
#define PARTN_MASK	150,5233
#define MAX_DRIVES	151,5296
#define SECTOR_WORDS	152,5364
#define IDE_LARGE_SEEK(IDE_LARGE_SEEK153,5434
#define IDE_MIN(IDE_MIN154,5511
#define IDE_MAX(IDE_MAX155,5552
#define WAIT_DRQ	160,5637
#define WAIT_READY	162,5721
#define WAIT_READY	164,5794
#define WAIT_PIDENTIFY	166,5887
#define WAIT_WORSTCASE	168,6011
#define WAIT_CMD	169,6085
#define WAIT_MIN_SLEEP	170,6159
#define SELECT_DRIVE(SELECT_DRIVE172,6228
#define ide_scsi	183,6481
#define ide_disk	184,6503
#define ide_optical	185,6525
#define ide_cdrom	186,6549
#define ide_tape	187,6571
#define ide_floppy	188,6592
	} special_t;special_t199,6962
typedef struct ide_drive_s ide_drive_s201,6977
	} ide_drive_t;ide_drive_t262,10389
	} ide_dma_action_t;ide_dma_action_t278,11060
typedef int (ide_dmaproc_t)ide_dmaproc_t280,11082
typedef void (ide_tuneproc_t)ide_tuneproc_t294,11641
typedef void (ide_selectproc_t)ide_selectproc_t299,11759
	} hwif_chipset_t;hwif_chipset_t310,12125
typedef struct ide_pci_devid_s ide_pci_devid_s312,12145
} ide_pci_devid_t;ide_pci_devid_t315,12220
#define IDE_PCI_DEVID_NULL	317,12240
#define IDE_PCI_DEVID_EQ(IDE_PCI_DEVID_EQ318,12292
typedef struct hwif_s hwif_s320,12358
	} ide_hwif_t;ide_hwif_t353,14160
typedef void (ide_handler_t)ide_handler_t358,14223
typedef struct hwgroup_s hwgroup_s360,14269
	} ide_hwgroup_t;ide_hwgroup_t370,14781
#define TYPE_INT	376,14839
#define TYPE_INTA	377,14858
#define TYPE_BYTE	378,14878
#define TYPE_SHORT	379,14898
#define SETTING_READ	381,14920
#define SETTING_WRITE	382,14950
#define SETTING_RW	383,14981
typedef int (ide_procset_t)ide_procset_t385,15032
typedef struct ide_settings_s ide_settings_s386,15081
} ide_settings_t;ide_settings_t400,15345
} ide_proc_entry_t;ide_proc_entry_t417,16018
read_proc_t proc_ide_read_capacity;424,16285
read_proc_t proc_ide_read_geometry;425,16321
#define PROC_IDE_READ_RETURN(PROC_IDE_READ_RETURN430,16389
#define PROC_IDE_READ_RETURN(PROC_IDE_READ_RETURN443,16628
#define IDE_SUBDRIVER_VERSION	449,16735
typedef int	(ide_cleanup_proc)ide_cleanup_proc451,16768
typedef void 	(ide_do_request_proc)ide_do_request_proc452,16815
typedef void	(ide_end_request_proc)ide_end_request_proc453,16900
typedef int 	(ide_ioctl_proc)ide_ioctl_proc454,16960
typedef int	(ide_open_proc)ide_open_proc455,17066
typedef void 	(ide_release_proc)ide_release_proc456,17141
typedef int	(ide_check_media_change_proc)ide_check_media_change_proc457,17221
typedef void	(ide_pre_reset_proc)ide_pre_reset_proc458,17279
typedef unsigned long (ide_capacity_proc)ide_capacity_proc459,17329
typedef void	(ide_special_proc)ide_special_proc460,17387
typedef void	(ide_setting_proc)ide_setting_proc461,17435
typedef struct ide_driver_s ide_driver_s463,17484
	} ide_driver_t;ide_driver_t481,18005
#define DRIVER(DRIVER483,18023
#define IDE_CHIPSET_MODULE	488,18106
#define IDE_PROBE_MODULE	489,18160
#define IDE_DRIVER_MODULE	490,18188
typedef int	(ide_module_init_proc)ide_module_init_proc492,18218
typedef struct ide_module_s ide_module_s494,18261
} ide_module_t;ide_module_t499,18380
extern	ide_hwif_t	ide_hwifs[510,18733
extern  ide_module_t	*ide_modules;511,18794
#define IDE_DRIVER	517,18913
#define LOCAL_END_REQUEST	518,18971
 ide_action_t;ide_action_t612,22438
extern struct file_operations ide_fops[707,25757
#define ON_BOARD	739,26807
#define NEVER_BOARD	740,26827
#  define OFF_BOARD	742,26881
#  define OFF_BOARD	744,26947
unsigned long ide_find_free_region 747,27018
#define BAD_DMA_DRIVE	751,27155
#define GOOD_DMA_DRIVE	752,27180
#define IS_PDC4030_DRIVE 764,27697
#define IS_PDC4030_DRIVE 766,27766

drivers/block/ataflop.c,4784
#define MAJOR_NR 94,2729
#define	FD_MAX_UNITS 97,2783
static struct atari_disk_type atari_disk_type102,2850
} disk_type[108,3077
#define	MAX_TYPE_DD 114,3393
#define	MAX_TYPE_HD 119,3651
#define	MAX_TYPE_ED 123,3861
static int StartDiskType[146,5191
#define	TYPE_DD	152,5267
#define	TYPE_HD	153,5286
#define	TYPE_ED	154,5305
static int DriveType 156,5325
} minor2disktype[162,5464
#define NUM_DISK_MINORS 197,6676
#define MAX_DISK_SIZE 203,6861
static struct atari_disk_type user_params[209,7018
static struct atari_disk_type default_params[217,7364
static int floppy_sizes[220,7455
static int floppy_blocksizes[221,7485
static struct atari_floppy_struct atari_floppy_struct224,7562
} unit[236,7987
#define	UD	238,8010
#define	UDT	239,8033
#define	SUD	240,8066
#define	SUDT	241,8098
#define FDC_READ(FDC_READ244,8142
#define FDC_WRITE(FDC_WRITE256,8473
static int MaxSectors[275,9077
static int BufferSize[278,9120
#define	BUFFER_SIZE	282,9176
unsigned char *DMABuffer;284,9221
static unsigned long PhysDMABuffer;285,9275
static int UseTrackbuffer 287,9337
unsigned char *TrackBuffer;290,9433
static unsigned long PhysTrackBuffer;291,9488
static int BufferDrive,292,9549
static int BufferDrive, BufferSide,292,9549
static int BufferDrive, BufferSide, BufferTrack;292,9549
static int read_track;293,9598
#define	SECTOR_BUFFER(SECTOR_BUFFER295,9669
#define	IS_BUFFERED(IS_BUFFERED296,9726
static int SelectedDrive 304,9999
static int ReqCmd,305,10029
static int ReqCmd, ReqBlock;305,10029
static int ReqSide,306,10058
static int ReqSide, ReqTrack,306,10058
static int ReqSide, ReqTrack, ReqSector,306,10058
static int ReqSide, ReqTrack, ReqSector, ReqCnt;306,10058
static int HeadSettleFlag 307,10107
static unsigned char *ReqData,308,10138
static unsigned char *ReqData, *ReqBuffer;308,10138
static int MotorOn 309,10181
static int IsFormatting 310,10219
static int UserSteprate[312,10262
static volatile int fdc_busy 316,10419
static struct wait_queue *fdc_wait 317,10453
static struct wait_queue *format_wait 318,10496
static unsigned int changed_floppies 320,10543
#define	CHECK_CHANGE_DELAY	321,10605
#define	FD_MOTOR_OFF_DELAY	323,10638
#define	FD_MOTOR_OFF_MAXTRY	324,10672
#define FLOPPY_TIMEOUT	326,10709
#define RECALIBRATE_ERRORS	327,10740
#define MAX_ERRORS	329,10838
#define	START_MOTOR_OFF_TIMER(START_MOTOR_OFF_TIMER333,10924
#define	START_CHECK_CHANGE_TIMER(START_CHECK_CHANGE_TIMER340,11128
#define	START_TIMEOUT(START_TIMEOUT346,11317
#define	STOP_TIMEOUT(STOP_TIMEOUT349,11405
static int Probing 358,11617
static int NeedSeek 363,11738
#define DPRINT(DPRINT367,11778
#define DPRINT(DPRINT369,11811
static struct timer_list motor_off_timer 413,13615
static struct timer_list readtrack_timer 415,13701
static struct timer_list timeout_timer 418,13788
static void fd_select_side(425,13900
static void fd_select_drive(444,14396
static void fd_deselect(475,15108
static void fd_motor_off_timer(497,15820
static void check_change(543,16918
static __inline__ void set_head_settle_flag(581,17839
static __inline__ int get_head_settle_flag(586,17927
static void floppy_irq 600,18143
static void fd_error(624,18671
#define	SET_IRQ_HANDLER(SET_IRQ_HANDLER649,19161
#define FILL(FILL654,19276
static int do_format(660,19365
static void do_fd_action(744,21514
static void fd_calibrate(791,22555
static void fd_calibrate_done(812,22994
static void fd_seek(835,23474
static void fd_seek_done(860,23975
static int MultReadInProgress 890,24606
static void fd_rwsec(893,24643
static void fd_readtrack_check(991,27077
static void fd_rwsec_done(1053,28614
static void fd_rwsec_done1(1066,28834
static void fd_writetrack(1184,31898
static void fd_writetrack_done(1244,33227
static void fd_times_out(1267,33661
static void finish_fdc(1295,34520
static void finish_fdc_done(1314,34971
static int fd_ref[1345,35708
static int fd_device[1346,35744
#define CURRENT_DEVICE 1352,35894
#define CURRENT_ERRORS 1355,35963
static void floppy_off(1359,36028
static int check_floppy_change 1377,36922
static int floppy_revalidate 1404,37473
static __inline__ void copy_buffer(1427,38116
static void setup_req_params(1439,38360
static void redo_fd_request(1459,38817
void do_fd_request(1543,40558
static int invalidate_drive(1561,40993
static int fd_ioctl(1570,41189
#define IOCTL_MODE_BIT 1573,41296
#define OPEN_WRITE_BIT 1574,41321
#define IOCTL_ALLOWED 1575,41347
__initfunc(1784,46836
__initfunc(1827,47884
__initfunc(1874,49065
static int floppy_open(1917,50222
static int floppy_release(1976,51468
static struct file_operations floppy_fops 2002,52116
__initfunc(2019,52601
__initfunc(2088,54532
int init_module 2117,55203
void cleanup_module 2124,55299

drivers/block/md.c,1853
#define SPEED_LIMIT 34,1096
#define __KERNEL_SYSCALLS__55,1548
#define MAJOR_NR 58,1603
#define MD_DRIVER59,1629
extern kdev_t name_to_kdev_t(67,1767
static struct gendisk md_gendisk=81,2133
static struct md_personality *pers[96,2287
struct md_dev md_dev[97,2349
static struct gendisk *find_gendisk 101,2412
char *partition_name 116,2627
static int legacy_raid_sb 131,2950
static void free_sb 151,3520
#define BAD_MAGIC 173,3911
#define OUT_OF_MEM 176,4000
#define NO_DEVICE 179,4056
#define SUCCESS 182,4113
#define FAILURE 183,4131
static int analyze_one_sb 185,4151
#define INCONSISTENT 234,5159
#define OUT_OF_DATE 237,5239
#define OLD_VERSION 240,5345
#define NOT_CLEAN 243,5431
#define NOT_CLEAN_IGNORE 246,5511
#define UNKNOWN_LEVEL 249,5609
static int analyze_sbs 252,5681
int md_update_sb(377,8515
static int do_md_run 414,9557
static int do_md_stop 497,11669
static int do_md_add 544,12762
static int md_ioctl 620,14634
static int md_open 705,16760
static int md_release 714,16922
static ssize_t md_read 724,17090
static ssize_t md_write 735,17360
static struct file_operations md_fops=746,17639
int md_map 761,17798
int md_make_request 778,18184
static void do_md_request 803,18798
void md_wakeup_thread(809,18888
struct md_thread *md_register_thread 815,19009
void md_unregister_thread 839,19532
#define SHUTDOWN_SIGS 855,19921
int md_thread(857,19998
static struct proc_dir_entry proc_md 915,21313
static void md_geninit 922,21451
int md_error 943,21915
int get_md_status 962,22441
int register_md_personality 1017,23740
int unregister_md_personality 1032,24012
static md_descriptor_t *get_spare(1044,24235
int md_do_sync(1072,24882
void mdsyncd 1170,27528
} md_setup_args __initdata 1214,28544
__initfunc(1219,28620
__initfunc(1231,28863
__initfunc(1310,30507
__initfunc(1351,31483

drivers/block/ide.c,4147
#define _IDE_C	104,4590
static const byte	ide_hwif_to_major[134,5223
static int	idebus_parameter;136,5339
static int	system_bus_speed;137,5404
static int	initializing;138,5481
static int	ide_lock 144,5685
ide_module_t *ide_modules 149,5796
ide_hwif_t	ide_hwifs[154,5908
static unsigned long read_timer(161,6151
static inline void set_recovery_timer 177,6482
static void init_hwif_data 187,6688
#define MAGIC_COOKIE 239,8544
static void init_ide_data 240,8576
int drive_is_flashcard 268,9568
int ide_system_bus_speed 290,10341
static inline void do_vlb_sync 315,11217
void ide_input_data 325,11438
void ide_output_data 358,12286
void atapi_input_bytes 395,13324
void atapi_output_bytes 410,13748
static inline int drive_is_ready 428,14213
void ide_end_request(443,14641
void ide_set_handler 468,15462
static unsigned long current_capacity 490,16123
void ide_geninit 503,16447
static void atapi_reset_pollfunc 526,17239
static void reset_pollfunc 555,18173
static void pre_reset 598,19257
static void do_reset1 625,20293
void ide_do_reset 677,22047
void ide_end_drive_cmd 685,22180
byte ide_dump_status 715,23062
static void try_to_flush_leftover_data 785,25388
void ide_error 802,25789
void ide_cmd(857,27472
static void drive_cmd_intr 868,27799
static inline void do_special 895,28598
int ide_wait_stat 926,29647
static void execute_drive_cmd 956,30529
static inline void start_request 987,31311
void ide_stall_queue 1053,33330
#define WAKEUP(WAKEUP1060,33494
static inline ide_drive_t *choose_drive 1065,33642
static void ide_do_request 1109,34994
struct request **ide_get_queue 1175,37226
static void do_hwgroup_request 1185,37471
static inline void unlock_do_hwgroup_request 1209,38252
void do_ide0_request 1216,38424
void do_ide1_request 1222,38526
void do_ide2_request 1229,38655
void do_ide3_request 1236,38784
void do_ide4_request 1243,38913
void do_ide5_request 1250,39042
static void start_next_request 1256,39153
void ide_timer_expiry 1273,39632
static void unexpected_intr 1335,42043
void ide_intr 1362,42819
static ide_drive_t *get_info_ptr 1426,45028
void ide_init_drive_cmd 1449,45524
int ide_do_drive_cmd 1487,46928
int ide_revalidate_disk(1536,48593
static void revalidate_drives 1583,49849
static void ide_init_module 1602,50275
static int ide_open(1621,50639
static int ide_release(1661,51646
int ide_replace_subdriver(1675,51949
void ide_unregister 1691,52393
int ide_register 1801,55092
void ide_add_setting(1837,56000
void ide_remove_setting(1863,56990
static ide_settings_t *ide_find_setting_by_ioctl(1876,57289
ide_settings_t *ide_find_setting_by_name(1888,57558
static void auto_remove_settings(1900,57797
int ide_read_setting(1914,58061
int ide_spin_wait_hwgroup 1938,58595
int ide_write_setting(1956,59113
static int set_io_32bit(1992,59925
static int set_using_dma(2002,60187
static int set_pio_mode(2013,60499
void ide_add_generic_settings(2028,60823
int ide_wait_cmd 2042,62082
static int ide_ioctl 2059,62458
static int ide_check_media_change 2197,66687
void ide_fixstring 2208,66911
__initfunc(2239,67624
__initfunc(2257,68254
__initfunc(2365,72361
int ide_xlate_1024 2615,79238
__initfunc(2706,81667
__initfunc(2744,82421
static int default_cleanup 2797,83785
static void default_do_request(2802,83879
static void default_end_request 2807,84014
static int default_ioctl 2812,84130
static int default_open 2818,84277
static void default_release 2824,84398
static int default_check_media_change 2828,84492
static void default_pre_reset 2833,84567
static unsigned long default_capacity 2837,84623
static void default_special 2842,84727
static void setup_driver_defaults 2850,84850
ide_drive_t *ide_scan_devices 2866,85536
static ide_proc_entry_t generic_subdriver_entries[2891,86246
int ide_register_subdriver 2897,86402
int ide_unregister_subdriver 2924,87279
int ide_register_module 2944,87816
void ide_unregister_module 2959,88049
struct file_operations ide_fops[2968,88220
__initfunc(3055,90558
char *options 3067,90708
__initfunc(3070,90757
int init_module 3084,91062
void cleanup_module 3090,91135

drivers/block/loop.c,1390
#define MAJOR_NR 47,1384
#define DEVICE_NAME 49,1413
#define DEVICE_REQUEST 50,1440
#define DEVICE_NR(DEVICE_NR51,1477
#define DEVICE_ON(DEVICE_ON52,1519
#define DEVICE_OFF(DEVICE_OFF53,1545
#define DEVICE_NO_RANDOM54,1572
#define TIMEOUT_VALUE 55,1597
#define MAX_LOOP 58,1652
static struct loop_device loop_dev[59,1671
static int loop_sizes[60,1717
static int loop_blksizes[61,1750
#define FALSE 63,1787
#define TRUE 64,1803
static int transfer_none(73,2067
static int transfer_xor(83,2296
static int none_status(103,2705
static int xor_status(108,2794
struct loop_func_table none_funcs 115,2934
struct loop_func_table xor_funcs 121,3048
struct loop_func_table *xfer_funcs[128,3229
#define MAX_DISK_SIZE 133,3314
static void figure_loop_size(135,3352
static void do_lo_request(153,3790
static int create_missing_block(284,7026
static int loop_set_fd(339,8279
static int loop_release_xfer(426,10338
static int loop_init_xfer(440,10656
static int loop_clr_fd(456,10974
static int loop_set_status(491,11747
static int loop_get_status(532,12890
static int lo_ioctl(557,13708
static int lo_open(594,14660
static int lo_release(620,15189
static struct file_operations lo_fops 648,15844
#define loop_init 665,16258
int loop_register_transfer(668,16296
int loop_unregister_transfer(676,16499
int __init loop_init(697,16966
void cleanup_module(724,17628

drivers/block/ide-cd.h,2595
#define _IDE_CD_H2,18
#define VERBOSE_IDE_CD_ERRORS 17,371
#define STANDARD_ATAPI 26,631
#define NO_DOOR_LOCKING 34,802
#define CDROM_NBLOCKS_BUFFER 41,929
#define SECTOR_SIZE 47,1045
#define SECTOR_BITS 48,1069
#define SECTORS_PER_FRAME 49,1091
#define MIN(MIN51,1147
#define PACKET_COMMAND 54,1239
#define REQUEST_SENSE_COMMAND 55,1274
#define RESET_DRIVE_COMMAND 56,1309
#define CDROMGETSPINDOWN 61,1392
#define CDROMSETSPINDOWN 62,1431
#define TEST_UNIT_READY 67,1577
#define REQUEST_SENSE 68,1614
#define INQUIRY 69,1651
#define START_STOP 70,1688
#define ALLOW_MEDIUM_REMOVAL 71,1725
#define READ_CAPACITY 72,1762
#define READ_10 73,1799
#define SEEK	74,1836
#define READ_HEADER 75,1856
#define STOP_PLAY_SCAN	76,1893
#define MODE_SELECT_10 77,1922
#define MODE_SENSE_10 78,1959
#define LOAD_UNLOAD 79,1996
#define READ_12 80,2033
#define READ_CD_MSF 81,2070
#define SCAN	82,2107
#define SET_CD_SPEED 83,2127
#define PLAY_CD 84,2164
#define MECHANISM_STATUS 85,2201
#define READ_CD 86,2238
#define DVD_GET_PERFORMANCE	89,2294
#define PAGE_READERR 94,2366
#define PAGE_CDROM 95,2403
#define PAGE_AUDIO 96,2440
#define PAGE_CAPABILITIES 97,2477
#define PAGE_ALL 98,2514
#define NO_SENSE 103,2607
#define RECOVERED_ERROR 104,2644
#define NOT_READY 105,2681
#define MEDIUM_ERROR 106,2718
#define HARDWARE_ERROR 107,2755
#define ILLEGAL_REQUEST 108,2792
#define UNIT_ATTENTION 109,2829
#define DATA_PROTECT 110,2866
#define ABORTED_COMMAND 111,2903
#define MISCOMPARE 112,2940
struct ide_cd_config_flags ide_cd_config_flags121,3351
#define CDROM_CONFIG_FLAGS(CDROM_CONFIG_FLAGS147,4713
struct ide_cd_state_flags ide_cd_state_flags152,4938
#define CDROM_STATE_FLAGS(CDROM_STATE_FLAGS160,5308
struct atapi_request_sense atapi_request_sense163,5405
struct packet_command packet_command196,6197
struct atapi_msf atapi_msf205,6367
#define MAX_TRACKS 213,6481
struct atapi_toc_header atapi_toc_header214,6503
struct atapi_toc_entry atapi_toc_entry220,6598
struct atapi_toc atapi_toc239,6934
struct atapi_cdrom_subchnl atapi_cdrom_subchnl251,7245
} mechtype_t;mechtype_t285,7920
struct atapi_capabilities_page atapi_capabilities_page288,7936
struct atapi_mechstat_header atapi_mechstat_header506,15760
struct atapi_slot atapi_slot535,16366
struct atapi_changer_info atapi_changer_info552,16682
struct cdrom_info cdrom_info559,16825
#define SECTOR_BUFFER_SIZE 598,18061
#define ARY_LEN(ARY_LEN605,18224
const char * const sense_key_texts[612,18404
} packet_command_texts[636,18847
} sense_data_texts[672,19984

drivers/block/ide-tape.c,8152
#define IDETAPE_VERSION 326,18066
#define IDETAPE_MIN_PIPELINE_STAGES	375,19354
#define IDETAPE_MAX_PIPELINE_STAGES	376,19394
#define IDETAPE_INCREASE_STAGES_RATE	377,19434
#define IDETAPE_LOW_TAPE_PRIORITY	399,20564
#define IDETAPE_DEBUG_LOG	418,21153
#define IDETAPE_DEBUG_BUGS	419,21182
#define IDETAPE_MAX_PC_RETRIES	427,21415
#define IDETAPE_PC_BUFFER_SIZE	434,21618
#define IDETAPE_PC_STACK	441,21861
#define IDETAPE_FIFO_THRESHOLD 481,23553
#define IDETAPE_WAIT_CMD	486,23643
#define IDETAPE_DSC_RW_MIN	491,23701
#define IDETAPE_DSC_RW_MAX	492,23752
#define IDETAPE_DSC_RW_TIMEOUT	493,23805
#define IDETAPE_DSC_MA_FAST	494,23862
#define IDETAPE_DSC_MA_THRESHOLD	495,23913
#define IDETAPE_DSC_MA_SLOW	496,23971
#define IDETAPE_DSC_MA_TIMEOUT	497,24024
} idetape_chrdev_direction_t;idetape_chrdev_direction_t505,24253
typedef struct idetape_packet_command_s idetape_packet_command_s510,24324
} idetape_pc_t;idetape_pc_t525,25013
#define	PC_ABORT	530,25066
#define PC_WAIT_FOR_DSC	531,25149
#define PC_DMA_RECOMMENDED	532,25232
#define	PC_DMA_IN_PROGRESS	533,25308
#define	PC_DMA_ERROR	534,25368
#define	PC_WRITING	535,25437
} idetape_capabilities_page_t;idetape_capabilities_page_t573,27043
typedef struct idetape_stage_s idetape_stage_s578,27103
} idetape_stage_t;idetape_stage_t582,27304
} idetape_tape_t;idetape_tape_t696,31701
#define IDETAPE_IGNORE_DSC	701,31753
#define IDETAPE_ADDRESS_VALID	702,31783
#define IDETAPE_BUSY	703,31858
#define IDETAPE_PIPELINE_ERROR	704,31911
#define IDETAPE_DETECT_BS	705,31986
#define IDETAPE_FILEMARK	706,32072
#define IDETAPE_DRQ_INTERRUPT	707,32130
#define IDETAPE_TEST_UNIT_READY_CMD	712,32245
#define IDETAPE_REWIND_CMD	713,32286
#define IDETAPE_REQUEST_SENSE_CMD	714,32319
#define IDETAPE_READ_CMD	715,32358
#define IDETAPE_WRITE_CMD	716,32389
#define IDETAPE_WRITE_FILEMARK_CMD	717,32421
#define IDETAPE_SPACE_CMD	718,32461
#define IDETAPE_INQUIRY_CMD	719,32493
#define IDETAPE_ERASE_CMD	720,32527
#define IDETAPE_MODE_SENSE_CMD	721,32559
#define IDETAPE_LOAD_UNLOAD_CMD	722,32596
#define IDETAPE_LOCATE_CMD	723,32634
#define IDETAPE_READ_POSITION_CMD	724,32667
#define IDETAPE_SPACE_OVER_FILEMARK	729,32752
#define IDETAPE_SPACE_TO_EOD	730,32790
#define IDETAPE_LU_LOAD_MASK	735,32874
#define IDETAPE_LU_RETENSION_MASK	736,32906
#define IDETAPE_LU_EOT_MASK	737,32942
#define IDETAPE_FIRST_RQ	747,33204
#define IDETAPE_PC_RQ1	752,33315
#define IDETAPE_PC_RQ2	753,33343
#define IDETAPE_READ_RQ	760,33534
#define IDETAPE_WRITE_RQ	761,33563
#define IDETAPE_ABORTED_WRITE_RQ	762,33592
#define IDETAPE_LAST_RQ	764,33629
#define IDETAPE_RQ_CMD(IDETAPE_RQ_CMD770,33748
#define	IDETAPE_ERROR_GENERAL	776,33927
#define	IDETAPE_ERROR_FILEMARK	777,33962
#define	IDETAPE_ERROR_EOD	778,33998
} idetape_status_reg_t;idetape_status_reg_t795,34578
} idetape_error_reg_t;idetape_error_reg_t809,34998
} idetape_feature_reg_t;idetape_feature_reg_t822,35285
} idetape_bcount_reg_t;idetape_bcount_reg_t833,35462
} idetape_ireason_reg_t;idetape_ireason_reg_t845,35771
} idetape_drivesel_reg_t;idetape_drivesel_reg_t859,36168
} idetape_control_reg_t;idetape_control_reg_t873,36596
} idetape_chrdev_t;idetape_chrdev_t882,36826
struct idetape_id_gcw idetape_id_gcw888,36961
} idetape_inquiry_result_t;idetape_inquiry_result_t921,38351
} idetape_read_position_result_t;idetape_read_position_result_t939,39028
} idetape_request_sense_result_t;idetape_request_sense_result_t964,40096
#define	IDETAPE_CAPABILITIES_PAGE	971,40293
} idetape_mode_parameter_header_t;idetape_mode_parameter_header_t981,40606
} idetape_parameter_block_descriptor_t;idetape_parameter_block_descriptor_t993,40934
} idetape_data_compression_page_t;idetape_data_compression_page_t1012,41643
} idetape_medium_partition_page_t;idetape_medium_partition_page_t1031,42350
} idetape_config_t;idetape_config_t1040,42519
static idetape_chrdev_t idetape_chrdevs[1046,42687
static int idetape_chrdev_present 1047,42752
static void idetape_discard_data 1053,42900
static void idetape_input_buffers 1059,43024
static void idetape_output_buffers 1084,43659
static void idetape_update_buffers 1110,44307
static void idetape_postpone_request 1139,45057
static void idetape_queue_pc_head 1166,46200
static idetape_pc_t *idetape_next_pc_storage 1180,46692
static struct request *idetape_next_rq_storage 1205,47661
static inline int idetape_pipeline_active 1221,48066
static void __idetape_kfree_stage 1230,48284
static void idetape_kfree_stage 1251,48688
static idetape_stage_t *__idetape_kmalloc_stage 1271,49380
static idetape_stage_t *idetape_kmalloc_stage 1321,50826
static void idetape_copy_stage_from_user 1338,51239
static void idetape_copy_stage_to_user 1362,51856
static void idetape_init_merge_stage 1387,52497
static void idetape_switch_buffers 1400,52775
static void idetape_increase_max_pipeline_stages 1417,53344
static void idetape_add_stage_tail 1434,53896
static void idetape_remove_stage_head 1460,54668
static void idetape_active_next_stage 1496,55723
static void idetape_insert_pipeline_into_queue 1523,56450
static void idetape_abort_pipeline 1535,56760
static void idetape_end_request 1550,57138
static void idetape_analyze_error 1605,58755
static void idetape_request_sense_callback 1649,60270
static void idetape_init_pc 1668,60851
static void idetape_create_request_sense_cmd 1680,61096
static void idetape_retry_pc 1694,61497
static void idetape_pc_intr 1717,62247
static void idetape_transfer_pc(1890,68782
static void idetape_issue_packet_command 1921,69864
static void idetape_media_access_finished 1991,72472
static void idetape_pc_callback 2017,73094
static void idetape_rw_callback 2028,73377
static void idetape_create_locate_cmd 2047,73909
static void idetape_create_rewind_cmd 2058,74238
static void idetape_create_mode_sense_cmd 2069,74500
static void idetape_create_write_filemark_cmd 2094,75308
static void idetape_create_load_unload_cmd 2103,75566
static void idetape_create_erase_cmd 2112,75796
static void idetape_create_read_cmd 2121,76004
static void idetape_create_space_cmd 2136,76515
static void idetape_create_write_cmd 2146,76804
static void idetape_read_position_callback 2163,77388
static void idetape_create_read_position_cmd 2195,78510
static void idetape_do_request 2206,78782
static int idetape_queue_pc_tail 2318,82717
static void idetape_wait_for_request 2335,83194
static int idetape_queue_rw_tail 2355,83752
static int idetape_add_chrdev_read_request 2388,84749
static int idetape_add_chrdev_write_request 2458,87163
static void idetape_discard_read_pipeline 2515,89105
static void idetape_wait_for_pipeline 2552,90210
static void idetape_pad_zeros 2573,90798
static void idetape_empty_write_pipeline 2594,91353
static int idetape_pipeline_size 2642,93031
static int idetape_position_tape 2671,93849
static int idetape_rewind_tape 2689,94312
static int idetape_flush_tape_buffers 2705,94703
static int idetape_blkdev_ioctl 2720,95042
static int idetape_blkdev_open 2753,96103
static void idetape_blkdev_release 2759,96231
static void idetape_pre_reset 2767,96426
static ide_drive_t *get_drive_ptr 2777,96638
static int idetape_space_over_filemarks 2795,97222
static ssize_t idetape_chrdev_read 2884,100088
static ssize_t idetape_chrdev_write 2961,102799
static int idetape_mtioctop 3103,107576
static int idetape_chrdev_ioctl 3204,110603
static int idetape_chrdev_open 3255,112426
static int idetape_chrdev_release 3286,113199
static int idetape_identify_device 3337,114805
static void idetape_get_mode_sense_results 3461,119579
static void idetape_add_settings(3525,123148
static void idetape_setup 3555,125052
static int idetape_cleanup 3633,127908
static int proc_idetape_read_name3661,128742
static ide_proc_entry_t idetape_proc[3673,129066
#define	idetape_proc	3680,129205
static ide_driver_t idetape_driver 3687,129297
static ide_module_t idetape_module 3708,129875
static struct file_operations idetape_fops 3718,130057
int idetape_init 3738,130570
int init_module 3789,132266
void cleanup_module 3794,132319

drivers/block/umc8672.c,406
#define REALLY_SLOW_IO	40,1278
#define UMC_DRIVE0 57,1685
#define UMC_DRIVE1 58,1756
#define UMC_DRIVE2 59,1817
#define UMC_DRIVE3 60,1881
static byte current_speeds[62,1957
static const byte pio_to_umc 63,2039
static const byte speedtab 66,2185
static void out_umc 71,2417
static byte in_umc 77,2508
static void umc_set_speeds 83,2589
static void tune_umc 108,3206
void init_umc8672 126,3814

drivers/block/linear.c,344
#define MAJOR_NR 28,780
#define MD_DRIVER29,806
#define MD_PERSONALITY30,824
static int linear_run 32,848
static int linear_stop 95,2400
static int linear_map 108,2611
static int linear_status 142,3495
static struct md_personality linear_personality=171,4153
__initfunc(187,4344
int init_module 194,4449
void cleanup_module 199,4543

drivers/block/rz1000.c,59
__initfunc(35,888
__initfunc(55,1439
__initfunc(85,2417

drivers/block/ide-dma.c,377
const char *good_dma_drives[93,3854
const char *bad_dma_drives[110,4548
#define PRD_BYTES	133,5542
#define PRD_ENTRIES	134,5562
void ide_dma_intr 139,5684
int ide_build_dmatable 167,6415
int check_drive_lists 239,8637
static int config_drive_for_dma 265,9166
int ide_dmaproc 305,10815
int ide_release_dma 360,12758
void ide_setup_dma 376,13197
__initfunc(418,14521

drivers/block/dtc2278.c,88
static void sub22 52,1770
static void tune_dtc2278 70,2012
void init_dtc2278 96,2587

drivers/block/ali14xx.c,601
#define ALI_NUM_PORTS 55,1696
static int ports[56,1720
typedef struct { byte reg, data; } RegInitializer;RegInitializer59,1820
static RegInitializer initData[61,1872
#define ALI_MAX_PIO 71,2283
static struct { byte reg1, reg2, reg3, reg4; } regTab[74,2354
static int basePort 81,2599
static int regPort 82,2648
static int dataPort 83,2704
static byte regOn;84,2758
static byte regOff;85,2823
static inline byte inReg 92,3005
static void outReg 101,3131
static void ali14xx_tune_drive 112,3363
static int findPort 151,4536
static int initRegisters 184,5263
void init_ali14xx 201,5652

drivers/block/ht6560b.c,282
#define HT_SELECT_PORT 81,3029
static byte ht6560b_selects 88,3267
static byte ht6560b_timings 117,4389
static byte pio_to_timings[119,4464
static void ht6560b_selectproc 124,4620
int try_to_init_ht6560b(163,5761
static void tune_ht6560b 195,6399
void init_ht6560b 214,6884

drivers/block/linear.h,95
#define _LINEAR_H2,18
struct linear_hashlinear_hash4,37
struct linear_datalinear_data9,94

drivers/block/qd6580.c,59
static void tune_qd6580 46,1167
void init_qd6580 61,1486

drivers/block/ide_modes.h,484
#define _IDE_MODES_H2,21
typedef struct ide_pio_timings_s ide_pio_timings_s26,865
} ide_pio_timings_t;ide_pio_timings_t30,1077
typedef struct ide_pio_data_s ide_pio_data_s32,1099
} ide_pio_data_t;ide_pio_data_t38,1227
extern const ide_pio_timings_t ide_pio_timings[44,1406
const ide_pio_timings_t ide_pio_timings[48,1478
static struct ide_pio_info ide_pio_info61,1939
} ide_pio_blacklist 64,1998
int ide_scan_pio_blacklist 136,3734
byte ide_get_best_pio_mode 156,4200

drivers/block/raid0.c,384
#define MAJOR_NR 25,751
#define MD_DRIVER26,777
#define MD_PERSONALITY27,795
static int create_strip_zones 29,819
static int raid0_run 87,2204
static int raid0_stop 151,3715
static int raid0_map 170,4216
static int raid0_status 218,5519
static struct md_personality raid0_personality=258,6568
void raid0_init 278,6943
int init_module 285,7033
void cleanup_module 290,7125

drivers/block/nbd.c,854
#define PARANOIA27,1052
#define MAJOR_NR 43,1342
#define LO_MAGIC 46,1393
static int nbd_blksizes[48,1422
static int nbd_blksize_bits[49,1456
static int nbd_sizes[50,1494
static u64 nbd_bytesizes[51,1525
static struct nbd_device nbd_dev[53,1561
#define DEBUG(DEBUG55,1605
static int requests_in;60,1680
static int requests_out;61,1704
static int nbd_open(64,1737
static int nbd_xmit(88,2163
#define FAIL(FAIL144,3404
void nbd_send_req(146,3497
#define HARDFAIL(HARDFAIL174,4202
struct request *nbd_read_stat(175,4319
void nbd_do_it(213,5271
void nbd_clear_que(250,6022
#define FAIL(FAIL289,6903
static void do_nbd_request(291,6992
static int nbd_ioctl(341,8011
static int nbd_release(426,10094
static struct file_operations nbd_fops 447,10561
#define nbd_init 467,11020
int nbd_init(470,11057
void cleanup_module(504,11893

drivers/block/acsi.c,5064
#define MAJOR_NR 46,1850
typedef void Scsi_Device;Scsi_Device64,2309
#define DEBUG79,2686
#define MAX_ERRORS 83,2737
#define MAX_LUN	84,2799
#define MAX_DEV	85,2846
#define ACSI_BUFFER_SIZE	87,2872
#define ACSI_BUFFER_MINSIZE	88,2941
#define ACSI_BUFFER_SIZE_ORDER	89,3013
#define ACSI_BUFFER_MINSIZE_ORDER	90,3078
#define ACSI_BUFFER_SECTORS	91,3147
#define ACSI_BUFFER_ORDER 93,3199
#define ACSI_TIMEOUT	98,3318
#define COMMAND_DELAY 102,3390
} ACSI_TYPE;ACSI_TYPE106,3455
struct acsi_info_struct acsi_info_struct108,3469
} acsi_info[117,3898
#define NO_SENSE	123,3943
#define RECOVERED_ERROR 124,3966
#define NOT_READY	125,3996
#define MEDIUM_ERROR	126,4020
#define HARDWARE_ERROR	127,4047
#define ILLEGAL_REQUEST 128,4076
#define UNIT_ATTENTION	129,4106
#define DATA_PROTECT	130,4135
#define BLANK_CHECK	131,4162
#define COPY_ABORTED	132,4188
#define ABORTED_COMMAND 133,4215
#define VOLUME_OVERFLOW 134,4245
#define MISCOMPARE	135,4275
#define TYPE_DISK	142,4326
#define TYPE_TAPE	143,4349
#define TYPE_WORM	144,4372
#define TYPE_ROM	145,4395
#define TYPE_MOD	146,4417
#define TYPE_NO_LUN	147,4439
#define ATARI_SENSE_FORMAT_FIX	158,4770
#define ATARI_SENSE_FORMAT_CHNG	159,4804
#define ATARI_SENSE_TYPE_FIXCHNG_MASK	170,5095
#define ATARI_SENSE_TYPE_SOFTHARD_MASK	171,5136
#define ATARI_SENSE_TYPE_FIX	172,5178
#define ATARI_SENSE_TYPE_CHNG	173,5212
#define ATARI_SENSE_TYPE_SOFT	174,5247
#define ATARI_SENSE_TYPE_HARD	175,5282
} ATARI_SENSE_DATA;ATARI_SENSE_DATA177,5341
#define ATARI_CAPACITY(ATARI_CAPACITY179,5362
} SCSI_SENSE_DATA;SCSI_SENSE_DATA196,5789
#define SCSI_CAPACITY(SCSI_CAPACITY198,5809
} SENSE_DATA;SENSE_DATA204,5933
#define SENSE_TYPE_UNKNOWN	206,5948
#define SENSE_TYPE_ATARI	207,5977
#define SENSE_TYPE_SCSI	208,6004
#define SENSE_TYPE(SENSE_TYPE210,6032
#define CAPACITY(CAPACITY217,6280
#define SECTOR_SIZE(SECTOR_SIZE222,6416
#define	DEFAULT_SIZE	228,6622
#define CARTRCH_STAT(CARTRCH_STAT230,6653
char 			*acsi_buffer;239,6992
unsigned long 	phys_acsi_buffer;240,7014
static int				NDevices 242,7048
static int				acsi_sizes[243,7076
static int				acsi_blocksizes[244,7123
static struct hd_struct	acsi_part[245,7175
static int 				access_count[246,7235
static char 			busy[247,7282
static struct wait_queue *busy_wait;248,7321
static int				CurrentNReq;250,7359
static int				CurrentNSect;251,7386
static char				*CurrentBuffer;252,7414
#define SET_TIMER(SET_TIMER255,7447
#define CLEAR_TIMER(CLEAR_TIMER262,7619
static unsigned long	STramMask;267,7710
#define STRAM_ADDR(STRAM_ADDR268,7742
static char tur_cmd[274,7813
static char modesense_cmd[275,7870
static char modeselect_cmd[276,7928
static char inquiry_cmd[277,7986
static char reqsense_cmd[278,8044
static char read_cmd[279,8101
static char write_cmd[280,8158
static char pa_med_rem_cmd[281,8215
#define CMDSET_TARG_LUN(CMDSET_TARG_LUN283,8273
#define CMDSET_BLOCK(CMDSET_BLOCK289,8429
#define CMDSET_LEN(CMDSET_LEN297,8655
#define min(min302,8746
struct acsi_error acsi_error309,8912
} atari_acsi_errors[312,8973
struct timer_list acsi_timer 387,11692
#define INT_LEVEL	417,12514
int acsi_wait_for_IRQ(423,12675
int acsi_wait_for_noIRQ(440,13047
static struct timeval start_time;456,13414
acsi_delay_start(459,13454
acsi_delay_end(467,13576
static int acsicmd_dma(491,14274
int acsicmd_nodma(562,15766
static int acsi_reqsense(596,16505
int acsi_getstatus(626,17380
int acsi_extstatus(659,18049
void acsi_end_extstatus(680,18407
int acsi_extcmd(692,18586
static void acsi_print_error(706,18802
static void acsi_interrupt(745,19885
static void unexpected_acsi_interrupt(765,20311
static void bad_rw_intr(777,20590
static void read_intr(789,20739
static void write_intr(820,21458
static void acsi_times_out(846,22027
static void copy_to_acsibuffer(874,22557
static void copy_from_acsibuffer(896,22933
static void do_end_requests(918,23311
static void do_acsi_request(949,23948
static void redo_acsi_request(957,24050
static int acsi_ioctl(1117,28025
static int acsi_open(1184,30041
static int acsi_release(1226,30925
static void acsi_prevent_removal(1243,31282
static int acsi_media_change 1259,31687
static int acsi_change_blk_size(1308,32946
static int acsi_mode_sense(1328,33298
static struct gendisk acsi_gendisk 1401,34847
#define MAX_SCSI_DEVICE_CODE 1419,35339
static const char *const scsi_device_types[1421,35372
static void print_inquiry(1435,35664
#define DEV_NONE	1492,36861
#define DEV_UNKNOWN	1493,36880
#define DEV_SUPPORTED	1494,36902
#define DEV_SLM	1495,36926
static int acsi_devinit(1497,36946
int SLM_devices[1672,41962
static void acsi_geninit(1675,41990
void acsi_attach_SLMs(1771,44360
static struct file_operations acsi_fops 1782,44632
int acsi_init(1800,45109
int init_module(1834,45919
void cleanup_module(1845,46130
#define DEVICE_BUSY 1866,46588
#define USAGE 1867,46621
#define GENDISK_STRUCT 1868,46656
static int revalidate_acsidisk(1889,47587
static int acsi_revalidate 1949,48843

drivers/block/xd.h,1513
#define _LINUX_XD_H2,20
#define XD_DATA	17,482
#define XD_RESET	18,541
#define XD_STATUS	19,601
#define XD_SELECT	20,663
#define XD_JUMPER	21,725
#define XD_CONTROL	22,787
#define XD_RESERVED	23,853
#define CMD_TESTREADY	26,965
#define CMD_RECALIBRATE	27,1015
#define CMD_SENSE	28,1068
#define CMD_FORMATDRV	29,1111
#define CMD_VERIFY	30,1157
#define CMD_FORMATTRK	31,1199
#define CMD_FORMATBAD	32,1245
#define CMD_READ	33,1295
#define CMD_WRITE	34,1328
#define CMD_SEEK	35,1363
#define CMD_DTCSETPARAM	38,1432
#define CMD_DTCGETECC	39,1511
#define CMD_DTCREADBUF	40,1583
#define CMD_DTCWRITEBUF 41,1654
#define CMD_DTCREMAPTRK	42,1727
#define CMD_DTCGETPARAM	43,1803
#define CMD_DTCSETSTEP	44,1877
#define CMD_DTCSETGEOM	45,1943
#define CMD_DTCGETGEOM	46,2013
#define CMD_ST11GETGEOM 47,2083
#define CMD_WDSETPARAM	48,2160
#define CMD_XBSETPARAM	49,2235
#define CSB_ERROR	52,2340
#define CSB_LUN	53,2375
#define STAT_READY	56,2466
#define STAT_INPUT	57,2516
#define STAT_COMMAND	58,2583
#define STAT_SELECT	59,2643
#define STAT_REQUEST	60,2697
#define STAT_INTERRUPT	61,2756
#define PIO_MODE	64,2866
#define DMA_MODE	65,2922
#define XD_MAXDRIVES	67,2991
#define XD_TIMEOUT	68,3037
#define XD_RETRIES	69,3082
	#define DEBUG_STARTUP	74,3191
	#define DEBUG_OVERRIDE	75,3248
	#define DEBUG_READWRITE	76,3312
	#define DEBUG_OTHER	77,3373
	#define DEBUG_COMMAND	78,3432
} XD_INFO;XD_INFO87,3656
} XD_GEOMETRY;XD_GEOMETRY95,3802
} XD_SIGNATURE;XD_SIGNATURE104,4030

drivers/block/ide-disk.c,1446
#define IDEDISK_VERSION	30,1085
static void idedisk_bswap_data 55,1626
static inline void idedisk_input_data 65,1787
static inline void idedisk_output_data 72,1983
static int lba_capacity_is_ok 89,2493
static void read_intr 120,3578
static void write_intr 169,4847
void ide_multwrite 208,5844
static void multwrite_intr 243,6767
static void set_multmode_intr 278,7537
static void set_geometry_intr 294,7924
static void recal_intr 305,8178
static void do_rw_disk 318,8517
static int idedisk_open 405,11385
static void idedisk_release 421,11848
static int idedisk_media_change 431,12151
static unsigned long idedisk_capacity 440,12409
static void idedisk_special 457,12949
static void idedisk_pre_reset 486,13901
static int smart_enable(501,14262
static int get_smart_values(506,14377
static int get_smart_thresholds(512,14540
static int proc_idedisk_read_cache518,14711
static int proc_idedisk_read_smart_thresholds532,15061
static int proc_idedisk_read_smart_values551,15620
static ide_proc_entry_t idedisk_proc[570,16171
#define	idedisk_proc	580,16542
static int set_multcount(584,16598
static int set_nowerr(597,16914
static void idedisk_add_settings(609,17196
static ide_driver_t idedisk_driver 630,18687
static ide_module_t idedisk_module 651,19242
static int idedisk_cleanup 658,19344
static void idedisk_setup 663,19438
int idedisk_init 805,24124
int init_module 830,24832
void cleanup_module 835,24884

drivers/block/acsi_slm.c,3168
#define	SLM_CONTINUOUS_DMA84,3122
#define	SLM_CONT_CNT_REPROG94,3665
#define MAJOR_NR 96,3694
#define CMDSET_TARG_LUN(CMDSET_TARG_LUN98,3723
#define	START_TIMER(START_TIMER104,3883
#define	STOP_TIMER(STOP_TIMER105,3945
static char slmreqsense_cmd[108,3990
static char slmprint_cmd[109,4048
static char slminquiry_cmd[110,4106
static char slmmsense_cmd[111,4167
static char slmmselect_cmd[113,4233
#define	MAX_SLM	117,4300
static struct slm slm119,4320
} slm_info[124,4518
int N_SLM_Printers 126,4540
static unsigned char	*SLMBuffer;129,4586
static unsigned char	*BufferP;130,4641
static int				BufferSize;131,4705
typedef enum { IDLE, FILLING, PRINTING } SLMSTATE;SLMSTATE133,4769
static SLMSTATE			SLMState;134,4820
static int				SLMBufOwner;135,4848
static unsigned long	SLMCurAddr;139,4962
static unsigned long	SLMEndAddr;140,5033
static unsigned long	SLMSliceSize;141,5091
static int				SLMError;143,5161
static struct wait_queue *slm_wait;146,5204
static struct wait_queue *print_wait;147,5266
#define	SLMSTAT_OK	150,5360
#define	SLMSTAT_ORNERY	151,5385
#define	SLMSTAT_TONER	152,5413
#define	SLMSTAT_WARMUP	153,5440
#define	SLMSTAT_PAPER	154,5468
#define	SLMSTAT_DRUM	155,5495
#define	SLMSTAT_INJAM	156,5521
#define	SLMSTAT_THRJAM	157,5548
#define	SLMSTAT_OUTJAM	158,5576
#define	SLMSTAT_COVER	159,5604
#define	SLMSTAT_FUSER	160,5631
#define	SLMSTAT_IMAGER	161,5658
#define	SLMSTAT_MOTOR	162,5686
#define	SLMSTAT_VIDEO	163,5713
#define	SLMSTAT_SYSTO	164,5740
#define	SLMSTAT_OPCODE	165,5767
#define	SLMSTAT_DEVNUM	166,5795
#define	SLMSTAT_PARAM	167,5823
#define	SLMSTAT_ACSITO	168,5850
#define	SLMSTAT_NOTALL	169,5899
static char *SLMErrors[171,5949
#define	N_ERRORS	203,6754
#define	IS_REAL_ERROR(IS_REAL_ERROR206,6845
} StdPageSize[212,6924
#define	N_STD_SIZES	219,7055
#define	SLM_BUFFER_SIZE	221,7120
#define	SLM_DMA_AMOUNT	222,7175
# define	SLM_DMA_INT_OFFSET	225,7270
# define	SLM_DMA_END_OFFSET	226,7340
# define	SLM_SLICE_SIZE(SLM_SLICE_SIZE227,7398
# define	SLM_DMA_INT_OFFSET	229,7442
# define	SLM_DMA_END_OFFSET	230,7500
# define	SLM_SLICE_SIZE(SLM_SLICE_SIZE231,7558
#define	DMA_TIME_FOR(DMA_TIME_FOR236,7704
#define	DMA_STARTUP_TIME	237,7732
#define	DMA_TIME_FOR(DMA_TIME_FOR239,7765
#define	DMA_STARTUP_TIME	240,7801
static struct timer_list slm_timer 271,9100
static struct file_operations slm_fops 273,9176
static char *slm_errstr(292,9648
static int slm_getstats(305,9877
#define SHORTDATA(SHORTDATA314,10078
#define	BOOLDATA(BOOLDATA315,10127
static ssize_t slm_read(368,11814
static void start_print(405,12626
static void slm_interrupt(460,13997
static void slm_test_ready(484,14489
static void set_dma_addr(587,16977
static unsigned long get_dma_addr(608,17377
static ssize_t slm_write(623,17612
static int slm_ioctl(696,19406
static int slm_open(771,21219
static int slm_release(798,21691
static int slm_req_sense(819,22077
static int slm_mode_sense(839,22443
static int slm_mode_select(884,23276
static int slm_get_pagesize(922,23993
int attach_slm(944,24396
int slm_init(997,25617
int init_module(1021,26129
void cleanup_module(1033,26344

drivers/block/ps2esdi.c,2188
#define MAJOR_NR 35,1189
#define PS2ESDI_IRQ 55,1606
#define MAX_HD 56,1629
#define MAX_RETRIES 57,1646
#define MAX_16BIT 58,1668
#define ESDI_TIMEOUT 59,1692
#define ESDI_STAT_TIMEOUT 60,1722
#define TYPE_0_CMD_BLK_LENGTH 62,1751
#define TYPE_1_CMD_BLK_LENGTH 63,1783
u_int dma_arb_level;109,3186
static struct wait_queue *ps2esdi_int 111,3237
int no_int_yet;112,3310
static int access_count[113,3326
static char ps2esdi_valid[114,3366
static int ps2esdi_sizes[115,3408
static int ps2esdi_blocksizes[116,3454
static int ps2esdi_drives 117,3505
static struct hd_struct ps2esdi[118,3536
static u_short io_base;119,3582
static struct timer_list esdi_timer 120,3606
static int reset_status;121,3686
static int ps2esdi_slot 122,3711
int tp720esdi 123,3741
struct ps2esdi_i_struct ps2esdi_i_struct125,3807
struct ps2esdi_i_struct ps2esdi_info[131,3958
struct ps2esdi_i_struct ps2esdi_info[136,4054
struct ps2esdi_i_struct ps2esdi_info[142,4158
static struct file_operations ps2esdi_fops 147,4245
static struct gendisk ps2esdi_gendisk 162,4634
__initfunc(178,5118
int cyl[200,5804
int head[201,5826
int sect[202,5850
int init_module(209,5977
cleanup_module(229,6420
__initfunc(244,6748
__initfunc(252,6933
static int ps2esdi_getinfo(285,7876
__initfunc(299,8276
__initfunc(437,12611
static void do_ps2esdi_request(463,13326
static void reset_ctrl(536,15376
static void ps2esdi_readwrite(569,16305
static void ps2esdi_fill_cmd_block(616,17624
static int ps2esdi_out_cmd_blk(628,18003
static void ps2esdi_prep_dma(679,19486
static void ps2esdi_interrupt_handler(713,20299
static void ps2esdi_initial_reset_int_handler(731,20760
static void ps2esdi_geometry_int_handler(756,21439
#define REPLY_WORDS 773,21974
static void ps2esdi_normal_interrupt_handler(874,25265
static void ps2esdi_continue_request(986,28285
static int ps2esdi_read_status_words(1001,28606
static void dump_cmd_complete_status(1021,29053
#define WAIT_FOR_STATUS 1023,29112
static int ps2esdi_open(1089,30984
static int ps2esdi_release(1106,31252
static int ps2esdi_ioctl(1119,31457
static int ps2esdi_reread_partitions(1179,33003
void ps2esdi_reset_timer(1215,33920

drivers/block/ide-floppy.c,5222
#define IDEFLOPPY_VERSION 31,1265
#define IDEFLOPPY_DEBUG_LOG	63,1917
#define IDEFLOPPY_DEBUG_INFO	64,1948
#define IDEFLOPPY_DEBUG_BUGS	65,1980
#define IDEFLOPPY_WAIT_CMD	70,2065
#define IDEFLOPPY_MAX_PC_RETRIES	76,2249
#define IDEFLOPPY_PC_BUFFER_SIZE	82,2380
#define IDEFLOPPY_PC_STACK	89,2624
typedef struct idefloppy_packet_command_s idefloppy_packet_command_s94,2725
} idefloppy_pc_t;idefloppy_pc_t109,3545
#define	PC_ABORT	114,3600
#define PC_DMA_RECOMMENDED	115,3683
#define	PC_DMA_IN_PROGRESS	116,3759
#define	PC_DMA_ERROR	117,3819
#define	PC_WRITING	118,3888
} idefloppy_capabilities_page_t;idefloppy_capabilities_page_t156,5322
} idefloppy_flexible_disk_page_t;idefloppy_flexible_disk_page_t183,6282
} idefloppy_capacity_header_t;idefloppy_capacity_header_t191,6445
} idefloppy_capacity_descriptor_t;idefloppy_capacity_descriptor_t206,6889
#define CAPACITY_INVALID	208,6925
#define CAPACITY_UNFORMATTED	209,6955
#define CAPACITY_CURRENT	210,6989
#define CAPACITY_NO_CARTRIDGE	211,7019
} idefloppy_floppy_t;idefloppy_floppy_t242,8050
#define IDEFLOPPY_DRQ_INTERRUPT	247,8108
#define IDEFLOPPY_MEDIA_CHANGED	248,8170
#define IDEFLOPPY_USE_READ12	249,8234
#define IDEFLOPPY_FORMAT_UNIT_CMD	254,8355
#define IDEFLOPPY_INQUIRY_CMD	255,8394
#define IDEFLOPPY_MODE_SELECT_CMD	256,8430
#define IDEFLOPPY_MODE_SENSE_CMD	257,8469
#define IDEFLOPPY_READ10_CMD	258,8507
#define IDEFLOPPY_READ12_CMD	259,8542
#define IDEFLOPPY_READ_CAPACITY_CMD	260,8577
#define IDEFLOPPY_REQUEST_SENSE_CMD	261,8618
#define IDEFLOPPY_PREVENT_REMOVAL_CMD	262,8659
#define IDEFLOPPY_SEEK_CMD	263,8702
#define IDEFLOPPY_START_STOP_CMD	264,8735
#define IDEFLOPPY_TEST_UNIT_READY_CMD	265,8773
#define IDEFLOPPY_VERIFY_CMD	266,8816
#define IDEFLOPPY_WRITE10_CMD	267,8851
#define IDEFLOPPY_WRITE12_CMD	268,8887
#define IDEFLOPPY_WRITE_VERIFY_CMD	269,8923
#define MODE_SENSE_CURRENT	274,9009
#define MODE_SENSE_CHANGEABLE	275,9042
#define MODE_SENSE_DEFAULT	276,9078
#define MODE_SENSE_SAVED	277,9112
#define	IDEFLOPPY_FIRST_RQ	282,9210
#define	IDEFLOPPY_PC_RQ	287,9325
#define IDEFLOPPY_LAST_RQ	289,9355
#define IDEFLOPPY_RQ_CMD(IDEFLOPPY_RQ_CMD295,9516
#define	IDEFLOPPY_ERROR_GENERAL	301,9701
} idefloppy_status_reg_t;idefloppy_status_reg_t331,10855
} idefloppy_error_reg_t;idefloppy_error_reg_t355,11737
} idefloppy_feature_reg_t;idefloppy_feature_reg_t377,12357
} idefloppy_bcount_reg_t;idefloppy_bcount_reg_t395,12750
} idefloppy_ireason_reg_t;idefloppy_ireason_reg_t415,13403
} idefloppy_drivesel_reg_t;idefloppy_drivesel_reg_t441,14288
} idefloppy_control_reg_t;idefloppy_control_reg_t465,15177
struct idefloppy_id_gcw idefloppy_id_gcw471,15319
} idefloppy_inquiry_result_t;idefloppy_inquiry_result_t532,17849
} idefloppy_request_sense_result_t;idefloppy_request_sense_result_t565,19119
#define	IDEFLOPPY_CAPABILITIES_PAGE	570,19222
#define IDEFLOPPY_FLEXIBLE_DISK_PAGE	571,19263
} idefloppy_mode_parameter_header_t;idefloppy_mode_parameter_header_t589,19789
#define IDEFLOPPY_MIN(IDEFLOPPY_MIN591,19827
#define	IDEFLOPPY_MAX(IDEFLOPPY_MAX592,19874
static void idefloppy_discard_data 598,20030
static void idefloppy_write_zeros 605,20181
static void idefloppy_end_request 618,20506
static void idefloppy_input_buffers 647,21197
static void idefloppy_output_buffers 672,21964
static void idefloppy_update_buffers 700,22789
static void idefloppy_queue_pc_head 715,23265
static idefloppy_pc_t *idefloppy_next_pc_storage 723,23497
static struct request *idefloppy_next_rq_storage 732,23755
static void idefloppy_analyze_error 745,24126
static void idefloppy_request_sense_callback 758,24730
static void idefloppy_pc_callback 777,25335
static void idefloppy_init_pc 791,25696
static void idefloppy_create_request_sense_cmd 803,25971
static void idefloppy_retry_pc 817,26384
static void idefloppy_pc_intr 834,26826
static void idefloppy_transfer_pc 945,30837
static void idefloppy_issue_pc 967,31560
static void idefloppy_rw_callback 1036,34112
static void idefloppy_create_prevent_cmd 1046,34350
static void idefloppy_create_read_capacity_cmd 1057,34670
static void idefloppy_create_mode_sense_cmd 1069,34941
static void idefloppy_create_start_stop_cmd 1092,35568
static void idefloppy_create_test_unit_ready_cmd(1099,35731
static void idefloppy_create_rw_cmd 1105,35872
static void idefloppy_do_request 1138,37110
static int idefloppy_queue_pc_tail 1184,38757
static int idefloppy_get_flexible_disk_page 1198,39122
static int idefloppy_get_capacity 1243,40873
static int idefloppy_ioctl 1296,42912
static int idefloppy_open 1316,43382
static void idefloppy_release 1350,44284
static int idefloppy_media_change 1369,44744
static unsigned long idefloppy_capacity 1379,44981
static int idefloppy_identify_device 1391,45296
static void idefloppy_add_settings(1496,49798
static void idefloppy_setup 1513,50778
static int idefloppy_cleanup 1538,51580
static ide_proc_entry_t idefloppy_proc[1551,51816
#define	idefloppy_proc	1558,51961
static ide_driver_t idefloppy_driver 1565,52076
static ide_module_t idefloppy_module 1586,52675
int idefloppy_init 1596,52850
int init_module 1626,53795
void cleanup_module 1631,53850

drivers/block/ide-probe.c,565
static inline void do_identify 46,1242
static void delay_50ms 155,4523
static int try_to_identify 171,5056
static int do_probe 269,8444
static inline byte probe_for_drive 329,10483
static void probe_cmos_for_drives 373,12509
static void probe_hwif 405,13545
static void save_match 488,16255
static int init_irq 515,17284
static void init_gendisk 636,20858
static int hwif_init 689,22751
	return hwif->present;772,25074
static ide_module_t ideprobe_module 776,25126
int ideprobe_init 782,25211
int init_module 807,25802
void cleanup_module 816,25948

drivers/block/z2ram.c,918
#define MAJOR_NR 28,1249
extern int num_memory;50,1631
extern struct mem_info memory[51,1654
#define TRUE 53,1699
#define FALSE 54,1733
#define Z2MINOR_COMBINED 56,1768
#define Z2MINOR_Z2ONLY 57,1802
#define Z2MINOR_CHIPONLY 58,1836
#define Z2MINOR_MEMLIST1 59,1870
#define Z2MINOR_MEMLIST2 60,1904
#define Z2MINOR_MEMLIST3 61,1938
#define Z2MINOR_MEMLIST4 62,1972
#define Z2MINOR_COUNT 63,2006
#define Z2RAM_CHUNK1024 65,2086
static u_long *z2ram_map 67,2143
static u_long z2ram_size 68,2179
static int z2_blocksizes[69,2212
static int z2_sizes[70,2253
static int z2_count 71,2289
static int chip_count 72,2322
static int list_count 73,2355
static int current_device 74,2388
do_z2_request(77,2435
get_z2ram(127,3416
get_chipram(146,3742
z2_open(167,4028
z2_release(327,7448
static struct file_operations z2_fops 341,7652
__initfunc(359,8238
init_module(392,8838
cleanup_module(406,9025

drivers/block/opti621.c,643
#define OPTI621_DEBUG	91,3723
#define OPTI621_MAX_PIO 105,4040
#define READ_PREFETCH 124,4696
#define READ_REG 127,4799
#define WRITE_REG 128,4860
#define CNTRL_REG 129,4923
#define STRAP_REG 130,4975
#define MISC_REG 131,5025
int reg_base;133,5083
#define PIO_NOT_EXIST 135,5098
#define PIO_DONT_KNOW 136,5124
static void compute_pios(140,5226
int cmpt_clk(165,5997
static void write_reg(177,6329
static byte read_reg(191,6671
typedef struct pio_clocks_s pio_clocks_s207,7021
} pio_clocks_t;pio_clocks_t211,7197
static void compute_clocks(213,7214
static void opti621_tune_drive 240,8237
void ide_init_opti621 308,10605

drivers/block/trm290.c,178
#define TRM290_NO_DMA_WRITES	29,1085
static void trm290_prepare_drive 142,5278
static void trm290_selectproc 170,5973
static int trm290_dmaproc 175,6077
__initfunc(216,7250

drivers/block/swim3.c,3947
#define MAJOR_NR	33,782
static int floppy_blocksizes[36,836
static int floppy_sizes[37,881
#define MAX_FLOPPIES	39,924
enum swim_state swim_state41,948
	idle,42,966
	locating,43,973
	seeking,44,984
	settling,45,994
	do_transfer,46,1005
	jogging,47,1019
	available,48,1029
	revalidating,49,1041
	ejecting50,1056
#define REG(REG53,1070
struct swim3 swim359,1281
#define control_bic	78,1849
#define control_bis	79,1877
#define CA_MASK	82,1935
#define LSTRB	83,1954
#define DO_SEEK	86,2003
#define FORMAT	87,2025
#define SELECT	88,2046
#define WRITE_SECTORS	89,2067
#define DO_ACTION	90,2094
#define DRIVE2_ENABLE	91,2117
#define DRIVE_ENABLE	92,2144
#define INTR_ENABLE	93,2170
#define FIFO_1BYTE	96,2226
#define FIFO_2BYTE	97,2250
#define ERROR	98,2274
#define DATA	99,2294
#define RDDATA	100,2313
#define INTR_PENDING	101,2334
#define MARK_BYTE	102,2360
#define ERROR_INTR	105,2429
#define DATA_CHANGED	106,2453
#define TRANSFER_DONE	107,2479
#define SEEN_SECTOR	108,2506
#define SEEK_DONE	109,2531
#define TIMER_DONE	110,2554
#define ERR_DATA_CRC	113,2608
#define ERR_ADDR_CRC	114,2634
#define ERR_OVERRUN	115,2660
#define ERR_UNDERRUN	116,2685
#define S_SW_RESET	119,2741
#define S_GCR_WRITE	120,2765
#define S_IBM_DRIVE	121,2790
#define S_TEST_MODE	122,2815
#define S_FCLK_DIV2	123,2840
#define S_GCR	124,2865
#define S_COPY_PROT	125,2885
#define S_INV_WDATA	126,2910
#define SEEK_POSITIVE	129,2973
#define SEEK_NEGATIVE	130,2997
#define STEP	131,3021
#define MOTOR_ON	132,3037
#define MOTOR_OFF	133,3056
#define INDEX	134,3076
#define EJECT	135,3093
#define SETMFM	136,3110
#define SETGCR	137,3128
#define STEP_DIR	140,3203
#define STEPPING	141,3222
#define MOTOR_ON	142,3241
#define RELAX	143,3260
#define READ_DATA_0	144,3306
#define TWOMEG_DRIVE	145,3328
#define SINGLE_SIDED	146,3351
#define DRIVE_PRESENT	147,3374
#define DISK_IN	148,3398
#define WRITE_PROT	149,3417
#define TRACK_ZERO	150,3438
#define TACHO	151,3460
#define READ_DATA_1	152,3478
#define MFM_MODE	153,3501
#define SEEK_COMPLETE	154,3521
#define ONEMEG_MEDIA	155,3546
#define DATA_ESCAPE	158,3630
#define GCR_SYNC_EXC	159,3655
#define GCR_SYNC_CONV	160,3681
#define GCR_FIRST_MARK	161,3708
#define GCR_SECOND_MARK	162,3736
#define GCR_ADDR_MARK	163,3765
#define GCR_DATA_MARK	164,3802
#define GCR_SLIP_BYTE	165,3839
#define GCR_SELF_SYNC	166,3872
#define DATA_99	168,3922
#define MFM_ADDR_MARK	169,3950
#define MFM_INDEX_MARK	170,4007
#define MFM_GAP_LEN	171,4065
struct floppy_state floppy_state173,4089
static struct floppy_state floppy_states[202,5089
static int floppy_count 203,5145
static unsigned short write_preamble[205,5175
static unsigned short write_postamble[212,5417
#define IOCTL_MODE_BIT	253,7281
#define OPEN_WRITE_BIT	254,7306
static void swim3_select(256,7333
static void swim3_action(268,7592
static int swim3_readbit(281,7874
static void do_fd_request(293,8110
static void start_request(306,8338
static void set_timeout(361,9728
static inline void scan_track(377,10115
static inline void seek_track(390,10484
static inline void init_dma(409,10990
static inline void setup_transfer(418,11210
static void act(462,12558
static void scan_timeout(537,14032
static void seek_timeout(557,14449
static void xfer_timeout(582,15171
static void swim3_interrupt(610,15959
static int grab_drive(753,19630
static void release_drive(777,20094
static int fd_eject(788,20263
static struct floppy_struct floppy_type 811,20665
static int floppy_ioctl(814,20777
static int floppy_open(847,21512
static int floppy_release(928,23414
static int floppy_check_change(955,24138
static int floppy_revalidate(967,24362
static ssize_t floppy_read(1010,25281
static ssize_t floppy_write(1026,25647
static void floppy_off(1046,26170
static struct file_operations floppy_fops 1050,26215
int swim3_init(1067,26643
static int swim3_add_device(1100,27291

drivers/block/raid1.c,1405
#define MAJOR_NR 25,856
#define MD_DRIVER26,882
#define MD_PERSONALITY27,900
#define PRINTK(PRINTK34,1023
#define PRINTK(PRINTK36,1077
#define MAX(MAX39,1125
#define MIN(MIN40,1166
static struct md_personality raid1_personality;42,1208
static struct md_thread *raid1_thread 43,1256
struct buffer_head *raid1_retry_list 44,1302
static int __raid1_map 46,1348
static int raid1_map 70,1915
void raid1_reschedule_retry 76,2041
static inline void raid1_end_buffer_io(92,2476
int raid1_one_error=100,2647
void raid1_end_request 102,2671
map_and_make_request 191,4954
raid1_make_request 200,5218
static int raid1_status 345,10009
static void raid1_fix_links 357,10430
#define LAST_DISK 367,10710
#define NO_SPARE_DISK 370,10786
#define DISK_FAILED 373,10884
#define START_SYNCING 377,11016
#define ALREADY_SYNCING 380,11089
static int raid1_error 383,11166
#define NO_SUPERBLOCK 440,12648
#define WRONG_LEVEL 443,12750
#define HOT_ADD_SUCCEEDED 446,12830
static int raid1_hot_add_disk 449,12900
static void add_ring(518,14396
static int raid1_mark_spare(533,14776
void raid1d 594,16295
static int __check_consistency 638,17480
static int check_consistency 678,18339
static int raid1_run 689,18543
static int raid1_stop 824,23054
static struct md_personality raid1_personality=834,23261
int raid1_init 851,23536
int init_module 859,23719
void cleanup_module 864,23769

drivers/block/raid5.c,2770
static struct md_personality raid5_personality;26,887
#define NR_STRIPES	31,959
#define HASH_PAGES	32,983
#define HASH_PAGES_ORDER	33,1005
#define NR_HASH	34,1032
#define HASH_MASK	35,1106
#define stripe_hash(stripe_hash36,1139
#define RAID5_DEBUG	41,1305
#define PRINTK(PRINTK44,1344
#define PRINTK(PRINTK46,1398
static inline int stripe_locked(49,1445
static inline int stripe_error(54,1551
static inline void lock_stripe(62,1729
static inline void unlock_stripe(71,1974
static inline void finish_stripe(81,2246
void __wait_on_stripe(92,2534
static inline void wait_on_stripe(111,2969
static inline void remove_hash(117,3080
static inline void insert_hash(130,3413
static struct buffer_head *get_free_buffer(143,3830
static struct buffer_head *get_free_bh(158,4130
static void put_free_buffer(172,4384
static void put_free_bh(183,4593
static struct stripe_head *get_free_stripe(194,4790
static void put_free_stripe(215,5348
static void shrink_buffers(227,5608
static void shrink_bh(239,5830
static int grow_buffers(250,5998
static int grow_bh(269,6423
static void raid5_kfree_buffer(282,6701
static void raid5_kfree_bh(292,6885
static void raid5_kfree_old_bh(302,7061
static void raid5_update_old_bh(312,7315
static void kfree_stripe(325,7686
static int shrink_stripe_cache(345,8388
static struct stripe_head *find_stripe(374,9222
static int grow_stripes(400,10024
static void shrink_stripes(425,10666
static struct stripe_head *kmalloc_stripe(440,10968
static struct stripe_head *get_stripe(484,12282
static struct buffer_head *raid5_kmalloc_buffer(498,12602
static struct buffer_head *raid5_kmalloc_bh(507,12836
static inline void raid5_end_buffer_io 516,13038
static inline void raid5_mark_buffer_uptodate 529,13420
static void raid5_end_request 537,13609
static int raid5_map 569,14487
static void raid5_build_block 578,14703
static int raid5_error 600,15380
raid5_compute_sector 635,16498
static unsigned long compute_blocknr(706,18371
static void xor_block(746,19643
static void xor_block(751,19805
static void compute_block(771,20357
static void compute_parity(795,21075
static void add_stripe_bh 843,22551
static void complete_stripe(872,23348
static void handle_stripe(926,25030
static int raid5_make_request 1191,32782
static void unplug_devices(1234,34177
static void raid5d 1252,34656
static void raid5syncd 1310,36209
static int __check_consistency 1322,36460
static int check_consistency 1361,37447
static int raid5_run 1372,37651
static int raid5_stop 1550,44517
static int raid5_status 1567,45066
static int raid5_mark_spare(1581,45636
static struct md_personality raid5_personality=1639,47124
int raid5_init 1656,47411
int init_module 1662,47513
void cleanup_module 1667,47563

drivers/block/pdc4030.c,307
static void promise_selectproc 71,2426
int pdc4030_cmd(83,2759
ide_hwif_t *hwif_required 111,3522
void setup_pdc4030 113,3557
int init_pdc4030 123,3782
static void promise_read_intr 198,6197
static void promise_write_pollfunc 253,7714
static void promise_write 286,8896
void do_pdc4030_io 312,9705

drivers/block/pdc4030.h,279
#define IDE_PROMISE_H12,192
#define	PROMISE_EXTENDED_COMMAND	14,215
#define	PROMISE_READ	15,253
#define	PROMISE_WRITE	16,281
#define	PROMISE_GET_CONFIG	18,361
#define	PROMISE_IDENTIFY	19,394
struct translation_mode translation_mode21,426
struct dc_ident dc_ident27,486

drivers/block/ide-proc.c,1208
#define MIN(MIN72,2835
static int ide_getxdigit(75,2886
static int xx_xx_parse_error 87,3063
static int proc_ide_write_config106,3463
static int proc_ide_read_config255,7406
static int ide_getdigit(287,8451
static int proc_ide_read_drivers297,8571
static int proc_ide_read_imodel315,9028
static int proc_ide_read_mate342,9936
static int proc_ide_read_channel355,10287
static int proc_ide_get_identify(367,10568
static int proc_ide_read_identify372,10739
static int proc_ide_read_settings391,11287
#define MAX_LEN	421,12395
static int proc_ide_write_settings423,12415
int proc_ide_read_capacity498,13917
int proc_ide_read_geometry512,14332
static int proc_ide_read_dmodel525,14777
static int proc_ide_read_driver536,15117
static int proc_ide_write_driver550,15519
static int proc_ide_read_media562,15800
static ide_proc_entry_t generic_drive_entries[586,16340
void ide_add_proc_entries(595,16769
void ide_remove_proc_entries(612,17131
static int proc_ide_readlink(622,17313
static void create_proc_ide_drives 628,17468
static ide_proc_entry_t hwif_entries[650,18081
static void create_proc_ide_interfaces 658,18414
void proc_ide_create(675,18833
void proc_ide_destroy(687,19110

drivers/block/ide-pci.c,1617
#define DEVID_PIIXa	27,593
#define DEVID_PIIXb	28,687
#define DEVID_PIIX3	29,781
#define DEVID_PIIX4	30,875
#define DEVID_VP_IDE	31,967
#define DEVID_PDC20246	32,1059
#define DEVID_RZ1000	33,1154
#define DEVID_RZ1001	34,1247
#define DEVID_CMD640	35,1340
#define DEVID_CMD646	36,1427
#define DEVID_SIS5513	37,1514
#define DEVID_OPTI621	38,1602
#define DEVID_OPTI621V	39,1694
#define DEVID_OPTI621X	40,1787
#define DEVID_TRM290	41,1884
#define DEVID_NS87410	42,1976
#define DEVID_NS87415	43,2065
#define DEVID_HT6565	44,2154
#define DEVID_AEC6210	45,2245
#define DEVID_W82C105	46,2340
#define DEVID_UM8886A	47,2435
#define DEVID_UM8886BF	48,2527
#define DEVID_HPT343	49,2621
#define IDE_IGNORE	51,2712
#define INIT_TRM290	55,2817
#define INIT_TRM290	57,2860
#define INIT_OPTI621	62,2973
#define INIT_OPTI621	64,3018
#define INIT_NS87415	69,3126
#define INIT_NS87415	71,3171
#define INIT_CMD646	76,3283
#define INIT_CMD646	79,3346
#define INIT_CMD646	81,3383
#define INIT_W82C105	87,3499
#define INIT_W82C105	89,3545
#define INIT_RZ1000	94,3657
#define INIT_RZ1000	96,3700
#define	INIT_VIA82C586	101,3817
#define	INIT_VIA82C586	103,3866
typedef struct ide_pci_enablebit_s ide_pci_enablebit_s106,3902
} ide_pci_enablebit_t;ide_pci_enablebit_t110,4093
typedef struct ide_pci_device_s ide_pci_device_s112,4117
} ide_pci_device_t;ide_pci_device_t119,4313
static ide_pci_device_t ide_pci_chipsets[121,4334
static ide_pci_device_t ide_pci_chipsets[] __initdata 121,4334
__initfunc(151,6716
__initfunc(186,7732
__initfunc(248,9613
__initfunc(288,11073
__initfunc(428,15990

drivers/block/cmd646.c,699
static int cmd646_config_drive_for_dma(18,643
#define IDE_SETXFER	46,1444
#define IDE_SETFEATURE	47,1470
#define IDE_DMA2_ENABLE	48,1499
#define IDE_DMA1_ENABLE	49,1529
#define IDE_DMA0_ENABLE	50,1559
#define IDE_UDMA2_ENABLE	51,1589
#define IDE_UDMA1_ENABLE	52,1619
#define IDE_UDMA0_ENABLE	53,1649
static __inline__ unsigned char dma2_bits_to_command(55,1680
static __inline__ unsigned char udma2_bits_to_command(64,1869
static __inline__ int wait_for_ready(73,2062
static void cmd646_do_setfeature(93,2400
static void cmd646_dma2_enable(119,3004
static void cmd646_udma_enable(133,3466
static int cmd646_dma_onoff(168,4369
static int cmd646_dmaproc(204,5485
__initfunc(215,5858

drivers/block/via82c586.c,70
static void set_via_timings 37,1105
void ide_init_via82c586 82,2299

drivers/block/ide-pmac.c,423
ide_ioreg_t pmac_ide_regbase[37,937
int pmac_ide_irq[38,978
int pmac_ide_count;39,1007
struct device_node *pmac_ide_node[40,1027
#define MAX_DCMDS	43,1108
struct notifier_block idepmac_sleep_notifier 52,1528
pmac_ide_init_hwif_ports(62,1744
void pmac_ide_tuneproc(90,2280
__initfunc(107,2618
__initfunc(198,4839
pmac_ide_build_dmatable(227,5636
int pmac_ide_dmaproc(302,7841
static int idepmac_notify(352,9285

drivers/block/ns87415.c,180
static unsigned int ns87415_count 24,547
static void ns87415_prepare_drive 31,824
static void ns87415_selectproc 59,1686
static int ns87415_dmaproc(64,1793
__initfunc(88,2623

drivers/block/paride/pcd.c,2789
#define	PCD_VERSION	103,4288
#define PCD_MAJOR	104,4315
#define PCD_NAME	105,4336
#define PCD_UNITS	106,4359
static int      verbose 114,4527
static int      major 115,4556
static char     *name 116,4591
static int      nice 117,4625
static int      disable 118,4651
static int drive0[120,4681
static int drive1[121,4722
static int drive2[122,4763
static int drive3[123,4804
static int (*drives[125,4846
static int pcd_drive_count;126,4910
#define D_PRT 128,4939
#define D_PRO 129,4957
#define D_UNI 130,4975
#define D_MOD 131,4993
#define D_SLV 132,5011
#define D_DLY 133,5029
#define DU 135,5048
static STT pcd_stt[153,5352
void pcd_setup(160,5609
#define MAJOR_NR	180,6000
#define DEVICE_NAME 181,6023
#define DEVICE_REQUEST 182,6049
#define DEVICE_NR(DEVICE_NR183,6087
#define DEVICE_ON(DEVICE_ON184,6129
#define DEVICE_OFF(DEVICE_OFF185,6155
#define PCD_RETRIES	191,6228
#define PCD_TMO	192,6255
#define PCD_DELAY 193,6305
#define PCD_READY_TMO	194,6368
#define PCD_RESET_TMO	195,6415
#define PCD_SPIN	197,6474
#define IDE_ERR	199,6525
#define IDE_DRQ 200,6547
#define IDE_READY 201,6576
#define IDE_BUSY 202,6605
static int pcd_blocksizes[223,7459
struct pcd_unit pcd_unit225,7498
struct pcd_unit pcd[236,7873
#define PCD 240,7985
#define PI 241,8007
static char pcd_scratch[243,8026
static char pcd_buffer[244,8055
static int pcd_bufblk 245,8118
static int pcd_unit 254,8409
static int pcd_retries;255,8475
static int pcd_busy 256,8534
static int pcd_sector;257,8592
static int pcd_count;258,8656
static char * pcd_buf;259,8715
static int pcd_warned 261,8778
static struct cdrom_device_ops pcd_dops 265,8876
static void pcd_init_units(289,9305
int pcd_init 318,10057
static int pcd_open(345,10646
static void pcd_release(356,10843
int	init_module(365,10966
void	cleanup_module(380,11130
#define WR(WR395,11347
#define RR(RR396,11395
static int pcd_wait(398,11443
static int pcd_command(419,11941
static int pcd_completion(450,12581
static void pcd_req_sense(496,13625
static int pcd_atapi(516,14199
#define DBMSG(DBMSG528,14430
static int pcd_media_changed(530,14475
static int pcd_lock_door(541,14648
static int pcd_tray_move(550,14900
static void pcd_sleep(559,15150
static int pcd_reset(565,15261
static int pcd_drive_reset(594,15801
static int pcd_ready_wait(599,15904
static int pcd_drive_status(617,16391
static int pcd_identify(629,16734
static int pcd_probe(652,17295
static int pcd_detect(670,17705
static void do_pcd_request 707,18635
static int pcd_ready(732,19183
static void pcd_transfer(739,19292
static void pcd_start(752,19528
static void do_pcd_read(782,20105
static void do_pcd_read_drq(803,20462
static int pcd_audio_ioctl(832,21206
static int pcd_get_mcn 1036,26411

drivers/block/paride/pd.c,4030
#define PD_VERSION 117,4179
#define PD_MAJOR	118,4210
#define PD_NAME	119,4230
#define PD_UNITS	120,4252
static int	verbose 128,4419
static int	major 129,4443
static char	*name 130,4472
static int	cluster 131,4501
static int      nice 132,4527
static int      disable 133,4553
static int drive0[135,4583
static int drive1[136,4628
static int drive2[137,4673
static int drive3[138,4718
static int (*drives[140,4764
static int pd_drive_count;141,4828
#define D_PRT	143,4856
#define D_PRO 144,4872
#define D_UNI	145,4890
#define D_MOD	146,4906
#define D_GEO	147,4922
#define D_SBY	148,4938
#define D_DLY	149,4954
#define D_SLV 150,4970
#define	DU	152,4989
static STT pd_stt[172,5357
void pd_setup(180,5586
#define PD_BITS 199,5922
#define MAJOR_NR 203,6017
#define DEVICE_NAME 204,6042
#define DEVICE_REQUEST 205,6067
#define DEVICE_NR(DEVICE_NR206,6104
#define DEVICE_ON(DEVICE_ON207,6155
#define DEVICE_OFF(DEVICE_OFF208,6181
#define PD_PARTNS 214,6254
#define PD_DEVS	215,6287
#define PD_LOG_HEADS 219,6359
#define PD_LOG_SECTS 220,6386
#define PD_ID_OFF 222,6414
#define PD_ID_LEN 223,6441
#define PD_MAX_RETRIES 225,6469
#define PD_TMO 226,6495
#define PD_SPIN_DEL 227,6570
#define PD_SPIN 229,6646
#define STAT_ERR 231,6707
#define STAT_INDEX 232,6739
#define STAT_ECC 233,6771
#define STAT_DRQ 234,6803
#define STAT_SEEK 235,6835
#define STAT_WRERR 236,6867
#define STAT_READY 237,6899
#define STAT_BUSY 238,6931
#define ERR_AMNF 240,6964
#define ERR_TK0NF 241,6996
#define ERR_ABRT 242,7028
#define ERR_MCR 243,7060
#define ERR_IDNF 244,7092
#define ERR_MC 245,7124
#define ERR_UNC 246,7156
#define ERR_TMO 247,7188
#define IDE_READ 249,7221
#define IDE_WRITE 250,7251
#define IDE_READ_VRFY	251,7281
#define IDE_INIT_DEV_PARMS	252,7309
#define IDE_STANDBY 253,7341
#define IDE_ACKCHANGE 254,7371
#define IDE_DOORLOCK 255,7401
#define IDE_DOORUNLOCK 256,7431
#define IDE_IDENTIFY 257,7461
#define IDE_EJECT	258,7491
static struct hd_struct pd_hd[286,8413
static int pd_sizes[287,8453
static int pd_blocksizes[288,8483
#define PD_NAMELEN	290,8519
struct pd_unit pd_unit292,8541
struct pd_unit pd[309,9082
#define PD 313,9191
#define PI 314,9211
static int pd_valid 316,9229
static char pd_scratch[317,9288
static int pd_retries 323,9473
static int pd_busy 324,9541
static int pd_block;325,9613
static int pd_count;326,9691
static int pd_run;327,9766
static int pd_cmd;328,9820
static int pd_unit;329,9874
static int pd_dev;330,9926
static int pd_poffs;331,9978
static char * pd_buf;332,10041
static struct wait_queue *pd_wait_open 334,10119
static char *pd_errs[336,10167
static struct gendisk pd_gendisk 342,10403
static struct file_operations pd_fops 356,10949
void pd_init_units(373,11682
int pd_init 395,12108
static void pd_geninit 423,12880
static int pd_open 434,13061
static int pd_ioctl(453,13446
static int pd_release 520,16029
static int pd_check_media(550,16549
static int pd_revalidate(563,16801
int     init_module(611,17832
void    cleanup_module(636,18271
#define	WR(WR653,18613
#define	RR(RR654,18655
#define DRIVE	656,18696
static void pd_print_error(660,18763
static void pd_reset(669,18993
#define DBMSG(DBMSG679,19177
static int pd_wait_for(681,19222
static void pd_send_command(699,19695
static void pd_ide_command(714,20000
static void pd_init_dev_parms(734,20639
static void pd_doorlock(744,20956
static void pd_eject(756,21284
static void pd_media_check(768,21695
static void pd_standby_off(789,22447
#define  word_val(word_val798,22699
static int pd_identify(800,22775
static int pd_probe_drive(852,24357
static int pd_detect(862,24555
static int pd_ready(901,25591
static void do_pd_request 908,25682
static void pd_next_buf(958,26961
static void do_pd_read(983,27565
static void do_pd_read_start(988,27642
static void do_pd_read_drq(1014,28403
static void do_pd_write(1049,29449
static void do_pd_write_start(1054,29529
static void do_pd_write_done(1102,31032

drivers/block/paride/pf.c,3531
#define PF_VERSION 116,4817
#define PF_MAJOR	117,4848
#define PF_NAME	118,4868
#define PF_UNITS	119,4890
static int	verbose 127,5057
static int	major 128,5081
static char	*name 129,5110
static int      cluster 130,5139
static int      nice 131,5169
static int      disable 132,5195
static int drive0[134,5225
static int drive1[135,5269
static int drive2[136,5313
static int drive3[137,5357
static int (*drives[139,5402
static int pf_drive_count;140,5466
#define D_PRT 142,5494
#define D_PRO 143,5512
#define D_UNI 144,5530
#define D_MOD 145,5548
#define D_SLV 146,5566
#define D_LUN 147,5584
#define D_DLY 148,5602
#define DU 150,5621
static STT pf_stt[171,5976
void pf_setup(179,6275
#define MAJOR_NR 200,6690
#define DEVICE_NAME 201,6715
#define DEVICE_REQUEST 202,6740
#define DEVICE_NR(DEVICE_NR203,6777
#define DEVICE_ON(DEVICE_ON204,6817
#define DEVICE_OFF(DEVICE_OFF205,6843
#define PF_FD_MAX	213,6961
#define PF_FD_HDS	214,7023
#define PF_FD_SPT	215,7043
#define PF_HD_HDS	216,7064
#define PF_HD_SPT	217,7085
#define PF_MAX_RETRIES 219,7107
#define PF_TMO 220,7133
#define PF_SPIN_DEL 221,7208
#define PF_SPIN 223,7284
#define STAT_ERR 225,7343
#define STAT_INDEX 226,7375
#define STAT_ECC 227,7407
#define STAT_DRQ 228,7439
#define STAT_SEEK 229,7471
#define STAT_WRERR 230,7503
#define STAT_READY 231,7535
#define STAT_BUSY 232,7567
#define ATAPI_REQ_SENSE	234,7600
#define ATAPI_LOCK	235,7630
#define ATAPI_DOOR	236,7655
#define ATAPI_MODE_SENSE	237,7680
#define ATAPI_CAPACITY	238,7710
#define ATAPI_IDENTIFY	239,7739
#define ATAPI_READ_10	240,7768
#define ATAPI_WRITE_10	241,7796
static int pf_blocksizes[267,8556
#define PF_NM 269,8593
#define PF_RO 270,8619
#define PF_RW 271,8645
#define PF_NAMELEN 273,8672
struct pf_unit pf_unit275,8699
struct pf_unit pf[288,9151
#define PF 292,9260
#define PI 293,9280
static char pf_scratch[295,9298
static int pf_retries 301,9483
static int pf_busy 302,9551
static int pf_block;303,9623
static int pf_count;304,9701
static int pf_run;305,9776
static int pf_cmd;306,9830
static int pf_unit;307,9884
static int pf_mask;308,9936
static char * pf_buf;309,9987
static struct file_operations pf_fops 313,10095
void pf_init_units(330,10828
int pf_init 351,11404
static int pf_open 376,12008
static int pf_ioctl(402,12494
static int pf_release 467,14982
static int pf_check_media(498,15513
int     init_module(509,15648
void    cleanup_module(524,15839
#define	WR(WR536,16012
#define	RR(RR537,16054
#define LUN 539,16095
#define DRIVE 540,16133
static int pf_wait(542,16179
static int pf_command(563,16800
static int pf_completion(594,17528
static void pf_req_sense(613,17988
static int pf_atapi(628,18446
#define DBMSG(DBMSG640,18722
static void pf_lock(642,18772
static void pf_eject(650,18946
#define PF_RESET_TMO 658,19107
static void pf_sleep(660,19175
static int pf_reset(667,19286
static void pf_mode_sense(701,20031
static void xs(711,20290
static int xl(722,20503
static void pf_get_capacity(731,20620
static int pf_identify(751,21087
static int pf_probe(793,22057
static int pf_detect(815,22630
static int pf_start(851,23479
static int pf_ready(871,23803
static void do_pf_request 878,23912
static void pf_next_buf(924,25077
static void do_pf_read(949,25682
static void do_pf_read_start(956,25829
static void do_pf_read_drq(981,26513
static void do_pf_write(1018,27611
static void do_pf_write_start(1023,27690
static void do_pf_write_done(1072,29136

drivers/block/paride/aten.c,517
#define ATEN_VERSION 18,453
#define j44(j4428,631
static int  cont_map[34,786
static void  aten_write_regr(36,829
static int aten_read_regr(45,1003
static void aten_read_block(68,1425
static void aten_write_block(96,1970
static void aten_connect 108,2178
static void aten_disconnect 115,2289
static void aten_log_adapter(121,2386
static void aten_init_proto(132,2706
static void aten_release_proto(137,2776
struct pi_protocol aten 142,2849
int     init_module(160,3426
void    cleanup_module(165,3497

drivers/block/paride/paride.c,875
#define PI_VERSION 19,463
#define CONFIG_PARPORT30,706
#define MAX_PROTOS	39,815
static struct pi_protocol	*protocols[41,838
spinlock_t	pi_spinlock 43,889
void pi_write_regr(45,935
int pi_read_regr(50,1040
void pi_write_block(55,1136
void pi_read_block(60,1233
static void pi_wake_up(67,1357
void pi_do_claimed(90,1731
static void pi_claim(115,2101
static void pi_unclaim(126,2335
void pi_connect(134,2496
void pi_disconnect(140,2567
static void pi_unregister_parport(146,2646
void pi_release(157,2849
#define WR(WR165,3017
#define RR(RR166,3065
static int pi_test_proto(168,3113
int  pi_register(201,3930
void pi_unregister(223,4411
static void pi_register_parport(234,4609
static int pi_probe_mode(259,5054
static int pi_probe_unit(285,5805
int pi_init(329,6660
int	init_module(399,8250
void	cleanup_module(408,8397
void	paride_init(415,8436

drivers/block/paride/bpck.c,903
#define	BPCK_VERSION	17,361
#define PC	30,556
#define r2(r231,581
#define w2(w232,618
#define t2(t233,666
#define e2(e234,712
#define o2(o235,754
#define j44(j4437,794
static int  cont_map[44,1009
static int bpck_read_regr(46,1055
static void bpck_write_regr(77,1547
#define WR(WR103,1924
#define RR(RR104,1967
static void bpck_write_block(106,2008
static void bpck_read_block(147,2924
static int bpck_probe_unit 194,3924
static void bpck_connect 217,4362
static void bpck_disconnect 251,4847
static void bpck_force_spp 258,4981
#define TEST_LEN 274,5361
static int bpck_test_proto(276,5383
static void bpck_read_eeprom 346,6826
static int bpck_test_port 398,7676
static void bpck_log_adapter(417,8086
static void bpck_init_proto(444,8774
static void bpck_release_proto(449,8837
struct pi_protocol bpck 454,8909
int	init_module(471,9249
void	cleanup_module(476,9308

drivers/block/paride/pt.c,2768
#define PT_VERSION 107,4409
#define PT_MAJOR	108,4440
#define PT_NAME	109,4460
#define PT_UNITS	110,4482
static int	verbose 118,4648
static int	major 119,4672
static char	*name 120,4701
static int      disable 121,4730
static int drive0[123,4760
static int drive1[124,4801
static int drive2[125,4842
static int drive3[126,4883
static int (*drives[128,4925
static int pt_drive_count;129,4989
#define D_PRT 131,5017
#define D_PRO 132,5035
#define D_UNI 133,5053
#define D_MOD 134,5071
#define D_SLV 135,5089
#define D_DLY 136,5107
#define DU 138,5126
static STT pt_stt[157,5430
void pt_setup(163,5639
#define PT_MAX_RETRIES 180,5932
#define PT_TMO 181,5958
#define PT_SPIN_DEL 182,6033
#define PT_RESET_TMO 183,6108
#define PT_READY_TMO	184,6153
#define PT_REWIND_TMO	185,6195
#define PT_SPIN 187,6241
#define STAT_ERR 189,6304
#define STAT_INDEX 190,6336
#define STAT_ECC 191,6368
#define STAT_DRQ 192,6400
#define STAT_SEEK 193,6432
#define STAT_WRERR 194,6464
#define STAT_READY 195,6496
#define STAT_BUSY 196,6528
#define STAT_SENSE	197,6560
#define ATAPI_TEST_READY	199,6588
#define ATAPI_REWIND	200,6618
#define ATAPI_REQ_SENSE	201,6645
#define ATAPI_READ_6	202,6675
#define ATAPI_WRITE_6	203,6702
#define ATAPI_WFM	204,6730
#define ATAPI_IDENTIFY	205,6754
#define ATAPI_MODE_SENSE	206,6783
#define ATAPI_LOG_SENSE	207,6813
#define PT_MEDIA	228,7468
#define PT_WRITE_OK	229,7487
#define PT_REWIND	230,7509
#define PT_WRITING 231,7529
#define PT_READING 232,7555
#define PT_EOF	233,7581
#define PT_NAMELEN 235,7607
#define PT_BUFSIZE 236,7633
struct pt_unit pt_unit238,7660
struct pt_unit pt[252,8137
#define PT 256,8246
#define PI 257,8266
static char pt_scratch[259,8284
static struct file_operations pt_fops 263,8382
void pt_init_units(280,9064
int pt_init 301,9615
int     init_module(328,10137
void    cleanup_module(343,10328
#define	WR(WR355,10498
#define	RR(RR356,10540
#define DRIVE 358,10581
static int pt_wait(360,10627
static int pt_command(381,11248
static int pt_completion(412,11976
static void pt_req_sense(433,12478
static int pt_atapi(452,13049
static void pt_sleep(464,13325
static int pt_poll_dsc(470,13435
static void pt_media_access_cmd(494,13935
static void pt_rewind(504,14138
static void pt_write_fm(511,14293
#define DBMSG(DBMSG518,14455
static int pt_reset(520,14505
static int pt_ready_wait(549,15029
static void xs(567,15436
static int xn(578,15649
static int pt_identify(587,15779
static int pt_probe(637,17030
static int pt_detect(652,17358
#define DEVICE_NR(DEVICE_NR686,18149
static int pt_open 688,18192
static int pt_ioctl(731,18961
static int pt_release 770,19756
static ssize_t pt_read(792,20144
static ssize_t pt_write(876,21955

drivers/block/paride/comm.c,554
#define COMM_VERSION 17,413
#define j44(j4432,717
#define P1	34,765
#define P2	35,811
static int  cont_map[41,944
static int comm_read_regr(43,987
static void comm_write_regr(69,1516
static void comm_connect 88,1827
static void comm_disconnect 99,2105
static void comm_read_block(106,2232
static void comm_write_block(147,3245
static void comm_log_adapter(177,3917
static void comm_init_proto(188,4269
static void comm_release_proto(193,4337
struct pi_protocol comm 198,4408
int     init_module(216,4985
void    cleanup_module(221,5056

drivers/block/paride/frpw.c,655
#define	FRPW_VERSION	26,763
#define cec4	36,937
#define j44(j4437,1002
static int  cont_map[43,1135
static int frpw_read_regr(45,1178
static void frpw_write_regr(61,1369
static void frpw_read_block_int(72,1544
static void frpw_read_block(133,3252
static void frpw_write_block(138,3359
static void frpw_connect 171,4005
static void frpw_disconnect 178,4113
static int frpw_test_pnp 189,4379
static int frpw_test_proto(222,5069
static void frpw_log_adapter(270,6366
static void frpw_init_proto(282,6761
static void frpw_release_proto(288,6848
struct pi_protocol frpw 293,6920
int     init_module(311,7511
void    cleanup_module(316,7582

drivers/block/paride/dstr.c,600
#define DSTR_VERSION 16,334
#define j44(j4433,662
#define P1	35,738
#define P2	36,776
#define P3 37,812
static int  cont_map[43,944
static int dstr_read_regr(45,987
static void dstr_write_regr(72,1516
#define  CCP(CCP95,1912
static void dstr_connect 99,2033
static void dstr_disconnect 106,2169
static void dstr_read_block(113,2285
static void dstr_write_block(155,3342
static void dstr_log_adapter(191,4150
static void dstr_init_proto(203,4508
static void dstr_release_proto(208,4577
struct pi_protocol dstr 213,4649
int     init_module(231,5226
void    cleanup_module(236,5297

drivers/block/paride/epat.c,696
#define EPAT_VERSION 18,490
#define j44(j4428,668
#define j53(j5329,711
static int cont_map[36,873
static void epat_write_regr(38,918
static int epat_read_regr(59,1183
static void epat_read_block(88,1660
static void epat_write_block(153,2958
#define	WR(WR191,3546
#define	RR(RR192,3589
#define WRi(WRi196,3672
#define RRi(RRi197,3723
#define CCP(CCP201,3855
static void epat_connect 204,3990
static void epat_disconnect 217,4293
static int epat_test_proto(224,4409
static void epat_log_adapter(263,5360
static void epat_init_proto(281,5830
static void epat_release_proto(286,5895
struct pi_protocol epat 291,5961
int	init_module(309,6279
void	cleanup_module(314,6339

drivers/block/paride/fit3.c,535
#define FIT3_VERSION 20,726
#define j44(j4430,903
#define w7(w732,966
#define r7(r733,1015
static void  fit3_write_regr(40,1156
static int fit3_read_regr(60,1471
static void fit3_read_block(93,2008
static void fit3_write_block(132,2785
static void fit3_connect 153,3208
static void fit3_disconnect 163,3400
static void fit3_log_adapter(170,3534
static void fit3_init_proto(181,3849
static void fit3_release_proto(186,3917
struct pi_protocol fit3 191,3988
int     init_module(209,4565
void    cleanup_module(214,4636

drivers/block/paride/epia.c,629
#define EPIA_VERSION 20,549
#define j44(j4438,953
#define j53(j5339,1010
static int cont_map[45,1147
static int epia_read_regr(47,1186
static void epia_write_regr(80,1957
#define WR(WR102,2362
#define RR(RR103,2412
static void epia_connect 111,2741
static void epia_disconnect 125,3113
static void epia_read_block(134,3287
static void epia_write_block(194,5007
static int epia_test_proto(235,6062
static void epia_log_adapter(273,7021
static void epia_init_proto(285,7382
static void epia_release_proto(290,7451
struct pi_protocol epia 295,7523
int     init_module(313,8114
void    cleanup_module(318,8185

drivers/block/paride/on26.c,619
#define ON26_VERSION 19,472
#define j44(j4436,800
#define P1	38,844
#define P2	39,896
static int on26_read_regr(45,1023
static void on26_write_regr(74,1656
#define  CCP(CCP97,2082
static void on26_connect 100,2199
static void on26_disconnect 114,2403
#define	RESET_WAIT 123,2617
static int on26_test_port(125,2642
static void on26_read_block(184,4033
static void on26_write_block(233,5418
static void on26_log_adapter(276,6502
static void on26_init_proto(288,6857
static void on26_release_proto(293,6926
struct pi_protocol on26 298,6998
int     init_module(316,7588
void    cleanup_module(321,7659

drivers/block/paride/pg.c,1868
#define PG_VERSION 124,4266
#define PG_MAJOR	125,4297
#define PG_NAME	126,4317
#define PG_UNITS	127,4339
#define PI_PG	130,4373
static int	verbose 139,4542
static int	major 140,4566
static char	*name 141,4595
static int      disable 142,4624
static int drive0[144,4654
static int drive1[145,4695
static int drive2[146,4736
static int drive3[147,4777
static int (*drives[149,4819
static int pg_drive_count;150,4883
#define D_PRT 152,4911
#define D_PRO 153,4929
#define D_UNI 154,4947
#define D_MOD 155,4965
#define D_SLV 156,4983
#define D_DLY 157,5001
#define DU 159,5020
static STT pg_stt[179,5346
void pg_setup(185,5492
#define PG_SPIN_DEL 202,5785
#define PG_SPIN 203,5860
#define PG_TMO	204,5888
#define PG_RESET_TMO	205,5907
#define STAT_ERR 207,5935
#define STAT_INDEX 208,5964
#define STAT_ECC 209,5993
#define STAT_DRQ 210,6022
#define STAT_SEEK 211,6051
#define STAT_WRERR 212,6080
#define STAT_READY 213,6109
#define STAT_BUSY 214,6138
#define ATAPI_IDENTIFY	216,6168
#define PG_NAMELEN 233,6655
struct pg_unit pg_unit235,6682
struct pg_unit pg[250,7195
#define PG 254,7304
#define PI 255,7324
static char pg_scratch[257,7342
static struct file_operations pg_fops 261,7440
void pg_init_units(278,8031
int pg_init 298,8413
int     init_module(325,8851
void    cleanup_module(340,9028
#define	WR(WR352,9191
#define	RR(RR353,9233
#define DRIVE 355,9274
static void pg_sleep(357,9320
static int pg_wait(363,9423
static int pg_command(391,10060
static int pg_completion(429,10776
static int pg_reset(457,11387
static void xs(486,11882
static int pg_identify(497,12095
static int pg_probe(519,12543
static int pg_detect(534,12861
#define DEVICE_NR(DEVICE_NR568,13536
static int pg_open 570,13579
static int pg_release 604,14122
static ssize_t pg_write(622,14381
static ssize_t pg_read(662,15342

drivers/block/paride/kbic.c,781
#define KBIC_VERSION 21,566
#define r12w(r12w31,744
#define j44(j4433,796
#define j53(j5334,860
static int  cont_map[41,1014
static int kbic_read_regr(43,1057
static void  kbic_write_regr(73,1676
static void k951_connect 97,2072
static void k951_disconnect 104,2183
#define	CCP(CCP110,2279
static void k971_connect 113,2393
static void k971_disconnect 121,2516
static void kbic_read_block(132,2718
static void kbic_write_block(190,4355
static void kbic_log_adapter(227,5208
static void k951_log_adapter(240,5596
static void k971_log_adapter(245,5721
static void kbic_init_proto(250,5852
static void kbic_release_proto(255,5921
struct pi_protocol k951 260,5993
struct pi_protocol k971 276,6536
int     init_module(293,7112
void    cleanup_module(303,7239

drivers/block/paride/on20.c,530
#define	ON20_VERSION	15,299
#define op(op25,472
#define vl(vl26,539
#define j44(j4428,591
static int on20_read_regr(34,725
static void on20_write_regr(57,1154
static void on20_connect 68,1315
static void on20_disconnect 78,1555
static void on20_read_block(85,1687
static void on20_write_block(102,1978
static void on20_log_adapter(112,2140
static void on20_init_proto(123,2461
static void on20_release_proto(128,2530
struct pi_protocol on20 133,2602
int     init_module(151,3179
void    cleanup_module(156,3250

drivers/block/paride/paride.h,787
#define PARIDE_H_VERSION 15,316
#define	PI_PD	22,440
#define PI_PCD	23,471
#define PI_PF 24,506
#define PI_PT	25,541
#define PI_PG 26,574
struct pi_adapter pi_adapter33,766
typedef struct pi_adapter PIA;PIA54,1605
#define delay_p	96,2839
#define out_p(out_p97,2889
#define in_p(in_p98,2949
#define w0(w0100,2999
#define r0(r0101,3048
#define w1(w1102,3097
#define r1(r1103,3146
#define w2(w2104,3195
#define r2(r2105,3244
#define w3(w3106,3293
#define w4(w4107,3342
#define r4(r4108,3391
#define w4w(w4w109,3440
#define w4l(w4l110,3498
#define r4w(r4w111,3556
#define r4l(r4l112,3613
static inline u16 pi_swab16(114,3675
static inline u32 pi_swab32(122,3812
struct pi_protocol pi_protocol131,3984
typedef struct pi_protocol PIP;PIP159,4704

drivers/block/paride/pseudo.h,364
#define PS_VERSION	33,960
static int ps_then;44,1218
static int ps_timeout;45,1238
static int ps_timer_active 46,1261
static int ps_tq_active 47,1293
static int ps_nice 48,1322
static struct timer_list ps_timer 52,1424
static struct tq_struct ps_tq 53,1484
static void ps_set_intr(55,1539
static void ps_tq_int(86,2241
static void ps_timer_int(121,2948

drivers/block/paride/fit2.c,489
#define FIT2_VERSION 16,563
#define j44(j4426,740
static void  fit2_write_regr(38,1097
static int fit2_read_regr(44,1251
static void fit2_read_block(62,1523
static void fit2_write_block(88,2024
static void fit2_connect 101,2207
static void fit2_disconnect 108,2319
static void fit2_log_adapter(114,2416
static void fit2_init_proto(121,2619
static void fit2_release_proto(126,2688
struct pi_protocol fit2 131,2760
int     init_module(149,3337
void    cleanup_module(154,3408

drivers/block/paride/ktti.c,512
#define KTTI_VERSION 12,365
#define j44(j4422,542
static int  cont_map[28,690
static void  ktti_write_regr(30,733
static int ktti_read_regr(40,925
static void ktti_read_block(52,1169
static void ktti_write_block(65,1459
static void ktti_connect 77,1669
static void ktti_disconnect 84,1810
static void ktti_log_adapter(91,1950
static void ktti_init_proto(98,2147
static void ktti_release_proto(103,2216
struct pi_protocol ktti 108,2288
int     init_module(126,2865
void    cleanup_module(131,2936

drivers/block/paride/setup.h,116
struct setup_tab_t setup_tab_t19,389
typedef struct setup_tab_t STT;STT26,528
static void generic_setup(36,752

drivers/block/paride/friq.c,624
#define	FRIQ_VERSION	28,867
#define CMD(CMD38,1041
#define j44(j4441,1154
static int  cont_map[47,1287
static int friq_read_regr(49,1330
static void friq_write_regr(64,1508
static void friq_read_block_int(75,1670
static void friq_read_block(130,3130
static void friq_write_block(135,3237
static void friq_connect 167,3826
static void friq_disconnect 174,3934
static int friq_test_proto(181,4043
static void friq_log_adapter(217,5023
static void friq_init_proto(234,5479
static void friq_release_proto(240,5566
struct pi_protocol friq 252,5774
int     init_module(270,6365
void    cleanup_module(275,6436

drivers/block/sl82c105.c,31
void ide_init_sl82c105(18,337

drivers/char/keyboard.c,4508
#define SIZE(SIZE44,1270
#define KBD_DEFMODE 47,1334
#define KBD_DEFLEDS 55,1557
#define KBD_DEFLOCK 59,1607
struct wait_queue * keypress_wait 64,1670
int keyboard_wait_for_keypress(67,1729
static unsigned char k_down[80,2049
static unsigned long key_down[82,2122
static int dead_key_next 84,2182
int shift_state 90,2407
static int npadch 91,2428
static unsigned char diacr 92,2490
static char rep 93,2522
struct kbd_struct kbd_table[94,2581
static struct tty_struct **ttytab;95,2627
static struct kbd_struct * kbd 96,2662
static struct tty_struct * tty 97,2706
typedef void (*k_hand)k_hand101,2778
typedef void (k_handfn)k_handfn102,2837
	do_self,105,2914
	do_self, do_fn,105,2914
	do_self, do_fn, do_spec,105,2914
	do_self, do_fn, do_spec, do_pad,105,2914
	do_self, do_fn, do_spec, do_pad, do_dead,105,2914
	do_self, do_fn, do_spec, do_pad, do_dead, do_cons,105,2914
	do_self, do_fn, do_spec, do_pad, do_dead, do_cons, do_cur,105,2914
	do_self, do_fn, do_spec, do_pad, do_dead, do_cons, do_cur, do_shift,105,2914
	do_meta,106,2984
	do_meta, do_ascii,106,2984
	do_meta, do_ascii, do_lock,106,2984
	do_meta, do_ascii, do_lock, do_lowercase,106,2984
	do_meta, do_ascii, do_lock, do_lowercase, do_slock,106,2984
	do_meta, do_ascii, do_lock, do_lowercase, do_slock, do_dead2,106,2984
	do_ignore;107,3047
static k_hand key_handler[109,3060
#define TYPES_ALLOWED_IN_RAW_MODE 117,3298
typedef void (*void_fnp)void_fnp119,3368
typedef void (void_fn)void_fn120,3400
static void_fn do_null,122,3431
static void_fn do_null, enter,122,3431
static void_fn do_null, enter, show_ptregs,122,3431
static void_fn do_null, enter, show_ptregs, send_intr,122,3431
static void_fn do_null, enter, show_ptregs, send_intr, lastcons,122,3431
static void_fn do_null, enter, show_ptregs, send_intr, lastcons, caps_toggle,122,3431
	num,123,3509
	num, hold,123,3509
	num, hold, scroll_forw,123,3509
	num, hold, scroll_forw, scroll_back,123,3509
	num, hold, scroll_forw, scroll_back, boot_it,123,3509
	num, hold, scroll_forw, scroll_back, boot_it, caps_on,123,3509
	num, hold, scroll_forw, scroll_back, boot_it, caps_on, compose,123,3509
	SAK,124,3574
	SAK, decr_console,124,3574
	SAK, decr_console, incr_console,124,3574
	SAK, decr_console, incr_console, spawn_console,124,3574
	SAK, decr_console, incr_console, spawn_console, bare_num;124,3574
static void_fnp spec_fn_table[126,3634
#define SPECIALS_ALLOWED_IN_RAW_MODE 134,3888
const int max_vals[137,3994
const int NR_TYPES 144,4180
struct pt_regs * kbd_pt_regs;151,4425
static int sysrq_pressed;154,4482
void to_utf8(163,4714
int setkeycode(183,5275
int getkeycode(188,5386
void handle_scancode(193,5466
void put_queue(327,9140
static void puts_queue(336,9271
static void applkey(349,9445
static void enter(358,9602
static void caps_toggle(369,9745
static void caps_on(376,9835
static void show_ptregs(383,9921
static void hold(389,10000
static void num(405,10300
static void bare_num(419,10621
static void lastcons(425,10698
static void decr_console(431,10802
static void incr_console(444,10995
static void send_intr(457,11184
static void scroll_forw(465,11305
static void scroll_back(470,11357
static void boot_it(475,11408
static void compose(480,11456
int spawnpid,485,11507
int spawnpid, spawnsig;485,11507
static void spawn_console(487,11532
static void SAK(494,11652
static void do_ignore(508,11864
static void do_null(512,11926
static void do_spec(517,11976
static void do_lowercase(529,12258
static void do_self(534,12395
#define A_GRAVE 551,12660
#define A_ACUTE 552,12681
#define A_CFLEX 553,12703
#define A_TILDE 554,12724
#define A_DIAER 555,12745
#define A_CEDIL 556,12766
static unsigned char ret_diacr[557,12787
static void do_dead(561,12938
static void do_dead2(572,13186
unsigned char handle_diacr(588,13630
static void do_cons(607,13930
static void do_fn(614,14035
static void do_pad(625,14275
static void do_cur(682,15543
static void do_shift(691,15723
void compute_shiftstate(732,16695
static void do_meta(757,17229
static void do_ascii(769,17424
static void do_lock(789,17793
static void do_slock(796,17914
static unsigned char ledstate 809,18259
static unsigned char ledioctl;810,18313
unsigned char getledstate(812,18345
void setledstate(816,18403
static struct ledptr ledptr825,18598
} ledptrs[829,18695
void register_leds(831,18710
static inline unsigned char getleds(843,19030
static void kbd_bh(886,20231
__initfunc(896,20360

drivers/char/console.c,5377
struct consw *conswitchp 108,3221
#define CTRL_ACTION 115,3505
#define CTRL_ALWAYS 116,3536
#define DEFAULT_BELL_PITCH	121,3680
#define DEFAULT_BELL_DURATION	122,3711
#define MIN(MIN125,3761
static struct tty_struct *console_table[128,3810
static struct termios *console_termios[129,3868
static struct termios *console_termios_locked[130,3925
struct vc vc_cons 131,3989
static struct consw *con_driver_map[134,4052
static int printable 149,4633
int do_poke_blanked_console 151,4698
int console_blanked 152,4731
static int vesa_blank_mode 154,4757
static int blankinterval 155,4836
static int vesa_off_interval 156,4873
int fg_console 164,5105
int last_console 165,5125
int want_console 166,5147
int kmsg_redirect 167,5170
static struct vc_data *master_display_fg 175,5483
static int scrollback_delta 188,5896
#define IS_FG 194,5961
#define IS_VISIBLE 195,6000
#define DO_UPDATE 198,6080
#define DO_UPDATE 200,6106
static inline unsigned short *screenpos(203,6143
static inline void scrolldelta(216,6459
static void scrup(222,6556
scrdown(239,7082
static void do_update_region(256,7544
void update_region(302,8537
static u8 build_attr(313,8774
static void update_attr(355,9845
void invert_screen(363,10129
void complement_pos(398,10925
static void insert_char(425,11538
static void delete_char(446,12071
static int softcursor_original;470,12649
static void add_softcursor(472,12682
static void hide_cursor(489,13189
static void set_cursor(502,13521
static void set_origin(516,13841
static inline void save_screen(527,14118
void redraw_screen(537,14269
int vc_cons_allocated(593,15497
static void visual_init(598,15587
int vc_allocate(621,16341
int vc_resize(665,17906
void vc_disallocate(763,20288
#define set_kbd(set_kbd779,20616
#define clr_kbd(clr_kbd780,20673
#define is_kbd(is_kbd781,20730
#define decarm	783,20783
#define decckm	784,20809
#define kbdapplic	785,20835
#define lnm	786,20863
#define VT100ID 791,20956
#define VT102ID 792,20985
unsigned char color_table[794,21013
int default_red[798,21163
int default_grn[800,21271
int default_blu[802,21379
static void gotoxy(810,21671
static void gotoxay(839,22171
void scrollback(844,22287
void scrollfront(853,22412
static void lf(862,22537
static void ri(876,22813
static inline void cr(890,23059
static inline void bs(896,23134
static inline void del(905,23224
static void csi_J(910,23281
static void csi_K(954,24425
static void csi_X(988,25276
static void default_attr(1002,25646
static void csi_m(1011,25768
static void respond_string(1106,27881
static void cursor_report(1115,28039
static inline void status_report(1123,28212
static inline void respond_ID(1128,28326
void mouse_report(1133,28417
int mouse_reporting(1143,28687
static void set_mode(1150,28769
static void setterm_command(1215,30277
static void insert_line(1269,31689
static void delete_line(1276,31798
static void csi_at(1282,31904
static void csi_L(1291,32075
static void csi_P(1300,32241
static void csi_M(1309,32411
static void save_cur(1318,32575
static void restore_cur(1332,32827
enum { ESnormal,1348,33201
enum { ESnormal, ESesc,1348,33201
enum { ESnormal, ESesc, ESsquare,1348,33201
enum { ESnormal, ESesc, ESsquare, ESgetpars,1348,33201
enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars,1348,33201
enum { ESnormal, ESesc, ESsquare, ESgetpars, ESgotpars, ESfunckey,1348,33201
	EShash,1349,33268
	EShash, ESsetG0,1349,33268
	EShash, ESsetG0, ESsetG1,1349,33268
	EShash, ESsetG0, ESsetG1, ESpercent,1349,33268
	EShash, ESsetG0, ESsetG1, ESpercent, ESignore,1349,33268
	EShash, ESsetG0, ESsetG1, ESpercent, ESignore, ESnonstd,1349,33268
	ESpalette 1350,33326
static void reset_terminal(1352,33341
static void do_con_trol(1407,34427
static int do_con_write(1774,41543
#define FLUSH 1778,41673
#define FLUSH 1780,41710
static void console_bh(1943,46424
void vt_console_print(1980,47482
static kdev_t vt_console_device(2063,49200
struct console vt_console_driver 2068,49320
int tioclinux(2087,49556
static int con_write(2141,50692
static void con_put_char(2152,50908
static int con_write_room(2157,51011
static int con_chars_in_buffer(2164,51156
static void con_throttle(2174,51393
static void con_unthrottle(2178,51447
static void con_stop(2188,51670
static void con_start(2203,52006
static void con_flush_chars(2215,52276
static int con_open(2225,52467
static void con_close(2246,52907
static void vc_init(2252,53024
struct tty_driver console_driver;2282,53889
static int console_refcount;2283,53923
__initfunc(2285,53953
static void clear_buffer_attributes(2381,56984
void take_over_console(2398,57435
void give_up_console(2446,58571
static void set_vesa_blanking(2461,58759
static void vesa_powerdown(2469,58941
static void vesa_powerdown_screen(2489,59482
void do_blank_screen(2497,59630
void unblank_screen(2546,60718
static void blank_screen(2574,61357
void poke_blanked_console(2579,61414
void set_palette(2598,61857
static int set_get_cmap(2604,61978
int con_set_cmap(2637,62799
int con_get_cmap(2642,62871
void reset_palette(2647,62943
#define max_font_size 2671,63713
int con_font_op(2673,63742
u16 screen_glyph(2763,65893
unsigned short *screen_pos(2774,66102
void getconsxy(2779,66225
void putconsxy(2785,66290
u16 vcs_scr_readw(2791,66387
void vcs_scr_writew(2798,66555

drivers/char/tty_ioctl.c,725
# define	PRINTK(PRINTK31,690
# define	PRINTK(PRINTK33,726
#define TERMIOS_FLUSH	39,819
#define TERMIOS_WAIT	40,843
#define TERMIOS_TERMIO	41,866
void tty_wait_until_sent(43,892
static void unset_locked_termios(76,1770
#define NOSET_MASK(NOSET_MASK82,1895
static void change_termios(99,2454
static int set_termios(145,3829
static int get_termio(176,4556
static unsigned long inq_canon(183,4719
static int get_sgflags(208,5270
static int get_sgttyb(226,5673
static void set_sgflags(240,6005
static int set_sgttyb(265,6630
static int get_tchars(286,7099
static int set_tchars(301,7549
static int get_ltchars(318,8024
static int set_ltchars(333,8522
void send_prio_char(353,9083
int n_tty_ioctl(368,9361

drivers/char/tty_io.c,2821
#define CONSOLE_DEV 94,2965
#define TTY_DEV 95,3004
#define SYSCONS_DEV 96,3042
#define PTMX_DEV 97,3084
#define TTY_PARANOIA_CHECK 101,3149
#define CHECK_TTY_COUNT 102,3178
struct termios tty_std_termios;104,3205
struct tty_driver *tty_drivers 105,3276
struct tty_ldisc ldiscs[106,3348
extern struct tty_driver ptm_driver[109,3442
struct tty_struct * redirect 116,3628
#define MIN(MIN134,4318
#define TTY_NUMBER(TTY_NUMBER140,4415
char *tty_name(143,4524
inline int tty_paranoia_check(152,4694
static int check_tty_count(173,5169
int tty_register_ldisc(196,5730
static int tty_set_ldisc(212,6090
struct tty_driver *get_tty_driver(269,7560
int tty_check_change(294,8118
static ssize_t hung_up_tty_read(312,8494
static ssize_t hung_up_tty_write(321,8687
static unsigned int hung_up_tty_poll(330,8892
static int hung_up_tty_ioctl(335,9045
static long long tty_lseek(341,9209
static struct file_operations tty_fops 346,9306
static struct file_operations hung_up_tty_fops 361,9541
void do_tty_hangup(383,10121
void tty_hangup(487,12700
void tty_vhangup(497,12886
int tty_hung_up_p(507,13058
void disassociate_ctty(525,13654
void wait_for_keypress(559,14376
void stop_tty(565,14486
void start_tty(579,14791
static ssize_t tty_read(597,15280
static inline ssize_t do_tty_write(644,16559
static ssize_t tty_write(687,17456
static struct semaphore tty_sem 732,18666
static void down_tty_sem(734,18708
static void up_tty_sem(739,18766
static int init_dev(752,19163
static void release_mem(957,24272
static void release_dev(993,25336
static int tty_open(1231,32129
static int tty_release(1368,35448
static unsigned int tty_poll(1374,35549
int fasync_helper(1392,36075
static int tty_fasync(1430,36779
static int tiocsti(1458,37482
static int tiocgwinsz(1470,37716
static int tiocswinsz(1477,37871
static int tioccons(1495,38349
static int fionbio(1511,38665
static int tiocsctty(1525,38878
static int tiocgpgrp(1562,39645
static int tiocspgrp(1573,39936
static int tiocgsid(1595,40438
static int tiocttygstruct(1608,40777
static int tiocsetd(1615,40928
static int send_break(1625,41105
int tty_ioctl(1641,41453
void do_SAK(1791,45337
static void flush_to_ldisc(1832,46218
static int baud_table[1874,47285
static int n_baud_table 1885,47601
int tty_get_baud_rate(1887,47660
void tty_flip_buffer_push(1912,48132
static void initialize_tty_struct(1923,48347
void tty_default_put_char(1942,48895
int tty_register_driver(1950,49057
int tty_unregister_driver(1978,49628
long __init console_init(2024,50568
static struct tty_driver dev_tty_driver,2059,51608
static struct tty_driver dev_tty_driver, dev_syscons_driver;2059,51608
static struct tty_driver dev_ptmx_driver;2061,51695
static struct tty_driver dev_console_driver;2064,51761
__initfunc(2071,51935

drivers/char/pty.c,1435
#define BUILDING_PTY_C 28,613
struct pty_struct pty_struct31,668
#define PTY_MAGIC 36,736
static struct tty_driver pty_driver,38,762
static struct tty_driver pty_driver, pty_slave_driver;38,762
static int pty_refcount;39,817
static struct tty_struct *pty_table[42,900
static struct termios *pty_termios[43,946
static struct termios *pty_termios_locked[44,991
static struct tty_struct *ttyp_table[45,1043
static struct termios *ttyp_termios[46,1090
static struct termios *ttyp_termios_locked[47,1136
static struct pty_struct pty_state[48,1189
struct tty_driver ptm_driver[52,1322
struct tty_driver pts_driver[53,1370
static struct tty_struct *ptm_table[55,1419
static struct termios *ptm_termios[56,1483
static struct termios *ptm_termios_locked[57,1546
static struct tty_struct *pts_table[58,1616
static struct termios *pts_termios[59,1680
static struct termios *pts_termios_locked[60,1743
static struct pty_struct ptm_state[61,1813
#define MIN(MIN64,1884
static void pty_close(66,1926
static void pty_unthrottle(111,3395
static int pty_write(135,4164
static int pty_write_room(178,5092
static int pty_chars_in_buffer(205,6158
static int pty_get_device_number(232,7048
static int pty_set_lock(241,7299
static int pty_bsd_ioctl(253,7520
static int pty_unix98_ioctl(268,7876
static void pty_flush_buffer(284,8242
static int pty_open(300,8526
static void pty_set_termios(331,9231
__initfunc(337,9417

drivers/char/misc.c,373
static struct miscdevice misc_list 57,1566
#define DYNAMIC_MINORS 62,1701
static unsigned char misc_minors[63,1753
static int misc_read_proc(88,2519
static int misc_open(101,2859
static struct file_operations misc_fops 126,3465
int misc_register(139,3725
int misc_deregister(165,4323
static struct proc_dir_entry *proc_misc;183,4712
int __init misc_init(185,4755

drivers/char/lp.c,1478
#define LP_NO 188,6416
struct lp_struct lp_table[190,6433
#define	LP_READY(LP_READY201,6649
#define	LP_NO_ACKING(LP_NO_ACKING203,6747
#define LP_NO_ERROR(LP_NO_ERROR205,6844
static int lp_preempt(214,7068
#define lp_parport_release(lp_parport_release225,7332
#define lp_parport_claim(lp_parport_claim226,7416
#define r_dtr(r_dtr230,7575
#define r_str(r_str231,7637
#define w_ctr(w_ctr232,7701
#define w_dtr(w_dtr233,7790
static __inline__ void lp_yield 235,7877
static __inline__ void lp_schedule(245,8068
static int lp_reset(258,8466
#define	lp_wait(lp_wait270,8697
static inline int lp_char(272,8744
static void lp_interrupt(401,11844
static void lp_error(412,12113
static int lp_check_status(423,12369
static int lp_write_buf(456,13061
static ssize_t lp_write(562,15520
static long long lp_lseek(585,16030
static int lp_read_nibble(592,16160
static void lp_read_terminate(601,16303
static ssize_t lp_read(615,16862
static int lp_open(694,18572
static int lp_release(743,20023
static int lp_ioctl(754,20282
static struct file_operations lp_fops 844,22120
static int parport_nr[865,22455
static char *parport[866,22527
static int reset 867,22569
static int parport_nr[874,22680
static int parport_nr[LP_NO] __initdata 874,22680
static int reset __initdata 875,22763
static int parport_ptr 877,22797
__initfunc(879,22826
int lp_register(906,23545
int lp_init(926,24000
int init_module(978,24952
void cleanup_module(1006,25570

drivers/char/mem.c,1186
static ssize_t do_write_mem(55,1085
static ssize_t read_mem(85,1754
static ssize_t write_mem(121,2470
static inline unsigned long pgprot_noncached(138,2860
static int mmap_mem(158,3355
static ssize_t read_kmem(187,4173
static ssize_t write_kmem(227,5054
static ssize_t read_port(239,5383
static ssize_t write_port(257,5723
static ssize_t read_null(277,6090
static ssize_t write_null(283,6195
static inline size_t read_zero_pagealigned(292,6362
static ssize_t read_zero(345,7581
static int mmap_zero(383,8451
static ssize_t write_full(392,8693
static loff_t null_lseek(404,8982
static loff_t memory_lseek(417,9394
#define mmap_kmem	431,9638
#define zero_lseek	432,9665
#define full_lseek 433,9695
#define write_zero	434,9730
#define read_full 435,9760
static struct file_operations mem_fops 437,9795
static struct file_operations kmem_fops 451,10076
static struct file_operations null_fops 465,10364
static struct file_operations port_fops 479,10662
static struct file_operations zero_fops 493,10962
static struct file_operations full_fops 506,11228
static int memory_open(519,11507
static struct file_operations memory_fops 556,12174
__initfunc(570,12478

drivers/char/busmouse.c,512
static struct mouse_status mouse;56,1542
static int mouse_irq 57,1576
__initfunc(63,1662
static void mouse_interrupt(69,1758
static int fasync_mouse(113,2926
static int close_mouse(127,3143
static int open_mouse(142,3385
static ssize_t write_mouse(165,3783
static ssize_t read_mouse(175,3955
static unsigned int mouse_poll(228,5080
struct file_operations bus_mouse_fops 236,5250
static struct miscdevice bus_mouse 251,5529
__initfunc(255,5620
int init_module(289,6369
void cleanup_module(294,6422

drivers/char/vt.c,936
char vt_dont_switch 38,926
extern struct tty_driver console_driver;39,951
#define VT_IS_IN_USE(VT_IS_IN_USE41,993
#define VT_BUSY(VT_BUSY42,1077
struct vt_struct *vt_cons[57,1795
unsigned char keyboard_type 62,1925
unsigned int video_font_height;68,2064
unsigned int default_font_height;69,2096
unsigned int video_scan_lines;70,2130
#define GPFIRST 76,2259
#define GPLAST 77,2281
#define GPNUM 78,2302
kd_nosound(94,2822
_kd_mksound(102,2931
_kd_mksound(136,3554
#define i 145,3689
#define s 146,3714
#define v 147,3739
do_kdsk_ioctl(149,3782
do_kbkeycode_ioctl(236,5759
do_kdgkb_ioctl(259,6225
do_fontx_ioctl(347,8526
do_unimap_ioctl(388,9495
int vt_ioctl(415,10177
static struct wait_queue *vt_activate_queue 1102,25931
int vt_waitactive(1108,26105
#define vt_wake_waitactive(vt_wake_waitactive1129,26510
void reset_vc(1131,26568
void complete_change_console(1148,27068
void change_console(1213,28842

drivers/char/esp.c,3500
#define NR_PORTS 69,2016
#define NR_PRIMARY 70,2066
static int irq[73,2192
static unsigned int divisor[74,2269
static unsigned int dma 76,2366
static unsigned int rx_trigger 77,2427
static unsigned int tx_trigger 78,2476
static unsigned int flow_off 79,2525
static unsigned int flow_on 80,2570
static unsigned int rx_timeout 81,2613
static unsigned int pio_threshold 82,2660
static char *dma_buffer;96,2985
static int dma_bytes;97,3010
static struct esp_pio_buffer *free_pio_buf;98,3032
#define DMA_BUFFER_SZ 100,3077
#define WAKEUP_CHARS 102,3105
static char *serial_name 104,3132
static char *serial_version 105,3180
static struct tty_driver esp_driver,109,3254
static struct tty_driver esp_driver, esp_callout_driver;109,3254
static int serial_refcount;110,3311
#define SERIAL_TYPE_NORMAL	113,3373
#define SERIAL_TYPE_CALLOUT	114,3402
#define SERIAL_DO_RESTART125,3645
#define _INLINE_ 131,3748
#define DBG_CNT(DBG_CNT134,3827
#define DBG_CNT(DBG_CNT137,3990
static struct esp_struct *ports;140,4017
#define BASE_BAUD 149,4302
#define STD_COM_FLAGS 152,4430
static struct tty_struct *serial_table[154,4493
static struct termios *serial_termios[155,4543
static struct termios *serial_termios_locked[156,4592
#define MIN(MIN159,4661
static unsigned char *tmp_buf 171,5187
static struct semaphore tmp_buf_sem 172,5222
static inline int serial_paranoia_check(174,5268
static inline unsigned int serial_in(195,5767
static inline void serial_out(200,5880
static inline int __get_order(206,6015
static void rs_stop(228,6505
static void rs_start(246,6931
static _INLINE_ void rs_sched_event(288,8366
static _INLINE_ struct esp_pio_buffer *get_pio_buffer(295,8531
static _INLINE_ void release_pio_buffer(310,8813
static _INLINE_ void receive_chars_pio(316,8934
static _INLINE_ void receive_chars_dma(396,10773
static _INLINE_ void receive_chars_dma_done(415,11323
static _INLINE_ void transmit_chars_pio(475,12713
static _INLINE_ void transmit_chars_dma(545,14334
static _INLINE_ void transmit_chars_dma_done(592,15571
static _INLINE_ void check_modem_status(626,16393
static void rs_interrupt_single(666,17497
static void do_serial_bh(783,20933
static void do_softint(788,20995
static void do_serial_hangup(814,21679
static _INLINE_ void esp_basic_init(835,22267
static int startup(896,24159
static void shutdown(1028,27510
static void change_speed(1112,29412
#define RELEVANT_IFLAG(RELEVANT_IFLAG1185,31137
static void rs_put_char(1269,33672
static void rs_flush_chars(1292,34175
static int rs_write(1312,34691
static int rs_write_room(1381,36035
static int rs_chars_in_buffer(1394,36327
static void rs_flush_buffer(1403,36562
static void rs_throttle(1426,37265
static void rs_unthrottle(1448,37844
static int get_serial_info(1476,38609
static int get_esp_config(1500,39192
static int set_serial_info(1523,39792
static int set_esp_config(1638,42934
static int get_lsr_info(1784,47093
static int get_modem_info(1798,47417
static int set_modem_info(1817,48005
static void esp_break(1859,48935
static int rs_ioctl(1880,49486
static void rs_set_termios(1993,52860
static void rs_close(2055,54762
static void rs_wait_until_sent(2161,57847
static void esp_hangup(2203,58917
static int block_til_ready(2224,59467
static int esp_open(2374,63486
static _INLINE_ void show_serial_version(2462,65412
static _INLINE_ int autoconfig(2472,65642
__initfunc(2529,66930
int init_module(2730,72132
void cleanup_module(2735,72185

drivers/char/atixlmouse.c,1007
#define ATIXL_MOUSE_IRQ	29,590
#define ATIXL_BUSMOUSE	30,661
#define	ATIXL_MSE_DATA_PORT	34,774
#define	ATIXL_MSE_SIGNATURE_PORT	35,809
#define	ATIXL_MSE_CONTROL_PORT	36,848
#define	ATIXL_MSE_READ_BUTTONS	38,887
#define	ATIXL_MSE_READ_X	39,924
#define	ATIXL_MSE_READ_Y	40,955
#define ATIXL_MSE_DISABLE_UPDATE(ATIXL_MSE_DISABLE_UPDATE45,1073
#define ATIXL_MSE_ENABLE_UPDATE(ATIXL_MSE_ENABLE_UPDATE49,1267
#define ATIXL_MSE_INT_OFF(ATIXL_MSE_INT_OFF53,1462
#define ATIXL_MSE_INT_ON(ATIXL_MSE_INT_ON57,1660
static struct mouse_status mouse_status62,1835
} mouse;72,2014
void mouse_interrupt(74,2024
static int fasync_mouse(98,2878
static int release_mouse(107,3054
static int open_mouse(119,3335
static ssize_t write_mouse(139,3776
static ssize_t read_mouse(145,3901
static unsigned int mouse_poll(177,4706
struct file_operations atixl_busmouse_fops 185,4876
static struct miscdevice atixl_mouse 200,5162
__initfunc(205,5256
int init_module(234,6058
void cleanup_module(239,6116

drivers/char/msbusmouse.c,522
static struct mouse_status mouse;51,1734
static int mouse_irq 52,1768
__initfunc(58,1854
static void ms_mouse_interrupt(64,1951
static int fasync_mouse(96,2855
static int release_mouse(106,3035
static int open_mouse(118,3265
static ssize_t write_mouse(136,3675
static ssize_t read_mouse(142,3800
static unsigned int mouse_poll(164,4351
struct file_operations ms_bus_mouse_fops 172,4522
static struct miscdevice ms_bus_mouse 187,4806
__initfunc(191,4906
int init_module(227,5707
void cleanup_module(232,5763

drivers/char/serial.c,4112
#define CONFIG_SERIAL_NOPAUSE_IO66,2018
#define SERIAL_DO_RESTART67,2051
#define CONFIG_SERIAL_MANY_PORTS72,2147
#define CONFIG_SERIAL_SHARE_IRQ73,2180
#define CONFIG_SERIAL_DETECT_IRQ74,2212
#define CONFIG_SERIAL_MULTIPORT75,2245
#define CONFIG_HUB676,2277
#define CONFIG_SERIAL_SHARE_IRQ83,2389
#define CONFIG_SERIAL_MANY_PORTS89,2488
#define CONFIG_SERIAL_SHARE_IRQ92,2560
#define RS_STROBE_TIME 103,2754
#define RS_ISR_PASS_LIMIT 104,2785
#define IRQ_T(IRQ_T106,2816
#define SERIAL_INLINE108,2897
#define DBG_CNT(DBG_CNT111,2974
#define DBG_CNT(DBG_CNT114,3137
#define _INLINE_ 153,3957
static char *serial_name 156,3990
static char *serial_version 157,4034
static struct tty_driver serial_driver,161,4112
static struct tty_driver serial_driver, callout_driver;161,4112
static int serial_refcount;162,4168
#define WAKEUP_CHARS 165,4267
static struct async_struct *IRQ_ports[172,4411
static struct rs_multiport_struct rs_multiport[174,4490
static int IRQ_timeout[176,4554
static struct console sercons;178,4616
static struct serial_uart_config uart_config[190,4996
static struct serial_state rs_table[204,5401
#define NR_PORTS	208,5491
static struct tty_struct *serial_table[210,5556
static struct termios *serial_termios[211,5606
static struct termios *serial_termios_locked[212,5655
#define MIN(MIN215,5724
static unsigned char *tmp_buf;227,6251
static struct semaphore tmp_buf_sem 228,6282
static inline int serial_paranoia_check(230,6328
static inline unsigned int serial_in(251,6834
static inline unsigned int serial_inp(262,7079
static inline void serial_out(277,7408
static inline void serial_outp(288,7657
static void rs_stop(312,8303
static void rs_start(328,8674
static _INLINE_ void rs_sched_event(369,10055
static _INLINE_ void receive_chars(377,10229
static _INLINE_ void transmit_chars(458,12260
static _INLINE_ void check_modem_status(501,13217
static void rs_interrupt(573,15105
static void rs_interrupt_single(648,16702
static void rs_interrupt_multi(705,18024
static void do_serial_bh(799,20443
static void do_softint(804,20508
static void rs_timer(828,21212
static void figure_IRQ_timeout(892,22983
static int startup(912,23378
static void shutdown(1128,28461
static void change_speed(1236,31377
#define RELEVANT_IFLAG(RELEVANT_IFLAG1345,34355
static void rs_put_char(1390,35862
static void rs_flush_chars(1413,36375
static int rs_write(1431,36819
static int rs_write_room(1501,38465
static int rs_chars_in_buffer(1514,38764
static void rs_flush_buffer(1523,39003
static void rs_send_xchar(1543,39585
static void rs_throttle(1566,40214
static void rs_unthrottle(1591,40800
static int get_serial_info(1624,41606
static int set_serial_info(1649,42276
static int get_lsr_info(1775,46479
static int get_modem_info(1789,46802
static int set_modem_info(1812,47512
static int do_autoconfig(1870,48809
static void rs_break(1897,49338
static int get_multiport_struct(1918,49868
static int set_multiport_struct(1951,50587
static int rs_ioctl(2031,52640
static void rs_set_termios(2163,56823
static void rs_close(2228,58769
static void rs_wait_until_sent(2332,61781
static void rs_hangup(2398,63883
static int block_til_ready(2422,64501
static int get_async_struct(2557,68113
static int rs_open(2597,69157
static inline int line_info(2702,71589
int rs_read_proc(2777,73441
static _INLINE_ void show_serial_version(2815,74389
#define SERIAL_OPT2820,74547
#define SERIAL_OPT2824,74629
#define SERIAL_OPT2828,74709
#define SERIAL_OPT2832,74789
#define SERIAL_OPT2836,74871
static unsigned detect_uart_irq 2853,75383
static void autoconfig(2919,77372
__initfunc(3076,81727
int register_serial(3216,86119
void unregister_serial(3266,87278
int init_module(3281,87604
void cleanup_module(3286,87650
#define BOTH_EMPTY 3326,88647
static inline void wait_for_xmitr(3331,88758
static void serial_console_write(3346,89084
static int serial_console_wait_key(3388,89869
static kdev_t serial_console_device(3418,90406
__initfunc(3429,90711
static struct console sercons 3533,92723
__initfunc 3550,92941

drivers/char/tpqic02.c,3500
#define REALLY_SLOW_IO	72,2552
#define TPQIC02_NAME	104,3284
static struct mtconfiginfo qic02_tape_dynconf 115,3591
static struct qic02_ccb qic02_tape_ccb 117,3712
unsigned long qic02_tape_debug 121,3789
static volatile int ctlbits 128,4021
static struct wait_queue *qic02_tape_transfer 130,4101
static volatile struct mtget ioctl_status;132,4186
static volatile struct tpstatus tperror;134,4259
static char rcs_revision[136,4325
static char rcs_date[137,4375
static volatile flag status_dead 144,4617
static 		flag status_zombie 145,4705
static volatile flag status_bytes_wr 147,4785
static volatile flag status_bytes_rd 148,4859
static volatile unsigned long status_cmd_pending 150,4936
static volatile flag status_expect_int 151,5012
static volatile flag status_timer_on 152,5084
static volatile int  status_error 153,5149
static volatile flag status_eof_detected 154,5224
static volatile flag status_eom_detected 155,5289
static volatile flag status_eot_detected 156,5364
static volatile flag doing_read 157,5429
static volatile flag doing_write 158,5467
static volatile unsigned long dma_bytes_todo;160,5507
static volatile unsigned long dma_bytes_done;161,5553
static volatile unsigned dma_mode 162,5599
static 		flag need_rewind 163,5671
static kdev_t current_tape_dev;165,5705
static int extra_blocks_left 166,5737
static flag return_read_eof 181,6105
static flag return_write_eof 182,6179
static flag reported_read_eof 183,6214
static flag reported_write_eof 184,6281
static char seek_addr_buf[188,6364
static int  mode_access;196,6708
static unsigned long buffaddr 208,7279
static const char *format_names[211,7423
static struct exception_list_type exception_list_type241,8625
} exception_list[245,8759
#define NR_OF_EXC	292,10809
#define CHECK_IOC_SIZE(CHECK_IOC_SIZE297,11013
static void tpqputs(304,11210
static inline void byte_swap_w(316,11525
static void ifc_init(330,11858
static void report_qic_exception(351,12385
static int decode_qic_exception_nr(370,12893
static void handle_qic_exception(390,13349
static inline int is_exception(426,14170
static int tape_reset(436,14450
static int notify_cmd(498,16165
static int wait_for_ready(549,17681
static int send_qic02_data(613,19782
static int send_qic02_cmd(639,20342
static int rdstatus(679,21480
static int get_status(757,23995
static int get_ext_status3(778,24547
static int tp_sense(804,25155
static int wait_for_rewind(887,28014
static int ll_do_qic_cmd(911,28581
static void terminate_read(1025,32247
static void terminate_write(1053,33059
static void finish_rw(1077,33720
static int do_qic_cmd(1092,34101
static int do_ioctl_cmd(1119,34745
static inline void dma_transfer(1361,42519
static int start_dma(1414,44356
static void end_dma(1531,47868
static void qic02_tape_times_out(1597,49660
static void qic02_tape_interrupt(1645,51200
static long long qic02_tape_lseek(1732,53620
static ssize_t qic02_tape_read(1770,55291
static ssize_t qic02_tape_write(1985,61996
static int qic02_tape_open(2173,67192
static int qic02_tape_open_no_use_count(2186,67499
static int qic02_tape_release(2412,72835
static int update_ifc_masks(2451,73821
static int qic02_tape_ioctl(2558,76568
static struct file_operations qic02_tape_fops 2767,81014
static inline int __get_order(2787,81561
static void qic02_release_resources(2802,81762
static int qic02_get_resources(2816,82145
__initfunc(2892,84426
void cleanup_module(2978,86778
int init_module(2987,86933

drivers/char/defkeymap.c,467
u_short plain_map[8,207
u_short shift_map[27,1282
u_short altgr_map[46,2357
u_short ctrl_map[65,3432
u_short shift_ctrl_map[84,4506
u_short alt_map[103,5586
u_short ctrl_alt_map[122,6659
ushort *key_maps[141,7737
unsigned int keymap_count 148,7884
char func_buf[156,8129
char *funcbufptr 187,9002
int funcbufsize 188,9031
int funcbufleft 189,9067
char *func_table[191,9115
struct kbdiacr accent_table[225,9621
unsigned int accent_table_size 262,11074

drivers/char/n_tty.c,1309
#define CONSOLE_DEV 42,1202
#define SYSCONS_DEV 43,1241
#define MIN(MIN46,1297
#define WAKEUP_CHARS 50,1424
#define TTY_THRESHOLD_THROTTLE	57,1629
#define TTY_THRESHOLD_UNTHROTTLE 58,1699
static inline void put_tty_queue(60,1738
static void check_unthrottle(74,2131
static void reset_buffer_flags(87,2483
void n_tty_flush_buffer(98,2763
ssize_t n_tty_chars_in_buffer(115,3112
static int opost(131,3509
static ssize_t opost_block(194,4706
static inline void put_char(256,5856
static void echo_char(263,6014
static inline void finish_erasing(273,6226
static void eraser(282,6375
static inline void isig(391,9020
static inline void n_tty_receive_break(402,9271
static inline void n_tty_receive_overrun(418,9579
static inline void n_tty_receive_parity_error(431,9883
static inline void n_tty_receive_char(448,10252
static int n_tty_receive_room(636,14398
static void n_tty_receive_buf(654,14832
int is_ignored(727,16722
static void n_tty_set_termios(733,16863
static void n_tty_close(798,18685
static int n_tty_open(807,18854
static inline int input_available_p(827,19270
static inline int copy_from_read_buf(846,19854
static ssize_t read_chan(867,20294
static ssize_t write_chan(1051,24821
static unsigned int normal_poll(1120,26351
struct tty_ldisc tty_ldisc_N_TTY 1145,27120

drivers/char/cyclades.c,3874
#define BLOCKMOVE1,0
#define	Z_WAKE2,18
static char rcsid[3,33
#define NR_CARDS 506,20778
#define NR_PORTS 513,20980
#define ZE_V1_NPORTS	515,21009
#define ZO_V1	516,21033
#define ZO_V2	517,21049
#define ZE_V1	518,21065
#define	SERIAL_PARANOIA_CHECK520,21082
#define PAUSE 533,21347
#define PAUSE 535,21383
#define cy_min(cy_min538,21407
#define CHARS_IN_BUF(CHARS_IN_BUF546,21561
#define SPACE_IN_BUF(SPACE_IN_BUF552,21757
#define cy_put_user	594,22693
static unsigned long cy_get_user(596,22723
#define MIN(MIN606,22945
#define IS_CYC_Z(IS_CYC_Z609,23001
#define Z_FPGA_CHECK(Z_FPGA_CHECK611,23050
#define ISZLOADED(ISZLOADED615,23174
#define WAKEUP_CHARS 621,23409
#define STD_COM_FLAGS 623,23454
#define	JIFFIES_DIFF(JIFFIES_DIFF625,23481
static struct tty_driver cy_serial_driver,629,23562
static struct tty_driver cy_serial_driver, cy_callout_driver;629,23562
static int serial_refcount;630,23624
static volatile int cy_irq_triggered;632,23653
static volatile int cy_triggered;633,23691
static int cy_wild_int_mask;634,23725
static volatile ucchar *intr_base_addr;635,23754
static unsigned char *cy_isa_addresses[646,24248
#define NR_ISA_ADDRS 657,24600
static struct cyclades_card cy_card[662,24817
static struct cyclades_port cy_port[667,25010
static int cy_next_channel 669,25058
static struct tty_struct *serial_table[671,25118
static struct termios *serial_termios[672,25168
static struct termios *serial_termios_locked[673,25217
static struct cyclades_card     *IRQ_cards[678,25361
static unsigned char *tmp_buf;690,25953
static struct semaphore tmp_buf_sem 691,25984
static int baud_table[702,26434
static char baud_co_25[707,26627
static char baud_bpr_25[713,26934
static char baud_co_60[717,27149
static char baud_bpr_60[724,27477
static char baud_cor3[729,27713
static char rflow_thr[745,28465
static int cy_chip_offset 753,28809
static unsigned short   cy_pci_nboard 766,28990
static unsigned short   cy_isa_nboard 767,29033
static unsigned short   cy_nboard 768,29076
static unsigned short   cy_pci_dev_id[769,29115
static long cyz_polling_cycle 789,29843
static int cyz_timeron 791,29889
cyz_timerlist 793,29942
serial_paranoia_check(807,30395
cy_sched_event(844,31535
do_cyclades_bh(875,33021
do_softint(881,33114
cyy_issue_cmd(923,34461
static int probe_ready;949,35204
grab_all_interrupts(958,35479
free_all_interrupts(977,35904
check_wild_interrupts(993,36231
get_auto_irq(1037,37484
do_auto_irq(1074,38476
cy_probe(1112,39512
cyy_interrupt(1144,40719
cyz_fetch_msg(1532,58319
cyz_issue_cmd(1563,59229
cyz_update_channel(1599,60202
cyz_interrupt(1623,60780
cyz_poll(1629,60877
startup(1933,69514
start_xmit(2079,73576
shutdown(2111,74458
block_til_ready(2233,77702
cy_open(2445,83916
static void cy_wait_until_sent(2556,86783
cy_close(2625,88933
cy_write(2779,93718
cy_put_char(2864,95868
cy_flush_chars(2899,96767
cy_write_room(2946,98150
cy_chars_in_buffer(2965,98615
set_line_char(3024,100350
get_serial_info(3385,111003
set_serial_info(3408,111705
get_modem_info(3453,113068
set_modem_info(3526,115269
send_break(3740,122005
get_mon_info(3771,122825
set_threshold(3785,123160
get_threshold(3812,123844
set_default_threshold(3838,124459
get_default_threshold(3846,124633
set_timeout(3853,124805
get_timeout(3877,125369
set_default_timeout(3903,125967
get_default_timeout(3911,126135
cy_ioctl(3922,126488
cy_set_termios(4050,130261
cy_throttle(4091,131303
cy_unthrottle(4147,132739
cy_stop(4204,134174
cy_start(4244,135285
cy_flush_buffer(4284,136381
cy_hangup(4330,137888
__initfunc(4364,138863
__initfunc(4449,141902
__initfunc(4544,145778
show_version(4932,160262
cyclades_get_proc_info(4946,160654
__initfunc(5021,162955
init_module(5283,172938
cleanup_module(5289,173006
cy_setup(5325,173839
show_status(5344,174193

drivers/char/vc_screen.c,241
#define HEADER_SIZE	41,1288
vcs_size(44,1322
static long long vcs_lseek(62,1657
#define RETURN(RETURN83,2025
vcs_read(85,2095
vcs_write(180,4235
vcs_open(291,6827
static struct file_operations vcs_fops 299,7012
__initfunc(313,7292

drivers/char/wdt.c,794
static int wdt_is_open=49,1431
static int io=56,1578
static int irq=57,1599
#define WD_TIMO 59,1619
__initfunc(65,1687
static void wdt_ctr_mode(79,1841
static void wdt_ctr_load(87,1951
static int wdt_status(97,2095
void wdt_interrupt(123,2598
static long long wdt_llseek(159,3448
static void wdt_ping(164,3547
static ssize_t wdt_write(173,3706
static ssize_t wdt_read(191,4008
static int wdt_ioctl(214,4434
static int wdt_open(243,5120
static int wdt_release(273,5713
static int wdt_notify_sys(291,6050
static struct file_operations wdt_fops 308,6307
static struct miscdevice wdt_miscdev=321,6517
static struct miscdevice temp_miscdev=329,6624
static struct notifier_block wdt_notifier=342,6826
#define wdt_init 351,6917
void cleanup_module(353,6947
__initfunc(366,7171

drivers/char/consolemap.c,930
static unsigned short translations[24,555
#define MAX_GLYPH 170,9658
static int inv_translate[172,9713
struct uni_pagedir uni_pagedir174,9757
static struct uni_pagedir *dflt;182,9908
static void set_inverse_transl(184,9942
unsigned short *set_translate(209,10493
unsigned char inverse_translate(222,10897
static void update_user_maps(234,11259
int con_set_trans_old(258,11840
int con_get_trans_old(277,12158
int con_set_trans_new(294,12490
int con_get_trans_new(314,12810
extern u8 dfont_unicount[340,13429
extern u16 dfont_unitable[341,13491
static void con_release_unimap(343,13521
void con_free_unimap(365,13952
static int con_unify_unimap(378,14221
con_insert_unipair(419,15063
int con_clear_unimap(445,15719
con_set_unimap(471,16294
con_set_default_unimap(533,17824
con_copy_unimap(580,18792
con_get_unimap(598,19259
void con_protect_unimap(627,19948
conv_uni_to_pc(636,20121
__initfunc(674,21288

drivers/char/selection.c,534
#define MIN(MIN29,650
#define isspace(isspace33,773
       int sel_cons 39,943
static volatile int sel_start 40,1000
static int sel_end;41,1070
static int sel_buffer_lth 42,1090
static char *sel_buffer 43,1121
highlight(50,1353
highlight_pointer(56,1502
sel_pos(61,1597
clear_selection(69,1794
static u32 inwordLut[81,2038
static inline int inword(92,2382
int sel_loadlut(97,2532
static inline int atedge(107,2753
static inline unsigned short limit(113,2897
int set_selection(119,3081
int paste_selection(295,7379

drivers/char/rocket.c,3619
#define ENABLE_PCI46,1490
#define NEW_MODULES50,1550
#define MODULE52,1625
#define MODULE63,1801
#define __initfunc(__initfunc93,2493
#define ROCKET_VERSION 102,2645
#define ROCKET_DATE 103,2676
#define ROCKET_PARANOIA_CHECK106,2737
#define ROCKET_SOFT_FLOW107,2767
#define TIME_STAT_CPU 135,3924
#define TIME_COUNTER 137,4084
#define _INLINE_ 144,4446
#define COMTROL_TIMER 150,4542
/*static*/ char kernel_version[158,4709
static struct r_port *rp_table[161,4765
static struct tty_struct *rocket_table[162,4811
static unsigned int xmit_flags[163,4865
static struct termios *rocket_termios[164,4909
static struct termios *rocket_termios_locked[165,4962
static struct tty_driver rocket_driver,169,5145
static struct tty_driver rocket_driver, callout_driver;169,5145
static int rocket_refcount 170,5201
static int rp_num_ports_open 172,5234
unsigned long board1 174,5269
unsigned long board2 175,5295
unsigned long board3 176,5321
unsigned long board4 177,5347
unsigned long controller 178,5373
unsigned long support_low_speed 179,5403
int rp_baud_base 180,5440
static unsigned long rcktpt_io_addr[181,5467
static int max_board;182,5516
static unsigned long long time_stat 184,5555
static unsigned long time_stat_short 185,5596
static unsigned long time_stat_long 186,5638
static unsigned long time_counter 187,5679
typedef dev_t kdev_t;kdev_t211,6560
int copy_from_user(215,6624
int copy_to_user(226,6837
static inline int signal_pending(237,7046
static unsigned char *tmp_buf 255,7661
static struct semaphore tmp_buf_sem 256,7696
static inline int rocket_paranoia_check(260,7789
static _INLINE_ void rp_do_receive(279,8249
static _INLINE_ void rp_do_transmit(399,11186
static _INLINE_ void rp_handle_port(458,12780
static void rp_do_poll(520,14378
static void init_r_port(618,17198
static int baud_table[660,18235
static void configure_r_port(670,18487
static int block_til_ready(807,21317
static int rp_open(937,24846
static void rp_close(1080,28047
static void rp_set_termios(1212,31409
static void send_break(1267,32613
static void rp_break(1277,32823
static int get_modem_info(1295,33198
static int set_modem_info(1314,33745
static int get_config(1351,34582
static int set_config(1369,35017
static int get_ports(1411,36182
static int rp_ioctl(1433,36723
static char *rp_tty_name(1511,38834
static void rp_send_xchar(1523,39080
static void rp_throttle(1538,39411
static void rp_unthrottle(1559,39871
static void rp_stop(1588,40635
static void rp_start(1605,41028
static void rp_wait_until_sent(1625,41520
static void rp_hangup(1679,42911
static void rp_put_char(1734,44407
static int rp_write(1764,45206
static int rp_write_room(1873,47881
static int rp_chars_in_buffer(1894,48377
static void rp_flush_buffer(1910,48735
static struct pci_dev *pci_find_slot(1934,49310
__initfunc(1962,49976
__initfunc(2051,52077
__initfunc(2106,54032
__initfunc(2158,55387
int init_module(2315,59782
cleanup_module(2321,59833
#define TRUE 2382,61566
#define FALSE 2386,61603
static Byte_t RData[2389,61627
static Byte_t RRegData[2411,62152
CONTROLLER_T sController[2428,63020
Byte_t sIRQMap[2438,63410
Byte_t sBitMapClrTbl[2444,63503
Byte_t sBitMapSetTbl[2449,63578
int sClockPrescale 2454,63653
int sInitController(2526,67161
int sPCIInitController(2667,72950
int sReadAiopID(2720,74706
int sReadAiopNumChan(2746,75712
int sInitChan(2775,76886
void sStopRxProcessor(2927,82048
void sFlushRxFIFO(2952,82906
void sFlushTxFIFO(2995,84751
int sWriteTxPrioByte(3036,86376
void sEnInterrupts(3100,89336
void sDisInterrupts(3145,91135

drivers/char/random.c,4224
#define ROTATE_PARANOIA261,11662
#define POOLWORDS 263,11687
#define POOLBITS 264,11762
#define TAP1	274,12243
#define TAP2	275,12261
#define TAP3	276,12279
#define TAP4	277,12296
#define TAP5	278,12313
#define TAP1	281,12451
#define TAP2	282,12468
#define TAP3	283,12485
#define TAP4	284,12502
#define TAP5	285,12519
#define TAP1	289,12698
#define TAP2	290,12715
#define TAP3	291,12732
#define TAP4	292,12749
#define TAP5	293,12766
#define TAP1	295,12847
#define TAP2	296,12864
#define TAP3	297,12881
#define TAP4	298,12898
#define TAP5	299,12914
#define TAP1	302,13040
#define TAP2	303,13057
#define TAP3	304,13073
#define TAP4	305,13089
#define TAP5	306,13105
#define TAP1	308,13180
#define TAP2	309,13196
#define TAP3	310,13212
#define TAP4	311,13228
#define TAP5	312,13244
#define TAP1	314,13320
#define TAP2	315,13336
#define TAP3	316,13352
#define TAP4	317,13368
#define TAP5	318,13383
#define WAIT_INPUT_BITS 372,16091
#define WAIT_OUTPUT_BITS 379,16341
struct random_bucket random_bucket382,16436
struct random_benchmark random_benchmark393,16633
#define BENCHMARK_INTERVAL 404,16883
struct random_benchmark timer_benchmark;411,17136
struct timer_rand_state timer_rand_state415,17232
static struct random_bucket random_state;421,17341
static struct timer_rand_state keyboard_timer_state;422,17383
static struct timer_rand_state mouse_timer_state;423,17436
static struct timer_rand_state extract_timer_state;424,17486
static struct timer_rand_state *irq_timer_state[425,17538
static struct timer_rand_state *blkdev_timer_state[426,17596
static struct wait_queue *random_read_wait;427,17660
static struct wait_queue *random_write_wait;428,17704
#define MIN(MIN446,18417
extern inline __u32 rotate_left(455,18715
extern inline __u32 rotate_left(461,18820
static inline __u32 int_ln_12bits(480,19220
static inline __u32 int_ln_12bits(489,19399
static void init_std_data(513,19929
static void rand_clear_pool(536,20495
__initfunc(542,20614
void rand_initialize_irq(562,21195
void rand_initialize_blkdev(580,21571
#define MASK(MASK609,22457
static inline void fast_add_entropy_words(610,22524
static void add_entropy_words(683,24597
static void add_timer_randomness(700,25241
void add_keyboard_randomness(774,26930
void add_mouse_randomness(779,27059
void add_interrupt_randomness(784,27178
void add_blkdev_randomness(792,27354
#define USE_SHA831,28615
#define HASH_BUFFER_SIZE 835,28648
#define HASH_EXTRA_SIZE 836,28675
#define HASH_TRANSFORM 837,28702
#define SHA_CODE_SIZE 840,28803
#define f1(f1849,28973
#define f2(f2850,29044
#define f3(f3851,29102
#define f4(f4852,29179
#define K1 856,29274
#define K2 857,29335
#define K3 858,29396
#define K4 859,29457
#define ROTL(ROTL861,29520
#define subRound(subRound863,29585
static void SHATransform(867,29704
#define W 872,29844
#define HASH_BUFFER_SIZE 1072,36925
#define HASH_EXTRA_SIZE 1073,36952
#define HASH_TRANSFORM 1074,36978
#define F1(F11087,37346
#define F2(F21088,37386
#define F3(F31089,37418
#define F4(F41090,37450
#define MD5STEP(MD5STEP1093,37539
static void MD5Transform(1101,37854
static ssize_t extract_entropy(1202,41648
void get_random_bytes(1298,44210
random_read(1304,44333
random_read_unlimited(1356,45405
random_poll(1363,45577
random_write(1378,45947
random_ioctl(1414,46652
struct file_operations random_fops 1522,49406
struct file_operations urandom_fops 1535,49699
#define F(F1562,50659
#define G(G1563,50706
#define H(H1564,50761
#define ROUND(ROUND1572,51068
#define K1 1574,51158
#define K2 1575,51171
#define K3 1576,51197
static __u32 halfMD4Transform 1581,51297
static __u32 twothirdsMD4Transform 1621,52538
#define REKEY_INTERVAL	1681,54398
#define HASH_BITS 1682,54425
__u32 secure_tcp_sequence_number(1684,54447
#define COOKIEBITS 1746,56354
#define COOKIEMASK 1747,56405
static int	syncookie_init 1749,56456
static __u32	syncookie_secret[1750,56487
__u32 secure_tcp_syn_cookie(1752,56545
__u32 check_tcp_syn_cookie(1804,58161
static inline unsigned long long get_clock_cnt(1852,59776
__initfunc(1859,59966
static void begin_benchmark(1871,60213
static void end_benchmark(1879,60380

drivers/char/softdog.c,533
#define TIMER_MARGIN	40,1261
static int soft_margin 42,1320
struct timer_list watchdog_ticktock;52,1451
static int timer_alive 53,1488
static void watchdog_fire(60,1553
static int softdog_open(75,1862
static int softdog_release(90,2161
static void softdog_ping(104,2448
static ssize_t softdog_write(115,2646
static int softdog_ioctl(132,2921
static struct file_operations softdog_fops=161,3519
static struct miscdevice softdog_miscdev=177,3807
__initfunc(184,3900
int init_module(193,4146
void cleanup_module(199,4202

drivers/char/conmakehash.c,205
#define MAX_FONTLEN 23,698
typedef unsigned short unicode;unicode25,723
void usage(27,756
int getunicode(34,913
unicode unitable[48,1198
int unicount[50,1277
void addpair(52,1305
int main(79,1750

drivers/char/istallion.c,10570
#define	BRD_UNKNOWN	57,1958
#define	BRD_STALLION	58,1980
#define	BRD_BRUMBY4	59,2003
#define	BRD_ONBOARD2	60,2025
#define	BRD_ONBOARD	61,2048
#define	BRD_BRUMBY8	62,2070
#define	BRD_BRUMBY16	63,2092
#define	BRD_ONBOARDE	64,2115
#define	BRD_ONBOARD32	65,2138
#define	BRD_ONBOARD2_32	66,2162
#define	BRD_ONBOARDRS	67,2189
#define	BRD_EASYIO	68,2214
#define	BRD_ECH	69,2236
#define	BRD_ECHMC	70,2256
#define	BRD_ECP	71,2277
#define BRD_ECPE	72,2297
#define	BRD_ECPMC	73,2317
#define	BRD_ECHPCI	74,2338
#define	BRD_ECH64PCI	75,2360
#define	BRD_EASYIOPCI	76,2384
#define	BRD_ECPPCI	77,2409
#define	BRD_BRUMBY	79,2432
} stlconf_t;stlconf_t127,4585
static stlconf_t	stli_brdconf[129,4599
static int	stli_nrbrds 133,4682
#define	STLI_EISAPROBE	140,4936
#define	STL_SIOMEMMAJOR	149,5187
#define	STL_SERIALMAJOR	152,5246
#define	STL_CALLOUTMAJOR	155,5306
#define	STL_DRVTYPSERIAL	158,5342
#define	STL_DRVTYPCALLOUT	159,5369
static char	*stli_drvtitle 167,5616
static char	*stli_drvname 168,5693
static char	*stli_drvversion 169,5734
static char	*stli_serialname 170,5774
static char	*stli_calloutname 171,5813
static struct tty_driver	stli_serial;173,5853
static struct tty_driver	stli_callout;174,5891
static struct tty_struct	*stli_ttys[175,5930
static struct termios		*stli_termios[176,5980
static struct termios		*stli_termioslocked[177,6031
static int			stli_refcount;178,6088
static char			*stli_tmpwritebuf 187,6463
static struct semaphore		stli_tmpwritesem 188,6512
#define	STLI_TXBUFSIZE	190,6564
static char			*stli_txcookbuf 199,6935
static int			stli_txcooksize 200,6982
static int			stli_txcookrealsize 201,7016
static struct tty_struct	*stli_txcooktty 202,7054
static struct termios		stli_deftermios 209,7325
static comstats_t	stli_comstats;222,7541
static combrd_t		stli_brdstats;223,7574
static asystats_t	stli_cdkstats;224,7606
static stlibrd_t	stli_dummybrd;225,7639
static stliport_t	stli_dummyport;226,7671
static stlibrd_t	*stli_brds[230,7787
static int		stli_shared 232,7830
#define	BST_FOUND	240,8096
#define	BST_STARTED	241,8118
#define	ST_INITIALIZING	249,8428
#define	ST_OPENING	250,8454
#define	ST_CLOSING	251,8475
#define	ST_CMDING	252,8496
#define	ST_TXBUSY	253,8516
#define	ST_RXING	254,8536
#define	ST_DOFLUSHRX	255,8555
#define	ST_DOFLUSHTX	256,8578
#define	ST_DOSIGS	257,8601
#define	ST_RXSTOP	258,8621
#define	ST_GETSIGS	259,8642
static char	*stli_brdnames[265,8791
static char	*board0[307,9539
static char	*board1[308,9563
static char	*board2[309,9587
static char	*board3[310,9611
static char	**stli_brdsp[312,9636
typedef struct stlibrdtype stlibrdtype324,9855
} stlibrdtype_t;stlibrdtype_t327,9908
static stlibrdtype_t	stli_brdstr[329,9926
static unsigned long	stli_eisamemprobeaddrs[407,12287
static int	stli_eisamempsize 415,12583
int		stli_eisaprobe 416,12670
#define	PCI_VENDOR_ID_STALLION	423,12815
#define	PCI_DEVICE_ID_ECRA	426,12888
#define	ECP_IOSIZE	437,13222
#define	ECP_MEMSIZE	439,13244
#define	ECP_PCIMEMSIZE	440,13277
#define	ECP_ATPAGESIZE	442,13314
#define	ECP_MCPAGESIZE	443,13348
#define	ECP_EIPAGESIZE	444,13382
#define	ECP_PCIPAGESIZE	445,13417
#define	STL_EISAID	447,13454
#define	ECP_ATIREG	452,13541
#define	ECP_ATCONFR	453,13562
#define	ECP_ATMEMAR	454,13584
#define	ECP_ATMEMPR	455,13606
#define	ECP_ATSTOP	456,13628
#define	ECP_ATINTENAB	457,13651
#define	ECP_ATENABLE	458,13678
#define	ECP_ATDISABLE	459,13704
#define	ECP_ATADDRMASK	460,13731
#define	ECP_ATADDRSHFT	461,13762
#define	ECP_EIIREG	466,13850
#define	ECP_EIMEMARL	467,13871
#define	ECP_EICONFR	468,13894
#define	ECP_EIMEMARH	469,13916
#define	ECP_EIENABLE	470,13939
#define	ECP_EIDISABLE	471,13964
#define	ECP_EISTOP	472,13990
#define	ECP_EIEDGE	473,14013
#define	ECP_EILEVEL	474,14037
#define	ECP_EIADDRMASKL	475,14062
#define	ECP_EIADDRSHFTL	476,14097
#define	ECP_EIADDRMASKH	477,14124
#define	ECP_EIADDRSHFTH	478,14159
#define	ECP_EIBRDENAB	479,14186
#define	ECP_EISAID	481,14215
#define	ECP_MCIREG	487,14358
#define	ECP_MCCONFR	488,14379
#define	ECP_MCSTOP	489,14401
#define	ECP_MCENABLE	490,14425
#define	ECP_MCDISABLE	491,14451
#define	ECP_PCIIREG	497,14594
#define	ECP_PCICONFR	498,14616
#define	ECP_PCISTOP	499,14639
#define	ONB_IOSIZE	505,14810
#define	ONB_MEMSIZE	506,14832
#define	ONB_ATPAGESIZE	507,14864
#define	ONB_MCPAGESIZE	508,14899
#define	ONB_EIMEMSIZE	509,14934
#define	ONB_EIPAGESIZE	510,14969
#define	ONB_ATIREG	515,15069
#define	ONB_ATMEMAR	516,15090
#define	ONB_ATCONFR	517,15112
#define	ONB_ATSTOP	518,15134
#define	ONB_ATENABLE	519,15157
#define	ONB_ATDISABLE	520,15183
#define	ONB_ATADDRMASK	521,15210
#define	ONB_ATADDRSHFT	522,15242
#define	ONB_MEMENABLO	524,15269
#define	ONB_MEMENABHI	525,15293
#define	ONB_EIIREG	530,15386
#define	ONB_EIMEMARL	531,15407
#define	ONB_EICONFR	532,15430
#define	ONB_EIMEMARH	533,15452
#define	ONB_EIENABLE	534,15475
#define	ONB_EIDISABLE	535,15500
#define	ONB_EISTOP	536,15526
#define	ONB_EIEDGE	537,15549
#define	ONB_EILEVEL	538,15573
#define	ONB_EIADDRMASKL	539,15598
#define	ONB_EIADDRSHFTL	540,15633
#define	ONB_EIADDRMASKH	541,15660
#define	ONB_EIADDRSHFTH	542,15695
#define	ONB_EIBRDENAB	543,15722
#define	ONB_EISAID	545,15751
#define	BBY_IOSIZE	551,15906
#define	BBY_MEMSIZE	552,15928
#define	BBY_PAGESIZE	553,15960
#define	BBY_ATIREG	555,15994
#define	BBY_ATCONFR	556,16015
#define	BBY_ATSTOP	557,16037
#define	STAL_IOSIZE	563,16194
#define	STAL_MEMSIZE	564,16217
#define	STAL_PAGESIZE	565,16250
#define	ECH_PNLSTATUS	573,16547
#define	ECH_PNL16PORT	574,16571
#define	ECH_PNLIDMASK	575,16598
#define	ECH_PNLXPID	576,16625
#define	ECH_PNLINTRPEND	577,16650
#define	EBRDINIT(EBRDINIT588,17168
#define	EBRDENABLE(EBRDENABLE592,17253
#define	EBRDDISABLE(EBRDDISABLE596,17343
#define	EBRDINTR(EBRDINTR600,17436
#define	EBRDRESET(EBRDRESET604,17522
#define	EBRDGETMEMPTR(EBRDGETMEMPTR608,17610
#define	STL_MAXBAUD	614,17773
#define	STL_BAUDBASE	615,17800
#define	STL_CLOSEDELAY	616,17828
#define	MINOR2BRD(MINOR2BRD623,18024
#define	MINOR2PORT(MINOR2PORT624,18070
static unsigned int	stli_baudrates[631,18297
#define	MIN(MIN642,18603
#define	TOLOWER(TOLOWER645,18663
static struct file_operations	stli_fsiomem 777,25228
static struct timer_list	stli_timerlist 803,25977
static int	stli_timeron 807,26054
#define	STLI_TIMEOUT	812,26142
int init_module(822,26323
void cleanup_module(840,26574
static void stli_argbrds(911,28245
static unsigned long stli_atol(944,28940
static int stli_parsebrd(980,29591
static void *stli_memalloc(1021,30553
static int stli_open(1028,30719
static void stli_close(1158,34403
static int stli_initopen(1251,36946
static int stli_rawopen(1303,38420
static int stli_rawclose(1384,40496
static int stli_cmdwait(1461,42355
static int stli_setport(1504,43407
static void stli_delay(1535,44263
static int stli_waitcarrier(1554,44692
static int stli_write(1624,46291
static void stli_putchar(1753,50052
static void stli_flushchars(1780,50832
static int stli_writeroom(1875,53051
static int stli_charsinbuffer(1935,54612
static void stli_getserial(1983,55773
static int stli_setserial(2019,56738
static int stli_ioctl(2051,57615
static void stli_settermios(2194,61653
static void stli_throttle(2244,63315
static void stli_unthrottle(2269,63889
static void stli_stop(2293,64370
static void stli_start(2327,65111
static void stli_dohangup(2366,66170
static void stli_hangup(2391,66782
static void stli_flushbuffer(2449,68341
static void stli_breakctl(2498,69526
static void stli_waituntilsent(2539,70454
static void stli_sendxchar(2569,71079
#define	MAXLINE	2605,71926
static int stli_portinfo(2613,72129
static int stli_readproc(2674,73716
static void stli_sendcmd(2751,75731
static inline void stli_read(2803,77199
static inline void stli_dodelaycmd(2870,78872
static inline int stli_hostcmd(2918,80648
static inline void stli_brdpoll(3079,84995
static void stli_poll(3145,87081
static void stli_mkasyport(3179,87826
static void stli_mkasysigs(3302,90896
static long stli_mktiocm(3326,91476
static inline int stli_initports(3351,92168
static void stli_ecpinit(3396,93301
static void stli_ecpenable(3415,93758
static void stli_ecpdisable(3425,94007
static char *stli_ecpgetmemptr(3435,94259
static void stli_ecpreset(3461,94919
static void stli_ecpintr(3475,95244
static void stli_ecpeiinit(3489,95530
static void stli_ecpeienable(3511,96150
static void stli_ecpeidisable(3518,96334
static char *stli_ecpeigetmemptr(3525,96520
static void stli_ecpeireset(3554,97238
static void stli_ecpmcenable(3568,97563
static void stli_ecpmcdisable(3575,97747
static char *stli_ecpmcgetmemptr(3582,97933
static void stli_ecpmcreset(3603,98515
static void stli_ecppciinit(3617,98840
static char *stli_ecppcigetmemptr(3631,99159
static void stli_ecppcireset(3657,99833
static void stli_onbinit(3671,100136
static void stli_onbenable(3692,100632
static void stli_onbdisable(3702,100899
static char *stli_onbgetmemptr(3712,101169
static void stli_onbreset(3734,101704
static void stli_onbeinit(3753,102086
static void stli_onbeenable(3777,102743
static void stli_onbedisable(3787,102994
static char *stli_onbegetmemptr(3797,103248
static void stli_onbereset(3826,103964
static void stli_bbyinit(3845,104349
static char *stli_bbygetmemptr(3862,104699
static void stli_bbyreset(3888,105355
static void stli_stalinit(3907,105741
static char *stli_stalgetmemptr(3920,105979
static void stli_stalreset(3942,106515
static inline int stli_initecp(3963,106958
static inline int stli_initonb(4117,111198
static int stli_startbrd(4276,115434
__initfunc(4389,118391
static inline int stli_eisamemprobe(4451,119879
static inline int stli_findeisabrds(4555,122918
static inline int stli_getbrdnr(4629,124627
static inline int stli_initpcibrd(4653,125094
static inline int stli_findpcibrds(4695,126181
static stlibrd_t *stli_allocbrd(4724,126680
static inline int stli_initbrds(4747,127200
static ssize_t stli_memread(4844,129511
static ssize_t stli_memwrite(4894,130713
static int stli_getbrdstats(4944,131840
static stliport_t *stli_getport(4981,132865
static int stli_portcmdstats(5006,133590
static int stli_getportstats(5081,136102
static int stli_clrportstats(5111,136808
static int stli_getportstruct(5148,137729
static int stli_getbrdstruct(5167,138237
static int stli_memopen(5188,138803
static int stli_memclose(5196,138980
static int stli_memioctl(5210,139342
__initfunc(5307,141419

drivers/char/stallion.c,9094
#define	BRD_EASYIO	56,1874
#define	BRD_ECH	57,1896
#define	BRD_ECHMC	58,1916
#define	BRD_ECHPCI	59,1937
#define	BRD_ECH64PCI	60,1959
#define	BRD_EASYIOPCI	61,1983
} stlconf_t;stlconf_t95,3331
static stlconf_t	stl_brdconf[97,3345
static int	stl_nrbrds 101,3425
#define	STL_SIOMEMMAJOR	110,3716
#define	STL_SERIALMAJOR	113,3775
#define	STL_CALLOUTMAJOR	116,3835
#define	STL_DRVTYPSERIAL	119,3871
#define	STL_DRVTYPCALLOUT	120,3898
#define	STL_TXBUFLOW	126,4038
#define	STL_TXBUFSIZE	127,4064
static char	*stl_drvtitle 135,4311
static char	*stl_drvname 136,4375
static char	*stl_drvversion 137,4414
static char	*stl_serialname 138,4453
static char	*stl_calloutname 139,4491
static struct tty_driver	stl_serial;141,4530
static struct tty_driver	stl_callout;142,4567
static struct tty_struct	*stl_ttys[143,4605
static struct termios		*stl_termios[144,4654
static struct termios		*stl_termioslocked[145,4704
static int			stl_refcount 146,4760
static char			*stl_tmpwritebuf;155,5138
static struct semaphore		stl_tmpwritesem 156,5170
static struct termios		stl_deftermios 163,5404
static comstats_t	stl_comstats;176,5619
static combrd_t		stl_brdstats;177,5651
static stlbrd_t		stl_dummybrd;178,5682
static stlport_t	stl_dummyport;179,5713
static char		stl_unwanted[184,5811
static int	stl_gotintrs[191,6026
static int	stl_numintrs 192,6064
static stlbrd_t		*stl_brds[196,6175
#define	BRD_FOUND	202,6322
#define	ASYI_TXBUSY	209,6547
#define	ASYI_TXLOW	210,6569
#define	ASYI_DCDCHANGE	211,6590
#define	ASYI_TXFLOWED	212,6615
static char	*stl_brdnames[218,6766
static char	*board0[259,7539
static char	*board1[260,7563
static char	*board2[261,7587
static char	*board3[262,7611
static char	**stl_brdsp[264,7636
typedef struct stlbrdtype stlbrdtype276,7854
} stlbrdtype_t;stlbrdtype_t279,7906
static stlbrdtype_t	stl_brdstr[281,7923
#define	EIO_8PORTRS	336,9559
#define	EIO_4PORTRS	337,9584
#define	EIO_8PORTDI	338,9609
#define	EIO_8PORTM	339,9634
#define	EIO_MK3	340,9658
#define	EIO_IDBITMASK	341,9680
#define	EIO_BRDMASK	343,9708
#define	ID_BRD4	344,9733
#define	ID_BRD8	345,9755
#define	ID_BRD16	346,9777
#define	EIO_INTRPEND	348,9800
#define	EIO_INTEDGE	349,9826
#define	EIO_INTLEVEL	350,9851
#define	EIO_0WS	351,9877
#define	ECH_ID	353,9900
#define	ECH_IDBITMASK	354,9921
#define	ECH_BRDENABLE	355,9948
#define	ECH_BRDDISABLE	356,9975
#define	ECH_INTENABLE	357,10003
#define	ECH_INTDISABLE	358,10030
#define	ECH_INTLEVEL	359,10058
#define	ECH_INTEDGE	360,10084
#define	ECH_INTRPEND	361,10109
#define	ECH_BRDRESET	362,10135
#define	ECHMC_INTENABLE	364,10162
#define	ECHMC_BRDRESET	365,10191
#define	ECH_PNLSTATUS	367,10220
#define	ECH_PNL16PORT	368,10244
#define	ECH_PNLIDMASK	369,10271
#define	ECH_PNLXPID	370,10298
#define	ECH_PNLINTRPEND	371,10323
#define	ECH_ADDR2MASK	373,10353
static unsigned char	stl_vecmap[380,10578
#define	BRDENABLE(BRDENABLE392,11027
#define	BRDDISABLE(BRDDISABLE399,11307
#define	STL_CD1400MAXBAUD	404,11478
#define	STL_SC26198MAXBAUD	405,11511
#define	STL_BAUDBASE	407,11546
#define	STL_CLOSEDELAY	408,11575
#define	PCI_VENDOR_ID_STALLION	418,11802
#define	PCI_DEVICE_ID_ECHPCI832	421,11880
#define	PCI_DEVICE_ID_ECHPCI864	424,11959
#define	PCI_DEVICE_ID_EIOPCI	427,12035
typedef struct stlpcibrd stlpcibrd433,12140
} stlpcibrd_t;stlpcibrd_t437,12232
static stlpcibrd_t	stl_pcibrds[439,12248
static int	stl_nrpcibrds 446,12548
#define	MINOR2BRD(MINOR2BRD455,12782
#define	MINOR2PORT(MINOR2PORT456,12828
static unsigned int	stl_baudrates[463,13055
#define	MIN(MIN472,13279
#define	TOLOWER(TOLOWER475,13339
typedef struct uart uart612,19976
} uart_t;uart_t627,20700
#define	stl_panelinit	632,20788
#define	stl_portinit	633,20853
#define	stl_setport	634,20915
#define	stl_getsignals	635,20975
#define	stl_setsignals	636,21041
#define	stl_enablerxtx	637,21107
#define	stl_startrxtx	638,21173
#define	stl_disableintrs	639,21237
#define	stl_sendbreak	640,21306
#define	stl_flowctrl	641,21370
#define	stl_sendflow	642,21432
#define	stl_flush	643,21494
#define	stl_datastate	644,21550
static uart_t stl_cd1400uart 651,21748
#define	EREG_ADDR	672,22234
#define	EREG_DATA	673,22254
#define	EREG_RXACK	674,22274
#define	EREG_TXACK	675,22295
#define	EREG_MDACK	676,22316
#define	EREG_BANKSIZE	678,22338
#define	CD1400_CLK	680,22363
#define	CD1400_CLK8M	681,22391
static int	stl_cd1400clkdivs[688,22634
static uart_t stl_sc26198uart 697,22869
#define	XP_DATA	717,23300
#define	XP_ADDR	718,23319
#define	XP_MODID	719,23338
#define	XP_STATUS	720,23357
#define	XP_IACK	721,23377
#define	XP_BANKSIZE	723,23397
static unsigned int	sc26198_baudtable[729,23556
#define	SC26198_NRBAUDS	735,23753
static struct file_operations	stl_fsiomem 743,24054
int init_module(769,24587
void cleanup_module(787,24837
static void stl_argbrds(866,26859
static unsigned long stl_atol(901,27600
static int stl_parsebrd(937,28250
static void *stl_memalloc(986,29362
static stlbrd_t *stl_allocbrd(997,29601
static int stl_open(1015,30021
static int stl_waitcarrier(1139,33461
static void stl_close(1198,34715
static void stl_delay(1286,37046
static int stl_write(1305,37466
static void stl_putchar(1382,39309
static void stl_flushchars(1422,40205
static int stl_writeroom(1448,40731
static int stl_charsinbuffer(1481,41690
static void stl_getserial(1513,42389
static int stl_setserial(1554,43495
static int stl_ioctl(1583,44348
static void stl_settermios(1690,47251
static void stl_throttle(1728,48240
static void stl_unthrottle(1750,48661
static void stl_stop(1773,49124
static void stl_start(1795,49559
static void stl_hangup(1819,50100
static void stl_flushbuffer(1855,51032
static void stl_breakctl(1878,51554
static void stl_waituntilsent(1897,51970
static void stl_sendxchar(1927,52576
#define	MAXLINE	1951,53080
static int stl_portinfo(1959,53283
static int stl_readproc(2003,54480
static void stl_intr(2089,56468
static void stl_eiointr(2113,56945
static void stl_echatintr(2130,57308
static void stl_echmcaintr(2157,57944
static void stl_echpciintr(2180,58466
static void stl_echpci64intr(2208,59075
static void stl_offintr(2230,59583
__initfunc(2282,60902
__initfunc(2313,61541
static inline int stl_initeio(2366,62942
static int inline stl_initech(2500,66125
__initfunc(2702,71717
static inline int stl_getbrdnr(2752,72866
static inline int stl_initpcibrd(2776,73325
static inline int stl_findpcibrds(2846,75062
static inline int stl_initbrds(2887,75939
static int stl_getbrdstats(2943,77111
static stlport_t *stl_getport(2983,78201
static int stl_getportstats(3011,79052
static int stl_clrportstats(3068,80644
static int stl_getportstruct(3092,81315
static int stl_getbrdstruct(3111,81813
static int stl_memopen(3132,82369
static int stl_memclose(3140,82545
static int stl_memioctl(3154,82891
__initfunc(3206,84180
static int stl_cd1400getreg(3291,86996
static void stl_cd1400setreg(3297,87148
static int stl_cd1400updatereg(3303,87312
static int stl_cd1400panelinit(3321,87815
static void stl_cd1400portinit(3377,89300
static void stl_cd1400ccrwait(3407,90278
static void stl_cd1400setport(3428,90729
static void stl_cd1400setsignals(3654,96693
static int stl_cd1400getsignals(3689,97427
static void stl_cd1400enablerxtx(3728,98357
static void stl_cd1400startrxtx(3765,99139
static void stl_cd1400disableintrs(3806,100066
static void stl_cd1400sendbreak(3824,100514
static void stl_cd1400flowctrl(3852,101148
static void stl_cd1400sendflow(3917,102779
static void stl_cd1400flush(3953,103634
static int stl_cd1400datastate(3985,104461
static void stl_cd1400eiointr(4003,104838
static void stl_cd1400echintr(4033,105518
static inline int stl_cd1400breakisr(4062,106244
static void stl_cd1400txisr(4104,107768
static void stl_cd1400rxisr(4185,110224
static void stl_cd1400mdmisr(4295,113314
static int stl_sc26198getreg(4335,114472
static void stl_sc26198setreg(4341,114635
static int stl_sc26198updatereg(4347,114812
static int stl_sc26198getglobreg(4363,115213
static void stl_sc26198setglobreg(4370,115366
static int stl_sc26198panelinit(4385,115794
static void stl_sc26198portinit(4433,116972
static void stl_sc26198setport(4461,117757
static void stl_sc26198setsignals(4659,122660
static int stl_sc26198getsignals(4695,123434
static void stl_sc26198enablerxtx(4727,124131
static void stl_sc26198startrxtx(4762,124842
static void stl_sc26198disableintrs(4799,125637
static void stl_sc26198sendbreak(4818,126050
static void stl_sc26198flowctrl(4845,126624
static void stl_sc26198sendflow(4917,128562
static void stl_sc26198flush(4959,129633
static int stl_sc26198datastate(4990,130470
static void stl_sc26198wait(5021,131122
static inline void stl_sc26198txunflow(5044,131627
static void stl_sc26198intr(5062,132114
static void stl_sc26198txisr(5096,133144
static void stl_sc26198rxisr(5159,135097
static void inline stl_sc26198rxbadch(5218,136726
static void stl_sc26198rxbadchars(5282,138391
static void stl_sc26198otherisr(5315,139245

drivers/char/bttv.c,4609
#define mdelay(mdelay52,1598
#define signal_pending(signal_pending53,1633
#define sigfillset(sigfillset54,1704
static inline int time_before(56,1729
copy_to_user(62,1859
copy_from_user(69,1993
#define ioremap 74,2102
#define iounmap 75,2126
#define DEBUG(DEBUG83,2245
#define IDEBUG(IDEBUG84,2284
#define BTTV_MAX 96,2573
static unsigned int vidmem=101,2672
static int triton1=102,2741
#define USE_PLL 105,2812
#define CARD_DEFAULT 109,2900
static unsigned int remap[112,2931
static unsigned int radio[113,2989
static unsigned int card[114,3026
static unsigned int pll[116,3163
static int bttv_num;118,3240
static struct bttv bttvs[119,3293
#define I2C_TIMING 121,3330
#define I2C_DELAY 122,3358
#define I2C_SET(I2C_SET124,3382
#define I2C_GET(I2C_GET126,3476
#define EEPROM_WRITE_DELAY 128,3519
#define BURSTOFFSET 129,3555
static inline unsigned long uvirt_to_phys(140,3807
static inline unsigned long uvirt_to_bus(160,4221
static inline unsigned long kvirt_to_phys(168,4467
static inline unsigned long kvirt_to_bus(173,4578
static void * rvmalloc(178,4687
static void rvfree(199,5109
static int fbuffer_alloc(226,5634
static void i2c_setlines(244,6073
static int i2c_getdataline(252,6291
static int I2CRead(261,6470
static int I2CWrite(298,7238
static void readee(339,7998
static void writeee(362,8360
void attach_inform(377,8620
void detach_inform(396,9140
static struct i2c_bus bttv_i2c_bus_template 411,9399
static unsigned char eeprom_data[433,9812
static struct HAUPPAUGE_TUNER HAUPPAUGE_TUNER434,9851
hauppauge_tuner[439,9924
hauppauge_eeprom(468,11209
hauppauge_msp_reset(482,11689
struct tvcardtvcard497,12191
static struct tvcard tvcards[509,12466
#define TVCARDS 545,13915
static void audio(547,13965
extern inline void bt848_dma(587,14833
static void bt848_cap(596,14980
static void set_pll_freq(623,15533
static int set_pll(646,16049
static void bt848_muxsel(703,17711
struct tvnorm tvnorm740,18814
static struct tvnorm tvnorms[752,19039
#define TVNORMS 807,20812
#define VBI_SPL 808,20861
#define VBI_RISC 811,20929
static void make_vbitab(813,21002
int fmtbppx2[845,21996
int palette2fmt[849,22077
#define PALETTEFMT_MAX 868,22540
static int make_rawrisctab(870,22598
static int  make_prisctab(902,23634
static int  make_vrisctab(1011,26399
static unsigned char lmaskt[1079,28241
static unsigned char rmaskt[1081,28326
static void clip_draw_rectangle(1084,28412
static void make_clip_tab(1137,29684
static inline void bt848_set_eogeo(1233,32900
static void bt848_set_geo(1254,33568
int bpp2fmt[1324,35527
static void bt848_set_winsize(1329,35658
static void set_freq(1356,36451
static int vgrab(1394,37529
static long bttv_write(1478,39718
static long bttv_read(1483,39839
static int bttv_open(1530,40773
static void bttv_close(1558,41539
extern inline void bt848_bright(1599,42497
extern inline void bt848_hue(1604,42602
extern inline void bt848_contrast(1609,42695
extern inline void bt848_sat_u(1619,42921
static inline void bt848_sat_v(1629,43141
static int bttv_ioctl(1644,43388
static int bttv_init_done(2199,59015
static int bttv_mmap(2213,59341
static struct video_device bttv_template=2239,59920
static long vbi_read(2260,60238
static unsigned int vbi_poll(2305,61076
static int vbi_open(2320,61363
static void vbi_close(2332,61571
static int vbi_ioctl(2343,61738
static struct video_device vbi_template=2348,61836
static int radio_open(2369,62124
static void radio_close(2385,62405
static long radio_read(2395,62583
static int radio_ioctl(2400,62698
static struct video_device radio_template=2460,63987
struct vidbases vidbases2481,64399
static struct vidbases vbs[2488,64479
static uint dec_offsets[2521,65994
#define NR_CARDS 2528,66066
static int find_vga(2535,66259
static int find_vga(2615,68093
#define  TRITON_PCON	2709,70593
#define  TRITON_BUS_CONCURRENCY 2710,70631
#define  TRITON_STREAMING	2711,70672
#define  TRITON_WRITE_BURST	2712,70707
#define  TRITON_PEER_CONCURRENCY 2713,70744
static void handle_chipset(2718,70825
static void handle_chipset(2782,72577
static void init_tda8425(2854,74429
static void init_tda9840(2863,74881
static void init_tda9850(2868,75009
static void idcard(2883,75620
static void bt848_set_risc_jmps(3017,79483
static int init_bt848(3069,80784
static void bttv_irq(3225,84981
int configure_bt848(3384,88865
static int find_bt848(3496,92850
static int find_bt848(3520,93611
static void release_bttv(3684,99238
EXPORT_NO_SYMBOLS;3754,100983
int init_module(3756,101003
void cleanup_module(3785,101316

drivers/char/pcxx.c,2537
#define VERSION 83,3014
static struct board_info boards[95,3277
static int verbose 105,3589
static int debug 106,3613
static int io[110,3679
static int membase[111,3721
static int memsize[112,3763
static int altpin[113,3805
static int numports[114,3847
static int numcards 130,4271
static int nbdevs 131,4296
static struct channel    *digi_channels;133,4321
static struct tty_struct **pcxe_table;134,4362
static struct termios    **pcxe_termios;135,4401
static struct termios    **pcxe_termios_locked;136,4442
int pcxx_ncook=138,4492
int pcxx_nbios=139,4526
#define MIN(MIN141,4561
#define pcxxassert(pcxxassert142,4602
#define FEPTIMEOUT 144,4666
#define SERIAL_TYPE_NORMAL	145,4694
#define SERIAL_TYPE_CALLOUT	146,4723
#define PCXE_EVENT_HANGUP 147,4753
struct tty_driver pcxe_driver;149,4784
struct tty_driver pcxe_callout;150,4815
static int pcxe_refcount;151,4847
#define TZ_BUFSZ 190,6681
#define pcxe_init 198,6790
void cleanup_module(205,6931
static inline struct channel *chan(244,7834
static inline void memwinon(257,8173
static inline void memwinoff(265,8348
static inline void globalwinon(272,8511
static inline void rxwinon(280,8676
static inline void txwinon(288,8830
static inline void memoff(296,8983
static inline void assertgwinon(303,9126
static inline void assertmemoff(309,9280
static inline void pcxe_sched_event(315,9429
static void pcxx_error(322,9588
static int pcxx_waitcarrier(327,9697
int pcxe_open(388,11076
static void shutdown(524,14416
static void pcxe_close(557,14992
void pcxe_hangup(649,17582
static int pcxe_write(670,17936
static void pcxe_put_char(761,19726
static int pcxe_write_room(768,19836
static int pcxe_chars_in_buffer(805,20489
static void pcxe_flush_buffer(850,21344
static void pcxe_flush_chars(876,21856
__initfunc(897,22319
__initfunc(1088,25713
static void pcxxpoll(1632,39544
static void doevent(1669,40159
static void pcxxdelay(1781,42779
fepcmd(1789,42880
static unsigned termios2digi_c(1848,44126
static unsigned termios2digi_i(1872,44897
static unsigned termios2digi_h(1881,45127
static void pcxxparam(1908,45703
static void receive_data(1985,47409
static int pcxe_ioctl(2076,49006
static void pcxe_set_termios(2324,54121
static void do_pcxe_bh(2347,54638
static void do_softint(2353,54700
static void pcxe_stop(2370,55120
static void pcxe_throttle(2388,55469
static void pcxe_unthrottle(2406,55822
static void pcxe_start(2429,56305
void digi_send_break(2454,56834
static void setup_empty_event(2476,57341

drivers/char/i2c.c,882
#define REGPRINT(REGPRINT20,376
#define I2C_DEBUG(I2C_DEBUG21,417
static int scan 23,459
static int verbose 24,485
static int i2c_debug 25,511
static struct i2c_bus    *busses[35,737
static struct i2c_driver *drivers[36,784
static int bus_count 37,835
int i2c_init(44,979
static void i2c_attach_device(58,1277
static void i2c_detach_device(115,2460
int i2c_register_bus(153,3479
int i2c_unregister_bus(198,4296
int i2c_register_driver(228,4890
int i2c_unregister_driver(256,5412
int i2c_control_device(286,6042
#define I2C_SET(I2C_SET303,6509
#define I2C_GET(I2C_GET304,6576
void i2c_start(306,6637
void i2c_stop(315,6794
void i2c_one(323,6918
void i2c_zero(330,7014
int i2c_ack(337,7111
int i2c_sendbyte(348,7255
unsigned char i2c_readbyte(362,7569
int i2c_read(382,7980
int i2c_write(396,8211
int init_module(434,9129
void cleanup_module(439,9176

drivers/char/wd501p.h,710
#define WDT_COUNT0	24,434
#define WDT_COUNT1	25,461
#define WDT_COUNT2	26,488
#define WDT_CR	27,515
#define WDT_SR	28,539
#define WDT_RT	29,563
#define WDT_UNUSED	30,587
#define WDT_DC	31,614
#define WDC_SR_WCCR	33,639
#define WDC_SR_TGOOD	34,679
#define WDC_SR_ISOI0	35,703
#define WDC_SR_ISII1	36,727
#define WDC_SR_FANGOOD	37,751
#define WDC_SR_PSUOVER	38,778
#define WDC_SR_PSUUNDR	39,822
#define WDC_SR_IRQ	40,866
#define FEATUREMAP1	50,1164
#define WDT_OPTION_MASK	51,1187
#define FEATUREMAP1	53,1311
#define WDT_OPTION_MASK	54,1347
#define FEATUREMAP2	57,1458
#define CONFIG_WDT_50061,1512
#define FEATUREMAP1	65,1586
#define FEATUREMAP2	66,1637
#define WDT_OPTION_MASK	67,1690

drivers/char/sysrq.c,318
extern int console_loglevel;33,731
extern struct vfsmount *vfsmntlist;34,760
static void send_sig_all(38,840
void handle_sysrq(56,1247
static void all_files_read_only(153,3664
static int is_local_disk(162,3933
static void go_sync(185,4381
int emergency_sync_scheduled;232,5612
void do_emergency_sync(234,5643

drivers/char/ftape/compressor/lzrw3.c,747
#define U(U89,6297
#define SIZE_P_BYTE 90,6333
#define SIZE_WORD 91,6378
#define ALIGNMENT_FUDGE 92,6423
#define MEM_REQ 93,6455
static struct compress_identity identity 95,6516
EXPORT void lzrw3_compress(118,7846
#define FLAG_BYTES 261,18528
#define FLAG_COMPRESS 265,18712
#define FLAG_COPY 266,18793
#define ULONG_ALIGN_UP(ULONG_ALIGN_UP272,19199
#define MAX_RAW_ITEM 279,19601
#define MAX_RAW_GROUP 284,19871
#define MAX_CMP_GROUP 290,20236
#define HASH_TABLE_LENGTH 294,20430
#define START_STRING_18 309,21517
#define HASH(HASH313,21737
LOCAL void compress_compress318,21941
# define TOPWORD 357,24273
#  define ZH 385,25638
#       define PS 451,28794
LOCAL void compress_decompress567,33503
#  define ZJ 640,37256

drivers/char/ftape/compressor/lzrw3.h,1171
#define _LZRW3_H2,17
      #define UBYTE 152,11037
      #define UWORD 153,11118
      #define ULONG 154,11199
      #define BOOL 155,11280
      #define FOPEN_BINARY_READ 156,11361
      #define FOPEN_BINARY_WRITE 157,11442
      #define FOPEN_TEXT_APPEND 158,11523
      #define REAL 159,11604
      #define UBYTE 162,11735
      #define UWORD 163,11816
      #define ULONG 164,11897
      #define LONG 165,11978
      #define BOOL 166,12059
      #define FOPEN_BINARY_READ 167,12140
      #define FOPEN_BINARY_WRITE 168,12221
      #define FOPEN_TEXT_APPEND 169,12302
      #define REAL 170,12383
      #define TRUE 172,12483
   #define DONE_PORT 176,12528
   #define MALLOC_FAIL 177,12609
   #define LOCAL 178,12690
   #define EXPORT 179,12771
   #define then 180,12852
#define COMPRESS_ACTION_IDENTITY 188,13186
#define COMPRESS_ACTION_COMPRESS 189,13223
#define COMPRESS_ACTION_DECOMPRESS 190,13260
#define COMPRESS_OVERRUN 192,13298
#define COMPRESS_MAX_COM 193,13328
#define COMPRESS_MAX_ORG 194,13364
#define COMPRESS_MAX_STRLEN 196,13426
struct compress_identitycompress_identity204,13939
#define fast_copy(fast_copy247,16429

drivers/char/ftape/compressor/zftape-compress.c,1625
 char zftc_src[30,1235
 char zftc_rev[31,1329
 char zftc_dat[32,1372
static int keep_module_locked 66,2139
static void *zftc_wrk_mem 68,2175
static __u8 *zftc_buf 69,2209
static void *zftc_scratch_buf 70,2243
static unsigned int zftc_wr_uncompressed 74,2314
static unsigned int zftc_wr_compressed 75,2360
static unsigned int zftc_rd_uncompressed 76,2406
static unsigned int zftc_rd_compressed 77,2452
} cmpr_info;cmpr_info147,5215
static cmpr_info cseg;149,5229
#define DUMP_CMPR_INFO(DUMP_CMPR_INFO153,5348
static int get_cseg 175,6289
static void get_next_cluster(239,8498
static void zftc_lock(272,9481
static void zftc_reset(288,9828
static int cmpr_mem_initialized 303,10077
static unsigned int alloc_blksz 304,10114
static int zft_allocate_cmpr_mem(306,10152
static void zftc_cleanup(324,10642
static int zft_compress(370,12908
static unsigned int zft_uncompress(409,14221
static void zftc_stats(436,15001
static int start_new_cseg(479,16209
static int zftc_write(561,19191
static int zftc_read 696,23318
#define ZFT_SLOW_SEEK_THRESHOLD 824,27557
#define ZFT_FAST_SEEK_MAX_TRIALS 825,27608
#define ZFT_FAST_SEEK_BACKUP 826,27656
static int zftc_seek(828,27708
static int seek_in_segment(991,32020
static int slow_seek_forward_until_error(1049,33612
static int search_valid_segment(1095,34935
static int slow_seek_forward(1137,36133
static int compute_seg_pos(1179,37308
static struct zft_cmpr_ops cmpr_ops 1225,38678
int zft_compressor_init(1234,38798
char kernel_version[1271,39948
static int can_unload(1274,40037
int init_module(1282,40178
void cleanup_module(1303,40650

drivers/char/ftape/compressor/zftape-compress.h,288
#define _ZFTAPE_COMPRESS_H2,27
#define U(U37,1221
#define SIZE_P_BYTE 38,1257
#define ALIGNMENT_FUDGE 39,1301
#define CMPR_WRK_MEM_SIZE 41,1334
#define MAX_CMP_GROUP 61,2234
#define CMPR_OVERRUN 63,2285
#define     CMPR_BUFFER_SIZE 67,2407
typedef __u32 CmprMap;CmprMap75,2803

drivers/char/ftape/lowlevel/ftape-init.c,411
#define __initdata37,1218
#define __initfunc(__initfunc38,1237
char ft_src[59,1776
char ft_src[] __initdata 59,1776
char ft_rev[60,1872
char ft_rev[] __initdata 60,1872
char ft_dat[61,1919
char ft_dat[] __initdata 61,1919
__initfunc(67,2090
static int ft_tracing 133,4128
#define FT_MOD_PARM(FT_MOD_PARM137,4209
char kernel_version[160,5277
int init_module(165,5383
void cleanup_module(177,5590

drivers/char/ftape/lowlevel/fc-10.c,77
__u16 inbs_magic[59,2523
__u16 fc10_ports[65,2682
int fc10_enable(69,2758

drivers/char/ftape/lowlevel/ftape-io.c,1384
ft_timeout_table ftape_timeout;52,1724
unsigned int ftape_tape_len 53,1756
volatile qic117_cmd_t ftape_current_command;54,1789
const struct qic117_command_table qic117_cmds[55,1834
int ftape_might_be_off_track;56,1901
static int diagnostic_mode 60,1956
static unsigned int ftape_udelay_count;61,1990
static unsigned int ftape_udelay_time;62,2030
void ftape_udelay(64,2070
void ftape_udelay_calibrate(75,2312
void ftape_sleep(83,2477
static inline int ft_send_to_drive(121,3366
static int ft_check_cmd_restrictions(138,3841
int ftape_command(232,6724
int ftape_parameter(276,8041
int ftape_ready_wait(291,8460
int ftape_command_wait(347,10027
int ftape_parameter_wait(360,10291
int ftape_report_operation(381,10819
int ftape_report_raw_drive_status(432,12322
int ftape_report_drive_status(457,12937
int ftape_report_error(474,13413
int ftape_in_error_state(513,14593
int ftape_report_configuration(523,14802
int ftape_report_rom_version(627,17490
int ftape_report_signature(637,17650
void ftape_report_vendor_id(647,17854
static int qic_rate_code(728,19908
static int ftape_set_rate_test(744,20185
int ftape_set_data_rate(776,21021
int ftape_increase_threshold(852,23111
int ftape_half_data_rate(868,23536
int ftape_seek_head_to_track(882,23820
int ftape_wakeup_drive(900,24324
int ftape_put_drive_to_sleep(935,25167
int ftape_reset_drive(956,25640

drivers/char/ftape/lowlevel/fc-10.h,22
#define _FC_10_H2,17

drivers/char/ftape/lowlevel/fdc-io.c,2491
int ftape_motor 53,1669
volatile int ftape_current_cylinder 54,1690
volatile fdc_mode_enum fdc_mode 55,1732
fdc_config_info fdc 56,1776
struct wait_queue *ftape_wait_intr 57,1803
unsigned int ft_fdc_base 59,1847
unsigned int ft_fdc_irq 60,1900
unsigned int ft_fdc_dma 61,1952
unsigned int ft_fdc_threshold 62,2004
unsigned int ft_fdc_rate_limit 63,2069
int ft_probe_fc10 64,2141
int ft_mach2 65,2190
static unsigned int fdc_calibr_count;69,2259
static unsigned int fdc_calibr_time;70,2297
static int fdc_status;71,2334
volatile __u8 fdc_head;72,2357
volatile __u8 fdc_cyl;73,2412
volatile __u8 fdc_sect;74,2467
static int fdc_data_rate 75,2524
static int fdc_rate_code 76,2579
static int fdc_seek_rate 77,2646
static int fdc_fifo_state;79,2731
static int fdc_fifo_thr;80,2801
static int fdc_lock_state;81,2866
static int fdc_fifo_locked 82,2930
static __u8 fdc_precomp 83,2991
static __u8 fdc_prec_code 84,3056
static char ftape_id[86,3119
void fdc_catch_stray_interrupts(88,3194
int fdc_wait(106,3624
int fdc_ready_wait(120,3928
static void fdc_usec_wait(127,4079
int fdc_ready_out_wait(132,4182
int fdc_ready_in_wait(138,4357
void fdc_wait_calibrate(144,4530
static int fdc_write(154,4822
static int fdc_read(169,5229
int fdc_command(184,5618
int fdc_result(312,9148
int fdc_issue_command(359,10251
int fdc_interrupt_wait(386,11138
void fdc_motor(464,13757
static void fdc_update_dsr(486,14202
void fdc_set_write_precomp(500,14505
void fdc_set_drive_specs(521,15123
int fdc_set_data_rate(544,15745
static void fdc_dor_reset(590,16735
void fdc_reset(622,17432
# define CLK_48MHZ 682,18852
void fdc_disable(689,19069
int fdc_set_seek_rate(730,20173
int fdc_sense_drive_status(744,20513
int fdc_sense_interrupt_status(761,20862
int fdc_seek(776,21136
int fdc_recalibrate(830,22515
static int perpend_mode 871,23458
static int perpend_off(873,23530
static int handle_perpend(888,23842
static inline void fdc_setup_dma(921,24760
int fdc_setup_formatting(948,25355
int fdc_setup_read_write(978,26234
int fdc_fifo_threshold(1037,28016
static int fdc_fifo_enable(1098,29934
static __u8 fdc_save_state[1116,30381
int fdc_probe(1118,30422
static int fdc_request_regions(1219,33837
void fdc_release_regions(1249,34534
static int fdc_config_regs(1264,34762
static int fdc_config(1284,35256
static void ftape_interrupt(1327,36371
int fdc_grab_irq_and_dma(1344,36704
int fdc_release_irq_and_dma(1381,37706
int fdc_init(1403,38343

drivers/char/ftape/lowlevel/fdc-io.h,2261
#define _FDC_IO_H2,18
#define FDC_SK_BIT 37,1212
#define FDC_MT_BIT 38,1243
#define FDC_READ 40,1275
#define FDC_WRITE 41,1338
#define FDC_READ_DELETED 42,1387
#define FDC_WRITE_DELETED 43,1420
#define FDC_VERIFY 44,1453
#define FDC_READID 45,1486
#define FDC_SENSED 46,1517
#define FDC_SENSEI 47,1548
#define FDC_FORMAT 48,1584
#define FDC_RECAL 49,1620
#define FDC_SEEK 50,1661
#define FDC_SPECIFY 51,1695
#define FDC_RECALIBR 52,1732
#define FDC_VERSION 53,1773
#define FDC_PERPEND 54,1810
#define FDC_DUMPREGS 55,1853
#define FDC_LOCK 56,1891
#define FDC_UNLOCK 57,1925
#define FDC_CONFIGURE 58,1961
#define FDC_DRIVE_SPEC 59,2000
#define FDC_PARTID 60,2067
#define FDC_SAVE 61,2120
#define FDC_RESTORE 62,2187
#define FDC_STATUS_MASK 64,2255
#define FDC_DATA_READY 65,2334
#define FDC_DATA_OUTPUT 66,2373
#define FDC_DATA_READY_MASK 67,2410
#define FDC_DATA_OUT_READY 68,2466
#define FDC_DATA_IN_READY 69,2522
#define FDC_BUSY 70,2565
#define FDC_CLK48_BIT 71,2603
#define FDC_SEL3V_BIT 72,2634
#define ST0_INT_MASK 74,2666
#define FDC_INT_NORMAL 75,2701
#define FDC_INT_ABNORMAL 76,2743
#define FDC_INT_INVALID 77,2786
#define FDC_INT_READYCH 78,2828
#define ST0_SEEK_END 79,2870
#define ST3_TRACK_0 80,2903
#define FDC_RESET_NOT 82,2937
#define FDC_DMA_MODE 83,2968
#define FDC_MOTOR_0 84,2999
#define FDC_MOTOR_1 85,3030
} fdc_config_info;fdc_config_info107,3869
} fdc_data_rate_type;fdc_data_rate_type115,4114
} fdc_mode_enum;fdc_mode_enum127,4440
} buffer_state_enum;buffer_state_enum139,4568
} buffer_struct;buffer_struct205,6092
extern volatile fdc_mode_enum fdc_mode;210,6159
extern int fdc_setup_error;211,6199
extern struct wait_queue *ftape_wait_intr;212,6246
extern int ftape_motor;213,6289
extern volatile int ftape_current_cylinder;214,6341
extern volatile __u8 fdc_head;215,6420
extern volatile __u8 fdc_cyl;216,6466
extern volatile __u8 fdc_sect;217,6512
extern fdc_config_info fdc;218,6560
extern unsigned int ft_fdc_base;220,6622
extern unsigned int ft_fdc_irq;221,6655
extern unsigned int ft_fdc_dma;222,6687
extern unsigned int ft_fdc_threshold;223,6719
extern unsigned int ft_fdc_rate_limit;224,6757
extern int ft_probe_fc10;225,6796
extern int ft_mach2;226,6822

drivers/char/ftape/lowlevel/fdc-isr.c,977
#define volatile	32,1107
volatile int ft_expected_stray_interrupts 47,1489
volatile int ft_interrupt_seen 48,1536
volatile int ft_seek_completed 49,1572
volatile int ft_hide_interrupt 50,1608
} error_cause;error_cause57,1830
static int stop_read_ahead 58,1845
static void print_error_cause(61,1879
static char *fdc_mode_txt(89,2396
static inline error_cause decode_irq_cause(113,2883
static void update_history(166,4198
static void skip_bad_sector(191,4642
static void update_error_maps(213,5181
static void print_progress(234,5826
static void determine_verify_progress(287,7361
static void determine_progress(337,8640
static int calc_steps(407,10681
static void pause_tape(416,10845
static void continue_xfer(451,11804
static void retry_sector(567,15144
static unsigned int find_resume_point(582,15496
static int determine_fmt_progress(633,17032
static void continue_formatting(687,18655
static void handle_fdc_busy(731,19791
void fdc_isr(1078,29272

drivers/char/ftape/lowlevel/fdc-isr.h,223
#define _FDC_ISR_H2,19
extern volatile int ft_expected_stray_interrupts;36,1202
extern volatile int ft_seek_completed;37,1281
extern volatile int ft_interrupt_seen;38,1352
extern volatile int ft_hide_interrupt;39,1423

drivers/char/ftape/lowlevel/ftape-bsm.c,675
static __u8 *bad_sector_map 42,1329
static SectorCount *bsm_hash_ptr 43,1365
} mode_type;mode_type47,1442
void fix_tape(53,1561
__u8 * ftape_find_end_of_bsm_list(100,2856
static inline void put_sector(114,3140
static inline unsigned int get_sector(123,3340
static void bsm_debug_fake(142,3763
static void print_bad_sector_map(194,5071
void ftape_extract_bad_sector_map(260,6959
static inline SectorMap cvt2map(291,7806
static inline int cvt2segment(296,7931
static int forward_seek_entry(301,8047
static int backwards_seek_entry(336,8894
void ftape_put_bad_sector_entry(383,10010
SectorMap ftape_get_bad_sector_entry(447,11640
void ftape_init_bsm(486,12968

drivers/char/ftape/lowlevel/ftape-bsm.h,268
#define _FTAPE_BSM_H2,21
#define EMPTY_SEGMENT 34,1141
#define FAKE_SEGMENT 35,1186
#define BAD_SECTOR_MAP_SIZE 39,1293
typedef __u32 SectorMap;SectorMap44,1443
typedef struct NewSectorMap NewSectorMap48,1595
} SectorCount __attribute__(__attribute__50,1651

drivers/char/ftape/lowlevel/ftape-buffer.c,220
static inline int __get_order(43,1302
static inline void *dmaalloc(56,1485
static inline void dmafree(74,1776
static int add_one_buffer(87,2040
static void del_one_buffer(113,2766
int ftape_set_nr_buffers(129,3190

drivers/char/ftape/lowlevel/ftape-buffer.h,29
#define _FTAPE_BUFFER_H2,24

drivers/char/ftape/lowlevel/ftape-calibr.c,336
static unsigned long ps_per_cycle 49,1445
unsigned int ftape_timestamp(66,2183
static unsigned int short_ftape_timestamp(89,2644
static unsigned int diff(107,3055
static unsigned int usecs(123,3598
unsigned int ftape_timediff(132,3805
static void time_inb(145,4213
static void init_clock(165,4578
void ftape_calibrate(207,5635

drivers/char/ftape/lowlevel/ftape-calibr.h,29
#define _FTAPE_CALIBR_H2,24

drivers/char/ftape/lowlevel/ftape-ctl.c,985
ftape_info ftape_status 53,1624
int ftape_segments_per_head 93,2972
int ftape_segments_per_cylinder 94,3012
int ftape_init_drive_needed 95,3049
static const vendor_struct vendors[101,3183
static const wakeup_method methods[102,3238
const ftape_info *ftape_get_status(104,3294
void ftape_set_status(118,3575
static int ftape_not_operational(123,3653
int ftape_seek_to_eot(133,3904
int ftape_seek_to_bot(149,4262
static int ftape_new_cartridge(165,4620
int ftape_abort_operation(173,4786
static int lookup_vendor_id(203,5504
void ftape_detach_drive(215,5685
static void clear_history(228,5980
int ftape_activate_drive(246,6395
int ftape_get_drive_status(306,8095
void ftape_log_vendor_id(379,10000
void ftape_calc_timeouts(439,12179
int ftape_calibrate_data_rate(553,15884
int ftape_init_drive(585,16659
static void ftape_munmap(680,19687
int ftape_mmap(695,20021
int ftape_enable(752,21676
void ftape_disable(786,22587
static void ftape_init_driver(845,24513

drivers/char/ftape/lowlevel/ftape-ctl.h,1230
#define _FTAPE_CTL_H2,21
} history_record;history_record57,2132
} ftape_info;ftape_info101,3649
#define ft_drive_type 104,3689
#define ft_data_rate 106,3766
#define ft_drive_max_rate 107,3829
#define ft_fdc_max_rate 108,3892
#define ft_drive_sel 110,4002
#define ft_formatted 112,4118
#define ft_no_tape 113,4176
#define ft_write_protected 114,4232
#define ft_new_tape 115,4296
#define ft_last_error 117,4411
#define ft_last_status 118,4470
#define ft_tracks_per_tape 120,4556
#define ft_segments_per_track 121,4620
#define ft_format_code 123,4743
#define ft_qic_std 125,4867
#define ft_used_header_segment 126,4923
#define ft_header_segment_1 127,4991
#define ft_header_segment_2 128,5056
#define ft_first_data_segment 129,5121
#define ft_last_data_segment 130,5188
#define ft_runner_status 132,5278
#define ft_driver_state 134,5401
#define ft_failure 136,5489
#define ft_history 138,5567
#define _IOC_SIZE(_IOC_SIZE143,5716
#define _IOC_DIR(_IOC_DIR144,5781
#define _IOC_WRITE 145,5810
#define _IOC_READ 146,5836
extern ftape_info ftape_status;152,5919
extern int ftape_segments_per_head;153,5951
extern int ftape_segments_per_cylinder;154,5987
extern int ftape_init_drive_needed;155,6027

drivers/char/ftape/lowlevel/ftape-ecc.c,803
#define BIG_ENDIAN44,1470
typedef __u8 Matrix[Matrix93,3232
static const __u8 gfpow[99,3354
static const __u8 gflog[139,5103
static const __u8 gfmul_c0[178,6841
static inline __u8 mod255(217,8523
static inline __u8 gfadd(235,8839
static inline unsigned long gfadd_long(244,8999
static inline __u8 gfmul(252,9135
static inline __u8 gfmul_exp(265,9357
static inline unsigned long gfmul_exp_long(278,9611
static inline __u8 gfdiv(320,11029
static inline int gfinv3(348,11996
static inline int gfinv2(393,13446
static inline void gfmat_mul(423,14079
static inline void set_parity(463,15391
static int compute_syndromes(552,18758
static inline int correct_block(592,19925
static int sanity_check(699,22755
int ftape_ecc_set_segment_parity(715,23126
int ftape_ecc_correct_data(739,23765

drivers/char/ftape/lowlevel/ftape-ecc.h,281
#define _FTAPE_ECC_H_2,22
#define BAD_CLEAR(BAD_CLEAR37,1205
#define BAD_SET(BAD_SET38,1242
#define BAD_CHECK(BAD_CHECK39,1297
	ECC_OK,45,1407
	ECC_CORRECTED,46,1442
	ECC_FAILED,47,1492
 struct memory_segment memory_segment63,2240
extern int ftape_ecc_tracing;75,2418

drivers/char/ftape/lowlevel/ftape-format.c,251
#define FT_FMT_SEGS_PER_BUF 42,1401
#define FT_FMT_SEGS_PER_BUF 44,1438
static int switch_segment 50,1559
static void setup_format_buffer(62,1972
int ftape_format_track(90,2707
int ftape_format_status(141,4247
int ftape_verify_segment(203,6249

drivers/char/ftape/lowlevel/ftape-format.h,29
#define _FTAPE_FORMAT_H2,24

drivers/char/ftape/lowlevel/ftape-init.h,184
#define _FTAPE_INIT_H2,22
#define _NEVER_BLOCK 35,1111
#define _DONT_BLOCK 36,1173
#define _DO_BLOCK 37,1230
#define QIC117_TAPE_MAJOR 40,1300
extern char kernel_version[46,1452

drivers/char/ftape/lowlevel/ftape-io.h,359
#define _FTAPE_IO_H2,20
} ft_timeout_table;ft_timeout_table41,1274
} qic_model;qic_model45,1365
extern ft_timeout_table ftape_timeout;50,1426
extern unsigned int ftape_tape_len;51,1465
extern volatile qic117_cmd_t ftape_current_command;52,1501
extern const struct qic117_command_table qic117_cmds[53,1553
extern int ftape_might_be_off_track;54,1609

drivers/char/ftape/lowlevel/ftape-proc.c,800
#define __initdata45,1477
#define __initfunc(__initfunc46,1496
#define FT_PROC_REGISTER(FT_PROC_REGISTER71,2170
static struct file_operations ftape_proc_fops 87,2571
static struct inode_operations ftape_proc_inode_operations 102,2921
static int ftape_get_info(126,3390
static struct proc_dir_entry proc_ftape 134,3570
#define PROC_BLOCK_SIZE	155,4380
static long ftape_proc_read(158,4459
#define FT_PROC_REGISTER(FT_PROC_REGISTER232,6021
static struct proc_dir_entry proc_ftape 238,6137
static size_t get_driver_info(260,6856
static size_t get_tapedrive_info(283,7420
static size_t get_cartridge_info(306,8072
static size_t get_controller_info(335,8918
static size_t get_history_info(357,9482
int ftape_read_proc(393,10686
__initfunc(420,11315
void ftape_proc_destroy(426,11423

drivers/char/ftape/lowlevel/ftape-proc.h,76
#define _FTAPE_PROC_H2,22
extern struct proc_dir_entry proc_ftape;32,1066

drivers/char/ftape/lowlevel/ftape-read.c,295
void ftape_zap_read_buffers(51,1497
static SectorMap convert_sector_map(65,1800
static int correct_and_copy_fraction(99,2558
int ftape_read_segment_fraction(156,4253
int ftape_read_header_segment(336,9086
#define HEADER_SEGMENT_BOUNDARY 354,9676
int ftape_decode_header_segment(380,10516

drivers/char/ftape/lowlevel/ftape-read.h,123
#define _FTAPE_READ_H2,22
} ft_read_mode_t;ft_read_mode_t37,1171
#define ftape_read_segment(ftape_read_segment46,1483

drivers/char/ftape/lowlevel/ftape-rw.c,1097
int ft_nr_buffers 46,1506
buffer_struct *ft_buffer[47,1529
static volatile int ft_head;48,1585
static volatile int ft_tail;49,1614
int fdc_setup_error;50,1689
location_record ft_location 51,1710
volatile int ftape_tape_running 52,1749
static int overrun_count_offset 56,1811
static int inhibit_correction 57,1848
#define OVERSHOOT_LIMIT 61,1937
buffer_struct *ftape_next_buffer(65,2005
int ftape_buffer_id(82,2321
buffer_struct *ftape_get_buffer(90,2481
void ftape_reset_buffer(98,2677
buffer_state_enum ftape_set_state(103,2736
static int setup_segment(115,3176
int ftape_setup_new_segment(192,6007
int ftape_calc_next_cluster(231,7147
int ftape_handle_logical_eot(259,7806
static int check_bot_eot(280,8340
int ftape_read_id(304,9053
static int logical_forward(369,10749
int ftape_stop_tape(375,10856
int ftape_dumb_stop(398,11292
int ftape_wait_segment(449,12579
static int fast_seek(519,14577
static int validate(600,16886
static int seek_forward(621,17548
static int skip_reverse(725,20614
static int determine_position(839,24077
int ftape_start_tape(941,26903

drivers/char/ftape/lowlevel/ftape-rw.h,902
#define _FTAPE_RW_H2,20
#define GET2(GET242,1397
#define GET4(GET443,1477
#define GET8(GET844,1557
#define PUT2(PUT245,1637
#define PUT4(PUT446,1734
#define PUT8(PUT847,1831
#define GET2(GET249,1934
#define GET4(GET450,2000
#define GET8(GET851,2066
#define PUT2(PUT252,2132
#define PUT4(PUT453,2223
#define PUT8(PUT854,2314
enum runner_status_enum runner_status_enum57,2413
	idle 58,2439
	running,59,2450
	do_abort,60,2460
	aborting,61,2471
	logical_eot,62,2482
	end_of_tape,63,2496
typedef enum ft_buffer_queue ft_buffer_queue66,2514
} ft_buffer_queue_t;ft_buffer_queue_t69,2584
} location_record;location_record79,2951
extern inline int count_ones(83,3011
#define FT_MAX_NR_BUFFERS 95,3168
extern buffer_struct *ft_buffer[98,3263
extern int ft_nr_buffers;99,3315
extern location_record ft_location;100,3341
extern volatile int ftape_tape_running;101,3377

drivers/char/ftape/lowlevel/ftape-setup.c,196
#define __initdata38,1250
#define __initfunc(__initfunc39,1269
static struct param_table param_table44,1380
} config_params[50,1474
} config_params[] __initdata 50,1474
__initfunc(63,2136

drivers/char/ftape/lowlevel/ftape-tracing.c,225
ft_trace_t ftape_tracing 45,1486
int  ftape_function_nest_level 46,1564
static __u8 trace_id 50,1625
static char spacing[51,1651
void ftape_trace_call(53,1711
void ftape_trace_exit(76,2304
void ftape_trace_log(98,2888

drivers/char/ftape/lowlevel/ftape-tracing.h,930
#define _FTAPE_TRACING_H2,25
#define LL_X 48,1395
#define LL(LL49,1419
} ft_trace_t;ft_trace_t62,1635
#define FT_TRACE_TOP_LEVEL	67,1744
#define TRACE_FUN(TRACE_FUN68,1780
#define TRACE_EXIT	69,1820
#define TRACE(TRACE70,1847
#define SET_TRACE_LEVEL(SET_TRACE_LEVEL77,2051
#define TRACE_LEVEL	78,2114
#define FT_TRACE_TOP_LEVEL	87,2340
#define TRACE_FUN(TRACE_FUN88,2377
#define TRACE_EXIT	89,2430
#define FT_TRACE_TOP_LEVEL 93,2521
#define FT_TRACE_TOP_LEVEL 95,2563
#define TRACE_FUN(TRACE_FUN97,2607
#define TRACE_EXIT	104,2855
#define TRACE(TRACE113,3083
#define SET_TRACE_LEVEL(SET_TRACE_LEVEL122,3307
#define TRACE_LEVEL 130,3503
extern ft_trace_t ftape_tracing;136,3670
extern int ftape_function_nest_level;137,3729
#define TRACE_ABORT(TRACE_ABORT150,4102
#define _TRACE_CATCH(_TRACE_CATCH159,4280
#define TRACE_CATCH(TRACE_CATCH168,4502
#define FT_SIGNAL_EXIT(FT_SIGNAL_EXIT173,4684

drivers/char/ftape/lowlevel/ftape-write.c,258
static int last_write_failed 50,1531
void ftape_zap_write_buffers(52,1566
static int copy_and_gen_ecc(62,1711
int ftape_start_writing(93,2532
int ftape_loop_until_writes_done(132,3782
static int write_segment(187,5436
int ftape_write_segment(297,8763

drivers/char/ftape/lowlevel/ftape-write.h,71
#define _FTAPE_WRITE_H2,23
} ft_write_mode_t;ft_write_mode_t43,1418

drivers/char/ftape/lowlevel/ftape_syms.c,147
#define __NO_VERSION__29,1061
# define FT_KSYM(FT_KSYM46,1576
# define FT_KSYM(FT_KSYM48,1626
struct symbol_table ftape_symbol_table 52,1710

drivers/char/ftape/lowlevel/ftape_syms.h,82
#define _FTAPE_SYMS_H2,22
extern struct symbol_table ftape_symbol_table;36,1168

drivers/char/ftape/zftape/zftape-buffers.c,345
static unsigned int used_memory 51,1447
static unsigned int peak_memory 52,1484
void zft_memory_stats(54,1522
int zft_vcalloc_once(66,1794
int zft_vmalloc_once(75,1982
int zft_vcalloc_always(92,2369
int zft_vmalloc_always(99,2508
void zft_vfree(106,2647
void *zft_kmalloc(120,2908
void zft_kfree(136,3205
void zft_uninit_mem(146,3427

drivers/char/ftape/zftape/zftape-buffers.h,29
#define _FTAPE_DYNMEM_H2,24

drivers/char/ftape/zftape/zftape-ctl.c,2814
#define __NO_VERSION__30,1067
int zft_write_protected 52,1545
int zft_header_read 53,1622
int zft_offline 54,1651
unsigned int zft_unit 55,1680
int zft_resid 56,1709
int zft_mt_compression 57,1738
static int going_offline 61,1792
typedef int (mt_fun)mt_fun63,1825
typedef int (*mt_funp)mt_funp64,1860
} fun_entry;fun_entry74,2308
static mt_fun mt_dummy,76,2322
static mt_fun mt_dummy, mt_reset,76,2322
static mt_fun mt_dummy, mt_reset, mt_fsr,76,2322
static mt_fun mt_dummy, mt_reset, mt_fsr, mt_bsr,76,2322
static mt_fun mt_dummy, mt_reset, mt_fsr, mt_bsr, mt_rew,76,2322
static mt_fun mt_dummy, mt_reset, mt_fsr, mt_bsr, mt_rew, mt_offl,76,2322
static mt_fun mt_dummy, mt_reset, mt_fsr, mt_bsr, mt_rew, mt_offl, mt_nop,76,2322
	mt_weof,77,2397
	mt_weof, mt_erase,77,2397
	mt_weof, mt_erase, mt_ras2,77,2397
	mt_weof, mt_erase, mt_ras2, mt_setblk,77,2397
	mt_weof, mt_erase, mt_ras2, mt_setblk, mt_setdensity,77,2397
	mt_seek,78,2452
	mt_seek, mt_tell,78,2452
	mt_seek, mt_tell, mt_reten,78,2452
	mt_seek, mt_tell, mt_reten, mt_eom,78,2452
	mt_seek, mt_tell, mt_reten, mt_eom, mt_fsf,78,2452
	mt_seek, mt_tell, mt_reten, mt_eom, mt_fsf, mt_bsf,78,2452
	mt_fsfm,79,2505
	mt_fsfm, mt_bsfm,79,2505
	mt_fsfm, mt_bsfm, mt_setdrvbuffer,79,2505
	mt_fsfm, mt_bsfm, mt_setdrvbuffer, mt_compression;79,2505
static fun_entry mt_funs[81,2558
#define NR_MT_CMDS 120,4362
void zft_reset_position(122,4400
static void zft_init_driver(158,5394
int zft_def_idle_state(179,5896
static int mt_dummy(207,6789
static int mt_reset(214,6872
static int mt_fsf(229,7330
static int mt_bsf(239,7490
static int seek_block(250,7656
static int mt_fsr(325,10115
static int mt_bsr(334,10266
static int mt_weof(343,10419
static int mt_rew(353,10583
static int mt_offl(366,10804
static int mt_nop(376,10941
static int mt_reten(387,11137
static int fsfbsfm(402,11377
static int mt_bsfm(438,12449
static int mt_fsfm(447,12577
static int mt_eom(456,12704
static int mt_erase(464,12821
static int mt_ras2(473,12939
static int mt_setblk(485,13096
static int mt_setdensity(511,13741
static int mt_seek(523,13968
static int mt_setdrvbuffer(541,14572
static int mt_tell(553,14792
static int mt_compression(562,14963
int zft_check_write_access(613,17233
int zft_dirty(666,18913
int _zft_open(700,19764
int _zft_close(787,22626
static int mtioctop(856,24649
static int mtiocget(902,25925
static int mtiocrdftseg(971,27938
static int mtiocwrftseg(1034,29636
static int mtiocvolinfo(1105,31575
static int mtioc_zftape_getblksz(1134,32423
static int mtiocgetsize(1162,33137
static int mtiocpos(1184,33689
static int set_format_parms(1214,34551
static int get_format_parms(1268,36354
static int mtiocftformat(1282,36744
static int mtiocftcmd(1339,38453
int _zft_ioctl(1393,40043

drivers/char/ftape/zftape/zftape-ctl.h,272
#define _ZFTAPE_CTL_H2,22
#define ftape_status 37,1166
extern int zft_offline;40,1209
extern int zft_mt_compression;41,1233
extern int zft_write_protected;42,1264
extern int zft_header_read;43,1296
extern unsigned int zft_unit;44,1324
extern int zft_resid;45,1354

drivers/char/ftape/zftape/zftape-eof.c,390
eof_mark_union *zft_eof_map;46,1429
int zft_nr_eof_marks 50,1523
static char linux_tape_label[56,1577
	min_fmt_version 58,1640
	min_fmt_version = 1, max_fmt_version 58,1640
static unsigned ftape_fmt_version 60,1686
int zft_ftape_validate_label(98,3267
static __u8 * find_end_of_eof_list(121,3949
void zft_ftape_extract_file_marks(142,4271
void zft_clear_ftape_file_marks(194,5769

drivers/char/ftape/zftape/zftape-eof.h,149
#define _ZFTAPE_EOF_H2,22
} eof_mark_union;eof_mark_union39,1258
extern int zft_nr_eof_marks;43,1323
extern eof_mark_union *zft_eof_map;44,1352

drivers/char/ftape/zftape/zftape-init.c,885
#define __initdata43,1318
#define __initfunc(__initfunc44,1337
char zft_src[54,1591
char zft_src[] __initdata 54,1591
char zft_rev[55,1687
char zft_rev[] __initdata 55,1687
char zft_dat[56,1735
char zft_dat[] __initdata 56,1735
struct zft_cmpr_ops *zft_cmpr_ops 70,2210
const ftape_info *zft_status;71,2252
static int busy_flag 75,2307
static sigset_t orig_sigmask;76,2333
static struct file_operations zft_cdev 127,4241
static int zft_open(144,4586
static int zft_close(198,6084
static int zft_ioctl(232,6881
static int  zft_mmap(254,7560
static ssize_t zft_read(291,8492
static ssize_t zft_write(324,9542
int zft_cmpr_register(367,10938
struct zft_cmpr_ops *zft_cmpr_unregister(379,11125
int zft_cmpr_lock(390,11332
__initfunc(417,11824
char kernel_version[465,13199
static int can_unload(470,13356
int init_module(477,13504
void cleanup_module(490,13778

drivers/char/ftape/zftape/zftape-init.h,196
#define _ZFTAPE_INIT_H2,23
#define ftape_status 45,1370
extern const  ftape_info *zft_status;48,1413
struct zft_cmpr_ops zft_cmpr_ops52,1519
extern struct zft_cmpr_ops *zft_cmpr_ops;69,2081

drivers/char/ftape/zftape/zftape-read.c,316
int zft_just_before_eof 48,1421
static int buf_len_rd 52,1475
void zft_zap_read_buffers(54,1503
int zft_read_header_segments(59,1557
int zft_fetch_segment_fraction(98,2933
static int zft_simple_read 160,4826
static int check_read_access(192,5739
static int empty_deblock_buf(264,7814
int _zft_read(305,9169

drivers/char/ftape/zftape/zftape-read.h,121
#define _ZFTAPE_READ_H2,23
extern int zft_just_before_eof;35,1096
#define zft_fetch_segment(zft_fetch_segment46,1474

drivers/char/ftape/zftape/zftape-rw.c,787
__u8 *zft_deblock_buf 44,1367
__u8 *zft_hseg_buf 45,1397
int zft_deblock_segment 46,1427
zft_status_enum zft_io_state 47,1457
int zft_header_changed 48,1498
int zft_bad_sector_map_changed 49,1534
int zft_qic113 50,1570
int zft_use_compression 51,1633
zft_position zft_pos 52,1669
unsigned int zft_blk_sz 58,1782
__s64 zft_capacity 59,1832
unsigned int zft_written_segments 61,1862
int zft_label_changed 62,1901
unsigned int zft_get_seg_sz(67,1954
void zft_set_flags(83,2269
int zft_calc_seg_byte_coord(123,3374
static int seg_pos 168,4510
static __s64 tape_pos 169,4537
__s64 zft_get_capacity(171,4565
__s64 zft_calc_tape_pos(182,4756
void zft_update_label(227,5652
int zft_verify_write_segments(244,6169
int zft_erase(332,8584
unsigned int zft_get_time(374,9793

drivers/char/ftape/zftape/zftape-rw.h,805
#define _ZFTAPE_RW_H2,21
#define SEGMENTS_PER_TAPE 34,1129
#define ZFT_MAX_BLK_SZ 40,1371
# define CONFIG_ZFT_DFLT_BLK_SZ 42,1463
# define CONFIG_ZFT_DFLT_BLK_SZ 45,1605
#define ZFT_CMPR_OVERHEAD 57,2179
} zft_status_enum;zft_status_enum64,2287
} zft_position;zft_position74,2643
extern zft_position zft_pos;76,2661
extern __u8 *zft_deblock_buf;77,2690
extern __u8 *zft_hseg_buf;78,2720
extern int zft_deblock_segment;79,2747
extern zft_status_enum zft_io_state;80,2779
extern int zft_header_changed;81,2816
extern int zft_bad_sector_map_changed;82,2847
extern int zft_qic113;83,2886
extern int zft_use_compression;84,2952
extern unsigned int zft_blk_sz;85,2984
extern __s64 zft_capacity;86,3016
extern unsigned int zft_written_segments;87,3043
extern int zft_label_changed;88,3085

drivers/char/ftape/zftape/zftape-vtbl.c,997
#define ZFT_CMAP_HACK 45,1449
int zft_qic_mode 50,1554
int zft_old_ftape 51,1597
int zft_volume_table_changed 52,1671
static zft_volinfo  tape_vtbl 62,1973
static zft_volinfo  eot_vtbl 63,2027
static zft_volinfo *cur_vtbl 64,2081
inline void zft_new_vtbl_entry(66,2119
void zft_free_vtbl(75,2329
void zft_init_vtbl(93,2676
static int vtbl_signature_valid(132,3798
static int check_volume_label(151,4398
static int check_volume(190,5346
static void create_zft_volume(209,5921
void zft_create_volume_headers(252,7346
int zft_update_volume_table(289,8342
static void extract_alien_volume(316,9194
static void extract_zft_volume(339,9822
int zft_extract_volume_headers(368,10690
int zft_fake_volume_headers 438,13021
int zft_open_volume(505,15222
int zft_skip_volumes(550,16674
__s64 zft_get_eom_pos(590,17947
void zft_skip_to_eom(602,18170
int zft_close_volume(621,18755
int zft_weof(652,19662
const zft_volinfo *zft_find_volume(711,21346
void zft_move_past_eof(743,22327

drivers/char/ftape/zftape/zftape-vtbl.h,1961
#define _ZFTAPE_VTBL_H2,23
#define VTBL_SIZE 39,1175
#define VTBL_SIG 42,1256
#define VTBL_START 43,1277
#define VTBL_END 44,1298
#define VTBL_DESC 45,1319
#define VTBL_DATE 46,1340
#define VTBL_FLAGS 47,1362
#define VTBL_FL_VENDOR_SPECIFIC 48,1384
#define VTBL_FL_MUTLI_CARTRIDGE 49,1423
#define VTBL_FL_NOT_VERIFIED 50,1462
#define VTBL_FL_REDIR_INHIBIT 51,1501
#define VTBL_FL_SEG_SPANNING 52,1540
#define VTBL_FL_DIRECTORY_LAST 53,1579
#define VTBL_FL_RESERVED_6 54,1618
#define VTBL_FL_RESERVED_7 55,1657
#define VTBL_M_NO 56,1696
#define VTBL_EXT 57,1718
#define EXT_ZFTAPE_SIG 58,1740
#define EXT_ZFTAPE_BLKSZ 59,1769
#define EXT_ZFTAPE_CMAP 60,1798
#define EXT_ZFTAPE_QIC113 61,1827
#define VTBL_PWD 62,1856
#define VTBL_DIR_SIZE 63,1878
#define VTBL_DATA_SIZE 64,1903
#define VTBL_OS_VERSION 65,1929
#define VTBL_SRC_DRIVE 66,1957
#define VTBL_DEV 67,1985
#define VTBL_RESERVED_1 68,2013
#define VTBL_CMPR 69,2041
#define VTBL_CMPR_UNREG 70,2069
#define VTBL_CMPR_USED 71,2098
#define VTBL_FMT 72,2127
#define VTBL_RESERVED_2 73,2155
#define VTBL_RESERVED_3 74,2183
#define VTBL_K_CMPR 76,2251
#define VTBL_SCSI_SEGS 83,2539
#define ZFT_MAX_VOLUMES 88,2688
#define VTBL_ID 89,2740
#define VTBL_IDS 90,2764
#define ZFT_VOL_NAME 91,2839
#define ZFTAPE_SIG 92,2906
typedef struct zft_internal_vtblzft_internal_vtbl96,2963
} zft_volinfo;zft_volinfo120,3867
extern struct list_head zft_vtbl;122,3883
#define zft_head_vtbl 123,3917
#define zft_eom_vtbl 124,3985
#define zft_last_vtbl 125,4053
#define zft_first_vtbl 126,4131
#define zft_vtbl_empty 127,4210
#define DUMP_VOLINFO(DUMP_VOLINFO129,4284
extern int zft_qic_mode;149,5026
extern int zft_old_ftape;150,5051
extern int zft_volume_table_changed;151,5077
extern inline void zft_position_before_eof(183,6602
extern inline int zft_tape_at_eod(198,7023
extern inline int zft_tape_at_lbot(210,7281
extern inline __s64 zft_check_for_eof(223,7612

drivers/char/ftape/zftape/zftape-write.c,403
static int last_write_failed 51,1429
static int need_flush 52,1463
void zft_prevent_flush(54,1491
static int zft_write_header_segments(59,1542
int zft_update_header_segments(106,2953
static int read_merge_buffer(148,4195
int zft_flush_buffers(193,5765
static int zft_simple_write(308,9440
static int check_write_access(335,10259
static int fill_deblock_buf(389,11835
int _zft_write(432,13141

drivers/char/ftape/zftape/zftape-write.h,29
#define _ZFTAPE_WRITE_H2,24

drivers/char/ftape/zftape/zftape_syms.c,144
#define __NO_VERSION__27,972
# define FT_KSYM(FT_KSYM38,1237
# define FT_KSYM(FT_KSYM40,1287
struct symbol_table zft_symbol_table 44,1371

drivers/char/ftape/zftape/zftape_syms.h,81
#define _ZFTAPE_SYMS_H2,23
extern struct symbol_table zft_symbol_table;36,1111

drivers/char/amigamouse.c,601
#define AMI_MSE_INT_ON(AMI_MSE_INT_ON56,1594
#define AMI_MSE_INT_OFF(AMI_MSE_INT_OFF57,1640
static struct mouse_status mouse;60,1689
static int mouseint_allowed;62,1724
static void mouse_interrupt(64,1754
static int fasync_mouse(162,3731
static int release_mouse(175,3947
static int open_mouse(191,4252
static ssize_t write_mouse(222,4810
static ssize_t read_mouse(232,4987
static unsigned int mouse_poll(285,6009
struct file_operations amiga_mouse_fops 293,6179
static struct miscdevice amiga_mouse 308,6462
__initfunc(312,6558
int init_module(338,6995
void cleanup_module(343,7050

drivers/char/digi.h,892
#define	TIOCMODG	4,99
#define	TIOCMODS	5,161
#define	TIOCMSET	9,254
#define	TIOCMGET	10,316
#define	TIOCMBIC	14,409
#define	TIOCMBIS	15,471
#define	TIOCSDTR	19,564
#define	TIOCCDTR	20,612
#define DIGI_GETA	26,867
#define DIGI_SETA	28,922
#define DIGI_SETAW	29,975
#define DIGI_SETAF	30,1036
#define	DIGI_GETFLOW	32,1105
#define	DIGI_SETFLOW	34,1204
#define	DIGI_GETAFLOW	36,1303
#define	DIGI_SETAFLOW	38,1404
struct	digiflow_struct digiflow_struct41,1505
typedef struct digiflow_struct digiflow_t;digiflow_t46,1638
#define DIGI_IXON	52,1858
#define DIGI_FAST	53,1913
#define RTSPACE	54,1962
#define CTSPACE	55,2016
#define DSRPACE	56,2071
#define DCDPACE	57,2126
#define DTRPACE	58,2181
#define DIGI_FORCEDCD	59,2235
#define	DIGI_ALTPIN	60,2286
#define	DIGI_AIXON	61,2347
struct digi_struct digi_struct67,2614
typedef struct digi_struct digi_t;digi_t71,2692

drivers/char/rtc.c,1018
#define RTC_VERSION	38,1515
#define RTC_IRQ 40,1544
#define RTC_IO_EXTENT	41,1599
static struct wait_queue *rtc_wait;72,2466
static struct timer_list rtc_irq_timer;74,2503
#define RTC_IS_OPEN	99,3224
#define RTC_TIMER_ON	100,3281
unsigned char rtc_status 102,3339
unsigned long rtc_freq 103,3399
unsigned long rtc_irq_data 104,3460
static unsigned long epoch 111,3661
unsigned char days_in_mo[113,3730
static void rtc_interrupt(123,4080
static long long rtc_llseek(145,4685
static ssize_t rtc_read(150,4781
static int rtc_ioctl(186,5495
static int rtc_open(448,11140
static int rtc_release(458,11311
static unsigned int rtc_poll(488,11877
static struct file_operations rtc_fops 500,12099
static struct miscdevice rtc_dev=513,12307
__initfunc(520,12378
void rtc_dropped_irq(592,14564
int get_rtc_status(611,14987
static inline unsigned char rtc_is_updating(688,16866
void get_rtc_time(700,17075
void get_rtc_alm_time(757,18806
void mask_rtc_irq_bit(792,19821
void set_rtc_irq_bit(807,20085

drivers/char/bttv.h,2454
#define _BTTV_H_22,833
#define BTTV_VERSION_CODE 24,851
#define O_NONCAP	35,1048
#define MAX_GBUFFERS	38,1081
#define RISCMEM_LEN	39,1104
#define VBIBUF_SIZE 40,1134
#define BTTV_MAX_FBUF	43,1236
struct bttv_window bttv_window47,1287
struct bttv_pll_info bttv_pll_info63,1537
struct device_opendevice_open71,1866
#define MAX_OPENS 77,1952
struct bttv bttv79,1973
#define GBUFFER_UNUSED 148,3614
#define GBUFFER_GRABBING 149,3645
#define GBUFFER_DONE 150,3676
#define btwrite(btwrite172,4102
#define btread(btread173,4176
#define btwrite(btwrite175,4238
#define btread(btread176,4313
#define btand(btand179,4377
#define btor(btor180,4439
#define btaor(btaor181,4501
#define BTTV_READEE	185,4594
#define BTTV_WRITEE	186,4660
#define BTTV_FIELDNR	187,4726
#define BTTV_PLLSET	188,4795
#define BTTV_BURST_ON 189,4871
#define BTTV_BURST_OFF 190,4937
#define BTTV_VERSION 191,5003
#define BTTV_PICNR	192,5072
#define BTTV_UNKNOWN 195,5132
#define BTTV_MIRO 196,5164
#define BTTV_HAUPPAUGE 197,5196
#define BTTV_STB 198,5228
#define BTTV_INTEL 199,5260
#define BTTV_DIAMOND 200,5292
#define BTTV_AVERMEDIA 201,5325
#define BTTV_MATRIX_VISION 202,5358
#define BTTV_FLYVIDEO 203,5391
#define BTTV_TURBOTV 204,5423
#define BTTV_HAUPPAUGE878 205,5455
#define BTTV_MIROPRO 206,5487
#define BTTV_ADSTECH_TV 207,5519
#define BTTV_AVERMEDIA98 208,5551
#define BTTV_VHX 209,5583
#define BTTV_ZOLTRIX 210,5615
#define AUDIO_TUNER 212,5648
#define AUDIO_RADIO 213,5680
#define AUDIO_EXTERN 214,5712
#define AUDIO_INTERN 215,5744
#define AUDIO_OFF 216,5776
#define AUDIO_ON 217,5809
#define AUDIO_MUTE 218,5841
#define AUDIO_UNMUTE 219,5873
#define TDA9850 221,5906
#define TDA8425 222,5938
#define TDA9840 223,5970
#define I2C_TSA5522 225,6003
#define I2C_TDA9840	226,6035
#define I2C_TDA9850 227,6063
#define I2C_TDA8425 228,6095
#define I2C_HAUPEE 229,6127
#define I2C_STBEE 230,6159
#define I2C_VHX 231,6191
#define TDA9840_SW	233,6217
#define TDA9840_LVADJ	234,6244
#define TDA9840_STADJ	235,6274
#define TDA9840_TEST	236,6304
#define TDA9850_CON1 238,6334
#define TDA9850_CON2 239,6366
#define TDA9850_CON3 240,6398
#define TDA9850_CON4 241,6430
#define TDA9850_ALI1 242,6462
#define TDA9850_ALI2 243,6494
#define TDA9850_ALI3 244,6526
#define TDA8425_VL 246,6559
#define TDA8425_VR 247,6591
#define TDA8425_BA 248,6623
#define TDA8425_TR 249,6655
#define TDA8425_S1 250,6687

drivers/char/tuner.c,697
static int debug 16,304
static int type 17,350
#define dprintk 19,391
void schedule_timeout(27,553
struct tuner tuner35,680
struct tunertype tunertype47,969
static struct tunertype tuners[68,1447
static int tuner_getstatus 92,2466
#define TUNER_POR 97,2552
#define TUNER_FL 98,2581
#define TUNER_AFC 99,2610
static int tuner_islocked 101,2640
static int tuner_afcstatus 106,2738
static void set_tv_freq(112,2843
static void set_radio_freq(145,3503
static int tuner_attach(187,4436
static int tuner_detach(216,5189
static int tuner_command(224,5335
struct i2c_driver i2c_driver_tuner 264,6186
EXPORT_NO_SYMBOLS;275,6420
int init_module(278,6454
void cleanup_module(288,6585

drivers/char/digi_bios.h,87
static unsigned char pcxx_bios[3,27
static unsigned char pcxx_bios[] __initdata 3,27

drivers/char/digi_fep.h,87
static unsigned char pcxx_cook[3,27
static unsigned char pcxx_cook[] __initdata 3,27

drivers/char/lp_intern.c,338
static int minor 43,1119
lp_int_out 53,1304
lp_int_busy 103,2275
lp_int_pout 129,2715
lp_int_online 155,3109
static void lp_int_interrupt(180,3514
static int lp_int_open(193,3773
static void lp_int_release(199,3843
static struct lp_struct tab 204,3905
__initfunc(223,4179
int init_module(338,7135
void cleanup_module(343,7189

drivers/char/pcxx.h,1029
#define FEPCODESEG 1,0
#define FEPCODE 2,28
#define BIOSCODE 3,56
#define MISCGLOBAL 5,85
#define NPORT 6,113
#define MBOX 7,141
#define PORTBASE 8,169
#define FEPCLR 10,198
#define FEPMEM 11,223
#define FEPRST 12,248
#define FEPINT 13,273
#define	FEPMASK 14,298
#define	FEPWIN 15,323
#define MAX_DIGI_BOARDS 18,390
#define PCXX_NUM_TYPES	20,417
#define PCXI	22,443
#define PCXE	23,459
#define	PCXEVE	24,475
#define PCXEM	25,493
static char *board_desc[27,511
static char *board_mem[34,588
#define STARTC 40,651
#define STOPC 41,675
#define IAIXON 42,699
struct board_info	board_info45,728
#define TXSTOPPED 57,886
#define LOWWAIT	58,911
#define EMPTYWAIT	59,933
#define RXSTOPPED	60,956
#define TXBUSY	61,979
#define DISABLED 63,1001
#define ENABLED 64,1022
#define OFF 65,1043
#define ON 66,1064
#define FEPTIMEOUT 68,1086
#define SERIAL_TYPE_NORMAL	69,1114
#define SERIAL_TYPE_CALLOUT	70,1143
#define PCXE_EVENT_HANGUP 71,1173
#define PCXX_MAGIC	72,1203
struct channel channel74,1235

drivers/char/fep.h,1961
#define CSTART 2,1
#define CMAX 3,29
#define ISTART 4,57
#define IMAX 5,85
#define CIN 6,113
#define GLOBAL 7,141
#define EIN 8,169
#define FEPSTAT 9,197
#define CHANSTRUCT 10,225
#define RXTXBUF 11,254
struct global_data global_data14,285
struct board_chan board_chan26,497
#define SRXLWATER 99,1850
#define SRXHWATER 100,1878
#define STOUT 101,1906
#define PAUSETX 102,1934
#define RESUMETX 103,1962
#define SAUXONOFFC 104,1990
#define SENDBREAK 105,2018
#define SETMODEM 106,2046
#define SETIFLAGS 107,2074
#define SONOFFC 108,2102
#define STXLWATER 109,2130
#define PAUSERX 110,2158
#define RESUMERX 111,2186
#define SETBUFFER 112,2214
#define SETCOOKED 113,2242
#define SETHFLOW 114,2270
#define SETCTRLFLAGS 115,2298
#define SETVNEXT 116,2326
#define BREAK_IND 119,2356
#define LOWTX_IND 120,2386
#define EMPTYTX_IND 121,2416
#define DATA_IND 122,2446
#define MODEMCHG_IND 123,2476
#define RTS 126,2508
#define CD 127,2527
#define DSR 128,2546
#define CTS 129,2565
#define RI 130,2584
#define DTR 131,2603
#define FEP_CBAUD	136,2708
#define  FEP_B0	137,2734
#define  FEP_B50	138,2774
#define  FEP_B75	139,2799
#define  FEP_B110	140,2824
#define  FEP_B134	141,2850
#define  FEP_B150	142,2876
#define  FEP_B200	143,2902
#define  FEP_B300	144,2928
#define  FEP_B600	145,2954
#define  FEP_B1200	146,2980
#define  FEP_B1800	147,3007
#define  FEP_B2400	148,3034
#define  FEP_B4800	149,3061
#define  FEP_B9600	150,3088
#define  FEP_B19200	151,3115
#define  FEP_B38400	152,3143
#define FEP_EXTA 153,3171
#define FEP_EXTB 154,3199
#define FEP_CSIZE	155,3227
#define   FEP_CS5	156,3253
#define   FEP_CS6	157,3279
#define   FEP_CS7	158,3305
#define   FEP_CS8	159,3331
#define FEP_CSTOPB	160,3357
#define FEP_CREAD	161,3384
#define FEP_PARENB	162,3410
#define FEP_PARODD	163,3437
#define FEP_HUPCL	164,3464
#define FEP_CLOCAL	165,3490
#define FEP_CIBAUD	166,3517
#define FEP_CRTSCTS	167,3579

drivers/char/atarimouse.c,626
static struct mouse_status mouse;30,666
static int mouse_threshold[31,700
extern int atari_mouse_buttons;33,775
static void atari_mouse_interrupt(35,808
static int fasync_mouse(57,1354
static int release_mouse(66,1533
static int open_mouse(78,1777
static ssize_t write_mouse(93,2167
static ssize_t read_mouse(99,2291
static unsigned int mouse_poll(135,3095
struct file_operations atari_mouse_fops 143,3264
static struct miscdevice atari_mouse 158,3563
__initfunc(162,3662
#define	MIN_THRESHOLD 182,3927
#define	MAX_THRESHOLD 183,3951
__initfunc(185,4012
int init_module(211,4663
void cleanup_module(216,4718

drivers/char/pc_keyb.c,3297
unsigned char pckbd_sysrq_xlate[50,1182
spinlock_t kbd_controller_lock 63,1702
static volatile unsigned char reply_expected 66,1813
static volatile unsigned char acknowledge 67,1863
static volatile unsigned char resend 68,1910
static struct aux_queue *queue;78,2051
static int aux_count 79,2108
static unsigned char mouse_reply_expected 81,2200
#define AUX_INTS_OFF 83,2248
#define AUX_INTS_ON 84,2343
#define MAX_RETRIES	86,2435
# define AUX_IRQ	89,2516
static void kb_wait(107,2930
#define E0_KPENTER 138,3639
#define E0_RCTRL 139,3661
#define E0_KPSLASH 140,3683
#define E0_PRSCR 141,3705
#define E0_RALT 142,3727
#define E0_BREAK 143,3750
#define E0_HOME 144,3796
#define E0_UP 145,3819
#define E0_PGUP 146,3842
#define E0_LEFT 147,3865
#define E0_RIGHT 148,3888
#define E0_END 149,3911
#define E0_DOWN 150,3934
#define E0_PGDN 151,3957
#define E0_INS 152,3980
#define E0_DEL 153,4003
#define E1_PAUSE 155,4027
#define SC_LIM 164,4408
#define FOCUS_PF1 166,4427
#define FOCUS_PF2 167,4477
#define FOCUS_PF3 168,4498
#define FOCUS_PF4 169,4519
#define FOCUS_PF5 170,4540
#define FOCUS_PF6 171,4561
#define FOCUS_PF7 172,4582
#define FOCUS_PF8 173,4603
#define FOCUS_PF9 174,4624
#define FOCUS_PF10 175,4646
#define FOCUS_PF11 176,4669
#define FOCUS_PF12 177,4692
#define JAP_86 179,4716
#define RGN1 186,4951
#define RGN2 187,4968
#define RGN3 188,4985
#define RGN4 189,5002
static unsigned char high_keys[191,5020
#define E0_MACRO 201,5497
#define E0_F13 203,5532
#define E0_F14 204,5555
#define E0_HELP 205,5578
#define E0_DO 206,5601
#define E0_F17 207,5624
#define E0_KPMINPLUS 208,5647
#define E0_OK	213,5791
#define E0_MSLW	220,6015
#define E0_MSRW	221,6035
#define E0_MSTM	222,6055
static unsigned char e0_keys[224,6076
static unsigned int prev_scancode 243,7061
int pckbd_setkeycode(245,7125
int pckbd_getkeycode(256,7393
static int do_acknowledge(264,7586
int pckbd_pretranslate(297,8386
int pckbd_translate(319,8850
char pckbd_unexpected_up(398,11315
static inline void handle_mouse_event(408,11593
static unsigned char handle_kbd_event(442,12286
static void keyboard_interrupt(466,12702
static int send_data(484,13166
void pckbd_leds(515,13773
 int kbd_startup_reset __initdata 531,14279
 int kbd_startup_reset __initdata 533,14324
void __init kbd_reset_setup(537,14407
#define KBD_NO_DATA	542,14486
#define KBD_BAD_DATA	543,14525
static int __init kbd_read_input(545,14580
static void __init kbd_clear_input(561,14888
static int __init kbd_wait_for_input(571,15052
static void kbd_write(584,15258
static void kbd_write_cmd(595,15495
static char * __init initialize_kbd(608,15781
void __init pckbd_init_hw(707,18453
static int __init detect_auxiliary_port(734,19025
static void aux_write_dev(776,20066
static void aux_write_ack(791,20382
static unsigned char get_from_queue(806,20715
static inline int queue_empty(819,21016
static int fasync_aux(824,21093
#define AUX_DEV 838,21319
static int release_aux(840,21352
static int open_aux(856,21700
static ssize_t read_aux(879,22267
static ssize_t write_aux(917,23063
static unsigned int aux_poll(943,23515
struct file_operations psaux_fops 951,23692
static struct miscdevice psaux_mouse 969,23944
static int __init psaux_init(973,24026

drivers/char/lp_m68k.c,892
#define FORCE_POLLING	69,2144
#define FORCE_INTERRUPT	70,2169
#define WHICH_DRIVER	78,2353
struct lp_struct *lp_table[80,2391
static int max_lp;82,2438
#define LP_DEBUG 89,2589
static int lp_max_count 95,2678
static int lp_char_polled(98,2715
unsigned int lp_total_chars 125,3246
unsigned int lp_last_call 126,3279
static __inline__ int lp_char_interrupt(131,3353
static int lp_error;140,3523
void lp_interrupt(142,3545
static ssize_t lp_write(175,4217
static ssize_t lp_write(272,7289
unsigned int lp_irq 346,9131
static ssize_t lp_write(349,9194
static long long lp_lseek(359,9419
static int lp_open(364,9517
static int lp_release(403,10190
static int lp_ioctl(414,10390
static struct file_operations lp_fops 458,11266
__initfunc(477,11626
__initfunc(510,12281
int init_module(515,12349
void cleanup_module(520,12400
int register_parallel(532,12679
if 539,12822

drivers/char/riscom8.c,3098
#define RISCOM_PARANOIA_CHECK51,1688
#define RISCOM_BRAIN_DAMAGED_CTS59,1927
#define RISCOM_LEGAL_FLAGS 69,2157
#define MIN(MIN75,2383
#define RISCOM_TYPE_NORMAL	80,2464
#define RISCOM_TYPE_CALLOUT	81,2493
static struct riscom_board * IRQ_to_board[83,2524
static struct tty_driver riscom_driver,84,2584
static struct tty_driver riscom_driver, riscom_callout_driver;84,2584
static int    riscom_refcount 85,2647
static struct tty_struct * riscom_table[86,2682
static struct termios * riscom_termios[87,2757
static struct termios * riscom_termios_locked[88,2831
static unsigned char * tmp_buf 89,2912
static struct semaphore tmp_buf_sem 90,2951
static unsigned long baud_table[92,2997
static struct riscom_board rc_board[97,3145
static struct riscom_port rc_port[104,3297
static unsigned short rc_ioport[109,3438
#define RC_NIOPORT	118,3783
static inline int rc_paranoia_check(121,3847
extern inline int board_No 149,4469
extern inline int port_No 155,4592
extern inline struct riscom_board * port_Board(161,4739
extern inline unsigned char rc_in(167,4909
extern inline void rc_out(173,5079
extern inline void rc_wait_CCR(180,5271
extern inline int rc_check_io_range(196,5601
extern inline void rc_request_io_range(209,5912
extern inline void rc_release_io_range(217,6103
extern inline void rc_long_delay(227,6329
__initfunc(235,6495
__initfunc(260,7554
extern inline void rc_mark_event(329,9393
extern inline struct riscom_port * rc_get_port(344,9886
extern inline void rc_receive_exc(362,10369
extern inline void rc_receive(425,11887
extern inline void rc_transmit(455,12548
extern inline void rc_check_modem(524,14257
static void rc_interrupt(576,15582
extern inline int rc_setup_board(637,17021
extern inline void rc_shutdown_board(660,17530
static void rc_change_speed(680,17928
static int rc_setup_port(846,22205
static void rc_shutdown_port(884,22978
static int block_til_ready(946,24330
static int rc_open(1061,27292
static void rc_close(1107,28368
static int rc_write(1201,31053
static void rc_put_char(1254,32372
static void rc_flush_chars(1278,32884
static int rc_write_room(1297,33382
static int rc_chars_in_buffer(1311,33677
static void rc_flush_buffer(1321,33912
static int rc_get_modem_info(1339,34402
static int rc_set_modem_info(1361,35048
extern inline void rc_send_break(1402,36046
extern inline int rc_set_serial_info(1420,36535
extern inline int rc_get_serial_info(1470,37933
static int rc_ioctl(1495,38621
static void rc_throttle(1552,40175
static void rc_unthrottle(1575,40697
static void rc_stop(1598,41222
static void rc_start(1616,41635
static void do_rc_hangup(1645,42406
static void rc_hangup(1657,42598
static void rc_set_termios(1675,43027
static void do_riscom_bh(1698,43619
static void do_softint(1703,43685
static inline int rc_init_drivers(1719,44080
static void rc_release_drivers(1798,46736
__initfunc(1821,47247
__initfunc(1837,47508
int iobase 1860,47925
int iobase1 1861,47942
int iobase2 1862,47959
int iobase3 1863,47976
int init_module(1874,48243
void cleanup_module(1895,48591

drivers/char/h8.c,2360
#define __KERNEL_SYSCALLS__30,596
#define DEBUG_H835,666
#define Dprintk	38,700
#define Dprintk40,730
#define XDprintk 43,754
#define H8_MINOR_DEV 48,852
static struct timer_list h8_monitor_timer;102,2232
static int h8_monitor_timer_active 103,2275
static char  driver_version[105,2316
static struct file_operations h8_fops 107,2372
static struct miscdevice h8_device 122,2726
static struct proc_dir_entry    h8_proc_entry 129,2844
union	intr_buf intrbuf;134,2971
int	intr_buf_ptr;135,2995
union   intr_buf xx;136,3013
u_char  last_temp;137,3035
#define H8_READ(H8_READ142,3107
#define H8_WRITE(H8_WRITE143,3136
#define	H8_GET_STATUS	145,3173
#define H8_READ_DATA	146,3234
#define WRITE_DATA(WRITE_DATA147,3292
#define WRITE_CMD(WRITE_CMD148,3355
unsigned int h8_base 150,3417
unsigned int h8_irq 151,3454
unsigned int h8_state 152,3484
unsigned int h8_index 153,3517
unsigned int h8_enabled 154,3545
queue_head_t h8_actq,156,3575
queue_head_t h8_actq, h8_cmdq,156,3575
queue_head_t h8_actq, h8_cmdq, h8_freeq;156,3575
int cpu_speed_divisor 161,3675
int h8_event_mask 162,3706
struct wait_queue *h8_monitor_wait 163,3732
unsigned int h8_command_mask 164,3775
int h8_uthermal_threshold 165,3809
int h8_uthermal_window 166,3865
int h8_debug 167,3914
int h8_ldamp 168,3941
int h8_udamp 169,3965
u_char h8_current_temp 170,3988
u_char h8_system_temp 171,4016
int h8_sync_channel 172,4043
struct wait_queue *h8_sync_wait 173,4068
int h8_init_performed;174,4108
int speed_tab[177,4174
static void h8_intr(182,4256
int init_module(312,7692
void cleanup_module(340,8361
int h8_init(349,8517
void h8_hw_init(378,9189
int h8_get_info(411,9862
int h8_display_blank(437,10363
int h8_display_unblank(453,10758
h8_alloc_queues(469,11088
h8_q_cmd(496,11774
h8_start_new_cmd(533,12743
h8_send_next_cmd_byte(576,13998
h8_sync(600,14516
h8_read_event_status(614,14767
h8_cmd_done(726,18116
h8_get_curr_temp(879,22325
h8_get_max_temp(908,22995
h8_set_upper_therm_thold(922,23337
h8_get_upper_therm_thold(940,23729
h8_get_ext_status(956,24122
h8_monitor_thread(993,25038
h8_manage_therm(1059,27405
h8_set_cpu_speed(1102,29054
h8_get_cpu_speed(1152,30726
h8_activate_monitor(1189,31725
h8_start_monitor_timer(1201,31916
static void h8_set_event_mask(1218,32302
static void h8_clear_event_mask(1227,32444

drivers/char/riscom8.h,506
#define __LINUX_RISCOM8_H29,1265
#define RC_NBOARD	35,1338
#define RC_NPORT 37,1413
#define RC_BOARD(RC_BOARD38,1442
#define RC_PORT(RC_PORT39,1489
#define RISCOM_TPS	42,1611
#define RISCOM_RXFIFO	47,1732
#define RISCOM8_MAGIC	49,1794
#define RC_IOBASE1	51,1825
#define RC_IOBASE2	52,1850
#define RC_IOBASE3	53,1875
#define RC_IOBASE4	54,1900
struct riscom_board riscom_board56,1926
#define RC_BOARD_PRESENT	64,2061
#define RC_BOARD_ACTIVE	65,2097
struct riscom_port riscom_port67,2135

drivers/char/riscom8_reg.h,4171
#define RC_TO_ISA(RC_TO_ISA16,432
#define RC_RI 21,561
#define RC_DTR 22,639
#define RC_BSR 23,717
#define RC_CTOUT 24,795
#define RC_BSR_TOUT 29,904
#define RC_BSR_RINT 30,982
#define RC_BSR_TINT 31,1060
#define RC_BSR_MINT 32,1138
#define RC_OSCFREQ 36,1262
#define RC_ACK_MINT 39,1337
#define RC_ACK_RINT 40,1415
#define RC_ACK_TINT 41,1493
#define RC_ID 44,1613
#define CD180_NCH 48,1711
#define CD180_TPC 49,1789
#define CD180_NFIFO	50,1867
#define CD180_GIVR 55,1961
#define CD180_GICR 56,2039
#define CD180_PILR1 57,2117
#define CD180_PILR2 58,2195
#define CD180_PILR3 59,2273
#define CD180_CAR 60,2351
#define CD180_GFRCR 61,2429
#define CD180_PPRH 62,2507
#define CD180_PPRL 63,2585
#define CD180_RDR 64,2663
#define CD180_RCSR 65,2741
#define CD180_TDR 66,2819
#define CD180_EOIR 67,2897
#define CD180_CCR 72,3002
#define CD180_IER 73,3080
#define CD180_COR1 74,3158
#define CD180_COR2 75,3236
#define CD180_COR3 76,3314
#define CD180_CCSR 77,3392
#define CD180_RDCR 78,3470
#define CD180_SCHR1 79,3548
#define CD180_SCHR2 80,3626
#define CD180_SCHR3 81,3704
#define CD180_SCHR4 82,3782
#define CD180_MCOR1 83,3860
#define CD180_MCOR2 84,3938
#define CD180_MCR 85,4016
#define CD180_RTPR 86,4094
#define CD180_MSVR 87,4172
#define CD180_RBPRH 88,4250
#define CD180_RBPRL 89,4328
#define CD180_TBPRH 90,4406
#define CD180_TBPRL 91,4484
#define GIVR_ITMASK 96,4610
#define  GIVR_IT_MODEM 97,4689
#define  GIVR_IT_TX 98,4768
#define  GIVR_IT_RCV 99,4847
#define  GIVR_IT_REXC 100,4926
#define GICR_CHAN 105,5055
#define GICR_CHAN_OFF 106,5133
#define CAR_CHAN 111,5251
#define CAR_A7 112,5329
#define RCSR_TOUT 117,5456
#define RCSR_SCDET 118,5534
#define  RCSR_NO_SC 119,5612
#define  RCSR_SC_1 120,5690
#define  RCSR_SC_2 121,5768
#define  RCSR_SC_3 122,5846
#define  RCSR_SC_4 123,5924
#define RCSR_BREAK 124,6002
#define RCSR_PE 125,6080
#define RCSR_FE 126,6158
#define RCSR_OE 127,6236
#define CCR_HARDRESET 132,6388
#define CCR_SOFTRESET 134,6467
#define CCR_CORCHG1 136,6546
#define CCR_CORCHG2 137,6624
#define CCR_CORCHG3 138,6702
#define CCR_SSCH1 140,6781
#define CCR_SSCH2 142,6860
#define CCR_SSCH3 144,6939
#define CCR_SSCH4 146,7018
#define CCR_TXEN 148,7097
#define CCR_RXEN 149,7175
#define CCR_TXDIS 151,7254
#define CCR_RXDIS 152,7332
#define IER_DSR 157,7451
#define IER_CD 158,7529
#define IER_CTS 159,7607
#define IER_RXD 160,7685
#define IER_RXSC 161,7763
#define IER_TXRDY 162,7841
#define IER_TXEMPTY 163,7919
#define IER_RET 164,7997
#define COR1_ODDP 169,8116
#define COR1_PARMODE 170,8194
#define  COR1_NOPAR 171,8272
#define  COR1_FORCEPAR 172,8350
#define  COR1_NORMPAR 173,8428
#define COR1_IGNORE 174,8506
#define COR1_STOPBITS 175,8584
#define  COR1_1SB 176,8662
#define  COR1_15SB 177,8740
#define  COR1_2SB 178,8818
#define COR1_CHARLEN 179,8896
#define  COR1_5BITS 180,8974
#define  COR1_6BITS 181,9052
#define  COR1_7BITS 182,9130
#define  COR1_8BITS 183,9208
#define COR2_IXM 188,9327
#define COR2_TXIBE 189,9405
#define COR2_ETC 190,9483
#define COR2_LLM 191,9561
#define COR2_RLM 192,9639
#define COR2_RTSAO 193,9717
#define COR2_CTSAE 194,9795
#define COR2_DSRAE 195,9873
#define COR3_XONCH 200,9992
#define COR3_XOFFCH 201,10070
#define COR3_FCT 202,10148
#define COR3_SCDE 203,10226
#define COR3_RXTH 204,10304
#define CCSR_RXEN 209,10429
#define CCSR_RXFLOFF 210,10507
#define CCSR_RXFLON 211,10585
#define CCSR_TXEN 212,10663
#define CCSR_TXFLOFF 213,10741
#define CCSR_TXFLON 214,10819
#define MCOR1_DSRZD 219,10943
#define MCOR1_CDZD 220,11021
#define MCOR1_CTSZD 221,11099
#define MCOR1_DTRTH 222,11177
#define  MCOR1_NODTRFC 223,11255
#define MCOR2_DSROD 228,11380
#define MCOR2_CDOD 229,11458
#define MCOR2_CTSOD 230,11536
#define MCR_DSRCHG 235,11651
#define MCR_CDCHG 236,11729
#define MCR_CTSCHG 237,11807
#define MSVR_DSR 242,11928
#define MSVR_CD 243,12006
#define MSVR_CTS 244,12084
#define MSVR_DTR 245,12162
#define MSVR_RTS 246,12240
#define CD180_C_ESC 251,12345
#define CD180_C_SBRK 252,12423
#define CD180_C_DELAY 253,12501
#define CD180_C_EBRK 254,12579

drivers/char/pcwd.c,1279
static int pcwd_ioports[68,2621
#define WD_VER 70,2682
#define	PCWD_REVISION_A	79,3049
#define	PCWD_REVISION_C	80,3076
#define	WD_TIMEOUT	82,3104
#define WD_WDRST 87,3231
#define WD_T110 88,3297
#define WD_HRTBT 89,3367
#define WD_RLY2 90,3426
#define WD_SRLY2 91,3494
static int current_readport,93,3572
static int current_readport, revision,93,3572
static int current_readport, revision, temp_panic;93,3572
static int is_open,94,3623
static int is_open, initial_status,94,3623
static int is_open, initial_status, supports_temp,94,3623
static int is_open, initial_status, supports_temp, mode_debug;94,3623
__initfunc(102,3831
void pcwd_showprevstate(174,5642
static void pcwd_send_heartbeat(210,6569
static int pcwd_ioctl(225,6841
static ssize_t pcwd_write(363,9253
static int pcwd_open(378,9505
static ssize_t pcwd_read(399,10161
static int pcwd_close(421,10653
static inline void get_support(438,11006
static inline int get_revision(444,11105
__initfunc(453,11287
static inline char *get_firmware(466,11464
static void debug_off(503,12094
static struct file_operations pcwd_fops 509,12181
static struct miscdevice pcwd_miscdev 527,12567
static struct miscdevice temp_miscdev 533,12655
int init_module(540,12757
void cleanup_module(616,14305

drivers/char/dsp56k.c,1083
#define DSP56K_DEV_56001 46,1282
#define TIMEOUT 48,1349
#define MAXIO 49,1416
#define DSP56K_MAX_BINARY_LENGTH 50,1483
#define DSP56K_TX_INT_ON	52,1529
#define DSP56K_RX_INT_ON	53,1600
#define DSP56K_TX_INT_OFF	54,1671
#define DSP56K_RX_INT_OFF	55,1743
#define DSP56K_TRANSMIT	57,1816
#define DSP56K_RECEIVE	58,1887
#define max(max60,1958
#define min(min61,1999
#define wait_some(wait_some63,2041
#define handshake(handshake69,2135
#define tx_wait(tx_wait86,2464
#define rx_wait(rx_wait96,2614
static char bootstrap[107,2792
static int sizeof_bootstrap 146,5109
static struct dsp56k_device dsp56k_device149,5146
} dsp56k;153,5236
static int dsp56k_reset(155,5247
static int dsp56k_upload(174,5604
static ssize_t dsp56k_read(208,6364
static ssize_t dsp56k_write(271,7759
static int dsp56k_ioctl(333,9165
static unsigned int dsp56k_poll(427,11417
static int dsp56k_open(444,11759
static int dsp56k_release(481,12396
static struct file_operations dsp56k_fops 503,12723
__initfunc(523,13240
int init_module(541,13614
void cleanup_module(546,13664

drivers/char/pc_keyb.h,2002
#define KBD_REPORT_UNKN	14,227
#define KBD_REPORT_TIMEOUTS	15,285
#define KBD_INIT_TIMEOUT 21,506
#define KBC_TIMEOUT 22,587
#define KBD_TIMEOUT 23,668
extern unsigned char pckbd_read_mask;29,792
extern unsigned char aux_device_present;30,830
#define KBD_STATUS_REG	36,913
#define KBD_CNTL_REG	37,968
#define KBD_DATA_REG	38,1033
#define KBD_CCMD_READ_MODE	44,1136
#define KBD_CCMD_WRITE_MODE	45,1189
#define KBD_CCMD_GET_VERSION	46,1244
#define KBD_CCMD_MOUSE_DISABLE	47,1307
#define KBD_CCMD_MOUSE_ENABLE	48,1373
#define KBD_CCMD_TEST_MOUSE	49,1437
#define KBD_CCMD_SELF_TEST	50,1497
#define KBD_CCMD_KBD_TEST	51,1556
#define KBD_CCMD_KBD_DISABLE	52,1617
#define KBD_CCMD_KBD_ENABLE	53,1684
#define KBD_CCMD_WRITE_AUX_OBUF	54,1749
#define KBD_CCMD_WRITE_MOUSE	56,1866
#define KBD_CMD_SET_LEDS	62,1974
#define KBD_CMD_SET_RATE	63,2028
#define KBD_CMD_ENABLE	64,2083
#define KBD_CMD_DISABLE	65,2134
#define KBD_CMD_RESET	66,2187
#define KBD_REPLY_POR	72,2256
#define KBD_REPLY_ACK	73,2305
#define KBD_REPLY_RESEND	74,2351
#define KBD_STAT_OBF 80,2453
#define KBD_STAT_IBF 81,2515
#define KBD_STAT_SELFTEST	82,2576
#define KBD_STAT_CMD	83,2634
#define KBD_STAT_UNLOCKED	84,2707
#define KBD_STAT_MOUSE_OBF	85,2768
#define KBD_STAT_GTO 86,2831
#define KBD_STAT_PERR 87,2894
#define AUX_STAT_OBF 89,2943
#define KBD_MODE_KBD_INT	95,3042
#define KBD_MODE_MOUSE_INT	96,3106
#define KBD_MODE_SYS 97,3170
#define KBD_MODE_NO_KEYLOCK	98,3224
#define KBD_MODE_DISABLE_KBD	99,3310
#define KBD_MODE_DISABLE_MOUSE	100,3377
#define KBD_MODE_KCC 101,3443
#define KBD_MODE_RFU	102,3511
#define AUX_SET_RES	108,3565
#define AUX_SET_SCALE11	109,3612
#define AUX_SET_SCALE21	110,3664
#define AUX_GET_SCALE	111,3716
#define AUX_SET_STREAM	112,3769
#define AUX_SET_SAMPLE	113,3820
#define AUX_ENABLE_DEV	114,3871
#define AUX_DISABLE_DEV	115,3924
#define AUX_RESET	116,3979
#define AUX_ACK	117,4026
#define AUX_BUF_SIZE	119,4074
struct aux_queue aux_queue124,4257

drivers/char/c-qcam.c,1363
struct qcam_device qcam_device21,433
#define QC_MILLIONS	34,715
#define QC_BILLIONS	35,740
#define QC_THOUSANDS	36,765
#define QC_DECIMATION_1	39,874
#define QC_DECIMATION_2	40,901
#define QC_DECIMATION_4	41,928
static inline void qcam_set_ack(43,956
static inline unsigned int qcam_ready1(50,1200
static inline unsigned int qcam_ready2(55,1324
static unsigned int qcam_await_ready1(60,1446
static unsigned int qcam_await_ready2(87,2161
static int qcam_read_data(114,2908
static int qcam_write_data(126,3238
static inline int qcam_set(140,3540
static inline int qcam_get(149,3739
static int qc_detect(156,3891
static void qc_reset(179,4322
static void qc_setup(191,4632
static unsigned int qcam_read_bytes(219,5354
#define BUFSZ	261,6548
static long qc_capture(263,6567
static int qcam_open(393,9067
static void qcam_close(399,9161
static int qcam_init_done(404,9235
static long qcam_write(409,9303
static int qcam_ioctl(414,9423
static long qcam_read(607,13382
static struct video_device qcam_template=619,13748
static struct qcam_device *qcam_init(639,14022
#define MAX_CAMS 672,14742
static struct qcam_device *qcams[673,14761
static unsigned int num_cams 674,14805
int init_cqcam(676,14840
void close_cqcam(721,15596
#define BANNER 728,15737
int init_module(731,15810
void cleanup_module(743,15987
__initfunc(750,16097

drivers/char/epca.c,3914
#define MODULE33,1173
#define NEW_MODULES48,1574
char kernel_version[90,2397
#define ENABLE_PCI96,2497
#define putUser(putUser102,2568
#define getUser(getUser103,2634
#define VERSION 119,2972
#define DIGIINFOMAJOR 123,3088
#define MIN(MIN126,3153
#define MAXCARDS 127,3194
#define epcaassert(epcaassert128,3213
static char mesg[132,3348
static int pc_refcount,133,3371
static int pc_refcount, nbdevs 133,3371
static int digi_poller_inhibited 134,3438
static int setup_error_code 136,3478
static int invalid_lilo_config 137,3511
static struct board_info boards[143,3780
struct tty_driver pc_driver;148,3897
struct tty_driver pc_callout;149,3926
struct tty_driver pc_info;150,3956
static struct tty_struct *pc_table[158,4322
static struct termios *pc_termios[159,4369
static struct termios *pc_termios_locked[160,4415
static struct channel digi_channels[173,5014
static struct channel *card_ptr[180,5393
static inline void memwinon(306,11322
static inline void memwinoff(311,11419
static inline void globalwinon(316,11518
static inline void rxwinon(321,11605
static inline void txwinon(326,11684
static inline void memoff(331,11763
static inline void assertgwinon(335,11839
static inline void assertmemoff(340,11928
static inline void pcxem_memwinon(350,12220
static inline void pcxem_memwinoff(355,12345
static inline void pcxem_globalwinon(360,12455
static inline void pcxem_rxwinon(365,12561
static inline void pcxem_txwinon(370,12665
static inline void pcxem_memoff(375,12769
static inline void pcxe_memwinon(382,12939
static inline void pcxe_memwinoff(387,13072
static inline void pcxe_globalwinon(394,13249
static inline void pcxe_rxwinon(399,13354
static inline void pcxe_txwinon(404,13458
static inline void pcxe_memoff(409,13562
static inline void pcxi_memwinon(417,13768
static inline void pcxi_memwinoff(422,13911
static inline void pcxi_globalwinon(427,14042
static inline void pcxi_rxwinon(432,14142
static inline void pcxi_txwinon(437,14239
static inline void pcxi_memoff(442,14336
static inline void pcxi_assertgwinon(447,14426
static inline void pcxi_assertmemoff(452,14558
static inline void dummy_memwinon(467,15217
static inline void dummy_memwinoff(471,15296
static inline void dummy_globalwinon(475,15376
static inline void dummy_rxwinon(479,15438
static inline void dummy_txwinon(483,15496
static inline void dummy_memoff(487,15554
static inline void dummy_assertgwinon(491,15611
static inline void dummy_assertmemoff(495,15674
static inline struct channel *verifyChannel(500,15814
static inline void pc_sched_event(530,16717
static void epca_error(547,17272
static void pc_close(556,17506
static void shutdown(673,20435
static void pc_hangup(726,21928
static int pc_write(770,22934
static void pc_put_char(1064,33513
static int pc_write_room(1075,33743
static int pc_chars_in_buffer(1125,34849
static void pc_flush_buffer(1195,36771
static void pc_flush_chars(1235,37735
static int block_til_ready(1267,38651
static int pc_open(1423,42429
int init_module(1591,47250
void cleanup_module(1609,47514
int pc_init(1665,48605
static void post_fep_init(1980,59184
static void epcapoll(2264,68185
static void doevent(2330,70102
static void fepcmd(2493,74074
static unsigned termios2digi_h(2606,77505
static unsigned termios2digi_i(2643,78271
static unsigned termios2digi_c(2657,78663
static void epcaparam(2735,81724
static void receive_data(2900,86991
static int pc_ioctl(3026,90347
static void pc_set_termios(3444,99562
static void do_softint(3480,100502
static void pc_stop(3516,101412
static void pc_start(3555,102281
static void pc_throttle(3609,103805
static void pc_unthrottle(3643,104573
void digi_send_break(3682,105476
static void setup_empty_event(3708,106258
static int get_termio(3732,106951
void epca_setup(3745,107320
int get_PCI_configuration(4041,115128
int init_PCI(4102,117449

drivers/char/qpmouse.c,1202
#define PSMOUSE_MINOR 52,1381
#define QP_BUF_SIZE	53,1455
struct qp_queue qp_queue55,1481
static struct qp_queue *queue;63,1640
static unsigned int get_from_queue(65,1672
static inline int queue_empty(79,1918
static int fasync_qp(84,1995
#define QP_DATA 98,2198
#define QP_STATUS 99,2257
#define QP_DEV_IDLE 101,2319
#define QP_RX_FULL 102,2367
#define QP_TX_IDLE 103,2424
#define QP_RESET 104,2477
#define QP_INTS_ON 105,2526
#define QP_ERROR_FLAG 106,2582
#define QP_CLEAR 107,2631
#define QP_ENABLE 108,2680
#define QP_IRQ 110,2731
static int qp_present 112,2759
static int qp_count 113,2786
static int qp_data 114,2811
static int qp_status 115,2841
static void qp_interrupt(125,3034
static int release_qp(141,3425
static int open_qp(164,3956
static ssize_t write_qp(207,4848
static unsigned int poll_qp(223,5151
#define MAX_RETRIES 235,5400
static int poll_qp_status(237,5426
static ssize_t read_qp(258,5848
struct file_operations qp_fops 292,6607
static struct miscdevice qp_mouse 310,6850
static inline unsigned char read_710(318,6976
static int __init probe_qp(329,7194
int __init qpmouse_init(345,7746
int init_module(363,8192
void cleanup_module(368,8243

drivers/char/acquirewdt.c,560
static int acq_is_open=41,1186
#define WDT_STOP 47,1292
#define WDT_START 48,1314
#define WD_TIMO 50,1339
static void acq_ping(58,1411
static ssize_t acq_write(64,1492
static ssize_t acq_read(78,1730
static int acq_ioctl(85,1836
static int acq_open(115,2386
static int acq_close(135,2690
static int acq_notify_sys(152,2950
static struct file_operations acq_fops 168,3188
static struct miscdevice acq_miscdev=181,3390
static struct notifier_block acq_notifier=194,3586
#define acq_init 203,3677
void cleanup_module(205,3707
__initfunc(215,3881

drivers/char/nvram.c,2211
#define NVRAM_VERSION	30,1340
#define PC	35,1423
#define ATARI	36,1437
#define MACH 40,1515
#define MACH 42,1577
#define CHECK_DRIVER_INIT(CHECK_DRIVER_INIT50,1706
#define PC_CKS_RANGE_START	53,1795
#define PC_CKS_RANGE_END	54,1824
#define PC_CKS_LOC	55,1852
#define	mach_check_checksum	57,1877
#define	mach_set_checksum	58,1923
#define	mach_proc_infos	59,1965
#define RTC_PORT(RTC_PORT68,2135
#define CHECK_DRIVER_INIT(CHECK_DRIVER_INIT69,2178
#define ATARI_CKS_RANGE_START	73,2365
#define ATARI_CKS_RANGE_END	74,2397
#define ATARI_CKS_LOC	75,2429
#define	mach_check_checksum	77,2457
#define	mach_set_checksum	78,2506
#define	mach_proc_infos	79,2551
static int nvram_open_cnt 107,3249
static int nvram_open_mode;108,3300
#define	NVRAM_WRITE	109,3354
#define	NVRAM_EXCL	110,3415
#define	RTC_FIRST_BYTE	112,3464
#define	NVRAM_BYTES	113,3537
static __inline__ unsigned char nvram_read_int(130,4046
static __inline__ void nvram_write_int(135,4149
static __inline__ int nvram_check_checksum_int(140,4255
static __inline__ void nvram_set_checksum_int(145,4349
unsigned char nvram_read_byte(163,4949
void nvram_write_byte(175,5125
int nvram_check_checksum(185,5278
void nvram_set_checksum(197,5448
static long long nvram_llseek(214,5692
static ssize_t nvram_read(230,5989
static ssize_t nvram_write(256,6442
static int nvram_ioctl(286,6961
static int nvram_open(325,7742
static int nvram_release(341,8152
struct proc_dir_entry *proc_nvram;356,8423
static int nvram_read_proc(358,8459
#define	PRINT_PROC(PRINT_PROC383,9137
static struct file_operations nvram_fops 396,9439
static struct miscdevice nvram_dev 409,9665
__initfunc(416,9746
int init_module 433,10150
void cleanup_module 438,10203
static int pc_check_checksum(456,10411
static void pc_set_checksum(468,10681
static char *floppy_types[481,10957
static char *gfx_types[485,11060
static int pc_proc_infos(492,11174
static int atari_check_checksum(564,13170
static void atari_set_checksum(575,13461
} boot_prefs[591,13789
static char *languages[599,13918
static char *dateformat[611,14086
static char *colors[622,14251
#define fieldsize(fieldsize626,14331
static int atari_proc_infos(628,14376

drivers/char/videodev.c,725
#define VIDEO_NUM_DEVICES	36,875
static struct video_device *video_device[42,935
static struct video_init video_init_list[82,2009
static ssize_t video_read(128,2953
static ssize_t video_write(145,3336
static unsigned int video_poll(160,3716
static int video_read(171,3947
static int video_write(182,4226
static int video_open(199,4534
static int video_release(238,5222
static long long video_lseek(253,5536
static long long video_lseek(259,5647
static int video_ioctl(267,5785
int video_mmap(289,6162
int video_register_device(308,6682
void video_unregister_device(366,7509
static struct file_operations video_fops=375,7689
int videodev_init(399,8034
int init_module(423,8458
void cleanup_module(428,8510

drivers/char/rocket_int.h,9446
typedef unsigned char Byte_t;Byte_t49,1297
typedef unsigned int ByteIO_t;ByteIO_t50,1327
typedef unsigned int Word_t;Word_t52,1359
typedef unsigned int WordIO_t;WordIO_t53,1388
typedef unsigned long DWord_t;DWord_t55,1420
typedef unsigned int DWordIO_t;DWordIO_t56,1451
#define sOutB(sOutB58,1484
#define sOutW(sOutW59,1517
#define sOutDW(sOutDW60,1550
#define sInB(sInB61,1584
#define sInW(sInW62,1611
#define sOutStrW(sOutStrW64,1639
#define sInStrW(sInStrW66,1701
#define CTL_SIZE 68,1762
#define AIOP_CTL_SIZE 69,1781
#define CHAN_AIOP_SIZE 70,1805
#define MAX_PORTS_PER_AIOP 71,1830
#define MAX_AIOPS_PER_BOARD 72,1859
#define MAX_PORTS_PER_BOARD 73,1889
#define	isISA	76,1939
#define	isPCI	77,1955
#define	isMC	78,1971
#define CTLID_NULL 81,2015
#define CTLID_0001 82,2078
#define AIOPID_NULL 85,2207
#define AIOPID_0001 86,2275
#define NULLDEV 88,2333
#define NULLCTL 89,2406
#define NULLCTLPTR 90,2483
#define NULLAIOP 91,2561
#define NULLCHAN 92,2632
#define _CMD_REG 98,2912
#define _INT_CHAN 99,2983
#define _INT_MASK 100,3053
#define _UNUSED 101,3131
#define _INDX_ADDR 102,3193
#define _INDX_DATA 103,3264
#define _TD0 108,3557
#define _RD0 109,3627
#define _CHN_STAT0 110,3696
#define _FIFO_CNT0 111,3773
#define _INT_ID0 112,3842
#define _TX_ENBLS 117,4118
#define _TXCMP1 118,4197
#define _TXCMP2 119,4276
#define _TXREP1B1 120,4355
#define _TXREP1B2 121,4434
#define _TXREP2 122,4513
#define _RX_FIFO 127,4805
#define _TX_FIFO 128,4848
#define _RXF_OUTP 129,4891
#define _RXF_INP 130,4969
#define _TXF_OUTP 131,5047
#define _TXF_INP 132,5125
#define _TXP_CNT 133,5203
#define _TXP_PNTR 134,5281
#define PRI_PEND 136,5360
#define TXFIFO_SIZE 137,5436
#define RXFIFO_SIZE 138,5487
#define _TXP_BUF 143,5735
#define TXP_SIZE 144,5815
#define _TX_CTRL 150,6063
#define _RX_CTRL 151,6139
#define _BAUD 152,6215
#define _CLK_PRE 153,6291
#define CLOCK_PRESC 156,6374
#define BRD50 158,6455
#define BRD75 159,6486
#define BRD110 160,6519
#define BRD134 161,6550
#define BRD150 162,6581
#define BRD200 163,6612
#define BRD300 164,6643
#define BRD600 165,6674
#define BRD1200 166,6704
#define BRD1800 167,6734
#define BRD2000 168,6764
#define BRD2400 169,6794
#define BRD3600 170,6824
#define BRD4800 171,6854
#define BRD7200 172,6883
#define BRD9600 173,6912
#define BRD14400 174,6941
#define BRD19200 175,6971
#define BRD38400 176,7000
#define BRD57600 177,7029
#define BRD76800 178,7057
#define BRD115200 179,7085
#define BRD230400 180,7113
#define BRD460800	181,7141
#define CLOCK_PRESC 188,7249
#define BRD50 189,7321
#define BRD75 190,7352
#define BRD110 191,7383
#define BRD134 192,7414
#define BRD150 193,7445
#define BRD200 194,7476
#define BRD300 195,7507
#define BRD600 196,7537
#define BRD1200 197,7567
#define BRD1800 198,7597
#define BRD2000 199,7627
#define BRD2400 200,7657
#define BRD3600 201,7686
#define BRD4800 202,7715
#define BRD7200 203,7744
#define BRD9600 204,7773
#define BRD14400 205,7802
#define BRD19200 206,7831
#define BRD38400 207,7860
#define BRD57600 208,7888
#define BRD76800 209,7916
#define BRD115200 210,7944
#define BRD230400 211,7972
#define STMBREAK 215,8009
#define STMFRAME 216,8052
#define STMRCVROVR 217,8103
#define STMPARITY 218,8164
#define STMERROR 219,8214
#define STMBREAKH 220,8267
#define STMFRAMEH 221,8310
#define STMRCVROVRH 222,8361
#define STMPARITYH 223,8422
#define STMERRORH 224,8472
#define CTS_ACT 226,8530
#define DSR_ACT 227,8585
#define CD_ACT 228,8640
#define TXFIFOMT 229,8694
#define TXSHRMT 230,8747
#define RDA 231,8810
#define DRAINED 232,8864
#define STATMODE 234,8933
#define RXFOVERFL 235,8992
#define RX2MATCH 236,9050
#define RX1MATCH 237,9115
#define RXBREAK 238,9180
#define RXFRAME 239,9231
#define RXPARITY 240,9290
#define STATERROR 241,9348
#define CTSFC_EN 243,9398
#define RTSTOG_EN 244,9462
#define TXINT_EN 245,9520
#define STOP2 246,9582
#define PARITY_EN 247,9650
#define EVEN_PAR 248,9716
#define DATA8BIT 249,9781
#define SETBREAK 251,9846
#define LOCALLOOP 252,9916
#define SET_DTR 253,9980
#define SET_RTS 254,10027
#define TX_ENABLE 255,10074
#define RTSFC_EN 257,10130
#define RXPROC_EN 258,10190
#define TRIG_NO 259,10251
#define TRIG_1 260,10324
#define TRIG_1_2 261,10381
#define TRIG_7_8 262,10435
#define TRIG_MASK 263,10489
#define SRCINT_EN 264,10544
#define RXINT_EN 265,10618
#define MCINT_EN 266,10674
#define RXF_TRIG 268,10741
#define TXFIFO_MT 269,10809
#define SRC_INT 270,10869
#define DELTA_CD 271,10941
#define DELTA_CTS 272,10997
#define DELTA_DSR 273,11054
#define REP1W2_EN 275,11112
#define IGN2_EN 276,11183
#define IGN1_EN 277,11240
#define COMP2_EN 278,11297
#define COMP1_EN 279,11355
#define RESET_ALL 281,11414
#define TXOVERIDE 282,11476
#define RESETUART 283,11543
#define RESTXFCNT 284,11600
#define RESRXFCNT 285,11675
#define INTSTAT0 287,11751
#define INTSTAT1 288,11811
#define INTSTAT2 289,11871
#define INTSTAT3 290,11931
#define INTR_EN 292,11992
#define INT_STROB 293,12053
#define _CFG_INT_PCI 299,12306
#define _PCI_INT_FUNC 300,12333
#define PCI_STROB 302,12361
#define INTR_EN_PCI 303,12427
#define CHAN3_EN 306,12496
#define CHAN2_EN 307,12546
#define CHAN1_EN 308,12596
#define CHAN0_EN 309,12646
#define FREQ_DIS 310,12696
#define FREQ_274HZ 311,12719
#define FREQ_137HZ 312,12743
#define FREQ_69HZ 313,12767
#define FREQ_34HZ 314,12791
#define FREQ_17HZ 315,12815
#define FREQ_9HZ 316,12839
#define PERIODIC_ONLY 317,12863
#define CHANINT_EN 319,12924
#define RDATASIZE 321,13004
#define RREGDATASIZE 322,13025
} CONTROLLER_T;CONTROLLER_T342,13430
typedef CONTROLLER_T CONTROLLER_t;CONTROLLER_t344,13447
} CHANNEL_T;CHANNEL_T382,14109
typedef CHANNEL_T CHANNEL_t;CHANNEL_t384,14123
typedef CHANNEL_T * CHANPTR_T;CHANPTR_T385,14152
#define sClrBreak(sClrBreak393,14407
#define sClrDTR(sClrDTR405,14743
#define sClrRTS(sClrRTS417,15076
#define sClrTxXOFF(sClrTxXOFF429,15460
#define sCtlNumToCtlPtr(sCtlNumToCtlPtr442,15903
#define sControllerEOI(sControllerEOI450,16203
#define sPCIControllerEOI(sPCIControllerEOI458,16529
#define sDisAiop(sDisAiop467,16868
#define sDisCTSFlowCtl(sDisCTSFlowCtl479,17231
#define sDisIXANY(sDisIXANY491,17593
#define sDisParity(sDisParity505,18056
#define sDisRxFIFO(sDisRxFIFO517,18397
#define sDisRxStatusMode(sDisRxStatusMode532,18915
#define sDisTransmit(sDisTransmit544,19465
#define sDisTxSoftFlowCtl(sDisTxSoftFlowCtl556,19839
#define sEnAiop(sEnAiop569,20237
#define sEnCTSFlowCtl(sEnCTSFlowCtl581,20596
#define sEnIXANY(sEnIXANY593,20953
#define sEnParity(sEnParity610,21545
#define sEnRxFIFO(sEnRxFIFO622,21881
#define sEnRxProcessor(sEnRxProcessor643,22726
#define sEnRxStatusMode(sEnRxStatusMode659,23307
#define sEnTransmit(sEnTransmit667,23575
#define sEnTxSoftFlowCtl(sEnTxSoftFlowCtl679,23944
#define sGetAiopIntStatus(sGetAiopIntStatus695,24558
#define sGetAiopNumChan(sGetAiopNumChan705,24993
#define sGetChanIntID(sGetChanIntID721,25740
#define sGetChanNum(sGetChanNum731,26189
#define sGetChanStatus(sGetChanStatus759,27380
#define sGetChanStatusLo(sGetChanStatusLo775,28081
#define sGetControllerIntStatus(sGetControllerIntStatus788,28720
#define sPCIGetControllerIntStatus(sPCIGetControllerIntStatus801,29357
#define sGetRxCnt(sGetRxCnt813,29793
#define sGetTxCnt(sGetTxCnt824,30200
#define sGetTxRxDataIO(sGetTxRxDataIO833,30575
#define sInitChanDefaults(sInitChanDefaults844,31016
#define sResetAiopByNum(sResetAiopByNum859,31436
#define sSendBreak(sSendBreak871,31810
#define sSetBaud(sSetBaud884,32214
#define sSetData7(sSetData7897,32615
#define sSetData8(sSetData8909,32955
#define sSetDTR(sSetDTR921,33290
#define sSetEvenParity(sSetEvenParity938,33876
#define sSetOddParity(sSetOddParity955,34467
#define sSetRTS(sSetRTS967,34807
#define sSetRxTrigger(sSetRxTrigger992,35810
#define sSetStop1(sSetStop11005,36196
#define sSetStop2(sSetStop21017,36533
#define sSetTxXOFFChar(sSetTxXOFFChar1030,36965
#define sSetTxXONChar(sSetTxXONChar1043,37389
#define sStartRxProcessor(sStartRxProcessor1059,37970
#define sWriteTxByte(sWriteTxByte1070,38508
extern Byte_t R[1104,39393
extern CONTROLLER_T sController[1105,39421
extern Byte_t sIRQMap[1106,39464
extern Byte_t sBitMapClrTbl[1107,39491
extern Byte_t sBitMapSetTbl[1108,39523
extern int sClockPrescale;1109,39555
struct r_port r_port1118,39708
#define RPORT_MAGIC 1151,40379
#define NUM_BOARDS 1153,40409
#define MAX_RP_PORTS 1154,40430
#define XMIT_BUF_SIZE 1159,40531
#define WAKEUP_CHARS 1162,40629
#define ROCKET_INITIALIZED	1165,40711
#define ROCKET_CLOSING	1166,40770
#define ROCKET_NORMAL_ACTIVE	1167,40834
#define ROCKET_CALLOUT_ACTIVE	1168,40902
#define SERIAL_TYPE_NORMAL 1174,40999
#define SERIAL_TYPE_CALLOUT 1175,41028
#define TTY_ROCKET_MAJOR	1180,41119
#define CUA_ROCKET_MAJOR	1181,41147
#define MIN(MIN1187,41216
#define PCI_VENDOR_ID_RP	1198,41439
#define PCI_DEVICE_ID_RP32INTF	1199,41472
#define PCI_DEVICE_ID_RP8INTF	1200,41511
#define PCI_DEVICE_ID_RP16INTF	1201,41549
#define PCI_DEVICE_ID_RP8OCTA	1202,41588
#define PCI_DEVICE_ID_RP4QUAD	1205,41657
#define PCI_DEVICE_ID_RP8J	1208,41729
#define PCI_DEVICE_ID_RPP4	1211,41798
#define PCI_DEVICE_ID_RPP8	1214,41867
#define PCI_DEVICE_ID_RP8M	1217,41936

drivers/char/pms.c,2127
#define MOTOROLA	32,751
#define PHILIPS2	33,770
#define PHILIPS1	34,789
#define MVVMEMORYWIDTH	35,808
struct pms_devicepms_device37,854
struct i2c_infoi2c_info45,958
static int i2c_count 53,1020
static struct i2c_info i2cinfo[54,1048
static int decoder 56,1085
static int standard 57,1118
static int io_port	63,1228
static int data_port	64,1257
static int mem_base	65,1288
extern __inline__ void mvv_write(69,1324
extern __inline__ u8 mvv_read(74,1416
static int pms_i2c_stat(80,1508
static int pms_i2c_write(119,2065
static int pms_i2c_read(169,2830
static void pms_i2c_andor(181,3013
static void pms_videosource(195,3209
static void pms_hue(200,3292
static void pms_colour(216,3537
static void pms_contrast(230,3735
static void pms_brightness(243,3938
static void pms_format(259,4234
static void pms_hstart(300,5138
static void pms_bandpass(319,5433
static void pms_antisnow(327,5628
static void pms_sharpness(335,5823
static void pms_chromaagc(343,6012
static void pms_vertnoise(351,6205
static void pms_forcecolour(359,6388
static void pms_antigamma(367,6585
static void pms_prefilter(375,6777
static void pms_hfilter(383,6973
static void pms_vfilter(391,7167
static void pms_killcolour(399,7361
static void pms_chromagain(413,7682
static void pms_spacialcompl(426,7866
static void pms_spacialcomph(431,7936
static void pms_vstart(436,8006
static void pms_secamcross(444,8115
static void pms_swsense(453,8310
static void pms_framerate(468,8560
static void pms_vert(478,8715
static void pms_vertdeci(488,8926
static void pms_horzdeci(525,9408
static void pms_resolution(558,9845
static void pms_vcrinput(613,10830
static int pms_capture(622,11017
static int pms_open(666,11951
static void pms_close(672,12044
static int pms_init_done(677,12117
static long pms_write(682,12184
static int pms_ioctl(687,12303
static long pms_read(890,16485
struct video_device pms_template=901,16746
struct pms_device pms_device;919,17004
static int init_mediavision(926,17093
static void shutdown_mediavision(1027,19143
int init_module(1038,19282
void cleanup_module(1065,19851

drivers/char/bt848.h,9706
#define _BT848_H_22,836
#define PCI_VENDOR_ID_BROOKTREE 25,887
#define PCI_DEVICE_ID_BT848 28,962
#define PCI_DEVICE_ID_BT849 31,1036
#define PCI_DEVICE_ID_BT878 34,1109
#define PCI_DEVICE_ID_BT879 37,1182
#define BT848_DSTATUS 43,1260
#define BT848_DSTATUS_PRES 44,1297
#define BT848_DSTATUS_HLOC 45,1335
#define BT848_DSTATUS_FIELD 46,1373
#define BT848_DSTATUS_NUML 47,1411
#define BT848_DSTATUS_CSEL 48,1449
#define BT848_DSTATUS_PLOCK 49,1487
#define BT848_DSTATUS_LOF 50,1525
#define BT848_DSTATUS_COF 51,1563
#define BT848_IFORM 53,1602
#define BT848_IFORM_HACTIVE 54,1641
#define BT848_IFORM_MUXSEL 55,1679
#define BT848_IFORM_MUX0 56,1717
#define BT848_IFORM_MUX1 57,1755
#define BT848_IFORM_MUX2 58,1793
#define BT848_IFORM_XTSEL 59,1831
#define BT848_IFORM_XT0 60,1869
#define BT848_IFORM_XT1 61,1907
#define BT848_IFORM_XTAUTO 62,1945
#define BT848_IFORM_XTBOTH 63,1983
#define BT848_IFORM_NTSC 64,2021
#define BT848_IFORM_NTSC_J 65,2054
#define BT848_IFORM_PAL_BDGHI 66,2087
#define BT848_IFORM_PAL_M 67,2120
#define BT848_IFORM_PAL_N 68,2153
#define BT848_IFORM_SECAM 69,2186
#define BT848_IFORM_PAL_NC 70,2219
#define BT848_IFORM_AUTO 71,2252
#define BT848_IFORM_NORM 72,2285
#define BT848_TDEC 74,2319
#define BT848_TDEC_DEC_FIELD 75,2358
#define BT848_TDEC_FLDALIGN 76,2396
#define BT848_TDEC_DEC_RAT 77,2434
#define BT848_E_CROP 79,2473
#define BT848_O_CROP 80,2510
#define BT848_E_VDELAY_LO 82,2548
#define BT848_O_VDELAY_LO 83,2585
#define BT848_E_VACTIVE_LO 85,2623
#define BT848_O_VACTIVE_LO 86,2660
#define BT848_E_HDELAY_LO 88,2698
#define BT848_O_HDELAY_LO 89,2735
#define BT848_E_HACTIVE_LO 91,2773
#define BT848_O_HACTIVE_LO 92,2810
#define BT848_E_HSCALE_HI 94,2848
#define BT848_O_HSCALE_HI 95,2885
#define BT848_E_HSCALE_LO 97,2923
#define BT848_O_HSCALE_LO 98,2960
#define BT848_BRIGHT 100,2998
#define BT848_E_CONTROL 102,3036
#define BT848_O_CONTROL 103,3073
#define BT848_CONTROL_LNOTCH 104,3110
#define BT848_CONTROL_COMP 105,3149
#define BT848_CONTROL_LDEC 106,3188
#define BT848_CONTROL_CBSENSE 107,3227
#define BT848_CONTROL_CON_MSB 108,3266
#define BT848_CONTROL_SAT_U_MSB 109,3305
#define BT848_CONTROL_SAT_V_MSB 110,3344
#define BT848_CONTRAST_LO 112,3384
#define BT848_SAT_U_LO 113,3421
#define BT848_SAT_V_LO 114,3458
#define BT848_HUE 115,3495
#define BT848_E_SCLOOP 117,3533
#define BT848_O_SCLOOP 118,3570
#define BT848_SCLOOP_CAGC 119,3607
#define BT848_SCLOOP_CKILL 120,3646
#define BT848_SCLOOP_HFILT_AUTO 121,3685
#define BT848_SCLOOP_HFILT_CIF 122,3724
#define BT848_SCLOOP_HFILT_QCIF 123,3763
#define BT848_SCLOOP_HFILT_ICON 124,3802
#define BT848_SCLOOP_PEAK 126,3842
#define BT848_SCLOOP_HFILT_MINP 127,3881
#define BT848_SCLOOP_HFILT_MEDP 128,3920
#define BT848_SCLOOP_HFILT_MAXP 129,3959
#define BT848_OFORM 132,4000
#define BT848_OFORM_RANGE 133,4037
#define BT848_OFORM_CORE0 134,4075
#define BT848_OFORM_CORE8 135,4113
#define BT848_OFORM_CORE16 136,4151
#define BT848_OFORM_CORE32 137,4189
#define BT848_E_VSCALE_HI 139,4228
#define BT848_O_VSCALE_HI 140,4265
#define BT848_VSCALE_YCOMB 141,4302
#define BT848_VSCALE_COMB 142,4340
#define BT848_VSCALE_INT 143,4378
#define BT848_VSCALE_HI 144,4416
#define BT848_E_VSCALE_LO 146,4451
#define BT848_O_VSCALE_LO 147,4488
#define BT848_TEST 148,4525
#define BT848_ADELAY 149,4562
#define BT848_BDELAY 150,4599
#define BT848_ADC 152,4637
#define BT848_ADC_RESERVED 153,4674
#define BT848_ADC_SYNC_T 154,4712
#define BT848_ADC_AGC_EN 155,4750
#define BT848_ADC_CLK_SLEEP 156,4788
#define BT848_ADC_Y_SLEEP 157,4826
#define BT848_ADC_C_SLEEP 158,4864
#define BT848_ADC_CRUSH 159,4902
#define BT848_E_VTC 161,4941
#define BT848_O_VTC 162,4978
#define BT848_VTC_HSFMT 163,5015
#define BT848_VTC_VFILT_2TAP 164,5053
#define BT848_VTC_VFILT_3TAP 165,5086
#define BT848_VTC_VFILT_4TAP 166,5119
#define BT848_VTC_VFILT_5TAP 167,5152
#define BT848_SRESET 169,5186
#define BT848_COLOR_FMT 171,5224
#define BT848_COLOR_FMT_O_RGB32 172,5266
#define BT848_COLOR_FMT_O_RGB24 173,5309
#define BT848_COLOR_FMT_O_RGB16 174,5352
#define BT848_COLOR_FMT_O_RGB15 175,5395
#define BT848_COLOR_FMT_O_YUY2 176,5438
#define BT848_COLOR_FMT_O_BtYUV 177,5481
#define BT848_COLOR_FMT_O_Y8 178,5524
#define BT848_COLOR_FMT_O_RGB8 179,5567
#define BT848_COLOR_FMT_O_YCrCb422 180,5610
#define BT848_COLOR_FMT_O_YCrCb411 181,5653
#define BT848_COLOR_FMT_O_RAW 182,5696
#define BT848_COLOR_FMT_E_RGB32 183,5740
#define BT848_COLOR_FMT_E_RGB24 184,5778
#define BT848_COLOR_FMT_E_RGB16 185,5816
#define BT848_COLOR_FMT_E_RGB15 186,5854
#define BT848_COLOR_FMT_E_YUY2 187,5892
#define BT848_COLOR_FMT_E_BtYUV 188,5930
#define BT848_COLOR_FMT_E_Y8 189,5968
#define BT848_COLOR_FMT_E_RGB8 190,6006
#define BT848_COLOR_FMT_E_YCrCb422 191,6044
#define BT848_COLOR_FMT_E_YCrCb411 192,6082
#define BT848_COLOR_FMT_E_RAW 193,6120
#define BT848_COLOR_FMT_RGB32 195,6160
#define BT848_COLOR_FMT_RGB24 196,6201
#define BT848_COLOR_FMT_RGB16 197,6242
#define BT848_COLOR_FMT_RGB15 198,6283
#define BT848_COLOR_FMT_YUY2 199,6324
#define BT848_COLOR_FMT_BtYUV 200,6365
#define BT848_COLOR_FMT_Y8 201,6406
#define BT848_COLOR_FMT_RGB8 202,6447
#define BT848_COLOR_FMT_YCrCb422 203,6488
#define BT848_COLOR_FMT_YCrCb411 204,6529
#define BT848_COLOR_FMT_RAW 205,6570
#define BT848_COLOR_CTL 207,6612
#define BT848_COLOR_CTL_EXT_FRMRATE 208,6657
#define BT848_COLOR_CTL_COLOR_BARS 209,6703
#define BT848_COLOR_CTL_RGB_DED 210,6749
#define BT848_COLOR_CTL_GAMMA 211,6795
#define BT848_COLOR_CTL_WSWAP_ODD 212,6841
#define BT848_COLOR_CTL_WSWAP_EVEN 213,6887
#define BT848_COLOR_CTL_BSWAP_ODD 214,6933
#define BT848_COLOR_CTL_BSWAP_EVEN 215,6979
#define BT848_CAP_CTL 217,7026
#define BT848_CAP_CTL_DITH_FRAME 218,7071
#define BT848_CAP_CTL_CAPTURE_VBI_ODD 219,7117
#define BT848_CAP_CTL_CAPTURE_VBI_EVEN 220,7163
#define BT848_CAP_CTL_CAPTURE_ODD 221,7209
#define BT848_CAP_CTL_CAPTURE_EVEN 222,7255
#define BT848_VBI_PACK_SIZE 224,7302
#define BT848_VBI_PACK_DEL 226,7340
#define BT848_VBI_PACK_DEL_VBI_HDELAY 227,7377
#define BT848_VBI_PACK_DEL_EXT_FRAME 228,7420
#define BT848_VBI_PACK_DEL_VBI_PKT_HI 229,7460
#define BT848_INT_STAT 232,7502
#define BT848_INT_MASK 233,7539
#define BT848_INT_ETBF 235,7577
#define BT848_INT_RISCS 237,7617
#define BT848_INT_RISC_EN 238,7653
#define BT848_INT_RACK 239,7687
#define BT848_INT_FIELD 240,7721
#define BT848_INT_SCERR 241,7755
#define BT848_INT_OCERR 242,7789
#define BT848_INT_PABORT 243,7823
#define BT848_INT_RIPERR 244,7857
#define BT848_INT_PPERR 245,7891
#define BT848_INT_FDSR 246,7925
#define BT848_INT_FTRGT 247,7959
#define BT848_INT_FBUS 248,7993
#define BT848_INT_RISCI 249,8027
#define BT848_INT_GPINT 250,8061
#define BT848_INT_I2CDONE 251,8094
#define BT848_INT_VPRES 252,8127
#define BT848_INT_HLOCK 253,8160
#define BT848_INT_OFLOW 254,8193
#define BT848_INT_HSYNC 255,8226
#define BT848_INT_VSYNC 256,8259
#define BT848_INT_FMTCHG 257,8292
#define BT848_GPIO_DMA_CTL 260,8327
#define BT848_GPIO_DMA_CTL_GPINTC 261,8372
#define BT848_GPIO_DMA_CTL_GPINTI 262,8419
#define BT848_GPIO_DMA_CTL_GPWEC 263,8466
#define BT848_GPIO_DMA_CTL_GPIOMODE 264,8513
#define BT848_GPIO_DMA_CTL_GPCLKMODE 265,8560
#define BT848_GPIO_DMA_CTL_PLTP23_4 266,8607
#define BT848_GPIO_DMA_CTL_PLTP23_8 267,8653
#define BT848_GPIO_DMA_CTL_PLTP23_16 268,8699
#define BT848_GPIO_DMA_CTL_PLTP23_32 269,8745
#define BT848_GPIO_DMA_CTL_PLTP1_4 270,8791
#define BT848_GPIO_DMA_CTL_PLTP1_8 271,8837
#define BT848_GPIO_DMA_CTL_PLTP1_16 272,8883
#define BT848_GPIO_DMA_CTL_PLTP1_32 273,8929
#define BT848_GPIO_DMA_CTL_PKTP_4 274,8975
#define BT848_GPIO_DMA_CTL_PKTP_8 275,9021
#define BT848_GPIO_DMA_CTL_PKTP_16 276,9067
#define BT848_GPIO_DMA_CTL_PKTP_32 277,9113
#define BT848_GPIO_DMA_CTL_RISC_ENABLE 278,9159
#define BT848_GPIO_DMA_CTL_FIFO_ENABLE 279,9205
#define BT848_I2C 281,9252
#define BT848_I2C_DIV 282,9289
#define BT848_I2C_SYNC 283,9329
#define BT848_I2C_W3B	284,9367
#define BT848_I2C_SCL 285,9403
#define BT848_I2C_SDA 286,9441
#define BT848_RISC_STRT_ADD 289,9481
#define BT848_GPIO_OUT_EN 290,9518
#define BT848_GPIO_REG_INP 291,9555
#define BT848_RISC_COUNT 292,9592
#define BT848_GPIO_DATA 293,9629
#define BT848_FIFO_STATUS_FM1 299,9732
#define BT848_FIFO_STATUS_FM3 300,9768
#define BT848_FIFO_STATUS_SOL 301,9804
#define BT848_FIFO_STATUS_EOL4 302,9840
#define BT848_FIFO_STATUS_EOL3 303,9876
#define BT848_FIFO_STATUS_EOL2 304,9912
#define BT848_FIFO_STATUS_EOL1 305,9948
#define BT848_FIFO_STATUS_VRE 306,9984
#define BT848_FIFO_STATUS_VRO 307,10020
#define BT848_FIFO_STATUS_PXV 308,10056
#define BT848_RISC_RESYNC 310,10093
#define BT848_RISC_BYTE0 314,10194
#define BT848_RISC_BYTE1 315,10233
#define BT848_RISC_BYTE2 316,10272
#define BT848_RISC_BYTE3 317,10311
#define BT848_RISC_BYTE_ALL 318,10350
#define BT848_RISC_BYTE_NONE 319,10392
#define BT848_RISC_IRQ 321,10443
#define BT848_RISC_EOL 323,10526
#define BT848_RISC_SOL 325,10610
#define BT848_RISC_WRITE 327,10650
#define BT848_RISC_SKIP 328,10692
#define BT848_RISC_WRITEC 329,10734
#define BT848_RISC_JUMP 330,10776
#define BT848_RISC_SYNC 331,10818
#define BT848_RISC_WRITE123 333,10861
#define BT848_RISC_SKIP123 334,10903
#define BT848_RISC_WRITE1S23 335,10945
#define BT848_TGLB 340,11021
#define BT848_TGCTRL 341,11058
#define BT848_FCAP 342,11095
#define BT848_PLL_F_LO 343,11132
#define BT848_PLL_F_HI 344,11169
#define BT848_PLL_XCI 346,11207
#define BT848_PLL_X 347,11244
#define BT848_PLL_C 348,11282
#define BT878_DEVCTRL 352,11343
#define BT878_EN_TBFX 353,11370

drivers/char/pc110pad.c,1845
static struct pc110pad_params default_params 38,1033
static struct pc110pad_params current_params;47,1219
static struct wait_queue *queue;51,1312
static struct fasync_struct *asyncptr;52,1345
static int active=53,1384
static void set_timer_callback(60,1513
static void wake_readers(74,1833
static int button_pending=105,2724
static int recent_transition=106,2753
static int transition_count=107,2785
static int synthesize_tap=108,2816
static struct timer_list tap_timer 110,2890
static void tap_timeout(121,3282
void notify_pad_up_down(142,3704
static void read_button(161,4020
static int raw_data[199,4845
static int raw_data_count=200,4869
static int raw_x=201,4898
static int raw_down=202,4967
static int debounced_down=203,5015
static enum { NO_BOUNCE,204,5090
static enum { NO_BOUNCE, JUST_GONE_UP,204,5090
static enum { NO_BOUNCE, JUST_GONE_UP, JUST_GONE_DOWN 204,5090
static enum { NO_BOUNCE, JUST_GONE_UP, JUST_GONE_DOWN } bounce=204,5090
static int xy_pending=206,5211
static struct timer_list bounce_timer 214,5455
static void bounce_timeout(217,5535
static void pad_irq(268,6625
static void read_raw_pad(358,8452
static int read_bytes[382,9030
static int read_byte_count=383,9056
static void sample_raw(387,9089
static void sample_rare(395,9185
static void sample_debug(411,9428
static void sample_ps2(425,9733
static int fasync_pad(476,10681
static int close_pad(490,10887
static int open_pad(504,11134
static ssize_t write_pad(534,11873
void new_sample(540,11990
static ssize_t read_pad(555,12288
static unsigned int pad_poll(575,12629
static int pad_ioctl(584,12813
static struct file_operations pad_fops 619,13543
static struct miscdevice pc110_pad 638,13862
int pc110pad_init(643,13946
static void pc110pad_unload(669,14539
int init_module(681,14792
void cleanup_module(686,14844

drivers/char/saa5249.c,1350
#define VTX_VER_MAJ 59,1958
#define VTX_VER_MIN 60,1980
#define NUM_DAUS 64,2005
#define NUM_BUFS 65,2024
#define IF_NAME 66,2043
static const int disp_modes[68,2070
#define PAGE_WAIT 82,2464
#define PGBUF_EXPIRE 84,2571
} vdau_t;vdau_t93,3044
struct saa5249_devicesaa5249_device95,3055
#define CCTWR 107,3323
#define CCTRD 108,3382
#define NOACK_REPEAT 109,3399
#define CLEAR_DELAY 110,3470
#define I2C_TIMEOUT 111,3540
#define READY_TIMEOUT 112,3611
#define INIT_DELAY 113,3704
#define START_DELAY 114,3790
#define VTX_DEV_MINOR 116,3876
#define FALSE 121,3960
#define TRUE 122,3976
#define MIN(MIN125,4010
#define MAX(MAX126,4052
#define RESCHED 129,4102
static struct video_device saa_template;135,4221
static int saa5249_attach(141,4366
static int saa5249_detach(204,5618
static int saa5249_command(213,5786
static struct i2c_driver i2c_driver_videotext 221,5929
static void jdelay(236,6241
static int i2c_senddata(259,6943
static int i2c_sendbuf(297,7782
static int i2c_getdata(333,8735
static int saa5249_ioctl(364,9301
static int saa5249_open(615,17319
static void saa5249_release(650,18287
static long saa5249_write(659,18534
static long saa5249_read(664,18648
int init_saa_5249(669,18755
static struct video_device saa_template=678,18977
int init_module(702,19284
void cleanup_module(709,19346

drivers/char/pc110pad.h,317
#define _PC110PAD_H2,20
enum pc110pad_mode pc110pad_mode6,67
	PC110PAD_RAW,7,88
	PC110PAD_RARE,8,149
	PC110PAD_DEBUG,9,207
	PC110PAD_PS2,10,271
struct pc110pad_params pc110pad_params14,322
#define MS 22,437
#define PC110PAD_IOCTL_TYPE	26,516
#define PC110PADIOCGETP 28,551
#define PC110PADIOCSETP 29,628

drivers/char/cd1865.h,4465
#define SX_ACK_MINT 27,934
#define SX_ACK_TINT 28,1012
#define SX_ACK_RINT 29,1090
#define SX_ID 32,1222
#define CD186x_NCH 36,1321
#define CD186x_TPC 37,1400
#define CD186x_NFIFO	38,1479
#define CD186x_GIVR 43,1576
#define CD186x_GICR 44,1655
#define CD186x_PILR1 45,1734
#define CD186x_PILR2 46,1813
#define CD186x_PILR3 47,1892
#define CD186x_CAR 48,1971
#define CD186x_SRSR 49,2050
#define CD186x_GFRCR 50,2129
#define CD186x_PPRH 51,2208
#define CD186x_PPRL 52,2287
#define CD186x_RDR 53,2366
#define CD186x_RCSR 54,2445
#define CD186x_TDR 55,2524
#define CD186x_EOIR 56,2603
#define CD186x_MRAR 57,2682
#define CD186x_TRAR 58,2761
#define CD186x_RRAR 59,2840
#define CD186x_SRCR 60,2919
#define CD186x_CCR 64,3024
#define CD186x_IER 65,3103
#define CD186x_COR1 66,3182
#define CD186x_COR2 67,3261
#define CD186x_COR3 68,3340
#define CD186x_CCSR 69,3419
#define CD186x_RDCR 70,3498
#define CD186x_SCHR1 71,3577
#define CD186x_SCHR2 72,3656
#define CD186x_SCHR3 73,3735
#define CD186x_SCHR4 74,3814
#define CD186x_MCOR1 75,3893
#define CD186x_MCOR2 76,3972
#define CD186x_MCR 77,4051
#define CD186x_RTPR 78,4130
#define CD186x_MSVR 79,4209
#define CD186x_MSVRTS 80,4288
#define CD186x_MSVDTR 81,4367
#define CD186x_RBPRH 82,4446
#define CD186x_RBPRL 83,4525
#define CD186x_TBPRH 84,4604
#define CD186x_TBPRL 85,4683
#define GIVR_ITMASK 90,4810
#define  GIVR_IT_MODEM 91,4889
#define  GIVR_IT_TX 92,4968
#define  GIVR_IT_RCV 93,5047
#define  GIVR_IT_REXC 94,5126
#define GICR_CHAN 99,5255
#define GICR_CHAN_OFF 100,5333
#define CAR_CHAN 105,5451
#define CAR_A7 106,5529
#define RCSR_TOUT 111,5656
#define RCSR_SCDET 112,5734
#define  RCSR_NO_SC 113,5812
#define  RCSR_SC_1 114,5890
#define  RCSR_SC_2 115,5968
#define  RCSR_SC_3 116,6046
#define  RCSR_SC_4 117,6124
#define RCSR_BREAK 118,6202
#define RCSR_PE 119,6280
#define RCSR_FE 120,6358
#define RCSR_OE 121,6436
#define CCR_HARDRESET 126,6588
#define CCR_SOFTRESET 128,6667
#define CCR_CORCHG1 130,6746
#define CCR_CORCHG2 131,6824
#define CCR_CORCHG3 132,6902
#define CCR_SSCH1 134,6981
#define CCR_SSCH2 136,7060
#define CCR_SSCH3 138,7139
#define CCR_SSCH4 140,7218
#define CCR_TXEN 142,7297
#define CCR_RXEN 143,7375
#define CCR_TXDIS 145,7454
#define CCR_RXDIS 146,7532
#define IER_DSR 151,7651
#define IER_CD 152,7729
#define IER_CTS 153,7807
#define IER_RXD 154,7885
#define IER_RXSC 155,7963
#define IER_TXRDY 156,8041
#define IER_TXEMPTY 157,8119
#define IER_RET 158,8197
#define COR1_ODDP 163,8316
#define COR1_PARMODE 164,8394
#define  COR1_NOPAR 165,8472
#define  COR1_FORCEPAR 166,8550
#define  COR1_NORMPAR 167,8628
#define COR1_IGNORE 168,8706
#define COR1_STOPBITS 169,8784
#define  COR1_1SB 170,8862
#define  COR1_15SB 171,8940
#define  COR1_2SB 172,9018
#define COR1_CHARLEN 173,9096
#define  COR1_5BITS 174,9174
#define  COR1_6BITS 175,9252
#define  COR1_7BITS 176,9330
#define  COR1_8BITS 177,9408
#define COR2_IXM 182,9527
#define COR2_TXIBE 183,9605
#define COR2_ETC 184,9683
#define COR2_LLM 185,9761
#define COR2_RLM 186,9839
#define COR2_RTSAO 187,9917
#define COR2_CTSAE 188,9995
#define COR2_DSRAE 189,10073
#define COR3_XONCH 194,10192
#define COR3_XOFFCH 195,10270
#define COR3_FCT 196,10348
#define COR3_SCDE 197,10426
#define COR3_RXTH 198,10504
#define CCSR_RXEN 203,10629
#define CCSR_RXFLOFF 204,10707
#define CCSR_RXFLON 205,10785
#define CCSR_TXEN 206,10863
#define CCSR_TXFLOFF 207,10941
#define CCSR_TXFLON 208,11019
#define MCOR1_DSRZD 213,11143
#define MCOR1_CDZD 214,11221
#define MCOR1_CTSZD 215,11299
#define MCOR1_DTRTH 216,11377
#define  MCOR1_NODTRFC 217,11455
#define MCOR2_DSROD 222,11580
#define MCOR2_CDOD 223,11658
#define MCOR2_CTSOD 224,11736
#define MCR_DSRCHG 228,11850
#define MCR_CDCHG 229,11928
#define MCR_CTSCHG 230,12006
#define MSVR_DSR 235,12127
#define MSVR_CD 236,12205
#define MSVR_CTS 237,12283
#define MSVR_DTR 238,12361
#define MSVR_RTS 239,12439
#define CD186x_C_ESC 244,12544
#define CD186x_C_SBRK 245,12623
#define CD186x_C_DELAY 246,12702
#define CD186x_C_EBRK 247,12781
#define SRSR_RREQint 249,12861
#define SRSR_TREQint 250,12940
#define SRSR_MREQint 251,13019
#define SRCR_PKGTYPE 255,13101
#define SRCR_REGACKEN 256,13130
#define SRCR_DAISYEN 257,13159
#define SRCR_GLOBPRI 258,13188
#define SRCR_UNFAIR 259,13217
#define SRCR_AUTOPRI 260,13246
#define SRCR_PRISEL 261,13275

drivers/char/specialix.c,3684
#define VERSION 66,2935
#define TWO_ZERO100,3830
#define Get_user(Get_user111,4096
#define copy_from_user(copy_from_user112,4142
#define copy_to_user(copy_to_user113,4193
#define queue_task 114,4242
#define Get_user(Get_user116,4297
#define SPECIALIX_PARANOIA_CHECK136,4720
#define SX_CRTSCTS(SX_CRTSCTS153,5205
#define SX_CRTSCTS(SX_CRTSCTS155,5237
#define short_pause(short_pause160,5321
#define SPECIALIX_LEGAL_FLAGS 163,5356
#define MIN(MIN169,5585
#define SPECIALIX_TYPE_NORMAL	176,5671
#define SPECIALIX_TYPE_CALLOUT	177,5703
static struct tty_driver specialix_driver,179,5737
static struct tty_driver specialix_driver, specialix_callout_driver;179,5737
static int    specialix_refcount 180,5806
static struct tty_struct * specialix_table[181,5844
static struct termios * specialix_termios[182,5922
static struct termios * specialix_termios_locked[183,5999
static unsigned char * tmp_buf 184,6083
static struct semaphore tmp_buf_sem 185,6122
static unsigned long baud_table[187,6168
static struct specialix_board sx_board[192,6317
static struct specialix_port sx_port[199,6476
static struct timer_list missed_irq_timer;205,6579
static inline int sx_paranoia_check(211,6705
extern inline int board_No 240,7367
extern inline int port_No 247,7488
extern inline struct specialix_board * port_Board(254,7639
extern inline unsigned char sx_in(261,7817
extern inline void sx_out(270,8053
extern inline unsigned char sx_in_off(280,8304
extern inline void sx_out_off(289,8530
extern inline void sx_wait_CCR(299,8776
extern inline void sx_wait_CCR_off(312,9070
extern inline int sx_check_io_range(328,9373
extern inline void sx_request_io_range(334,9490
extern inline void sx_release_io_range(342,9698
extern inline void sx_long_delay(352,10002
int sx_set_irq 362,10213
static int sx_init_CD186x(388,10758
int read_cross_byte 426,11985
void missed_irq 441,12222
static int sx_probe(459,12795
extern inline void sx_mark_event(600,16681
extern inline struct specialix_port * sx_get_port(617,17179
extern inline void sx_receive_exc(636,17676
extern inline void sx_receive(702,19270
extern inline void sx_transmit(733,19942
extern inline void sx_check_modem(803,21668
static void sx_interrupt(877,23426
void turn_ints_off 941,24947
void turn_ints_on 952,25307
extern inline int sx_setup_board(962,25537
extern inline void sx_shutdown_board(983,25899
static void sx_change_speed(1005,26305
static int sx_setup_port(1210,31862
static void sx_shutdown_port(1249,32636
static int block_til_ready(1311,33979
static int sx_open(1433,37089
static void sx_close(1486,38327
static int sx_write(1584,41099
static void sx_put_char(1638,42465
static void sx_flush_chars(1663,42984
static int sx_write_room(1683,43491
static int sx_chars_in_buffer(1698,43793
static void sx_flush_buffer(1709,44035
static int sx_get_modem_info(1728,44532
static int sx_set_modem_info(1763,45743
extern inline void sx_send_break(1830,47458
extern inline int sx_set_serial_info(1849,47961
extern inline int sx_get_serial_info(1901,49416
static int sx_ioctl(1927,50113
static void sx_throttle(1987,51768
static void sx_unthrottle(2022,52726
static void sx_stop(2050,53374
static void sx_start(2069,53799
static void do_sx_hangup(2099,54581
static void sx_hangup(2112,54780
static void sx_set_termios(2131,55219
static void do_specialix_bh(2155,55818
static void do_softint(2161,55891
static int sx_init_drivers(2178,56293
static void sx_release_drivers(2257,59080
void specialix_setup(2275,59502
int specialix_init(2295,59818
int iobase[2354,61159
int irq 2356,61191
int init_module(2367,61503
void cleanup_module(2382,61730

drivers/char/specialix_io8.h,766
#define __LINUX_SPECIALIX_H40,1728
#define SX_NBOARD	49,1919
#define SX_IO_SPACE 52,2021
#define SX_PCI_IO_SPACE 54,2125
#define SX_NPORT 57,2189
#define SX_BOARD(SX_BOARD58,2216
#define SX_PORT(SX_PORT59,2260
#define SX_DATA_REG 62,2311
#define SX_ADDR_REG 63,2366
#define MHz 65,2426
#define SX_OSCFREQ 68,2513
#define SPECIALIX_TPS	73,2694
#define SPECIALIX_RXFIFO	78,2818
#define SPECIALIX_MAGIC	80,2882
#define SX_CCR_TIMEOUT 82,2915
#define SX_IOBASE1	87,3187
#define SX_IOBASE2	88,3212
#define SX_IOBASE3	89,3237
#define SX_IOBASE4	90,3262
struct specialix_board specialix_board92,3288
#define SX_BOARD_PRESENT	101,3443
#define SX_BOARD_ACTIVE	102,3479
#define SX_BOARD_IS_PCI	103,3515
struct specialix_port specialix_port106,3553

drivers/char/hfmodem/gentbl.c,105
#define SINTABBITS 35,1357
#define SINTABSIZE 36,1379
static void gensintbl(40,1493
int main(60,2018

drivers/char/hfmodem/main.c,2577
#define put_user(put_user71,2320
#define get_user(get_user72,2406
extern inline int copy_from_user(74,2500
extern inline int copy_to_user(83,2729
#define __init96,3024
#define __initdata97,3039
#define __initfunc(__initfunc98,3058
/*static*/ const char hfmodem_drvname[103,3167
static const char hfmodem_drvinfo[104,3220
struct hfmodem_state hfmodem_state[112,3514
#define UART_RBR(UART_RBR120,3720
#define UART_THR(UART_THR121,3756
#define UART_IER(UART_IER122,3792
#define UART_IIR(UART_IIR123,3828
#define UART_FCR(UART_FCR124,3864
#define UART_LCR(UART_LCR125,3900
#define UART_MCR(UART_MCR126,3936
#define UART_LSR(UART_LSR127,3972
#define UART_MSR(UART_MSR128,4008
#define UART_SCR(UART_SCR129,4044
#define UART_DLL(UART_DLL130,4080
#define UART_DLM(UART_DLM131,4116
#define SER_EXTENT 133,4153
#define LPT_DATA(LPT_DATA135,4175
#define LPT_STATUS(LPT_STATUS136,4214
#define LPT_CONTROL(LPT_CONTROL137,4253
#define LPT_IRQ_ENABLE 138,4292
#define MIDI_DATA(MIDI_DATA140,4326
#define MIDI_STATUS(MIDI_STATUS141,4365
#define MIDI_READ_FULL 142,4406
#define MIDI_WRITE_EMPTY 143,4470
#define MIDI_EXTENT 145,4535
#define SP_SER 147,4558
#define SP_PAR 148,4576
#define SP_MIDI 149,4594
static void parptt_wakeup(153,4690
__initfunc(163,5068
enum uart uart179,5509
enum uart { c_uart_unknown,179,5509
enum uart { c_uart_unknown, c_uart_8250,179,5509
enum uart { c_uart_unknown, c_uart_8250, c_uart_16450,179,5509
enum uart { c_uart_unknown, c_uart_8250, c_uart_16450, c_uart_16550,179,5509
enum uart { c_uart_unknown, c_uart_8250, c_uart_16450, c_uart_16550, c_uart_16550A 179,5509
static const char *uart_str[180,5595
static const char *uart_str[] __initdata 180,5595
__initfunc(182,5690
__initfunc(218,7065
static void output_status(247,8007
__initfunc(266,8634
static void output_open(303,10120
static void output_close(350,12082
#define INC_SAMPLE 365,12631
#define INC_FRAGMENT 366,12676
#define SIZE 367,12741
static void hfmodem_interrupt(369,12802
static int hfmodem_close(473,15902
static int hfmodem_open(499,16641
static struct file_operations hfmodem_fops 547,18025
static struct miscdevice hfmodem_device 570,18790
static int hw 582,19012
static unsigned int iobase 583,19031
static unsigned int irq 584,19067
static unsigned int dma 585,19096
static unsigned int serio 587,19126
static unsigned int pario 588,19157
static unsigned int midiio 589,19188
__initfunc(628,20455
void cleanup_module(666,21531
static int hw 678,21825
__initfunc(680,21845
__initfunc(701,22703

drivers/char/hfmodem/modem.c,1470
#define put_user(put_user54,1808
#define get_user(get_user55,1894
extern inline int copy_from_user(57,1988
extern inline int copy_to_user(66,2217
#define __init79,2512
#define __initdata80,2527
#define __initfunc(__initfunc81,2546
struct hfmodem_correlator_cache hfmodem_correlator_cache[86,2655
#define M_PI 92,2838
extern __inline__ int isimplecos(96,2973
extern __inline__ int isimplesin(101,3098
extern __inline__ int itblcos(108,3291
extern __inline__ void itblcossin(124,3689
static unsigned short random_seed;141,4160
extern __inline__ unsigned short random_num(143,4196
extern __inline__ void cc_lock(154,4441
extern __inline__ void cc_unlock(161,4578
extern __inline__ unsigned int cc_lookup(179,5048
extern __inline__ unsigned int cc_replace(193,5464
#define SH1 211,6032
#define SH2 212,6101
extern __inline__ int icorr(216,6145
extern __inline__ int icorr(243,6717
extern __inline__ long long isqr(258,7018
extern __inline__ hfmodem_soft_t do_filter(267,7247
static void cc_prepare(286,7970
void hfmodem_clear_rq(326,9520
int hfmodem_ioctl(352,10282
unsigned int hfmodem_poll(558,16396
int hfmodem_select(587,17074
extern __inline__ unsigned int l1fsk_phinc(620,17861
void hfmodem_input_samples(627,18120
extern __inline__ unsigned int output_one_sample(667,19264
int hfmodem_output_samples(711,20364
long hfmodem_next_tx_event(735,21080
void hfmodem_finish_pending_rx_requests(755,21529
void hfmodem_wakeup(772,21994

drivers/char/hfmodem/refclock.c,328
#define __init49,1791
#define __initdata50,1806
#define __initfunc(__initfunc51,1825
static unsigned int scale_tvusec 59,1964
static unsigned int scale_rdtsc 62,2025
static int rdtsc_ok 63,2062
__initfunc(69,2203
__initfunc(80,2520
void hfmodem_refclock_init(104,3173
hfmodem_time_t hfmodem_refclock_current(122,3589

drivers/char/hfmodem/sbc.c,2606
#define DSP_RESET(DSP_RESET44,1519
#define DSP_READ_DATA(DSP_READ_DATA45,1565
#define DSP_WRITE_DATA(DSP_WRITE_DATA46,1611
#define DSP_WRITE_STATUS(DSP_WRITE_STATUS47,1657
#define DSP_DATA_AVAIL(DSP_DATA_AVAIL48,1703
#define DSP_MIXER_ADDR(DSP_MIXER_ADDR49,1749
#define DSP_MIXER_DATA(DSP_MIXER_DATA50,1795
#define DSP_INTACK_16BIT(DSP_INTACK_16BIT51,1841
#define SBC_EXTENT 52,1887
#define SBC_OUTPUT 59,2024
#define SBC_INPUT 60,2060
#define SBC_BLOCKSIZE 61,2096
#define SBC_HI_OUTPUT 62,2132
#define SBC_HI_INPUT 63,2169
#define SBC_LO_OUTPUT_AUTOINIT 64,2206
#define SBC_LO_INPUT_AUTOINIT 65,2242
#define SBC_HI_OUTPUT_AUTOINIT 66,2278
#define SBC_HI_INPUT_AUTOINIT 67,2315
#define SBC_IMMED_INT 68,2351
#define SBC_GET_REVISION 69,2387
#define ESS_GET_REVISION 70,2423
#define ESS_EXTENDED_MODE 71,2459
#define SBC_SPEAKER_ON 72,2495
#define SBC_SPEAKER_OFF 73,2531
#define SBC_DMA_ON 74,2567
#define SBC_DMA_OFF 75,2603
#define SBC_SAMPLE_RATE 76,2639
#define SBC_SAMPLE_RATE_OUT 77,2675
#define SBC_SAMPLE_RATE_IN 78,2711
#define SBC_MONO_8BIT 79,2747
#define SBC_MONO_16BIT 80,2783
#define SBC_STEREO_8BIT 81,2819
#define SBC_STEREO_16BIT 82,2855
#define SBC4_OUT8_AI 84,2892
#define SBC4_IN8_AI 85,2928
#define SBC4_MODE_UNS_MONO 86,2964
#define SBC4_MODE_SIGN_MONO 87,3000
#define SBC4_OUT16_AI 89,3037
#define SBC4_IN16_AI 90,3073
#define SBC4_OUT16_AI_NO_FIFO 91,3109
#define SBC4_IN16_AI_NO_FIFO 92,3145
extern const struct hfmodem_scops sbc4_scops;96,3259
extern const struct hfmodem_scops ess_scops;97,3305
static int reset_dsp(101,3428
static void write_dsp(117,3919
static int read_dsp(130,4326
static void write_ess(146,4785
static int read_ess(154,5000
static int reset_ess(163,5243
static int config_resources(181,5802
extern __inline__ void sbc_int_ack_8bit(255,7564
extern __inline__ void sbc_int_ack_16bit(262,7761
static void set_mixer(269,7961
int hfmodem_sbcprobe(277,8227
static void sbc4_init(383,10973
static void sbc4_prepare_input(389,11104
static void sbc4_trigger_input(415,12027
static void sbc4_prepare_output(430,12434
static void sbc4_trigger_output(456,13359
static void sbc4_stop(471,13768
static unsigned int sbc4_intack(478,13916
static void sbc4_mixer(504,14738
static void ess_prepare_input(546,15958
static void ess_trigger_input(591,17550
void ess_prepare_output(605,17884
void ess_trigger_output(652,19499
unsigned int ess_intack(666,19827
static void ess_mixer(704,21053
static const struct hfmodem_scops sbc4_scops 731,21783
static const struct hfmodem_scops ess_scops 736,21979

drivers/char/hfmodem/wss.c,995
#define WSS_CONFIG(WSS_CONFIG43,1486
#define WSS_STATUS(WSS_STATUS44,1530
#define WSS_CODEC_IA(WSS_CODEC_IA45,1574
#define WSS_CODEC_ID(WSS_CODEC_ID46,1618
#define WSS_CODEC_STATUS(WSS_CODEC_STATUS47,1662
#define WSS_CODEC_DATA(WSS_CODEC_DATA48,1706
#define WSS_EXTENT 50,1751
extern const struct hfmodem_scops wss_scops;54,1852
static void write_codec(58,1975
static unsigned char read_codec(72,2446
extern __inline__ void wss_ack_int(85,2888
static int wss_srate_tab[92,3086
static int wss_srate_index(97,3240
static int wss_set_codec_fmt(109,3579
static int wss_init_codec(149,4881
int hfmodem_wssprobe(243,8931
static void wss_init(264,9639
static void wss_stop(271,9791
static void wss_prepare_input(302,10905
static void wss_trigger_input(322,11577
static void wss_prepare_output(334,11839
static void wss_trigger_output(354,12520
static unsigned int wss_intack(366,12790
static void wss_mixer(389,13519
static const struct hfmodem_scops wss_scops 432,14611

drivers/char/h8.h,5151
#define __H8_H__5,25
#define H8_BASE_ADDR 10,82
#define H8_IRQ	11,152
#define H8_STATUS_REG_OFF 12,207
#define H8_CMD_REG_OFF 13,264
#define H8_DATA_REG_OFF 14,307
#define H8_OFULL 19,408
#define H8_IFULL 20,496
#define H8_CMD 21,583
#define H8_INTR 23,665
#define H8_NACK 24,709
#define H8_BYTE_LEVEL_ACK 25,753
#define H8_CMD_ACK 26,797
#define H8_SYNC_BYTE 27,841
#define H8_SYNC 33,946
#define H8_RD_SN 34,990
#define H8_RD_ENET_ADDR 35,1034
#define H8_RD_HW_VER 36,1078
#define H8_RD_MIC_VER 37,1122
#define H8_RD_MAX_TEMP 38,1166
#define H8_RD_MIN_TEMP 39,1210
#define H8_RD_CURR_TEMP 40,1254
#define H8_RD_SYS_VARIENT 41,1298
#define H8_RD_PWR_ON_CYCLES 42,1342
#define H8_RD_PWR_ON_SECS 43,1386
#define H8_RD_RESET_STATUS 44,1430
#define H8_RD_PWR_DN_STATUS 45,1474
#define H8_RD_EVENT_STATUS 46,1518
#define H8_RD_ROM_CKSM 47,1562
#define H8_RD_EXT_STATUS 48,1606
#define H8_RD_USER_CFG 49,1650
#define H8_RD_INT_BATT_VOLT 50,1695
#define H8_RD_DC_INPUT_VOLT 51,1740
#define H8_RD_HORIZ_PTR_VOLT 52,1785
#define H8_RD_VERT_PTR_VOLT 53,1830
#define H8_RD_EEPROM_STATUS 54,1875
#define H8_RD_ERR_STATUS 55,1920
#define H8_RD_NEW_BUSY_SPEED 56,1965
#define H8_RD_CONFIG_INTERFACE 57,2010
#define H8_RD_INT_BATT_STATUS 58,2055
#define H8_RD_EXT_BATT_STATUS 59,2100
#define H8_RD_PWR_UP_STATUS 60,2145
#define H8_RD_EVENT_STATUS_MASK 61,2190
#define H8_CTL_EMU_BITPORT 64,2269
#define H8_DEVICE_CONTROL 65,2314
#define H8_CTL_TFT_BRT_DC 66,2359
#define H8_CTL_WATCHDOG 67,2404
#define H8_CTL_MIC_PROT 68,2449
#define H8_CTL_INT_BATT_CHG 69,2494
#define H8_CTL_EXT_BATT_CHG 70,2539
#define H8_CTL_MARK_SPACE 71,2584
#define H8_CTL_MOUSE_SENSITIVITY 72,2629
#define H8_CTL_DIAG_MODE 73,2674
#define H8_CTL_IDLE_AND_BUSY_SPDS 74,2719
#define H8_CTL_TFT_BRT_BATT 75,2764
#define H8_CTL_UPPER_TEMP 76,2809
#define H8_CTL_LOWER_TEMP 77,2854
#define H8_CTL_TEMP_CUTOUT 78,2899
#define H8_CTL_WAKEUP 79,2944
#define H8_CTL_CHG_THRESHOLD 80,2989
#define H8_CTL_TURBO_MODE 81,3034
#define H8_SET_DIAG_STATUS 82,3079
#define H8_SOFTWARE_RESET 83,3124
#define H8_RECAL_PTR 84,3169
#define H8_SET_INT_BATT_PERCENT 85,3214
#define H8_WRT_CFG_INTERFACE_REG 86,3259
#define H8_WRT_EVENT_STATUS_MASK 87,3304
#define H8_ENTER_POST_MODE 88,3349
#define H8_EXIT_POST_MODE 89,3394
#define H8_RD_EEPROM 92,3470
#define H8_WRT_EEPROM 93,3515
#define H8_WRT_TO_STATUS_DISP 94,3560
#define H8_DEFINE_SPC_CHAR 95,3605
#define H8_DEFINE_TABLE_STRING_ENTRY 98,3675
#define H8_PERFORM_EMU_CMD 101,3752
#define H8_EMU_RD_REG 102,3797
#define H8_EMU_WRT_REG 103,3842
#define H8_EMU_RD_RAM 104,3887
#define H8_EMU_WRT_RAM 105,3932
#define H8_BQ_RD_REG 106,3977
#define H8_BQ_WRT_REG 107,4022
#define H8_PWR_OFF 110,4096
#define H8_ENAB_EXTSMI 117,4219
#define H8_DISAB_IRQ 118,4263
#define H8_ENAB_FLASH_WRT 119,4307
#define H8_ENAB_THERM 120,4351
#define H8_ENAB_INT_PTR 121,4395
#define H8_ENAB_LOW_SPD_IND 122,4440
#define H8_ENAB_EXT_PTR 123,4485
#define H8_DISAB_PWR_OFF_SW 124,4530
#define H8_POWER_OFF	125,4575
#define H8_DC_CHANGE 128,4636
#define H8_INT_BATT_LOW 129,4680
#define H8_INT_BATT_CHARGE_THRESHOLD 130,4724
#define H8_INT_BATT_CHARGE_STATE 131,4768
#define H8_INT_BATT_STATUS 132,4812
#define H8_EXT_BATT_CHARGE_STATE 133,4857
#define H8_EXT_BATT_LOW 134,4902
#define H8_EXT_BATT_STATUS 135,4947
#define H8_THERMAL_THRESHOLD 136,4992
#define H8_WATCHDOG 137,5038
#define H8_DOCKING_STATION_STATUS 138,5084
#define H8_EXT_MOUSE_OR_CASE_SWITCH 139,5130
#define H8_KEYBOARD 140,5176
#define H8_BATT_CHANGE_OVER 141,5223
#define H8_POWER_BUTTON 142,5270
#define H8_SHUTDOWN 143,5317
#define H8_SPEED_LOW 146,5403
#define H8_SPEED_MED 147,5447
#define H8_SPEED_HI 148,5491
#define H8_SPEED_LOCKED 149,5535
#define H8_MAX_CMD_SIZE 151,5581
#define H8_Q_ALLOC_AMOUNT 152,5630
#define H8_IDLE 155,5708
#define H8_XMIT 156,5750
#define H8_RCV 157,5792
#define H8_RESYNC 158,5834
#define H8_INTR_MODE 159,5876
#define UTH_HYSTERESIS 162,5959
#define DEFAULT_UTHERMAL_THRESHOLD 163,6001
#define H8_TIMEOUT_INTERVAL	164,6045
#define H8_RUN 165,6077
#define H8_GET_MAX_TEMP 167,6120
#define H8_GET_CURR_TEMP 168,6164
#define H8_GET_UPPR_THRMAL_THOLD 169,6208
#define H8_GET_ETHERNET_ADDR 170,6252
#define H8_SYNC_OP 171,6296
#define H8_SET_UPPR_THRMAL_THOLD 172,6342
#define H8_GET_INT_BATT_STAT 173,6387
#define H8_GET_CPU_SPD 174,6432
#define H8_MANAGE_UTHERM 175,6477
#define H8_MANAGE_LTHERM 176,6524
#define H8_HALT 177,6571
#define H8_CRASH 178,6618
#define H8_GET_EXT_STATUS 179,6665
#define H8_MANAGE_QUIET 180,6713
#define H8_MANAGE_SPEEDUP 181,6761
#define H8_MANAGE_BATTERY 182,6809
#define H8_SYSTEM_DELAY_TEST 183,6857
#define H8_POWER_SWITCH_TEST 184,6906
#define MHZ_14 187,6998
#define MHZ_28 188,7041
#define MHZ_57 189,7084
#define MHZ_115 190,7127
#define MHZ_230 191,7170
struct h8_data h8_data196,7233
typedef struct h8_cmd_q h8_cmd_q231,8295
} h8_cmd_q_t;h8_cmd_q_t239,8838
typedef struct __queue_head __queue_head241,8853
} queue_head_t;queue_head_t243,8914
union   intr_buf intr_buf245,8931

drivers/char/tuner.h,653
#define _TUNER_H23,912
#define TUNER_TEMIC_PAL 25,930
#define TUNER_PHILIPS_PAL_I 26,988
#define TUNER_PHILIPS_NTSC 27,1018
#define TUNER_PHILIPS_SECAM 28,1048
#define TUNER_ABSENT 29,1078
#define TUNER_PHILIPS_PAL 30,1108
#define TUNER_TEMIC_NTSC 31,1138
#define TUNER_TEMIC_PAL_I 32,1168
#define TUNER_TEMIC_4036FY5_NTSC	33,1198
#define NOTUNER 35,1234
#define PAL 36,1252
#define PAL_I 37,1270
#define NTSC 38,1288
#define SECAM 39,1306
#define NoTuner 41,1325
#define Philips 42,1343
#define TEMIC 43,1361
#define Sony 44,1379
#define TUNER_SET_TYPE 46,1398
#define TUNER_SET_TVFREQ 47,1475
#define TUNER_SET_RADIOFREQ 48,1549

drivers/char/bw-qcam.c,1313
static unsigned int maxpoll=88,2865
static unsigned int yieldlines=89,2943
extern __inline__ int read_lpstatus(91,3022
extern __inline__ int read_lpcontrol(96,3125
extern __inline__ int read_lpdata(101,3230
extern __inline__ void write_lpdata(106,3329
extern __inline__ void write_lpcontrol(111,3434
static struct video_device qcam_template;122,3822
static int qc_calibrate(124,3865
static struct qcam_device *qcam_init(157,4625
static int qc_command(197,5595
static int qc_readparam(214,5866
static int qc_waithand(232,6236
static unsigned int qc_waithand2(286,7603
static int qc_detect(322,8611
static void qc_reset(364,9676
static int qc_setscanmode(404,10843
void qc_set(450,11457
extern __inline__ int qc_readbytes(504,13003
long qc_capture(600,15473
static int qcam_open(692,17731
static void qcam_close(698,17825
static int qcam_init_done(703,17899
static long qcam_write(708,17967
static int qcam_ioctl(713,18087
static long qcam_read(900,22025
static struct video_device qcam_template=917,22483
#define MAX_CAMS 935,22704
static struct qcam_device *qcams[936,22723
static unsigned int num_cams 937,22767
int init_bwqcam(939,22802
void close_bwqcam(982,23545
static char *parport[993,23902
int init_module(998,24026
void cleanup_module(1041,25020
__initfunc(1048,25131

drivers/char/adbmouse.c,726
static struct mouse_status mouse;45,955
static unsigned char adb_mouse_buttons[46,989
extern int adb_emulate_buttons;49,1097
extern int adb_button2_keycode;50,1129
extern int adb_button3_keycode;51,1161
extern int console_loglevel;53,1194
static void adb_mouse_interrupt(59,1345
static int fasync_mouse(140,4219
static int release_mouse(150,4399
static int open_mouse(161,4615
static ssize_t write_mouse(178,4953
static ssize_t read_mouse(184,5078
static unsigned int mouse_poll(218,5794
struct file_operations adb_mouse_fops 226,5963
#define ADB_MOUSE_MINOR	241,6260
static struct miscdevice adb_mouse 243,6288
__initfunc(247,6380
__initfunc(273,6974
int init_module(287,7240
void cleanup_module(292,7296

drivers/char/amikeyb.c,1176
#define AMIKEY_CAPS	32,686
#define BREAK_MASK	33,713
#define RESET_WARNING	34,739
static u_short amiplain_map[36,791
static u_short amiplain_map[NR_KEYS] __initdata 36,791
static u_short amishift_map[55,1887
static u_short amishift_map[NR_KEYS] __initdata 55,1887
static u_short amialtgr_map[74,2983
static u_short amialtgr_map[NR_KEYS] __initdata 74,2983
static u_short amictrl_map[93,4079
static u_short amictrl_map[NR_KEYS] __initdata 93,4079
static u_short amishift_ctrl_map[112,5174
static u_short amishift_ctrl_map[NR_KEYS] __initdata 112,5174
static u_short amialt_map[131,6275
static u_short amialt_map[NR_KEYS] __initdata 131,6275
static u_short amictrl_alt_map[150,7369
static u_short amictrl_alt_map[NR_KEYS] __initdata 150,7369
#define	DEFAULT_KEYB_REP_DELAY	169,8468
#define	DEFAULT_KEYB_REP_RATE	170,8506
static unsigned int key_repeat_delay 173,8604
static unsigned int key_repeat_rate 174,8667
static unsigned char rep_scancode;176,8730
static struct timer_list amikeyb_rep_timer 178,8812
static void amikeyb_rep(180,8891
static void keyboard_interrupt(196,9243
__initfunc(298,12103
int amiga_kbdrate(325,12923
__initfunc(346,13432

drivers/char/bw-qcam.h,418
#define QC_NOTSET 33,1267
#define QC_UNIDIR 34,1287
#define QC_BIDIR 35,1307
#define QC_SERIAL 36,1327
#define QC_ANY 39,1380
#define QC_FORCE_UNIDIR 40,1409
#define QC_FORCE_BIDIR 41,1438
#define QC_FORCE_SERIAL 42,1467
#define QC_MODE_MASK 45,1527
#define QC_FORCE_MASK 46,1556
#define MAX_HEIGHT 48,1586
#define MAX_WIDTH 49,1609
#define QC_PARAM_CHANGE	52,1666
struct qcam_device qcam_device54,1736

drivers/char/msp3400.c,2292
#define __KERNEL_SYSCALLS__51,1195
#  define REGISTER_MIXER 65,1502
static int debug 70,1546
struct msp3400c msp3400c72,1592
#define VIDEO_MODE_RADIO 94,1995
#define dprintk 98,2139
#define signal_pending(signal_pending102,2224
#define sigfillset(sigfillset103,2295
#define mdelay(mdelay104,2319
void schedule_timeout(110,2424
#define I2C_MSP3400C 119,2589
#define I2C_MSP3400C_DEM 120,2621
#define I2C_MSP3400C_DFP 121,2653
static int msp3400c_reset(126,2843
msp3400c_read(152,3417
msp3400c_write(181,4141
#define MSP_CARRIER(MSP_CARRIER206,4975
#define MSP_MODE_AM_DETECT 208,5040
#define MSP_MODE_FM_RADIO 209,5071
#define MSP_MODE_FM_TERRA 210,5102
#define MSP_MODE_FM_SAT 211,5133
#define MSP_MODE_FM_NICAM1 212,5164
#define MSP_MODE_FM_NICAM2 213,5195
static struct MSP_INIT_DATA_DEM MSP_INIT_DATA_DEM215,5227
} msp_init_data[224,5369
struct CARRIER_DETECT CARRIER_DETECT261,6544
static struct CARRIER_DETECT carrier_detect_main[266,6597
static struct CARRIER_DETECT carrier_detect_55[274,6925
static struct CARRIER_DETECT carrier_detect_65[280,7119
#define CARRIER_COUNT(CARRIER_COUNT290,7551
static void msp3400c_setcarrier(294,7699
static void msp3400c_setvolume(303,8084
static void msp3400c_setbass(322,8711
static void msp3400c_settreble(330,8950
static void msp3400c_setmode(338,9199
static void msp3400c_setstereo(383,10747
msp3400c_print_mode(459,13007
struct REGISTER_DUMP REGISTER_DUMP481,13756
struct REGISTER_DUMP d1[486,13809
static void msp3400c_stereo_wake(499,14117
static int msp3400c_thread(506,14280
static int msp3410d_thread(747,20205
static struct msp3400c *mspmix 844,22450
static int mixer_num;845,22541
static int mixer_modcnt 846,22563
static struct semaphore mixer_sem 847,22592
static int mix_to_v4l(849,22636
static int v4l_to_mix(859,22782
static int v4l_to_mix2(869,22925
msp3400c_mixer_ioctl(881,23156
msp3400c_mixer_open(976,25777
msp3400c_mixer_release(983,25898
msp3400c_mixer_llseek(990,26025
static /*const*/ struct file_operations msp3400c_mixer_fops 995,26122
static int msp3400c_attach(1017,26697
static int msp3400c_detach(1091,28621
static int msp3400c_command(1123,29202
struct i2c_driver i2c_driver_msp 1220,31541
int init_module(1231,31795
void cleanup_module(1245,32091

drivers/char/dn_keyb.c,2506
#define DNKEY_CAPS 24,503
#define BREAK_FLAG 25,527
#define DNKEY_REPEAT_DELAY 26,551
#define DNKEY_CTRL 27,581
#define DNKEY_LSHIFT 28,605
#define DNKEY_RSHIFT 29,631
#define DNKEY_REPT 30,657
#define DNKEY_REPEAT 31,681
#define DNKEY_LALT 32,707
#define DNKEY_RALT 33,731
#define APOLLO_KEYB_CMD_ENTRIES 35,756
#define APOLLO_KBD_MODE_KEYB 36,791
#define APOLLO_KBD_MODE_MOUSE 37,827
#define APOLLO_KBD_MODE_CHANGE 38,864
#define MSE_UPDATE_ON(MSE_UPDATE_ON40,901
#define MSE_UPDATE_OFF(MSE_UPDATE_OFF41,948
static u_char keyb_cmds[43,997
static short keyb_cmd_read=44,1047
static int keyb_cmd_transmit=45,1095
static unsigned int kbd_mode=47,1128
static short mouse_dx,48,1179
static short mouse_dx,mouse_dy,48,1179
static short mouse_dx,mouse_dy,mouse_buttons;48,1179
static int mouse_ready=49,1225
static struct wait_queue *mouse_wait=50,1289
static struct fasync_struct *mouse_fasyncptr=51,1332
static u_char debug_buf1[55,1451
static u_char debug_buf1[4096],debug_buf2[55,1451
static u_char debug_buf1[4096],debug_buf2[4096],*debug_buf=55,1451
static u_char *shadow_buf=56,1526
static short debug_buf_count=57,1568
static int debug_buf_overrun=58,1600
static struct timer_list debug_keyb_timer 59,1677
static u_short dnplain_map[63,1790
static u_short dnplain_map[NR_KEYS] __initdata 63,1790
static u_short dnshift_map[102,4243
static u_short dnshift_map[NR_KEYS] __initdata 102,4243
static u_short dnctrl_map[141,6694
static u_short dnctrl_map[NR_KEYS] __initdata 141,6694
static u_short dnalt_map[180,9144
static u_short dnalt_map[NR_KEYS] __initdata 180,9144
static u_short dnaltgr_map[219,11595
static u_short dnaltgr_map[NR_KEYS] __initdata 219,11595
static u_short dnshift_ctrl_map[238,12721
static u_short dnshift_ctrl_map[NR_KEYS] __initdata 238,12721
static u_short dnctrl_alt_map[257,13852
static u_short dnctrl_alt_map[NR_KEYS] __initdata 257,13852
static void debug_keyb_timer_handler(277,14987
static unsigned int mouse_poll(304,15536
static ssize_t write_mouse(312,15735
static ssize_t read_mouse(318,15866
static int fasync_mouse(363,16702
static int release_mouse(374,16925
static int open_mouse(384,17157
static void dn_keyb_process_key_event(401,17512
static void dn_keyb_process_mouse_event(438,18821
static void dn_keyb_int(479,20081
void write_keyb_cmd(531,21180
struct file_operations apollo_mouse_fops 554,21619
static struct miscdevice apollo_mouse 569,22017
__initfunc(573,22125
int dn_dummy_kbdrate(609,22955

drivers/char/mac_SCC.c,2768
#define NUM_SERIAL	79,2919
#define NUM_CHANNELS	80,2980
#define RECOVERY_DELAY87,3157
#define RECOVERY_DELAY	92,3343
struct mac_zschannel *zs_kgdbchan;95,3382
struct mac_zschannel zs_channels[96,3417
struct m68k_async_struct  zs_soft[98,3466
struct m68k_async_private zs_soft_private[99,3515
int zs_channels_found;100,3572
struct m68k_async_struct *zs_chain;101,3595
struct tty_struct zs_ttys[103,3659
static int zs_cons_chanout 107,3763
static int zs_cons_chanin 108,3795
struct m68k_async_struct  *zs_consinfo 109,3826
struct mac_zschannel *zs_conschan;110,3870
static unsigned char kgdb_regs[112,3906
#define ZS_CLOCK 126,4301
#define RS_STROBE_TIME 135,4538
#define RS_ISR_PASS_LIMIT 136,4564
#define _INLINE_ 138,4595
#define MIN(MIN143,4663
static SERIALSWITCH SCC_switch 191,6746
static int baud_table[203,7098
static inline unsigned char read_zsreg(210,7282
static inline void write_zsreg(224,7538
static inline unsigned char read_zsdata(236,7774
static inline void write_zsdata(245,7933
static inline void load_zsregs(253,8077
static inline void zs_rtsdtr(276,8816
static inline void kgdb_chaninit(286,9066
static inline int get_zsbaud(304,9469
static inline void SCC_recv_clear(320,10033
static /*_INLINE_*/ void receive_chars(339,10663
static void transmit_chars(413,12459
static /*_INLINE_*/ void status_handle(444,13263
void mac_SCC_interrupt(490,14460
#define CHAN_IRQMASK 502,14921
static void SCC_enab_tx_int(547,16089
static int SCC_startup(589,17084
static int SCC_check_open(646,18622
static void SCC_init(655,18873
static void SCC_init_port(709,20418
static void SCC_deinit(791,23188
static int SCC_check_custom_divisor(818,23956
static void SCC_change_speed(828,24200
static void SCC_put_char(932,26907
void putDebugChar(953,27322
char getDebugChar(962,27499
static void SCC_fair_output(974,27715
static void zs_console_print(1005,28332
static void rs_flush_chars(1021,28624
static int rs_write(1039,29064
static void SCC_throttle(1092,30485
static void SCC_get_serial_info(1129,31488
static int SCC_get_lsr_info(1148,32200
static unsigned int SCC_get_modem_info(1158,32395
static int SCC_set_modem_info(1176,32852
static void SCC_set_break(1192,33320
static int SCC_ioctl(1214,33803
static void SCC_stop_receive 1244,34539
static int SCC_trans_empty 1257,35057
static void probe_sccs(1270,35327
#define ZS_CONTROL	1274,35367
#define ZS_DATA	1275,35397
#define ZS_IRQ	1276,35429
#define ZS_MOVE	1277,35447
#define ZS_DATA_MOVE	1278,35467
#define ZS_CH_A_FIRST	1279,35490
static void show_serial_version(1331,36851
probe_sccs(1338,37038
rs_cons_check(1389,38377
volatile int test_done;1440,39498
int mac_SCC_init(1443,39554
rs_cons_hook(1492,40808
rs_kgdb_hook(1513,41399

drivers/char/radio-aimslab.c,684
#define CONFIG_RADIO_RTRACK_PORT 40,1464
static int io 43,1508
static int users 44,1551
struct rt_devicert_device46,1574
static void sleep_delay(57,1678
static void rt_decvol(72,1891
static void rt_incvol(79,2048
static void rt_mute(86,2203
static int rt_setvol(92,2313
void send_0_byte(131,3247
void send_1_byte(144,3597
static int rt_setfreq(158,3951
int rt_getsigstr(198,5145
static int rt_ioctl(205,5288
static int rt_open(294,7188
static void rt_close(303,7318
static struct rt_device rtrack_unit;309,7400
static struct video_device rtrack_radio=311,7438
__initfunc(326,7682
EXPORT_NO_SYMBOLS;360,8584
int init_module(362,8604
void cleanup_module(372,8760

drivers/char/radio-aztech.c,680
#define CONFIG_RADIO_AZTECH_PORT 39,1413
static int io 42,1457
static int radio_wait_time 43,1500
static int users 44,1535
struct az_deviceaz_device46,1558
static int volconvert(53,1631
static void send_0_byte 73,1914
static void send_1_byte 80,2076
static int az_setvol(87,2247
static int az_getsigstr(101,2590
static int az_getstereo(108,2739
static int az_setfreq(115,2868
static int az_ioctl(153,3945
static int az_open(249,6065
static void az_close(258,6195
static struct az_device aztech_unit;264,6277
static struct video_device aztech_radio=266,6315
__initfunc(281,6555
EXPORT_NO_SYMBOLS;308,7295
int init_module(310,7315
void cleanup_module(320,7471

drivers/char/console_macros.h,1734
#define cons_num	1,0
#define sw	2,47
#define screenbuf	3,88
#define screenbuf_size	4,142
#define origin	5,206
#define scr_top	6,255
#define visible_origin 7,306
#define scr_end	8,371
#define pos	9,422
#define top	10,465
#define bottom	11,508
#define x	12,557
#define y	13,596
#define vc_state	14,635
#define npar	15,684
#define par	16,729
#define ques	17,772
#define attr	18,817
#define saved_x	19,862
#define saved_y	20,913
#define translate	21,964
#define G0_charset	22,1018
#define G1_charset	23,1074
#define saved_G0	24,1130
#define saved_G1	25,1182
#define utf	26,1234
#define utf_count	27,1277
#define utf_char	28,1331
#define video_erase_char 29,1383
#define disp_ctrl	30,1451
#define toggle_meta	31,1505
#define decscnm	32,1563
#define decom	33,1614
#define decawm	34,1661
#define deccm	35,1710
#define decim	36,1757
#define deccolm	37,1804
#define need_wrap	38,1855
#define kmalloced	39,1909
#define report_mouse	40,1963
#define color	41,2023
#define s_color	42,2070
#define def_color	43,2121
#define foreground	44,2175
#define background	45,2209
#define charset	46,2243
#define s_charset	47,2294
#define	intensity	48,2348
#define	underline	49,2402
#define	blink	50,2456
#define	reverse	51,2503
#define	s_intensity	52,2554
#define	s_underline	53,2612
#define	s_blink	54,2670
#define	s_reverse	55,2721
#define	ulcolor	56,2775
#define	halfcolor	57,2826
#define tab_stop	58,2880
#define palette	59,2932
#define bell_pitch	60,2983
#define bell_duration	61,3039
#define cursor_type	62,3101
#define display_fg	63,3159
#define complement_mask 64,3215
#define s_complement_mask 65,3281
#define hi_font_mask	66,3351
#define vcmode	68,3412
#define structsize	70,3458

drivers/char/radio-sf16fmi.c,707
struct fmi_devicefmi_device25,833
#define CONFIG_RADIO_SF16FMI_PORT 34,1005
static int io 37,1050
static int users 38,1094
#define RSF16_ENCODE(RSF16_ENCODE45,1342
#define RSF16_MINFREQ 46,1380
#define RSF16_MAXFREQ 47,1411
static void outbits(49,1444
static inline void fmi_mute(67,1701
static inline void fmi_unmute(72,1763
static inline int fmi_setfreq(77,1827
static inline int fmi_getsigstr(98,2263
static int fmi_ioctl(123,2754
static int fmi_open(243,5465
static void fmi_close(252,5596
static struct fmi_device fmi_unit;258,5679
static struct video_device fmi_radio=260,5715
__initfunc(275,5959
EXPORT_NO_SYMBOLS;307,6799
int init_module(309,6819
void cleanup_module(319,6972

drivers/char/mac_SCC.h,5038
#define _MAC_SCC_H10,295
#define ZILOG_CLOSING_WAIT_INF	16,444
#define ZILOG_CLOSING_WAIT_NONE	17,477
#define ZILOG_HUP_NOTIFY 22,587
#define ZILOG_FOURPORT 24,688
#define ZILOG_SAK	25,765
#define ZILOG_SPLIT_TERMIOS 26,831
#define ZILOG_SPD_MASK	28,909
#define ZILOG_SPD_HI	29,939
#define ZILOG_SPD_VHI	31,1005
#define ZILOG_SPD_CUST	32,1073
#define ZILOG_SKIP_TEST	34,1138
#define ZILOG_AUTO_IRQ 35,1215
#define ZILOG_SESSION_LOCKOUT 36,1294
#define ZILOG_PGRP_LOCKOUT 37,1373
#define ZILOG_CALLOUT_NOHUP 38,1449
#define ZILOG_FLAGS	40,1525
#define ZILOG_USR_MASK 41,1585
#define ZILOG_INITIALIZED	45,1742
#define ZILOG_CALLOUT_ACTIVE	46,1813
#define ZILOG_NORMAL_ACTIVE	47,1885
#define ZILOG_BOOT_AUTOCONF	48,1954
#define ZILOG_CLOSING	49,2028
#define ZILOG_CTS_FLOW	50,2091
#define ZILOG_CHECK_CD	51,2152
#define SERIAL_MAGIC 67,2510
#define SERIAL_XMIT_SIZE 72,2609
#define RS_EVENT_WRITE_WAKEUP	78,2756
#define BRG_TO_BPS(BRG_TO_BPS85,2896
#define BPS_TO_BRG(BPS_TO_BRG86,2953
#define	FLAG	90,3053
#define	R0	93,3095
#define	R1	94,3132
#define	R2	95,3145
#define	R3	96,3158
#define	R4	97,3171
#define	R5	98,3184
#define	R6	99,3197
#define	R7	100,3210
#define	R8	101,3223
#define	R9	102,3236
#define	R10	103,3249
#define	R11	104,3264
#define	R12	105,3279
#define	R13	106,3294
#define	R14	107,3309
#define	R15	108,3324
#define	NULLCODE	110,3340
#define	POINT_HIGH	111,3375
#define	RES_EXT_INT	112,3435
#define	SEND_ABORT	113,3495
#define	RES_RxINT_FC	114,3536
#define	RES_Tx_P	115,3599
#define	ERR_RES	116,3647
#define	RES_H_IUS	117,3687
#define	RES_Rx_CRC	119,3735
#define	RES_Tx_CRC	120,3786
#define	RES_EOM_L	121,3837
#define	EXT_INT_ENAB	125,3907
#define	TxINT_ENAB	126,3953
#define	PAR_SPEC	127,3996
#define	RxINT_DISAB	129,4052
#define	RxINT_FCERR	130,4095
#define	INT_ALL_Rx	131,4165
#define	INT_ERR_Rx	132,4229
#define	WT_RDY_RT	134,4278
#define	WT_FN_RDYFN	135,4325
#define	WT_RDY_ENAB	136,4373
#define	RxENABLE	142,4491
#define	SYNC_L_INH	143,4528
#define	ADD_SM	144,4585
#define	RxCRC_ENAB	145,4638
#define	ENT_HM	146,4681
#define	AUTO_ENAB	147,4724
#define	Rx5	148,4766
#define	Rx7	149,4809
#define	Rx6	150,4853
#define	Rx8	151,4897
#define RxNBITS_MASK	152,4941
#define	PAR_ENA	156,4992
#define	PAR_EVEN	157,5033
#define	SYNC_ENAB	159,5078
#define	SB1	160,5122
#define	SB15	161,5161
#define	SB2	162,5204
#define SB_MASK	163,5244
#define	MONSYNC	165,5266
#define	BISYNC	166,5312
#define	SDLC	167,5361
#define	EXTSYNC	168,5417
#define	X1CLK	170,5465
#define	X16CLK	171,5504
#define	X32CLK	172,5546
#define	X64CLK	173,5588
#define XCLK_MASK	174,5630
#define	TxCRC_ENAB	178,5678
#define	RTS	179,5721
#define	SDLC_CRC	180,5748
#define	TxENAB	181,5787
#define	SND_BRK	182,5823
#define	Tx5	183,5862
#define	Tx7	184,5915
#define	Tx6	185,5959
#define	Tx8	186,6003
#define TxNBITS_MASK	187,6047
#define	DTR	188,6073
#define	VIS	197,6308
#define	NV	198,6351
#define	DLC	199,6380
#define	MIE	200,6420
#define	STATHI	201,6464
#define	NORESET	202,6502
#define	CHRB	203,6550
#define	CHRA	204,6590
#define	FHWRES	205,6630
#define	BIT6	208,6722
#define	LOOPMODE 209,6759
#define	ABUNDER	210,6799
#define	MARKIDLE 211,6856
#define	GAOP	212,6899
#define	NRZ	213,6941
#define	NRZI	214,6970
#define	FM1	215,7004
#define	FM0	216,7048
#define	CRCPS	217,7092
#define	TRxCXT	220,7178
#define	TRxCTC	221,7220
#define	TRxCBR	222,7265
#define	TRxCDP	223,7315
#define	TRxCOI	224,7357
#define	TCRTxCP	225,7389
#define	TCTRxCP	226,7439
#define	TCBR	227,7489
#define	TCDPLL	228,7550
#define	RCRTxCP	229,7605
#define	RCTRxCP	230,7654
#define	RCBR	231,7706
#define	RCDPLL	232,7766
#define	RTxCX	233,7820
#define	BRENABL	240,8058
#define	BRSRC	241,8109
#define	DTRREQ	242,8158
#define	AUTOECHO 243,8202
#define	LOOPBAK	244,8237
#define	SEARCH	245,8279
#define	RMC	246,8323
#define	DISDPLL	247,8366
#define	SSBR	248,8406
#define	SSRTxC	249,8461
#define	SFMM	250,8510
#define	SNRZI	251,8546
#define	ZCIE	254,8646
#define	DCDIE	255,8681
#define	SYNCIE	256,8710
#define	CTSIE	257,8749
#define	TxUIE	258,8781
#define	BRKIE	259,8825
#define	Rx_CH_AV	263,8889
#define	ZCOUNT	264,8939
#define	Tx_BUF_EMP	265,8976
#define	DCD	266,9021
#define	SYNC_HUNT	267,9048
#define	CTS	268,9087
#define	TxEOM	269,9115
#define	BRK_ABRT	270,9153
#define	ALL_SNT	273,9216
#define	RES3	275,9301
#define	RES4	276,9329
#define	RES5	277,9357
#define	RES6	278,9385
#define	RES7	279,9413
#define	RES8	280,9441
#define	RES18	281,9469
#define	RES28	282,9498
#define	PAR_ERR	284,9565
#define	Rx_OVR	285,9606
#define	FRM_ERR	286,9650
#define	END_FR	287,9696
#define	CHBEXT	292,9864
#define	CHBTxIP	293,9912
#define	CHBRxIP	294,9955
#define	CHAEXT	295,9998
#define	CHATxIP	296,10046
#define	CHARxIP	297,10090
#define	ONLOOP	302,10225
#define	LOOPSEND 303,10257
#define	CLK2MIS	304,10299
#define	CLK1MIS	305,10346
#define ZS_CLEARERR(ZS_CLEARERR314,10590
#define ZS_CLEARFIFO(ZS_CLEARFIFO315,10657

drivers/char/radio-zoltrix.c,642
#define CONFIG_RADIO_ZOLTRIX_PORT 37,1435
static int io 40,1480
static int users 41,1523
struct zol_device zol_device43,1546
static void sleep_delay(54,1673
static int zol_setvol(68,1899
static void zol_mute(88,2205
static void zol_unmute(96,2367
static int zol_setfreq(102,2467
int zol_getsigstr(164,3663
int zol_is_stereo 185,4078
static int zol_ioctl(202,4310
static int zol_open(312,6723
static void zol_close(321,6855
static struct zol_device zoltrix_unit;327,6938
static struct video_device zoltrix_radio 329,6978
__initfunc(344,7220
EXPORT_NO_SYMBOLS;384,8164
int init_module(386,8184
void cleanup_module(395,8343

drivers/char/radio-miropcm20.c,491
static int users 15,619
struct pcm20_devicepcm20_device17,642
static void pcm20_mute(29,750
static int pcm20_setvol(37,853
static int pcm20_setfreq(63,1398
int pcm20_getsigstr(78,1665
static int pcm20_ioctl(87,1846
static int pcm20_open(175,3775
static void pcm20_close(184,3908
static struct pcm20_device pcm20_unit;190,3993
static struct video_device pcm20_radio=192,4033
__initfunc(207,4289
EXPORT_NO_SYMBOLS;231,4763
int init_module(233,4783
void cleanup_module(239,4838

drivers/char/rsf16fmi.h,27
#define __RSF16FMI_H9,191

drivers/char/msp3400.h,444
#define MSP3400_H2,18
#define MSP_SET_TVNORM 6,115
#define MSP_SET_RADIO 7,191
#define MSP_NEWCHANNEL 8,267
#define MSP_GET_VOLUME 10,344
#define MSP_SET_VOLUME 11,389
#define MSP_GET_STEREO 13,435
#define MSP_SET_STEREO 14,480
#define MSP_GET_DC 16,526
#define MSP_GET_BASS 18,572
#define MSP_SET_BASS 19,618
#define MSP_GET_TREBLE 20,664
#define MSP_SET_TREBLE 21,710
#define MSP_GET_UNIT 23,757
#define MSP_SWITCH_MUTE 24,801

drivers/char/radio-rtrack2.c,582
#define CONFIG_RADIO_RTRACK2_PORT 21,763
static int io 24,808
static int users 25,852
struct rt_devicert_device27,875
static void rt_mute(37,966
static void rt_unmute(45,1078
static void zero(53,1190
static void one(60,1273
static int rt_setfreq(67,1355
int rt_getsigstr(92,1704
static int rt_ioctl(99,1847
static int rt_open(188,3703
static void rt_close(197,3833
static struct rt_device rtrack2_unit;203,3915
static struct video_device rtrack2_radio=205,3954
__initfunc(220,4206
EXPORT_NO_SYMBOLS;250,4894
int init_module(252,4914
void cleanup_module(262,5083

drivers/char/serial167.c,3032
#define cy_put_user	68,1885
static unsigned long cy_get_user(70,1915
#define SERIAL_PARANOIA_CHECK79,2126
#define  CYCLOM_ENABLE_MONITORING87,2339
#define MIN(MIN90,2386
#define WAKEUP_CHARS 93,2435
#define STD_COM_FLAGS 95,2461
#define SERIAL_TYPE_NORMAL 97,2488
#define SERIAL_TYPE_CALLOUT 98,2518
struct tty_driver cy_serial_driver,103,2584
struct tty_driver cy_serial_driver, cy_callout_driver;103,2584
extern int serial_console;104,2639
static struct cyclades_port *serial_console_info 105,2666
static unsigned int serial_console_cflag 106,2723
u_char initial_console_speed;107,2769
#define BASE_ADDR 111,2848
#define pcc2chip	112,2879
#define PccSCCMICR	113,2928
#define PccSCCTICR	114,2952
#define PccSCCRICR	115,2976
#define PccTPIACKR	116,3000
#define PccRPIACKR	117,3024
#define PccIMLR	118,3048
struct cyclades_port cy_port[121,3113
#define NR_PORTS 128,3298
static int serial_refcount;130,3370
static struct tty_struct *serial_table[132,3399
static struct termios *serial_termios[133,3449
static struct termios *serial_termios_locked[134,3498
static unsigned char *tmp_buf 146,4034
static struct semaphore tmp_buf_sem 147,4069
static int baud_table[157,4518
static char baud_co[163,4719
static char baud_bpr[169,5039
static u_char baud_co[177,5392
static u_char baud_bpr[182,5658
static u_char baud_cor4[186,5880
#define DEBUG_PORT	207,6545
#define DEBUG_LEN	208,6566
} debugq;debugq214,6656
debugq debugiq;216,6667
void my_udelay 226,6960
serial_paranoia_check(238,7104
SP(273,8073
char scrn[279,8199
CP(281,8218
void CP1(289,8376
void CP2(290,8451
void CP4(291,8525
void CP8(292,8598
write_cy_cmd(301,8925
cy_stop(332,9645
cy_start(357,10253
cy_sched_event(389,11083
cd2401_rxerr_interrupt(402,11539
cd2401_modem_interrupt(492,14116
cd2401_tx_interrupt(547,15568
cd2401_rx_interrupt(666,18913
do_cyclades_bh(748,21666
do_softint(754,21759
startup(786,22617
start_xmit(848,23943
shutdown(866,24396
config_setup(925,25913
cy_put_char(1166,33506
cy_flush_chars(1195,34137
cy_write(1229,35122
cy_write_room(1285,36424
cy_chars_in_buffer(1304,36838
cy_flush_buffer(1320,37224
cy_throttle(1346,38006
cy_unthrottle(1382,38818
get_serial_info(1417,39635
set_serial_info(1440,40252
get_modem_info(1483,41353
set_modem_info(1508,42100
send_break(1598,44572
get_mon_info(1609,44860
set_threshold(1621,45146
get_threshold(1635,45447
set_default_threshold(1649,45737
get_default_threshold(1656,45881
set_timeout(1663,46030
get_timeout(1676,46310
set_default_timeout(1690,46586
get_default_timeout(1697,46726
cy_ioctl(1704,46871
cy_set_termios(1856,51752
cy_close(1884,52459
cy_hangup(1974,55029
block_til_ready(2007,55788
cy_open(2152,59811
show_version(2237,61853
mvme167_serial_console_setup(2255,62379
serial167_init(2381,66264
show_status(2555,71539
void console_setup(2653,74804
void serial167_write(2731,76431
void putDebugChar 2792,77583
int getDebugChar(2833,78322
void queueDebugChar 2903,79616
debug_setup(2916,79781

drivers/char/joystick/joy-amiga.c,309
static struct js_port* js_am_port __initdata 40,1320
static int js_am[45,1453
static int js_am_read(51,1535
static int js_am_open(81,2063
static int js_am_close(91,2210
static void __init js_am_init_corr(102,2370
void __init js_am_setup(117,2666
int init_module(125,2809
void cleanup_module(149,3341

drivers/char/joystick/joy-analog.c,435
#define JS_AN_MAX_TIME 41,1359
static int js_an_port_list[43,1388
static int js_an_port_list[] __initdata 43,1388
static struct js_port* js_an_port __initdata 44,1442
static int js_an[49,1576
static int js_an_read(57,1739
static int js_an_open(102,2754
static int js_an_close(112,2901
static struct js_port __init *js_an_probe(122,3033
void __init js_an_setup(161,4046
int init_module(169,4190
void cleanup_module(193,4675

drivers/char/joystick/joy-analog.h,963
#define JS_AN_AXES_STD	33,1211
#define JS_AN_BUTTONS_STD	34,1240
#define JS_AN_BUTTONS_CHF	36,1272
#define JS_AN_HAT1_CHF	37,1303
#define JS_AN_HAT2_CHF	38,1332
#define JS_AN_ANY_CHF	39,1361
#define JS_AN_HAT_FCS	40,1389
#define JS_AN_HATS_ALL	41,1417
#define JS_AN_BUTTON_PXY_X	42,1446
#define JS_AN_BUTTON_PXY_Y	43,1478
#define JS_AN_BUTTON_PXY_U	44,1510
#define JS_AN_BUTTON_PXY_V	45,1542
#define JS_AN_BUTTONS_PXY_XY	46,1574
#define JS_AN_BUTTONS_PXY_UV	47,1608
#define JS_AN_BUTTONS_PXY	48,1642
} js_an_hat_to_axis[53,1706
struct js_an_info js_an_info55,1778
static void js_an_decode(68,1972
static inline int js_an_count_bits(141,4261
static void __init js_an_init_corr(156,4470
static int __init js_an_probe_devs(198,5545
static inline int js_an_axes(253,7211
static inline int js_an_buttons(262,7464
static char js_an_name_buf[273,7765
static char js_an_name_buf[128] __initdata 273,7765
static char __init *js_an_name(275,7815

drivers/char/joystick/joy-assasin.c,925
#define JS_AS_MAX_START	42,1361
#define JS_AS_MAX_STROBE	43,1390
#define JS_AS_MAX_TIME	44,1418
#define JS_AS_MAX_LENGTH	45,1447
#define JS_AS_MODE_A3D	47,1476
#define JS_AS_MODE_PAN	48,1519
#define JS_AS_MODE_OEM	49,1559
#define JS_AS_MODE_PXL	50,1611
static int js_as[55,1735
static int js_as_port_list[57,1821
static int js_as_port_list[] __initdata 57,1821
static struct js_port* js_as_port __initdata 58,1875
struct js_as_info js_as_info62,1954
static int js_as_read_packet(73,2095
static int js_as_csum(118,2804
static int js_as_read(129,3053
static int js_as_open(195,5304
static int js_as_close(205,5451
static void __init js_as_pxl_init_corr(216,5619
static void __init js_as_as_init_corr(260,6701
static void __init js_as_rudder_init_corr(279,7100
static struct js_port __init *js_as_probe(293,7542
void __init js_as_setup(377,10123
int init_module(385,10267
void cleanup_module(408,10750

drivers/char/joystick/joy-console.c,2669
#define JS_NO_PAD	47,1413
#define JS_SNES_PAD	48,1433
#define JS_NES_PAD	49,1455
#define JS_NES4_PAD	50,1476
#define JS_MULTI_STICK	51,1498
#define JS_MULTI2_STICK	52,1523
#define JS_PSX_PAD	53,1549
#define JS_MAX_PAD	55,1571
struct js_console_info js_console_info57,1602
static struct js_port* js_console_port 72,1997
static int js_console[74,2045
static int js_console[] __initdata 74,2045
static int js_console2[75,2105
static int js_console2[] __initdata 75,2105
static int js_console3[76,2166
static int js_console3[] __initdata 76,2166
static int status_bit[78,2228
#define JS_NES_DELAY	84,2318
#define JS_NES_LENGTH	86,2373
#define JS_NES_A	88,2436
#define JS_NES_B	89,2455
#define JS_NES_START	90,2474
#define JS_NES_SELECT	91,2497
#define JS_NES_UP	92,2521
#define JS_NES_DOWN	93,2541
#define JS_NES_LEFT	94,2563
#define JS_NES_RIGHT	95,2585
#define JS_SNES_LENGTH	97,2609
#define JS_SNES_B	99,2701
#define JS_SNES_Y	100,2721
#define JS_SNES_START	101,2741
#define JS_SNES_SELECT	102,2765
#define JS_SNES_UP	103,2790
#define JS_SNES_DOWN	104,2811
#define JS_SNES_LEFT	105,2834
#define JS_SNES_RIGHT	106,2857
#define JS_SNES_A	107,2881
#define JS_SNES_X	108,2901
#define JS_SNES_L	109,2921
#define JS_SNES_R	110,2942
#define JS_NES_POWER	112,2964
#define JS_NES_CLOCK	113,2990
#define JS_NES_LATCH	114,3016
static void js_nes_read_packet(122,3195
#define JS_MULTI_LENGTH	143,3755
#define JS_MULTI2_LENGTH	144,3829
#define JS_MULTI_UP	146,3896
#define JS_MULTI_DOWN	147,3919
#define JS_MULTI_LEFT	148,3944
#define JS_MULTI_RIGHT	149,3969
#define JS_MULTI_BUTTON	150,3995
#define JS_MULTI_BUTTON2	151,4022
static void js_multi_read_packet(157,4121
#define JS_PSX_DELAY	171,4394
#define JS_PSX_LENGTH	173,4419
#define JS_PSX_NORMAL	175,4444
#define JS_PSX_NEGCON	176,4471
#define JS_PSX_MOUSE	177,4498
#define JS_PSX_SELBUT	179,4525
#define JS_PSX_START	180,4552
#define JS_PSX_UP	181,4578
#define JS_PSX_RIGHT	182,4601
#define JS_PSX_DOWN	183,4627
#define JS_PSX_LEFT	184,4652
#define JS_PSX_CLOCK	186,4678
#define JS_PSX_COMMAND	187,4704
#define JS_PSX_POWER	188,4732
#define JS_PSX_NOPOWER	189,4758
#define JS_PSX_SELECT	190,4786
#define JS_PSX_CTRL_OUT(JS_PSX_CTRL_OUT192,4814
static int js_psx_command(199,4962
static int js_psx_read_packet(221,5484
#define JS_MAX_LENGTH 251,6203
static int js_console_read(253,6241
int js_console_open(344,8729
int js_console_close(358,8985
void cleanup_module(371,9224
static void __init js_console_init_corr(396,9763
static struct js_port __init *js_console_probe(415,10153
void __init js_console_setup(566,13761
int init_module(581,14155

drivers/char/joystick/joy-db9.c,1284
#define JS_MULTI_STICK	44,1347
#define JS_MULTI2_STICK 45,1375
#define JS_GENESIS_PAD 46,1404
#define JS_GENESIS5_PAD 47,1433
#define JS_GENESIS6_PAD	48,1462
#define JS_SATURN_PAD	49,1491
#define JS_MULTI_0802	50,1518
#define JS_MAX_PAD	51,1545
#define JS_DB9_UP	53,1570
#define JS_DB9_DOWN	54,1593
#define JS_DB9_LEFT	55,1618
#define JS_DB9_RIGHT	56,1643
#define JS_DB9_FIRE1	57,1669
#define JS_DB9_FIRE2	58,1695
#define JS_DB9_FIRE3	59,1721
#define JS_DB9_FIRE4	60,1747
#define JS_DB9_NORMAL	62,1774
#define JS_DB9_NOSELECT	63,1801
#define JS_DB9_SATURN0	65,1831
#define JS_DB9_SATURN1	66,1859
#define JS_DB9_SATURN2	67,1887
#define JS_DB9_SATURN3	68,1915
#define JS_GENESIS6_DELAY	70,1944
static struct js_port* js_db9_port 72,1974
static int js_db9[74,2018
static int js_db9[] __initdata 74,2018
static int js_db9_2[75,2062
static int js_db9_2[] __initdata 75,2062
static int js_db9_3[76,2108
static int js_db9_3[] __initdata 76,2108
struct js_db9_info js_db9_info78,2155
static int js_db9_read(91,2374
int js_db9_open(234,6220
int js_db9_close(255,6635
void cleanup_module(274,6972
static void __init js_db9_init_corr(298,7421
static struct js_port __init *js_db9_probe(316,7754
void __init js_db9_setup(376,9639
int init_module(391,10009

drivers/char/joystick/joy-gravis.c,811
#define JS_GR_MODE_GPP	41,1323
#define JS_GR_LENGTH_GPP	42,1349
#define JS_GR_STROBE_GPP	43,1377
#define JS_GR_MODE_XT	45,1406
#define JS_GR_MODE_BD	46,1431
#define JS_GR_LENGTH_XT	47,1456
#define JS_GR_STROBE_XT	48,1483
#define JS_GR_MAX_CHUNKS_XT	49,1511
#define JS_GR_MAX_BITS_XT	50,1543
static int js_gr_port_list[52,1574
static int js_gr_port_list[] __initdata 52,1574
static struct js_port* js_gr_port __initdata 53,1628
struct js_gr_info js_gr_info55,1682
static int js_gr_gpp_read_packet(64,1809
static int js_gr_xt_read_packet(105,2606
static int js_gr_read(164,3721
static int js_gr_open(235,5625
static int js_gr_close(245,5772
static void __init js_gr_init_corr(256,5931
static struct js_port __init *js_gr_probe(326,7299
int init_module(369,8503
void cleanup_module(387,8798

drivers/char/joystick/joy-lightning.c,871
#define JS_L4_PORT	42,1360
#define JS_L4_SELECT_ANALOG	43,1386
#define JS_L4_SELECT_DIGITAL	44,1419
#define JS_L4_SELECT_SECONDARY	45,1453
#define JS_L4_CMD_ID	46,1489
#define JS_L4_CMD_GETCAL	47,1516
#define JS_L4_CMD_SETCAL	48,1546
#define JS_L4_ID	49,1576
#define JS_L4_BUSY	50,1599
#define JS_L4_TIMEOUT	51,1624
static struct js_port* __initdata js_l4_port 53,1663
static int js_l4[58,1797
struct js_l4_info js_l4_info62,1908
static int js_l4_wait_ready(71,2030
static int js_l4_read(84,2358
static int js_l4_getcal(119,3091
static int js_l4_setcal(147,3685
static void js_l4_calibrate(176,4350
static int js_l4_open(214,5289
static int js_l4_close(224,5436
static struct js_port __init *js_l4_probe(234,5577
static void __init js_l4_card_probe(277,6826
void __init js_l4_setup(310,7679
int init_module(318,7823
void cleanup_module(349,8429

drivers/char/joystick/joy-logitech.c,990
#define JS_LT_MAX_START	42,1347
#define JS_LT_MAX_STROBE	43,1376
#define JS_LT_MAX_LENGTH	44,1404
#define JS_LT_MAX_DELAY	46,1433
#define JS_LT_MODE_WMED	48,1465
#define JS_LT_MODE_CM2	49,1492
#define JS_LT_MODE_TPD	50,1518
static int js_lt_seq_init[52,1545
static int js_lt_seq_init[] __initdata 52,1545
static int js_lt_seq_reset[53,1643
static int js_lt_seq_reset[] __initdata 53,1643
static int js_lt_port_list[55,1717
static int js_lt_port_list[] __initdata 55,1717
static struct js_port* js_lt_port __initdata 56,1771
} js_lt_hat_to_axis[61,1857
struct js_lt_info js_lt_info63,1965
static int js_lt_read_packet(72,2075
static unsigned char js_lt_reverse(142,3305
static int js_lt_read(154,3572
static int js_lt_open(211,4848
static int js_lt_close(221,4995
static void __init js_lt_trigger_sequence(232,5186
static void __init js_lt_init_corr(245,5395
static struct js_port __init *js_lt_probe(280,6211
int init_module(342,7829
void cleanup_module(360,8126

drivers/char/joystick/joy-sidewinder.c,903
#define JS_SW_MAX_START	42,1361
#define JS_SW_MIN_STROBE	43,1390
#define JS_SW_EXT_STROBE	44,1418
#define JS_SW_MIN_TIME	45,1446
#define JS_SW_MAX_TIME	46,1475
#define JS_SW_MAX_LENGTH	48,1505
#define JS_SW_MODE_3DP	50,1534
#define JS_SW_MODE_PP	51,1560
#define JS_SW_MODE_GP	52,1585
static int js_sw_port_list[54,1611
static int js_sw_port_list[] __initdata 54,1611
static struct js_port* js_sw_port __initdata 55,1665
} js_sw_hat_to_axis[60,1751
struct js_sw_info js_sw_info62,1859
static void __init js_sw_init_digital(73,2034
static int js_sw_read_packet(103,2596
static int js_sw_parity(166,3654
static int js_sw_csum(181,3855
static int js_sw_read(195,4039
static int js_sw_open(272,6125
static int js_sw_close(282,6272
static void __init js_sw_init_corr(293,6433
static struct js_port __init *js_sw_probe(364,7951
int init_module(443,10157
void cleanup_module(461,10456

drivers/char/joystick/joy-thrustmaster.c,1138
#define JS_TM_MAX_START	42,1367
#define JS_TM_MAX_STROBE	43,1396
#define JS_TM_MAX_LENGTH	44,1424
#define JS_TM_MODE_M3DI	46,1453
#define JS_TM_MODE_3DRP	47,1480
#define JS_TM_MODE_WCS3	48,1507
#define JS_TM_MODE_MAX	50,1535
#define JS_TM_BYTE_A0	52,1582
#define JS_TM_BYTE_A1	53,1607
#define JS_TM_BYTE_A2	54,1632
#define JS_TM_BYTE_A3	55,1657
#define JS_TM_BYTE_A4	56,1682
#define JS_TM_BYTE_A5	57,1707
#define JS_TM_BYTE_D0	59,1733
#define JS_TM_BYTE_D1	60,1758
#define JS_TM_BYTE_D2	61,1783
#define JS_TM_BYTE_D3	62,1808
#define JS_TM_BYTE_ID	64,1834
#define JS_TM_BYTE_REV	65,1860
#define JS_TM_BYTE_DEF	66,1887
static int js_tm_port_list[68,1915
static int js_tm_port_list[] __initdata 68,1915
static struct js_port* js_tm_port __initdata 69,1969
struct js_tm_info js_tm_info71,2023
static int js_tm_id_to_def[76,2077
static int js_tm_read_packet(82,2215
static int js_tm_read(141,3235
static int js_tm_open(197,4785
static int js_tm_close(207,4932
static void __init js_tm_init_corr(218,5104
static struct js_port __init *js_tm_probe(252,5870
int init_module(302,7508
void cleanup_module(320,7809

drivers/char/joystick/joy-turbografx.c,819
#define JS_TG_BUTTON1	49,1538
#define JS_TG_UP	50,1565
#define JS_TG_DOWN	51,1587
#define JS_TG_LEFT	52,1612
#define JS_TG_RIGHT	53,1636
#define JS_TG_BUTTON2	55,1662
#define JS_TG_BUTTON3	56,1689
#define JS_TG_BUTTON4	57,1716
#define JS_TG_BUTTON5	58,1743
static struct js_port* js_tg_port 60,1771
static int js_tg[62,1814
static int js_tg[] __initdata 62,1814
static int js_tg_2[63,1875
static int js_tg_2[] __initdata 63,1875
static int js_tg_3[64,1938
static int js_tg_3[] __initdata 64,1938
struct js_tg_info js_tg_info66,2002
static int js_tg_read(79,2231
int js_tg_open(107,3027
int js_tg_close(125,3321
void cleanup_module(140,3597
static void __init js_tg_init_corr(165,4086
static struct js_port __init *js_tg_probe(185,4497
void __init js_tg_setup(251,6168
int init_module(266,6531

drivers/char/joystick/joystick.c,1795
#define JS_REFRESH_TIME	54,1651
#define ROT(ROT60,1758
#define GOF(GOF61,1852
#define GOB(GOB62,1900
#define DIFF(DIFF63,1943
static struct JS_DATA_SAVE_TYPE js_comp_glue;69,2017
static struct js_port  *js_port 70,2063
static struct js_dev   *js_dev 71,2104
static struct timer_list js_timer;72,2145
spinlock_t js_lock 73,2180
static int js_use_count 74,2221
unsigned int js_time_speed 80,2282
js_time_func js_get_time;81,2314
js_delta_func js_delta;82,2340
unsigned int js_time_speed_a 84,2365
js_time_func js_get_time_a;85,2399
js_delta_func js_delta_a;86,2427
static unsigned int js_get_time_rdtsc(102,2707
static unsigned int js_get_time_pit(109,2830
static int js_delta_pit(124,3040
static unsigned int js_get_time_counter(129,3148
static unsigned int js_get_time_rpcc(138,3277
static unsigned int js_get_time_system(149,3471
static int js_delta_normal(161,3653
static int __init js_calibrate_time(170,3789
static int __init js_calibrate_time_counter(193,4230
static int __init js_setup_time(226,4998
static int js_correct(337,7447
static inline int js_button(362,7944
static void js_add_event(373,8171
static void js_flush_data(387,8614
static void js_process_data(402,8966
static void js_sync_buff(429,9804
static void js_do_timer(454,10404
static ssize_t js_read(489,11074
static unsigned int js_poll(666,15409
static int js_select(681,15845
static int js_ioctl(697,16176
static int js_open(857,21293
static int js_release(912,22344
static void js_dump_mem(960,23400
struct js_port *js_register_port(1003,24559
struct js_port *js_unregister_port(1046,25512
int js_register_device(1065,25877
void js_unregister_device(1118,27248
static struct file_operations js_fops 1137,27578
int init_module(1156,27928
void cleanup_module(1225,29301

drivers/char/isicom.c,2705
static int isicom_refcount 39,1038
static int prev_card 40,1070
static struct isi_board * irq_to_board[41,1130
static struct tty_driver isicom_normal,42,1186
static struct tty_driver isicom_normal, isicom_callout;42,1186
static struct tty_struct * isicom_table[43,1242
static struct termios * isicom_termios[44,1307
static struct termios * isicom_termios_locked[45,1371
static struct isi_board isi_card[47,1443
static struct isi_port  isi_ports[48,1490
static struct timer_list tx;52,1570
static char re_schedule 53,1599
static unsigned long tx_count 55,1648
static unsigned char * tmp_buf 65,2025
static struct semaphore tmp_buf_sem 66,2061
static char linuxb_to_isib[70,2160
static struct file_operations ISILoad_fops 80,2322
struct miscdevice isiloader_device 97,2651
extern inline int WaitTillCardIsFree(102,2741
static int ISILoad_open(112,2942
static int ISILoad_release(120,3110
static int ISILoad_ioctl(128,3287
static inline int isicom_paranoia_check(314,7928
extern inline void schedule_bh(334,8467
static void isicom_tx(342,8611
static void do_isicom_bh(484,12060
static void isicom_bottomhalf(491,12128
static void isicom_interrupt(506,12493
static void isicom_config_port(670,16759
extern inline void isicom_setup_board(787,19625
static int isicom_setup_port(813,20244
static int block_til_ready(851,21029
static int isicom_open(974,24255
extern inline void isicom_shutdown_board(1056,26264
static void isicom_shutdown_port(1071,26579
static void isicom_close(1103,27334
static int isicom_write(1187,29599
static void isicom_put_char(1246,31268
static void isicom_flush_chars(1274,31934
static int isicom_write_room(1291,32411
static int isicom_chars_in_buffer(1305,32744
extern inline void isicom_send_break(1314,33000
static int isicom_get_modem_info(1334,33586
static int isicom_set_modem_info(1350,34070
static int isicom_set_serial_info(1396,34831
static int isicom_get_serial_info(1432,35798
static int isicom_ioctl(1451,36333
static void isicom_set_termios(1513,37771
static void isicom_throttle(1537,38390
static void isicom_unthrottle(1554,38889
static void isicom_stop(1571,39378
static void isicom_start(1584,39711
static void do_isicom_hangup(1597,40043
static void isicom_hangup(1609,40231
static void isicom_flush_buffer(1624,40623
static int register_ioregion(1643,41121
static void unregister_ioregion(1665,41763
static int register_drivers(1677,42106
static void unregister_drivers(1737,44078
static int register_isr(1746,44401
static void unregister_isr(1769,45073
static int isicom_init(1781,45369
static int io[1854,47103
static int irq[1855,47121
int init_module(1864,47392
void cleanup_module(1915,48701

drivers/char/radio-gemtek.c,626
#define CONFIG_RADIO_GEMTEK_PORT 28,1028
static int io 31,1072
static int users 32,1115
struct gemtek_devicegemtek_device34,1138
static void gemtek_mute(47,1380
static void gemtek_unmute(55,1503
static void zero(63,1626
static void one(71,1716
static int gemtek_setfreq(79,1805
int gemtek_getsigstr(120,2435
static int gemtek_ioctl(129,2608
static int gemtek_open(220,4581
static void gemtek_close(229,4715
static struct gemtek_device gemtek_unit;235,4801
static struct video_device gemtek_radio=237,4843
__initfunc(252,5098
EXPORT_NO_SYMBOLS;286,5843
int init_module(288,5863
void cleanup_module(298,6051

drivers/char/dtlk.c,1437
#define MOD_INC_USE_COUNT54,1981
#define MOD_DEC_USE_COUNT55,2007
#define KERNEL58,2041
#define TRACE_TEXT(TRACE_TEXT76,2715
#define TRACE_RET 77,2752
#define TRACE_TEXT(TRACE_TEXT79,2806
#define TRACE_RET 80,2841
static int dtlk_major;84,2896
static int dtlk_port_lpc;85,2919
static int dtlk_port_tts;86,2945
static int dtlk_busy;87,2971
static int dtlk_timer_active;88,2993
static int dtlk_has_indexing;89,3023
static unsigned int dtlk_portlist[90,3053
static struct wait_queue *dtlk_process_list 92,3138
static struct timer_list dtlk_timer;93,3190
static struct file_operations dtlk_fops 106,3724
static ssize_t dtlk_read(142,4627
static ssize_t dtlk_write(179,5505
static unsigned int dtlk_poll(255,7191
static void dtlk_stop_timer(287,7909
static void dtlk_timer_tick(295,8024
static int dtlk_ioctl(307,8247
static int dtlk_open(336,8780
static int dtlk_release(352,9023
int __init dtlk_init(371,9271
int init_module(393,9725
void cleanup_module(398,9773
static void dtlk_delay(417,10236
static int dtlk_readable(424,10391
static int dtlk_writeable(430,10496
static int __init dtlk_dev_probe(439,10694
#define LOOK	485,12065
#define LOOK	515,12739
static struct dtlk_settings *dtlk_interrogate(558,13603
static char dtlk_read_tts(613,14867
static char dtlk_read_lpc(641,15552
static char dtlk_write_byte(666,16117
static char dtlk_write_bytes(682,16452
static char dtlk_write_tts(693,16696

drivers/char/radio-typhoon.c,972
#define BANNER 41,1755
#define CONFIG_RADIO_TYPHOON_PORT 44,1840
#define CONFIG_RADIO_TYPHOON_MUTEFREQ 48,1923
struct typhoon_device typhoon_device51,1971
int typhoon_init(79,2983
static int typhoon_setfreq_generic(90,3298
static int typhoon_setfreq(120,4023
static void typhoon_mute(127,4188
static void typhoon_unmute(136,4374
static int typhoon_setvol(145,4571
static int typhoon_ioctl(166,5015
static int typhoon_open(260,7151
static void typhoon_close(270,7350
static struct typhoon_device typhoon_unit 277,7491
static struct video_device typhoon_radio 287,7732
static int typhoon_read_proc(304,8037
	    #define MODULEPROCSTRING 308,8158
	    #define MODULEPROCSTRING 310,8223
        #define LIMIT 313,8292
static struct proc_dir_entry typhoon_proc_entry 335,9025
int typhoon_init(348,9427
EXPORT_NO_SYMBOLS;389,10627
static int io 391,10647
static unsigned long mutefreq 392,10667
int init_module(394,10703
void cleanup_module(412,11218

drivers/char/n_hdlc.c,2331
#define HDLC_MAGIC 74,3275
#define HDLC_VERSION 75,3301
#define VERSION(VERSION88,3580
#define GET_USER(GET_USER118,4317
#define COPY_FROM_USER(COPY_FROM_USER119,4381
#define PUT_USER(PUT_USER120,4477
#define COPY_TO_USER(COPY_TO_USER121,4541
#define GET_USER(GET_USER129,4751
#define COPY_FROM_USER(COPY_FROM_USER136,4954
#define PUT_USER(PUT_USER143,5164
#define COPY_TO_USER(COPY_TO_USER150,5372
#define __init160,5629
typedef int spinlock_t;spinlock_t161,5644
#define spin_lock_irqsave(spin_lock_irqsave162,5668
#define spin_unlock_irqrestore(spin_unlock_irqrestore163,5724
#define spin_lock(spin_lock164,5782
#define spin_unlock(spin_unlock165,5803
#define schedule_timeout(schedule_timeout166,5826
#define test_and_set_bit(test_and_set_bit170,5950
#define signal_pending(signal_pending174,6052
#define net_device_stats	178,6157
typedef int		rw_ret_t;rw_ret_t182,6247
typedef unsigned int	rw_count_t;rw_count_t183,6270
typedef ssize_t		rw_ret_t;rw_ret_t185,6309
typedef size_t		rw_count_t;rw_count_t186,6336
#define MAX_HDLC_FRAME_SIZE 192,6417
#define DEFAULT_RX_BUF_COUNT 193,6450
#define MAX_RX_BUF_COUNT 194,6482
#define DEFAULT_TX_BUF_COUNT 195,6510
typedef struct _n_hdlc_buf_n_hdlc_buf197,6542
} N_HDLC_BUF;N_HDLC_BUF202,6642
typedef struct _n_hdlc_buf_list_n_hdlc_buf_list204,6657
} N_HDLC_BUF_LIST;N_HDLC_BUF_LIST211,6765
struct n_hdlc n_hdlc216,6830
#define DEBUG_LEVEL_INFO	252,8023
int debuglevel=253,8050
#define bset(bset277,8978
#define tty2n_hdlc(tty2n_hdlc279,9036
#define n_hdlc2tty(n_hdlc2tty280,9099
static char szVersion[283,9204
static void n_hdlc_release 290,9338
static void n_hdlc_tty_close(344,10512
static int n_hdlc_tty_open 381,11440
static void n_hdlc_send_frames 431,12701
static void n_hdlc_tty_wakeup 527,15125
static int n_hdlc_tty_room 558,15892
static void n_hdlc_tty_receive(579,16531
static rw_ret_t n_hdlc_tty_read 644,18304
static rw_ret_t n_hdlc_tty_write 722,20305
static int n_hdlc_tty_ioctl 811,22504
static int n_hdlc_tty_select 870,24091
static unsigned int n_hdlc_tty_poll 933,25613
static struct n_hdlc *n_hdlc_alloc 974,26823
void n_hdlc_buf_list_init(1023,27995
void n_hdlc_buf_put(1040,28321
N_HDLC_BUF* n_hdlc_buf_get(1070,28915
int init_module(1096,29430
void cleanup_module(1143,30725

drivers/char/synclink.c,15045
#define VERSION(VERSION47,1896
#define BREAKPOINT(BREAKPOINT48,1960
#define MAX_ISA_DEVICES 50,2000
#define GET_USER(GET_USER93,2947
#define COPY_FROM_USER(COPY_FROM_USER94,3011
#define PUT_USER(PUT_USER95,3107
#define COPY_TO_USER(COPY_TO_USER96,3171
#define GET_USER(GET_USER104,3381
#define COPY_FROM_USER(COPY_FROM_USER111,3584
#define PUT_USER(PUT_USER118,3794
#define COPY_TO_USER(COPY_TO_USER125,4002
static int baud_table[138,4332
#define __init142,4484
#define ioremap(ioremap143,4499
#define iounmap(iounmap144,4536
#define SERIAL_TYPE_NORMAL	145,4566
#define SERIAL_TYPE_CALLOUT	146,4595
typedef int spinlock_t;spinlock_t147,4625
#define spin_lock_irqsave(spin_lock_irqsave148,4649
#define spin_unlock_irqrestore(spin_unlock_irqrestore149,4705
#define spin_lock(spin_lock150,4763
#define spin_unlock(spin_unlock151,4784
#define schedule_timeout(schedule_timeout152,4807
#define signal_pending(signal_pending153,4882
#define RCLRVALUE 160,4977
MGSL_PARAMS default_params 162,5003
#define SHARED_MEM_ADDRESS_SIZE 178,5658
#define BUFFERLISTSIZE 179,5698
#define DMABUFFERSIZE 180,5733
#define MAXRXFRAMES 181,5767
typedef struct _DMABUFFERENTRY_DMABUFFERENTRY183,5790
} DMABUFFERENTRY, *DMAPBUFFERENTRY;DMAPBUFFERENTRY193,6226
#define BH_TYPE_RECEIVE_DATA	197,6310
#define BH_TYPE_RECEIVE_STATUS	198,6341
#define BH_TYPE_RECEIVE_DMA	199,6374
#define BH_TYPE_TRANSMIT_DATA	200,6404
#define BH_TYPE_TRANSMIT_STATUS	201,6436
#define BH_TYPE_STATUS	202,6470
typedef struct _BH_EVENT _BH_EVENT204,6497
} BH_EVENT, *BH_QUEUE;BH_QUEUE209,6627
#define MAX_BH_QUEUE_ENTRIES 211,6694
#define RELEVANT_IFLAG(RELEVANT_IFLAG213,6728
struct mgsl_struct mgsl_struct218,6847
#define MGSL_MAGIC 332,10345
#define SERIAL_XMIT_SIZE 337,10442
#define DCPIN 346,10589
#define SDPIN 347,10633
#define DCAR 349,10678
#define CCAR 350,10729
#define DATAREG 351,10788
#define MSBONLY 352,10845
#define LSBONLY 353,10866
#define CMR	360,11009
#define CCSR	361,11054
#define CCR	362,11110
#define PSR	363,11158
#define PCR	364,11202
#define TMDR	365,11247
#define TMCR	366,11295
#define CMCR	367,11346
#define HCR	368,11398
#define IVR	369,11453
#define IOCR	370,11502
#define ICR	371,11556
#define DCCR	372,11606
#define MISR	373,11659
#define SICR	374,11714
#define RDR	375,11772
#define RMR	376,11817
#define RCSR	377,11862
#define RICR	378,11918
#define RSR	379,11977
#define RCLR	380,12022
#define RCCR	381,12075
#define TC0R	382,12132
#define TDR	383,12181
#define TMR	384,12227
#define TCSR	385,12273
#define TICR	386,12330
#define TSR	387,12390
#define TCLR	388,12436
#define TCCR	389,12490
#define TC1R	390,12548
#define DCR	397,12646
#define DACR	398,12699
#define BDCR	399,12757
#define DIVR	400,12819
#define DICR	401,12883
#define CDIR	402,12947
#define SDIR	403,13009
#define TDMR	405,13070
#define TDIAR	406,13121
#define TBCR	407,13182
#define TARL	408,13235
#define TARU	409,13291
#define NTBCR	410,13348
#define NTARL	411,13407
#define NTARU	412,13469
#define RDMR	414,13533
#define RDIAR	415,13596
#define RBCR	416,13656
#define RARL	417,13708
#define RARU	418,13763
#define NRBCR	419,13819
#define NRARL	420,13877
#define NRARU	421,13938
#define MODEMSTATUS_DTR 428,14053
#define MODEMSTATUS_DSR 429,14082
#define MODEMSTATUS_RTS 430,14111
#define MODEMSTATUS_CTS 431,14140
#define MODEMSTATUS_RI 432,14169
#define MODEMSTATUS_DCD 433,14198
#define RTCmd_Null	440,14294
#define RTCmd_ResetHighestIus	441,14322
#define RTCmd_TriggerChannelLoadDma	442,14360
#define RTCmd_TriggerRxDma	443,14403
#define RTCmd_TriggerTxDma	444,14438
#define RTCmd_TriggerRxAndTxDma	445,14473
#define RTCmd_PurgeRxFifo	446,14513
#define RTCmd_PurgeTxFifo	447,14547
#define RTCmd_PurgeRxAndTxFifo	448,14581
#define RTCmd_LoadRcc	449,14620
#define RTCmd_LoadTcc	450,14651
#define RTCmd_LoadRccAndTcc	451,14682
#define RTCmd_LoadTC0	452,14718
#define RTCmd_LoadTC1	453,14749
#define RTCmd_LoadTC0AndTC1	454,14780
#define RTCmd_SerialDataLSBFirst	455,14816
#define RTCmd_SerialDataMSBFirst	456,14856
#define RTCmd_SelectBigEndian	457,14896
#define RTCmd_SelectLittleEndian	458,14934
#define DmaCmd_Null	465,15037
#define DmaCmd_ResetTxChannel	466,15066
#define DmaCmd_ResetRxChannel	467,15104
#define DmaCmd_StartTxChannel	468,15142
#define DmaCmd_StartRxChannel	469,15180
#define DmaCmd_ContinueTxChannel	470,15218
#define DmaCmd_ContinueRxChannel	471,15258
#define DmaCmd_PauseTxChannel	472,15298
#define DmaCmd_PauseRxChannel	473,15336
#define DmaCmd_AbortTxChannel	474,15374
#define DmaCmd_AbortRxChannel	475,15412
#define DmaCmd_InitTxChannel	476,15450
#define DmaCmd_InitRxChannel	477,15487
#define DmaCmd_ResetHighestDmaIus	478,15524
#define DmaCmd_ResetAllChannels	479,15565
#define DmaCmd_StartAllChannels	480,15605
#define DmaCmd_ContinueAllChannels	481,15645
#define DmaCmd_PauseAllChannels	482,15687
#define DmaCmd_AbortAllChannels	483,15727
#define DmaCmd_InitAllChannels	484,15767
#define TCmd_Null	486,15807
#define TCmd_ClearTxCRC	487,15834
#define TCmd_SelectTicrTtsaData	488,15867
#define TCmd_SelectTicrTxFifostatus	489,15907
#define TCmd_SelectTicrIntLevel	490,15950
#define TCmd_SelectTicrdma_level	491,15990
#define TCmd_SendFrame	492,16031
#define TCmd_SendAbort	493,16063
#define TCmd_EnableDleInsertion	494,16095
#define TCmd_DisableDleInsertion	495,16135
#define TCmd_ClearEofEom	496,16175
#define TCmd_SetEofEom	497,16208
#define RCmd_Null	499,16241
#define RCmd_ClearRxCRC	500,16268
#define RCmd_EnterHuntmode	501,16301
#define RCmd_SelectRicrRtsaData	502,16336
#define RCmd_SelectRicrRxFifostatus	503,16376
#define RCmd_SelectRicrIntLevel	504,16419
#define RCmd_SelectRicrdma_level	505,16459
#define RECEIVE_STATUS	511,16586
#define RECEIVE_DATA	512,16615
#define TRANSMIT_STATUS	513,16642
#define TRANSMIT_DATA	514,16672
#define IO_PIN	515,16700
#define MISC	516,16722
#define RXSTATUS_SHORT_FRAME	523,16815
#define RXSTATUS_CODE_VIOLATION	524,16850
#define RXSTATUS_EXITED_HUNT	525,16888
#define RXSTATUS_IDLE_RECEIVED	526,16923
#define RXSTATUS_BREAK_RECEIVED	527,16960
#define RXSTATUS_ABORT_RECEIVED	528,16998
#define RXSTATUS_RXBOUND	529,17036
#define RXSTATUS_CRC_ERROR	530,17067
#define RXSTATUS_FRAMING_ERROR	531,17100
#define RXSTATUS_ABORT	532,17137
#define RXSTATUS_PARITY_ERROR	533,17167
#define RXSTATUS_OVERRUN	534,17203
#define RXSTATUS_DATA_AVAILABLE	535,17234
#define RXSTATUS_ALL	536,17272
#define usc_UnlatchRxstatusBits(usc_UnlatchRxstatusBits537,17302
#define IDLEMODE_FLAGS	543,17486
#define IDLEMODE_ALT_ONE_ZERO	544,17518
#define IDLEMODE_ZERO	545,17556
#define IDLEMODE_ONE	546,17587
#define IDLEMODE_ALT_MARK_SPACE	547,17617
#define IDLEMODE_SPACE	548,17657
#define IDLEMODE_MARK	549,17689
#define TCSR_PRESERVE	555,17796
#define TXSTATUS_PREAMBLE_SENT	557,17828
#define TXSTATUS_IDLE_SENT	558,17865
#define TXSTATUS_ABORT_SENT	559,17898
#define TXSTATUS_EOF_SENT	560,17932
#define TXSTATUS_EOM_SENT	561,17964
#define TXSTATUS_CRC_SENT	562,17996
#define TXSTATUS_ALL_SENT	563,18028
#define TXSTATUS_UNDERRUN	564,18060
#define TXSTATUS_FIFO_EMPTY	565,18092
#define TXSTATUS_ALL	566,18126
#define usc_UnlatchTxstatusBits(usc_UnlatchTxstatusBits567,18156
#define MISCSTATUS_RXC_LATCHED	570,18267
#define MISCSTATUS_RXC	571,18305
#define MISCSTATUS_TXC_LATCHED	572,18336
#define MISCSTATUS_TXC	573,18374
#define MISCSTATUS_RI_LATCHED	574,18405
#define MISCSTATUS_RI	575,18442
#define MISCSTATUS_DSR_LATCHED	576,18472
#define MISCSTATUS_DSR	577,18509
#define MISCSTATUS_DCD_LATCHED	578,18539
#define MISCSTATUS_DCD	579,18576
#define MISCSTATUS_CTS_LATCHED	580,18606
#define MISCSTATUS_CTS	581,18643
#define MISCSTATUS_RCC_UNDERRUN	582,18673
#define MISCSTATUS_DPLL_NO_SYNC	583,18711
#define MISCSTATUS_BRG1_ZERO	584,18749
#define MISCSTATUS_BRG0_ZERO	585,18784
#define usc_UnlatchIostatusBits(usc_UnlatchIostatusBits587,18820
#define usc_UnlatchMiscstatusBits(usc_UnlatchMiscstatusBits588,18898
#define SICR_RXC_ACTIVE	590,18979
#define SICR_RXC_INACTIVE	591,19011
#define SICR_RXC	592,19044
#define SICR_TXC_ACTIVE	593,19077
#define SICR_TXC_INACTIVE	594,19109
#define SICR_TXC	595,19142
#define SICR_RI_ACTIVE	596,19175
#define SICR_RI_INACTIVE	597,19206
#define SICR_RI	598,19238
#define SICR_DSR_ACTIVE	599,19271
#define SICR_DSR_INACTIVE	600,19302
#define SICR_DSR	601,19334
#define SICR_DCD_ACTIVE	602,19365
#define SICR_DCD_INACTIVE	603,19396
#define SICR_DCD	604,19428
#define SICR_CTS_ACTIVE	605,19459
#define SICR_CTS_INACTIVE	606,19490
#define SICR_CTS	607,19522
#define SICR_RCC_UNDERFLOW	608,19553
#define SICR_DPLL_NO_SYNC	609,19586
#define SICR_BRG1_ZERO	610,19618
#define SICR_BRG0_ZERO	611,19648
#define usc_EnableInterrupts(usc_EnableInterrupts619,20003
#define usc_DisableInterrupts(usc_DisableInterrupts622,20118
#define usc_EnableMasterIrqBit(usc_EnableMasterIrqBit625,20234
#define usc_DisableMasterIrqBit(usc_DisableMasterIrqBit628,20342
#define usc_ClearIrqPendingBits(usc_ClearIrqPendingBits631,20440
#define TXSTATUS_PREAMBLE_SENT	638,20662
#define TXSTATUS_IDLE_SENT	639,20698
#define TXSTATUS_ABORT_SENT	640,20730
#define TXSTATUS_EOF	641,20763
#define TXSTATUS_CRC_SENT	642,20790
#define TXSTATUS_ALL_SENT	643,20821
#define TXSTATUS_UNDERRUN	644,20852
#define TXSTATUS_FIFO_EMPTY	645,20883
#define DICR_MASTER	647,20917
#define DICR_TRANSMIT	648,20944
#define DICR_RECEIVE	649,20972
#define usc_EnableDmaInterrupts(usc_EnableDmaInterrupts651,21000
#define usc_DisableDmaInterrupts(usc_DisableDmaInterrupts654,21105
#define usc_EnableStatusIrqs(usc_EnableStatusIrqs657,21212
#define usc_DisablestatusIrqs(usc_DisablestatusIrqs660,21308
#define DISABLE_UNCONDITIONAL 667,21551
#define DISABLE_END_OF_FRAME 668,21586
#define ENABLE_UNCONDITIONAL 669,21621
#define ENABLE_AUTO_CTS 670,21656
#define ENABLE_AUTO_DCD 671,21691
#define usc_EnableTransmitter(usc_EnableTransmitter672,21726
#define usc_EnableReceiver(usc_EnableReceiver674,21831
#define usc_TCmd(usc_TCmd687,22393
#define usc_RCmd(usc_RCmd688,22470
#define BUS_DESCRIPTOR(BUS_DESCRIPTOR720,23553
typedef void (*isr_dispatch_func)isr_dispatch_func795,26461
isr_dispatch_func UscIsrTable[797,26519
#define jiffies_from_ms(jiffies_from_ms825,27551
struct mgsl_struct *mgsl_device_list 830,27650
int mgsl_device_count 831,27695
int break_on_load=838,27901
int ttymajor=844,28044
int cuamajor=846,28061
static int io[851,28138
static int irq[852,28177
static int dma[853,28217
static int debug_level 854,28257
static char *driver_name 867,28632
static char *driver_version 868,28685
static struct tty_driver serial_driver,870,28724
static struct tty_driver serial_driver, callout_driver;870,28724
static int serial_refcount;871,28780
#define WAKEUP_CHARS 874,28879
static struct tty_struct **serial_table 880,29036
static struct termios **serial_termios 881,29084
static struct termios **serial_termios_locked 882,29131
#define MIN(MIN885,29198
void* mgsl_get_text_ptr(895,29551
static unsigned char *tmp_buf;906,30084
static struct semaphore tmp_buf_sem 907,30115
static inline int mgsl_paranoia_check(909,30161
static void mgsl_stop(935,30781
static void mgsl_start(958,31390
void mgsl_format_bh_queue(987,32091
void mgsl_bh_queue_put(1017,32834
int mgsl_bh_queue_get(1065,34253
void mgsl_bh_handler(1113,35531
void mgsl_bh_receive_dma(1181,37102
void mgsl_bh_transmit_data(1199,37591
void mgsl_bh_status_handler(1237,38705
void mgsl_isr_receive_status(1254,39226
void mgsl_isr_transmit_status(1293,40359
void mgsl_isr_io_pin(1343,41684
void mgsl_isr_transmit_data(1431,44285
void mgsl_isr_receive_data(1463,45163
void mgsl_isr_misc(1582,48684
void mgsl_isr_null(1603,49232
void mgsl_isr_receive_dma(1627,50058
static void mgsl_interrupt(1662,50985
static int startup(1733,52801
static void shutdown(1796,54304
static void mgsl_change_params(1858,56186
static void mgsl_put_char(2005,60112
static void mgsl_flush_chars(2045,61097
static int mgsl_write(2096,62511
static int mgsl_write_room(2227,66133
static int mgsl_chars_in_buffer(2261,66942
static void mgsl_flush_buffer(2294,67842
static void mgsl_send_xchar(2326,68759
static void mgsl_throttle(2355,69564
static void mgsl_unthrottle(2385,70405
static int mgsl_get_stats(2422,71380
static int mgsl_get_params(2451,72161
static int mgsl_set_params(2481,72914
static int mgsl_get_txidle(2517,73902
static int mgsl_set_txidle(2544,74633
static int mgsl_txenable(2571,75291
static int mgsl_txabort(2597,75961
static int mgsl_rxenable(2619,76604
static int mgsl_wait_event(2646,77340
static int get_modem_info(2750,80084
static int set_modem_info(2794,81331
static void mgsl_break(2852,82749
static int mgsl_ioctl(2885,83682
static void mgsl_set_termios(3022,88022
static void mgsl_close(3082,89770
static void mgsl_wait_until_sent(3185,92473
static void mgsl_hangup(3260,94501
static int block_til_ready(3295,95342
static int mgsl_open(3430,99131
static inline int line_info(3539,101706
int mgsl_read_proc(3652,105348
int mgsl_allocate_dma_buffers(3691,106213
int mgsl_alloc_buffer_list_memory(3771,109131
void mgsl_free_buffer_list_memory(3864,112316
int mgsl_alloc_frame_memory(3891,113117
void mgsl_free_frame_memory(3933,114257
void mgsl_free_dma_buffers(3956,114792
int mgsl_claim_resources(3971,115266
void mgsl_release_resources(4055,117844
void mgsl_add_device(4102,119010
struct mgsl_struct* mgsl_allocate_device(4137,120037
int mgsl_enumerate_devices(4172,120932
int __init mgsl_init(4338,125870
int init_module(4440,128994
void cleanup_module(4454,129264
void usc_RTCmd(4517,130764
void usc_DmaCmd(4544,131378
void usc_OutDmaReg(4571,131933
u16 usc_InDmaReg(4600,132606
void usc_OutReg(4627,133189
u16 usc_InReg(4652,133775
void usc_set_sdlc_mode(4666,134125
void usc_enable_loopback(5132,148223
void usc_enable_aux_clock(5196,150166
void usc_stop_receiver(5246,151475
void usc_start_receiver(5278,152408
void usc_start_transmitter(5341,154375
void usc_stop_transmitter(5428,156911
void usc_load_txfifo(5457,157740
void usc_reset(5514,159399
void usc_set_async_mode(5628,162367
void usc_loopback_frame(5820,167452
void usc_set_sync_mode(5883,169154
void usc_set_txidle(5905,169797
void usc_get_serial_signals(5933,170744
void usc_set_serial_signals(5969,171665
void usc_enable_async_clock(6001,172367
void mgsl_reset_rx_dma_buffers(6110,176167
void mgsl_free_rx_frame_buffers(6138,176876
int mgsl_get_rx_frame(6181,178062
void mgsl_load_tx_dma_buffer(6317,182062
BOOLEAN mgsl_register_test(6372,183725
BOOLEAN mgsl_irq_test(6430,185660
BOOLEAN mgsl_dma_test(6486,187245
#define TESTFRAMESIZE 6504,187726
int mgsl_adapter_test(6777,195011
BOOLEAN mgsl_memory_test(6819,196288
void mgsl_load_pci_memory(6901,198732
#define PCI_LOAD_INTERVAL 6910,199093
void mgsl_trace_block(6929,199575
void mgsl_tx_timeout(6969,200408

drivers/scsi/aha1542.c,1715
#define SCSI_PA(SCSI_PA44,1310
#define BAD_DMA(BAD_DMA46,1357
struct proc_dir_entry proc_scsi_aha1542 54,1574
#define DEB(DEB60,1707
#define DEB(DEB62,1730
#define MAXBOARDS 73,2158
static unsigned int bases[76,2259
static int setup_called[79,2370
static int setup_buson[80,2416
static int setup_busoff[81,2462
static int setup_dmaspeed[82,2508
static char *setup_str[84,2557
#define BIOS_TRANSLATION_1632 103,3379
#define BIOS_TRANSLATION_6432 104,3448
#define BIOS_TRANSLATION_25563 105,3510
struct aha1542_hostdata{aha1542_hostdata107,3564
#define HOSTDATA(HOSTDATA117,3903
static struct Scsi_Host * aha_host[119,3973
#define WAITnexttimeout 124,4063
#define aha1542_intr_reset(aha1542_intr_reset131,4378
#define WAIT(WAIT133,4439
#define WAITd(WAITd146,4947
static void aha1542_stat(158,5383
static int aha1542_out(168,5776
static int aha1542_in(200,6464
static int aha1542_in1(222,7067
static int makecode(240,7393
static int aha1542_test_port(296,9637
static void do_aha1542_intr_handle(363,11457
static void aha1542_intr_handle(373,11752
int aha1542_queuecommand(527,16272
static void internal_done(693,21641
int aha1542_command(698,21713
static void setup_mailboxes(711,22004
static int aha1542_getconfig(737,22719
static int aha1542_mbenable(806,24349
static int aha1542_query(840,25228
__initfunc(880,26393
int aha1542_detect(941,27967
static int aha1542_restart(1100,32759
int aha1542_abort(1126,33307
int aha1542_dev_reset(1144,33759
int aha1542_bus_reset(1239,36470
int aha1542_host_reset(1306,38242
int aha1542_old_abort(1382,40314
int aha1542_old_reset(1455,42454
int aha1542_biosparam(1568,46404
Scsi_Host_Template driver_template 1592,46981

drivers/scsi/aha1542.h,1438
#define STATUS(STATUS39,858
#define STST	40,884
#define DIAGF	41,931
#define INIT	42,985
#define IDLE	43,1042
#define CDF	44,1090
#define DF	45,1141
#define INVDCMD	46,1182
#define STATMASK 47,1230
#define INTRFLAGS(INTRFLAGS49,1277
#define ANYINTR	50,1318
#define SCRD	51,1360
#define HACC	52,1405
#define MBOA	53,1450
#define MBIF	54,1485
#define INTRMASK 55,1519
#define CONTROL(CONTROL58,1554
#define HRST	59,1589
#define SRST	60,1625
#define IRST	61,1661
#define SCRST	62,1702
#define DATA(DATA65,1761
#define CMD_NOP	66,1797
#define CMD_MBINIT	67,1838
#define CMD_START_SCSI	68,1891
#define CMD_INQUIRY	69,1944
#define CMD_EMBOI	70,1991
#define CMD_BUSON_TIME	71,2049
#define CMD_BUSOFF_TIME	72,2099
#define CMD_DMASPEED	73,2151
#define CMD_RETDEVS	74,2209
#define CMD_RETCONF	75,2265
#define CMD_RETSETUP	76,2322
#define CMD_ECHO	77,2372
#define CMD_EXTBIOS 79,2419
#define CMD_MBENABLE 80,2499
struct mailbox mailbox83,2619
struct chain chain89,2758
#define any2scsi(any2scsi95,2911
#define scsi2int(scsi2int100,3059
#define xany2scsi(xany2scsi102,3150
#define xscsi2int(xscsi2int108,3293
#define MAX_CDB 111,3425
#define MAX_SENSE 112,3444
struct ccb ccb114,3466
#define AHA1542_MAILBOXES 144,4732
#define AHA1542_SCATTER 145,4760
#define AHA1542_CMDLUN 146,4787
	#define NULL 149,4826
extern struct proc_dir_entry proc_scsi_aha1542;152,4850
#define AHA1542 154,4899

drivers/scsi/NCR53c406a.c,3976
#define NCR53C406A_DEBUG 22,825
#define VERBOSE_NCR53C406A_DEBUG 23,852
#define USE_PIO 26,956
#define USE_BIOS 28,975
#define DMA_CHAN 32,1200
#define USE_FAST_PIO 36,1355
#define WATCHDOG 64,1941
#define SYNC_MODE 66,1967
#define NCR53C406A_DEBUG 70,2056
#define USE_DMA 74,2103
#define USE_DMA 76,2127
#define C1_IMG 80,2181
#define C2_IMG 81,2215
#define C3_IMG 83,2265
#define C3_IMG 85,2307
#define C4_IMG 87,2347
#define C5_IMG 88,2380
#define REG0 90,2424
#define REG1 91,2461
#define DEB(DEB94,2520
#define DEB(DEB96,2543
#define VDEB(VDEB100,2595
#define VDEB(VDEB102,2619
#define LOAD_DMA_COUNT(LOAD_DMA_COUNT105,2643
#define DMA_OP 111,2806
#define SCSI_NOP 113,2841
#define FLUSH_FIFO 114,2875
#define CHIP_RESET 115,2909
#define SCSI_RESET 116,2943
#define RESELECT 117,2977
#define SELECT_NO_ATN 118,3011
#define SELECT_ATN 119,3045
#define SELECT_ATN_STOP 120,3079
#define ENABLE_SEL 121,3113
#define DISABLE_SEL 122,3147
#define SELECT_ATN3 123,3181
#define RESELECT3 124,3215
#define TRANSFER_INFO 125,3249
#define INIT_CMD_COMPLETE 126,3283
#define MSG_ACCEPT 127,3317
#define TRANSFER_PAD 128,3351
#define SET_ATN 129,3385
#define RESET_ATN 130,3419
#define SEND_MSG 131,3453
#define SEND_STATUS 132,3487
#define SEND_DATA 133,3521
#define DISCONN_SEQ 134,3555
#define TERMINATE_SEQ 135,3589
#define TARG_CMD_COMPLETE 136,3623
#define DISCONN 137,3657
#define RECV_MSG 138,3691
#define RECV_CMD 139,3725
#define RECV_DATA 140,3759
#define RECV_CMD_SEQ 141,3793
#define TARGET_ABORT_DMA 142,3827
#define rtrc(rtrc157,4160
#define rtrc(rtrc159,4229
enum Phase Phase163,4325
    idle,164,4338
    data_out,165,4348
    data_in,166,4362
    command_ph,167,4375
    status_ph,168,4391
    message_out,169,4406
    message_in170,4423
static void *bios_base 187,4876
static int   port_base 191,4934
static int   port_base 193,4976
static int   irq_level 197,5024
static int   irq_level 199,5064
static int   dma_chan 203,5163
static int   fast_pio 207,5210
static Scsi_Cmnd         *current_SC 210,5256
static volatile int internal_done_flag 211,5307
static volatile int internal_done_errcode 212,5351
static char info_msg[213,5398
struct proc_dir_entry proc_scsi_NCR53c406a 215,5426
static void *addresses[223,5670
#define ADDRESS_COUNT 227,5743
static unsigned short ports[231,5868
#define PORT_COUNT 233,5976
static unsigned short intrs[236,6075
#define INTR_COUNT 237,6127
struct signature signature241,6256
} signatures[245,6338
} signatures[] __initdata 245,6338
#define SIGNATURE_COUNT 250,6617
static int TC_LSB;256,6807
static int TC_MSB;257,6855
static int SCSI_FIFO;258,6902
static int CMD_REG;259,6950
static int STAT_REG;260,6995
static int DEST_ID;261,7040
static int INT_REG;262,7096
static int SRTIMOUT;263,7152
static int SEQ_REG;264,7209
static int SYNCPRD;265,7259
static int FIFO_FLAGS;266,7315
static int SYNCOFF;267,7374
static int CONFIG1;268,7430
static int CLKCONV;269,7480
static int CONFIG2;271,7579
static int CONFIG3;272,7635
static int CONFIG4;273,7687
static int TC_HIGH;274,7743
static int PIO_FIFO;281,8067
static int PIO_STATUS;285,8219
static int PIO_FLAG;288,8390
static int CONFIG5;289,8450
NCR53c406a_dma_setup 297,8729
NCR53c406a_dma_write(333,9724
NCR53c406a_dma_read(338,9875
NCR53c406a_dma_residual 343,10024
static __inline__ int NCR53c406a_pio_read(357,10278
static __inline__ int NCR53c406a_pio_write(412,11594
__initfunc(464,12837
__initfunc(596,16813
NCR53c406a_info(645,18355
static void internal_done(650,18469
static void wait_intr(656,18588
int NCR53c406a_command(673,19034
NCR53c406a_queue(688,19423
NCR53c406a_abort(729,20468
NCR53c406a_reset(735,20618
NCR53c406a_biosparm(751,21096
do_NCR53c406a_intr(769,21587
NCR53c406a_intr(778,21840
static int irq_probe(972,28423
static void chip_init(1004,29138
__initfunc(1025,29670
Scsi_Host_Template driver_template 1068,31080

drivers/scsi/aha1740.h,2387
#define MINEISA 17,319
#define MAXEISA 18,398
#define	SLOTBASE(SLOTBASE20,536
#define SLOTSIZE	21,576
#define	HID0(HID024,643
#define	HID1(HID125,675
#define HID2(HID226,707
#define	HID3(HID327,739
#define	EBCNTRL(EBCNTRL28,771
#define	PORTADR(PORTADR29,806
#define BIOSADR(BIOSADR30,842
#define INTDEF(INTDEF31,878
#define SCSIDEF(SCSIDEF32,913
#define BUSDEF(BUSDEF33,949
#define	RESV0(RESV034,984
#define RESV1(RESV135,1018
#define	RESV2(RESV236,1052
#define	HID_MFG	38,1087
#define	HID_PRD 39,1109
#define HID_REV 40,1127
#define EBCNTRL_VALUE 41,1145
#define PORTADDR_ENH 42,1169
#define	G2INTST(G2INTST44,1206
#define G2STAT(G2STAT45,1242
#define	MBOXIN0(MBOXIN046,1277
#define	MBOXIN1(MBOXIN147,1313
#define	MBOXIN2(MBOXIN248,1349
#define	MBOXIN3(MBOXIN349,1385
#define G2STAT2(G2STAT250,1421
#define G2INTST_MASK	52,1458
#define	G2INTST_CCBGOOD	53,1510
#define	G2INTST_CCBRETRY	54,1560
#define	G2INTST_HARDFAIL	55,1623
#define	G2INTST_CMDGOOD	56,1684
#define G2INTST_CCBERROR	57,1746
#define	G2INTST_ASNEVENT	58,1807
#define	G2INTST_CMDERROR	59,1875
#define G2STAT_MBXOUT	61,1936
#define	G2STAT_INTPEND	62,1988
#define	G2STAT_BUSY	63,2041
#define G2STAT2_READY	65,2099
#define	MBOXOUT0(MBOXOUT068,2172
#define	MBOXOUT1(MBOXOUT169,2209
#define	MBOXOUT2(MBOXOUT270,2246
#define	MBOXOUT3(MBOXOUT371,2283
#define	ATTN(ATTN72,2320
#define G2CNTRL(G2CNTRL73,2353
#define	ATTN_IMMED	75,2390
#define	ATTN_START	76,2438
#define	ATTN_ABORT	77,2478
#define G2CNTRL_HRST	79,2519
#define G2CNTRL_IRST	80,2563
#define G2CNTRL_HRDY	81,2617
struct aha1740_chain aha1740_chain84,2706
#define any2scsi(any2scsi90,2852
#define scsi2int(scsi2int95,3000
#define xany2scsi(xany2scsi97,3091
#define xscsi2int(xscsi2int103,3234
#define MAX_CDB 106,3366
#define MAX_SENSE 107,3385
#define MAX_STATUS 108,3406
struct ecb ecb110,3429
#define	AHA1740CMD_NOP	147,4784
#define AHA1740CMD_INIT	148,4825
#define AHA1740CMD_DIAG	149,4884
#define AHA1740CMD_SCSI	150,4943
#define AHA1740CMD_SENSE 151,4995
#define AHA1740CMD_DOWN 152,5054
#define AHA1740CMD_RINQ 153,5123
#define AHA1740CMD_TARG 154,5190
#define AHA1740_ECBS 165,5644
#define AHA1740_SCATTER 166,5668
#define AHA1740_CMDLUN 167,5695
	#define NULL 170,5734
extern struct proc_dir_entry proc_scsi_aha1740;173,5758
#define AHA1740 175,5807

drivers/scsi/advansys.c,66440
#define ASC_VERSION 2,65
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION643,28253
#define ASC_CONFIG_PCI700,29814
#define DID_UNDERRUN 708,30052
#define ADVANSYS_ASSERT716,30139
#define ADVANSYS_STATS 728,30454
#define STATIC737,30589
#define STATIC 739,30631
#define ASC_LIB_VERSION_MAJOR 747,30731
#define ASC_LIB_VERSION_MINOR 748,30764
#define ASC_LIB_SERIAL_NUMBER 749,30798
typedef unsigned char uchar;uchar751,30834
#define NULL 754,30877
#define TRUE 757,30918
#define FALSE 760,30960
#define  REG 762,30988
#define rchar 763,31014
#define rshort 764,31040
#define rint 765,31067
#define rlong 766,31094
#define ruchar 767,31121
#define rushort 768,31147
#define ruint 769,31174
#define rulong 770,31201
#define NULLPTR 771,31228
#define FNULLPTR 772,31255
#define EOF 773,31284
#define EOS 774,31306
#define ERR 775,31328
#define UB_ERR 776,31350
#define UW_ERR 777,31381
#define UL_ERR 778,31413
#define iseven_word(iseven_word779,31452
#define isodd_word(isodd_word780,31514
#define toeven_word(toeven_word781,31576
#define biton(biton782,31631
#define bitoff(bitoff783,31702
#define lbiton(lbiton784,31773
#define lbitoff(lbitoff785,31852
#define  absh(absh786,31931
#define  swapbyte(swapbyte787,31982
#define GBYTE 789,32049
#define MBYTE 792,32105
#define KBYTE 795,32159
#define HI_BYTE(HI_BYTE797,32194
#define LO_BYTE(LO_BYTE798,32233
#define HI_WORD(HI_WORD799,32268
#define LO_WORD(LO_WORD800,32308
#define MAKEWORD(MAKEWORD802,32361
#define MAKELONG(MAKELONG805,32458
#define SwapWords(SwapWords807,32539
#define SwapBytes(SwapBytes808,32613
#define BigToLittle(BigToLittle809,32683
#define LittleToBig(LittleToBig810,32796
#define AscPCIConfigVendorIDRegister 811,32847
#define AscPCIConfigDeviceIDRegister 812,32896
#define AscPCIConfigCommandRegister 813,32945
#define AscPCIConfigStatusRegister 814,32994
#define AscPCIConfigRevisionIDRegister 815,33043
#define AscPCIConfigCacheSize 816,33092
#define AscPCIConfigLatencyTimer 817,33141
#define AscPCIIOBaseRegister 818,33190
#define AscPCICmdRegBits_IOMemBusMaster 819,33239
#define ASC_PCI_ID2BUS(ASC_PCI_ID2BUS820,33288
#define ASC_PCI_ID2DEV(ASC_PCI_ID2DEV821,33332
#define ASC_PCI_ID2FUNC(ASC_PCI_ID2FUNC822,33384
#define ASC_PCI_MKID(ASC_PCI_MKID823,33434
#define ASC_PCI_VENDORID 824,33537
#define ASC_PCI_DEVICEID_1200A 825,33586
#define ASC_PCI_DEVICEID_1200B 826,33635
#define ASC_PCI_DEVICEID_ULTRA 827,33684
#define ASC_PCI_REVISION_3150 828,33734
#define ASC_PCI_REVISION_3050 829,33781
#define  ASC_DVCLIB_CALL_DONE 831,33829
#define  ASC_DVCLIB_CALL_FAILED 832,33867
#define  ASC_DVCLIB_CALL_ERROR 833,33905
#define PortAddr 835,33945
#define Ptr2Func 836,34016
#define inp(inp837,34050
#define inpw(inpw838,34088
#define inpl(inpl839,34126
#define outp(outp840,34164
#define outpw(outpw841,34213
#define outpl(outpl842,34262
#define ASC_MAX_SG_QUEUE 843,34311
#define ASC_MAX_SG_LIST 844,34341
#define ASC_CS_TYPE 846,34377
#define asc_ptr_type848,34434
#define ASC_GET_PTR2FUNC(ASC_GET_PTR2FUNC852,34488
#define FLIP_BYTE_NIBBLE(FLIP_BYTE_NIBBLE854,34542
#define ASC_IS_ISA 855,34599
#define ASC_IS_ISAPNP 856,34636
#define ASC_IS_EISA 857,34673
#define ASC_IS_PCI 858,34710
#define ASC_IS_PCI_ULTRA 859,34747
#define ASC_IS_PCMCIA 860,34784
#define ASC_IS_MCA 861,34821
#define ASC_IS_VL 862,34858
#define ASC_ISA_PNP_PORT_ADDR 863,34895
#define ASC_ISA_PNP_PORT_WRITE 864,34934
#define ASC_IS_WIDESCSI_16 865,34995
#define ASC_IS_WIDESCSI_32 866,35032
#define ASC_IS_BIG_ENDIAN 867,35069
#define ASC_CHIP_MIN_VER_VL 868,35106
#define ASC_CHIP_MAX_VER_VL 869,35146
#define ASC_CHIP_MIN_VER_PCI 870,35186
#define ASC_CHIP_MAX_VER_PCI 871,35226
#define ASC_CHIP_VER_PCI_BIT 872,35266
#define ASC_CHIP_MIN_VER_ISA 873,35306
#define ASC_CHIP_MIN_VER_ISA_PNP 874,35346
#define ASC_CHIP_MAX_VER_ISA 875,35386
#define ASC_CHIP_VER_ISA_BIT 876,35426
#define ASC_CHIP_VER_ISAPNP_BIT 877,35466
#define ASC_CHIP_VER_ASYN_BUG 878,35506
#define ASC_CHIP_VER_PCI 879,35546
#define ASC_CHIP_VER_PCI_ULTRA_3150 880,35588
#define ASC_CHIP_VER_PCI_ULTRA_3050 881,35651
#define ASC_CHIP_MIN_VER_EISA 882,35714
#define ASC_CHIP_MAX_VER_EISA 883,35751
#define ASC_CHIP_VER_EISA_BIT 884,35788
#define ASC_CHIP_LATEST_VER_EISA 885,35825
#define ASC_MAX_LIB_SUPPORTED_ISA_CHIP_VER 886,35894
#define ASC_MAX_LIB_SUPPORTED_PCI_CHIP_VER 887,35944
#define ASC_MAX_VL_DMA_ADDR 888,35994
#define ASC_MAX_VL_DMA_COUNT 889,36040
#define ASC_MAX_PCI_DMA_ADDR 890,36086
#define ASC_MAX_PCI_DMA_COUNT 891,36132
#define ASC_MAX_ISA_DMA_ADDR 892,36178
#define ASC_MAX_ISA_DMA_COUNT 893,36224
#define ASC_MAX_EISA_DMA_ADDR 894,36270
#define ASC_MAX_EISA_DMA_COUNT 895,36316
#define inpw_noswap(inpw_noswap897,36382
#define outpw_noswap(outpw_noswap900,36455
#define ASC_SCSI_ID_BITS 902,36514
#define ASC_SCSI_TIX_TYPE 903,36542
#define ASC_ALL_DEVICE_BIT_SET 904,36578
#define ASC_SCSI_ID_BITS 907,36663
#define ASC_ALL_DEVICE_BIT_SET 908,36691
#define ASC_SCSI_ID_BITS 912,36785
#define ASC_ALL_DEVICE_BIT_SET 913,36813
#define ASC_SCSI_BIT_ID_TYPE 916,36890
#define ASC_MAX_TID 917,36926
#define ASC_MAX_LUN 918,36954
#define ASC_SCSI_WIDTH_BIT_SET 919,36982
#define ASC_SCSI_BIT_ID_TYPE 921,37047
#define ASC_MAX_TID 922,37085
#define ASC_MAX_LUN 923,37116
#define ASC_SCSI_WIDTH_BIT_SET 924,37146
#define ASC_SCSI_BIT_ID_TYPE 926,37213
#define ASC_MAX_TID 927,37251
#define ASC_MAX_LUN 928,37282
#define ASC_SCSI_WIDTH_BIT_SET 929,37312
#define ASC_MAX_SENSE_LEN 933,37413
#define ASC_MIN_SENSE_LEN 934,37444
#define ASC_MAX_CDB_LEN 935,37475
#define ASC_SCSI_RESET_HOLD_TIME_US 936,37506
#define SCSICMD_TestUnitReady 937,37546
#define SCSICMD_Rewind 938,37585
#define SCSICMD_Rezero 939,37624
#define SCSICMD_RequestSense 940,37663
#define SCSICMD_Format 941,37702
#define SCSICMD_FormatUnit 942,37741
#define SCSICMD_Read6 943,37780
#define SCSICMD_Write6 944,37819
#define SCSICMD_Seek6 945,37858
#define SCSICMD_Inquiry 946,37897
#define SCSICMD_Verify6 947,37936
#define SCSICMD_ModeSelect6 948,37975
#define SCSICMD_ModeSense6 949,38014
#define SCSICMD_StartStopUnit 950,38053
#define SCSICMD_LoadUnloadTape 951,38092
#define SCSICMD_ReadCapacity 952,38131
#define SCSICMD_Read10 953,38170
#define SCSICMD_Write10 954,38209
#define SCSICMD_Seek10 955,38248
#define SCSICMD_Erase10 956,38287
#define SCSICMD_WriteAndVerify10 957,38326
#define SCSICMD_Verify10 958,38365
#define SCSICMD_WriteBuffer 959,38404
#define SCSICMD_ReadBuffer 960,38443
#define SCSICMD_ReadLong 961,38482
#define SCSICMD_WriteLong 962,38521
#define SCSICMD_ReadTOC 963,38560
#define SCSICMD_ReadHeader 964,38599
#define SCSICMD_ModeSelect10 965,38638
#define SCSICMD_ModeSense10 966,38677
#define SCSI_TYPE_DASD 967,38716
#define SCSI_TYPE_SASD 968,38748
#define SCSI_TYPE_PRN 969,38780
#define SCSI_TYPE_PROC 970,38812
#define SCSI_TYPE_WORM 971,38844
#define SCSI_TYPE_CDROM 972,38876
#define SCSI_TYPE_SCANNER 973,38908
#define SCSI_TYPE_OPTMEM 974,38940
#define SCSI_TYPE_MED_CHG 975,38972
#define SCSI_TYPE_COMM 976,39004
#define SCSI_TYPE_UNKNOWN 977,39036
#define SCSI_TYPE_NO_DVC 978,39068
#define ASC_SCSIDIR_NOCHK 979,39100
#define ASC_SCSIDIR_T2H 980,39134
#define ASC_SCSIDIR_H2T 981,39168
#define ASC_SCSIDIR_NODATA 982,39202
#define SCSI_SENKEY_NO_SENSE 983,39236
#define SCSI_SENKEY_UNDEFINED 984,39275
#define SCSI_SENKEY_NOT_READY 985,39314
#define SCSI_SENKEY_MEDIUM_ERR 986,39353
#define SCSI_SENKEY_HW_ERR 987,39392
#define SCSI_SENKEY_ILLEGAL 988,39431
#define SCSI_SENKEY_ATTENTION 989,39470
#define SCSI_SENKEY_PROTECTED 990,39509
#define SCSI_SENKEY_BLANK 991,39548
#define SCSI_SENKEY_V_UNIQUE 992,39587
#define SCSI_SENKEY_CPY_ABORT 993,39626
#define SCSI_SENKEY_ABORT 994,39665
#define SCSI_SENKEY_EQUAL 995,39704
#define SCSI_SENKEY_VOL_OVERFLOW 996,39743
#define SCSI_SENKEY_MISCOMP 997,39782
#define SCSI_SENKEY_RESERVED 998,39821
#define SCSI_ASC_NOMEDIA 999,39860
#define ASC_SRB_HOST(ASC_SRB_HOST1000,39899
#define ASC_SRB_TID(ASC_SRB_TID1001,39951
#define ASC_SRB_LUN(ASC_SRB_LUN1002,40012
#define PUT_CDB1(PUT_CDB11003,40064
#define SS_GOOD 1004,40112
#define SS_CHK_CONDITION 1005,40146
#define SS_CONDITION_MET 1006,40180
#define SS_TARGET_BUSY 1007,40214
#define SS_INTERMID 1008,40248
#define SS_INTERMID_COND_MET 1009,40282
#define SS_RSERV_CONFLICT 1010,40316
#define SS_CMD_TERMINATED 1011,40350
#define SS_QUEUE_FULL 1012,40384
#define MS_CMD_DONE 1013,40418
#define MS_EXTEND 1014,40446
#define MS_SDTR_LEN 1015,40474
#define MS_SDTR_CODE 1016,40502
#define MS_WDTR_LEN 1017,40530
#define MS_WDTR_CODE 1018,40558
#define MS_MDP_LEN 1019,40586
#define MS_MDP_CODE 1020,40613
#define M1_SAVE_DATA_PTR 1021,40640
#define M1_RESTORE_PTRS 1022,40677
#define M1_DISCONNECT 1023,40714
#define M1_INIT_DETECTED_ERR 1024,40751
#define M1_ABORT 1025,40788
#define M1_MSG_REJECT 1026,40825
#define M1_NO_OP 1027,40862
#define M1_MSG_PARITY_ERR 1028,40899
#define M1_LINK_CMD_DONE 1029,40936
#define M1_LINK_CMD_DONE_WFLAG 1030,40973
#define M1_BUS_DVC_RESET 1031,41010
#define M1_ABORT_TAG 1032,41047
#define M1_CLR_QUEUE 1033,41084
#define M1_INIT_RECOVERY 1034,41121
#define M1_RELEASE_RECOVERY 1035,41158
#define M1_KILL_IO_PROC 1036,41195
#define M2_QTAG_MSG_SIMPLE 1037,41232
#define M2_QTAG_MSG_HEAD 1038,41269
#define M2_QTAG_MSG_ORDERED 1039,41306
#define M2_IGNORE_WIDE_RESIDUE 1040,41343
} ASC_SCSI_INQ0;ASC_SCSI_INQ01045,41481
} ASC_SCSI_INQ1;ASC_SCSI_INQ11050,41592
} ASC_SCSI_INQ2;ASC_SCSI_INQ21056,41738
} ASC_SCSI_INQ3;ASC_SCSI_INQ31063,41910
} ASC_SCSI_INQ7;ASC_SCSI_INQ71074,42216
} ASC_SCSI_INQUIRY;ASC_SCSI_INQUIRY1088,42623
typedef struct asc_req_sense asc_req_sense1090,42644
} ASC_REQ_SENSE;ASC_REQ_SENSE1111,43396
#define ASC_SG_LIST_PER_Q 1113,43414
#define QS_FREE 1114,43444
#define QS_READY 1115,43472
#define QS_DISC1 1116,43500
#define QS_DISC2 1117,43528
#define QS_BUSY 1118,43556
#define QS_ABORTED 1119,43584
#define QS_DONE 1120,43612
#define QC_NO_CALLBACK 1121,43640
#define QC_SG_SWAP_QUEUE 1122,43670
#define QC_SG_HEAD 1123,43700
#define QC_DATA_IN 1124,43730
#define QC_DATA_OUT 1125,43760
#define QC_URGENT 1126,43790
#define QC_MSG_OUT 1127,43820
#define QC_REQ_SENSE 1128,43850
#define QCSG_SG_XFER_LIST 1129,43880
#define QCSG_SG_XFER_MORE 1130,43912
#define QCSG_SG_XFER_END 1131,43944
#define QD_IN_PROGRESS 1132,43976
#define QD_NO_ERROR 1133,44010
#define QD_ABORTED_BY_HOST 1134,44044
#define QD_WITH_ERROR 1135,44078
#define QD_INVALID_REQUEST 1136,44112
#define QD_INVALID_HOST_NUM 1137,44146
#define QD_INVALID_DEVICE 1138,44180
#define QD_ERR_INTERNAL 1139,44214
#define QHSTA_NO_ERROR 1140,44248
#define QHSTA_M_SEL_TIMEOUT 1141,44290
#define QHSTA_M_DATA_OVER_RUN 1142,44332
#define QHSTA_M_DATA_UNDER_RUN 1143,44374
#define QHSTA_M_UNEXPECTED_BUS_FREE 1144,44416
#define QHSTA_M_BAD_BUS_PHASE_SEQ 1145,44458
#define QHSTA_D_QDONE_SG_LIST_CORRUPTED 1146,44500
#define QHSTA_D_ASC_DVC_ERROR_CODE_SET 1147,44545
#define QHSTA_D_HOST_ABORT_FAILED 1148,44590
#define QHSTA_D_EXE_SCSI_Q_FAILED 1149,44635
#define QHSTA_D_EXE_SCSI_Q_BUSY_TIMEOUT 1150,44680
#define QHSTA_D_ASPI_NO_BUF_POOL 1151,44725
#define QHSTA_M_WTM_TIMEOUT 1152,44770
#define QHSTA_M_BAD_CMPL_STATUS_IN 1153,44811
#define QHSTA_M_NO_AUTO_REQ_SENSE 1154,44852
#define QHSTA_M_AUTO_REQ_SENSE_FAIL 1155,44893
#define QHSTA_M_TARGET_STATUS_BUSY 1156,44934
#define QHSTA_M_BAD_TAG_CODE 1157,44975
#define QHSTA_M_BAD_QUEUE_FULL_OR_BUSY 1158,45016
#define QHSTA_M_HUNG_REQ_SCSI_BUS_RESET 1159,45061
#define QHSTA_D_LRAM_CMP_ERROR 1160,45106
#define QHSTA_M_MICRO_CODE_ERROR_HALT 1161,45149
#define ASC_FLAG_SCSIQ_REQ 1162,45192
#define ASC_FLAG_BIOS_SCSIQ_REQ 1163,45231
#define ASC_FLAG_BIOS_ASYNC_IO 1164,45270
#define ASC_FLAG_SRB_LINEAR_ADDR 1165,45309
#define ASC_FLAG_WIN16 1166,45348
#define ASC_FLAG_WIN32 1167,45387
#define ASC_FLAG_ISA_OVER_16MB 1168,45426
#define ASC_FLAG_DOS_VM_CALLBACK 1169,45465
#define ASC_TAG_FLAG_EXTRA_BYTES 1170,45504
#define ASC_TAG_FLAG_DISABLE_DISCONNECT 1171,45556
#define ASC_TAG_FLAG_DISABLE_ASYN_USE_SYN_FIX 1172,45608
#define ASC_TAG_FLAG_DISABLE_CHK_COND_INT_HOST 1173,45660
#define ASC_SCSIQ_CPY_BEG 1174,45712
#define ASC_SCSIQ_SGHD_CPY_BEG 1175,45753
#define ASC_SCSIQ_B_FWD 1176,45794
#define ASC_SCSIQ_B_BWD 1177,45835
#define ASC_SCSIQ_B_STATUS 1178,45876
#define ASC_SCSIQ_B_QNO 1179,45917
#define ASC_SCSIQ_B_CNTL 1180,45958
#define ASC_SCSIQ_B_SG_QUEUE_CNT 1181,45999
#define ASC_SCSIQ_D_DATA_ADDR 1182,46040
#define ASC_SCSIQ_D_DATA_CNT 1183,46081
#define ASC_SCSIQ_B_SENSE_LEN 1184,46122
#define ASC_SCSIQ_DONE_INFO_BEG 1185,46163
#define ASC_SCSIQ_D_SRBPTR 1186,46204
#define ASC_SCSIQ_B_TARGET_IX 1187,46245
#define ASC_SCSIQ_B_CDB_LEN 1188,46286
#define ASC_SCSIQ_B_TAG_CODE 1189,46327
#define ASC_SCSIQ_W_VM_ID 1190,46368
#define ASC_SCSIQ_DONE_STATUS 1191,46409
#define ASC_SCSIQ_HOST_STATUS 1192,46450
#define ASC_SCSIQ_SCSI_STATUS 1193,46491
#define ASC_SCSIQ_CDB_BEG 1194,46532
#define ASC_SCSIQ_DW_REMAIN_XFER_ADDR 1195,46573
#define ASC_SCSIQ_DW_REMAIN_XFER_CNT 1196,46614
#define ASC_SCSIQ_B_SG_WK_QP 1197,46655
#define ASC_SCSIQ_B_SG_WK_IX 1198,46696
#define ASC_SCSIQ_W_REQ_COUNT 1199,46737
#define ASC_SCSIQ_B_LIST_CNT 1200,46778
#define ASC_SCSIQ_B_CUR_LIST_CNT 1201,46818
#define ASC_SGQ_B_SG_CNTL 1202,46858
#define ASC_SGQ_B_SG_HEAD_QP 1203,46898
#define ASC_SGQ_B_SG_LIST_CNT 1204,46938
#define ASC_SGQ_B_SG_CUR_LIST_CNT 1205,46978
#define ASC_SGQ_LIST_BEG 1206,47018
#define ASC_DEF_SCSI1_QNG 1207,47058
#define ASC_MAX_SCSI1_QNG 1208,47089
#define ASC_DEF_SCSI2_QNG 1209,47120
#define ASC_MAX_SCSI2_QNG 1210,47152
#define ASC_TAG_CODE_MASK 1211,47184
#define ASC_STOP_REQ_RISC_STOP 1212,47218
#define ASC_STOP_ACK_RISC_STOP 1213,47259
#define ASC_STOP_CLEAN_UP_BUSY_Q 1214,47300
#define ASC_STOP_CLEAN_UP_DISC_Q 1215,47341
#define ASC_STOP_HOST_REQ_RISC_HALT 1216,47382
#define ASC_TIDLUN_TO_IX(ASC_TIDLUN_TO_IX1217,47423
#define ASC_TID_TO_TARGET_ID(ASC_TID_TO_TARGET_ID1218,47514
#define ASC_TIX_TO_TARGET_ID(ASC_TIX_TO_TARGET_ID1219,47588
#define ASC_TIX_TO_TID(ASC_TIX_TO_TID1220,47656
#define ASC_TID_TO_TIX(ASC_TID_TO_TIX1221,47714
#define ASC_TIX_TO_LUN(ASC_TIX_TO_LUN1222,47772
#define ASC_QNO_TO_QADDR(ASC_QNO_TO_QADDR1223,47852
typedef struct asc_scisq_1 asc_scisq_11225,47925
} ASC_SCSIQ_1;ASC_SCSIQ_11237,48332
typedef struct asc_scisq_2 asc_scisq_21239,48348
} ASC_SCSIQ_2;ASC_SCSIQ_21246,48573
typedef struct asc_scsiq_3 asc_scsiq_31248,48589
} ASC_SCSIQ_3;ASC_SCSIQ_31253,48757
typedef struct asc_scsiq_4 asc_scsiq_41255,48773
} ASC_SCSIQ_4;ASC_SCSIQ_41265,49168
typedef struct asc_q_done_info asc_q_done_info1267,49184
} ASC_QDONE_INFO;ASC_QDONE_INFO1277,49506
typedef struct asc_sg_list asc_sg_list1279,49525
} ASC_SG_LIST;ASC_SG_LIST1282,49615
typedef struct asc_sg_head asc_sg_head1284,49631
} ASC_SG_HEAD;ASC_SG_HEAD1290,49848
#define ASC_MIN_SG_LIST 1292,49864
typedef struct asc_min_sg_head asc_min_sg_head1294,49893
} ASC_MIN_SG_HEAD;ASC_MIN_SG_HEAD1300,50114
#define QCX_SORT 1302,50134
#define QCX_COALEASE 1303,50167
typedef struct asc_scsi_q asc_scsi_q1305,50201
} ASC_SCSI_Q;ASC_SCSI_Q1310,50352
typedef struct asc_scsi_req_q asc_scsi_req_q1312,50367
} ASC_SCSI_REQ_Q;ASC_SCSI_REQ_Q1321,50666
typedef struct asc_scsi_bios_req_q asc_scsi_bios_req_q1323,50685
} ASC_SCSI_BIOS_REQ_Q;ASC_SCSI_BIOS_REQ_Q1332,51005
typedef struct asc_risc_q asc_risc_q1334,51029
} ASC_RISC_Q;ASC_RISC_Q1341,51227
typedef struct asc_sg_list_q asc_sg_list_q1343,51242
} ASC_SG_LIST_Q;ASC_SG_LIST_Q1350,51479
typedef struct asc_risc_sg_list_q asc_risc_sg_list_q1352,51497
} ASC_RISC_SG_LIST_Q;ASC_RISC_SG_LIST_Q1357,51655
#define ASC_EXE_SCSI_IO_MAX_IDLE_LOOP 1359,51678
#define ASC_EXE_SCSI_IO_MAX_WAIT_LOOP 1360,51729
#define ASCQ_ERR_NO_ERROR 1361,51773
#define ASCQ_ERR_IO_NOT_FOUND 1362,51813
#define ASCQ_ERR_LOCAL_MEM 1363,51853
#define ASCQ_ERR_CHKSUM 1364,51893
#define ASCQ_ERR_START_CHIP 1365,51933
#define ASCQ_ERR_INT_TARGET_ID 1366,51973
#define ASCQ_ERR_INT_LOCAL_MEM 1367,52013
#define ASCQ_ERR_HALT_RISC 1368,52053
#define ASCQ_ERR_GET_ASPI_ENTRY 1369,52093
#define ASCQ_ERR_CLOSE_ASPI 1370,52133
#define ASCQ_ERR_HOST_INQUIRY 1371,52173
#define ASCQ_ERR_SAVED_SRB_BAD 1372,52216
#define ASCQ_ERR_QCNTL_SG_LIST 1373,52259
#define ASCQ_ERR_Q_STATUS 1374,52302
#define ASCQ_ERR_WR_SCSIQ 1375,52345
#define ASCQ_ERR_PC_ADDR 1376,52388
#define ASCQ_ERR_SYN_OFFSET 1377,52431
#define ASCQ_ERR_SYN_XFER_TIME 1378,52474
#define ASCQ_ERR_LOCK_DMA 1379,52517
#define ASCQ_ERR_UNLOCK_DMA 1380,52560
#define ASCQ_ERR_VDS_CHK_INSTALL 1381,52603
#define ASCQ_ERR_MICRO_CODE_HALT 1382,52646
#define ASCQ_ERR_SET_LRAM_ADDR 1383,52689
#define ASCQ_ERR_CUR_QNG 1384,52732
#define ASCQ_ERR_SG_Q_LINKS 1385,52775
#define ASCQ_ERR_SCSIQ_PTR 1386,52818
#define ASCQ_ERR_ISR_RE_ENTRY 1387,52861
#define ASCQ_ERR_CRITICAL_RE_ENTRY 1388,52904
#define ASCQ_ERR_ISR_ON_CRITICAL 1389,52947
#define ASCQ_ERR_SG_LIST_ODD_ADDRESS 1390,52990
#define ASCQ_ERR_XFER_ADDRESS_TOO_BIG 1391,53033
#define ASCQ_ERR_SCSIQ_NULL_PTR 1392,53076
#define ASCQ_ERR_SCSIQ_BAD_NEXT_PTR 1393,53119
#define ASCQ_ERR_GET_NUM_OF_FREE_Q 1394,53162
#define ASCQ_ERR_SEND_SCSI_Q 1395,53205
#define ASCQ_ERR_HOST_REQ_RISC_HALT 1396,53248
#define ASCQ_ERR_RESET_SDTR 1397,53291
#define ASC_WARN_NO_ERROR 1398,53334
#define ASC_WARN_IO_PORT_ROTATE 1399,53379
#define ASC_WARN_EEPROM_CHKSUM 1400,53424
#define ASC_WARN_IRQ_MODIFIED 1401,53469
#define ASC_WARN_AUTO_CONFIG 1402,53514
#define ASC_WARN_CMD_QNG_CONFLICT 1403,53559
#define ASC_WARN_EEPROM_RECOVER 1404,53604
#define ASC_WARN_CFG_MSW_RECOVER 1405,53649
#define ASC_WARN_SET_PCI_CONFIG_SPACE 1406,53694
#define ASC_IERR_WRITE_EEPROM 1407,53739
#define ASC_IERR_MCODE_CHKSUM 1408,53784
#define ASC_IERR_SET_PC_ADDR 1409,53829
#define ASC_IERR_START_STOP_CHIP 1410,53874
#define ASC_IERR_IRQ_NO 1411,53919
#define ASC_IERR_SET_IRQ_NO 1412,53964
#define ASC_IERR_CHIP_VERSION 1413,54009
#define ASC_IERR_SET_SCSI_ID 1414,54054
#define ASC_IERR_GET_PHY_ADDR 1415,54099
#define ASC_IERR_BAD_SIGNATURE 1416,54144
#define ASC_IERR_NO_BUS_TYPE 1417,54189
#define ASC_IERR_SCAM 1418,54234
#define ASC_IERR_SET_SDTR 1419,54279
#define ASC_IERR_RW_LRAM 1420,54324
#define ASC_DEF_IRQ_NO 1421,54369
#define ASC_MAX_IRQ_NO 1422,54396
#define ASC_MIN_IRQ_NO 1423,54423
#define ASC_MIN_REMAIN_Q 1424,54450
#define ASC_DEF_MAX_TOTAL_QNG 1425,54489
#define ASC_MIN_TAG_Q_PER_DVC 1426,54528
#define ASC_DEF_TAG_Q_PER_DVC 1427,54567
#define ASC_MIN_FREE_Q 1428,54606
#define ASC_MIN_TOTAL_QNG 1429,54653
#define ASC_MAX_TOTAL_QNG 1430,54721
#define ASC_MAX_PCI_ULTRA_INRAM_TOTAL_QNG 1431,54751
#define ASC_MAX_PCI_ULTRA_INRAM_TAG_QNG 1432,54796
#define ASC_MAX_PCI_INRAM_TOTAL_QNG 1433,54840
#define ASC_MAX_INRAM_TAG_QNG 1434,54880
#define ASC_IOADR_TABLE_MAX_IX 1435,54915
#define ASC_IOADR_GAP 1436,54950
#define ASC_SEARCH_IOP_GAP 1437,54979
#define ASC_MIN_IOP_ADDR 1438,55011
#define ASC_MAX_IOP_ADDR 1439,55055
#define ASC_IOADR_1 1440,55098
#define ASC_IOADR_2 1441,55139
#define ASC_IOADR_3 1442,55180
#define ASC_IOADR_4 1443,55221
#define ASC_IOADR_5 1444,55262
#define ASC_IOADR_6 1445,55303
#define ASC_IOADR_7 1446,55344
#define ASC_IOADR_8 1447,55385
#define ASC_IOADR_DEF 1448,55426
#define ASC_LIB_SCSIQ_WK_SP 1449,55462
#define ASC_MAX_SYN_XFER_NO 1450,55501
#define ASC_SYN_MAX_OFFSET 1451,55539
#define ASC_DEF_SDTR_OFFSET 1452,55579
#define ASC_DEF_SDTR_INDEX 1453,55619
#define ASC_SDTR_ULTRA_PCI_10MB_INDEX 1454,55659
#define SYN_XFER_NS_0 1455,55703
#define SYN_XFER_NS_1 1456,55729
#define SYN_XFER_NS_2 1457,55755
#define SYN_XFER_NS_3 1458,55781
#define SYN_XFER_NS_4 1459,55807
#define SYN_XFER_NS_5 1460,55833
#define SYN_XFER_NS_6 1461,55859
#define SYN_XFER_NS_7 1462,55885
#define SYN_ULTRA_XFER_NS_0 1463,55911
#define SYN_ULTRA_XFER_NS_1 1464,55945
#define SYN_ULTRA_XFER_NS_2 1465,55979
#define SYN_ULTRA_XFER_NS_3 1466,56013
#define SYN_ULTRA_XFER_NS_4 1467,56047
#define SYN_ULTRA_XFER_NS_5 1468,56081
#define SYN_ULTRA_XFER_NS_6 1469,56115
#define SYN_ULTRA_XFER_NS_7 1470,56149
#define SYN_ULTRA_XFER_NS_8 1471,56183
#define SYN_ULTRA_XFER_NS_9 1472,56217
#define SYN_ULTRA_XFER_NS_10 1473,56251
#define SYN_ULTRA_XFER_NS_11 1474,56285
#define SYN_ULTRA_XFER_NS_12 1475,56319
#define SYN_ULTRA_XFER_NS_13 1476,56353
#define SYN_ULTRA_XFER_NS_14 1477,56387
#define SYN_ULTRA_XFER_NS_15 1478,56421
typedef struct ext_msg ext_msg1480,56456
} EXT_MSG;EXT_MSG1500,57044
#define xfer_period 1502,57056
#define req_ack_offset 1503,57112
#define wdtr_width 1504,57171
#define mdp_b3 1505,57221
#define mdp_b2 1506,57262
#define mdp_b1 1507,57303
#define mdp_b0 1508,57344
typedef struct asc_dvc_cfg asc_dvc_cfg1510,57386
} ASC_DVC_CFG;ASC_DVC_CFG1529,58157
#define ASC_DEF_DVC_CNTL 1531,58173
#define ASC_DEF_CHIP_SCSI_ID 1532,58211
#define ASC_DEF_ISA_DMA_SPEED 1533,58244
#define ASC_INIT_STATE_NULL 1534,58277
#define ASC_INIT_STATE_BEG_GET_CFG 1535,58321
#define ASC_INIT_STATE_END_GET_CFG 1536,58365
#define ASC_INIT_STATE_BEG_SET_CFG 1537,58409
#define ASC_INIT_STATE_END_SET_CFG 1538,58453
#define ASC_INIT_STATE_BEG_LOAD_MC 1539,58497
#define ASC_INIT_STATE_END_LOAD_MC 1540,58541
#define ASC_INIT_STATE_BEG_INQUIRY 1541,58585
#define ASC_INIT_STATE_END_INQUIRY 1542,58629
#define ASC_INIT_RESET_SCSI_DONE 1543,58673
#define ASC_INIT_STATE_WITHOUT_EEP 1544,58717
#define ASC_PCI_DEVICE_ID_REV_A 1545,58761
#define ASC_PCI_DEVICE_ID_REV_B 1546,58805
#define ASC_BUG_FIX_IF_NOT_DWB 1547,58849
#define ASC_BUG_FIX_ASYN_USE_SYN 1548,58893
#define ASYN_SDTR_DATA_FIX_PCI_REV_AB 1549,58937
#define ASC_MIN_TAGGED_CMD 1550,58980
#define ASC_MAX_SCSI_RESET_WAIT 1551,59010
typedef struct asc_dvc_var asc_dvc_var1553,59051
} ASC_DVC_VAR;ASC_DVC_VAR1596,60742
typedef int (* ASC_ISR_CALLBACK)ASC_ISR_CALLBACK1598,60758
typedef int (* ASC_EXE_CALLBACK)ASC_EXE_CALLBACK1599,60839
typedef struct asc_dvc_inq_info asc_dvc_inq_info1601,60917
} ASC_DVC_INQ_INFO;ASC_DVC_INQ_INFO1603,61015
typedef struct asc_cap_info asc_cap_info1605,61036
} ASC_CAP_INFO;ASC_CAP_INFO1608,61129
typedef struct asc_cap_info_array asc_cap_info_array1610,61146
} ASC_CAP_INFO_ARRAY;ASC_CAP_INFO_ARRAY1612,61250
#define ASC_MCNTL_NO_SEL_TIMEOUT 1614,61273
#define ASC_MCNTL_NULL_TARGET 1615,61322
#define ASC_CNTL_INITIATOR 1616,61371
#define ASC_CNTL_BIOS_GT_1GB 1617,61421
#define ASC_CNTL_BIOS_GT_2_DISK 1618,61471
#define ASC_CNTL_BIOS_REMOVABLE 1619,61521
#define ASC_CNTL_NO_SCAM 1620,61571
#define ASC_CNTL_INT_MULTI_Q 1621,61621
#define ASC_CNTL_NO_LUN_SUPPORT 1622,61671
#define ASC_CNTL_NO_VERIFY_COPY 1623,61721
#define ASC_CNTL_RESET_SCSI 1624,61771
#define ASC_CNTL_INIT_INQUIRY 1625,61821
#define ASC_CNTL_INIT_VERBOSE 1626,61871
#define ASC_CNTL_SCSI_PARITY 1627,61921
#define ASC_CNTL_BURST_MODE 1628,61971
#define ASC_CNTL_SDTR_ENABLE_ULTRA 1629,62021
#define ASC_EEP_DVC_CFG_BEG_VL 1630,62071
#define ASC_EEP_MAX_DVC_ADDR_VL 1631,62107
#define ASC_EEP_DVC_CFG_BEG 1632,62144
#define ASC_EEP_MAX_DVC_ADDR 1633,62180
#define ASC_EEP_DEFINED_WORDS 1634,62216
#define ASC_EEP_MAX_ADDR 1635,62252
#define ASC_EEP_RES_WORDS 1636,62288
#define ASC_EEP_MAX_RETRY 1637,62324
#define ASC_MAX_INIT_BUSY_RETRY 1638,62360
#define ASC_EEP_ISA_PNP_WSIZE 1639,62396
typedef struct asceep_config asceep_config1641,62433
} ASCEEP_CONFIG;ASCEEP_CONFIG1659,63101
#define ASC_PCI_CFG_LSW_SCSI_PARITY 1661,63119
#define ASC_PCI_CFG_LSW_BURST_MODE 1662,63163
#define ASC_PCI_CFG_LSW_INTR_ABLE 1663,63207
#define ASC_EEP_CMD_READ 1665,63252
#define ASC_EEP_CMD_WRITE 1666,63291
#define ASC_EEP_CMD_WRITE_ABLE 1667,63330
#define ASC_EEP_CMD_WRITE_DISABLE 1668,63369
#define ASC_OVERRUN_BSIZE 1669,63408
#define ASC_CTRL_BREAK_ONCE 1670,63448
#define ASC_CTRL_BREAK_STAY_IDLE 1671,63490
#define ASCV_MSGOUT_BEG 1672,63532
#define ASCV_MSGOUT_SDTR_PERIOD 1673,63571
#define ASCV_MSGOUT_SDTR_OFFSET 1674,63623
#define ASCV_BREAK_SAVED_CODE 1675,63675
#define ASCV_MSGIN_BEG 1676,63722
#define ASCV_MSGIN_SDTR_PERIOD 1677,63774
#define ASCV_MSGIN_SDTR_OFFSET 1678,63825
#define ASCV_SDTR_DATA_BEG 1679,63876
#define ASCV_SDTR_DONE_BEG 1680,63927
#define ASCV_MAX_DVC_QNG_BEG 1681,63982
#define ASCV_BREAK_ADDR 1682,64029
#define ASCV_BREAK_NOTIFY_COUNT 1683,64078
#define ASCV_BREAK_CONTROL 1684,64127
#define ASCV_BREAK_HIT_COUNT 1685,64176
#define ASCV_ASCDVC_ERR_CODE_W 1687,64226
#define ASCV_MCODE_CHKSUM_W 1688,64273
#define ASCV_MCODE_SIZE_W 1689,64318
#define ASCV_STOP_CODE_B 1690,64363
#define ASCV_DVC_ERR_CODE_B 1691,64408
#define ASCV_OVERRUN_PADDR_D 1692,64453
#define ASCV_OVERRUN_BSIZE_D 1693,64498
#define ASCV_HALTCODE_W 1694,64543
#define ASCV_CHKSUM_W 1695,64588
#define ASCV_MC_DATE_W 1696,64633
#define ASCV_MC_VER_W 1697,64678
#define ASCV_NEXTRDY_B 1698,64723
#define ASCV_DONENEXT_B 1699,64768
#define ASCV_USE_TAGGED_QNG_B 1700,64813
#define ASCV_SCSIBUSY_B 1701,64858
#define ASCV_Q_DONE_IN_PROGRESS_B 1702,64903
#define ASCV_CURCDB_B 1703,64953
#define ASCV_RCLUN_B 1704,64998
#define ASCV_BUSY_QHEAD_B 1705,65043
#define ASCV_DISC1_QHEAD_B 1706,65088
#define ASCV_DISC_ENABLE_B 1707,65133
#define ASCV_CAN_TAGGED_QNG_B 1708,65178
#define ASCV_HOSTSCSI_ID_B 1709,65223
#define ASCV_MCODE_CNTL_B 1710,65268
#define ASCV_NULL_TARGET_B 1711,65313
#define ASCV_FREE_Q_HEAD_W 1712,65358
#define ASCV_DONE_Q_TAIL_W 1713,65403
#define ASCV_FREE_Q_HEAD_B 1714,65448
#define ASCV_DONE_Q_TAIL_B 1715,65509
#define ASCV_HOST_FLAG_B 1716,65570
#define ASCV_TOTAL_READY_Q_B 1717,65615
#define ASCV_VER_SERIAL_B 1718,65660
#define ASCV_HALTCODE_SAVED_W 1719,65705
#define ASCV_WTM_FLAG_B 1720,65750
#define ASCV_RISC_FLAG_B 1721,65795
#define ASCV_REQ_SG_LIST_QP 1722,65840
#define ASC_HOST_FLAG_IN_ISR 1723,65885
#define ASC_HOST_FLAG_ACK_INT 1724,65926
#define ASC_RISC_FLAG_GEN_INT 1725,65967
#define ASC_RISC_FLAG_REQ_SG_LIST 1726,66007
#define IOP_CTRL 1727,66047
#define IOP_STATUS 1728,66079
#define IOP_INT_ACK 1729,66111
#define IOP_REG_IFC 1730,66147
#define IOP_SYN_OFFSET 1731,66179
#define IOP_EXTRA_CONTROL 1732,66212
#define IOP_REG_PC 1733,66245
#define IOP_RAM_ADDR 1734,66278
#define IOP_RAM_DATA 1735,66311
#define IOP_EEP_DATA 1736,66344
#define IOP_EEP_CMD 1737,66377
#define IOP_VERSION 1738,66410
#define IOP_CONFIG_HIGH 1739,66443
#define IOP_CONFIG_LOW 1740,66476
#define IOP_SIG_BYTE 1741,66509
#define IOP_SIG_WORD 1742,66542
#define IOP_REG_DC1 1743,66575
#define IOP_REG_DC0 1744,66607
#define IOP_REG_SB 1745,66639
#define IOP_REG_DA1 1746,66671
#define IOP_REG_DA0 1747,66703
#define IOP_REG_SC 1748,66735
#define IOP_DMA_SPEED 1749,66767
#define IOP_REG_FLAG 1750,66799
#define IOP_FIFO_H 1751,66831
#define IOP_FIFO_L 1752,66863
#define IOP_REG_ID 1753,66895
#define IOP_REG_QP 1754,66927
#define IOP_REG_IH 1755,66959
#define IOP_REG_IX 1756,66991
#define IOP_REG_AX 1757,67023
#define IFC_REG_LOCK 1758,67055
#define IFC_REG_UNLOCK 1759,67088
#define IFC_WR_EN_FILTER 1760,67121
#define IFC_RD_NO_EEPROM 1761,67154
#define IFC_SLEW_RATE 1762,67187
#define IFC_ACT_NEG 1763,67220
#define IFC_INP_FILTER 1764,67253
#define IFC_INIT_DEFAULT 1765,67286
#define SC_SEL 1766,67343
#define SC_BSY 1767,67374
#define SC_ACK 1768,67405
#define SC_REQ 1769,67436
#define SC_ATN 1770,67467
#define SC_IO 1771,67498
#define SC_CD 1772,67529
#define SC_MSG 1773,67560
#define SEC_SCSI_CTL 1774,67591
#define SEC_ACTIVE_NEGATE 1775,67634
#define SEC_SLEW_RATE 1776,67677
#define SEC_ENABLE_FILTER 1777,67720
#define ASC_HALT_EXTMSG_IN 1778,67763
#define ASC_HALT_CHK_CONDITION 1779,67809
#define ASC_HALT_SS_QUEUE_FULL 1780,67855
#define ASC_HALT_DISABLE_ASYN_USE_SYN_FIX 1781,67901
#define ASC_HALT_ENABLE_ASYN_USE_SYN_FIX 1782,67959
#define ASC_HALT_SDTR_REJECTED 1783,68017
#define ASC_MAX_QNO 1784,68063
#define ASC_DATA_SEC_BEG 1785,68095
#define ASC_DATA_SEC_END 1786,68137
#define ASC_CODE_SEC_BEG 1787,68179
#define ASC_CODE_SEC_END 1788,68221
#define ASC_QADR_BEG 1789,68263
#define ASC_QADR_USED 1790,68299
#define ASC_QADR_END 1791,68353
#define ASC_QLAST_ADR 1792,68395
#define ASC_QBLK_SIZE 1793,68437
#define ASC_BIOS_DATA_QBEG 1794,68469
#define ASC_MIN_ACTIVE_QNO 1795,68501
#define ASC_QLINK_END 1796,68533
#define ASC_EEPROM_WORDS 1797,68565
#define ASC_MAX_MGS_LEN 1798,68597
#define ASC_BIOS_ADDR_DEF 1799,68629
#define ASC_BIOS_SIZE 1800,68663
#define ASC_BIOS_RAM_OFF 1801,68697
#define ASC_BIOS_RAM_SIZE 1802,68731
#define ASC_BIOS_MIN_ADDR 1803,68764
#define ASC_BIOS_MAX_ADDR 1804,68798
#define ASC_BIOS_BANK_SIZE 1805,68832
#define ASC_MCODE_START_ADDR 1806,68866
#define ASC_CFG0_HOST_INT_ON 1807,68903
#define ASC_CFG0_BIOS_ON 1808,68942
#define ASC_CFG0_VERA_BURST_ON 1809,68981
#define ASC_CFG0_SCSI_PARITY_ON 1810,69020
#define ASC_CFG1_SCSI_TARGET_ON 1811,69059
#define ASC_CFG1_LRAM_8BITS_ON 1812,69098
#define ASC_CFG_MSW_CLR_MASK 1813,69137
#define CSW_TEST1 1814,69176
#define CSW_AUTO_CONFIG 1815,69226
#define CSW_RESERVED1 1816,69276
#define CSW_IRQ_WRITTEN 1817,69326
#define CSW_33MHZ_SELECTED 1818,69376
#define CSW_TEST2 1819,69426
#define CSW_TEST3 1820,69476
#define CSW_RESERVED2 1821,69526
#define CSW_DMA_DONE 1822,69576
#define CSW_FIFO_RDY 1823,69626
#define CSW_EEP_READ_DONE 1824,69676
#define CSW_HALTED 1825,69726
#define CSW_SCSI_RESET_ACTIVE 1826,69776
#define CSW_PARITY_ERR 1827,69826
#define CSW_SCSI_RESET_LATCH 1828,69876
#define CSW_INT_PENDING 1829,69926
#define CIW_CLR_SCSI_RESET_INT 1830,69976
#define CIW_INT_ACK 1831,70027
#define CIW_TEST1 1832,70072
#define CIW_TEST2 1833,70117
#define CIW_SEL_33MHZ 1834,70162
#define CIW_IRQ_ACT 1835,70207
#define CC_CHIP_RESET 1836,70252
#define CC_SCSI_RESET 1837,70288
#define CC_HALT 1838,70324
#define CC_SINGLE_STEP 1839,70360
#define CC_DMA_ABLE 1840,70396
#define CC_TEST 1841,70432
#define CC_BANK_ONE 1842,70468
#define CC_DIAG 1843,70504
#define ASC_1000_ID0W 1844,70540
#define ASC_1000_ID0W_FIX 1845,70574
#define ASC_1000_ID1B 1846,70608
#define ASC_EISA_BIG_IOP_GAP 1847,70640
#define ASC_EISA_SMALL_IOP_GAP 1848,70687
#define ASC_EISA_MIN_IOP_ADDR 1849,70727
#define ASC_EISA_MAX_IOP_ADDR 1850,70767
#define ASC_EISA_REV_IOP_MASK 1851,70807
#define ASC_EISA_PID_IOP_MASK 1852,70847
#define ASC_EISA_CFG_IOP_MASK 1853,70887
#define ASC_GET_EISA_SLOT(ASC_GET_EISA_SLOT1854,70927
#define ASC_EISA_ID_740 1855,70986
#define ASC_EISA_ID_750 1856,71026
#define INS_HALTINT 1857,71066
#define INS_HALT 1858,71108
#define INS_SINT 1859,71150
#define INS_RFLAG_WTM 1860,71192
#define ASC_MC_SAVE_CODE_WSIZE 1861,71234
#define ASC_MC_SAVE_DATA_WSIZE 1862,71272
typedef struct asc_mc_saved asc_mc_saved1864,71310
} ASC_MC_SAVED;ASC_MC_SAVED1867,71448
#define AscGetQDoneInProgress(AscGetQDoneInProgress1869,71465
#define AscPutQDoneInProgress(AscPutQDoneInProgress1870,71560
#define AscGetVarFreeQHead(AscGetVarFreeQHead1871,71661
#define AscGetVarDoneQTail(AscGetVarDoneQTail1872,71749
#define AscPutVarFreeQHead(AscPutVarFreeQHead1873,71837
#define AscPutVarDoneQTail(AscPutVarDoneQTail1874,71931
#define AscGetRiscVarFreeQHead(AscGetRiscVarFreeQHead1875,72025
#define AscGetRiscVarDoneQTail(AscGetRiscVarDoneQTail1876,72109
#define AscPutRiscVarFreeQHead(AscPutRiscVarFreeQHead1877,72194
#define AscPutRiscVarDoneQTail(AscPutRiscVarDoneQTail1878,72284
#define AscPutMCodeSDTRDoneAtID(AscPutMCodeSDTRDoneAtID1879,72375
#define AscGetMCodeSDTRDoneAtID(AscGetMCodeSDTRDoneAtID1880,72508
#define AscPutMCodeInitSDTRAtID(AscPutMCodeInitSDTRAtID1881,72632
#define AscGetMCodeInitSDTRAtID(AscGetMCodeInitSDTRAtID1882,72763
#define AscSynIndexToPeriod(AscSynIndexToPeriod1883,72887
#define AscGetChipSignatureByte(AscGetChipSignatureByte1884,72974
#define AscGetChipSignatureWord(AscGetChipSignatureWord1885,73048
#define AscGetChipVerNo(AscGetChipVerNo1886,73124
#define AscGetChipCfgLsw(AscGetChipCfgLsw1887,73197
#define AscGetChipCfgMsw(AscGetChipCfgMsw1888,73275
#define AscSetChipCfgLsw(AscSetChipCfgLsw1889,73354
#define AscSetChipCfgMsw(AscSetChipCfgMsw1890,73431
#define AscGetChipEEPCmd(AscGetChipEEPCmd1891,73509
#define AscSetChipEEPCmd(AscSetChipEEPCmd1892,73582
#define AscGetChipEEPData(AscGetChipEEPData1893,73655
#define AscSetChipEEPData(AscSetChipEEPData1894,73731
#define AscGetChipLramAddr(AscGetChipLramAddr1895,73806
#define AscSetChipLramAddr(AscSetChipLramAddr1896,73894
#define AscGetChipLramData(AscGetChipLramData1897,73981
#define AscSetChipLramData(AscSetChipLramData1898,74057
#define AscGetChipLramDataNoSwap(AscGetChipLramDataNoSwap1899,74132
#define AscSetChipLramDataNoSwap(AscSetChipLramDataNoSwap1900,74220
#define AscGetChipIFC(AscGetChipIFC1901,74307
#define AscSetChipIFC(AscSetChipIFC1902,74380
#define AscGetChipStatus(AscGetChipStatus1903,74454
#define AscSetChipStatus(AscSetChipStatus1904,74533
#define AscGetChipControl(AscGetChipControl1905,74608
#define AscSetChipControl(AscSetChipControl1906,74678
#define AscGetChipSyn(AscGetChipSyn1907,74750
#define AscSetChipSyn(AscSetChipSyn1908,74826
#define AscSetPCAddr(AscSetPCAddr1909,74902
#define AscGetPCAddr(AscGetPCAddr1910,74975
#define AscIsIntPending(AscIsIntPending1911,75049
#define AscGetChipScsiID(AscGetChipScsiID1912,75159
#define AscGetExtraControl(AscGetExtraControl1913,75247
#define AscSetExtraControl(AscSetExtraControl1914,75326
#define AscReadChipAX(AscReadChipAX1915,75405
#define AscWriteChipAX(AscWriteChipAX1916,75479
#define AscReadChipIX(AscReadChipIX1917,75552
#define AscWriteChipIX(AscWriteChipIX1918,75624
#define AscReadChipIH(AscReadChipIH1919,75696
#define AscWriteChipIH(AscWriteChipIH1920,75770
#define AscReadChipQP(AscReadChipQP1921,75843
#define AscWriteChipQP(AscWriteChipQP1922,75915
#define AscReadChipFIFO_L(AscReadChipFIFO_L1923,75987
#define AscWriteChipFIFO_L(AscWriteChipFIFO_L1924,76065
#define AscReadChipFIFO_H(AscReadChipFIFO_H1925,76142
#define AscWriteChipFIFO_H(AscWriteChipFIFO_H1926,76220
#define AscReadChipDmaSpeed(AscReadChipDmaSpeed1927,76297
#define AscWriteChipDmaSpeed(AscWriteChipDmaSpeed1928,76372
#define AscReadChipDA0(AscReadChipDA01929,76447
#define AscWriteChipDA0(AscWriteChipDA01930,76522
#define AscReadChipDA1(AscReadChipDA11931,76596
#define AscWriteChipDA1(AscWriteChipDA11932,76671
#define AscReadChipDC0(AscReadChipDC01933,76745
#define AscWriteChipDC0(AscWriteChipDC01934,76820
#define AscReadChipDC1(AscReadChipDC11935,76894
#define AscWriteChipDC1(AscWriteChipDC11936,76969
#define AscReadChipDvcID(AscReadChipDvcID1937,77043
#define AscWriteChipDvcID(AscWriteChipDvcID1938,77115
#define ADV_LIB_VERSION_MAJOR 2077,84532
#define ADV_LIB_VERSION_MINOR 2078,84565
#define ADV_OS_LINUX2081,84617
#define AdvPortAddr 2087,84742
#define AdvPortAddr 2089,84840
#define ADV_MEM_READB(ADV_MEM_READB2095,85006
#define ADV_MEM_READW(ADV_MEM_READW2096,85046
#define ADV_MEM_WRITEB(ADV_MEM_WRITEB2097,85086
#define ADV_MEM_WRITEW(ADV_MEM_WRITEW2098,85140
#define ioremap 2104,85311
#define iounmap 2105,85334
#define ADV_TOT_SG_LIST 2113,85607
#define ADV_MAX_SG_LIST 2118,85723
#define ADV_NUM_SG_BLOCK 2130,86095
#define ADV_SG_TOTAL_MEM_SIZE 2134,86246
#define ASC_PAGE_SIZE 2137,86326
#define ADV_NUM_PAGE_CROSSING 2147,86645
#define ADV_ASSERT(ADV_ASSERT2154,86791
#define ADV_PCI_VENDOR_ID 2157,86845
#define ADV_PCI_DEVICE_ID_REV_A 2158,86892
#define ASC_EEP_DVC_CFG_BEGIN 2160,86940
#define ASC_EEP_DVC_CFG_END 2161,86987
#define ASC_EEP_DVC_CTL_BEGIN 2162,87034
#define ASC_EEP_MAX_WORD_ADDR 2163,87109
#define ASC_EEP_DELAY_MS 2165,87157
#define ADV_EEPROM_BIG_ENDIAN 2170,87268
#define ADV_EEPROM_BIOS_ENABLE 2171,87336
#define ADV_EEPROM_TERM_POL 2172,87404
typedef struct adveep_configadveep_config2190,87997
} ADVEEP_CONFIG;ADVEEP_CONFIG2258,91963
#define ASC_EEP_CMD_DONE 2263,92008
#define ASC_EEP_CMD_DONE_ERR 2264,92052
#define EEP_CFG_WORD_BIG_ENDIAN 2267,92112
#define BIOS_CTRL_BIOS 2270,92173
#define BIOS_CTRL_EXTENDED_XLAT 2271,92217
#define BIOS_CTRL_GT_2_DISK 2272,92261
#define BIOS_CTRL_BIOS_REMOVABLE 2273,92305
#define BIOS_CTRL_BOOTABLE_CD 2274,92349
#define BIOS_CTRL_MULTIPLE_LUN 2275,92393
#define BIOS_CTRL_DISPLAY_MSG 2276,92437
#define BIOS_CTRL_NO_SCAM 2277,92481
#define BIOS_CTRL_RESET_SCSI_BUS 2278,92525
#define BIOS_CTRL_INIT_VERBOSE 2279,92569
#define BIOS_CTRL_SCSI_PARITY 2280,92613
#define ADV_CONDOR_MEMSIZE 2285,92704
#define ADV_CONDOR_IOLEN 2290,92813
#define IOPB_INTR_STATUS_REG 2295,92945
#define IOPB_CHIP_ID_1 2296,92982
#define IOPB_INTR_ENABLES 2297,93019
#define IOPB_CHIP_TYPE_REV 2298,93056
#define IOPB_RES_ADDR_4 2299,93093
#define IOPB_RES_ADDR_5 2300,93130
#define IOPB_RAM_DATA 2301,93167
#define IOPB_RES_ADDR_7 2302,93204
#define IOPB_FLAG_REG 2303,93241
#define IOPB_RES_ADDR_9 2304,93278
#define IOPB_RISC_CSR 2305,93315
#define IOPB_RES_ADDR_B 2306,93352
#define IOPB_RES_ADDR_C 2307,93389
#define IOPB_RES_ADDR_D 2308,93426
#define IOPB_RES_ADDR_E 2309,93463
#define IOPB_RES_ADDR_F 2310,93500
#define IOPB_MEM_CFG 2311,93537
#define IOPB_RES_ADDR_11 2312,93574
#define IOPB_RES_ADDR_12 2313,93611
#define IOPB_RES_ADDR_13 2314,93648
#define IOPB_FLASH_PAGE 2315,93685
#define IOPB_RES_ADDR_15 2316,93722
#define IOPB_RES_ADDR_16 2317,93759
#define IOPB_RES_ADDR_17 2318,93796
#define IOPB_FLASH_DATA 2319,93833
#define IOPB_RES_ADDR_19 2320,93870
#define IOPB_RES_ADDR_1A 2321,93907
#define IOPB_RES_ADDR_1B 2322,93944
#define IOPB_RES_ADDR_1C 2323,93981
#define IOPB_RES_ADDR_1D 2324,94018
#define IOPB_RES_ADDR_1E 2325,94055
#define IOPB_RES_ADDR_1F 2326,94092
#define IOPB_DMA_CFG0 2327,94129
#define IOPB_DMA_CFG1 2328,94166
#define IOPB_TICKLE 2329,94203
#define IOPB_DMA_REG_WR 2330,94240
#define IOPB_SDMA_STATUS 2331,94277
#define IOPB_SCSI_BYTE_CNT 2332,94314
#define IOPB_HOST_BYTE_CNT 2333,94351
#define IOPB_BYTE_LEFT_TO_XFER 2334,94388
#define IOPB_BYTE_TO_XFER_0 2335,94425
#define IOPB_BYTE_TO_XFER_1 2336,94462
#define IOPB_BYTE_TO_XFER_2 2337,94499
#define IOPB_BYTE_TO_XFER_3 2338,94536
#define IOPB_ACC_GRP 2339,94573
#define IOPB_RES_ADDR_2D 2340,94610
#define IOPB_DEV_ID 2341,94647
#define IOPB_RES_ADDR_2F 2342,94684
#define IOPB_SCSI_DATA 2343,94721
#define IOPB_RES_ADDR_31 2344,94758
#define IOPB_RES_ADDR_32 2345,94795
#define IOPB_SCSI_DATA_HSHK 2346,94832
#define IOPB_SCSI_CTRL 2347,94869
#define IOPB_RES_ADDR_35 2348,94906
#define IOPB_RES_ADDR_36 2349,94943
#define IOPB_RES_ADDR_37 2350,94980
#define IOPB_RES_ADDR_38 2351,95017
#define IOPB_RES_ADDR_39 2352,95054
#define IOPB_RES_ADDR_3A 2353,95091
#define IOPB_RES_ADDR_3B 2354,95128
#define IOPB_RFIFO_CNT 2355,95165
#define IOPB_RES_ADDR_3D 2356,95202
#define IOPB_RES_ADDR_3E 2357,95239
#define IOPB_RES_ADDR_3F 2358,95276
#define IOPW_CHIP_ID_0 2363,95375
#define IOPW_CTRL_REG 2364,95425
#define IOPW_RAM_ADDR 2365,95475
#define IOPW_RAM_DATA 2366,95525
#define IOPW_RES_ADDR_08 2367,95575
#define IOPW_RISC_CSR 2368,95612
#define IOPW_SCSI_CFG0 2369,95662
#define IOPW_SCSI_CFG1 2370,95712
#define IOPW_RES_ADDR_10 2371,95762
#define IOPW_SEL_MASK 2372,95799
#define IOPW_RES_ADDR_14 2373,95849
#define IOPW_FLASH_ADDR 2374,95886
#define IOPW_RES_ADDR_18 2375,95936
#define IOPW_EE_CMD 2376,95973
#define IOPW_EE_DATA 2377,96023
#define IOPW_SFIFO_CNT 2378,96073
#define IOPW_RES_ADDR_20 2379,96123
#define IOPW_Q_BASE 2380,96160
#define IOPW_QP 2381,96210
#define IOPW_IX 2382,96260
#define IOPW_SP 2383,96310
#define IOPW_PC 2384,96360
#define IOPW_RES_ADDR_2C 2385,96410
#define IOPW_RES_ADDR_2E 2386,96447
#define IOPW_SCSI_DATA 2387,96484
#define IOPW_SCSI_DATA_HSHK 2388,96534
#define IOPW_SCSI_CTRL 2389,96584
#define IOPW_HSHK_CFG 2390,96634
#define IOPW_SXFR_STATUS 2391,96684
#define IOPW_SXFR_CNTL 2392,96734
#define IOPW_SXFR_CNTH 2393,96784
#define IOPW_RES_ADDR_3C 2394,96834
#define IOPW_RFIFO_DATA 2395,96871
#define IOPDW_RES_ADDR_0 2400,96989
#define IOPDW_RAM_DATA 2401,97027
#define IOPDW_RES_ADDR_8 2402,97065
#define IOPDW_RES_ADDR_C 2403,97103
#define IOPDW_RES_ADDR_10 2404,97141
#define IOPDW_RES_ADDR_14 2405,97179
#define IOPDW_RES_ADDR_18 2406,97217
#define IOPDW_RES_ADDR_1C 2407,97255
#define IOPDW_SDMA_ADDR0 2408,97293
#define IOPDW_SDMA_ADDR1 2409,97331
#define IOPDW_SDMA_COUNT 2410,97369
#define IOPDW_SDMA_ERROR 2411,97407
#define IOPDW_RDMA_ADDR0 2412,97445
#define IOPDW_RDMA_ADDR1 2413,97483
#define IOPDW_RDMA_COUNT 2414,97521
#define IOPDW_RDMA_ERROR 2415,97559
#define ADV_CHIP_ID_BYTE 2417,97598
#define ADV_CHIP_ID_WORD 2418,97636
#define ADV_SC_SCSI_BUS_RESET 2420,97677
#define ADV_INTR_ENABLE_HOST_INTR 2422,97718
#define ADV_INTR_ENABLE_SEL_INTR 2423,97775
#define ADV_INTR_ENABLE_DPR_INTR 2424,97832
#define ADV_INTR_ENABLE_RTA_INTR 2425,97889
#define ADV_INTR_ENABLE_RMA_INTR 2426,97946
#define ADV_INTR_ENABLE_RST_INTR 2427,98003
#define ADV_INTR_ENABLE_DPE_INTR 2428,98060
#define ADV_INTR_ENABLE_GLOBAL_INTR 2429,98117
#define ADV_INTR_STATUS_INTRA 2431,98175
#define ADV_INTR_STATUS_INTRB 2432,98221
#define ADV_INTR_STATUS_INTRC 2433,98267
#define ADV_RISC_CSR_STOP 2435,98314
#define ADV_RISC_TEST_COND 2436,98359
#define ADV_RISC_CSR_RUN 2437,98404
#define ADV_RISC_CSR_SINGLE_STEP 2438,98449
#define ADV_CTRL_REG_HOST_INTR 2440,98495
#define ADV_CTRL_REG_SEL_INTR 2441,98538
#define ADV_CTRL_REG_DPR_INTR 2442,98581
#define ADV_CTRL_REG_RTA_INTR 2443,98624
#define ADV_CTRL_REG_RMA_INTR 2444,98667
#define ADV_CTRL_REG_RES_BIT14 2445,98710
#define ADV_CTRL_REG_DPE_INTR 2446,98753
#define ADV_CTRL_REG_POWER_DONE 2447,98796
#define ADV_CTRL_REG_ANY_INTR 2448,98839
#define ADV_CTRL_REG_CMD_RESET 2450,98883
#define ADV_CTRL_REG_CMD_WR_IO_REG 2451,98933
#define ADV_CTRL_REG_CMD_RD_IO_REG 2452,98983
#define ADV_CTRL_REG_CMD_WR_PCI_CFG_SPACE 2453,99033
#define ADV_CTRL_REG_CMD_RD_PCI_CFG_SPACE 2454,99083
#define ADV_SCSI_CTRL_RSTOUT 2456,99134
#define AdvIsIntPending(AdvIsIntPending2458,99178
#define TIMER_MODEAB 2464,99329
#define PARITY_EN 2465,99409
#define EVEN_PARITY 2466,99482
#define WD_LONG 2467,99539
#define QUEUE_128 2468,99617
#define PRIM_MODE 2469,99691
#define SCAM_EN 2470,99749
#define SEL_TMO_LONG 2471,99809
#define CFRM_ID 2472,99887
#define OUR_ID_EN 2473,99967
#define OUR_ID 2474,100024
#define BIG_ENDIAN 2479,100116
#define TERM_POL 2480,100192
#define SLEW_RATE 2481,100271
#define FILTER_SEL 2482,100338
#define  FLTR_DISABLE 2483,100400
#define  FLTR_11_TO_20NS 2484,100464
#define  FLTR_21_TO_39NS 2485,100542
#define ACTIVE_DBL 2486,100620
#define DIFF_MODE 2487,100682
#define DIFF_SENSE 2488,100755
#define TERM_CTL_SEL 2489,100834
#define TERM_CTL 2490,100905
#define  TERM_CTL_H 2491,100974
#define  TERM_CTL_L 2492,101052
#define CABLE_DETECT 2493,101130
#define CABLE_ILLEGAL_A 2495,101207
#define CABLE_ILLEGAL_B 2498,101302
#define BIOS_EN 2533,102627
#define FAST_EE_CLK 2534,102691
#define RAM_SZ 2535,102744
#define  RAM_SZ_2KB 2536,102810
#define  RAM_SZ_4KB 2537,102854
#define  RAM_SZ_8KB 2538,102898
#define  RAM_SZ_16KB 2539,102942
#define  RAM_SZ_32KB 2540,102987
#define  RAM_SZ_64KB 2541,103032
#define BC_THRESH_ENB 2548,103174
#define FIFO_THRESH 2549,103237
#define  FIFO_THRESH_16B 2550,103298
#define  FIFO_THRESH_32B 2551,103346
#define  FIFO_THRESH_48B 2552,103394
#define  FIFO_THRESH_64B 2553,103442
#define  FIFO_THRESH_80B 2554,103490
#define  FIFO_THRESH_96B 2555,103548
#define  FIFO_THRESH_112B 2556,103596
#define START_CTL 2557,103645
#define  START_CTL_TH 2558,103704
#define  START_CTL_ID 2559,103774
#define  START_CTL_THID 2560,103833
#define  START_CTL_EMFU 2561,103906
#define READ_CMD 2562,103971
#define  READ_CMD_MR 2563,104028
#define  READ_CMD_MRL 2564,104079
#define  READ_CMD_MRM 2565,104135
#define ADV_TRUE 2572,104265
#define ADV_FALSE 2573,104291
#define ADV_NOERROR 2574,104317
#define ADV_SUCCESS 2575,104343
#define ADV_BUSY 2576,104369
#define ADV_ERROR 2577,104395
#define ASC_WARN_EEPROM_CHKSUM 2583,104467
#define ASC_WARN_EEPROM_TERMINATION 2584,104540
#define ASC_WARN_SET_PCI_CONFIG_SPACE 2585,104619
#define ASC_WARN_ERROR 2586,104699
#define ADV_MAX_TID 2588,104770
#define ADV_MAX_LUN 2589,104842
#define ASC_IERR_WRITE_EEPROM 2597,105045
#define ASC_IERR_MCODE_CHKSUM 2598,105113
#define ASC_IERR_START_STOP_CHIP 2599,105189
#define ASC_IERR_CHIP_VERSION 2600,105261
#define ASC_IERR_SET_SCSI_ID 2601,105329
#define ASC_IERR_BAD_SIGNATURE 2602,105397
#define ASC_IERR_ILLEGAL_CONNECTION 2603,105466
#define ASC_IERR_SINGLE_END_DEVICE 2604,105540
#define ASC_IERR_REVERSED_CABLE 2605,105620
#define ASC_IERR_RW_LRAM 2606,105696
#define ASC_MC_CODE_BEGIN_ADDR 2611,105833
#define ASC_MC_CODE_END_ADDR 2612,105910
#define ASC_MC_CODE_CHK_SUM 2613,105985
#define ASC_MC_STACK_BEGIN 2614,106062
#define ASC_MC_STACK_END 2615,106137
#define ASC_MC_VERSION_DATE 2616,106210
#define ASC_MC_VERSION_NUM 2617,106281
#define ASCV_VER_SERIAL_W 2618,106351
#define ASC_MC_BIOSMEM 2619,106421
#define ASC_MC_BIOSLEN 2620,106497
#define ASC_MC_HALTCODE 2621,106574
#define ASC_MC_CALLERPC 2622,106647
#define ASC_MC_ADAPTER_SCSI_ID 2623,106725
#define ASC_MC_ULTRA_ABLE 2624,106801
#define ASC_MC_SDTR_ABLE 2625,106848
#define ASC_MC_TAGQNG_ABLE 2626,106895
#define ASC_MC_DISC_ENABLE 2627,106942
#define ASC_MC_IDLE_CMD 2628,106989
#define ASC_MC_IDLE_PARA_STAT 2629,107036
#define ASC_MC_DEFAULT_SCSI_CFG0 2630,107083
#define ASC_MC_DEFAULT_SCSI_CFG1 2631,107130
#define ASC_MC_DEFAULT_MEM_CFG 2632,107177
#define ASC_MC_DEFAULT_SEL_MASK 2633,107224
#define ASC_MC_RISC_NEXT_READY 2634,107271
#define ASC_MC_RISC_NEXT_DONE 2635,107318
#define ASC_MC_SDTR_DONE 2636,107365
#define ASC_MC_NUMBER_OF_QUEUED_CMD 2637,107412
#define ASC_MC_NUMBER_OF_MAX_CMD 2638,107459
#define ASC_MC_DEVICE_HSHK_CFG_TABLE 2639,107506
#define ASC_MC_WDTR_ABLE 2640,107553
#define ASC_MC_CONTROL_FLAG 2641,107633
#define ASC_MC_WDTR_DONE 2642,107710
#define ASC_MC_HOST_NEXT_READY 2643,107757
#define ASC_MC_HOST_NEXT_DONE 2644,107837
#define BIOS_CODESEG 2649,107964
#define BIOS_CODELEN 2650,107993
#define BIOS_SIGNATURE 2651,108022
#define BIOS_VERSION 2652,108051
#define BIOS_SIGNATURE 2653,108080
#define CONTROL_FLAG_IGNORE_PERR 2661,108252
#define HSHK_CFG_WIDE_XFR 2666,108414
#define HSHK_CFG_RATE 2667,108453
#define HSHK_CFG_OFFSET 2668,108492
#define ASC_MC_RISC_Q_LIST_BASE 2678,108811
#define ASC_MC_RISC_Q_LIST_SIZE 2679,108858
#define ASC_MC_RISC_Q_TOTAL_CNT 2680,108905
#define ASC_MC_RISC_Q_FIRST 2681,108984
#define ASC_MC_RISC_Q_LAST 2682,109031
#define ASC_DEF_MAX_HOST_QNG 2684,109079
#define ASC_DEF_MIN_HOST_QNG 2685,109157
#define ASC_DEF_MAX_DVC_QNG 2686,109234
#define ASC_DEF_MIN_DVC_QNG 2687,109314
#define RQL_FWD 2690,109436
#define RQL_BWD 2691,109493
#define RQL_STATE 2692,109551
#define RQL_TID 2693,109632
#define RQL_PHYADDR 2694,109691
#define ASC_MC_QS_FREE 2697,109799
#define ASC_MC_QS_READY 2698,109844
#define ASC_MC_QS_DONE 2699,109889
#define ASC_MC_QS_ABORTED 2700,109934
#define ASC_MC_NULL_Q 2703,110017
#define ASC_MC_BIOS_Q 2704,110093
#define ASC_MC_QC_START_MOTOR 2707,110211
#define ASC_MC_QC_NO_OVERRUN 2708,110285
#define ASC_MC_QC_FIRST_DMA 2709,110362
#define ASC_MC_QC_ABORTED 2710,110442
#define ASC_MC_QC_REQ_SENSE 2711,110522
#define ASC_MC_QC_DOS_REQ 2712,110597
#define ADV_POLL_REQUEST 2721,110866
#define ADV_SCSIQ_DONE 2722,110947
typedef struct adv_dvc_cfg adv_dvc_cfg2735,111322
} ADV_DVC_CFG;ADV_DVC_CFG2751,112245
typedef struct adv_dvc_var adv_dvc_var2765,112656
} ADV_DVC_VAR;ADV_DVC_VAR2791,114140
#define NO_OF_SG_PER_BLOCK 2793,114157
typedef struct asc_sg_block asc_sg_block2795,114201
} ADV_SG_BLOCK;ADV_SG_BLOCK2805,114642
typedef struct adv_scsi_req_q adv_scsi_req_q2815,114984
} ADV_SCSI_REQ_Q;ADV_SCSI_REQ_Q2845,116774
#define IDLE_CMD_COMPLETED 2850,116891
#define IDLE_CMD_STOP_CHIP 2851,116930
#define IDLE_CMD_STOP_CHIP_SEND_INT 2852,116974
#define IDLE_CMD_SEND_INT 2853,117018
#define IDLE_CMD_ABORT 2854,117062
#define IDLE_CMD_DEVICE_RESET 2855,117106
#define IDLE_CMD_SCSI_RESET 2856,117150
#define ADV_NOWAIT 2861,117240
#define SCSI_WAIT_10_SEC 2866,117306
#define SCSI_MS_PER_SEC 2867,117371
#define AscPCICmdRegBits_BusMastering 2908,118852
#define AscPCICmdRegBits_ParErrRespCtrl 2909,118901
#define AdvReadByteRegister(AdvReadByteRegister2914,119035
#define AdvWriteByteRegister(AdvWriteByteRegister2918,119152
#define AdvReadWordRegister(AdvReadWordRegister2922,119296
#define AdvWriteWordRegister(AdvWriteWordRegister2926,119424
#define AdvReadByteLram(AdvReadByteLram2930,119553
#define AdvWriteByteLram(AdvWriteByteLram2937,119744
#define AdvReadWordLram(AdvReadWordLram2942,119928
#define AdvWriteWordLram(AdvWriteWordLram2949,120131
#define AdvWriteDWordLram(AdvWriteDWordLram2955,120396
#define AdvReadWordAutoIncLram(AdvReadWordAutoIncLram2962,120782
#define AdvWriteWordAutoIncLram(AdvWriteWordAutoIncLram2966,120943
#define AdvReadByteRegister(AdvReadByteRegister2972,121107
#define AdvWriteByteRegister(AdvWriteByteRegister2976,121234
#define AdvReadWordRegister(AdvReadWordRegister2980,121388
#define AdvWriteWordRegister(AdvWriteWordRegister2984,121525
#define AdvReadByteLram(AdvReadByteLram2988,121663
#define AdvWriteByteLram(AdvWriteByteLram2995,121873
#define AdvReadWordLram(AdvReadWordLram3000,122076
#define AdvWriteWordLram(AdvWriteWordLram3007,122296
#define AdvWriteDWordLram(AdvWriteDWordLram3013,122579
#define AdvReadWordAutoIncLram(AdvReadWordAutoIncLram3022,123047
#define AdvWriteWordAutoIncLram(AdvWriteWordAutoIncLram3026,123217
#define AdvFindSignature(AdvFindSignature3037,123538
#define AdvGetChipVersion(AdvGetChipVersion3048,123908
#define AdvAbortSRB(AdvAbortSRB3063,124498
#define AdvResetDevice(AdvResetDevice3078,125001
#define ADV_SCSI_BIT_ID_TYPE 3085,125196
#define ADV_SCAN_LUN 3090,125286
#define ADV_CAPINFO_NOLUN 3091,125322
#define ADV_TID_TO_TIDMASK(ADV_TID_TO_TIDMASK3096,125410
#define QD_NO_STATUS 3102,125550
#define QD_NO_ERROR 3103,125623
#define QD_ABORTED_BY_HOST 3104,125657
#define QD_WITH_ERROR 3105,125691
#define QHSTA_NO_ERROR 3107,125726
#define QHSTA_M_SEL_TIMEOUT 3108,125767
#define QHSTA_M_DATA_OVER_RUN 3109,125808
#define QHSTA_M_UNEXPECTED_BUS_FREE 3110,125849
#define QHSTA_M_QUEUE_ABORTED 3111,125890
#define QHSTA_M_SXFR_SDMA_ERR 3112,125931
#define QHSTA_M_SXFR_SXFR_PERR 3113,126005
#define QHSTA_M_RDMA_PERR 3114,126086
#define QHSTA_M_SXFR_OFF_UFLW 3115,126159
#define QHSTA_M_SXFR_OFF_OFLW 3116,126235
#define QHSTA_M_SXFR_WD_TMO 3117,126310
#define QHSTA_M_SXFR_DESELECTED 3118,126386
#define QHSTA_M_SXFR_XFR_OFLW 3120,126529
#define QHSTA_M_SXFR_XFR_PH_ERR 3121,126606
#define QHSTA_M_SXFR_UNKNOWN_ERROR 3122,126686
#define QHSTA_M_WTM_TIMEOUT 3123,126759
#define QHSTA_M_BAD_CMPL_STATUS_IN 3124,126800
#define QHSTA_M_NO_AUTO_REQ_SENSE 3125,126841
#define QHSTA_M_AUTO_REQ_SENSE_FAIL 3126,126882
#define QHSTA_M_INVALID_DEVICE 3127,126923
typedef int (* ADV_ISR_CALLBACK)ADV_ISR_CALLBACK3129,126985
typedef int (* ADV_SBRESET_CALLBACK)ADV_SBRESET_CALLBACK3132,127058
extern ADVEEP_CONFIG Default_EEPROM_Config;3138,127187
#define ADV_IS_SCSIQ_FLAG 3143,127273
#define ADV_ASCGETSGLIST_VADDR 3144,127349
#define ADV_IS_SENSE_FLAG 3145,127430
#define ADV_IS_DATA_FLAG 3146,127505
#define ADV_IS_SGLIST_FLAG 3147,127579
#define ADV_DWALIGN(ADV_DWALIGN3150,127734
#define ADV_SG_LIST_MAX_BYTE_SIZE 3164,128117
#define ADV_ASSERT(ADV_ASSERT3174,128466
#define ASC_NUM_BOARD_SUPPORTED 3182,128557
#define ASC_NUM_IOPORT_PROBE 3183,128592
#define ASC_NUM_BUS 3184,128626
#define ASC_BOARDP(ASC_BOARDP3187,128696
#define ASC_HOST_IN_RESET 3190,128784
#define ASC_HOST_IN_ABORT 3191,128821
#define ASC_IS_WIDE_BOARD 3192,128858
#define ASC_SELECT_QUEUE_DEPTHS 3193,128924
#define ASC_NARROW_BOARD(ASC_NARROW_BOARD3195,128962
#define ASC_WIDE_BOARD(ASC_WIDE_BOARD3196,129040
#define NO_ISA_DMA 3198,129112
#define ASC_INITFUNC(ASC_INITFUNC3206,129457
#define ASC_INITDATA3207,129494
#define ASC_INIT3208,129515
#define ASC_INITFUNC(ASC_INITFUNC3210,129563
#define ASC_INITDATA 3211,129612
#define ASC_INIT 3212,129655
#define ASC_INFO_SIZE 3215,129727
#define ASC_PRTBUF_SIZE 3218,129860
#define ASC_PRTLINE_SIZE 3219,129897
#define ASC_PRT_NEXT(ASC_PRT_NEXT3221,129934
#define ASC_MIN(ASC_MIN3231,130125
#define ASC_TRUE 3234,130205
#define ASC_FALSE 3235,130231
#define ASC_NOERROR 3236,130257
#define ASC_BUSY 3237,130283
#define ASC_ERROR 3238,130309
#define STATUS_BYTE(STATUS_BYTE3241,130377
#define MSG_BYTE(MSG_BYTE3242,130412
#define HOST_BYTE(HOST_BYTE3243,130454
#define DRIVER_BYTE(DRIVER_BYTE3244,130497
typedef Scsi_Cmnd            REQ, *REQP;REQP3257,130944
#define REQPNEXT(REQPNEXT3258,130985
#define REQPNEXTP(REQPNEXTP3259,131047
#define REQPTID(REQPTID3260,131112
#define REQPTIME(REQPTIME3261,131158
#define REQTIMESTAMP(REQTIMESTAMP3262,131215
#define REQTIMESTAT(REQTIMESTAT3264,131255
#define ASC_FRONT 3295,132477
#define ASC_BACK 3296,132503
#define ASC_TID_ALL 3299,132564
#define ASC_QUEUE_EMPTY(ASC_QUEUE_EMPTY3302,132643
#define PCI_BASE_CLASS_PREDEFINED 3306,132740
#define PCI_BASE_CLASS_MASS_STORAGE 3307,132793
#define PCI_BASE_CLASS_NETWORK 3308,132846
#define PCI_BASE_CLASS_DISPLAY 3309,132899
#define PCI_BASE_CLASS_MULTIMEDIA 3310,132952
#define PCI_BASE_CLASS_MEMORY_CONTROLLER 3311,133005
#define PCI_BASE_CLASS_BRIDGE_DEVICE 3312,133058
#define PCI_SUB_CLASS_SCSI_CONTROLLER 3315,133131
#define PCI_SUB_CLASS_IDE_CONTROLLER 3316,133184
#define PCI_SUB_CLASS_FLOPPY_DISK_CONTROLLER 3317,133237
#define PCI_SUB_CLASS_IPI_BUS_CONTROLLER 3318,133290
#define PCI_SUB_CLASS_OTHER_MASS_CONTROLLER 3319,133343
#define PCI_SUB_CLASS_ETHERNET_CONTROLLER 3322,133422
#define PCI_SUB_CLASS_TOKEN_RING_CONTROLLER 3323,133475
#define PCI_SUB_CLASS_FDDI_CONTROLLER 3324,133528
#define PCI_SUB_CLASS_OTHER_NETWORK_CONTROLLER 3325,133581
#define PCI_SUB_CLASS_VGA_CONTROLLER 3328,133660
#define PCI_SUB_CLASS_XGA_CONTROLLER 3329,133713
#define PCI_SUB_CLASS_OTHER_DISPLAY_CONTROLLER 3330,133766
#define PCI_SUB_CLASS_VIDEO_DEVICE 3333,133848
#define PCI_SUB_CLASS_AUDIO_DEVICE 3334,133901
#define PCI_SUB_CLASS_OTHER_MULTIMEDIA_DEVICE 3335,133954
#define PCI_SUB_CLASS_RAM_CONTROLLER 3338,134032
#define PCI_SUB_CLASS_FLASH_CONTROLLER 3339,134085
#define PCI_SUB_CLASS_OTHER_MEMORY_CONTROLLER 3340,134138
#define PCI_SUB_CLASS_HOST_BRIDGE_CONTROLLER 3343,134216
#define PCI_SUB_CLASS_ISA_BRIDGE_CONTROLLER 3344,134269
#define PCI_SUB_CLASS_EISA_BRIDGE_CONTROLLER 3345,134322
#define PCI_SUB_CLASS_MC_BRIDGE_CONTROLLER 3346,134375
#define PCI_SUB_CLASS_PCI_TO_PCI_BRIDGE_CONTROLLER 3347,134428
#define PCI_SUB_CLASS_PCMCIA_BRIDGE_CONTROLLER 3348,134487
#define PCI_SUB_CLASS_OTHER_BRIDGE_CONTROLLER 3349,134540
#define PCI_MAX_SLOT 3351,134594
#define PCI_MAX_BUS 3352,134631
#define PCI_IOADDRESS_MASK 3353,134668
#define ASC_PCI_VENDORID 3354,134707
#define ASC_PCI_DEVICE_ID_CNT 3355,134746
#define ASC_PCI_DEVICE_ID_1100 3356,134813
#define ASC_PCI_DEVICE_ID_1200 3357,134852
#define ASC_PCI_DEVICE_ID_1300 3358,134891
#define ASC_PCI_DEVICE_ID_2300 3359,134930
#define PCI_CONFIG_ADDRESS_MECH1 3363,135025
#define PCI_CONFIG_DATA_MECH1 3364,135074
#define PCI_CONFIG_FORWARD_REGISTER 3366,135124
#define PCI_CONFIG_BUS_NUMBER_MASK 3368,135203
#define PCI_CONFIG_DEVICE_FUNCTION_MASK 3369,135256
#define PCI_CONFIG_REGISTER_NUMBER_MASK 3370,135309
#define PCI_DEVICE_FOUND 3372,135363
#define PCI_DEVICE_NOT_FOUND 3373,135410
#define SUBCLASS_OFFSET 3375,135458
#define CLASSCODE_OFFSET 3376,135495
#define VENDORID_OFFSET 3377,135532
#define DEVICEID_OFFSET 3378,135569
#define ASC_STATS(ASC_STATS3381,135630
#define ASC_STATS_ADD(ASC_STATS_ADD3382,135662
#define ASC_STATS(ASC_STATS3384,135732
#define ASC_STATS_ADD(ASC_STATS_ADD3387,135810
#define ASC_CEILING(ASC_CEILING3391,135936
#define ASC_TENTHS(ASC_TENTHS3394,136061
#define ASC_PRINT(ASC_PRINT3401,136247
#define ASC_PRINT1(ASC_PRINT13407,136338
#define ASC_PRINT2(ASC_PRINT23413,136442
#define ASC_PRINT3(ASC_PRINT33419,136556
#define ASC_PRINT4(ASC_PRINT43425,136680
#define ASC_DBG(ASC_DBG3434,136839
#define ASC_DBG1(ASC_DBG13435,136863
#define ASC_DBG2(ASC_DBG23436,136892
#define ASC_DBG3(ASC_DBG33437,136925
#define ASC_DBG4(ASC_DBG43438,136962
#define ASC_DBG_PRT_SCSI_HOST(ASC_DBG_PRT_SCSI_HOST3439,137003
#define ASC_DBG_PRT_SCSI_CMND(ASC_DBG_PRT_SCSI_CMND3440,137041
#define ASC_DBG_PRT_ASC_SCSI_Q(ASC_DBG_PRT_ASC_SCSI_Q3441,137079
#define ASC_DBG_PRT_ADV_SCSI_REQ_Q(ASC_DBG_PRT_ADV_SCSI_REQ_Q3442,137123
#define ASC_DBG_PRT_ASC_QDONE_INFO(ASC_DBG_PRT_ASC_QDONE_INFO3443,137171
#define ADV_DBG_PRT_ADV_SCSI_REQ_Q(ADV_DBG_PRT_ADV_SCSI_REQ_Q3444,137218
#define ASC_DBG_PRT_HEX(ASC_DBG_PRT_HEX3445,137266
#define ASC_DBG_PRT_CDB(ASC_DBG_PRT_CDB3446,137316
#define ASC_DBG_PRT_SENSE(ASC_DBG_PRT_SENSE3447,137355
#define ASC_DBG_PRT_INQUIRY(ASC_DBG_PRT_INQUIRY3448,137398
#define ASC_DBG(ASC_DBG3459,137574
#define ASC_DBG1(ASC_DBG13466,137689
#define ASC_DBG2(ASC_DBG23473,137817
#define ASC_DBG3(ASC_DBG33480,137955
#define ASC_DBG4(ASC_DBG43487,138103
#define ASC_DBG_PRT_SCSI_HOST(ASC_DBG_PRT_SCSI_HOST3494,138261
#define ASC_DBG_PRT_SCSI_CMND(ASC_DBG_PRT_SCSI_CMND3501,138401
#define ASC_DBG_PRT_ASC_SCSI_Q(ASC_DBG_PRT_ASC_SCSI_Q3508,138541
#define ASC_DBG_PRT_ASC_QDONE_INFO(ASC_DBG_PRT_ASC_QDONE_INFO3515,138693
#define ASC_DBG_PRT_ADV_SCSI_REQ_Q(ASC_DBG_PRT_ADV_SCSI_REQ_Q3522,138851
#define ASC_DBG_PRT_HEX(ASC_DBG_PRT_HEX3529,139011
#define ASC_DBG_PRT_CDB(ASC_DBG_PRT_CDB3536,139181
#define ASC_DBG_PRT_SENSE(ASC_DBG_PRT_SENSE3539,139286
#define ASC_DBG_PRT_INQUIRY(ASC_DBG_PRT_INQUIRY3542,139399
#define ASC_ASSERT(ASC_ASSERT3547,139564
#define ASC_ASSERT(ASC_ASSERT3550,139615
struct asc_stats asc_stats3568,139916
typedef struct asc_queue asc_queue3598,141514
} asc_queue_t;asc_queue_t3610,142283
typedef struct adv_sgblk adv_sgblk3627,142868
} adv_sgblk_t;adv_sgblk_t3631,143123
typedef struct adv_req adv_req3633,143139
} adv_req_t;adv_req_t3639,143534
typedef struct asc_board asc_board3648,143782
} asc_board_t;asc_board_t3703,146731
typedef struct _PCI_DATA__PCI_DATA_3708,146786
} PCI_DATA;PCI_DATA3715,146910
typedef struct _PCI_DEVICE__PCI_DEVICE_3717,146923
} PCI_DEVICE;PCI_DEVICE3730,147207
typedef struct _PCI_CONFIG_SPACE__PCI_CONFIG_SPACE_3732,147222
} PCI_CONFIG_SPACE;PCI_CONFIG_SPACE3752,147691
struct proc_dir_entry proc_scsi_advansys 3762,147850
STATIC int asc_board_count 3773,148277
STATIC struct Scsi_Host    *asc_host[3774,148309
STATIC uchar overrun_buf[3777,148429
STATIC ASC_SCSI_Q asc_scsi_q 3782,148540
STATIC ASC_SG_HEAD asc_sg_head 3783,148582
STATIC ushort asc_bus[3786,148658
STATIC ushort asc_bus[ASC_NUM_BUS] ASC_INITDATA 3786,148658
STATIC int pci_scan_method ASC_INITDATA 3795,148851
STATIC int asc_iopflag 3803,149082
STATIC int asc_ioport[3804,149118
uchar adv_req_buf[3813,149461
uchar adv_sgblk_buf[3814,149512
asc_bus_name[3819,149635
STATIC int          asc_dbglvl 3826,149741
STATIC PortAddr     _asc_def_iop_base[3830,149876
advansys_proc_info(3941,154828
ASC_INITFUNC(4171,161290
advansys_release(5228,204335
advansys_info(5276,205792
advansys_command(5383,209819
advansys_queuecommand(5403,210380
advansys_abort(5496,213077
advansys_reset(5732,221403
advansys_biosparam(6127,235645
ASC_INITFUNC(6195,237834
Scsi_Host_Template driver_template 6244,239017
advansys_interrupt(6264,239620
advansys_select_queue_depths(6394,244011
advansys_command_done(6428,245083
asc_scsi_done_list(6441,245355
asc_execute_scsi_cmnd(6503,247115
asc_build_req(6693,253942
adv_build_req(6821,258430
adv_get_sglist(6997,263721
asc_isr_callback(7066,266244
adv_isr_callback(7248,272476
ASC_INITFUNC(7457,279586
ASC_INITFUNC(7497,280845
ASC_INITFUNC(7529,281688
ASC_INITFUNC(7581,283621
ASC_INITFUNC(7613,284534
ASC_INITFUNC(7696,286815
ASC_INITFUNC(7776,288927
asc_enqueue(7869,291413
asc_dequeue(7923,293241
asc_dequeue_list(7971,295096
asc_rmqueue(8052,297847
asc_isqueued(8120,300149
asc_execute_queue(8151,300978
asc_prt_board_devices(8194,302378
asc_prt_adv_bios(8235,303476
asc_get_eeprom_string(8307,305787
asc_prt_asc_board_eeprom(8394,307859
asc_prt_adv_board_eeprom(8519,311518
asc_prt_driver_conf(8667,315714
asc_prt_asc_board_info(8806,320481
asc_prt_adv_board_info(8964,325576
asc_proc_copy(9146,331005
asc_prt_line(9183,332320
DvcSleepMilliSecond(9216,333058
DvcEnterCritical(9223,333168
DvcLeaveCritical(9233,333279
DvcGetSGList(9239,333351
DvcPutScsiQ(9266,334060
DvcGetQinfo(9291,334644
DvcOutPortWords(9315,335193
DvcInPortWords(9333,335541
DvcOutPortDWords(9352,335927
ASC_INITFUNC(9369,336222
ASC_INITFUNC(9406,337263
ASC_INITFUNC(9439,338283
DvcGetPhyAddr(9501,339717
ASC_INITFUNC(9522,340253
ASC_INITFUNC(9559,341284
asc_prt_board_stats(9603,342501
asc_prt_scsi_host(9758,347623
asc_prt_scsi_cmnd(9801,348966
asc_prt_asc_dvc_var(9855,350553
asc_prt_asc_dvc_cfg(9897,352001
asc_prt_asc_scsi_q(9924,352790
asc_prt_asc_qdone_info(9962,353888
asc_prt_adv_dvc_var(9980,354396
asc_prt_adv_dvc_cfg(10016,355416
asc_prt_adv_scsi_req_q(10043,356033
asc_prt_adv_sgblock(10101,357883
asc_prt_hex(10133,359007
interrupts_enabled(10191,360354
ASC_INITFUNC(10209,360586
ASC_INITFUNC(10223,360855
ASC_INITFUNC(10243,361316
ASC_INITFUNC(10258,361553
ASC_INITFUNC(10277,362053
ASC_INITFUNC(10312,362899
ASC_INITFUNC(10338,363823
STATIC uchar _isa_pnp_inited ASC_INITDATA 10357,364236
STATIC PortAddr _asc_def_iop_base[10358,364283
STATIC PortAddr _asc_def_iop_base[ASC_IOADR_TABLE_MAX_IX] ASC_INITDATA 10358,364283
ASC_INITFUNC(10364,364494
ASC_INITFUNC(10401,365460
ASC_INITFUNC(10432,366250
ASC_INITFUNC(10444,366431
ASC_INITFUNC(10455,366589
ASC_INITFUNC(10491,367570
ASC_INITFUNC(10532,368844
AscIsrChipHalted(10550,369221
_AscCopyLramScsiDoneQ(10833,380561
AscIsrQDone(10866,381828
AscISR(11003,387658
STATIC uchar _asc_mcode_buf[11089,390720
STATIC uchar _asc_mcode_buf[] ASC_INITDATA 11089,390720
STATIC ushort _asc_mcode_size ASC_INITDATA 11237,407029
STATIC ulong _asc_mcode_chksum ASC_INITDATA 11238,407098
#define ASC_SYN_OFFSET_ONE_DISABLE_LIST 11240,407159
STATIC uchar _syn_offset_one_disable_cmd[11241,407203
AscExeScsiQueue(11262,407569
AscSendScsiQueue(11445,414734
AscSgListToQueue(11495,416530
AscGetNumOfFreeQueue(11509,416800
AscPutReadyQueue(11551,418096
AscPutReadySgListQueue(11596,419874
AscAbortSRB(11677,423101
AscResetDevice(11707,423915
AscResetSB(11780,426647
AscSetRunChipSynRegAtID(11818,427732
AscSetChipSynRegAtID(11835,428126
AscReInitLram(11869,428979
AscInitLram(11879,429143
AscInitQLinkVar(11932,431255
AscSetLibErrorCode(11965,432475
_AscWaitQDone(11981,432871
AscMsgOutSDTR(12004,433437
AscCalSDTRData(12041,434632
AscSetChipSDTR(12061,435118
AscGetSynPeriodIndex(12073,435382
AscAllocFreeQueue(12099,436114
AscAllocMultipleFreeQueue(12120,436740
AscRiscHaltedAbortSRB(12138,437169
AscRiscHaltedAbortTIX(12184,438955
AscHostReqRiscHalt(12227,440553
AscStopQueueExe(12253,441236
AscStartQueueExe(12275,441781
AscCleanUpBusyQueue(12286,441994
AscCleanUpDiscQueue(12309,442631
AscWaitTixISRDone(12332,443248
AscWaitISRDone(12355,443771
AscGetOnePhyAddr(12368,444020
DvcDelayMicroSecond(12388,444510
DvcDelayNanoSecond(12394,444610
ASC_INITFUNC(12399,444721
ASC_INITFUNC(12417,445194
AscStartChip(12458,446288
AscStopChip(12470,446490
AscIsChipHalted(12487,446913
AscSetChipIH(12500,447160
AscAckInterrupt(12512,447370
AscDisableInterrupt(12543,448253
AscEnableInterrupt(12555,448477
AscSetBank(12569,448698
AscResetChipAndScsiBus(12590,449148
ASC_INITFUNC(12611,449835
ASC_INITFUNC(12625,450124
ASC_INITFUNC(12642,450429
ASC_INITFUNC(12666,450990
ASC_INITFUNC(12681,451298
ASC_INITFUNC(12697,451588
ASC_INITFUNC(12711,451907
ASC_INITFUNC(12796,455003
ASC_INITFUNC(12817,455518
ASC_INITFUNC(12880,457777
ASC_INITFUNC(12922,459140
ASC_INITFUNC(13037,463766
ASC_INITFUNC(13192,470096
ASC_INITFUNC(13242,471902
ASC_INITFUNC(13269,472584
ASC_INITFUNC(13294,473091
ASC_INITFUNC(13319,473607
ASC_INITFUNC(13330,473721
ASC_INITFUNC(13341,473838
ASC_INITFUNC(13362,474302
ASC_INITFUNC(13389,475041
ASC_INITFUNC(13430,476131
ASC_INITFUNC(13487,477650
AscAsyncFix(13512,478153
AscTagQueuingSafe(13573,480524
AscInquiryHandling(13587,480864
AscCompareString(13632,482574
AscReadLramByte(13650,482914
AscReadLramWord(13671,483458
AscReadLramDWord(13684,483710
AscWriteLramWord(13700,484113
AscWriteLramDWord(13712,484354
AscWriteLramByte(13729,484756
AscMemWordCopyToLram(13752,485333
AscMemDWordCopyToLram(13765,485650
AscMemWordCopyFromLram(13778,485974
AscMemSumLramWord(13791,486301
AscMemWordSetLram(13808,486639
STATIC unsigned char _adv_mcode_buf[13830,487032
STATIC unsigned char _adv_mcode_buf[] ASC_INITDATA 13830,487032
unsigned short _adv_mcode_size ASC_INITDATA 14119,519338
unsigned long  _adv_mcode_chksum ASC_INITDATA 14121,519425
Default_EEPROM_Config ASC_INITDATA 14133,519793
ASC_INITFUNC(14178,521802
ASC_INITFUNC(14288,524815
ASC_INITFUNC(14623,535786
ASC_INITFUNC(14789,541120
ASC_INITFUNC(14823,541899
ASC_INITFUNC(14837,542212
ASC_INITFUNC(14862,542706
ASC_INITFUNC(14926,544618
AdvExeScsiQueue(14983,546261
AdvResetSB(15005,546736
AdvResetSCSIBus(15020,546973
AdvISR(15067,548711
AdvSendIdleCmd(15223,553695
AdvSendScsiCmd(15306,556030
AdvInquiryHandling(15426,560130

drivers/scsi/hosts.c,640
#define __NO_VERSION__21,513
#define __KERNEL_SYSCALLS__32,738
#define NULL 39,826
#define HOSTS_C42,850
#define AMIGA7XXCONFIG51,1071
#define NO_CONTROLLER 359,6066
Scsi_Host_Template * scsi_hosts 369,6393
static Scsi_Host_Template builtin_scsi_hosts[371,6434
#define MAX_SCSI_HOSTS 597,10167
struct Scsi_Host * scsi_hostlist 605,10351
struct Scsi_Device_Template * scsi_devicelist 606,10392
int max_scsi_hosts 608,10447
int next_scsi_host 609,10471
scsi_unregister(612,10501
struct Scsi_Host * scsi_register(646,11574
scsi_register_device(714,13657
static void launch_error_handler_thread(732,14332
__initfunc(748,14838

drivers/scsi/hosts.h,1182
#define _HOSTS_H22,596
#define SG_NONE 34,892
#define SG_ALL 35,910
#define DISABLE_CLUSTERING 37,931
#define ENABLE_CLUSTERING 38,960
typedef struct scsi_disk Disk;Disk55,1586
typedef struct	SHTSHT57,1618
} Scsi_Host_Template;Scsi_Host_Template280,10079
struct Scsi_HostScsi_Host291,10497
extern struct Scsi_Host * scsi_hostlist;404,14418
extern struct Scsi_Device_Template * scsi_devicelist;405,14459
extern Scsi_Host_Template * scsi_hosts;407,14514
extern int next_scsi_host;426,15033
extern int scsi_loadable_module_flag;428,15061
#define BLANK_HOST 435,15310
struct Scsi_Device_TemplateScsi_Device_Template437,15368
extern struct Scsi_Device_Template sd_template;457,16183
extern struct Scsi_Device_Template st_template;458,16231
extern struct Scsi_Device_Template sr_template;459,16279
extern struct Scsi_Device_Template sg_template;460,16327
#define MODULE_SCSI_HA 469,16642
#define MODULE_SCSI_CONST 470,16667
#define MODULE_SCSI_IOCTL 471,16695
#define MODULE_SCSI_DEV 472,16723
#define SD_EXTRA_DEVS 485,17238
#define SD_EXTRA_DEVS 487,17269
#define ST_EXTRA_DEVS 489,17300
#define SR_EXTRA_DEVS 490,17324
#define SG_EXTRA_DEVS 491,17348

drivers/scsi/eata.c,4986
#define LinuxVersionCode(LinuxVersionCode356,17389
#define MAX_INT_PARAM 357,17448
#define __initfunc(__initfunc404,18536
#define __initdata405,18560
#define __init406,18579
#define IRQ_FLAGS411,18680
#define IRQ_LOCK412,18698
#define IRQ_LOCK_SAVE413,18715
#define IRQ_UNLOCK414,18737
#define IRQ_UNLOCK_RESTORE415,18756
#define SPIN_FLAGS 416,18783
#define SPIN_LOCK 417,18828
#define SPIN_LOCK_SAVE 418,18879
#define SPIN_UNLOCK 419,18951
#define SPIN_UNLOCK_RESTORE 420,19006
static int use_new_eh_code 422,19108
#define IRQ_FLAGS 424,19149
#define IRQ_LOCK 425,19192
#define IRQ_LOCK_SAVE 426,19216
#define IRQ_UNLOCK 427,19284
#define IRQ_UNLOCK_RESTORE 428,19310
#define SPIN_FLAGS429,19379
#define SPIN_LOCK430,19398
#define SPIN_LOCK_SAVE431,19416
#define SPIN_UNLOCK432,19439
#define SPIN_UNLOCK_RESTORE433,19459
static int use_new_eh_code 434,19487
struct proc_dir_entry proc_scsi_eata2x 437,19531
#define ISA 443,19672
#define ESA 444,19687
#define MAX_ISA 457,19927
#define MAX_VESA 458,19945
#define MAX_EISA 459,19964
#define MAX_PCI 460,19984
#define MAX_BOARDS 461,20003
#define MAX_CHANNEL 462,20064
#define MAX_LUN 463,20086
#define MAX_TARGET 464,20105
#define MAX_MAILBOXES 465,20127
#define MAX_SGLIST 466,20152
#define MAX_LARGE_SGLIST 467,20174
#define MAX_INTERNAL_RETRIES 468,20203
#define MAX_CMD_PER_LUN 469,20235
#define MAX_TAGGED_CMD_PER_LUN 470,20261
#define SKIP 472,20327
#define FALSE 473,20350
#define TRUE 474,20366
#define FREE 475,20381
#define IN_USE 476,20396
#define LOCKED 477,20415
#define IN_RESET 478,20434
#define IGNORE 479,20453
#define READY 480,20472
#define ABORTING 481,20491
#define NO_DMA 482,20510
#define MAXLOOP 483,20531
#define TAG_MIXED 484,20554
#define TAG_SIMPLE 485,20577
#define TAG_HEAD 486,20600
#define TAG_ORDERED 487,20623
#define REG_CMD 489,20647
#define REG_STATUS 490,20673
#define REG_AUX_STATUS 491,20699
#define REG_DATA 492,20725
#define REG_DATA2 493,20751
#define REG_SEE 494,20777
#define REG_LOW 495,20803
#define REG_LM 496,20829
#define REG_MID 497,20855
#define REG_MSB 498,20881
#define REGION_SIZE 499,20907
#define MAX_ISA_ADDR 500,20933
#define MIN_EISA_ADDR 501,20964
#define MAX_EISA_ADDR 502,20995
#define BSY_ASSERTED 503,21026
#define DRQ_ASSERTED 504,21057
#define ABSY_ASSERTED 505,21088
#define IRQ_ASSERTED 506,21119
#define READ_CONFIG_PIO 507,21150
#define SET_CONFIG_PIO 508,21181
#define SEND_CP_PIO 509,21212
#define RECEIVE_SP_PIO 510,21243
#define TRUNCATE_XFR_PIO 511,21274
#define RESET_PIO 512,21305
#define READ_CONFIG_DMA 513,21336
#define SET_CONFIG_DMA 514,21367
#define SEND_CP_DMA 515,21398
#define ASOK 516,21429
#define ASST 517,21460
#define ARRAY_SIZE(ARRAY_SIZE519,21492
#define YESNO(YESNO520,21549
#define TLDEV(TLDEV521,21584
#define EATA_SIGNATURE 524,21684
#define EATA_2_0A_SIZE 527,21791
#define EATA_2_0B_SIZE 528,21817
#define EATA_2_0C_SIZE 529,21843
struct eata_info eata_info532,21897
struct eata_config eata_config581,24283
struct mssp mssp592,24732
struct sg_list sg_list602,25140
struct mscp mscp608,25321
struct hostdata hostdata643,27122
static struct Scsi_Host *sh[661,28271
static const char *driver_name 662,28316
static char sha[663,28357
static unsigned int num_boards 666,28466
static unsigned long io_port[668,28512
static unsigned long io_port[] __initdata 668,28512
#define HD(HD692,29190
#define BN(BN693,29251
#define H2DEV(H2DEV695,29294
#define DEV2H(DEV2H696,29320
#define V2DEV(V2DEV697,29346
#define DEV2V(DEV2V698,29414
static int do_trace 702,29636
static int setup_done 703,29665
static int link_statistics 704,29696
static int tag_mode 705,29728
static int ext_tran 706,29761
static int rev_scan 707,29790
static int tagged_comm 710,29862
static int tagged_comm 712,29899
static int linked_comm 716,29985
static int linked_comm 718,30022
static int max_queue_depth 722,30101
static int max_queue_depth 724,30163
static void select_queue_depths(727,30217
static inline int wait_on_busy(789,31926
static inline int do_dma(799,32142
static inline int read_pio(814,32595
__initfunc 832,32964
__initfunc 870,33914
__initfunc 1155,43126
__initfunc 1191,44188
__initfunc 1257,46010
static inline void build_sg_list(1288,46658
static inline int do_qcomm(1303,47114
int eata2x_queuecommand(1440,51331
static inline int do_old_abort(1450,51517
int eata2x_old_abort(1516,53688
static inline int do_abort(1528,53895
int eata2x_abort(1600,56131
static inline int do_old_reset(1607,56225
int eata2x_old_reset(1748,60309
static inline int do_reset(1760,60542
int eata2x_reset(1891,64302
int eata2x_biosparam(1898,64396
static void sort(1915,64828
static inline int reorder(1940,65357
static void flush_dev(2038,68981
static inline void ihdlr(2075,70059
static void do_interrupt_handler(2291,77481
int eata2x_release(2306,77845
Scsi_Host_Template driver_template 2331,78471

drivers/scsi/scsi.h,5985
#define _SCSI_H16,425
# define TRUE 36,836
# define FALSE 39,873
#define MAX_SCSI_DEVICE_CODE 42,898
extern const char *const scsi_device_types[43,930
    #define SCSI_TIMEOUT 46,1010
    #define SCSI_TIMEOUT 48,1048
#define status_byte(status_byte61,1387
#define msg_byte(msg_byte62,1440
#define host_byte(host_byte63,1493
#define driver_byte(driver_byte64,1547
#define suggestion(suggestion65,1601
#define sense_class(sense_class67,1667
#define sense_error(sense_error68,1718
#define sense_valid(sense_valid69,1762
#define NEEDS_RETRY 71,1809
#define SUCCESS 72,1840
#define FAILED 73,1871
#define QUEUED 74,1902
#define SOFT_ERROR 75,1933
#define ADD_TO_MLQUEUE 76,1964
#define SCSI_STATE_TIMEOUT 81,2058
#define SCSI_STATE_FINISHED 82,2100
#define SCSI_STATE_FAILED 83,2142
#define SCSI_STATE_QUEUED 84,2184
#define SCSI_STATE_UNUSED 85,2226
#define SCSI_STATE_DISCONNECTING 86,2268
#define SCSI_STATE_INITIALIZING 87,2310
#define SCSI_STATE_BHQUEUE 88,2352
#define SCSI_STATE_MLQUEUE 89,2394
#define SCSI_OWNER_HIGHLEVEL 95,2564
#define SCSI_OWNER_MIDLEVEL 96,2604
#define SCSI_OWNER_LOWLEVEL 97,2644
#define SCSI_OWNER_ERROR_HANDLER 98,2684
#define SCSI_OWNER_BH_HANDLER 99,2724
#define SCSI_OWNER_NOBODY 100,2764
#define COMMAND_SIZE(COMMAND_SIZE102,2805
#define IDENTIFY_BASE 104,2874
#define IDENTIFY(IDENTIFY105,2907
#define SCSI_LOG_ERROR_SHIFT 122,3707
#define SCSI_LOG_TIMEOUT_SHIFT 123,3751
#define SCSI_LOG_SCAN_SHIFT 124,3795
#define SCSI_LOG_MLQUEUE_SHIFT 125,3839
#define SCSI_LOG_MLCOMPLETE_SHIFT 126,3883
#define SCSI_LOG_LLQUEUE_SHIFT 127,3928
#define SCSI_LOG_LLCOMPLETE_SHIFT 128,3973
#define SCSI_LOG_HLQUEUE_SHIFT 129,4018
#define SCSI_LOG_HLCOMPLETE_SHIFT 130,4063
#define SCSI_LOG_IOCTL_SHIFT 131,4108
#define SCSI_LOG_ERROR_BITS 133,4154
#define SCSI_LOG_TIMEOUT_BITS 134,4198
#define SCSI_LOG_SCAN_BITS 135,4242
#define SCSI_LOG_MLQUEUE_BITS 136,4286
#define SCSI_LOG_MLCOMPLETE_BITS 137,4330
#define SCSI_LOG_LLQUEUE_BITS 138,4374
#define SCSI_LOG_LLCOMPLETE_BITS 139,4418
#define SCSI_LOG_HLQUEUE_BITS 140,4462
#define SCSI_LOG_HLCOMPLETE_BITS 141,4506
#define SCSI_LOG_IOCTL_BITS 142,4550
#define SCSI_CHECK_LOGGING(SCSI_CHECK_LOGGING146,4620
#define SCSI_SET_LOGGING(SCSI_SET_LOGGING157,5113
#define SCSI_SET_LOGGING(SCSI_SET_LOGGING173,5619
#define SCSI_CHECK_LOGGING(SCSI_CHECK_LOGGING175,5665
#define SCSI_LOG_ERROR_RECOVERY(SCSI_LOG_ERROR_RECOVERY188,6220
#define SCSI_LOG_TIMEOUT(SCSI_LOG_TIMEOUT190,6348
#define SCSI_LOG_SCAN_BUS(SCSI_LOG_SCAN_BUS192,6473
#define SCSI_LOG_MLQUEUE(SCSI_LOG_MLQUEUE194,6593
#define SCSI_LOG_MLCOMPLETE(SCSI_LOG_MLCOMPLETE196,6718
#define SCSI_LOG_LLQUEUE(SCSI_LOG_LLQUEUE198,6852
#define SCSI_LOG_LLCOMPLETE(SCSI_LOG_LLCOMPLETE200,6977
#define SCSI_LOG_HLQUEUE(SCSI_LOG_HLQUEUE202,7111
#define SCSI_LOG_HLCOMPLETE(SCSI_LOG_HLCOMPLETE204,7236
#define SCSI_LOG_IOCTL(SCSI_LOG_IOCTL206,7370
#define SCSI_SET_ERROR_RECOVERY_LOGGING(SCSI_SET_ERROR_RECOVERY_LOGGING210,7495
#define SCSI_SET_TIMEOUT_LOGGING(SCSI_SET_TIMEOUT_LOGGING212,7621
#define SCSI_SET_SCAN_BUS_LOGGING(SCSI_SET_SCAN_BUS_LOGGING214,7744
#define SCSI_SET_MLQUEUE_LOGGING(SCSI_SET_MLQUEUE_LOGGING216,7862
#define SCSI_SET_MLCOMPLETE_LOGGING(SCSI_SET_MLCOMPLETE_LOGGING218,7985
#define SCSI_SET_LLQUEUE_LOGGING(SCSI_SET_LLQUEUE_LOGGING220,8117
#define SCSI_SET_LLCOMPLETE_LOGGING(SCSI_SET_LLCOMPLETE_LOGGING222,8240
#define SCSI_SET_HLQUEUE_LOGGING(SCSI_SET_HLQUEUE_LOGGING224,8372
#define SCSI_SET_HLCOMPLETE_LOGGING(SCSI_SET_HLCOMPLETE_LOGGING226,8495
#define SCSI_SET_IOCTL_LOGGING(SCSI_SET_IOCTL_LOGGING228,8627
#define DID_OK 251,9337
#define DID_NO_CONNECT 252,9412
#define DID_BUS_BUSY 253,9487
#define DID_TIME_OUT 254,9562
#define DID_BAD_TARGET 255,9637
#define DID_ABORT 256,9712
#define DID_PARITY 257,9787
#define DID_ERROR 258,9862
#define DID_RESET 259,9937
#define DID_BAD_INTR 260,10012
#define DID_PASSTHROUGH 261,10088
#define DID_SOFT_ERROR 262,10163
#define DRIVER_OK 263,10238
#define DRIVER_BUSY 269,10390
#define DRIVER_SOFT 270,10423
#define DRIVER_MEDIA 271,10456
#define DRIVER_ERROR 272,10489
#define DRIVER_INVALID 274,10527
#define DRIVER_TIMEOUT 275,10560
#define DRIVER_HARD 276,10593
#define DRIVER_SENSE	277,10626
#define SUGGEST_RETRY 279,10657
#define SUGGEST_ABORT 280,10690
#define SUGGEST_REMAP 281,10724
#define SUGGEST_DIE 282,10757
#define SUGGEST_SENSE 283,10790
#define SUGGEST_IS_OK 284,10823
#define DRIVER_MASK 286,10857
#define SUGGEST_MASK 287,10890
#define MAX_COMMAND_SIZE 289,10924
#define SCSI_UNKNOWN 295,10986
#define SCSI_1 296,11012
#define SCSI_1_CCS 297,11038
#define SCSI_2 298,11064
#define WAS_RESET 314,11504
#define WAS_TIMEDOUT 315,11533
#define WAS_SENSE 316,11562
#define IS_RESETTING 317,11591
#define IS_ABORTING 318,11620
#define ASKED_FOR_SENSE 319,11649
#define SYNC_RESET 320,11678
#define CONTIGUOUS_BUFFERS(CONTIGUOUS_BUFFERS324,11782
#define CONTIGUOUS_BUFFERS(CONTIGUOUS_BUFFERS327,11894
typedef struct scsi_device Scsi_Device;Scsi_Device340,12222
typedef struct scsi_cmnd   Scsi_Cmnd;Scsi_Cmnd341,12262
extern unsigned int scsi_logging_level;357,12548
extern unsigned int scsi_dma_free_sectors;358,12610
extern unsigned int scsi_need_isa_buffer;359,12690
extern volatile int in_scan_scsis;362,12835
extern const unsigned char scsi_command_size[363,12870
extern int max_scsi_hosts;398,14106
struct scsi_device scsi_device412,14483
typedef struct scsi_pointer scsi_pointer477,17586
} Scsi_Pointer;Scsi_Pointer488,17994
struct scsi_cmnd scsi_cmnd491,18012
#define SCSI_MLQUEUE_HOST_BUSY 625,23597
#define SCSI_MLQUEUE_DEVICE_BUSY 626,23637
static Scsi_Cmnd * end_scsi_request(635,23895
#define CHECK_INITREQ_SD_MAJOR(CHECK_INITREQ_SD_MAJOR694,25449
#define CHECK_INITREQ_SD_MAJOR(CHECK_INITREQ_SD_MAJOR696,25516
#define INIT_SCSI_REQUEST 699,25584
#define SCSI_SLEEP(SCSI_SLEEP712,26034

drivers/scsi/scsi_debug.c,1561
struct proc_dir_entry proc_scsi_scsi_debug 37,775
#define NR_HOSTS_PRESENT 45,949
#define NR_FAKE_DISKS 46,977
#define N_HEAD 47,1003
#define N_SECTOR 48,1030
#define DISK_READONLY(DISK_READONLY49,1057
#define DISK_REMOVEABLE(DISK_REMOVEABLE50,1093
#define SPEEDY57,1353
#define CLEAR59,1419
static int NR_REAL=62,1502
#define NR_BLK_DEV 64,1526
#define MAJOR_NR 66,1566
#define START_PARTITION 68,1592
#define DISK_SPEED 71,1679
#define CAPACITY 72,1705
static int starts[74,1733
static int npart 75,1804
#define DEB(DEB79,1864
#define DEB(DEB81,1887
#define VERIFY1_DEBUG(VERIFY1_DEBUG85,1924
#define VERIFY_DEBUG(VERIFY_DEBUG86,1951
#define VERIFY1_DEBUG(VERIFY1_DEBUG89,1984
#define VERIFY_DEBUG(VERIFY_DEBUG103,2624
typedef void (*done_fct_t)done_fct_t122,3697
static volatile done_fct_t do_done[124,3739
static struct timer_list timeout[128,3861
Scsi_Cmnd * SCint[130,3918
static char SCrst[131,3969
static int scsi_debug_lockup 136,4068
static char sense_buffer[138,4103
static void scsi_dump(140,4142
int scsi_debug_queuecommand(185,5435
volatile static int internal_done_flag 497,13756
volatile static int internal_done_errcode 498,13800
static void internal_done(499,13847
int scsi_debug_command(505,13966
static void scsi_debug_intr_handle(518,14383
int scsi_debug_detect(554,15158
int scsi_debug_abort(566,15384
int scsi_debug_biosparam(593,15903
int scsi_debug_reset(602,16135
const char *scsi_debug_info(626,16796
int scsi_debug_proc_info(635,17028
Scsi_Host_Template driver_template 702,18917

drivers/scsi/scsi_debug.h,122
	#define NULL 15,439
#define SCSI_DEBUG_MAILBOXES 19,464
#define SCSI_DEBUG_CANQUEUE 25,620
#define SCSI_DEBUG 27,654

drivers/scsi/scsi_ioctl.c,496
#define __NO_VERSION__1,0
#define NORMAL_RETRIES 21,386
#define NORMAL_TIMEOUT 22,414
#define FORMAT_UNIT_TIMEOUT 23,447
#define START_STOP_TIMEOUT 24,494
#define MOVE_MEDIUM_TIMEOUT 25,531
#define READ_ELEMENT_STATUS_TIMEOUT 26,573
#define MAX_BUF 28,624
#define max(max30,651
static int ioctl_probe(39,930
static void scsi_ioctl_done 91,2612
static int ioctl_internal_command(103,2853
int scsi_ioctl_send_command(178,5172
int scsi_ioctl 355,9866
int kernel_scsi_ioctl 463,13408

drivers/scsi/aic7xxx.c,11348
#define AIC7XXX_FAKE_NEGOTIATION_CMDS256,14386
#define AIC7XXX_STRICT_PCI_SETUP287,15752
#define VIRT_TO_BUS(VIRT_TO_BUS349,17471
struct proc_dir_entry proc_scsi_aic7xxx 351,17534
#define AIC7XXX_C_VERSION 357,17709
#define NUMBER(NUMBER359,17746
#define MIN(MIN360,17801
#define MAX(MAX361,17851
#define ALL_TARGETS 362,17901
#define ALL_CHANNELS 363,17924
#define ALL_LUNS 364,17948
#define MAX_TARGETS 365,17968
#define MAX_LUNS 366,17992
#  define TRUE 368,18028
#  define FALSE 371,18066
#  define KERNEL_VERSION(KERNEL_VERSION375,18115
#  define MMAPIO391,18569
#  define mb(mb395,18621
#  define MMAPIO398,18710
#  define mb(mb402,18762
#  define mb(mb408,18905
#  define cpuid 415,19075
#    define DRIVER_LOCK_INIT 417,19160
#    define DRIVER_LOCK 419,19229
#    define DRIVER_UNLOCK 426,19457
#    define DRIVER_LOCK_INIT430,19597
#    define DRIVER_LOCK431,19626
#    define DRIVER_UNLOCK432,19650
#  define cpuid 435,19691
#  define DRIVER_LOCK_INIT436,19709
#  define DRIVER_LOCK 437,19736
#  define DRIVER_UNLOCK 440,19806
#  define le32_to_cpu(le32_to_cpu442,19865
#  define cpu_to_le32(cpu_to_le32443,19894
#define AIC7XXX_CMDS_PER_LUN 451,20073
#define AIC7XXX_CMDS_PER_LUN 453,20136
#define AIC7XXX_RESET_DELAY 458,20271
#define AIC7XXX_RESET_DELAY 460,20332
#define AIC7XXX_PROC_STATS470,20641
} adapter_tag_info_t;adapter_tag_info_t510,22618
#define DEFAULT_TAG_COMMANDS 516,22733
static const char *board_names[560,24481
#define DID_UNDERFLOW 593,26489
#define DID_RETRY_COMMAND 608,27136
#define HSCSIID 610,27173
#define SCSI_RESET 611,27201
#define MINSLOT 616,27259
#define MAXSLOT 617,27292
#define SLOTBASE(SLOTBASE618,27326
#define BASE_TO_SLOT(BASE_TO_SLOT619,27365
#define AHC_HID0 624,27464
#define AHC_HID1 625,27538
#define AHC_HID2 626,27612
#define AHC_HID3 627,27686
#define MINREG 632,27812
#define MAXREG 633,27848
#define INTDEF 635,27885
#define        CLASS_PROGIF_REVID 640,27995
#define                DEVREVID 641,28041
#define                PROGINFC 642,28093
#define                SUBCLASS 643,28145
#define                BASECLASS 644,28197
#define        CSIZE_LATTIME 646,28251
#define                CACHESIZE 647,28300
#define                LATTIME 648,28378
#define        DEVCONFIG 650,28438
#define                SCBSIZE32 651,28483
#define                MPORTMODE 652,28562
#define                RAMPSM 653,28641
#define                RAMPSM_ULTRA2 654,28720
#define                VOLSENSE 655,28771
#define                SCBRAMSEL 656,28824
#define                SCBRAMSEL_ULTRA2 657,28877
#define                MRDCEN 658,28928
#define                EXTSCBTIME 659,28981
#define                EXTSCBPEN 660,29060
#define                BERREN 661,29139
#define                DACEN 662,29192
#define                STPWLEVEL 663,29245
#define                DIFACTNEGEN 664,29298
#define        SCAMCTL 666,29378
#define        CCSCBBADDR 667,29457
typedef enum {C46 = 6, C56_66 = 8} seeprom_chip_type;seeprom_chip_type678,29950
struct seeprom_config seeprom_config685,30075
#define CFXFER 690,30138
#define CFSYNCH 691,30212
#define CFDISC 692,30288
#define CFWIDEB 693,30357
#define CFSYNCHISULTRA 694,30433
#define CFNEWULTRAFORMAT 695,30507
#define CFSTART 696,30585
#define CFINCBIOS 697,30662
#define CFRNFOUND 698,30731
#define CFMULTILUN 699,30804
#define CFWBCACHEYES 700,30881
#define CFWBCACHENC 701,30960
#define CFSUPREM 708,31159
#define CFSUPREMB 709,31226
#define CFBIOSEN 710,31303
#define CFSM2DRV 712,31389
#define CF284XEXTEND 713,31456
#define CFEXTEND 715,31563
#define CFAUTOTERM 722,31748
#define CFULTRAEN 723,31811
#define CF284XSELTO 724,31887
#define CF284XFIFO 725,31956
#define CFSTERM 726,32022
#define CFWSTERM 727,32086
#define CFSPARITY 728,32163
#define CF284XSTERM 729,32213
#define CFRESETB 730,32290
#define CFBPRIMARY 731,32351
#define CFSEAUTOTERM 732,32424
#define CFLVDSTERM 733,32491
#define CFSCSIID 740,32683
#define CFBRTIME 742,32791
#define CFMAXTARG 748,32944
#define SELBUS_MASK 756,33221
#define         SELNARROW 757,33261
#define         SELBUSB 758,33299
#define SINGLE_BUS 759,33343
#define SCB_TARGET(SCB_TARGET761,33383
#define SCB_LUN(SCB_LUN763,33471
#define SCB_IS_SCSIBUS_B(SCB_IS_SCSIBUS_B765,33552
#define aic7xxx_error(aic7xxx_error774,33919
#define aic7xxx_status(aic7xxx_status779,34027
#define aic7xxx_position(aic7xxx_position784,34159
static struct aic7xxx_host *first_aic7xxx 789,34274
struct hw_scatterlist hw_scatterlist796,34499
#define        AIC7XXX_MAX_SG 804,34639
#define AIC7XXX_MAXSCB 811,34832
struct aic7xxx_hwscb aic7xxx_hwscb814,34868
#define SCB_PIO_TRANSFER_SIZE 830,35608
} scb_flag_type;scb_flag_type863,37163
#define AHC_IN_ISR_BIT 898,38747
} ahc_flag_type;ahc_flag_type903,38977
} ahc_chip;ahc_chip919,39439
} ahc_feature;ahc_feature941,40217
struct aic7xxx_scb aic7xxx_scb943,40233
} scb_queue_type;scb_queue_type968,41400
} hard_error[973,41481
generic_sense[985,41909
} scb_data_type;scb_data_type998,42500
struct target_cmd target_cmd1000,42518
#define AHC_TRANS_CUR 1005,42602
#define AHC_TRANS_ACTIVE 1006,42634
#define AHC_TRANS_GOAL 1007,42666
#define AHC_TRANS_USER 1008,42698
#define AHC_TRANS_QUITE 1009,42730
} transinfo_type;transinfo_type1020,43034
struct aic7xxx_host aic7xxx_host1032,43632
#define  DEVICE_PRESENT 1071,45161
#define  BUS_DEVICE_RESET_PENDING 1072,45206
#define  DEVICE_RESET_DELAY 1073,45251
#define  DEVICE_PRINT_SDTR 1074,45296
#define  DEVICE_PRINT_WDTR 1075,45341
#define  DEVICE_WAS_BUSY 1076,45386
#define  DEVICE_SCANNED 1077,45431
#define MSG_TYPE_NONE 1107,46539
#define MSG_TYPE_INITIATOR_MSGOUT 1108,46579
#define MSG_TYPE_INITIATOR_MSGIN 1109,46619
#define AHC_SYNCRATE_ULTRA2 1195,50408
#define AHC_SYNCRATE_ULTRA 1196,50438
#define AHC_SYNCRATE_FAST 1197,50468
static struct aic7xxx_syncrate aic7xxx_syncrate1198,50498
#define                ULTRA_SXFR 1200,50582
} aic7xxx_syncrates[1205,50700
#define CTL_OF_SCB(CTL_OF_SCB1222,51344
#define CTL_OF_CMD(CTL_OF_CMD1226,51559
#define TARGET_INDEX(TARGET_INDEX1230,51706
#define WARN_LEAD 1236,51848
#define INFO_LEAD 1237,51900
static unsigned int aic7xxx_no_reset 1251,52317
static int aic7xxx_reverse_scan 1269,53442
static unsigned int aic7xxx_extended 1275,53664
static int aic7xxx_irq_trigger 1282,53900
static int aic7xxx_override_term 1316,55909
static int aic7xxx_stpwlev 1343,57523
static int aic7xxx_panic_on_abort 1348,57697
static int aic7xxx_pci_parity 1364,58429
static int aic7xxx_dump_card 1374,58791
static int aic7xxx_dump_sequencer 1382,59159
static int aic7xxx_no_probe 1393,59754
static char * aic7xxx 1399,59880
static char dummy_buffer[1409,60180
static adapter_tag_info_t aic7xxx_tag_info[1422,60769
#define VERBOSE_NORMAL 1442,61237
#define VERBOSE_NEGOTIATION 1443,61275
#define VERBOSE_SEQINT 1444,61313
#define VERBOSE_SCSIINT 1445,61351
#define VERBOSE_PROBE 1446,61389
#define VERBOSE_PROBE2 1447,61427
#define VERBOSE_NEGOTIATION2 1448,61465
#define VERBOSE_MINOR_ERROR 1449,61503
#define VERBOSE_TRACING 1450,61541
#define VERBOSE_ABORT 1451,61579
#define VERBOSE_ABORT_MID 1452,61617
#define VERBOSE_ABORT_FIND 1453,61655
#define VERBOSE_ABORT_PROCESS 1454,61693
#define VERBOSE_ABORT_RETURN 1455,61731
#define VERBOSE_RESET 1456,61769
#define VERBOSE_RESET_MID 1457,61807
#define VERBOSE_RESET_FIND 1458,61845
#define VERBOSE_RESET_PROCESS 1459,61883
#define VERBOSE_RESET_RETURN 1460,61921
static int aic7xxx_verbose 1461,61959
mdelay(1491,63255
time_after_eq(1500,63363
timer_pending(1506,63469
#define PCI_DEVICE_ID_ADAPTEC_1480A 1511,63547
aic_inb(1516,63627
aic_outb(1536,63883
aic7xxx_setup(1563,64507
pause_sequencer(1702,68748
unpause_sequencer(1720,69217
restart_sequencer(1739,69810
aic7xxx_check_patch(1763,70616
aic7xxx_download_instr(1812,71849
aic7xxx_loadseq(1940,75132
aic7xxx_print_sequencer(1998,76672
aic7xxx_delay(2044,77880
aic7xxx_info(2057,78202
aic7xxx_find_syncrate(2086,79004
aic7xxx_find_period(2133,80424
aic7xxx_validate_offset(2175,81417
aic7xxx_set_syncrate(2207,82198
aic7xxx_set_width(2323,85295
scbq_init(2392,87207
scbq_insert_head(2407,87572
scbq_remove_head(2430,88211
scbq_remove(2456,88872
scbq_insert_tail(2503,89942
aic7xxx_match_scb(2530,90917
aic7xxx_add_curscb_to_free_list(2565,92156
aic7xxx_rem_scb_from_disc_list(2587,92810
aic7xxx_busy_target(2623,93613
aic7xxx_index_busy_target(2637,94092
aic7xxx_find_scb(2661,94798
aic7xxx_allocate_scb(2693,95588
aic7xxx_queue_cmd_complete(2780,98507
aic7xxx_done_cmds_complete(2794,98931
aic7xxx_free_scb(2830,99799
aic7xxx_done(2853,100424
#define WIDE_INQUIRY_BITS 2890,101339
#define SYNC_INQUIRY_BITS 2891,101370
aic7xxx_run_done_queue(3161,110051
aic7xxx_abort_waiting_scb(3198,111148
aic7xxx_search_qinfifo(3247,112361
aic7xxx_scb_on_qoutfifo(3343,115202
aic7xxx_reset_device(3374,116332
aic7xxx_clear_intstat(3798,129843
aic7xxx_reset_current_bus(3815,130476
aic7xxx_reset_channel(3852,131596
aic7xxx_run_waiting_queues(3978,134996
#define  DPE 4042,136480
#define  SSE 4043,136498
#define  RMA 4044,136516
#define  RTA 4045,136534
#define  STA 4046,136552
#define  DPR 4047,136570
aic7xxx_pci_intr(4061,137098
aic7xxx_timer(4115,139146
aic7xxx_construct_sdtr(4198,141534
aic7xxx_construct_wdtr(4218,142192
aic7xxx_calculate_residual 4235,142751
aic7xxx_handle_device_reset(4296,144656
aic7xxx_handle_seqint(4329,145762
aic7xxx_parse_msg(5200,180268
aic7xxx_handle_reqinit(5507,190261
aic7xxx_handle_scsiint(5625,193956
aic7xxx_check_scbs(5956,203558
#define SCB_NO_LIST 5962,203759
#define SCB_FREE_LIST 5963,203781
#define SCB_WAITING_LIST 5964,203805
#define SCB_DISCONNECTED_LIST 5965,203832
#define SCB_CURRENTLY_ACTIVE 5966,203864
aic7xxx_isr(6110,207825
do_aic7xxx_isr(6324,214216
aic7xxx_device_queue_depth(6381,216118
aic7xxx_select_queue_depth(6473,219131
aic7xxx_probe(6530,221169
read_284x_seeprom(6613,223545
#define CLOCK_PULSE(CLOCK_PULSE6625,223871
acquire_seeprom(6744,227187
release_seeprom(6778,228080
read_seeprom(6834,230999
#define CLOCK_PULSE(CLOCK_PULSE6846,231322
write_brdctl(6978,234725
read_brdctl(7019,235656
aic785x_cable_detect(7049,236391
aic787x_cable_detect(7076,237189
aic7xxx_ultra2_term_detect(7123,238567
configure_termination(7147,239350
detect_maxscb(7345,246013
aic7xxx_register(7408,247874
aic7xxx_chip_reset(7942,263313
aic7xxx_alloc(7996,264826
aic7xxx_free(8054,266375
aic7xxx_load_seeprom(8110,267861
aic7xxx_detect(8497,279978
aic7xxx_negotiation_complete(9617,320173
aic7xxx_build_negotiation_cmnd(9631,320603
aic7xxx_print_scb(9719,323560
aic7xxx_buildscb(9742,324030
aic7xxx_queue(9941,330007
aic7xxx_bus_device_reset(10053,333196
aic7xxx_panic_abort(10238,339714
aic7xxx_abort(10384,344568
aic7xxx_reset(10754,358774
#define DEVICE_RESET 10763,359011
#define BUS_RESET 10764,359037
#define HOST_RESET 10765,359063
#define FAIL 10766,359089
#define RESET_DELAY 10767,359115
aic7xxx_biosparam(11035,367567
aic7xxx_release(11074,368543
aic7xxx_print_card(11124,369731
aic7xxx_print_scratch_ram(11283,374633
Scsi_Host_Template driver_template 11318,375234

drivers/scsi/sd.c,1859
#define MODULE_FLAG 29,866
#define MODULE_FLAG 31,894
#define MAJOR_NR 47,1206
#define SD_MAJOR(SD_MAJOR61,1448
#define SCSI_DISKS_PER_MAJOR	63,1521
#define SD_MAJOR_NUMBER(SD_MAJOR_NUMBER64,1553
#define SD_MINOR_NUMBER(SD_MINOR_NUMBER65,1599
#define MKDEV_SD_PARTITION(MKDEV_SD_PARTITION66,1638
#define MKDEV_SD(MKDEV_SD67,1705
#define N_USED_SCSI_DISKS 68,1763
#define N_USED_SD_MAJORS 69,1839
#define MAX_RETRIES 71,1910
#define SD_TIMEOUT 77,2016
#define SD_MOD_TIMEOUT 78,2045
#define CLUSTERABLE_DEVICE(CLUSTERABLE_DEVICE80,2079
struct hd_struct * sd;83,2176
Scsi_Disk * rscsi_disks 85,2200
static int * sd_sizes;86,2232
static int * sd_blocksizes;87,2255
static int * sd_hardsizes;88,2283
static void sd_devname(105,2781
struct Scsi_Device_Template sd_template 122,3221
static int sd_open(129,3406
static int sd_release(203,5596
static struct file_operations sd_fops 226,6225
static struct gendisk sd_gendisk 248,7099
static struct gendisk *sd_gendisks 262,7745
#define SD_GENDISK(SD_GENDISK264,7796
#define LAST_SD_GENDISK 265,7861
static void sd_geninit 267,7921
static void rw_intr 282,8306
static void do_sd_request 530,16312
static void requeue_sd_request 645,20232
static int check_scsidisk_media_change(1048,33475
static void sd_init_done 1112,35607
static int sd_init_onedisk(1124,35834
static int sd_registered 1474,45986
static int sd_init(1476,46017
static struct request **sd_get_queue 1552,48627
static void sd_finish(1557,48726
static int sd_detect(1608,50297
static int sd_attach(1621,50685
#define DEVICE_BUSY 1645,51268
#define USAGE 1646,51321
#define CAPACITY 1647,51376
#define MAYBE_REINIT 1648,51422
int revalidate_scsidisk(1657,51842
static int fop_revalidate_scsidisk(1708,53210
static void sd_detach(1713,53302
int init_module(1754,54268
void cleanup_module(1759,54400

drivers/scsi/sd.h,275
#define _SD_H13,275
extern struct hd_struct * sd;26,489
typedef struct scsi_disk scsi_disk28,520
} Scsi_Disk;Scsi_Disk39,1141
extern Scsi_Disk * rscsi_disks;41,1155
#define N_SD_MAJORS	45,1247
#define SD_MAJOR_MASK	47,1270
#define SD_PARTITION(SD_PARTITION48,1310

drivers/scsi/sd_ioctl.c,46
#define MAJOR_NR	16,243
int sd_ioctl(24,441

drivers/scsi/aha152x.c,3131
#define MODULE324,11500
struct proc_dir_entry proc_scsi_aha152x 352,11956
#define AUTOCONF362,12197
#define DEBUG_SELECTION396,13433
#define DEBUG_PHASES397,13457
#define DEBUG_RESET398,13478
#define DEBUG_ABORT399,13498
#define DEBUG_DEFAULT 401,13519
extern long loops_per_sec;407,13598
#define DELAY_DEFAULT 409,13626
#define P_BUSFREE 412,13699
#define P_PARITY 413,13720
#define IRQ_MIN 416,13767
#define IRQ_MAX 417,13785
#define IRQS 418,13804
  not_issued 421,13846
  not_issued   = 0x0001,421,13846
  in_selection 422,13871
  in_selection = 0x0002,422,13871
  disconnected 423,13896
  disconnected = 0x0004,423,13896
  aborted 424,13921
  aborted      = 0x0008,424,13921
  sent_ident 425,13946
  sent_ident   = 0x0010,425,13946
  in_other 426,13971
  in_other     = 0x0020,426,13971
  in_sync 427,13996
  in_sync      = 0x0040,427,13996
  sync_ok 428,14021
  sync_ok      = 0x0080,428,14021
int aha152x[433,14097
int aha152x1[434,14170
int aha152x[438,14310
int aha152x1[439,14368
static int  setup_count=446,14559
static int  registered_count=447,14586
static struct aha152x_setup aha152x_setup448,14618
} setup[461,14823
static struct Scsi_Host *aha152x_host[463,14836
#define HOSTDATA(HOSTDATA465,14882
#define CURRENT_SC 466,14955
#define ISSUE_SC 467,15011
#define DISCONNECTED_SC 468,15065
#define DELAY 469,15126
#define EXT_TRANS 470,15177
#define SYNCRATE 471,15232
#define MSG(MSG472,15306
#define MSGLEN 473,15362
#define ADDMSG(ADDMSG474,15419
struct aha152x_hostdata aha152x_hostdata476,15464
static unsigned short ports[522,16686
#define PORT_COUNT 527,16765
static unsigned int addresses[531,16900
#define ADDRESS_COUNT 543,17087
static struct signature signature552,17610
} signatures[556,17702
#define SIGNATURE_COUNT 571,18619
static void do_pause(575,18700
static inline void append_SC(586,18943
static inline Scsi_Cmnd *remove_first_SC(600,19257
static inline Scsi_Cmnd *remove_SC(610,19418
static void make_acklow(632,19871
static int getphase(652,20329
void aha152x_setup(683,21049
static int aha152x_porttest(714,22284
int aha152x_checksetup(732,22666
void aha152x_swintr(769,23351
int aha152x_detect(780,23601
int aha152x_release(1080,32919
int aha152x_queue(1093,33166
int aha152x_command(1174,35495
int aha152x_abort(1184,35713
static void aha152x_reset_ports(1313,38860
int aha152x_reset(1348,39643
int aha152x_biosparam(1424,41365
void aha152x_done(1484,43316
void aha152x_intr(1556,45120
static void aha152x_panic(2597,75908
static void disp_ports(2607,76097
static void disp_enintr(2776,80408
static const char *should_leave;2804,81207
static int in_driver=2805,81240
static void enter_driver(2810,81322
static void leave_driver(2827,81662
static void show_command(2848,82065
static void show_queues(2898,83339
int aha152x_set_info(2924,83893
#define SPRINTF(SPRINTF2930,84037
static int get_command(2932,84092
static int get_ports(2985,85481
#define SPRINTF(SPRINTF3172,90610
int aha152x_proc_info(3174,90708
#define PDEBUG(PDEBUG3234,92818
Scsi_Host_Template driver_template 3294,94493

drivers/scsi/seagate.h,55
	#define SEAGATE_H10,168
#define SEAGATE_ST0X 26,591

drivers/scsi/sr.c,821
#define MAJOR_NR 38,958
#define MAX_RETRIES 48,1211
#define SR_TIMEOUT 49,1233
struct Scsi_Device_Template sr_template 57,1431
Scsi_CD * scsi_CDs 62,1725
static int * sr_sizes 63,1752
static int * sr_blocksizes 65,1783
static void sr_release(74,2032
static struct cdrom_device_ops sr_dops 86,2470
int sr_media_change(116,3961
static void rw_intr 166,5744
static int sr_open(381,12897
static void do_sr_request 423,14159
void requeue_sr_request 527,17069
static int sr_detect(826,26452
static int sr_attach(837,26747
static void sr_init_done 864,27348
void get_sectorsize(876,27575
void get_capabilities(962,29805
static int sr_registered 1012,31473
static int sr_init(1014,31504
void sr_finish(1049,32476
static void sr_detach(1103,34094
int init_module(1139,34930
void cleanup_module(1144,35070

drivers/scsi/sr.h,84
#define _SR_H18,390
	} Scsi_CD;Scsi_CD39,1334
extern Scsi_CD * scsi_CDs;41,1348

drivers/scsi/sr_ioctl.c,591
# define DEBUG18,310
#define EDRIVE_CANT_DO_THIS 22,410
static int xa_test 26,596
#define IOCTL_RETRIES 30,655
#define IOCTL_TIMEOUT 33,800
static void sr_ioctl_done(35,829
int sr_do_ioctl(51,1231
static int test_unit_ready(156,4688
int sr_tray_move(166,4966
int sr_lock_door(178,5345
int sr_drive_status(185,5579
int sr_disk_status(198,5887
int sr_get_last_session(227,6845
int sr_get_mcn(237,7157
int sr_reset(271,8145
int sr_select_speed(277,8244
int sr_audio_ioctl(301,9046
sr_read_cd(663,19415
sr_read_sector(694,20271
sr_is_xa(737,21578
int sr_dev_ioctl(766,22408

drivers/scsi/st.c,2320
#define DEBUG 37,1062
#define ST_DEB_MSG 42,1320
#define MAJOR_NR 44,1353
#define ST_KILOBYTE 51,1477
static int buffer_kbs 63,1713
static int write_threshold_kbs 64,1740
static int max_buffers 65,1776
static int max_sg_segs 66,1804
#define ST_BUFFER_SIZE 71,1903
#define ST_WRITE_THRESHOLD 72,1959
static int debugging 81,2251
#define MAX_RETRIES 84,2285
#define MAX_WRITE_RETRIES 85,2307
#define MAX_READY_RETRIES 86,2335
#define NO_TAPE 87,2363
#define ST_TIMEOUT 89,2391
#define ST_LONG_TIMEOUT 90,2421
#define TAPE_NR(TAPE_NR92,2459
#define TAPE_MODE(TAPE_MODE93,2513
#define SET_DENS_AND_BLK 97,2673
static int st_nbr_buffers;99,2707
static ST_buffer **st_buffers;100,2734
static int st_buffer_size 101,2765
static int st_write_threshold 102,2809
static int st_max_buffers 103,2861
static int st_max_sg_segs 104,2905
static Scsi_Tape * scsi_tapes 106,2945
static int modes_defined 108,2984
struct Scsi_Device_Template st_template 121,3408
st_chk_result(139,3880
st_sleep_done 222,6182
st_do_scsi(267,7488
write_behind_check(312,8780
cross_eof(356,9821
flush_write_buffer(393,10720
flush_buffer(474,12706
set_mode_densblk(536,14127
scsi_tape_open(573,15049
scsi_tape_flush(881,24701
scsi_tape_close(1007,27686
st_write(1038,28354
read_tape(1362,37096
st_read(1548,42236
st_log_options(1716,46687
st_set_options(1740,47451
#define COMPRESSION_PAGE 1893,52524
#define COMPRESSION_PAGE_LENGTH 1894,52561
#define MODE_HEADER_LENGTH 1896,52597
#define DCE_MASK 1898,52628
#define DCC_MASK 1899,52651
#define RED_MASK 1900,52674
st_compression(1905,52791
st_int_ioctl(1993,55015
get_location(2503,69160
set_location(2575,71040
find_partition(2690,73914
update_partition(2705,74216
#define PART_PAGE 2723,74758
#define PART_PAGE_LENGTH 2724,74783
nbr_partitions(2729,74934
partition_tape(2774,76008
st_ioctl(2842,77712
new_tape_buffer(3086,85628
enlarge_buffer(3183,88272
normalize_buffer(3236,89737
append_to_buffer(3256,90376
from_buffer(3290,91371
	__initfunc(3326,92414
static struct file_operations st_fops 3342,92795
static int st_attach(3356,93255
static int st_detect(3435,95475
static int st_registered 3447,95748
static int st_init(3450,95852
static void st_detach(3543,98531
int init_module(3562,98860
void cleanup_module(3586,99581

drivers/scsi/st.h,1014
	#define _ST_H3,15
} ST_buffer;ST_buffer30,831
} ST_mode;ST_mode44,1287
#define ST_NBR_MODE_BITS 46,1299
#define ST_NBR_MODES 47,1326
#define ST_MODE_SHIFT 48,1371
#define ST_MODE_MASK 49,1416
} ST_partstat;ST_partstat60,1733
#define ST_NBR_PARTITIONS 62,1749
} Scsi_Tape;Scsi_Tape121,3285
extern Scsi_Tape * scsi_tapes;123,3299
#define	ST_NOEOF	126,3351
#define ST_FM_HIT 127,3370
#define ST_FM 128,3396
#define ST_EOM_OK 129,3422
#define ST_EOM_ERROR	130,3448
#define	ST_EOD_1 131,3471
#define ST_EOD_2 132,3497
#define ST_EOD	133,3523
#define	ST_IDLE	138,3671
#define	ST_READING	139,3690
#define	ST_WRITING	140,3711
#define ST_READY	143,3761
#define ST_NOT_READY	144,3780
#define ST_NO_TAPE	145,3803
#define ST_UNLOCKED	148,3858
#define ST_LOCKED_EXPLICIT 149,3880
#define ST_LOCKED_AUTO 150,3909
#define ST_LOCK_FAILS 151,3935
#define	QFA_REQUEST_BLOCK	154,4020
#define	QFA_SEEK_BLOCK	155,4051
#define ST_DONT_TOUCH 158,4114
#define ST_NO 159,4139
#define ST_YES 160,4164

drivers/scsi/ultrastor.c,1643
#define ULTRASTOR_PRIVATE	143,4577
struct proc_dir_entry proc_scsi_ultrastor 151,4771
#define FALSE 156,4897
#define TRUE 157,4913
#define ULTRASTOR_DEBUG 160,4953
#define VERSION 163,5013
#define ARRAY_SIZE(ARRAY_SIZE165,5037
#define PACKED	167,5095
#define ALIGNED(ALIGNED168,5135
} ultrastor_sg_list;ultrastor_sg_list179,5479
struct mscp mscp184,5600
#define U14F_PRODUCT_ID(U14F_PRODUCT_ID213,7040
#define CONFIG(CONFIG214,7085
#define LCL_DOORBELL_MASK(LCL_DOORBELL_MASK217,7183
#define LCL_DOORBELL_INTR(LCL_DOORBELL_INTR218,7230
#define SYS_DOORBELL_MASK(SYS_DOORBELL_MASK219,7277
#define SYS_DOORBELL_INTR(SYS_DOORBELL_INTR220,7324
static struct ultrastor_configultrastor_config232,7704
} config 266,8793
int ultrastor_bus_reset 269,8863
static const void *const bios_segment_table[273,8954
static const unsigned char interrupt_table_14f[279,9170
static const unsigned char dma_channel_table_14f[282,9301
} mapping_table[288,9484
static const unsigned short ultrastor_ports_14f[292,9638
static inline int find_and_clear_bit_16(302,9965
static inline unsigned char xchgb(324,10701
static void log_ultrastor_abort(333,10920
static int ultrastor_14f_detect(357,11530
static int ultrastor_24f_detect(530,16894
int ultrastor_detect(634,19783
const char *ultrastor_info(640,19946
static inline void build_sg_list(658,20528
int ultrastor_queuecommand(679,21229
int ultrastor_abort(831,25602
int ultrastor_reset(956,29605
int ultrastor_biosparam(1015,31110
static void ultrastor_interrupt(1030,31453
static void do_ultrastor_interrupt(1162,34965
Scsi_Host_Template driver_template 1173,35310

drivers/scsi/ultrastor.h,1008
#define _ULTRASTOR_H14,517
#define ULTRASTOR_14F_MAX_SG 25,863
#define ULTRASTOR_24F_MAX_SG 26,895
#define ULTRASTOR_MAX_CMDS_PER_LUN 28,928
#define ULTRASTOR_MAX_CMDS 29,965
#define ULTRASTOR_24F_PORT 31,996
#define ULTRASTOR_14F 34,1031
#define UD_ABORT	51,1665
#define UD_COMMAND	52,1689
#define UD_DETECT	53,1715
#define UD_INTERRUPT	54,1740
#define UD_RESET	55,1768
#define UD_MULTI_CMD	56,1792
#define UD_CSIR	57,1820
#define UD_ERROR	58,1844
#define US14F_PRODUCT_ID_0 63,1954
#define US14F_PRODUCT_ID_1 64,1986
#define US24F_PRODUCT_ID_0 66,2058
#define US24F_PRODUCT_ID_1 67,2090
#define US24F_PRODUCT_ID_2 68,2122
#define U14F 71,2179
#define U34F 72,2194
#define OP_HOST_ADAPTER 77,2248
#define OP_SCSI 78,2276
#define OP_RESET 79,2296
#define DTD_SCSI 82,2348
#define DTD_IN 83,2369
#define DTD_OUT 84,2388
#define DTD_NONE 85,2408
#define HA_CMD_INQUIRY 88,2466
#define HA_CMD_SELF_DIAG 89,2493
#define HA_CMD_READ_BUFF 90,2522
#define HA_CMD_WRITE_BUFF 91,2551

drivers/scsi/gdth.c,6279
static int halt_called 233,9497
static unchar   DebugState 238,9577
#define LOGEN 240,9656
#define MAX_SERBUF 243,9710
static char strbuf[248,9870
#define COM_BASE 250,9920
#define COM_BASE 252,9949
static void ser_init(254,9979
static void ser_puts(270,10235
static void ser_putc(279,10357
static int ser_printk(292,10570
#define TRACE(TRACE304,10762
#define TRACE2(TRACE2305,10819
#define TRACE3(TRACE3306,10893
#define TRACE(TRACE309,10975
#define TRACE2(TRACE2310,11034
#define TRACE3(TRACE3311,11110
#define TRACE(TRACE315,11196
#define TRACE2(TRACE2316,11213
#define TRACE3(TRACE3317,11231
static ulong32 max_rq=321,11280
static ulong32 act_ints=322,11328
static struct timer_list gdth_timer;323,11389
#define PTR2USHORT(PTR2USHORT326,11434
#define GDTOFFSOF(GDTOFFSOF327,11477
#define INDEX_OK(INDEX_OK328,11526
#define NUMDATA(NUMDATA330,11582
#define HADATA(HADATA331,11642
#define CMDDATA(CMDDATA332,11710
static void *gdth_mmap(336,11815
static void gdth_munmap(343,11959
inline ulong32 virt_to_phys(346,12000
inline void *phys_to_virt(350,12079
#define virt_to_bus 354,12148
#define bus_to_virt 355,12193
#define gdth_readb(gdth_readb356,12238
#define gdth_readw(gdth_readw357,12299
#define gdth_readl(gdth_readl358,12360
#define gdth_writeb(gdth_writeb359,12422
#define gdth_writew(gdth_writew360,12489
#define gdth_writel(gdth_writel361,12556
#define memset_io(memset_io362,12624
#define memcpy_fromio(memcpy_fromio363,12684
#define memcpy_toio(memcpy_toio364,12744
#define PCI_SLOT(PCI_SLOT366,12805
static int remapped 369,12896
static void *gdth_mmap(370,12925
static void gdth_munmap(379,13122
#define gdth_readb(gdth_readb385,13224
#define gdth_readw(gdth_readw386,13277
#define gdth_readl(gdth_readl387,13330
#define gdth_writeb(gdth_writeb388,13392
#define gdth_writew(gdth_writew389,13450
#define gdth_writel(gdth_writel390,13508
static void *gdth_mmap(393,13573
static void gdth_munmap(397,13661
#define gdth_readb(gdth_readb401,13728
#define gdth_readw(gdth_readw402,13781
#define gdth_readl(gdth_readl403,13834
#define gdth_writeb(gdth_writeb404,13896
#define gdth_writew(gdth_writew405,13954
#define gdth_writel(gdth_writel406,14012
static unchar   gdth_drq_tab[410,14079
static unchar   gdth_irq_tab[411,14151
static unchar   gdth_polling;412,14223
static unchar   gdth_from_wait 413,14301
static int      wait_index,414,14375
static int      wait_index,wait_hanum;414,14375
static int      gdth_ctr_count 415,14449
static int      gdth_ctr_vcount 416,14528
static int      gdth_ctr_released 417,14607
static struct Scsi_Host *gdth_ctr_tab[418,14684
static struct Scsi_Host *gdth_ctr_vtab[419,14763
static unchar   gdth_write_through 420,14842
static gdth_evt_str ebuffer[421,14918
static int elastidx;422,14993
static int eoldidx;423,15014
#define DIN 425,15035
#define DOU 426,15107
#define DNO 427,15180
#define DUN 428,15251
static unchar gdth_direction_tab[429,15328
#define __initfunc(__initfunc452,16580
#define __initdata453,16604
#define __init454,16623
#define GDTH_INIT_LOCK_HA(GDTH_INIT_LOCK_HA458,16681
#define GDTH_LOCK_HA(GDTH_LOCK_HA459,16753
#define GDTH_UNLOCK_HA(GDTH_UNLOCK_HA460,16834
#define GDTH_LOCK_SCSI_DONE(GDTH_LOCK_SCSI_DONE462,16921
#define GDTH_UNLOCK_SCSI_DONE(GDTH_UNLOCK_SCSI_DONE463,17003
#define GDTH_LOCK_SCSI_DOCMD(GDTH_LOCK_SCSI_DOCMD464,17090
#define GDTH_UNLOCK_SCSI_DOCMD(GDTH_UNLOCK_SCSI_DOCMD465,17162
#define GDTH_INIT_LOCK_HA(GDTH_INIT_LOCK_HA467,17242
#define GDTH_LOCK_HA(GDTH_LOCK_HA468,17298
#define GDTH_UNLOCK_HA(GDTH_UNLOCK_HA469,17379
#define GDTH_LOCK_SCSI_DONE(GDTH_LOCK_SCSI_DONE471,17457
#define GDTH_UNLOCK_SCSI_DONE(GDTH_UNLOCK_SCSI_DONE472,17513
#define GDTH_LOCK_SCSI_DOCMD(GDTH_LOCK_SCSI_DOCMD473,17569
#define GDTH_UNLOCK_SCSI_DOCMD(GDTH_UNLOCK_SCSI_DOCMD474,17625
struct proc_dir_entry proc_scsi_gdth 480,17769
static struct notifier_block gdth_notifier 490,18036
static int irq[498,18209
static int irq[MAXHA] __initdata 498,18209
static int disable __initdata 502,18356
static int reserve_mode __initdata 504,18410
static int reserve_list[506,18487
static int reserve_list[MAX_RES_ARGS] __initdata 506,18487
static int reverse_scan __initdata 511,18783
static int max_ids 513,18850
static int rescan 515,18899
static void gdth_delay(532,19291
__initfunc 549,19621
__initfunc 567,20143
__initfunc 583,20542
#define GDTH_BASEP 648,23302
#define GDTH_BASEP650,23340
__initfunc 701,25960
__initfunc 739,27145
__initfunc 828,30084
__initfunc 925,33090
__initfunc 1192,43275
static int gdth_get_status(1231,44629
static int gdth_test_busy(1265,45782
static int gdth_get_cmd_index(1289,46546
static void gdth_set_sema0(1309,47037
static void gdth_copy_command(1330,47690
static void gdth_release_event(1391,50138
static int gdth_wait(1431,51341
static int gdth_internal_cmd(1464,52110
__initfunc 1525,54210
static void gdth_putq(1742,63001
static void gdth_next(1799,64725
static void gdth_copy_internal_data(2002,72439
static int gdth_internal_cache_cmd(2029,73368
static int gdth_fill_cache_cmd(2109,75950
static int gdth_fill_raw_cmd(2229,80132
static int gdth_special_cmd(2344,84151
static gdth_evt_str *gdth_store_event(2404,85943
static int gdth_read_event(2447,87327
static void gdth_readapp_event(2479,88069
static void gdth_clear_events(2511,88884
static void gdth_interrupt(2523,89087
static int gdth_sync_event(2724,97177
static char *async_cache_tab[2868,102374
static int gdth_async_event(3018,109520
static void gdth_log_event(3074,111466
void gdth_timeout(3114,112670
__initfunc 3143,113345
int gdth_release(3473,124709
static const char *gdth_ctr_name(3514,125691
const char *gdth_info(3546,126520
int gdth_abort(3559,126779
int gdth_reset(3566,126940
int gdth_eh_abort(3577,127166
int gdth_eh_device_reset(3583,127259
int gdth_eh_bus_reset(3589,127366
int gdth_eh_host_reset(3595,127467
int gdth_bios_param(3603,127612
static void internal_done(3646,128837
int gdth_command(3651,128913
int gdth_queuecommand(3664,129139
static void gdth_flush(3692,129802
static int gdth_halt(3740,131331
__initfunc 3812,133289
Scsi_Host_Template driver_template 3879,135133

drivers/scsi/wd7000.h,152
extern struct proc_dir_entry proc_scsi_wd7000;17,352
#define NULL 30,853
#define WD7000_Q 44,1333
#define WD7000_SG 45,1356
#define WD7000 47,1380

drivers/scsi/constants.c,1852
#define __NO_VERSION__6,89
#define CONST_COMMAND 15,252
#define CONST_STATUS 16,281
#define CONST_SENSE 17,310
#define CONST_XSENSE 18,339
#define CONST_CMND 19,368
#define CONST_MSG 20,397
#define CONST_HOST	21,426
#define CONST_DRIVER	22,450
static const char unknown[24,477
#define CONSTANTS 30,589
static const char * group_0_commands[35,767
static const char *group_1_commands[47,1370
static const char *group_2_commands[59,1956
#define group(group70,2407
#define RESERVED_GROUP 72,2452
#define VENDOR_GROUP 73,2478
#define NOTEXT_GROUP 74,2504
static const char **commands[76,2531
static const char reserved[83,2796
static const char vendor[84,2839
static void print_opcode(86,2888
static void print_opcode(107,3430
void print_command 112,3512
static const char * statuses[121,3743
void print_status 129,4031
#define D 139,4244
#define T 140,4295
#define L 141,4350
#define P 142,4388
#define W 143,4428
#define R 144,4483
#define S 145,4532
#define O 146,4570
#define M 147,4615
#define C 148,4659
struct error_info{error_info150,4704
struct error_info2{error_info2156,4814
static struct error_info2 additional2[162,4940
static struct error_info additional[171,5235
static const char *snstext[366,15711
void print_sense(391,17074
static const char *one_byte_msgs[495,20338
#define NO_ONE_BYTE_MSGS 504,20752
static const char *two_byte_msgs[506,20827
#define NO_TWO_BYTE_MSGS 511,20975
static const char *extended_msgs[513,21050
#define NO_EXTENDED_MSGS 518,21232
int print_msg 521,21344
void print_Scsi_Cmnd 594,23126
static const char * hostbyte_table[604,23377
void print_hostbyte(608,23571
void print_hostbyte(624,23921
static const char * driverbyte_table[630,24052
static const char * driversuggest_table[634,24229
void print_driverbyte(639,24402
void print_driverbyte(656,24922

drivers/scsi/constants.h,26
#define _CONSTANTS_H2,21

drivers/scsi/pas16.c,951
#define AUTOSENSE1,0
#define PSEUDO_DMA2,18
#define FOO3,37
#define UNSAFE 4,49
#define AUTOPROBE_IRQ118,3835
struct proc_dir_entry proc_scsi_pas16 126,3967
static int pas_maxi 130,4080
static int pas_wmaxi 131,4105
int scsi_irq_translate[134,4134
int default_irqs[142,4499
int default_irqs[] __initdata 142,4499
static struct override override149,4660
} overrides 152,4727
    [] __initdata 154,4762
    [4] __initdata 156,4804
#define NO_OVERRIDES 160,4892
static struct base base162,4960
} bases[165,5025
} bases[] __initdata 165,5025
#define NO_BASES 172,5173
unsigned short  pas16_offset[174,5231
#define rtrc(rtrc201,6006
#define rtrc(rtrc203,6079
__initfunc(216,6305
__initfunc 236,6772
__initfunc(285,8153
__initfunc(345,9888
__initfunc(376,10748
int pas16_biosparam(484,14134
static inline int NCR5380_pread 514,14799
static inline int NCR5380_pwrite 551,15808
Scsi_Host_Template driver_template 578,16586

drivers/scsi/NCR5380.c,2490
#define NDEBUG 2,15
#define LIST(LIST96,2685
#define REMOVE(REMOVE97,2804
#define LIST(LIST99,2969
#define REMOVE(REMOVE100,2987
#define READ_OVERRUNS110,3114
static struct Scsi_Host *first_instance 323,12347
static Scsi_Host_Template *the_template 324,12395
struct timer_list usleep_timer;327,12458
static __inline__ void initialize_SCp(339,12726
} signals[365,13392
static void NCR5380_print(449,14383
} phases[485,15385
static void NCR5380_print_phase(514,15809
static volatile int main_running 552,17065
static __inline__ void run_main(564,17388
#define USLEEP_SLEEP 594,18133
#define USLEEP_POLL 598,18223
#define USLEEP_WAITLONG 602,18341
static struct Scsi_Host *expires_first 605,18386
static int should_disconnect(629,19282
static int NCR5380_set_timer(653,19747
void NCR5380_timer_fn(682,20679
static inline void NCR5380_all_init(709,21451
static int probe_irq __initdata 739,22166
__initfunc(741,22204
__initfunc(746,22307
__initfunc(802,23930
static void NCR5380_print_status(851,25008
#define SPRINTF(SPRINTF886,25856
int NCR5380_proc_info(897,26242
char *lprint_Scsi_Cmnd(981,28900
char *lprint_command(991,29190
char *lprint_opcode(1003,29475
__initfunc(1023,30009
int NCR5380_queue_command(1167,33858
static void NCR5380_main(1264,36675
static void NCR5380_intr(1456,42595
static void do_NCR5380_intr(1564,45992
static void collect_stats(1575,46254
static int NCR5380_select(1627,48255
static int NCR5380_transfer_pio(2004,59404
static void do_reset(2164,63718
				 */ static int do_abort(2185,64365
static int NCR5380_transfer_dma(2250,66333
       instance->host_no,2279,67145
       instance->host_no, instance->dma_channel,2279,67145
hostdata->dma_len 2282,67292
if 2305,68006
if 2389,71192
       instance->host_no,2412,71748
       instance->host_no, tmp,2412,71748
residue 2418,71897
*phase 2422,71978
if (*phase 2425,72048
printk("Doing %d-byte PIO to 0x%X\n", cnt,2440,72348
printk("Doing %d-byte PIO to 0x%X\n", cnt, *data)2440,72348
       *data,2449,72588
       *data, *count,2449,72588
       *data, *count, *(*data + *count - 1), *(*data + *count)2449,72588
return 2451,72660
return 2454,72695
if 2456,72743
	*data 2574,76242
	*count 2575,76258
	*phase 2576,76271
	return foo;2583,76471
static void NCR5380_information_transfer(2605,77181
static void NCR5380_reselect(3112,93482
static void NCR5380_dma_complete(3251,97277
int NCR5380_abort(3306,98938
int NCR5380_reset(3502,104842

drivers/scsi/aha152x.h,6290
#define _AHA152X_H2,19
#define AHA152X_MAXQUEUE 25,692
#define AHA152X_REVID 27,720
extern struct proc_dir_entry proc_scsi_aha152x;29,788
#define AHA152X 32,876
#define SCSISEQ 54,1871
#define SXFRCTL0 55,1945
#define SXFRCTL1 56,2021
#define SCSISIG 57,2097
#define SCSIRATE 58,2168
#define SELID 59,2238
#define SCSIID 60,2315
#define SCSIDAT 61,2375
#define SCSIBUS 62,2445
#define STCNT0 63,2511
#define STCNT1 64,2585
#define STCNT2 65,2659
#define SSTAT0 66,2733
#define SSTAT1 67,2809
#define SSTAT2 68,2885
#define SCSITEST 69,2961
#define SSTAT3 70,3031
#define SSTAT4 71,3107
#define SIMODE0 72,3173
#define SIMODE1 73,3247
#define DMACNTRL0 74,3321
#define DMACNTRL1 75,3387
#define DMASTAT 76,3453
#define FIFOSTAT 77,3516
#define DATAPORT 78,3580
#define BRSTCNTRL 79,3642
#define PORTA 80,3708
#define PORTB 81,3767
#define REV 82,3826
#define STACK 83,3887
#define TEST 84,3945
#define O_PORTA 87,4043
#define O_PORTB 88,4101
#define O_DMACNTRL1 89,4159
#define O_STACK 90,4224
#define IO_RANGE 91,4281
#define TEMODEO 96,4370
#define ENSELO 97,4396
#define ENSELI 98,4422
#define ENRESELI 99,4448
#define ENAUTOATNO 100,4474
#define ENAUTOATNI 101,4500
#define ENAUTOATNP 102,4526
#define SCSIRSTO 103,4552
#define SCSIEN 106,4609
#define DMAEN 107,4635
#define CH1 108,4661
#define CLRSTCNT 109,4687
#define SPIOEN 110,4713
#define CLRCH1 111,4739
#define BITBUCKET 114,4796
#define SWRAPEN 115,4822
#define ENSPCHK 116,4848
#define STIMESEL 117,4874
#define STIMESEL_ 118,4914
#define ENSTIMER 119,4937
#define BYTEALIGN 120,4963
#define CDI 123,5011
#define IOI 124,5037
#define MSGI 125,5063
#define ATNI 126,5089
#define SELI 127,5115
#define BSYI 128,5141
#define REQI 129,5167
#define ACKI 130,5193
#define P_MASK 133,5238
#define P_DATAO 134,5274
#define P_DATAI 135,5299
#define P_CMD 136,5326
#define P_STATUS 137,5353
#define P_MSGO 138,5384
#define P_MSGI 139,5416
#define CDO 142,5475
#define IOO 143,5501
#define MSGO 144,5527
#define ATNO 145,5553
#define SELO 146,5579
#define BSYO 147,5605
#define REQO 148,5631
#define ACKO 149,5657
#define SXFR 152,5708
#define SXFR_ 153,5748
#define SOFS 154,5771
#define OID 157,5826
#define OID_ 158,5852
#define TID 159,5875
#define GETSTCNT(GETSTCNT162,5928
#define SETSTCNT(SETSTCNT166,6058
#define TARGET 171,6277
#define SELDO 172,6303
#define SELDI 173,6329
#define SELINGO 174,6355
#define SWRAP 175,6381
#define SDONE 176,6407
#define SPIORDY 177,6433
#define DMADONE 178,6459
#define SETSDONE 180,6486
#define CLRSELDO 181,6512
#define CLRSELDI 182,6538
#define CLRSELINGO 183,6564
#define CLRSWRAP 184,6590
#define CLRSDONE 185,6616
#define CLRSPIORDY 186,6642
#define CLRDMADONE 187,6668
#define SELTO 190,6715
#define ATNTARG 191,6741
#define SCSIRSTI 192,6767
#define PHASEMIS 193,6793
#define BUSFREE 194,6819
#define SCSIPERR 195,6845
#define PHASECHG 196,6871
#define REQINIT 197,6897
#define CLRSELTIMO 199,6924
#define CLRATNO 200,6950
#define CLRSCSIRSTI 201,6976
#define CLRBUSFREE 202,7002
#define CLRSCSIPERR 203,7028
#define CLRPHASECHG 204,7054
#define CLRREQINIT 205,7080
#define SOFFSET 208,7127
#define SEMPTY 209,7153
#define SFULL 210,7179
#define SFCNT 211,7205
#define SCSICNT 214,7266
#define SCSICNT_ 215,7306
#define OFFCNT 216,7329
#define SCTESTU 219,7394
#define SCTESTD 220,7420
#define STCTEST 221,7446
#define SYNCERR 224,7493
#define FWERR 225,7519
#define FRERR 226,7545
#define CLRSYNCERR 228,7572
#define CLRFWERR 229,7598
#define CLRFRERR 230,7624
#define ENSELDO 233,7679
#define ENSELDI 234,7705
#define ENSELINGO 235,7731
#define ENSWRAP 236,7757
#define ENSDONE 237,7783
#define ENSPIORDY 238,7809
#define ENDMADONE 239,7835
#define ENSELTIMO 242,7890
#define ENATNTARG 243,7916
#define ENSCSIRST 244,7942
#define ENPHASEMIS 245,7968
#define ENBUSFREE 246,7994
#define ENSCSIPERR 247,8020
#define ENPHASECHG 248,8046
#define ENREQINIT 249,8072
#define ENDMA 252,8119
#define _8BIT 253,8145
#define DMA 254,8171
#define WRITE_READ 255,8197
#define INTEN 256,8223
#define RSTFIFO 257,8249
#define SWINT 258,8275
#define PWRDWN 261,8322
#define STK 262,8348
#define ATDONE 265,8406
#define WORDRDY 266,8432
#define INTSTAT 267,8458
#define DFIFOFULL 268,8484
#define DFIFOEMP 269,8510
#define BON 272,8557
#define BOFF 273,8583
#define BOFFTMR 276,8630
#define BONTMR 277,8656
#define STCNTH 278,8682
#define STCNTM 279,8708
#define STCNTL 280,8734
#define SCSIBLK 281,8760
#define DMABLK 282,8786
} aha152x_config aha152x_config305,9797
#define cf_parity 307,9817
#define cf_dmachan 308,9853
#define cf_irq 309,9890
#define cf_id 310,9923
#define cf_dma 311,9955
#define cf_boot 312,9988
#define cf_msgclasses 313,10022
#define cf_syncneg 314,10062
#define cf_tardisc 315,10099
#define cf_port 316,10136
#define SETPORT(SETPORT320,10218
#define SETPORTP(SETPORTP321,10275
#define SETPORTW(SETPORTW322,10334
#define GETPORT(GETPORT324,10392
#define GETPORTW(GETPORTW325,10439
#define SETBITS(SETBITS327,10487
#define CLRBITS(CLRBITS328,10559
#define CLRSETBITS(CLRSETBITS329,10632
#define TESTHI(TESTHI331,10714
#define TESTLO(TESTLO332,10780
  debug_skipports 336,10872
  debug_skipports = 0x0001,336,10872
  debug_queue 337,10900
  debug_queue     = 0x0002,337,10900
  debug_intr 338,10928
  debug_intr      = 0x0004,338,10928
  debug_selection 339,10956
  debug_selection = 0x0008,339,10956
  debug_msgo 340,10984
  debug_msgo      = 0x0010,340,10984
  debug_msgi 341,11012
  debug_msgi      = 0x0020,341,11012
  debug_status 342,11040
  debug_status    = 0x0040,342,11040
  debug_cmd 343,11068
  debug_cmd       = 0x0080,343,11068
  debug_datai 344,11096
  debug_datai     = 0x0100,344,11096
  debug_datao 345,11124
  debug_datao     = 0x0200,345,11124
  debug_abort 346,11152
  debug_abort     = 0x0400,346,11152
  debug_done 347,11180
  debug_done      = 0x0800,347,11180
  debug_biosparam 348,11208
  debug_biosparam = 0x1000,348,11208
  debug_phases 349,11236
  debug_phases    = 0x2000,349,11236
  debug_queues 350,11264
  debug_queues    = 0x4000,350,11264
  debug_reset 351,11292
  debug_reset     = 0x8000,351,11292

drivers/scsi/NCR5380.h,4299
#define NCR5380_H29,484
#define NCR5380_PUBLIC_RELEASE 31,503
#define NCR53C400_PUBLIC_RELEASE 32,536
#define NDEBUG_ARBITRATION	34,572
#define NDEBUG_AUTOSENSE	35,603
#define NDEBUG_DMA	36,632
#define NDEBUG_HANDSHAKE	37,656
#define NDEBUG_INFORMATION	38,685
#define NDEBUG_INIT	39,717
#define NDEBUG_INTR	40,743
#define NDEBUG_LINKED	41,769
#define NDEBUG_MAIN	42,797
#define NDEBUG_NO_DATAOUT	43,824
#define NDEBUG_NO_WRITE	44,856
#define NDEBUG_PIO	45,887
#define NDEBUG_PSEUDO_DMA	46,913
#define NDEBUG_QUEUES	47,946
#define NDEBUG_RESELECTION	48,976
#define NDEBUG_SELECTION	49,1010
#define NDEBUG_USLEEP	50,1042
#define NDEBUG_LAST_BYTE_SENT	51,1073
#define NDEBUG_RESTART_SELECT	52,1111
#define NDEBUG_EXTENDED	53,1149
#define NDEBUG_C400_PREAD	54,1182
#define NDEBUG_C400_PWRITE	55,1217
#define NDEBUG_LISTS	56,1253
#define OUTPUT_DATA_REG 65,1552
#define CURRENT_SCSI_DATA_REG 66,1624
#define INITIATOR_COMMAND_REG	68,1679
#define ICR_ASSERT_RST	69,1720
#define ICR_ARBITRATION_PROGRESS 70,1777
#define ICR_TRI_STATE	71,1855
#define ICR_ARBITRATION_LOST	72,1917
#define ICR_DIFF_ENABLE	73,1987
#define ICR_ASSERT_ACK	74,2054
#define ICR_ASSERT_BSY	75,2114
#define ICR_ASSERT_SEL 76,2170
#define ICR_ASSERT_ATN	77,2227
#define ICR_ASSERT_DATA	78,2283
#define ICR_BASE	81,2369
#define ICR_BASE	83,2409
#define MODE_REG	86,2437
#define MR_BLOCK_DMA_MODE	92,2618
#define MR_TARGET	93,2673
#define MR_ENABLE_PAR_CHECK 94,2718
#define MR_ENABLE_PAR_INTR	95,2785
#define MR_ENABLE_EOP_INTR	96,2854
#define MR_MONITOR_BSY	97,2916
#define MR_DMA_MODE	98,2987
#define MR_ARBITRATE	99,3044
#define MR_BASE	102,3113
#define MR_BASE	104,3157
#define TARGET_COMMAND_REG	107,3185
#define TCR_LAST_BYTE_SENT	108,3214
#define TCR_ASSERT_REQ	109,3264
#define TCR_ASSERT_MSG	110,3317
#define TCR_ASSERT_CD	111,3370
#define TCR_ASSERT_IO	112,3421
#define STATUS_REG	114,3473
#define SR_RST	119,3595
#define SR_BSY	120,3618
#define SR_REQ	121,3640
#define SR_MSG	122,3662
#define SR_CD	123,3684
#define SR_IO	124,3705
#define SR_SEL	125,3726
#define SR_DBP	126,3748
#define SELECT_ENABLE_REG	132,3925
#define BUS_AND_STATUS_REG	134,3963
#define BASR_END_DMA_TRANSFER	135,4001
#define BASR_DRQ	136,4068
#define BASR_PARITY_ERROR	137,4118
#define BASR_IRQ	138,4180
#define BASR_PHASE_MATCH	139,4230
#define BASR_BUSY_ERROR	140,4298
#define BASR_ATN 141,4373
#define BASR_ACK	142,4417
#define START_DMA_SEND_REG	145,4520
#define INPUT_DATA_REG	151,4680
#define START_DMA_TARGET_RECEIVE_REG	154,4779
#define RESET_PARITY_INTERRUPT_REG	157,4883
#define START_DMA_INITIATOR_RECEIVE_REG 160,5002
#define C400_CONTROL_STATUS_REG 162,5054
#define CSR_RESET 164,5129
#define CSR_53C80_REG 165,5192
#define CSR_TRANS_DIR 166,5261
#define CSR_SCSI_BUFF_INTR 167,5334
#define CSR_53C80_INTR 168,5412
#define CSR_SHARED_INTR 169,5485
#define CSR_HOST_BUF_NOT_RDY 170,5552
#define CSR_SCSI_BUF_RDY 171,5622
#define CSR_GATED_53C80_IRQ 172,5688
#define CSR_BASE 175,5763
#define CSR_BASE 177,5822
#define C400_BLOCK_COUNTER_REG 181,5912
#define C400_RESUME_TRANSFER_REG 184,6027
#define C400_HOST_BUFFER 187,6137
#define PHASE_MASK 191,6289
#define PHASE_DATAOUT	193,6335
#define PHASE_DATAIN	194,6360
#define PHASE_CMDOUT	195,6388
#define PHASE_STATIN	196,6416
#define PHASE_MSGOUT	197,6454
#define PHASE_MSGIN	198,6493
#define PHASE_UNKNOWN	199,6539
#define PHASE_SR_TO_TCR(PHASE_SR_TO_TCR207,6737
#define DISCONNECT_NONE	215,6948
#define DISCONNECT_TIME_TO_DATA	216,6975
#define DISCONNECT_LONG	217,7009
#define TAG_NEXT	223,7124
#define TAG_NONE	224,7169
#define IRQ_NONE	234,7386
#define DMA_NONE	235,7407
#define IRQ_AUTO	236,7428
#define DMA_AUTO	237,7449
#define PORT_AUTO	238,7470
#define FLAG_HAS_LAST_BYTE_SENT	240,7533
#define FLAG_CHECK_LAST_BYTE_SENT	241,7593
#define FLAG_NCR53C400	242,7650
#define FLAG_NO_PSEUDO_DMA	243,7693
#define FLAG_DTC3181E	244,7741
struct NCR5380_hostdata NCR5380_hostdata247,7796
static struct Scsi_Host *first_instance;284,9332
static __inline__ int NCR5380_pc_dma_setup 326,10877
static __inline__ int NCR5380_pc_dma_write_setup 356,11769
static __inline__ int NCR5380_pc_dma_read_setup 361,11968
static __inline__ int NCR5380_pc_dma_residual 366,12165

drivers/scsi/pas16.h,1791
#define PAS16_H37,681
#define PAS16_PUBLIC_RELEASE 39,698
#define PDEBUG_INIT	41,730
#define PDEBUG_TRANSFER 42,754
#define PAS16_DEFAULT_BASE_1 44,783
#define PAS16_DEFAULT_BASE_2 45,819
#define PAS16_DEFAULT_BASE_3 46,855
#define PAS16_DEFAULT_BASE_4 47,891
#define PAS16_DEFAULT_BOARD_1_IRQ 49,928
#define PAS16_DEFAULT_BOARD_2_IRQ 50,965
#define PAS16_DEFAULT_BOARD_3_IRQ 51,1002
#define PAS16_DEFAULT_BOARD_4_IRQ 52,1039
#define P_TIMEOUT_COUNTER_REG	71,1776
#define P_TC_DISABLE	72,1813
#define P_TIMEOUT_STATUS_REG_OFFSET	76,1922
#define P_TS_TIM	77,1965
#define P_TS_ARM_DRQ_INT	79,2041
#define P_TS_ENABLE_TO_ERR_INTERRUPT	87,2307
#define P_TS_ENABLE_WAIT	88,2376
#define P_TS_CT	90,2421
#define P_DATA_REG_OFFSET	100,2639
#define P_STATUS_REG_OFFSET	102,2682
#define P_ST_RDY	103,2726
#define P_IRQ_STATUS	105,2773
#define P_IS_IRQ	106,2802
#define PCB_CONFIG 108,2844
#define MASTER_ADDRESS_PTR 109,2869
#define SYS_CONFIG_4 110,2935
#define WAIT_STATE 111,2963
#define OPERATION_MODE_1 112,2989
#define IO_CONFIG_3 113,3021
#define NULL 126,3404
#define CMD_PER_LUN 130,3447
#define CAN_QUEUE 134,3495
#define MV_PAS16 145,3776
#define NCR5380_implementation_fields 161,4218
#define NCR5380_local_declare(NCR5380_local_declare164,4295
#define NCR5380_setup(NCR5380_setup167,4366
#define PAS16_io_port(PAS16_io_port170,4435
#define NCR5380_read(NCR5380_read173,4530
#define NCR5380_write(NCR5380_write174,4584
#define NCR5380_read(NCR5380_read176,4661
#define NCR5380_write(NCR5380_write180,4851
#define NCR5380_intr 188,5076
#define do_NCR5380_intr 189,5108
#define NCR5380_queue_command 190,5146
#define NCR5380_abort 191,5196
#define NCR5380_reset 192,5230
#define NCR5380_proc_info 193,5264
#define PAS16_IRQS 198,5359

drivers/scsi/aha1740.c,724
struct proc_dir_entry proc_scsi_aha1740 47,1154
#define DEB(DEB57,1388
#define DEB(DEB59,1411
struct aha1740_hostdata aha1740_hostdata66,1572
#define HOSTDATA(HOSTDATA73,1721
static struct Scsi_Host * aha_host[76,1827
int aha1740_proc_info(78,1878
int aha1740_makecode(113,2602
int aha1740_test_port(189,4760
void aha1740_intr_handle(222,5795
int aha1740_queuecommand(313,8561
#define LOOPCNT_WARN 449,12743
#define LOOPCNT_MAX 450,12810
static void internal_done(484,13873
int aha1740_command(489,13948
void aha1740_getconfig(501,14236
int aha1740_detect(511,14545
int aha1740_abort(572,16709
int aha1740_reset(582,17036
int aha1740_biosparam(588,17171
Scsi_Host_Template driver_template 611,17640

drivers/scsi/fdomain.c,4879
#define MODULE274,11826
struct proc_dir_entry proc_scsi_fdomain 303,12334
#define VERSION 308,12456
#define DEBUG 312,12541
#define ENABLE_PARITY 313,12598
#define FIFO_COUNT 314,12650
#define DO_DETECT 315,12721
#define EVERY_ACCESS 320,12840
#define ERRORS_ONLY 321,12907
#define DEBUG_DETECT 322,12979
#define DEBUG_MESSAGES 323,13040
#define DEBUG_ABORT 324,13096
#define DEBUG_RESET 325,13151
#define DEBUG_RACE 326,13206
#define EVERY_ACCESS 328,13288
#define ERRORS_ONLY 329,13362
#define DEBUG_DETECT 330,13389
#define DEBUG_MESSAGES 331,13416
#define DEBUG_ABORT 332,13443
#define DEBUG_RESET 333,13470
#define DEBUG_RACE 334,13497
#define ERRORS_ONLY 340,13645
#define PARITY_MASK 344,13698
#define PARITY_MASK 346,13734
enum chip_type chip_type349,13772
   unknown 350,13789
   unknown          = 0x00,350,13789
   tmc1800 351,13817
   tmc1800          = 0x01,351,13817
   tmc18c50 352,13845
   tmc18c50         = 0x02,352,13845
   tmc18c30 353,13873
   tmc18c30         = 0x03,353,13873
   in_arbitration 357,13912
   in_arbitration   = 0x02,357,13912
   in_selection 358,13940
   in_selection     = 0x04,358,13940
   in_other 359,13968
   in_other         = 0x08,359,13968
   disconnect 360,13996
   disconnect       = 0x10,360,13996
   aborted 361,14024
   aborted          = 0x20,361,14024
   sent_ident 362,14052
   sent_ident       = 0x40,362,14052
enum in_port_type in_port_type365,14084
   Read_SCSI_Data 366,14104
   SCSI_Status 367,14130
   TMC_Status 368,14156
   FIFO_Status 369,14182
   Interrupt_Cond 370,14237
   LSB_ID_Code 371,14292
   MSB_ID_Code 372,14318
   Read_Loopback 373,14344
   SCSI_Data_NoACK 374,14370
   Interrupt_Status 375,14396
   Configuration1 376,14422
   Configuration2 377,14448
   Read_FIFO 378,14503
   FIFO_Data_Count 379,14529
enum out_port_type out_port_type382,14558
   Write_SCSI_Data 383,14579
   SCSI_Cntl 384,14605
   Interrupt_Cntl 385,14631
   SCSI_Mode_Cntl 386,14657
   TMC_Cntl 387,14683
   Memory_Cntl 388,14709
   Write_Loopback 389,14764
   IO_Control 390,14790
   Write_FIFO 391,14836
static int               port_base 394,14865
static unsigned long     bios_base 395,14913
static int               bios_major 396,14961
static int               bios_minor 397,15009
static int               PCI_bus 398,15057
static int               Quantum 399,15105
static int               interrupt_level 400,15181
static volatile int      in_command 401,15229
static Scsi_Cmnd         *current_SC 402,15277
static enum chip_type    chip 403,15328
static int               adapter_mask 404,15382
static int               this_id 405,15430
static int               setup_called 406,15478
static volatile int      in_interrupt_flag 409,15542
static int               SCSI_Mode_Cntl_port;412,15598
static int               FIFO_Data_Count_port;413,15644
static int               Interrupt_Cntl_port;414,15691
static int               Interrupt_Status_port;415,15737
static int               Read_FIFO_port;416,15785
static int               Read_SCSI_Data_port;417,15826
static int               SCSI_Cntl_port;418,15872
static int               SCSI_Data_NoACK_port;419,15913
static int               SCSI_Status_port;420,15960
static int               TMC_Cntl_port;421,16003
static int               TMC_Status_port;422,16043
static int               Write_FIFO_port;423,16085
static int               Write_SCSI_Data_port;424,16127
static int               FIFO_Size 426,16175
static int               fdomain[437,16537
static unsigned long addresses[441,16623
#define ADDRESS_COUNT 450,16785
static unsigned short ports[452,16860
#define PORT_COUNT 453,16924
static unsigned short ints[455,16989
struct signature signature489,18264
} signatures[496,18484
#define SIGNATURE_COUNT 532,20767
static void print_banner(534,20844
void fdomain_setup(573,22032
static void do_pause(589,22529
inline static void fdomain_make_bus_idle(596,22662
static int fdomain_is_valid_port(606,22949
static int fdomain_test_loopback(646,24165
static int fdomain_get_irq(674,25176
static int fdomain_isa_detect(694,25680
static int fdomain_pci_bios_detect(808,29025
int fdomain_16x0_detect(873,30872
const char *fdomain_16x0_info(1065,37144
int fdomain_16x0_proc_info(1097,38301
static int fdomain_arbitrate(1126,38892
static int fdomain_select(1160,39769
void my_done(1200,40753
void do_fdomain_16x0_intr(1218,41216
int fdomain_16x0_queue(1658,54898
static volatile int internal_done_flag 1713,56778
static volatile int internal_done_errcode 1714,56825
static void internal_done(1716,56873
int fdomain_16x0_command(1722,56993
void print_info(1734,57243
int fdomain_16x0_abort(1804,59491
int fdomain_16x0_reset(1839,60173
int fdomain_16x0_biosparam(1871,60943
Scsi_Host_Template driver_template 2035,66668

drivers/scsi/g_NCR5380.h,1749
#define GENERIC_NCR5380_H33,620
#define GENERIC_NCR5380_PUBLIC_RELEASE 37,674
#define BIOSPARAM40,733
#define NCR5380_BIOSPARAM 41,751
#define NCR5380_BIOSPARAM 43,809
#define NULL 62,1522
#define CMD_PER_LUN 66,1565
#define CAN_QUEUE 70,1613
#define GENERIC_NCR5380 75,1683
#define __STRVAL(__STRVAL95,2374
#define STRVAL(STRVAL96,2397
#define NCR5380_map_config 100,2463
#define NCR5380_map_type 102,2496
#define NCR5380_map_name 104,2526
#define NCR5380_instance_name 106,2557
#define NCR53C400_register_offset 108,2596
#define NCR53C400_address_adjust 110,2633
#define NCR5380_region_size 113,2686
#define NCR5380_region_size 115,2723
#define NCR5380_read(NCR5380_read118,2761
#define NCR5380_write(NCR5380_write119,2819
#define NCR5380_map_config 124,2948
#define NCR5380_map_type 126,2983
#define NCR5380_map_name 128,3033
#define NCR5380_instance_name 130,3064
#define NCR53C400_register_offset 132,3100
#define NCR53C400_address_adjust 134,3141
#define NCR53C400_mem_base 136,3177
#define NCR53C400_host_buffer 138,3212
#define NCR5380_region_size 140,3250
#define NCR5380_read(NCR5380_read143,3287
#define NCR5380_write(NCR5380_write144,3364
#define NCR5380_implementation_fields 148,3466
#define NCR5380_local_declare(NCR5380_local_declare151,3545
#define NCR5380_setup(NCR5380_setup154,3623
#define NCR5380_intr 157,3735
#define do_NCR5380_intr 158,3777
#define NCR5380_queue_command 159,3825
#define NCR5380_abort 160,3885
#define NCR5380_reset 161,3929
#define NCR5380_pread 162,3973
#define NCR5380_pwrite 163,4017
#define NCR5380_proc_info 164,4063
#define BOARD_NCR5380	166,4115
#define BOARD_NCR53C400	167,4139
#define BOARD_NCR53C400A 168,4165
#define BOARD_DTC3181E	169,4192

drivers/scsi/sg.c,799
int sg_big_buff 31,677
struct Scsi_Device_Template sg_template 39,905
static char *big_buff 45,1115
static struct wait_queue *big_wait;46,1145
static int big_inuse=47,1215
struct scsi_genericscsi_generic50,1247
static struct scsi_generic *scsi_generics=66,1908
static int sg_ioctl(69,1999
static int sg_open(112,3394
static int sg_close(181,5323
static char *sg_malloc(194,5753
static void sg_free(214,6074
static ssize_t sg_read(232,6449
static void sg_command_done(308,8457
static ssize_t sg_write(368,10130
static unsigned int sg_poll(552,15028
static struct file_operations sg_fops 568,15563
static int sg_detect(583,15967
static int sg_init(601,16398
static int sg_attach(638,17320
static void sg_detach(669,18036
int init_module(691,18548
void cleanup_module(696,18680

drivers/scsi/t128.c,729
#define AUTOSENSE1,0
#define PSEUDO_DMA2,18
#define AUTOPROBE_IRQ117,3151
struct proc_dir_entry proc_scsi_t128 124,3282
static struct override override130,3394
} overrides 133,3460
    [] __initdata 135,3494
    [4] __initdata 137,3535
#define NO_OVERRIDES 141,3643
static struct base base143,3711
} bases[146,3774
} bases[] __initdata 146,3774
#define NO_BASES 150,3866
static const struct signature signature152,3924
} signatures[155,3996
} signatures[] __initdata 155,3996
#define NO_SIGNATURES 159,4072
__initfunc(171,4387
__initfunc(202,5240
int t128_biosparam(305,8406
static inline int NCR5380_pread 327,8883
static inline int NCR5380_pwrite 371,9990
Scsi_Host_Template driver_template 405,10885

drivers/scsi/t128.h,1302
#define T128_H42,801
#define T128_PUBLIC_RELEASE 44,817
#define TDEBUG_INIT	46,848
#define TDEBUG_TRANSFER 47,872
#define T_ROM_OFFSET	63,1509
#define T_RAM_OFFSET	69,1668
#define T_CONTROL_REG_OFFSET	75,1852
#define T_CR_INT	76,1897
#define T_CR_CT	77,1944
#define T_STATUS_REG_OFFSET	79,1995
#define T_ST_BOOT	80,2039
#define T_ST_S3	81,2081
#define T_ST_S2	82,2134
#define T_ST_S1	83,2195
#define T_ST_PS2	84,2218
#define T_ST_RDY	85,2272
#define T_ST_TIM	86,2310
#define T_ST_ZERO	87,2375
#define T_5380_OFFSET	89,2418
#define T_DATA_REG_OFFSET	91,2487
#define NULL 103,2903
#define CMD_PER_LUN 107,2946
#define CAN_QUEUE 111,2994
#define TRANTOR_T128 122,3275
#define NCR5380_implementation_fields 139,3718
#define NCR5380_local_declare(NCR5380_local_declare142,3792
#define NCR5380_setup(NCR5380_setup145,3860
#define T128_address(T128_address148,3950
#define NCR5380_read(NCR5380_read151,4050
#define NCR5380_write(NCR5380_write152,4099
#define NCR5380_read(NCR5380_read154,4172
#define NCR5380_write(NCR5380_write158,4356
#define NCR5380_intr 165,4581
#define do_NCR5380_intr 166,4612
#define NCR5380_queue_command 167,4649
#define NCR5380_abort 168,4698
#define NCR5380_reset 169,4731
#define NCR5380_proc_info 170,4764
#define T128_IRQS 175,4858

drivers/scsi/fdomain.h,113
#define _FDOMAIN_H26,1030
extern struct proc_dir_entry proc_scsi_fdomain;38,1569
#define FDOMAIN_16X0 40,1618

drivers/scsi/ibmmca.c,4505
#define IBMMCA_SCSI_DRIVER_VERSION 312,16135
#define IM_MAX_HOSTS 495,25792
#define IM_RESET_DELAY 496,25870
#define IM_DEBUG_CMD_DEVICE 512,26453
#define IM_CMD_REG 515,26556
#define IM_ATTN_REG 516,26635
#define IM_CTR_REG 517,26699
#define IM_INTR_REG 518,26767
#define IM_STAT_REG 519,26843
#define IM_IO_PORT 522,26960
#define IM_N_IO_PORT 524,27036
#define IM_IMM_CMD 528,27201
#define IM_SCB 529,27250
#define IM_LONG_SCB 530,27313
#define IM_EOI 531,27381
#define IM_HW_RESET 534,27507
#define IM_ENABLE_DMA 535,27556
#define IM_ENABLE_INTR 536,27623
#define IM_SCB_CMD_COMPLETED 540,27827
#define IM_SCB_CMD_COMPLETED_WITH_RETRIES 541,27875
#define IM_ADAPTER_HW_FAILURE 542,27923
#define IM_IMMEDIATE_CMD_COMPLETED 543,27971
#define IM_CMD_COMPLETED_WITH_FAILURE 544,28019
#define IM_CMD_ERROR 545,28067
#define IM_SOFTWARE_SEQUENCING_ERROR 546,28115
#define IM_CMD_REG_FULL 549,28236
#define IM_CMD_REG_EMPTY 550,28267
#define IM_INTR_REQUEST 551,28298
#define IM_BUSY 552,28329
#define IM_RESET_IMM_CMD 555,28432
#define IM_FEATURE_CTR_IMM_CMD 556,28471
#define IM_DMA_PACING_IMM_CMD 557,28510
#define IM_ASSIGN_IMM_CMD 558,28549
#define IM_ABORT_IMM_CMD 559,28588
#define IM_FORMAT_PREP_IMM_CMD 560,28627
struct im_scbim_scb563,28712
struct im_sgeim_sge591,29575
#define IM_NO_SYNCHRONOUS 598,29682
#define IM_NO_DISCONNECT 599,29746
#define IM_READ_DATA_CMD 600,29810
#define IM_WRITE_DATA_CMD 601,29848
#define IM_READ_VERIFY_CMD 602,29886
#define IM_WRITE_VERIFY_CMD 603,29924
#define IM_REQUEST_SENSE_CMD 604,29962
#define IM_READ_CAPACITY_CMD 605,30000
#define IM_DEVICE_INQUIRY_CMD 606,30038
#define IM_OTHER_SCSI_CMD_CMD 607,30076
#define IM_GET_COMMAND_COMPLETE_STATUS_CMD 610,30157
#define IM_GET_POS_INFO_CMD 611,30230
#define IM_READ_PREFETCH_CMD 612,30307
#define IM_FOMAT_UNIT_CMD 613,30389
#define IM_REASSIGN_BLOCK_CMD 614,30459
#define IM_READ_CONTROL 617,30585
#define IM_REPORT_TSB_ONLY_ON_ERROR 618,30629
#define IM_RETRY_ENABLE 619,30673
#define IM_POINTER_TO_LIST 620,30717
#define IM_SUPRESS_EXCEPTION_SHORT 621,30761
#define IM_CHAIN_ON_NO_ERROR 622,30805
struct im_tsbim_tsb625,30896
#define IM_IRQ 643,31399
#define MOD95_LED_PORT	658,31954
#define PS2_SYS_CTR 660,32044
static int use_display 670,32596
#define PS2_DISK_LED_ON(PS2_DISK_LED_ON671,32624
#define PS2_DISK_LED_OFF(PS2_DISK_LED_OFF678,32887
struct subsys_list_structsubsys_list_struct687,33173
struct subsys_list_struct subsys_list[694,33300
struct proc_dir_entry proc_scsi_ibmmca 704,33600
#define MAX_LOG_DEV 712,33817
struct logical_devicelogical_device715,33879
struct Driver_StatisticsDriver_Statistics728,34371
struct ibmmca_hostdataibmmca_hostdata748,35447
#define HOSTDATA(HOSTDATA776,36511
#define subsystem_pun 777,36580
#define ld 778,36619
#define get_ldn 779,36653
#define get_scsi 780,36697
#define local_checking_phase_flag 781,36743
#define got_interrupt 782,36823
#define stat_result 783,36879
#define reset_status 784,36931
#define last_scsi_command 785,36985
#define next_ldn 786,37049
#define IBM_DS 787,37095
#define TYPE_IBM_SCSI_ADAPTER 791,37292
#define TYPE_NO_DEVICE 796,37495
#define TYPE_MEDIUM_CHANGER 801,37669
#define SET_LDN 805,37780
#define REMOVE_LDN 806,37805
#define IM_RESET_NOT_IN_PROGRESS 809,37864
#define IM_RESET_IN_PROGRESS 810,37901
#define IM_RESET_FINISHED_OK 811,37938
#define IM_RESET_FINISHED_FAIL 812,37975
static int io_port[817,38164
static int scsi_id[818,38227
static int disk_rw_in_progress 829,38638
static int found 832,38698
static struct Scsi_Host *hosts[833,38720
do_interrupt_handler 862,40114
interrupt_handler 872,40360
issue_cmd 1008,44012
internal_done 1031,44544
static int ibmmca_getinfo 1038,44676
static int device_inquiry(1051,45058
static int immediate_assign(1087,46126
static char *ti_p(1121,47230
static char *ti_l(1142,47956
static void check_devices 1176,49436
device_exists 1385,56134
ibmmca_scsi_setup 1517,59821
ibmmca_detect 1535,60189
ibmmca_register(1622,62949
ibmmca_command 1670,64071
ibmmca_release(1682,64319
int ibmmca_queuecommand 1709,65750
ibmmca_abort 2011,76156
ibmmca_reset 2069,77637
ibmmca_biosparam 2123,79180
static int ldn_access_load(2146,79681
static int ldn_access_total_read_write(2154,79953
static int ldn_access_total_inquiry(2164,80160
static int ldn_access_total_modeselect(2174,80340
int ibmmca_proc_info 2185,80600
Scsi_Host_Template driver_template 2289,85278

drivers/scsi/scsi_syms.c,79
#define __NO_VERSION__5,88
extern const char *const scsi_device_types[41,865

drivers/scsi/53c7,8xx.c,3434
#define PERM_OPTIONS 69,2417
#define PERM_OPTIONS 72,2548
#define PERM_OPTIONS 77,2708
#define PERM_OPTIONS 80,2813
#define LINUX_1_3219,7846
#define LINUX_1_2221,7870
#define u32 226,7920
#define s32 227,7942
typedef __signed__ int s32;s32231,8009
typedef unsigned int  u32;u32232,8037
struct proc_dir_entry proc_scsi_ncr53c7xx 267,8748
static int NCR53c8xx_script_len;291,9833
static int NCR53c8xx_dsa_len;292,9866
static long long perm_options 311,10738
static int selection_timeout 313,10838
static int track_events 315,10917
static struct Scsi_Host *first_host 317,10947
static Scsi_Host_Template *the_template 318,11024
} pci_chip_ids[486,18011
#define NPCI_CHIP_IDS 493,18213
#define ROUNDUP(ROUNDUP495,18286
static struct override override507,18766
} overrides 525,19269
static int commandline_current 526,19296
static int no_overrides 527,19332
#define OVERRIDE_LIMIT 530,19368
#define OVERRIDE_LIMIT 532,19443
issue_to_cmd 548,19812
internal_setup(584,21163
#define setup_wrapper(setup_wrapper630,22805
setup_wrapper(635,22942
static const unsigned char async_message[661,23596
static const unsigned char wdtr_message[667,23781
find_host 684,24205
request_synchronous 712,25027
request_disconnect 760,26220
NCR53c7x0_driver_init 784,26833
ccf_to_clock 833,28458
clock_to_ccf 855,28995
NCR53c7x0_init 884,29725
__initfunc(1201,39786
__initfunc(1414,47131
__initfunc(1563,52024
#define DEBUG_SYNC_INTR 1615,53773
static int NCR53c8xx_script_len 1617,53821
static int NCR53c8xx_dsa_len 1618,53872
NCR53c8x0_init_fixup 1630,54189
NCR53c8xx_run_tests 1857,62728
NCR53c8xx_dsa_fixup 2034,68369
static volatile int process_issue_queue_running 2116,71472
run_process_issue_queue(2119,71550
abnormal_finished 2151,72517
intr_break 2267,76085
print_synchronous 2322,77676
set_synchronous 2349,78688
asynchronous 2427,80926
} syncs[2450,81729
synchronous 2478,82679
NCR53c8x0_dstat_sir_intr 2537,84831
static const char debugger_help 3111,104235
static int debugger_fn_bc 3132,104831
debugger_fn_bl 3165,105704
debugger_fn_bs 3204,106910
#define TOKEN(TOKEN3241,108051
static const struct debugger_token debugger_token3242,108112
} debugger_tokens[3246,108239
#define NDT 3252,108479
static struct Scsi_Host * inode_to_host 3254,108548
debugger_user_write 3265,108820
debugger_user_read 3318,110030
debugger_kernel_write 3325,110168
NCR53c8x0_soft_reset 3363,111178
allocate_cmd 3469,114533
create_cmd 3558,117300
NCR53c7xx_queue_command 3926,129488
to_schedule_list 4014,132485
busyp 4104,135136
process_issue_queue 4130,136071
intr_scsi 4222,138876
do_NCR53c7x0_intr(4403,144149
NCR53c7x0_intr 4423,144734
abort_connected 4695,152732
datapath_residual 4767,154565
sbcl_to_phase 4809,155933
sstat2_to_phase 4838,156535
intr_phase_mismatch 4873,157471
intr_bf 5091,164924
intr_dma 5192,167967
print_insn 5420,175553
ncr_state 5488,177416
NCR53c7xx_abort 5513,178059
NCR53c7xx_reset 5680,183092
insn_to_offset 5770,185855
print_progress 5833,187711
print_dsa 5876,188871
print_queues 5950,191561
print_lots 6031,194279
shutdown 6096,196572
ncr_scsi_reset 6121,197135
hard_reset 6149,197882
return_outstanding_commands 6184,199048
disable 6250,200757
ncr_halt 6286,201803
event_name 6351,203300
dump_events 6374,204062
check_address 6431,205658
NCR53c7x0_release(6438,205817
Scsi_Host_Template driver_template 6476,206994

drivers/scsi/53c7,8xx.h,17904
#define NCR53c7x0_H40,769
#define LINUX_1_344,904
#define LINUX_1_246,928
#define NCR53c7xx_release 66,1479
#define NCR53c7xx 69,1518
#define SCNTL0_REG 89,2112
#define SCNTL0_ARB1	90,2139
#define SCNTL0_ARB2	91,2196
#define SCNTL0_STRT	92,2251
#define SCNTL0_WATN	93,2298
#define SCNTL0_EPC	94,2346
#define SCNTL0_EPG_700	96,2444
#define SCNTL0_AAP	97,2504
#define SCNTL0_TRG	98,2557
#define SCNTL1_REG 102,2642
#define SCNTL1_EXC	103,2669
#define SCNTL1_ADB	104,2732
#define SCNTL1_ESR_700	105,2788
#define SCNTL1_DHP_800	107,2882
#define SCNTL1_CON	109,2978
#define SCNTL1_RST	110,3019
#define SCNTL1_AESP	111,3060
#define SCNTL1_SND_700	112,3109
#define SCNTL1_IARB_800	113,3160
#define SCNTL1_RCV_700	116,3291
#define SCNTL1_SST_800	117,3345
#define SCNTL2_REG_800	121,3427
#define SCNTL2_800_SDU	122,3457
#define SCNTL3_REG_800 126,3545
#define SCNTL3_800_SCF_SHIFT	127,3576
#define SCNTL3_800_SCF_MASK	128,3607
#define SCNTL3_800_SCF2	129,3640
#define SCNTL3_800_SCF1	130,3696
#define SCNTL3_800_SCF0	131,3746
#define SCNTL3_800_CCF_SHIFT	136,3875
#define SCNTL3_800_CCF_MASK	137,3906
#define SCNTL3_800_CCF2	138,3939
#define SCNTL3_800_CCF1	139,3992
#define SCNTL3_800_CCF0	140,4045
#define SDID_REG_700 149,4311
#define SDID_REG_800	150,4341
#define GP_REG_800	152,4369
#define GP_800_IO1	153,4419
#define GP_800_IO2	154,4444
#define SIEN_REG_700	158,4518
#define SIEN0_REG_800	159,4546
#define SIEN_MA	160,4574
#define SIEN_FC	161,4637
#define SIEN_700_STO	162,4684
#define SIEN_800_SEL	163,4750
#define SIEN_700_SEL	164,4792
#define SIEN_800_RESEL	165,4848
#define SIEN_SGE	166,4894
#define SIEN_UDC	167,4940
#define SIEN_RST	168,4991
#define SIEN_PAR	169,5039
#define SCID_REG	180,5323
#define SCID_800_RRE	182,5391
#define SCID_800_SRE	183,5455
#define SCID_800_ENC_MASK	185,5576
#define SXFER_REG	188,5669
#define SXFER_DHP	189,5693
#define SXFER_TP2	191,5747
#define SXFER_TP1	192,5797
#define SXFER_TP0	193,5821
#define SXFER_TP_MASK	194,5855
#define SXFER_TP_SHIFT	196,5941
#define SXFER_TP_4	197,5967
#define SXFER_TP_5	198,6007
#define SXFER_TP_6	199,6035
#define SXFER_TP_7	200,6063
#define SXFER_TP_8	201,6091
#define SXFER_TP_9	202,6119
#define SXFER_TP_10	203,6147
#define SXFER_TP_11	204,6176
#define SXFER_MO3	206,6206
#define SXFER_MO2	207,6251
#define SXFER_MO1	208,6275
#define SXFER_MO0	209,6299
#define SXFER_MO_MASK	210,6333
#define SXFER_MO_SHIFT	211,6361
#define SODL_REG_700	219,6625
#define SODL_REG_800	220,6653
#define SBCL_REG	231,6977
#define SBCL_REQ	232,7000
#define SBCL_ACK	233,7034
#define SBCL_BSY	234,7068
#define SBCL_SEL	235,7102
#define SBCL_ATN	236,7136
#define SBCL_MSG	237,7170
#define SBCL_CD	238,7204
#define SBCL_IO	239,7238
#define SBCL_PHASE_CMDOUT	240,7272
#define SBCL_PHASE_DATAIN	241,7306
#define SBCL_PHASE_DATAOUT	242,7340
#define SBCL_PHASE_MSGIN	243,7369
#define SBCL_PHASE_MSGOUT	244,7421
#define SBCL_PHASE_STATIN	245,7466
#define SBCL_PHASE_MASK	246,7510
#define SFBR_REG	264,7985
#define SIDL_REG_700	272,8197
#define SIDL_REG_800	273,8224
#define SBDL_REG_700	281,8483
#define SBDL_REG_800	282,8510
#define SSID_REG_800	284,8538
#define SSID_800_VAL	285,8565
#define SSID_800_ENCID_MASK	286,8631
#define SOCL_REG	293,8787
#define SOCL_REQ	294,8812
#define SOCL_ACK	295,8849
#define SOCL_BSY	296,8886
#define SOCL_SEL	297,8923
#define SOCL_ATN	298,8960
#define SOCL_MSG	299,8997
#define SOCL_CD	300,9034
#define SOCL_IO	301,9071
#define SBCL_SSCF1	309,9232
#define SBCL_SSCF0	310,9276
#define SBCL_SSCF_MASK	311,9320
#define DSTAT_REG	318,9505
#define DSTAT_DFE	319,9530
#define DSTAT_800_MDPE	320,9575
#define DSTAT_800_BF	321,9635
#define DSTAT_ABRT	322,9678
#define DSTAT_SSI	323,9732
#define DSTAT_SIR	324,9792
#define DSTAT_WTD	327,9906
#define DSTAT_OPC	328,9962
#define DSTAT_800_IID	329,10012
#define SSTAT0_REG	333,10119
#define SIST0_REG_800	334,10167
#define SSTAT0_MA	335,10196
#define SSTAT0_CMP	338,10283
#define SSTAT0_700_STO	339,10332
#define SIST0_800_SEL	340,10400
#define SSTAT0_700_SEL	341,10443
#define SIST0_800_RSL	342,10501
#define SSTAT0_SGE	343,10546
#define SSTAT0_UDC	344,10594
#define SSTAT0_RST	345,10647
#define SSTAT0_PAR	346,10697
#define SSTAT1_REG	350,10785
#define SSTAT1_ILF	351,10833
#define SSTAT1_ORF	352,10874
#define SSTAT1_OLF	353,10915
#define SSTAT1_AIP	354,10956
#define SSTAT1_LOA	355,11011
#define SSTAT1_WOA	356,11059
#define SSTAT1_RST	357,11106
#define SSTAT1_SDP	358,11161
#define SSTAT2_REG	360,11217
#define SSTAT2_FF3	361,11265
#define SSTAT2_FF2	362,11328
#define SSTAT2_FF1	363,11369
#define SSTAT2_FF0	364,11395
#define SSTAT2_FF_MASK	365,11420
#define SSTAT2_FF_SHIFT	366,11449
#define SSTAT2_SDP	372,11578
#define SSTAT2_MSG	373,11613
#define SSTAT2_CD	374,11648
#define SSTAT2_IO	375,11682
#define SSTAT2_PHASE_CMDOUT	376,11716
#define SSTAT2_PHASE_DATAIN	377,11754
#define SSTAT2_PHASE_DATAOUT	378,11792
#define SSTAT2_PHASE_MSGIN	379,11823
#define SSTAT2_PHASE_MSGOUT	380,11883
#define SSTAT2_PHASE_STATIN	381,11934
#define SSTAT2_PHASE_MASK	382,11984
#define SCRATCHA_REG_00	386,12069
#define DSA_REG	388,12162
#define CTEST0_REG_700	390,12215
#define CTEST0_REG_800	391,12265
#define CTEST0_700_RTRG	393,12363
#define CTEST0_700_DDIR	394,12416
#define CTEST1_REG_700	399,12533
#define CTEST1_REG_800	400,12583
#define CTEST1_FMT3	401,12633
#define CTEST1_FMT2	402,12701
#define CTEST1_FMT1	403,12750
#define CTEST1_FMT0	404,12776
#define CTEST1_FFL3	406,12803
#define CTEST1_FFL2	407,12871
#define CTEST1_FFL1	408,12919
#define CTEST1_FFL0	409,12945
#define CTEST2_REG_700	411,12972
#define CTEST2_REG_800	412,13022
#define CTEST2_800_DDIR	414,13073
#define CTEST2_800_SIGP	415,13124
#define CTEST2_800_CIO	417,13222
#define CTEST2_800_CM	418,13275
#define CTEST2_700_SOFF	421,13382
#define CTEST2_700_SFP	429,13657
#define CTEST2_700_DFP	433,13794
#define CTEST2_TEOP	437,13930
#define CTEST2_DREQ	441,14048
#define CTEST2_800_DACK	443,14143
#define CTEST3_REG_700	452,14477
#define CTEST3_REG_800	454,14529
#define CTEST3_800_V3	455,14558
#define CTEST3_800_V2	456,14606
#define CTEST3_800_V1	457,14634
#define CTEST3_800_V0	458,14662
#define CTEST3_800_FLF	459,14690
#define CTEST3_800_CLF	460,14740
#define CTEST3_800_FM	461,14790
#define CTEST4_REG_700	464,14884
#define CTEST4_REG_800	465,14934
#define CTEST4_800_BDIS	467,15027
#define CTEST4_ZMOD	468,15082
#define CTEST4_SZM	469,15134
#define CTEST4_700_SLBE	470,15189
#define CTEST4_800_SRTM	471,15247
#define CTEST4_700_SFWR	472,15309
#define CTEST4_800_MPEE	476,15437
#define CTEST4_FBL2	485,15763
#define CTEST4_FBL1	486,15790
#define CTEST4_FBL0	487,15816
#define CTEST4_FBL_MASK	488,15843
#define CTEST4_FBL_0	489,15873
#define CTEST4_FBL_1	490,15934
#define CTEST4_FBL_2	491,15995
#define CTEST4_FBL_3	492,16056
#define CTEST4_800_SAVE	493,16117
#define CTEST5_REG_700	496,16162
#define CTEST5_REG_800	497,16212
#define CTEST5_ADCK	503,16446
#define CTEST5_BBCK	508,16578
#define CTEST5_700_ROFF	518,17021
#define CTEST5_MASR 524,17212
#define CTEST5_DDIR	525,17240
#define CTEST5_700_EOP	529,17338
#define CTEST5_700_DREQ	530,17388
#define CTEST5_700_DACK	531,17437
#define CTEST6_REG_700	538,17645
#define CTEST6_REG_800	539,17674
#define CTEST7_REG	541,17704
#define CTEST7_10_CDIS	543,17817
#define CTEST7_10_SC1	544,17872
#define CTEST7_10_SC0	545,17925
#define CTEST7_10_SC_MASK	546,17954
#define CTEST7_0060_FM	548,18025
#define CTEST7_STD	549,18071
#define CTEST7_DFP	550,18128
#define CTEST7_EVP	551,18190
#define CTEST7_10_TT1	552,18255
#define CTEST7_00_DC	553,18303
#define CTEST7_DIFF	555,18390
#define CTEST7_SAVE 557,18441
#define TEMP_REG	560,18492
#define DFIFO_REG	562,18554
#define DFIFO_00_FLF	567,18708
#define DFIFO_00_CLF	568,18766
#define DFIFO_BO6	569,18824
#define DFIFO_BO5	570,18848
#define DFIFO_BO4	571,18872
#define DFIFO_BO3	572,18896
#define DFIFO_BO2	573,18920
#define DFIFO_BO1	574,18945
#define DFIFO_BO0	575,18969
#define DFIFO_10_BO_MASK	576,18993
#define DFIFO_00_BO_MASK	577,19043
#define ISTAT_REG_700	584,19225
#define ISTAT_REG_800	585,19253
#define ISTAT_ABRT	586,19281
#define ISTAT_10_SRST	589,19443
#define ISTAT_10_SIGP	590,19492
#define ISTAT_800_SEM	592,19589
#define ISTAT_CON	593,19633
#define ISTAT_800_INTF	594,19680
#define ISTAT_700_PRE	595,19736
#define ISTAT_SIP	600,19911
#define ISTAT_DIP	604,20023
#define CTEST8_REG	609,20139
#define CTEST8_0066_EAS	610,20185
#define CTEST8_0066_EFM	613,20300
#define CTEST8_0066_GRP	614,20368
#define CTEST8_0066_TE	619,20535
#define CTEST8_0066_HSC	624,20696
#define CTEST8_0066_SRA	625,20748
#define CTEST8_0066_DAS	629,20870
#define CTEST8_0066_LDE	632,20966
#define CTEST8_10_V3	642,21267
#define CTEST8_10_V2	643,21314
#define CTEST8_10_V1	644,21341
#define CTEST8_10_V0	645,21369
#define CTEST8_10_V_MASK	646,21396
#define CTEST8_10_FLF	647,21427
#define CTEST8_10_CLF	648,21473
#define CTEST8_10_FM	649,21519
#define CTEST8_10_SM	650,21567
#define CTEST9_REG_00	663,21949
#define LCRC_REG_10	664,21998
#define DBC_REG	675,22263
#define DBC_TCI_TRUE	682,22511
#define DBC_TCI_COMPARE_DATA	683,22565
#define DBC_TCI_COMPARE_PHASE	684,22623
#define DBC_TCI_WAIT_FOR_VALID	685,22699
#define DBC_TCI_MASK_MASK	687,22816
#define DBC_TCI_MASK_SHIFT	688,22879
#define DBC_TCI_DATA_MASK	689,22908
#define DBC_TCI_DATA_SHIFT	690,22967
#define DBC_RWRI_IMMEDIATE_MASK	692,22997
#define DBC_RWRI_IMMEDIATE_SHIFT 693,23058
#define DBC_RWRI_ADDRESS_MASK	694,23116
#define DBC_RWRI_ADDRESS_SHIFT 695,23178
#define DCMD_REG	701,23241
#define DCMD_TYPE_MASK	702,23265
#define DCMD_TYPE_BMI	703,23315
#define DCMD_BMI_IO	704,23384
#define DCMD_BMI_CD	705,23450
#define DCMD_BMI_MSG	706,23516
#define DCMD_BMI_OP_MASK	708,23570
#define DCMD_BMI_OP_MOVE_T	709,23622
#define DCMD_BMI_OP_MOVE_I	710,23665
#define DCMD_BMI_INDIRECT	712,23719
#define DCMD_TYPE_TCI	714,23778
#define DCMD_TCI_IO	716,23862
#define DCMD_TCI_CD	717,23928
#define DCMD_TCI_MSG	718,23994
#define DCMD_TCI_OP_MASK	719,24047
#define DCMD_TCI_OP_JUMP	720,24099
#define DCMD_TCI_OP_CALL	721,24140
#define DCMD_TCI_OP_RETURN	722,24181
#define DCMD_TCI_OP_INT	723,24226
#define DCMD_TYPE_RWRI	725,24267
#define DCMD_RWRI_OPC_MASK	727,24359
#define DCMD_RWRI_OPC_WRITE	728,24409
#define DCMD_RWRI_OPC_READ	729,24471
#define DCMD_RWRI_OPC_MODIFY	730,24531
#define DCMD_RWRI_OP_MASK	732,24588
#define DCMD_RWRI_OP_MOVE	733,24619
#define DCMD_RWRI_OP_SHL	734,24650
#define DCMD_RWRI_OP_OR	735,24680
#define DCMD_RWRI_OP_XOR	736,24710
#define DCMD_RWRI_OP_AND	737,24740
#define DCMD_RWRI_OP_SHR	738,24770
#define DCMD_RWRI_OP_ADD	739,24800
#define DCMD_RWRI_OP_ADDC	740,24830
#define DCMD_TYPE_MMI	742,24862
#define DNAD_REG	746,24957
#define DSP_REG	748,25034
#define DSPS_REG	749,25099
#define DMODE_REG_00	751,25178
#define DMODE_00_BL1	752,25224
#define DMODE_00_BL0	753,25274
#define DMODE_BL_MASK	754,25300
#define DMODE_BL_2	756,25353
#define DMODE_BL_4	757,25394
#define DMODE_BL_8	758,25436
#define DMODE_BL_16	759,25478
#define DMODE_700_BW16	761,25523
#define DMODE_700_286	762,25576
#define DMODE_700_IOM	763,25618
#define DMODE_700_FAM	764,25671
#define DMODE_700_PIPE	765,25723
#define DMODE_MAN	768,25819
#define DMODE_700_SAVE 774,25986
#define SCRATCHA_REG_800	777,26090
#define SCRATCB_REG_10	779,26173
#define DMODE_REG_10 781,26235
#define DMODE_800_SIOM	782,26304
#define DMODE_800_DIOM	783,26353
#define DMODE_800_ERL	784,26407
#define DIEN_REG	787,26515
#define DIEN_800_MDPE	789,26628
#define DIEN_800_BF	790,26687
#define DIEN_ABRT	791,26729
#define DIEN_SSI	792,26784
#define DIEN_SIR	793,26842
#define DIEN_700_WTD	797,26966
#define DIEN_700_OPC	798,27033
#define DIEN_800_IID	801,27119
#define DWT_REG	807,27248
#define DCNTL_REG	810,27293
#define DCNTL_700_CF1	811,27317
#define DCNTL_700_CF0	812,27370
#define DCNTL_700_CF_MASK	813,27398
#define DCNTL_700_CF_2	815,27481
#define DCNTL_700_CF_1_5	816,27538
#define DCNTL_700_CF_1	817,27593
#define DCNTL_700_CF_3	818,27648
#define DCNTL_700_S16	820,27715
#define DCNTL_SSM	821,27780
#define DCNTL_700_LLM	822,27827
#define DCNTL_800_IRQM	824,27918
#define DCNTL_STD	825,27972
#define DCNTL_00_RST	827,28045
#define DCNTL_10_COM	831,28205
#define DCNTL_700_SAVE 833,28271
#define SCRATCHB_REG_00	837,28349
#define SCRATCHB_REG_800	838,28411
#define ADDER_REG_10	840,28494
#define SIEN1_REG_800	842,28550
#define SIEN1_800_STO	843,28578
#define SIEN1_800_GEN	844,28642
#define SIEN1_800_HTH	845,28698
#define SIST1_REG_800	847,28756
#define SIST1_800_STO	848,28784
#define SIST1_800_GEN	849,28848
#define SIST1_800_HTH	850,28904
#define SLPAR_REG_800	852,28962
#define MACNTL_REG_800	854,29004
#define MACNTL_800_TYP3	855,29061
#define MACNTL_800_TYP2	856,29091
#define MACNTL_800_TYP1	857,29121
#define MACNTL_800_TYP0	858,29151
#define MACNTL_800_DWR	859,29181
#define MACNTL_800_DRD	860,29210
#define MACNTL_800_PSCPT	861,29239
#define MACNTL_800_SCPTS	862,29269
#define GPCNTL_REG_800	864,29300
#define STIME0_REG_800	867,29439
#define STIME0_800_HTH_MASK	868,29496
#define STIME0_800_HTH_SHIFT	869,29566
#define STIME0_800_SEL_MASK	870,29597
#define STIME0_800_SEL_SHIFT	871,29654
#define STIME1_REG_800	873,29686
#define STIME1_800_GEN_MASK	874,29715
#define RESPID_REG_800	876,29777
#define STEST0_REG_800	879,29883
#define STEST0_800_SLT	880,29913
#define STEST0_800_ART	881,29978
#define STEST0_800_SOZ	882,30047
#define STEST0_800_SOM	883,30106
#define STEST1_REG_800	885,30169
#define STEST1_800_SCLK	886,30198
#define STEST2_REG_800	888,30254
#define STEST2_800_SCE	889,30284
#define STEST2_800_ROF	890,30336
#define STEST2_800_SLB	891,30394
#define STEST2_800_SZM	892,30455
#define STEST2_800_EXT	893,30515
#define STEST2_800_LOW	894,30583
#define STEST3_REG_800	896,30639
#define STEST3_800_TE	897,30670
#define STEST3_800_STR	898,30727
#define STEST3_800_HSC	899,30782
#define STEST3_800_DSI	900,30833
#define STEST3_800_TTM	901,30902
#define STEST3_800_CSF	902,30952
#define STEST3_800_STW	903,31003
#define OPTION_PARITY 905,31060
#define OPTION_TAGGED_QUEUE	906,31117
#define OPTION_700	907,31185
#define OPTION_INTFLY	908,31244
#define OPTION_DEBUG_INTR	909,31300
#define OPTION_DEBUG_INIT_ONLY	910,31354
#define OPTION_DEBUG_READ_ONLY	914,31525
#define OPTION_DEBUG_TRACE	916,31624
#define OPTION_DEBUG_SINGLE	919,31763
#define OPTION_SYNCHRONOUS	921,31849
#define OPTION_MEMORY_MAPPED	922,31907
#define OPTION_IO_MAPPED	924,31997
#define OPTION_DEBUG_PROBE_ONLY	926,32083
#define OPTION_DEBUG_TESTS_ONLY	927,32157
#define OPTION_DEBUG_TEST0	928,32235
#define OPTION_DEBUG_TEST1	929,32287
#define OPTION_DEBUG_TEST2	930,32339
#define OPTION_DEBUG_DUMP	931,32391
#define OPTION_DEBUG_TARGET_LIMIT 932,32445
#define OPTION_DEBUG_NCOMMANDS_LIMIT 933,32528
#define OPTION_DEBUG_SCRIPT 934,32609
#define OPTION_DEBUG_FIXUP 935,32686
#define OPTION_DEBUG_DSA 936,32747
#define OPTION_DEBUG_CORRUPTION	937,32781
#define OPTION_DEBUG_SDTR 938,32854
#define OPTION_DEBUG_MISMATCH 939,32921
#define OPTION_DISCONNECT	940,32992
#define OPTION_DEBUG_DISCONNECT 941,33051
#define OPTION_ALWAYS_SYNCHRONOUS 942,33095
#define OPTION_DEBUG_QUEUES	944,33193
#define OPTION_DEBUG_ALLOCATION 945,33233
#define OPTION_DEBUG_SYNCHRONOUS 946,33279
#define OPTION_NO_ASYNC	948,33382
#define OPTION_NO_PRINT_RACE 952,33560
#define PERM_OPTIONS 956,33728
struct NCR53c7x0_synchronous NCR53c7x0_synchronous959,33763
#define CMD_FLAG_SDTR 971,34180
#define CMD_FLAG_WDTR	973,34265
#define CMD_FLAG_DID_SDTR	975,34341
#define CMD_FLAG_DID_WDTR	976,34384
struct NCR53c7x0_table_indirect NCR53c7x0_table_indirect978,34428
enum ncr_event ncr_event983,34500
    EVENT_NONE 984,34518
    EVENT_ISSUE_QUEUE 990,34642
    EVENT_ISSUE_QUEUE = 0x5000000,990,34642
    EVENT_START_QUEUE,991,34716
    EVENT_SELECT,992,34776
    EVENT_DISCONNECT,993,34830
    EVENT_RESELECT,994,34881
    EVENT_COMPLETE,995,34928
    EVENT_IDLE,996,34981
    EVENT_SELECT_FAILED,997,34997
    EVENT_BEFORE_SELECT,998,35022
    EVENT_RESELECT_FAILED999,35047
struct NCR53c7x0_event NCR53c7x0_event1002,35077
struct NCR53c7x0_cmd NCR53c7x0_cmd1036,36175
struct NCR53c7x0_break NCR53c7x0_break1120,38945
#define STATE_HALTED	1127,39156
#define STATE_WAITING	1133,39402
#define STATE_RUNNING	1135,39482
#define STATE_ABORTING	1139,39561
#define STATE_ABORTED 1141,39641
#define STATE_DISABLED 1143,39733
#define SPECIFIC_INT_NOTHING 1152,40020
#define SPECIFIC_INT_RESTART	1153,40077
#define SPECIFIC_INT_ABORT	1154,40146
#define SPECIFIC_INT_PANIC	1155,40210
#define SPECIFIC_INT_DONE	1156,40272
#define SPECIFIC_INT_BREAK	1157,40332
struct NCR53c7x0_hostdata NCR53c7x0_hostdata1159,40392
#define IRQ_NONE	1441,49417
#define DMA_NONE	1442,49438
#define IRQ_AUTO	1443,49459
#define DMA_AUTO	1444,49480
#define BOARD_GENERIC	1446,49502
#define NCR53c7x0_insn_size(NCR53c7x0_insn_size1448,49527
#define NCR53c7x0_local_declare(NCR53c7x0_local_declare1452,49630
#define NCR53c7x0_local_setup(NCR53c7x0_local_setup1457,49806
#define NCR53c7x0_read8(NCR53c7x0_read81463,50085
#define NCR53c7x0_read16(NCR53c7x0_read161468,50268
#define NCR53c7x0_read32(NCR53c7x0_read321473,50452
#define NCR53c7x0_write8(NCR53c7x0_write81478,50638
#define NCR53c7x0_write16(NCR53c7x0_write161483,50848
#define NCR53c7x0_write32(NCR53c7x0_write321488,51059
#define patch_abs_32(patch_abs_321494,51319
#define patch_abs_rwri_data(patch_abs_rwri_data1506,51847
#define patch_abs_tci_data(patch_abs_tci_data1516,52286
#define patch_dsa_32(patch_dsa_321526,52725
#define FATAL(FATAL1537,53131

drivers/scsi/53c8xx_d.h,6438
u32 SCRIPT[1,0
#define A_NCR53c7xx_msg_abort	2181,49719
u32 A_NCR53c7xx_msg_abort_used[2182,49760
#define A_NCR53c7xx_msg_reject	2186,49814
u32 A_NCR53c7xx_msg_reject_used[2187,49856
#define A_NCR53c7xx_sink	2191,49911
u32 A_NCR53c7xx_sink_used[2192,49947
#define A_NCR53c7xx_zero	2198,50022
u32 A_NCR53c7xx_zero_used[2199,50058
#define A_NOP_insn	2204,50120
u32 A_NOP_insn_used[2205,50150
#define A_addr_reconnect_dsa_head	2209,50193
u32 A_addr_reconnect_dsa_head_used[2210,50238
#define A_addr_scratch	2214,50296
u32 A_addr_scratch_used[2215,50330
#define A_addr_temp	2229,50507
u32 A_addr_temp_used[2230,50538
#define A_dmode_memory_to_memory	2235,50595
u32 A_dmode_memory_to_memory_used[2236,50639
#define A_dmode_memory_to_ncr	2253,50865
u32 A_dmode_memory_to_ncr_used[2254,50906
#define A_dmode_ncr_to_memory	2262,51012
u32 A_dmode_ncr_to_memory_used[2263,51053
#define A_dsa_check_reselect	2274,51198
u32 A_dsa_check_reselect_used[2275,51238
#define A_dsa_cmdout	2279,51291
u32 A_dsa_cmdout_used[2280,51323
#define A_dsa_cmnd	2284,51368
u32 A_dsa_cmnd_used[2285,51398
#define A_dsa_datain	2288,51428
u32 A_dsa_datain_used[2289,51460
#define A_dsa_dataout	2293,51505
u32 A_dsa_dataout_used[2294,51538
#define A_dsa_end	2298,51584
u32 A_dsa_end_used[2299,51613
#define A_dsa_fields_start	2302,51642
u32 A_dsa_fields_start_used[2303,51680
#define A_dsa_msgin	2306,51718
u32 A_dsa_msgin_used[2307,51749
#define A_dsa_msgout	2311,51793
u32 A_dsa_msgout_used[2312,51825
#define A_dsa_msgout_other	2316,51870
u32 A_dsa_msgout_other_used[2317,51908
#define A_dsa_next	2321,51959
u32 A_dsa_next_used[2322,51989
#define A_dsa_restore_pointers	2326,52032
u32 A_dsa_restore_pointers_used[2327,52074
#define A_dsa_save_data_pointer	2331,52129
u32 A_dsa_save_data_pointer_used[2332,52172
#define A_dsa_select	2336,52228
u32 A_dsa_select_used[2337,52260
#define A_dsa_status	2341,52305
u32 A_dsa_status_used[2342,52337
#define A_dsa_temp_addr_array_value	2346,52382
u32 A_dsa_temp_addr_array_value_used[2347,52429
#define A_dsa_temp_addr_dsa_value	2350,52476
u32 A_dsa_temp_addr_dsa_value_used[2351,52521
#define A_dsa_temp_addr_new_value	2355,52579
u32 A_dsa_temp_addr_new_value_used[2356,52624
#define A_dsa_temp_addr_next	2359,52669
u32 A_dsa_temp_addr_next_used[2360,52709
#define A_dsa_temp_addr_residual	2365,52775
u32 A_dsa_temp_addr_residual_used[2366,52819
#define A_dsa_temp_addr_saved_pointer	2371,52889
u32 A_dsa_temp_addr_saved_pointer_used[2372,52938
#define A_dsa_temp_addr_saved_residual	2377,53013
u32 A_dsa_temp_addr_saved_residual_used[2378,53063
#define A_dsa_temp_lun	2383,53139
u32 A_dsa_temp_lun_used[2384,53173
#define A_dsa_temp_next	2388,53220
u32 A_dsa_temp_next_used[2389,53255
#define A_dsa_temp_sync	2393,53303
u32 A_dsa_temp_sync_used[2394,53338
#define A_dsa_temp_target	2398,53386
u32 A_dsa_temp_target_used[2399,53423
#define A_int_debug_break	2403,53473
u32 A_int_debug_break_used[2404,53510
#define A_int_debug_panic	2408,53560
u32 A_int_debug_panic_used[2409,53597
#define A_int_err_check_condition	2414,53660
u32 A_int_err_check_condition_used[2415,53705
#define A_int_err_no_phase	2419,53763
u32 A_int_err_no_phase_used[2420,53801
#define A_int_err_selected	2423,53839
u32 A_int_err_selected_used[2424,53877
#define A_int_err_unexpected_phase	2428,53928
u32 A_int_err_unexpected_phase_used[2429,53974
#define A_int_err_unexpected_reselect	2446,54202
u32 A_int_err_unexpected_reselect_used[2447,54251
#define A_int_msg_1	2451,54313
u32 A_int_msg_1_used[2452,54344
#define A_int_msg_sdtr	2457,54401
u32 A_int_msg_sdtr_used[2458,54435
#define A_int_msg_wdtr	2462,54482
u32 A_int_msg_wdtr_used[2463,54516
#define A_int_norm_aborted	2467,54563
u32 A_int_norm_aborted_used[2468,54601
#define A_int_norm_command_complete	2472,54652
u32 A_int_norm_command_complete_used[2473,54699
#define A_int_norm_disconnected	2476,54746
u32 A_int_norm_disconnected_used[2477,54789
#define A_int_norm_reselect_complete	2480,54832
u32 A_int_norm_reselect_complete_used[2481,54880
#define A_int_norm_reset	2484,54928
u32 A_int_norm_reset_used[2485,54964
#define A_int_norm_select_complete	2488,55000
u32 A_int_norm_select_complete_used[2489,55046
#define A_int_test_1	2492,55092
u32 A_int_test_1_used[2493,55124
#define A_int_test_2	2497,55169
u32 A_int_test_2_used[2498,55201
#define A_int_test_3	2502,55246
u32 A_int_test_3_used[2503,55278
#define A_msg_buf	2506,55310
u32 A_msg_buf_used[2507,55339
#define A_reconnect_dsa_head	2516,55446
u32 A_reconnect_dsa_head_used[2517,55486
#define A_reselected_identify	2523,55565
u32 A_reselected_identify_used[2524,55606
#define A_reselected_tag	2529,55673
u32 A_reselected_tag_used[2530,55709
#define A_schedule	2533,55745
u32 A_schedule_used[2534,55775
#define A_test_dest	2541,55857
u32 A_test_dest_used[2542,55888
#define A_test_src	2546,55932
u32 A_test_src_used[2547,55962
#define Ent_accept_message	2551,56005
#define Ent_cmdout_cmdout	2552,56043
#define Ent_command_complete	2553,56080
#define Ent_command_complete_msgin	2554,56120
#define Ent_data_transfer	2555,56166
#define Ent_datain_to_jump	2556,56203
#define Ent_debug_break	2557,56241
#define Ent_dsa_code_begin	2558,56276
#define Ent_dsa_code_check_reselect	2559,56314
#define Ent_dsa_code_fix_jump	2560,56361
#define Ent_dsa_code_restore_pointers	2561,56402
#define Ent_dsa_code_save_data_pointer	2562,56451
#define Ent_dsa_code_template	2563,56501
#define Ent_dsa_code_template_end	2564,56542
#define Ent_dsa_schedule	2565,56587
#define Ent_dsa_zero	2566,56623
#define Ent_end_data_transfer	2567,56655
#define Ent_initiator_abort	2568,56696
#define Ent_msg_in	2569,56735
#define Ent_msg_in_restart	2570,56765
#define Ent_other_in	2571,56803
#define Ent_other_out	2572,56835
#define Ent_other_transfer	2573,56868
#define Ent_reject_message	2574,56906
#define Ent_reselected_check_next	2575,56944
#define Ent_reselected_ok	2576,56989
#define Ent_respond_message	2577,57026
#define Ent_select	2578,57065
#define Ent_select_msgout	2579,57095
#define Ent_target_abort	2580,57132
#define Ent_test_1	2581,57168
#define Ent_test_2	2582,57198
#define Ent_test_2_msgout	2583,57228
#define Ent_wait_reselect	2584,57265
u32 LABELPATCHES[2585,57302
} EXTERNAL_PATCHES[2672,58421
u32 INSTRUCTIONS	2675,58450
u32 PATCHES	2676,58474
u32 EXTERNAL_PATCHES_LEN	2677,58492

drivers/scsi/in2000.h,6852
#define IN2000_H24,793
#define PROC_INTERFACE 28,832
#define PROC_STATISTICS 30,933
#define SYNC_DEBUG 33,1019
#define DEBUGGING_ON 34,1091
#define DEBUG_DEFAULTS 35,1162
#define FAST_READ_IO 37,1239
#define FAST_WRITE_IO38,1309
#define DB(DB41,1352
#define CHECK_NULL(CHECK_NULL42,1397
#define DB(DB44,1492
#define CHECK_NULL(CHECK_NULL45,1508
#define uchar 48,1540
#define read1_io(read1_io50,1569
#define read2_io(read2_io51,1622
#define write1_io(write1_io52,1675
#define write2_io(write2_io53,1733
#define FAST_READ2_IO(FAST_READ2_IO64,2167
#define FAST_WRITE2_IO(FAST_WRITE2_IO76,2559
#define IO_WD_ASR 90,2981
#define     ASR_INT 91,3041
#define     ASR_LCI 92,3073
#define     ASR_BSY 93,3105
#define     ASR_CIP 94,3137
#define     ASR_PE 95,3169
#define     ASR_DBR 96,3201
#define IO_WD_ADDR 97,3233
#define IO_WD_DATA 98,3293
#define IO_FIFO 99,3356
#define IN2000_FIFO_SIZE 100,3433
#define IO_CARD_RESET 101,3498
#define IO_FIFO_COUNT 102,3567
#define IO_FIFO_WRITE 103,3630
#define IO_FIFO_READ 104,3705
#define IO_LED_OFF 105,3764
#define IO_SWITCHES 106,3836
#define     SW_ADDR0 107,3902
#define     SW_ADDR1 108,3978
#define     SW_DISINT 109,4051
#define     SW_INT0 110,4121
#define     SW_INT1 111,4199
#define     SW_INT_SHIFT 112,4277
#define     SW_SYNC_DOS5 113,4369
#define     SW_FLOPPY 114,4437
#define     SW_BIT7 115,4508
#define IO_LED_ON 116,4580
#define IO_HARDWARE 117,4651
#define IO_INTR_MASK 118,4731
#define     IMASK_WD 119,4800
#define     IMASK_FIFO 120,4865
#define WD_OWN_ID 123,4952
#define WD_CONTROL 124,4978
#define WD_TIMEOUT_PERIOD 125,5004
#define WD_CDB_1 126,5036
#define WD_CDB_2 127,5062
#define WD_CDB_3 128,5088
#define WD_CDB_4 129,5114
#define WD_CDB_5 130,5140
#define WD_CDB_6 131,5166
#define WD_CDB_7 132,5192
#define WD_CDB_8 133,5218
#define WD_CDB_9 134,5244
#define WD_CDB_10 135,5270
#define WD_CDB_11 136,5296
#define WD_CDB_12 137,5322
#define WD_TARGET_LUN 138,5348
#define WD_COMMAND_PHASE 139,5380
#define WD_SYNCHRONOUS_TRANSFER 140,5412
#define WD_TRANSFER_COUNT_MSB 141,5450
#define WD_TRANSFER_COUNT 142,5485
#define WD_TRANSFER_COUNT_LSB 143,5517
#define WD_DESTINATION_ID 144,5552
#define WD_SOURCE_ID 145,5584
#define WD_SCSI_STATUS 146,5613
#define WD_COMMAND 147,5645
#define WD_DATA 148,5674
#define WD_QUEUE_TAG 149,5700
#define WD_AUXILIARY_STATUS 150,5729
#define WD_CMD_RESET 153,5783
#define WD_CMD_ABORT 154,5812
#define WD_CMD_ASSERT_ATN 155,5841
#define WD_CMD_NEGATE_ACK 156,5873
#define WD_CMD_DISCONNECT 157,5905
#define WD_CMD_RESELECT 158,5937
#define WD_CMD_SEL_ATN 159,5969
#define WD_CMD_SEL 160,6001
#define WD_CMD_SEL_ATN_XFER 161,6030
#define WD_CMD_SEL_XFER 162,6065
#define WD_CMD_RESEL_RECEIVE 163,6097
#define WD_CMD_RESEL_SEND 164,6132
#define WD_CMD_WAIT_SEL_RECEIVE 165,6164
#define WD_CMD_TRANS_ADDR 166,6201
#define WD_CMD_TRANS_INFO 167,6233
#define WD_CMD_TRANSFER_PAD 168,6265
#define WD_CMD_SBT_MODE 169,6300
#define PHS_DATA_OUT 172,6355
#define PHS_DATA_IN 173,6384
#define PHS_COMMAND 174,6413
#define PHS_STATUS 175,6442
#define PHS_MESS_OUT 176,6471
#define PHS_MESS_IN 177,6500
#define CSR_RESET 182,6604
#define CSR_RESET_AF 183,6630
#define CSR_RESELECT 186,6701
#define CSR_SELECT 187,6730
#define CSR_SEL_XFER_DONE 188,6759
#define CSR_XFER_DONE 189,6791
#define CSR_MSGIN 192,6861
#define CSR_SDP 193,6887
#define CSR_SEL_ABORT 194,6916
#define CSR_RESEL_ABORT 195,6948
#define CSR_RESEL_ABORT_AM 196,6980
#define CSR_ABORT 197,7012
#define CSR_INVALID 200,7069
#define CSR_UNEXP_DISC 201,7098
#define CSR_TIMEOUT 202,7130
#define CSR_PARITY 203,7159
#define CSR_PARITY_ATN 204,7188
#define CSR_BAD_STATUS 205,7220
#define CSR_UNEXP 206,7252
#define CSR_RESEL 209,7315
#define CSR_RESEL_AM 210,7341
#define CSR_DISC 211,7370
#define CSR_SRV_REQ 212,7396
#define OWNID_EAF 215,7460
#define OWNID_EHP 216,7486
#define OWNID_RAF 217,7512
#define OWNID_FS_8 218,7538
#define OWNID_FS_12 219,7564
#define OWNID_FS_16 220,7590
#define CTRL_HSP 223,7643
#define CTRL_HA 224,7669
#define CTRL_IDI 225,7695
#define CTRL_EDI 226,7721
#define CTRL_HHP 227,7747
#define CTRL_POLLED 228,7773
#define CTRL_BURST 229,7799
#define CTRL_BUS 230,7825
#define CTRL_DMA 231,7851
#define TIMEOUT_PERIOD_VALUE 234,7911
#define STR_FSS 237,8012
#define DSTID_DPD 240,8072
#define DATA_OUT_DIR 241,8098
#define DATA_IN_DIR 242,8121
#define DSTID_SCC 243,8144
#define SRCID_MASK 246,8199
#define SRCID_SIV 247,8225
#define SRCID_DSP 248,8251
#define SRCID_ES 249,8277
#define SRCID_ER 250,8303
#define ILLEGAL_STATUS_BYTE 254,8332
#define DEFAULT_SX_PER 257,8369
#define DEFAULT_SX_OFF 258,8425
#define OPTIMUM_SX_PER 260,8475
#define OPTIMUM_SX_OFF 261,8546
struct sx_period sx_period263,8606
struct IN2000_hostdata IN2000_hostdata269,8691
#define C_WD33C93 308,10950
#define C_WD33C93A 309,10976
#define C_WD33C93B 310,11002
#define C_UNKNOWN_CHIP 311,11028
#define S_UNCONNECTED 315,11092
#define S_SELECTING 316,11124
#define S_RUNNING_LEVEL2 317,11156
#define S_CONNECTED 318,11188
#define S_PRE_TMP_DISC 319,11220
#define S_PRE_CMP_DISC 320,11252
#define FI_FIFO_UNUSED 324,11319
#define FI_FIFO_READING 325,11351
#define FI_FIFO_WRITING 326,11383
#define L2_NONE 334,11598
#define L2_SELECT 335,11674
#define L2_BASIC 336,11749
#define L2_DATA 337,11819
#define L2_MOST 338,11879
#define L2_RESELECT 339,11953
#define L2_ALL 340,12032
#define DIS_NEVER 344,12117
#define DIS_ADAPTIVE 345,12140
#define DIS_ALWAYS 346,12163
#define DB_TEST 350,12221
#define DB_FIFO 351,12256
#define DB_QUEUE_COMMAND 352,12291
#define DB_EXECUTE 353,12326
#define DB_INTR 354,12361
#define DB_TRANSFER 355,12396
#define DB_MASK 356,12431
#define A_NO_SCSI_RESET 358,12467
#define SS_UNSET 363,12546
#define SS_FIRST 364,12569
#define SS_WAITING 365,12592
#define SS_SET 366,12615
#define PR_VERSION 370,12673
#define PR_INFO 371,12699
#define PR_STATISTICS 372,12725
#define PR_CONNECTED 373,12752
#define PR_INPUTQ 374,12778
#define PR_DISCQ 375,12804
#define PR_TEST 376,12830
#define PR_STOP 377,12856
# define in2000__INITFUNC(in2000__INITFUNC383,12961
# define in2000__INIT384,13006
# define in2000__INITDATA385,13028
# define CLISPIN_LOCK(CLISPIN_LOCK386,13054
# define CLISPIN_UNLOCK(CLISPIN_UNLOCK387,13127
# define in2000__INITFUNC(in2000__INITFUNC391,13281
# define in2000__INIT 392,13338
# define in2000__INITDATA 393,13367
# define CLISPIN_LOCK(CLISPIN_LOCK394,13404
# define CLISPIN_UNLOCK(CLISPIN_UNLOCK395,13478
int in2000_detect(399,13566
#define IN2000_CAN_Q 409,13968
#define IN2000_SG 410,13995
#define IN2000_CPL 411,14026
#define IN2000_HOST_ID 412,14052
#define IN2000 416,14129
#define IN2000 441,15672

drivers/scsi/scsicam.c,120
#define __NO_VERSION__13,316
int scsicam_bios_param 41,1064
static int partsize(93,2595
static int setsize(198,6088

drivers/scsi/in2000.c,1792
#define IN2000_VERSION 125,5437
#define IN2000_DATE 126,5470
static char *setup_args[178,8150
static char *setup_strings 182,8243
static struct Scsi_Host *instance_list 189,8337
static inline uchar read_3393(193,8384
#define READ_AUX_STAT(READ_AUX_STAT200,8535
static inline void write_3393(203,8581
static inline void write_3393_cmd(210,8745
static uchar read_1_byte(219,8957
static void write_3393_count(234,9315
static unsigned long read_3393_count(243,9564
static int is_dir_out(260,10111
static struct sx_period sx_table[282,10972
static int round_period(293,11155
static uchar calc_sync_xfer(306,11405
int in2000_queuecommand 320,11736
static void in2000_execute 436,16013
static void transfer_pio(708,24924
static void transfer_bytes(744,25911
static void in2000_intr 834,28894
#define RESET_CARD 1618,56965
#define RESET_CARD_AND_BUS 1619,56994
#define B_FLAG 1620,57023
static int reset_hardware(1622,57044
int in2000_reset(1665,58577
int in2000_abort 1703,59534
#define MAX_IN2000_HOSTS 1841,63663
#define MAX_SETUP_ARGS 1842,63690
#define SETUP_BUFFER_SIZE 1843,63751
static char setup_buffer[1844,63781
static char setup_used[1845,63826
static int done_setup 1846,63866
in2000__INITFUNC(1848,63894
in2000__INITFUNC(1880,64539
static const unsigned int *bios_tab[1912,65349
static const unsigned int *bios_tab[] in2000__INITDATA 1912,65349
static const unsigned short base_tab[1919,65504
static const unsigned short base_tab[] in2000__INITDATA 1919,65504
static const int int_tab[1926,65611
static const int int_tab[] in2000__INITDATA 1926,65611
in2000__INITFUNC(1934,65694
int in2000_biosparam(2159,73474
struct proc_dir_entry proc_scsi_in2000 2192,74240
int in2000_proc_info(2198,74359
Scsi_Host_Template driver_template 2371,79178

drivers/scsi/eata.h,144
#define _EATA_H5,104
#define EATA_VERSION 19,513
#define LinuxVersionCode(LinuxVersionCode21,545
#define EATA 25,658
#define EATA 45,1969

drivers/scsi/aic7xxx.h,233
#define _aic7xxx_h24,1082
#define AIC7XXX_H_VERSION 26,1102
#define KERNEL_VERSION(KERNEL_VERSION33,1223
#  define AIC7XXX_BIOSPARAM 37,1308
#  define AIC7XXX_BIOSPARAM 39,1360
#define AIC7XXX	47,1587
#define AIC7XXX	77,2558

drivers/scsi/eata_dma.c,1337
struct proc_dir_entry proc_scsi_eata_dma 96,3857
static u32 ISAbases[101,3976
static unchar EISAbases[103,4030
static uint registered_HBAs 105,4108
static struct Scsi_Host *last_HBA 106,4141
static struct Scsi_Host *first_HBA 107,4183
static unchar reg_IRQ[108,4226
static unchar reg_IRQL[110,4302
static struct eata_sp *status 112,4379
static void *dma_scratch 113,4443
static struct eata_register *fake_int_base;115,4474
static int fake_int_result;116,4518
static int fake_int_happened;117,4546
static ulong int_counter 119,4577
static ulong queue_counter 120,4607
void eata_scsi_done 122,4640
void eata_fake_int_handler(132,4808
int eata_release(144,5161
inline void eata_latency_in(168,5842
inline void eata_latency_out(195,6766
void do_eata_int_handler(246,8069
void eata_int_handler(255,8313
inline int eata_send_command(401,13116
inline int eata_send_immediate(434,14043
int eata_queue(470,15069
int eata_abort(625,19836
int eata_reset(683,21625
static void eata_select_queue_depths(802,24932
int check_blink_state(897,27724
char * get_board_data(920,28229
int get_conf_PIO(989,30157
void print_config(1040,31462
short register_HBA(1058,32271
void find_EISA(1334,39815
void find_ISA(1382,41053
void find_PCI(1405,41567
int eata_detect(1519,45020
Scsi_Host_Template driver_template 1594,47455

drivers/scsi/g_NCR5380.c,1351
#define USLEEP83,2552
#define USLEEP_POLL	84,2567
#define USLEEP_SLEEP	85,2589
#define USLEEP_WAITLONG	86,2613
#define AUTOPROBE_IRQ88,2642
#define AUTOSENSE89,2664
#define NCR53C400_PSEUDO_DMA 94,2747
#define PSEUDO_DMA95,2778
#define NCR53C40096,2797
#define NCR5380_STATS97,2815
struct proc_dir_entry proc_scsi_g_ncr5380 122,3591
#define NCR_NOT_SET 127,3723
static int ncr_irq=128,3745
static int ncr_dma=129,3777
static int ncr_addr=130,3809
static int ncr_5380=131,3842
static int ncr_53c400=132,3875
static int ncr_53c400a=133,3910
static int dtc_3181e=134,3946
static struct override override136,3981
} overrides 141,4125
    [] __initdata 143,4171
#define NO_OVERRIDES 148,4260
__initfunc(161,4696
__initfunc(207,6113
__initfunc(220,6481
void generic_NCR53C400A_setup 233,6854
void generic_DTC3181E_setup 246,7215
__initfunc(262,7633
const char * generic_NCR5380_info 390,11665
int generic_NCR5380_release_resources(395,11812
int generic_NCR5380_biosparam(430,12786
static inline int NCR5380_pread 441,12978
static inline int NCR5380_pwrite 558,15964
#define PRINTP(PRINTP695,19656
#define ANDP 696,19704
static int sprint_opcode(698,19720
static int sprint_command 704,19863
static int sprint_Scsi_Cmnd 713,20149
int generic_NCR5380_proc_info(724,20489
Scsi_Host_Template driver_template 846,24585

drivers/scsi/atari_scsi.c,2723
#define NDEBUG 71,4225
#define NDEBUG_ABORT	73,4245
#define NDEBUG_TAGS	74,4275
#define NDEBUG_MERGING	75,4305
#define AUTOSENSE77,4339
#define	REAL_DMA79,4417
#define	SUPPORT_TAGS81,4500
#define	MAX_TAGS 82,4521
struct proc_dir_entry proc_scsi_atari 115,5192
#define	IS_A_TT(IS_A_TT120,5306
#define	SCSI_DMA_WRITE_P(SCSI_DMA_WRITE_P122,5350
#define	SCSI_DMA_READ_P(SCSI_DMA_READ_P134,5651
#define	SCSI_DMA_SETADR(SCSI_DMA_SETADR141,5883
#define	SCSI_DMA_GETADR(SCSI_DMA_GETADR154,6206
#define	ENABLE_IRQ(ENABLE_IRQ165,6484
#define	DISABLE_IRQ(DISABLE_IRQ173,6654
#define HOSTDATA_DMALEN	182,6828
#define	AFTER_RESET_DELAY	189,7167
#define	AFTER_RESET_DELAY	191,7206
static struct Scsi_Host *atari_scsi_host 220,8484
static unsigned long	atari_dma_residual,225,8695
static unsigned long	atari_dma_residual, atari_dma_startaddr;225,8695
static short		atari_dma_active;226,8757
static char		*atari_dma_buffer 228,8825
static unsigned long	atari_dma_phys_buffer;230,8923
static char		*atari_dma_orig_addr;232,9044
#define	STRAM_BUFFER_SIZE	239,9424
static unsigned long	atari_dma_stram_mask;241,9520
#define STRAM_ADDR(STRAM_ADDR242,9563
static int atari_read_overruns 244,9689
static int setup_can_queue 247,9733
static int setup_cmd_per_lun 249,9801
static int setup_sg_tablesize 251,9873
static int setup_use_tagged_queuing 254,9967
static int setup_hostid 257,10060
static int scsi_dma_is_ignored_buserr(267,10215
static void scsi_dma_buserr 295,10980
static void scsi_tt_intr 324,11897
static void scsi_falcon_intr 415,14990
static void atari_scsi_fetch_restbytes(476,16860
static int falcon_got_lock 499,17544
static struct wait_queue	*falcon_fairness_wait 500,17576
static int falcon_trying_lock 501,17631
static struct wait_queue	*falcon_try_wait 502,17666
static int falcon_dont_release 503,17716
falcon_release_lock_if_possible(513,18092
static void falcon_get_lock(557,19413
int atari_queue_command 596,20264
int atari_scsi_detect 607,20530
int atari_scsi_release 757,25209
__initfunc(767,25399
int atari_scsi_reset(829,26848
__initfunc(872,27887
const char * atari_scsi_info 903,28671
unsigned long atari_scsi_dma_setup(913,28869
static long atari_scsi_dma_residual(981,31037
#define	CMD_SURELY_BLOCK_MODE	987,31140
#define	CMD_SURELY_BYTE_MODE	988,31172
#define	CMD_MODE_UNKNOWN	989,31203
static int falcon_classify_cmd(991,31232
static unsigned long atari_dma_xfer_len(1023,32436
static unsigned char atari_scsi_tt_reg_read(1123,36038
static void atari_scsi_tt_reg_write(1128,36142
static unsigned char atari_scsi_falcon_reg_read(1133,36257
static void atari_scsi_falcon_reg_write(1139,36425
Scsi_Host_Template driver_template 1149,36649

drivers/scsi/u14-34f.h,173
#define _U14_34F_H5,94
#define U14_34F_VERSION 19,514
#define LinuxVersionCode(LinuxVersionCode21,549
#define ULTRASTOR_14_34F 25,662
#define ULTRASTOR_14_34F 45,1976

drivers/scsi/ncr53c8xx.c,17668
#define SCSI_NCR_DEBUG_FLAGS	101,3679
#define LinuxVersionCode(LinuxVersionCode110,3867
#define	__initdata142,4573
#define	__initfunc(__initfunc145,4618
#define	BITS_PER_LONG	165,4968
#define	BITS_PER_LONG	167,4999
typedef u32 u_int32;u_int32175,5138
typedef u64 u_int64;u_int64176,5159
typedef struct xpt_quehead xpt_quehead188,5416
} XPT_QUEHEAD;XPT_QUEHEAD191,5547
#define xpt_que_init(xpt_que_init193,5563
static inline void __xpt_que_add(197,5656
static inline void __xpt_que_del(207,5862
static inline int xpt_que_empty(214,6003
static inline void xpt_que_splice(219,6095
#define xpt_que_entry(xpt_que_entry236,6430
#define xpt_insque(xpt_insque240,6540
#define xpt_remque(xpt_remque242,6609
#define xpt_insque_head(xpt_insque_head244,6675
static inline struct xpt_quehead *xpt_remque_head(246,6751
#define xpt_insque_tail(xpt_insque_tail257,6961
static inline struct xpt_quehead *xpt_remque_tail(259,7037
#define SCSI_NCR_CCB_DONE_SUPPORT287,7849
#define MAX_DONE 290,7918
#define CCB_DONE_EMPTY 291,7938
#define CCB_DONE_VALID(CCB_DONE_VALID295,8030
#define CCB_DONE_VALID(CCB_DONE_VALID299,8164
#define MEMORY_BARRIER(MEMORY_BARRIER322,8895
#define MEMORY_BARRIER(MEMORY_BARRIER324,8955
#  define MEMORY_BARRIER(MEMORY_BARRIER327,9003
#  define MEMORY_BARRIER(MEMORY_BARRIER329,9043
#define SCSI_NCR_MYADDR 347,9394
#define SCSI_NCR_MAX_TAGS 356,9569
#define	SCSI_NCR_MAX_TAGS 365,9782
#define NO_TAG	368,9821
typedef u_int64 tagmap_t;tagmap_t374,9919
typedef u_int32 tagmap_t;tagmap_t376,9951
#define MAX_TARGET 387,10176
#define MAX_TARGET 389,10224
#define MAX_LUN 400,10468
#define MAX_LUN 402,10510
#define SCSI_NCR_MIN_ASYNC 410,10624
#define MAX_START 421,10908
#define MAX_START 423,10959
#define MAX_SCATTER 435,11381
#define MAX_SCATTERL	438,11448
#define	MAX_SCATTERH	439,11472
#define MAX_SCATTERL	441,11528
#define	MAX_SCATTERH	442,11565
#define NCR_IOMAPPED450,11668
#define NCR_SNOOP_TIMEOUT 457,11713
#define u_char	474,12060
#define u_short	475,12090
#define u_int	476,12122
#define u_long	477,12150
typedef	u_long		vm_offset_t;vm_offset_t479,12181
typedef	int		vm_size_t;vm_size_t480,12210
#define bcopy(bcopy483,12249
#define bzero(bzero486,12315
#define offsetof(offsetof490,12381
static spinlock_t driver_lock;511,13176
#define	NCR_LOCK_DRIVER(NCR_LOCK_DRIVER512,13207
#define	NCR_UNLOCK_DRIVER(NCR_UNLOCK_DRIVER513,13281
#define NCR_INIT_LOCK_NCB(NCR_INIT_LOCK_NCB516,13368
#define	NCR_LOCK_NCB(NCR_LOCK_NCB517,13434
#define	NCR_UNLOCK_NCB(NCR_UNLOCK_NCB518,13509
#	define	NCR_LOCK_SCSI_DONE(NCR_LOCK_SCSI_DONE522,13642
#	define	NCR_UNLOCK_SCSI_DONE(NCR_UNLOCK_SCSI_DONE524,13728
#	define	NCR_LOCK_SCSI_DONE(NCR_LOCK_SCSI_DONE529,13830
#	define	NCR_UNLOCK_SCSI_DONE(NCR_UNLOCK_SCSI_DONE530,13889
#define	NCR_LOCK_DRIVER(NCR_LOCK_DRIVER537,13992
#define	NCR_UNLOCK_DRIVER(NCR_UNLOCK_DRIVER538,14044
#define	NCR_INIT_LOCK_NCB(NCR_INIT_LOCK_NCB541,14104
#define	NCR_LOCK_NCB(NCR_LOCK_NCB542,14156
#define	NCR_UNLOCK_NCB(NCR_UNLOCK_NCB543,14234
#define	NCR_LOCK_SCSI_DONE(NCR_LOCK_SCSI_DONE545,14309
#define	NCR_UNLOCK_SCSI_DONE(NCR_UNLOCK_SCSI_DONE546,14367
#define vtophys(vtophys559,14686
#define ioremap 573,15153
#define iounmap 574,15176
#define bus_dvma_to_mem(bus_dvma_to_mem580,15277
#define bus_dvma_to_mem(bus_dvma_to_mem582,15332
__initfunc(586,15420
__initfunc(597,15740
#define UDELAY 618,16387
#define MDELAY 619,16409
static void UDELAY(621,16437
static void MDELAY(622,16481
#define ALIGN_SIZE(ALIGN_SIZE642,17169
#define ALIGN_MASK(ALIGN_MASK643,17210
#define CACHE_LINE_SHIFT	645,17262
#define CACHE_LINE_SIZE	646,17289
#define CACHE_LINE_MASK	647,17343
static void *m_alloc(649,17398
static void m_free(672,17804
#define XFER_IN	701,18596
#define XFER_OUT	702,18617
static struct Scsi_Host		*first_host	712,18875
static Scsi_Host_Template	*the_template	713,18920
struct proc_dir_entry proc_scsi_ncr53c8xx 720,19026
struct ncr_driver_setup ncr_driver_setup735,19444
	driver_setup	760,19935
	driver_safe_setup __initdata	764,20050
char *ncr53c8xx 766,20125
#define ScsiResult(ScsiResult777,20323
#define initverbose 784,20632
#define bootverbose 785,20675
#define SYMBIOS_NVRAM_SIZE 791,20775
#define SYMBIOS_NVRAM_ADDRESS 792,20806
struct Symbios_nvram Symbios_nvram794,20843
#define SYMBIOS_SCAM_ENABLE	805,21134
#define SYMBIOS_PARITY_ENABLE	806,21166
#define SYMBIOS_VERBOSE_MSGS	807,21203
#define SYMBIOS_CHS_MAPPING	808,21239
#define SYMBIOS_SCAN_HI_LO	810,21291
#define SYMBIOS_REMOVABLE_FLAGS	813,21380
#define	SYMBIOS_INIT_SCAN_AT_BOOT	828,21856
#define SYMBIOS_DISCONNECT_ENABLE	835,22021
#define SYMBIOS_SCAN_AT_BOOT_TIME	836,22059
#define SYMBIOS_SCAN_LUNS	837,22100
#define SYMBIOS_QUEUE_TAGS_ENABLED	838,22134
typedef struct Symbios_nvram	Symbios_nvram;Symbios_nvram848,22429
typedef struct Symbios_host	Symbios_host;Symbios_host849,22473
typedef struct Symbios_target	Symbios_target;Symbios_target850,22515
#define TEKRAM_NVRAM_SIZE 855,22597
#define TEKRAM_NVRAM_ADDRESS 856,22626
struct Tekram_nvram Tekram_nvram858,22658
#define	TEKRAM_PARITY_CHECK	861,22720
#define TEKRAM_SYNC_NEGO	862,22753
#define TEKRAM_DISCONNECT_ENABLE	863,22786
#define	TEKRAM_START_CMD	864,22826
#define TEKRAM_TAGGED_COMMANDS	865,22859
#define TEKRAM_WIDE_NEGO	866,22898
#define TEKRAM_MORE_THAN_2_DRIVES	872,23016
#define TEKRAM_DRIVES_SUP_1GB	873,23054
#define	TEKRAM_RESET_ON_POWER_ON	874,23092
#define TEKRAM_ACTIVE_NEGATION	875,23132
#define TEKRAM_IMMEDIATE_SEEK	876,23171
#define	TEKRAM_SCAN_LUNS	877,23209
#define	TEKRAM_REMOVABLE_FLAGS	878,23242
#define TEKRAM_F2_F6_ENABLED	882,23388
typedef struct Tekram_nvram	Tekram_nvram;Tekram_nvram885,23445
typedef struct Tekram_target	Tekram_target;Tekram_target886,23487
static u_char Tekram_sync[888,23532
static u_char Tekram_sync[12] __initdata 888,23532
} ncr_slot;ncr_slot906,23982
#define	SCSI_NCR_SYMBIOS_NVRAM	910,24023
#define	SCSI_NCR_TEKRAM_NVRAM	911,24058
} ncr_nvram;ncr_nvram918,24195
} ncr_device;ncr_device929,24417
#define DEBUG_ALLOC 938,24582
#define DEBUG_PHASE 939,24614
#define DEBUG_POLL 940,24646
#define DEBUG_QUEUE 941,24678
#define DEBUG_RESULT 942,24710
#define DEBUG_SCATTER 943,24742
#define DEBUG_SCRIPT 944,24774
#define DEBUG_TINY 945,24806
#define DEBUG_TIMING 946,24838
#define DEBUG_NEGO 947,24870
#define DEBUG_TAGS 948,24902
#define DEBUG_FREEZE 949,24934
#define DEBUG_RESTART 950,24966
	#define DEBUG_FLAGS 958,25115
	#define DEBUG_FLAGS	960,25152
#define	assert(assert976,25471
#define ncr_offb(ncr_offb1002,26136
#define ncr_offw(ncr_offw1003,26182
#define ncr_offb(ncr_offb1007,26236
#define ncr_offw(ncr_offw1008,26260
#define cpu_to_scr(cpu_to_scr1022,26606
#define scr_to_cpu(scr_to_cpu1023,26645
#define cpu_to_scr(cpu_to_scr1027,26749
#define scr_to_cpu(scr_to_cpu1028,26788
#define cpu_to_scr(cpu_to_scr1032,26835
#define scr_to_cpu(scr_to_cpu1033,26863
#define	INB_OFF(INB_OFF1068,27818
#define	OUTB_OFF(OUTB_OFF1069,27867
#define	INW_OFF(INW_OFF1073,27990
#define	INL_OFF(INL_OFF1074,28043
#define	OUTW_OFF(OUTW_OFF1076,28089
#define	OUTL_OFF(OUTL_OFF1077,28155
#define	INW_OFF(INW_OFF1081,28278
#define	INL_OFF(INL_OFF1082,28331
#define	OUTW_OFF(OUTW_OFF1084,28377
#define	OUTL_OFF(OUTL_OFF1085,28443
#define	INW_OFF(INW_OFF1089,28509
#define	INL_OFF(INL_OFF1090,28562
#define	OUTW_OFF(OUTW_OFF1092,28608
#define	OUTL_OFF(OUTL_OFF1093,28674
#define INB_OFF(INB_OFF1103,28831
#define OUTB_OFF(OUTB_OFF1104,28888
#define INW_OFF(INW_OFF1108,29019
#define INL_OFF(INL_OFF1109,29080
#define OUTW_OFF(OUTW_OFF1111,29134
#define OUTL_OFF(OUTL_OFF1112,29208
#define INW_OFF(INW_OFF1116,29339
#define INL_OFF(INL_OFF1117,29400
#define OUTW_OFF(OUTW_OFF1119,29454
#define OUTL_OFF(OUTL_OFF1120,29528
#define INW_OFF(INW_OFF1124,29602
#define INL_OFF(INL_OFF1125,29663
#define OUTW_OFF(OUTW_OFF1127,29717
#define OUTL_OFF(OUTL_OFF1128,29791
#define INB(INB1134,29901
#define INW(INW1135,29954
#define INL(INL1136,30007
#define OUTB(OUTB1138,30061
#define OUTW(OUTW1139,30127
#define OUTL(OUTL1140,30193
#define OUTONB(OUTONB1146,30293
#define OUTOFFB(OUTOFFB1147,30336
#define OUTONW(OUTONW1148,30381
#define OUTOFFW(OUTOFFW1149,30424
#define OUTONL(OUTONL1150,30469
#define OUTOFFL(OUTOFFL1151,30512
#define HS_IDLE	1161,30724
#define HS_BUSY	1162,30745
#define HS_NEGOTIATE	1163,30766
#define HS_DISCONNECT	1164,30820
#define HS_DONEMASK	1166,30876
#define HS_COMPLETE	1167,30903
#define HS_SEL_TIMEOUT	1168,30939
#define HS_RESET	1169,31007
#define HS_ABORTED	1170,31067
#define HS_TIMEOUT	1171,31131
#define HS_FAIL	1172,31195
#define HS_UNEXPECTED	1173,31257
#define HS_INVALMASK	1181,31468
#define	HS_SELECTING	1182,31496
#define	HS_IN_RESELECT	1183,31534
#define	HS_STARTING	1184,31574
#define HS_SKIPMASK	1190,31696
#define	SIR_BAD_STATUS	1199,31884
#define	SIR_XXXXXXXXXX	1200,31912
#define	SIR_NEGO_SYNC	1201,31940
#define	SIR_NEGO_WIDE	1202,31967
#define	SIR_NEGO_FAILED	1203,31994
#define	SIR_NEGO_PROTO	1204,32023
#define	SIR_REJECT_RECEIVED	1205,32051
#define	SIR_REJECT_SENT	1206,32083
#define	SIR_IGN_RESIDUE	1207,32112
#define	SIR_MISSING_SAVE	1208,32141
#define	SIR_RESEL_NO_MSG_IN	1209,32171
#define	SIR_RESEL_NO_IDENTIFY	1210,32204
#define	SIR_RESEL_BAD_LUN	1211,32239
#define	SIR_RESEL_BAD_TARGET	1212,32270
#define	SIR_RESEL_BAD_I_T_L	1213,32304
#define	SIR_RESEL_BAD_I_T_L_Q	1214,32337
#define	SIR_DONE_OVERFLOW	1215,32372
#define	SIR_MAX	1216,32403
#define	XE_OK	1226,32620
#define	XE_EXTRA_DATA	1227,32639
#define	XE_BAD_PHASE	1228,32693
#define NS_SYNC	1238,32938
#define NS_WIDE	1239,32959
#define	QUIRK_AUTOSAVE	1250,33216
#define	QUIRK_NOMSG	1251,33246
#define QUIRK_NOSYNC	1252,33273
#define QUIRK_NOWIDE16	1253,33301
#define	INQ7_QUEUE	1262,33511
#define	INQ7_SYNC	1263,33537
#define	INQ7_WIDE16	1264,33562
#define CCB_MAGIC	1273,33731
typedef struct ncb * ncb_p;ncb_p1288,33986
typedef struct tcb * tcb_p;tcb_p1289,34014
typedef struct lcb * lcb_p;lcb_p1290,34042
typedef struct ccb * ccb_p;ccb_p1291,34070
struct link link1293,34099
struct	usrcmd usrcmd1298,34149
#define UC_SETSYNC 1305,34225
#define UC_SETTAGS	1306,34252
#define UC_SETDEBUG	1307,34274
#define UC_SETORDER	1308,34297
#define UC_SETWIDE	1309,34320
#define UC_SETFLAG	1310,34342
#define UC_CLEARPROF	1311,34364
#define UC_SETVERBOSE	1312,34388
#define	UF_TRACE	1314,34414
#define	UF_NODISC	1315,34438
#define	UF_NOSCAN	1316,34463
struct tstamp tstamp1327,34644
struct profile profile1340,34801
struct tcb tcb1361,35236
struct lcb lcb1449,38184
struct launch launch1536,41755
struct head head1561,42638
#define  QU_REG	1632,45132
#define  HS_REG	1633,45153
#define  HS_PRT	1634,45174
#define  SS_REG	1635,45198
#define  SS_PRT	1636,45219
#define  PS_REG	1637,45243
#define  actualquirks 1642,45297
#define  host_status 1643,45342
#define  scsi_status 1644,45387
#define  parity_status 1645,45432
#define  xerr_st 1650,45513
#define  sync_st 1651,45553
#define  nego_st 1652,45593
#define  wide_st 1653,45633
#define  xerr_status 1658,45707
#define  nego_status 1659,45743
#define  sync_status 1662,45786
#define  wide_status 1663,45822
struct dsb dsb1682,46400
struct ccb ccb1708,46867
#define CCB_PHYS(CCB_PHYS1783,49698
struct ncb ncb1792,49982
#define NCB_SCRIPT_PHYS(NCB_SCRIPT_PHYS1964,57130
#define NCB_SCRIPTH_PHYS(NCB_SCRIPTH_PHYS1965,57211
struct script script1992,57984
struct scripth scripth2062,59543
#define remove_from_waiting_list(remove_from_waiting_list2173,63306
#define requeue_waiting_list(requeue_waiting_list2175,63395
#define reset_waiting_list(reset_waiting_list2176,63463
static int ncr_debug 2193,63912
static inline char *ncr_name 2196,63965
#define	RELOC_SOFTC	2221,64610
#define	RELOC_LABEL	2222,64641
#define	RELOC_REGISTER	2223,64672
#define	RELOC_KVAR	2224,64706
#define	RELOC_LABELH	2225,64736
#define	RELOC_MASK	2226,64768
#define	NADDR(NADDR2228,64799
#define PADDR(PADDR2229,64864
#define PADDRH(PADDRH2230,64935
#define	RADDR(RADDR2231,65008
#define	FADDR(FADDR2232,65059
#define	KVAR(KVAR2233,65123
#define	SCRIPT_KVAR_JIFFIES	2235,65167
#define	SCRIPT_KVAR_FIRST	2237,65200
#define	SCRIPT_KVAR_LAST	2238,65247
static void *script_kvars[2244,65399
static void *script_kvars[] __initdata 2244,65399
static	struct script script0 __initdata 2247,65464
static	struct scripth scripth0 __initdata 3035,83367
__initfunc(3695,98468
__initfunc(3772,100436
struct host_data host_data3931,103550
static void PRINT_TARGET(3951,104043
static void PRINT_LUN(3956,104151
static void PRINT_ADDR(3961,104271
#define _5M 3976,104692
static u_long div_10M[3977,104712
#define burst_length(burst_length3997,105302
#define burst_code(burst_code4002,105395
static inline void ncr_init_burst(4008,105566
__initfunc(4030,105919
__initfunc(4053,106499
__initfunc(4082,107244
__initfunc(4366,114406
static u_char Tekram_boot_delay[4396,115409
static u_char Tekram_boot_delay[7] __initdata 4396,115409
__initfunc(4398,115487
__initfunc(4459,117459
static inline void ncr_queue_done_cmd(4807,126443
static inline void ncr_flush_done_cmds(4813,126580
int ncr_queue_command 4834,126982
static void ncr_start_next_ccb(5258,136775
static void ncr_put_start_queue(5279,137246
static void ncr_start_reset(5322,138267
static int ncr_reset_scsi_bus(5329,138404
int ncr_reset_bus 5398,140218
static int ncr_abort_command 5466,141835
static int ncr_detach(5551,143575
void ncr_complete 5685,146499
void ncr_ccb_skipped(5968,152491
void ncr_wakeup_done 5993,153032
void ncr_wakeup 6039,153905
void ncr_init 6061,154260
static void ncr_negotiate 6240,158435
static void ncr_getsync(6295,159349
static void ncr_set_sync_wide_status 6364,161130
static void ncr_setsync 6399,161896
static void ncr_setwide 6483,163943
static void ncr_setup_tags 6537,165020
static void ncr_usercmd 6633,167176
static void ncr_timeout 6724,168938
static void ncr_log_hard_error(6821,171179
void ncr_exception 6901,173740
void ncr_int_sto 7090,178706
static int ncr_int_sbmc 7135,179731
static int ncr_int_par 7167,180464
static void ncr_int_ma 7246,182500
static void ncr_sir_to_redo(7545,189969
static int ncr_show_msg 7698,193554
void ncr_int_sir 7716,193844
static	ccb_p ncr_get_ccb 8182,204713
static void ncr_free_ccb 8300,206779
#define ncr_reg_bus_addr(ncr_reg_bus_addr8358,207963
static void ncr_init_ccb(8366,208332
static void ncr_alloc_ccb(8405,209549
static void ncr_init_tcb 8460,210894
static lcb_p ncr_alloc_lcb 8532,213075
static lcb_p ncr_setup_lcb 8627,215507
static	int	ncr_scatter(8747,218609
__initfunc(8797,219705
__initfunc(8823,220262
#define ncr_delta(ncr_delta8925,222343
#define PROFILE 8928,222416
static	void ncb_profile 8929,222455
struct table_entry table_entry8988,223870
static struct table_entry device_tab[8995,223963
static u_long ncr_lookup(9007,224296
static void ncr_selectclock(9059,225626
__initfunc(9088,226436
__initfunc(9138,228011
#define uchar 9204,229579
#define ushort 9208,229630
#define ulong 9212,229682
#define	ARG_SEP	9223,229931
#define	ARG_SEP	9225,229957
__initfunc(9228,229985
__initfunc(9336,232959
#define YesNo(YesNo9340,233016
static ncr_chip	ncr_chip_table[9373,233981
static ncr_chip	ncr_chip_table[] __initdata	9373,233981
static ushort	ncr_chip_ids[9374,234048
static ushort	ncr_chip_ids[]   __initdata	9374,234048
__initfunc(9377,234142
__initfunc(9461,236601
__initfunc(9593,239834
__initfunc(9613,240313
__initfunc(9635,240755
#define DEF_DEPTH	10069,253487
#define ALL_TARGETS	10070,253533
#define NO_TARGET	10071,253556
#define ALL_LUNS	10072,253577
#define NO_LUN	10073,253597
static int device_queue_depth(10075,253617
static void ncr53c8xx_select_queue_depths(10119,254351
int ncr53c8xx_queue_command 10175,255773
static void ncr53c8xx_intr(10217,256784
static void ncr53c8xx_timeout(10248,257483
int ncr53c8xx_reset(10272,258052
int ncr53c8xx_abort(10337,259761
int ncr53c8xx_release(10376,260675
#define next_wcmd 10401,261285
static void insert_into_waiting_list(10403,261318
static Scsi_Cmnd *retrieve_from_waiting_list(10419,261716
static void process_waiting_list(10439,262170
#define is_digit(is_digit10484,263430
#define digit_to_bin(digit_to_bin10485,263477
#define is_space(is_space10486,263513
static int skip_spaces(10488,263562
static int get_int_arg(10497,263711
static int is_keyword(10512,263949
#define SKIP_SPACES(SKIP_SPACES10523,264135
#define GET_INT_ARG(GET_INT_ARG10528,264291
static int ncr_user_command(10538,264467
struct info_strinfo_str10688,268349
static void copy_mem_info(10696,268422
static int copy_info(10716,268840
#define to_ms(to_ms10734,269130
static int ncr_host_info(10736,269166
int ncr53c8xx_proc_info(10795,271345
#define SET_BIT 10861,272782
#define CLR_BIT 10862,272800
#define SET_CLK 10863,272818
#define CLR_CLK 10864,272836
__initfunc(10876,273643
__initfunc(10967,276222
__initfunc(10986,276589
__initfunc(11000,276938
__initfunc(11016,277334
__initfunc(11036,277780
__initfunc(11049,278097
__initfunc(11062,278400
__initfunc(11077,278786
__initfunc(11088,278977
__initfunc(11141,280330
__initfunc(11178,281188
__initfunc(11205,281687
__initfunc(11221,282032
__initfunc(11242,282387
__initfunc(11254,282576
__initfunc(11274,282896
__initfunc(11288,283084
Scsi_Host_Template driver_template 11304,283301

drivers/scsi/53c8xx_u.h,0

drivers/scsi/scsi_module.c,54
int init_module(34,1665
void cleanup_module(44,1919

drivers/scsi/eata_dma.h,891
#define _EATA_DMA_H11,485
#define VER_MAJOR 18,551
#define VER_MINOR 19,571
#define VER_SUB 20,591
#define CHECKPAL 27,840
#define CHECK_BLINK 28,915
#define CRIPPLE_QUEUE 30,1065
#define DEBUG_EATA 39,1639
#define DPT_DEBUG 40,1714
#define DBG_DELAY 41,1789
#define DBG_PROBE 44,1960
#define DBG_PCI 45,2035
#define DBG_EISA 46,2110
#define DBG_ISA 47,2185
#define DBG_BLINK 48,2261
#define DBG_PIO 49,2336
#define DBG_COM 50,2411
#define DBG_QUEUE 51,2486
#define DBG_QUEUE2 52,2561
#define DBG_INTR 53,2636
#define DBG_INTR2 54,2711
#define DBG_INTR3 55,2786
#define DBG_REQSENSE 56,2861
#define DBG_RESET 57,2941
#define DBG_STATUS 58,3021
#define DBG_PROC 59,3096
#define DBG_PROC_WRITE 60,3171
#define DBG_REGISTER 61,3197
#define DBG_ABNORM 62,3235
#define DBG(DBG65,3327
#define DBG(DBG67,3368
#define eata_release 82,3776
#define EATA_DMA 87,3839

drivers/scsi/ncr53c8xx.h,11180
#define NCR53C8XX_H43,1820
#define SCSI_NCR_DRIVER_NAME	48,1882
#define LinuxVersionCode(LinuxVersionCode59,2076
#define CONFIG_SCSI_NCR53C8XX_NVRAM_DETECT65,2228
#define	SCSI_NCR_PROC_INFO_SUPPORT71,2337
#define SCSI_NCR_BOOT_COMMAND_LINE_SUPPORT77,2466
#define SCSI_NCR_DEBUG_INFO_SUPPORT78,2509
#define SCSI_NCR_PCI_FIX_UP_SUPPORT79,2545
#		define	SCSI_NCR_PROFILE_SUPPORT82,2653
#	define	SCSI_NCR_USER_COMMAND_SUPPORT84,2696
#	define	SCSI_NCR_USER_INFO_SUPPORT85,2735
#define SCSI_NCR_NVRAM_SUPPORT96,3014
#define	SCSI_NCR_SETUP_SPECIAL_FEATURES	110,3473
#define SCSI_NCR_SETUP_ULTRA_SCSI	111,3518
#define SCSI_NCR_MAX_SYNC	112,3557
#define SCSI_NCR_MAX_TAGS	119,3713
#define SCSI_NCR_MAX_TAGS	121,3785
#define	SCSI_NCR_MAX_TAGS	123,3822
#define SCSI_NCR_MAX_TAGS	126,3892
#define	SCSI_NCR_SETUP_DEFAULT_TAGS	134,4089
#define	SCSI_NCR_SETUP_DEFAULT_TAGS	136,4209
#define	SCSI_NCR_SETUP_DEFAULT_TAGS	138,4269
#define	SCSI_NCR_IOMAPPED145,4426
#define	SCSI_NCR_IOMAPPED147,4501
#define	CONFIG_SCSI_NCR53C8XX_SYNC	157,4710
#define	CONFIG_SCSI_NCR53C8XX_SYNC	160,4837
#define	SCSI_NCR_SETUP_DEFAULT_SYNC	164,4934
#define	SCSI_NCR_SETUP_DEFAULT_SYNC	166,5014
#define	SCSI_NCR_SETUP_DEFAULT_SYNC	168,5094
#define	SCSI_NCR_SETUP_DEFAULT_SYNC	170,5204
#define	SCSI_NCR_SETUP_DEFAULT_SYNC	172,5251
#define SCSI_NCR_SETUP_DISCONNECTION	179,5388
#define SCSI_NCR_SETUP_DISCONNECTION	181,5435
#define SCSI_NCR_SETUP_FORCE_SYNC_NEGO	188,5585
#define SCSI_NCR_SETUP_FORCE_SYNC_NEGO	190,5634
#define SCSI_NCR_SETUP_MASTER_PARITY	197,5806
#define SCSI_NCR_SETUP_MASTER_PARITY	199,5853
#define SCSI_NCR_SETUP_SCSI_PARITY	206,6022
#define SCSI_NCR_SETUP_SCSI_PARITY	208,6067
#define SCSI_NCR_SETUP_LED_PIN	215,6190
#define SCSI_NCR_SETUP_DIFF_SUPPORT	216,6226
#define SCSI_NCR_SETUP_LED_PIN	218,6272
#define SCSI_NCR_SETUP_DIFF_SUPPORT	219,6308
#define SCSI_NCR_SETUP_SETTLE_TIME	225,6401
#define SCSI_NCR_ALWAYS_SIMPLE_TAG232,6576
#define SCSI_NCR_MAX_SCATTER	233,6611
#define SCSI_NCR_MAX_TARGET	234,6646
#define SCSI_NCR_CAN_QUEUE	238,6755
#define SCSI_NCR_CAN_QUEUE	240,6810
#define SCSI_NCR_CMD_PER_LUN	243,6851
#define SCSI_NCR_SG_TABLESIZE	244,6900
#define SCSI_NCR_TIMER_INTERVAL	246,6954
#define SCSI_NCR_MAX_LUN	249,7034
#define SCSI_NCR_MAX_LUN	251,7069
#define ncr53c8xx_release 272,7549
#define NCR53C8XX 277,7640
#define NCR53C8XX 292,8147
#define	inw_l2b	321,8981
#define	inl_l2b	322,9002
#define	outw_b2l	323,9023
#define	outl_b2l	324,9045
#define	readw_l2b	326,9092
#define	readl_l2b	327,9116
#define	writew_b2l	328,9140
#define	writel_b2l	329,9166
#define	inw_raw	336,9312
#define	inl_raw	337,9333
#define	outw_raw	338,9354
#define	outl_raw	339,9376
#define	readw_raw	340,9398
#define	readl_raw	341,9422
#define	writew_raw	342,9446
#define	writel_raw	343,9472
#define PCI_DEVICE_ID_NCR_53C810 356,9676
#define PCI_DEVICE_ID_NCR_53C810AP 360,9754
#define PCI_DEVICE_ID_NCR_53C815 364,9832
#define PCI_DEVICE_ID_NCR_53C820 368,9908
#define PCI_DEVICE_ID_NCR_53C825 372,9984
#define PCI_DEVICE_ID_NCR_53C860 376,10060
#define PCI_DEVICE_ID_NCR_53C875 380,10136
#define PCI_DEVICE_ID_NCR_53C875J 384,10215
#define PCI_DEVICE_ID_NCR_53C885 388,10295
#define PCI_DEVICE_ID_NCR_53C895 392,10373
#define PCI_DEVICE_ID_NCR_53C896 396,10451
#define FE_LED0	410,10731
#define FE_WIDE	411,10755
#define FE_ULTRA	412,10779
#define FE_ULTRA2	413,10803
#define FE_DBLR	414,10828
#define FE_QUAD	415,10852
#define FE_ERL	416,10876
#define FE_CLSE	417,10899
#define FE_WRIE	418,10923
#define FE_ERMP	419,10947
#define FE_BOF	420,10971
#define FE_DFS	421,10995
#define FE_PFEN	422,11019
#define FE_LDSTR	423,11044
#define FE_RAM	424,11069
#define FE_CLK80	425,11093
#define FE_RAM8K	426,11118
#define FE_64BIT	427,11143
#define FE_IO256	428,11168
#define FE_NOPM	429,11193
#define FE_CACHE_SET	430,11218
#define FE_SCSI_SET	431,11272
#define FE_SPECIAL_SET	432,11345
} ncr_chip;ncr_chip433,11421
#define FE_CACHE0_SET	440,11593
#define SCSI_NCR_CHIP_TABLE	448,11848
#define SCSI_NCR_CHIP_IDS	497,13761
#define SCSI_NCR_DRIVER_SETUP	515,14165
#define SCSI_NCR_DRIVER_SAFE_SETUP	544,14767
struct ncr_reg ncr_reg577,15289
        #define   ISCON 581,15449
        #define   CRST 582,15510
	#define   SDU 585,15653
	#define   CHM 586,15717
	#define   WSS 587,15781
	#define   WSR 588,15845
	#define   EWS 591,15981
	#define   ULTRA 592,16045
	#define   RRE 595,16176
	#define   SRE 596,16240
	#define   CREQ	607,16602
	#define   CACK	608,16664
	#define   CBSY	609,16726
	#define   CSEL	610,16788
	#define   CATN	611,16850
	#define   CMSG	612,16912
	#define   CC_D	613,16974
	#define   CI_O	614,17036
        #define   DFE 621,17183
        #define   MDPE 622,17254
        #define   BF 623,17325
        #define   ABRT 624,17396
        #define   SSI 625,17467
        #define   SIR 626,17538
        #define   IID 627,17609
        #define   ILF 630,17710
        #define   ORF 631,17781
        #define   OLF 632,17852
        #define   AIP 633,17923
        #define   LOA 634,17994
        #define   WOA 635,18065
        #define   IRST 636,18136
        #define   SDP 637,18207
	#define   FF3210 640,18308
        #define   ILF1 643,18401
        #define   ORF1 644,18472
        #define   OLF1 645,18543
        #define   DM 646,18614
        #define   LDSC 647,18688
        #define   CABRT 652,18894
        #define   SRST 653,18965
        #define   SIGP 654,19036
        #define   SEM 655,19107
        #define   CON 656,19178
        #define   INTF 657,19249
        #define   SIP 658,19320
        #define   DIP 659,19391
	#define   CSIGP 669,19626
	#define   FLF 672,19680
	#define   CLF	673,19744
	#define   FM 674,19797
	#define   WRIE 675,19861
	#define   BDIS 681,20049
	#define   MPEE 682,20113
	#define   DFS 685,20207
	#define   BL_2 699,20767
	#define   BL_1 700,20831
	#define   ERL 701,20895
	#define   ERMP 702,20959
	#define   BOF 703,21023
	#define   CLSE 710,21210
	#define   PFF 711,21274
	#define   PFEN 712,21338
	#define   SSM 713,21402
	#define   IRQM 714,21466
	#define   STD 715,21530
	#define   IRQD 716,21594
 	#define	  NOCOM 717,21658
        #define   SBMC 723,21885
        #define   STO 724,21962
        #define   GEN 725,22033
        #define   HTH 726,22104
        #define   MA 727,22175
        #define   CMP 728,22246
        #define   SEL 729,22317
        #define   RSL 730,22388
        #define   SGE 731,22459
        #define   UDC 732,22530
        #define   RST 733,22601
        #define   PAR 734,22672
	#define   DBLEN 747,23131
	#define   DBLSEL 748,23184
	#define   ROF 752,23271
	#define   EXT 753,23340
	#define   TE 756,23440
	#define   HSC 757,23488
	#define   CSF 758,23536
	#define   SMODE 762,23680
	#define    SMODE_HVD 763,23741
	#define    SMODE_SE 764,23806
	#define    SMODE_LVD 765,23871
	#define   LCKFRQ 766,23936
	#define   ENPMJ 771,24156
	#define   PMJCTL 772,24218
	#define   ENNDJ 773,24280
	#define   DISFC 774,24342
	#define   DILS 775,24404
	#define   DPR 776,24466
	#define   ZMOD 779,24596
	#define   DDAC 780,24658
	#define   XTIMOD 781,24720
	#define   EXTIBMV 782,24782
	#define   EXDBMV 783,24845
#define REGJ(REGJ800,25442
#define REG(REG801,25495
#define TARGET_MODE 804,25545
typedef u_int32 ncrcmd;ncrcmd807,25575
#define	SCR_DATA_OUT	816,25749
#define	SCR_DATA_IN	817,25781
#define	SCR_COMMAND	818,25812
#define	SCR_STATUS	819,25843
#define SCR_ILG_OUT	820,25873
#define SCR_ILG_IN	821,25904
#define SCR_MSG_OUT	822,25934
#define SCR_MSG_IN 823,25965
#define SCR_MOVE_ABS(SCR_MOVE_ABS843,26343
#define SCR_MOVE_IND(SCR_MOVE_IND844,26411
#define SCR_MOVE_TBL 845,26479
struct scr_tblmove scr_tblmove847,26541
#define	SCR_SEL_ABS	867,26968
#define	SCR_SEL_ABS_ATN	868,26999
#define	SCR_SEL_TBL	869,27034
#define	SCR_SEL_TBL_ATN	870,27065
struct scr_tblsel scr_tblsel872,27101
#define SCR_JMP_REL 879,27227
#define SCR_ID(SCR_ID880,27262
#define	SCR_WAIT_DISC	897,27633
#define SCR_WAIT_RESEL 898,27666
#define SCR_SET(SCR_SET913,27970
#define SCR_CLR(SCR_CLR914,28012
#define	SCR_CARRY	916,28055
#define	SCR_TRG	917,28084
#define	SCR_ACK	918,28112
#define	SCR_ATN	919,28140
#define SCR_NO_FLUSH 942,28658
#define SCR_COPY(SCR_COPY944,28691
#define SCR_COPY_F(SCR_COPY_F945,28745
#define SCR_REG_OFS(SCR_REG_OFS965,29230
#define SCR_SFBR_REG(SCR_SFBR_REG967,29272
#define SCR_REG_SFBR(SCR_REG_SFBR970,29379
#define SCR_REG_REG(SCR_REG_REG973,29486
#define      SCR_LOAD 977,29593
#define      SCR_SHL 978,29628
#define      SCR_OR 979,29663
#define      SCR_XOR 980,29698
#define      SCR_AND 981,29733
#define      SCR_SHR 982,29768
#define      SCR_ADD 983,29803
#define      SCR_ADDC 984,29838
#define	SCR_FROM_REG(SCR_FROM_REG1003,30201
#define	SCR_TO_REG(SCR_TO_REG1006,30258
#define	SCR_LOAD_REG(SCR_LOAD_REG1009,30313
#define SCR_LOAD_SFBR(SCR_LOAD_SFBR1012,30379
#define SCR_NO_FLUSH2	1031,30829
#define SCR_DSA_REL2	1032,30862
#define SCR_LOAD_R(SCR_LOAD_R1034,30895
#define SCR_STORE_R(SCR_STORE_R1037,30989
#define SCR_LOAD_ABS(SCR_LOAD_ABS1040,31084
#define SCR_LOAD_REL(SCR_LOAD_REL1041,31147
#define SCR_LOAD_ABS_F(SCR_LOAD_ABS_F1042,31223
#define SCR_LOAD_REL_F(SCR_LOAD_REL_F1043,31276
#define SCR_STORE_ABS(SCR_STORE_ABS1045,31341
#define SCR_STORE_REL(SCR_STORE_REL1046,31406
#define SCR_STORE_ABS_F(SCR_STORE_ABS_F1047,31483
#define SCR_STORE_REL_F(SCR_STORE_REL_F1048,31538
#define SCR_NO_OP 1087,32401
#define SCR_JUMP 1088,32436
#define SCR_JUMPR 1089,32471
#define SCR_CALL 1090,32506
#define SCR_CALLR 1091,32541
#define SCR_RETURN 1092,32576
#define SCR_INT 1093,32611
#define SCR_INT_FLY 1094,32646
#define IFFALSE(IFFALSE1096,32682
#define IFTRUE(IFTRUE1097,32726
#define WHEN(WHEN1099,32771
#define IF(IF1100,32817
#define DATA(DATA1102,32864
#define MASK(MASK1103,32915
#define CARRYSET 1105,32996
#define	M_COMPLETE	1118,33206
#define	M_EXTENDED	1119,33232
#define	M_SAVE_DP	1120,33258
#define	M_RESTORE_DP	1121,33283
#define	M_DISCONNECT	1122,33311
#define	M_ID_ERROR	1123,33339
#define	M_ABORT	1124,33365
#define	M_REJECT	1125,33389
#define	M_NOOP	1126,33413
#define	M_PARITY	1127,33436
#define	M_LCOMPLETE	1128,33460
#define	M_FCOMPLETE	1129,33487
#define	M_RESET	1130,33514
#define	M_ABORT_TAG	1131,33538
#define	M_CLEAR_QUEUE	1132,33565
#define	M_INIT_REC	1133,33594
#define	M_REL_REC	1134,33620
#define	M_TERMINATE	1135,33645
#define	M_SIMPLE_TAG	1136,33672
#define	M_HEAD_TAG	1137,33700
#define	M_ORDERED_TAG	1138,33726
#define	M_IGN_RESIDUE	1139,33755
#define	M_IDENTIFY 1140,33784
#define	M_X_MODIFY_DP	1142,33814
#define	M_X_SYNC_REQ	1143,33843
#define	M_X_WIDE_REQ	1144,33871
#define	S_GOOD	1150,33917
#define	S_CHECK_COND	1151,33940
#define	S_COND_MET	1152,33968
#define	S_BUSY	1153,33994
#define	S_INT	1154,34017
#define	S_INT_COND_MET	1155,34039
#define	S_CONFLICT	1156,34069
#define	S_TERMINATED	1157,34095
#define	S_QUEUE_FULL	1158,34123
#define	S_ILLEGAL	1159,34151
#define	S_SENSE	1160,34176

drivers/scsi/ppa.c,1404
#define PPA_CODE 16,471
} ppa_struct;ppa_struct36,1223
#define PPA_EMPTY	38,1238
#define NO_HOSTS 52,1460
static ppa_struct ppa_hosts[53,1479
#define PPA_BASE(PPA_BASE56,1566
void ppa_wakeup(58,1607
int ppa_release(76,1954
static int ppa_pb_claim(85,2146
#define ppa_pb_release(ppa_pb_release96,2378
Scsi_Host_Template driver_template 103,2688
int ppa_detect(111,2800
static inline int ppa_proc_write(229,5836
int ppa_proc_info(242,6156
#define ppa_fail(ppa_fail273,6898
static inline void ppa_fail_func(275,7022
static unsigned char ppa_wait(294,7566
static inline void epp_reset(328,8361
static inline void ecp_sync(337,8492
static int ppa_byte_out(352,8760
static int ppa_byte_in(364,8995
static int ppa_nibble_in(376,9226
static int ppa_out(389,9506
static int ppa_in(434,10384
static inline void ppa_d_pulse(489,11441
static void ppa_disconnect(499,11638
static inline void ppa_c_pulse(509,11836
static inline void ppa_connect(518,12012
static int ppa_select(532,12334
static int ppa_init(574,13256
static inline int ppa_send_command(611,14058
static int ppa_completion(632,14605
int ppa_command(703,16516
static void ppa_interrupt(740,17484
static int ppa_engine(799,18833
int ppa_queuecommand(915,21801
int ppa_biosparam(946,22697
int ppa_abort(961,23004
static void ppa_reset_pulse(981,23520
int ppa_reset(989,23655
static int device_check(1005,24068

drivers/scsi/eata_dma_proc.c,80
void swap_statistics(1,0
int eata_set_info(31,644
int eata_proc_info(66,1737

drivers/scsi/eata_pio.h,707
#define _EATA_PIO_H10,342
#define VER_MAJOR 20,493
#define VER_MINOR 21,513
#define VER_SUB	22,533
#define VERBOSE_SETUP	28,762
#define ALLOW_DMA_BOARDS 29,820
#define DEBUG_EATA	35,1079
#define DPT_DEBUG	36,1129
#define DBG_DELAY	37,1173
#define DBG_PROBE	41,1386
#define DBG_ISA	42,1438
#define DBG_EISA	43,1487
#define DBG_PCI	44,1537
#define DBG_PIO	45,1586
#define DBG_COM	46,1636
#define DBG_QUEUE	47,1684
#define DBG_INTR	48,1738
#define DBG_INTR2	49,1799
#define DBG_PROC	50,1861
#define DBG_PROC_WRITE	51,1922
#define DBG_REGISTER	52,1947
#define DBG_ABNORM	53,1978
#define DBG(DBG56,2062
#define DBG(DBG58,2103
#define eata_pio_release 73,2542
#define EATA_PIO 77,2583

drivers/scsi/ide-scsi.c,2179
#define IDESCSI_VERSION 31,1372
#define IDESCSI_DEBUG_LOG	56,1851
typedef struct idescsi_pc_s idescsi_pc_s58,1881
} idescsi_pc_t;idescsi_pc_t72,2578
#define PC_DMA_IN_PROGRESS	77,2633
#define PC_WRITING	78,2693
#define PC_TRANSFORM	79,2737
#define IDESCSI_TRANSFORM	84,2837
#define IDESCSI_SG_TRANSFORM	85,2902
#define IDESCSI_LOG_CMD	90,2984
} idescsi_scsi_t;idescsi_scsi_t98,3255
#define IDESCSI_DRQ_INTERRUPT	103,3314
#define IDESCSI_PC_RQ	108,3404
#define IDESCSI_IREASON_COD	113,3481
#define IDESCSI_IREASON_IO	114,3555
static void idescsi_discard_data 116,3625
static void idescsi_output_zeros 122,3749
static void idescsi_input_buffers 131,3946
static void idescsi_output_buffers 151,4554
static inline void idescsi_transform_pc1 175,5296
static inline void idescsi_transform_pc2 213,6545
static inline void idescsi_free_bh 238,7422
static void hexdump(249,7580
static void idescsi_end_request 259,7711
static inline unsigned long get_timeout(302,9191
static void idescsi_pc_intr 310,9337
static void idescsi_transfer_pc 394,12110
static void idescsi_issue_pc 417,12870
static void idescsi_do_request 454,14134
static int idescsi_open 469,14792
static void idescsi_ide_release 475,14913
static ide_drive_t *idescsi_drives[480,15031
static int idescsi_initialized 481,15091
static void idescsi_add_settings(483,15128
static void idescsi_setup 500,15922
static int idescsi_cleanup 518,16501
static ide_driver_t idescsi_driver 532,16761
static ide_module_t idescsi_module 553,17298
static struct proc_dir_entry idescsi_proc_dir 560,17400
int idescsi_init 565,17580
int idescsi_detect 600,18694
int idescsi_release 613,19022
const char *idescsi_info 626,19237
int idescsi_ioctl 631,19353
static inline struct buffer_head *idescsi_kmalloc_bh 644,19738
static inline int idescsi_set_direction 666,20303
static inline struct buffer_head *idescsi_dma_bh 680,20606
static inline int should_transform(714,21731
int idescsi_queue 723,22021
int idescsi_abort 788,23748
int idescsi_reset 793,23815
int idescsi_bios 798,23908
Scsi_Host_Template idescsi_template 811,24204
int init_module 813,24252
void cleanup_module 821,24411

drivers/scsi/eata_dma_proc.h,1694
struct lun_map lun_map2,1
typedef struct emul_pp emul_pp8,66
}emulpp;emulpp21,337
typedef struct log_sheader log_sheader26,371
}logsh;logsh30,453
typedef struct read_command_statistics read_command_statistics35,491
}r_cmd_stat;r_cmd_stat48,764
typedef struct write_command_statistics write_command_statistics50,778
}w_cmd_stat;w_cmd_stat64,1060
typedef struct host_command_statistics host_command_statistics66,1074
}hst_cmd_stat;hst_cmd_stat71,1218
typedef struct physical_command_statistics physical_command_statistics73,1234
}phy_cmd_stat;phy_cmd_stat78,1384
typedef struct misc_device_statistics misc_device_statistics80,1400
}msc_stats;msc_stats88,1607
typedef struct controller_configuration controller_configuration92,1648
}coco;coco104,1891
typedef struct controller_hardware_errors controller_hardware_errors106,1899
}coher;coher113,2071
typedef struct memory_map memory_map115,2080
}mema;mema120,2214
typedef struct scsi_transfer scsi_transfer122,2222
}scsitrans;scsitrans129,2380
typedef struct scsi_modes scsi_modes131,2393
}scsimod;scsimod142,2601
typedef struct host_bus host_bus144,2612
}hobu;hobu152,2778
typedef struct scsi_bus scsi_bus154,2786
}scbu;scbu164,2965
typedef struct board_type board_type166,2973
}boty;boty185,3271
typedef struct memory_config memory_config187,3279
}memco;memco192,3411
typedef struct firmware_info firmware_info194,3420
}firm;firm205,3637
typedef struct subsystem_info subsystem_info207,3645
}subinf;subinf215,3821
typedef struct per_channel_info per_channel_info217,3831
}pcinf;pcinf230,4078
typedef struct array_limits array_limits232,4087
}arrlim;arrlim240,4266

drivers/scsi/scsi_proc.c,455
#define __NO_VERSION__20,614
#define TRUE 34,888
#define FALSE 35,904
struct scsi_dir scsi_dir41,1018
int generic_proc_info(50,1183
extern int dispatch_scsi_info(84,2060
static void scsi_proc_fill_inode(113,3058
void build_proc_dir_entries(128,3395
} parseHandle;parseHandle183,5538
inline int parseFree 186,5556
parseHandle *parseInit(195,5711
int parseOpt(224,6757
void proc_print_scsidevice(266,8203
void proc_print_scsidevice(313,9638

drivers/scsi/eata_generic.h,4072
#define _EATA_GENERIC_H13,510
#define TRUE 22,676
#define FALSE 25,712
#define min(min28,736
#define R_LIMIT 30,770
#define MAXISA	32,795
#define MAXEISA	33,815
#define MAXPCI	34,838
#define MAXIRQ	35,858
#define MAXTARGET 36,879
#define MAXCHANNEL 37,900
#define IS_ISA	39,922
#define IS_EISA	40,944
#define IS_PCI	41,967
#define BROKEN_INQUIRY	43,990
#define BUSMASTER 45,1016
#define PIO 46,1045
#define EATA_SIGNATURE	48,1075
#define DPT_ID1 50,1150
#define DPT_ID2 51,1179
#define ATT_ID1 53,1209
#define ATT_ID2 54,1238
#define ATT_ID3 55,1267
#define NEC_ID1 57,1296
#define NEC_ID2 58,1325
#define NEC_ID3 59,1354
#define EATA_CP_SIZE	62,1386
#define MAX_PCI_DEVICES 64,1412
#define MAX_METHOD_2	65,1483
#define MAX_PCI_BUS	66,1547
#define SG_SIZE	68,1614
#define SG_SIZE_BIG	69,1636
#define UPPER_DEVICE_QUEUE_LIMIT 71,1699
#define TYPE_DISK_QUEUE 77,1887
#define TYPE_TAPE_QUEUE 78,1915
#define TYPE_ROM_QUEUE 79,1942
#define TYPE_OTHER_QUEUE 80,1969
#define FREE	82,1997
#define OK	83,2021
#define NO_TIMEOUT 84,2043
#define USED	85,2070
#define TIMEOUT	86,2094
#define RESET	87,2121
#define LOCKED	88,2146
#define ABORTED 89,2172
#define READ 91,2201
#define WRITE 92,2228
#define OTHER 93,2255
#define HD(HD95,2283
#define CD(CD96,2337
#define SD(SD97,2396
#define DELAY(DELAY99,2446
#define PCI_REG_DPTconfig	108,2846
#define PCI_REG_PumpModeAddress	109,2880
#define PCI_REG_PumpModeData	110,2920
#define PCI_REG_ConfigParam1	111,2957
#define PCI_REG_ConfigParam2	112,2994
#define EATA_CMD_PIO_SETUPTEST	115,3033
#define EATA_CMD_PIO_READ_CONFIG 116,3070
#define EATA_CMD_PIO_SET_CONFIG	117,3108
#define EATA_CMD_PIO_SEND_CP	118,3146
#define EATA_CMD_PIO_RECEIVE_SP	119,3181
#define EATA_CMD_PIO_TRUNC	120,3219
#define EATA_CMD_RESET	122,3253
#define EATA_CMD_IMMEDIATE	123,3283
#define EATA_CMD_DMA_READ_CONFIG 125,3317
#define EATA_CMD_DMA_SET_CONFIG	126,3355
#define EATA_CMD_DMA_SEND_CP	127,3393
#define ECS_EMULATE_SENSE	129,3429
#define EATA_GENERIC_ABORT 131,3462
#define EATA_SPECIFIC_RESET 132,3501
#define EATA_BUS_RESET 133,3539
#define EATA_SPECIFIC_ABORT 134,3577
#define EATA_QUIET_INTR 135,3615
#define EATA_COLD_BOOT_HBA 136,3653
#define EATA_FORCE_IO 137,3722
#define HA_CTRLREG 139,3761
#define HA_CTRL_DISINT 140,3830
#define HA_CTRL_RESCPU 141,3899
#define HA_CTRL_8HEADS 142,3968
#define HA_WCOMMAND 145,4085
#define HA_WIFC 146,4146
#define HA_WCODE 147,4209
#define HA_WCODE2 148,4238
#define HA_WDMAADDR 149,4267
#define HA_RAUXSTAT 150,4329
#define HA_RSTATUS 151,4392
#define HA_RDATA 152,4452
#define HA_WDATA 153,4511
#define HA_ABUSY 155,4571
#define HA_AIRQ	156,4622
#define HA_SERROR 157,4679
#define HA_SMORE 158,4742
#define HA_SCORR 159,4802
#define HA_SDRQ	160,4855
#define HA_SSC	161,4912
#define HA_SFAULT 162,4963
#define HA_SREADY 163,5013
#define HA_SBUSY 164,5063
#define HA_SDRDY 165,5112
#define HA_NO_ERROR	171,5293
#define HA_ERR_SEL_TO	172,5337
#define HA_ERR_CMD_TO	173,5391
#define HA_BUS_RESET	174,5443
#define HA_INIT_POWERUP	175,5501
#define HA_UNX_BUSPHASE	176,5566
#define HA_UNX_BUS_FREE	177,5625
#define HA_BUS_PARITY	178,5683
#define HA_SCSI_HUNG	179,5736
#define HA_UNX_MSGRJCT	180,5782
#define HA_RESET_STUCK	181,5846
#define HA_RSENSE_FAIL	182,5904
#define HA_PARITY_ERR	183,5966
#define HA_CP_ABORT_NA	184,6029
#define HA_CP_ABORTED	185,6101
#define HA_CP_RESET_NA	186,6168
#define HA_CP_RESET	187,6240
#define HA_ECC_ERR	188,6305
#define HA_PCI_PARITY	189,6362
#define HA_PCI_MABORT	190,6415
#define HA_PCI_TABORT	191,6468
#define HA_PCI_STABORT	192,6521
struct reg_bit reg_bit198,6715
struct reg_abit reg_abit209,7249
struct eata_register eata_register215,7449
struct get_conf get_conf226,7848
struct eata_sg_listeata_sg_list276,10112
struct eata_ccb eata_ccb282,10169
struct eata_sp eata_sp333,12276
typedef struct hstd hstd343,12624
}hostdata;hostdata377,14035
struct drive_geom_emul drive_geom_emul380,14090
struct geom_emul geom_emul391,14505

drivers/scsi/st_options.h,672
#define _ST_OPTIONS_H10,193
#define ST_RUNTIME_BUFFERS 16,520
#define ST_MAX_TAPES 21,766
#define ST_NOWAIT 27,1093
#define ST_IN_FILE_POS 34,1480
#define ST_RECOVERED_WRITE_FATAL 38,1617
#define ST_DEFAULT_BLOCK 42,1736
#define ST_BUFFER_BLOCKS 45,1812
#define ST_WRITE_THRESHOLD_BLOCKS 50,1988
#define ST_MAX_BUFFERS 55,2226
#define ST_MAX_SG 58,2318
#define ST_FIRST_SG 62,2460
#define ST_FIRST_ORDER 67,2692
#define ST_TWO_FM 76,3009
#define ST_BUFFER_WRITES 81,3238
#define ST_ASYNC_WRITES 86,3427
#define ST_READ_AHEAD 90,3536
#define ST_AUTO_LOCK 95,3736
#define ST_FAST_MTEOM 101,4019
#define ST_SCSI2LOGICAL 106,4214
#define ST_SYSV 110,4355

drivers/scsi/eata_pio.c,997
struct proc_dir_entry proc_scsi_eata_pio 62,2771
static uint ISAbases[67,2894
static uint ISAirqs[69,2955
static unchar EISAbases[71,3000
static uint registered_HBAs 73,3078
static struct Scsi_Host *last_HBA 74,3111
static struct Scsi_Host *first_HBA 75,3153
static unchar reg_IRQ[76,3196
static unchar reg_IRQL[78,3272
static ulong int_counter 81,3350
static ulong queue_counter 82,3380
int eata_pio_release(87,3456
void IncStat(99,3747
void do_eata_pio_int_handler(116,4123
void eata_pio_int_handler(125,4375
inline uint eata_pio_send_command(268,7424
int eata_pio_queue(286,7888
int eata_pio_abort(410,11890
int eata_pio_reset(458,13426
char * get_pio_board_data(541,15803
int get_pio_conf_PIO(586,16988
void print_pio_config(639,18408
static uint print_selftest(654,19039
int register_pio_HBA(681,19742
void find_pio_ISA(824,23468
void find_pio_EISA(839,23763
void find_pio_PCI(882,24898
int eata_pio_detect(981,27946
Scsi_Host_Template driver_template 1034,29745

drivers/scsi/scsi.c,2948
#define __KERNEL_SYSCALLS__52,1540
#define INTERNAL_ERROR 78,1994
#define SECTOR_SIZE	84,2221
#define SECTORS_PER_PAGE	85,2246
 typedef unsigned char	FreeSectorBitmap;FreeSectorBitmap88,2322
 typedef unsigned int	FreeSectorBitmap;FreeSectorBitmap90,2392
#define MIN_RESET_DELAY 95,2464
#define MIN_RESET_PERIOD 98,2567
#define BLIST_NOLUN 105,2759
#define BLIST_FORCELUN 106,2788
#define BLIST_BORKEN 107,2817
#define BLIST_KEY 108,2846
#define BLIST_SINGLELUN 109,2875
#define BLIST_NOTQ	110,2904
#define BLIST_SPARSELUN 111,2928
unsigned long             scsi_pid 116,2987
Scsi_Cmnd               * last_cmnd 117,3027
const unsigned char       scsi_command_size[119,3140
static unsigned long      serial_number 121,3276
static Scsi_Cmnd        * scsi_bh_queue_head 122,3321
static Scsi_Cmnd	* scsi_bh_queue_tail 123,3374
static FreeSectorBitmap * dma_malloc_freelist 124,3420
static int                need_isa_bounce_buffers;125,3474
static unsigned int       dma_sectors 126,3525
unsigned int              scsi_dma_free_sectors 127,3568
unsigned int              scsi_need_isa_buffer 128,3621
static unsigned char   ** dma_malloc_pages 129,3673
unsigned int              scsi_logging_level 135,3887
volatile struct Scsi_Host * host_active 137,3938
struct proc_dir_entry proc_scsi_scsi 144,4122
const char *const scsi_device_types[154,4298
#define SCSI_BLOCK(SCSI_BLOCK197,5621
struct dev_info{dev_info206,6053
static struct dev_info device_list[218,6391
static int get_device_flags(295,10839
scsi_make_blocked_list(336,12295
static void scan_scsis_done 393,14095
__initfunc(403,14351
static int max_scsi_luns 414,14635
static int max_scsi_luns 416,14671
__initfunc(419,14709
static void scan_scsis 434,15198
int scan_scsis_single 627,21057
#define NORMAL_TIMEOUT 951,30177
#define IN_ABORT 952,30202
#define IN_RESET 953,30222
#define IN_RESET2 954,30242
#define IN_RESET3 955,30262
Scsi_Cmnd * scsi_request_queueable 965,30620
Scsi_Cmnd * scsi_allocate_device 1089,34578
scsi_release_command(1253,39548
inline int internal_cmnd 1289,40818
void scsi_do_cmd 1414,44651
scsi_done 1526,48641
void scsi_bottom_half_handler(1597,50757
scsi_retry_command(1720,55206
scsi_finish_command(1741,55842
void *scsi_malloc(1804,57668
int scsi_free(1829,58421
int scsi_loadable_module_flag;1875,59738
void * scsi_init_malloc(1877,59810
void scsi_init_free(1900,60335
void scsi_build_commandblocks(1918,60787
__initfunc(1964,62498
static void print_inquiry(2042,64716
int scsi_proc_info(2088,65605
static void resize_dma_pool(2410,74680
static int scsi_register_host(2571,80480
static void scsi_unregister_host(2742,85609
static int scsi_register_device_module(2986,93365
static int scsi_unregister_device(3044,94915
int scsi_register_module(3110,96492
void scsi_unregister_module(3138,97228
scsi_dump_status(3178,98552
int init_module(3274,101771
void cleanup_module(3320,103013

drivers/scsi/eata_pio_proc.c,60
int eata_pio_set_info(7,190
int eata_pio_proc_info(24,888

drivers/scsi/NCR53c406a.h,134
#define _NCR53C406A_H2,22
#define NULL 22,654
#define NCR53c406a 28,777
extern struct proc_dir_entry proc_scsi_NCR53c406a;46,1765

drivers/scsi/AM53C974.c,7743
#define DEB(DEB51,1322
#define KEYWAIT(KEYWAIT53,1369
#define KEYWAIT(KEYWAIT55,1412
#define DEB_INIT(DEB_INIT58,1464
#define DEB_INIT(DEB_INIT60,1492
#define DEB_MSG(DEB_MSG63,1545
#define DEB_MSG(DEB_MSG65,1572
#define DEB_RESEL(DEB_RESEL68,1624
#define DEB_RESEL(DEB_RESEL70,1653
#define DEB_QUEUE(DEB_QUEUE73,1709
#define LIST(LIST74,1732
#define REMOVE(REMOVE75,1851
#define DEB_QUEUE(DEB_QUEUE77,2016
#define LIST(LIST78,2037
#define REMOVE(REMOVE79,2055
#define DEB_INFO(DEB_INFO82,2113
#define DEB_INFO(DEB_INFO84,2141
#define DEB_LINKED(DEB_LINKED87,2197
#define DEB_LINKED(DEB_LINKED89,2227
#define DEB_INTR(DEB_INTR92,2283
#define DEB_INTR(DEB_INTR94,2311
#define DEB_INIT(DEB_INIT97,2344
#define DEB(DEB98,2364
#define DEB_QUEUE(DEB_QUEUE99,2379
#define LIST(LIST100,2400
#define REMOVE(REMOVE101,2418
#define DEB_INFO(DEB_INFO102,2442
#define DEB_LINKED(DEB_LINKED103,2462
#define DEB_INTR(DEB_INTR104,2484
#define DEB_MSG(DEB_MSG105,2504
#define DEB_RESEL(DEB_RESEL106,2523
#define KEYWAIT(KEYWAIT107,2544
#define DEB_ABORT(DEB_ABORT110,2597
#define DEB_ABORT(DEB_ABORT112,2626
#define VDEB(VDEB116,2685
#define VDEB(VDEB118,2709
#define INSIDE(INSIDE121,2733
#define DEFAULT_SYNC_NEGOTIATION_ENABLED 140,3930
#define DEFAULT_RATE	141,3986
#define DEFAULT_SYNC_OFFSET	142,4039
#define AM53C974_PROHIBIT_DISCONNECT149,4569
#define AM53C974_DRIVER_REVISION_MAJOR 153,4681
#define AM53C974_DRIVER_REVISION_MINOR 154,4722
#define SEPARATOR_LINE 155,4763
#define AM53C974_DEBUG_ABORT169,5231
#define DEF_CLK 173,5340
#define MIN_PERIOD 174,5405
#define MAX_PERIOD 175,5495
#define MAX_OFFSET 176,5585
#define DEF_SCSI_TIMEOUT 178,5666
#define DEF_STP 179,5730
#define DEF_SOF_RAD 180,5822
#define DEF_SOF_RAA 181,5888
#define DEF_ETM 182,5952
#define DEF_PERE 183,6019
#define DEF_CLKF 184,6092
#define DEF_ENF 185,6151
#define DEF_ADIDCHK 186,6217
#define DEF_FASTSCSI 187,6287
#define DEF_FASTCLK 188,6347
#define DEF_GLITCH 189,6439
#define DEF_PWD 190,6533
#define DEF_RAE 191,6605
#define DEF_RADE 192,6692
#define CTCLREG	195,6802
#define CTCMREG	196,6877
#define CTCHREG	197,6951
#define STCLREG	198,7026
#define STCMREG	199,7101
#define STCHREG	200,7176
#define FFREG	201,7251
#define STIMREG	202,7324
#define SDIDREG	204,7400
#define SDIREG_MASK	205,7475
#define STPREG	207,7550
#define STPREG_STP	208,7624
#define CLKFREG	210,7698
#define CLKFREG_MASK	211,7773
#define CMDREG	213,7849
#define CMDREG_DMA 214,7923
#define CMDREG_IT 215,8009
#define CMDREG_ICCS	216,8082
#define CMDREG_MA	217,8156
#define CMDREG_TPB	218,8228
#define CMDREG_SATN	219,8301
#define CMDREG_RATN	220,8375
#define CMDREG_SOAS	221,8449
#define CMDREG_SAS	222,8523
#define CMDREG_SASS	223,8596
#define CMDREG_ESR	224,8670
#define CMDREG_DSR	225,8735
#define CMDREG_SA3S	226,8800
#define CMDREG_NOP	227,8872
#define CMDREG_CFIFO	228,8937
#define CMDREG_RDEV	229,9012
#define CMDREG_RBUS	230,9078
#define STATREG	232,9153
#define STATREG_INT	233,9228
#define STATREG_IOE	234,9302
#define STATREG_PE	235,9374
#define STATREG_CTZ	236,9447
#define STATREG_MSG	237,9521
#define STATREG_CD	238,9595
#define STATREG_IO	239,9668
#define STATREG_PHASE 240,9741
#define INSTREG	242,9827
#define INSTREG_SRST	243,9902
#define INSTREG_ICMD	244,9977
#define INSTREG_DIS	245,10044
#define INSTREG_SR	246,10117
#define INSTREG_SO	247,10188
#define INSTREG_RESEL	248,10261
#define ISREG	250,10330
#define ISREG_SOF	251,10403
#define ISREG_IS	252,10475
#define ISREG_OK_NO_STOP 253,10546
#define ISREG_OK_STOP 254,10629
#define CFIREG	256,10713
#define CFIREG_IS	257,10787
#define CFIREG_CF	258,10859
#define SOFREG	260,10932
#define SOFREG_RAD	261,11006
#define SOFREG_RAA	262,11079
#define SOFREG_SO	263,11152
#define CNTLREG1	265,11217
#define CNTLREG1_ETM	266,11292
#define CNTLREG1_DISR	267,11367
#define CNTLREG1_PERE	268,11443
#define CNTLREG1_SID	269,11511
#define CNTLREG2	271,11587
#define CNTLREG2_ENF	272,11662
#define CNTLREG3	274,11738
#define CNTLREG3_ADIDCHK	275,11813
#define CNTLREG3_FASTSCSI	276,11891
#define CNTLREG3_FASTCLK	277,11970
#define CNTLREG4	279,12049
#define CNTLREG4_GLITCH	280,12124
#define CNTLREG4_PWD	281,12202
#define CNTLREG4_RAE	282,12269
#define CNTLREG4_RADE	283,12344
#define CNTLREG4_RES	284,12420
#define DMACMD	287,12516
#define DMACMD_DIR	288,12590
#define DMACMD_INTE_D	289,12661
#define DMACMD_INTE_P	290,12729
#define DMACMD_MDL	291,12805
#define DMACMD_DIAG	292,12870
#define DMACMD_IDLE 293,12936
#define DMACMD_BLAST	294,13011
#define DMACMD_ABORT	295,13086
#define DMACMD_START	296,13153
#define DMASTATUS	298,13229
#define DMASTATUS_BCMPLT	299,13307
#define DMASTATUS_SCSIINT	300,13377
#define DMASTATUS_DONE	301,13448
#define DMASTATUS_ABORT	302,13525
#define DMASTATUS_ERROR	303,13603
#define DMASTATUS_PWDN	304,13681
#define DMASTC	306,13759
#define DMASPA	307,13833
#define DMAWBC	308,13907
#define DMAWAC	309,13981
#define DMASMDLA	310,14055
#define DMAWMAC	311,14130
#define PHASE_MSGIN 314,14228
#define PHASE_MSGOUT 315,14265
#define PHASE_RES_1 316,14302
#define PHASE_RES_0 317,14339
#define PHASE_STATIN 318,14376
#define PHASE_CMDOUT 319,14413
#define PHASE_DATAIN 320,14450
#define PHASE_DATAOUT 321,14487
#define AM53C974_local_declare(AM53C974_local_declare324,14526
#define AM53C974_setio(AM53C974_setio325,14581
#define AM53C974_read_8(AM53C974_read_8326,14642
#define AM53C974_write_8(AM53C974_write_8327,14704
#define AM53C974_read_16(AM53C974_read_16328,14772
#define AM53C974_write_16(AM53C974_write_16329,14834
#define AM53C974_read_32(AM53C974_read_32330,14902
#define AM53C974_write_32(AM53C974_write_32331,14964
#define AM53C974_poll_int(AM53C974_poll_int333,15033
#define AM53C974_cfifo(AM53C974_cfifo336,15289
#define TAG_NEXT	339,15436
#define TAG_NONE	340,15480
typedef struct _override_t _override_t344,15625
} override_t;override_t349,15855
static struct Scsi_Host *first_instance 383,17737
static Scsi_Host_Template *the_template 384,17785
static struct Scsi_Host *first_host 385,17833
static volatile int main_running 386,17910
static int commandline_current 387,17948
override_t overrides[388,17984
struct proc_dir_entry proc_scsi_am53c974 392,18052
static int deb_stop 399,18191
} phases[404,18268
static void AM53C974_print_phase(434,18874
static void AM53C974_print_queues(458,19752
static void AM53C974_print(510,21284
static void AM53C974_keywait(558,23176
void AM53C974_setup(590,24034
static __inline__ int AM53C974_pci_detect(624,25345
__initfunc(662,26635
__initfunc(689,27601
static void AM53C974_config_after_reset(794,31310
const char *AM53C974_info(822,32750
int AM53C974_command(842,33807
static __inline__ void initialize_SCp(858,34690
static __inline__ void run_main(886,36128
int AM53C974_queue_command(915,37090
static void AM53C974_main(970,39317
static void do_AM53C974_intr(1039,42091
static void AM53C974_intr(1057,42989
static void AM53C974_intr_disconnect(1315,51508
static int AM53C974_sync_neg(1446,56325
static __inline__ void AM53C974_set_async(1495,57875
static __inline__ void AM53C974_set_sync(1515,58611
static void AM53C974_information_transfer(1543,60253
static int AM53C974_message(1715,66307
static void AM53C974_select(1968,75491
static void AM53C974_intr_reselect(2057,78488
static __inline__ void AM53C974_transfer_dma(2191,83021
static void AM53C974_dma_blast(2220,84209
static void AM53C974_intr_bus_reset(2271,85844
int AM53C974_abort(2295,86577
int AM53C974_reset(2403,90576
int AM53C974_release(2459,92011
static Scsi_Host_Template driver_template 2468,92135

drivers/scsi/AM53C974.h,160
#define AM53C974_H28,791
struct AM53C974_hostdata AM53C974_hostdata32,838
extern struct proc_dir_entry proc_scsi_am53c974;53,2168
#define AM53C974 55,2218

drivers/scsi/aic7xxx_proc.c,234
#define	BLS	32,1382
#define HDRB 33,1418
proc_debug(40,1594
#  define proc_debug(proc_debug51,1762
static int aic7xxx_buffer_size 54,1822
static char *aic7xxx_buffer 55,1858
aic7xxx_set_info(66,2173
aic7xxx_proc_info 81,2631

drivers/scsi/BusLogic.c,2988
#define BusLogic_DriverVersion	29,1079
#define BusLogic_DriverDate	30,1120
  BusLogic_DriverOptionsCount 64,1901
  BusLogic_DriverOptions[74,2201
  *BusLogic_Options 84,2431
  BusLogic_ProbeOptions 93,2603
  BusLogic_GlobalOptions 102,2782
  *BusLogic_FirstRegisteredHostAdapter 111,3006
  BusLogic_ProbeInfoCount 120,3198
  *BusLogic_ProbeInfoList 131,3547
  *BusLogic_CommandFailureReason;141,3784
  BusLogic_ProcDirectoryEntry 149,3923
static void BusLogic_AnnounceDriver(158,4168
const char *BusLogic_DriverInfo(173,4611
static void BusLogic_RegisterHostAdapter(186,4900
static void BusLogic_UnregisterHostAdapter(207,5440
static void BusLogic_InitializeCCBs(236,6375
static boolean BusLogic_CreateInitialCCBs(265,7236
static void BusLogic_DestroyCCBs(290,7908
static void BusLogic_CreateAdditionalCCBs(311,8527
static BusLogic_CCB_T *BusLogic_AllocateCCB(353,10025
static void BusLogic_DeallocateCCB(388,10956
static int BusLogic_Command(416,12116
static void BusLogic_AppendProbeAddressISA(647,19907
static void BusLogic_InitializeProbeInfoListISA(664,20539
static void BusLogic_SortProbeInfo(710,22213
static int BusLogic_InitializeMultiMasterProbeInfo(745,23456
static int BusLogic_InitializeFlashPointProbeInfo(1018,34668
static void BusLogic_InitializeProbeInfoList(1122,38767
static boolean BusLogic_Failure(1205,41647
static boolean BusLogic_ProbeHostAdapter(1232,42600
static boolean BusLogic_HardwareResetHostAdapter(1320,46517
static boolean BusLogic_CheckHostAdapter(1436,50475
static boolean BusLogic_ReadHostAdapterConfiguration(1475,51874
static boolean BusLogic_ReportHostAdapterConfiguration(2003,74137
static boolean BusLogic_AcquireResources(2245,83426
static void BusLogic_ReleaseResources(2292,84751
static boolean BusLogic_InitializeHostAdapter(2313,85351
static boolean BusLogic_TargetDeviceInquiry(2425,89769
static void BusLogic_ReportTargetDeviceInfo(2535,94384
static void BusLogic_InitializeHostStructure(2616,97484
static void BusLogic_SelectQueueDepths(2640,98420
int BusLogic_DetectHostAdapter(2719,101511
int BusLogic_ReleaseHostAdapter(2867,107350
static void BusLogic_QueueCompletedCCB(2899,108228
static int BusLogic_ComputeResultCode(2923,108847
static void BusLogic_ScanIncomingMailboxes(2982,110837
static void BusLogic_ProcessCompletedCCBs(3043,113241
static void BusLogic_InterruptHandler(3198,118640
static boolean BusLogic_WriteOutgoingMailbox(3289,121509
int BusLogic_QueueCommand(3327,122884
int BusLogic_AbortCommand(3555,131378
static int BusLogic_ResetHostAdapter(3679,135530
static int BusLogic_SendBusDeviceReset(3840,140663
int BusLogic_ResetCommand(4027,147561
int BusLogic_BIOSDiskParameters(4099,151002
int BusLogic_ProcDirectoryInfo(4203,154371
static void BusLogic_Message(4381,161990
static boolean BusLogic_ParseKeyword(4435,163674
static void BusLogic_ParseDriverOptions(4682,173949
void BusLogic_Setup(4968,183426
SCSI_Host_Template_T driver_template 4989,183879

drivers/scsi/BusLogic.h,11389
typedef kdev_t KernelDevice_T;KernelDevice_T37,1227
typedef struct proc_dir_entry PROC_DirectoryEntry_T;PROC_DirectoryEntry_T38,1258
typedef unsigned long ProcessorFlags_T;ProcessorFlags_T39,1311
typedef struct pt_regs Registers_T;Registers_T40,1351
typedef struct partition PartitionTable_T;PartitionTable_T41,1387
typedef struct pci_dev PCI_Device_T;PCI_Device_T42,1430
typedef Scsi_Host_Template SCSI_Host_Template_T;SCSI_Host_Template_T43,1467
typedef struct Scsi_Host SCSI_Host_T;SCSI_Host_T44,1516
typedef struct scsi_device SCSI_Device_T;SCSI_Device_T45,1554
typedef struct scsi_disk SCSI_Disk_T;SCSI_Disk_T46,1596
typedef struct scsi_cmnd SCSI_Command_T;SCSI_Command_T47,1634
typedef struct scatterlist SCSI_ScatterList_T;SCSI_ScatterList_T48,1675
extern PROC_DirectoryEntry_T BusLogic_ProcDirectoryEntry;55,1796
#define BUSLOGIC	71,2464
#define CONFIG_SCSI_OMIT_FLASHPOINT100,3663
#define CONFIG_SCSI_OMIT_FLASHPOINT105,3761
#define BusLogic_InitializeProbeInfoListISA 106,3797
#define BusLogic_MaxHostAdapters	115,3974
#define BusLogic_MaxTargetDevices	122,4092
#define BusLogic_ScatterGatherLimit	131,4359
#define BusLogic_MaxTaggedQueueDepth	140,4633
#define BusLogic_MaxAutomaticTaggedQueueDepth	141,4674
#define BusLogic_MinAutomaticTaggedQueueDepth	142,4723
#define BusLogic_TaggedQueueDepthBB	143,4771
#define BusLogic_UntaggedQueueDepth	144,4810
#define BusLogic_UntaggedQueueDepthBB	145,4849
#define BusLogic_DefaultBusSettleTime	155,5152
#define BusLogic_MaxMailboxes	165,5480
#define BusLogic_CCB_AllocationGroupSize	173,5629
#define BusLogic_LineBufferSize	180,5738
#define BusLogic_MessageBufferSize	181,5776
typedef enum BusLogic_MessageLevelBusLogic_MessageLevel188,5862
BusLogic_MessageLevel_T;BusLogic_MessageLevel_T196,6052
  *BusLogic_MessageLevelMap[199,6090
#define BusLogic_Announce(BusLogic_Announce207,6234
#define BusLogic_Info(BusLogic_Info210,6349
#define BusLogic_Notice(BusLogic_Notice213,6456
#define BusLogic_Warning(BusLogic_Warning216,6567
#define BusLogic_Error(BusLogic_Error219,6680
__attribute__ ((packed)packed233,6994
#define BusLogic_MultiMasterAddressCount	236,7048
#define BusLogic_FlashPointAddressCount	237,7091
  BusLogic_HostAdapterAddressCount[240,7148
#define BusLogic_MultiMasterHostAdapterP(BusLogic_MultiMasterHostAdapterP250,7363
#define BusLogic_FlashPointHostAdapterP(BusLogic_FlashPointHostAdapterP253,7477
#define BusLogic_MultiMasterHostAdapterP(BusLogic_MultiMasterHostAdapterP258,7596
#define BusLogic_FlashPointHostAdapterP(BusLogic_FlashPointHostAdapterP261,7662
__attribute__ ((packed)packed280,7973
  *BusLogic_HostAdapterBusNames[284,8042
  BusLogic_HostAdapterBusTypes[288,8172
typedef enum BusLogic_BIOS_DiskGeometryTranslationBusLogic_BIOS_DiskGeometryTranslation301,8534
__attribute__ ((packed)packed308,8760
typedef enum { false, true } __attribute__ __attribute__316,8865
typedef unsigned int BusLogic_IO_Address_T;BusLogic_IO_Address_T323,8978
typedef unsigned int BusLogic_PCI_Address_T;BusLogic_PCI_Address_T330,9076
typedef unsigned int BusLogic_Base_Address_T;BusLogic_Base_Address_T337,9172
typedef unsigned int BusLogic_BusAddress_T;BusLogic_BusAddress_T344,9268
typedef unsigned int BusLogic_ByteCount_T;BusLogic_ByteCount_T351,9361
typedef struct BusLogic_ByteCounterBusLogic_ByteCounter358,9465
BusLogic_ByteCounter_T;BusLogic_ByteCounter_T363,9552
typedef struct BusLogic_ProbeInfoBusLogic_ProbeInfo370,9653
BusLogic_ProbeInfo_T;BusLogic_ProbeInfo_T380,9937
typedef struct BusLogic_ProbeOptionsBusLogic_ProbeOptions387,9996
BusLogic_ProbeOptions_T;BusLogic_ProbeOptions_T403,10557
typedef struct BusLogic_GlobalOptionsBusLogic_GlobalOptions410,10620
BusLogic_GlobalOptions_T;BusLogic_GlobalOptions_T417,10836
typedef struct BusLogic_LocalOptionsBusLogic_LocalOptions424,10899
BusLogic_LocalOptions_T;BusLogic_LocalOptions_T428,10988
__attribute__ ((packed)packed442,11246
  *BusLogic_ErrorRecoveryStrategyNames[446,11318
#define BusLogic_ControlRegisterOffset	456,11565
#define BusLogic_StatusRegisterOffset	457,11625
#define BusLogic_CommandParameterRegisterOffset	458,11684
#define BusLogic_DataInRegisterOffset	459,11752
#define BusLogic_InterruptRegisterOffset	460,11811
#define BusLogic_GeometryRegisterOffset	461,11872
typedef union BusLogic_ControlRegisterBusLogic_ControlRegister468,12001
BusLogic_ControlRegister_T;BusLogic_ControlRegister_T479,12295
typedef union BusLogic_StatusRegisterBusLogic_StatusRegister486,12389
BusLogic_StatusRegister_T;BusLogic_StatusRegister_T500,12857
typedef union BusLogic_InterruptRegisterBusLogic_InterruptRegister507,12953
BusLogic_InterruptRegister_T;BusLogic_InterruptRegister_T519,13331
typedef union BusLogic_GeometryRegisterBusLogic_GeometryRegister526,13429
BusLogic_GeometryRegister_T;BusLogic_GeometryRegister_T536,13765
BusLogic_OperationCode_T;BusLogic_OperationCode_T590,15767
typedef struct BusLogic_BoardIDBusLogic_BoardID597,15849
BusLogic_BoardID_T;BusLogic_BoardID_T604,16086
typedef unsigned char BusLogic_InstalledDevices8_T[BusLogic_InstalledDevices8_T614,16380
typedef unsigned short BusLogic_InstalledDevices_T;BusLogic_InstalledDevices_T624,16746
typedef struct BusLogic_ConfigurationBusLogic_Configuration631,16859
BusLogic_Configuration_T;BusLogic_Configuration_T648,17573
typedef struct BusLogic_SynchronousValueBusLogic_SynchronousValue655,17664
BusLogic_SynchronousValue_T;BusLogic_SynchronousValue_T661,17844
  BusLogic_SynchronousValues8_T[BusLogic_SynchronousValues8_T664,17910
  BusLogic_SynchronousValues_T[BusLogic_SynchronousValues_T667,17983
typedef struct BusLogic_SetupInformationBusLogic_SetupInformation669,18043
BusLogic_SetupInformation_T;BusLogic_SetupInformation_T692,19172
typedef struct BusLogic_ExtendedMailboxRequestBusLogic_ExtendedMailboxRequest699,19270
__attribute__ __attribute__704,19428
typedef unsigned char BusLogic_FirmwareVersion3rdDigit_T;BusLogic_FirmwareVersion3rdDigit_T712,19557
typedef unsigned char BusLogic_FirmwareVersionLetter_T;BusLogic_FirmwareVersionLetter_T719,19681
typedef enum BusLogic_ISACompatibleIOPortBusLogic_ISACompatibleIOPort728,19920
__attribute__ ((packed)packed739,20181
typedef struct BusLogic_PCIHostAdapterInformationBusLogic_PCIHostAdapterInformation742,20239
BusLogic_PCIHostAdapterInformation_T;BusLogic_PCIHostAdapterInformation_T755,20776
typedef unsigned char BusLogic_HostAdapterModelNumber_T[BusLogic_HostAdapterModelNumber_T762,20882
typedef unsigned char BusLogic_SynchronousPeriod_T[BusLogic_SynchronousPeriod_T771,21128
typedef struct BusLogic_ExtendedSetupInformationBusLogic_ExtendedSetupInformation778,21281
__attribute__ __attribute__798,22209
typedef enum BusLogic_RoundRobinModeRequestBusLogic_RoundRobinModeRequest806,22338
__attribute__ ((packed)packed811,22465
#define BusLogic_BIOS_BaseOffset	819,22589
#define BusLogic_AutoSCSI_BaseOffset	820,22625
typedef struct BusLogic_FetchHostAdapterLocalRAMRequestBusLogic_FetchHostAdapterLocalRAMRequest822,22667
BusLogic_FetchHostAdapterLocalRAMRequest_T;BusLogic_FetchHostAdapterLocalRAMRequest_T827,22814
typedef struct BusLogic_AutoSCSIDataBusLogic_AutoSCSIData834,22923
__attribute__ __attribute__905,26664
typedef struct BusLogic_AutoSCSIByte45BusLogic_AutoSCSIByte45913,26788
BusLogic_AutoSCSIByte45_T;BusLogic_AutoSCSIByte45_T918,26930
#define BusLogic_BIOS_DriveMapOffset	925,27033
typedef struct BusLogic_BIOSDriveMapByteBusLogic_BIOSDriveMapByte927,27075
BusLogic_BIOSDriveMapByte_T;BusLogic_BIOSDriveMapByte_T934,27325
typedef BusLogic_ISACompatibleIOPort_T BusLogic_ModifyIOAddressRequest_T;BusLogic_ModifyIOAddressRequest_T944,27642
typedef enum BusLogic_SetCCBFormatRequestBusLogic_SetCCBFormatRequest952,27865
__attribute__ ((packed)packed957,27985
typedef unsigned char BusLogic_RequestedReplyLength_T;BusLogic_RequestedReplyLength_T967,28247
__attribute__ ((packed)packed980,28491
__attribute__ ((packed)packed999,29047
__attribute__ ((packed)packed1016,29428
BusLogic_DataDirection_T;BusLogic_DataDirection_T1031,29687
__attribute__ ((packed)packed1067,31004
__attribute__ ((packed)packed1081,31234
BusLogic_QueueTag_T;BusLogic_QueueTag_T1096,31475
#define BusLogic_CDB_MaxLength	1103,31555
typedef unsigned char SCSI_CDB_T[SCSI_CDB_T1105,31592
typedef struct BusLogic_ScatterGatherSegmentBusLogic_ScatterGatherSegment1113,31787
BusLogic_ScatterGatherSegment_T;BusLogic_ScatterGatherSegment_T1118,31955
__attribute__ ((packed)packed1132,32170
typedef struct BusLogic_CCBBusLogic_CCB1155,33430
BusLogic_CCB_T;BusLogic_CCB_T1206,35434
typedef struct BusLogic_OutgoingMailboxBusLogic_OutgoingMailbox1213,35512
BusLogic_OutgoingMailbox_T;BusLogic_OutgoingMailbox_T1219,35695
typedef struct BusLogic_IncomingMailboxBusLogic_IncomingMailbox1226,35785
BusLogic_IncomingMailbox_T;BusLogic_IncomingMailbox_T1234,36100
typedef struct BusLogic_DriverOptionsBusLogic_DriverOptions1241,36185
BusLogic_DriverOptions_T;BusLogic_DriverOptions_T1252,36563
typedef struct BusLogic_TargetFlagsBusLogic_TargetFlags1259,36648
BusLogic_TargetFlags_T;BusLogic_TargetFlags_T1269,36919
#define BusLogic_SizeBuckets	1276,37007
typedef unsigned int BusLogic_CommandSizeBuckets_T[BusLogic_CommandSizeBuckets_T1278,37042
typedef struct BusLogic_TargetStatisticsBusLogic_TargetStatistics1280,37117
BusLogic_TargetStatistics_T;BusLogic_TargetStatistics_T1300,37874
#define FlashPoint_BadCardHandle	1307,37959
typedef unsigned int FlashPoint_CardHandle_T;FlashPoint_CardHandle_T1309,38005
typedef struct FlashPoint_InfoFlashPoint_Info1317,38168
FlashPoint_Info_T;FlashPoint_Info_T1350,39725
typedef struct BusLogic_HostAdapterBusLogic_HostAdapter1357,39806
BusLogic_HostAdapter_T;BusLogic_HostAdapter_T1453,43562
typedef struct BIOS_DiskParametersBIOS_DiskParameters1460,43646
BIOS_DiskParameters_T;BIOS_DiskParameters_T1466,43730
typedef struct SCSI_InquirySCSI_Inquiry1473,43821
SCSI_Inquiry_T;SCSI_Inquiry_T1501,45091
void BusLogic_AcquireHostAdapterLock(1509,45207
void BusLogic_ReleaseHostAdapterLock(1520,45428
void BusLogic_AcquireHostAdapterLockIH(1532,45700
void BusLogic_ReleaseHostAdapterLockIH(1545,46032
void BusLogic_SCSIBusReset(1558,46344
void BusLogic_InterruptReset(1568,46638
void BusLogic_SoftReset(1578,46936
void BusLogic_HardReset(1588,47224
unsigned char BusLogic_ReadStatusRegister(1598,47512
void BusLogic_WriteCommandParameterRegister(1604,47681
unsigned char BusLogic_ReadDataInRegister(1613,47911
unsigned char BusLogic_ReadInterruptRegister(1619,48080
unsigned char BusLogic_ReadGeometryRegister(1626,48265
void BusLogic_StartMailboxCommand(1640,48609
static inline void BusLogic_Delay(1651,48832
static inline BusLogic_BusAddress_T Virtual_to_Bus(1667,49188
static inline void *Bus_to_Virtual(1672,49328
BusLogic_BusAddress_T Virtual_to_32Bit_Virtual(1685,49632
static inline void BusLogic_IncrementErrorCounter(1696,49897
static inline void BusLogic_IncrementByteCounter(1706,50105
static inline void BusLogic_IncrementSizeBucket(1723,50459
#define FlashPoint_FirmwareVersion	1749,51066
#define FlashPoint_NormalInterrupt	1756,51187
#define FlashPoint_InternalError	1757,51228
#define FlashPoint_ExternalBusReset	1758,51267
static void BusLogic_AnnounceDriver(1779,51833

drivers/scsi/advansys.h,216
#define _ADVANSYS_H25,744
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION28,840
extern struct proc_dir_entry proc_scsi_advansys;52,1685
#define ADVANSYS 63,2026
#define ADVANSYS 101,4065
#define ADVANSYS 146,6401

drivers/scsi/aic7xxx_reg.h,12680
#define	SCSISEQ 5,65
#define		TEMODE 6,96
#define		ENSELO 7,127
#define		ENSELI 8,158
#define		ENRSELI 9,189
#define		ENAUTOATNO 10,220
#define		ENAUTOATNI 11,251
#define		ENAUTOATNP 12,282
#define		SCSIRSTO 13,313
#define	SXFRCTL0 15,345
#define		DFON 16,376
#define		DFPEXP 17,407
#define		FAST20 18,438
#define		CLRSTCNT 19,469
#define		SPIOEN 20,500
#define		SCAMEN 21,531
#define		CLRCHN 22,562
#define	SXFRCTL1 24,594
#define		BITBUCKET 25,625
#define		SWRAPEN 26,656
#define		ENSPCHK 27,687
#define		STIMESEL 28,718
#define		ENSTIMER 29,749
#define		ACTNEGEN 30,780
#define		STPWEN 31,811
#define	SCSISIGO 33,843
#define		CDO 34,874
#define		IOO 35,905
#define		MSGO 36,936
#define		ATNO 37,967
#define		SELO 38,998
#define		BSYO 39,1029
#define		REQO 40,1060
#define		ACKO 41,1091
#define	SCSISIGI 43,1123
#define		ATNI 44,1154
#define		SELI 45,1185
#define		BSYI 46,1216
#define		REQI 47,1247
#define		ACKI 48,1278
#define	SCSIRATE 50,1310
#define		WIDEXFER 51,1341
#define		SXFR_ULTRA2 52,1372
#define		SXFR 53,1403
#define		SOFS 54,1434
#define	SCSIID 56,1466
#define	SCSIOFFSET 57,1497
#define		SOFS_ULTRA2 58,1528
#define	SCSIDATL 60,1560
#define	SCSIDATH 62,1592
#define	STCNT 64,1624
#define	CLRSINT0 66,1656
#define		CLRSELDO 67,1687
#define		CLRSELDI 68,1718
#define		CLRSELINGO 69,1749
#define		CLRSWRAP 70,1780
#define		CLRSPIORDY 71,1811
#define	SSTAT0 73,1843
#define		TARGET 74,1874
#define		SELDO 75,1905
#define		SELDI 76,1936
#define		SELINGO 77,1967
#define		IOERR 78,1998
#define		SWRAP 79,2029
#define		SDONE 80,2060
#define		SPIORDY 81,2091
#define		DMADONE 82,2122
#define	CLRSINT1 84,2154
#define		CLRSELTIMEO 85,2185
#define		CLRATNO 86,2216
#define		CLRSCSIRSTI 87,2247
#define		CLRBUSFREE 88,2278
#define		CLRSCSIPERR 89,2309
#define		CLRPHASECHG 90,2340
#define		CLRREQINIT 91,2371
#define	SSTAT1 93,2403
#define		SELTO 94,2434
#define		ATNTARG 95,2465
#define		SCSIRSTI 96,2496
#define		PHASEMIS 97,2527
#define		BUSFREE 98,2558
#define		SCSIPERR 99,2589
#define		PHASECHG 100,2620
#define		REQINIT 101,2651
#define	SSTAT2 103,2683
#define		OVERRUN 104,2714
#define		SFCNT 105,2745
#define		EXP_ACTIVE 106,2776
#define	SSTAT3 108,2808
#define		SCSICNT 109,2839
#define		OFFCNT 110,2870
#define	SCSIID_ULTRA2 112,2902
#define		OID 113,2933
#define	SIMODE0 115,2965
#define		ENSELDO 116,2996
#define		ENSELDI 117,3027
#define		ENSELINGO 118,3058
#define		ENIOERR 119,3089
#define		ENSWRAP 120,3120
#define		ENSDONE 121,3151
#define		ENSPIORDY 122,3182
#define		ENDMADONE 123,3213
#define	SIMODE1 125,3245
#define		ENSELTIMO 126,3276
#define		ENATNTARG 127,3307
#define		ENSCSIRST 128,3338
#define		ENPHASEMIS 129,3369
#define		ENBUSFREE 130,3400
#define		ENSCSIPERR 131,3431
#define		ENPHASECHG 132,3462
#define		ENREQINIT 133,3493
#define	SCSIBUSL 135,3525
#define	SCSIBUSH 137,3557
#define	SHADDR 139,3589
#define	SELTIMER 141,3621
#define		STAGE6 142,3652
#define		STAGE5 143,3683
#define		STAGE4 144,3714
#define		STAGE3 145,3745
#define		STAGE2 146,3776
#define		STAGE1 147,3807
#define	SELID 149,3839
#define		SELID_MASK 150,3870
#define		ONEBIT 151,3901
#define	SPIOCAP 153,3933
#define		SOFT1 154,3964
#define		SOFT0 155,3995
#define		SOFTCMDEN 156,4026
#define		HAS_BRDCTL 157,4057
#define		SEEPROM 158,4088
#define		EEPROM 159,4119
#define		ROM 160,4150
#define		SSPIOCPS 161,4181
#define	BRDCTL 163,4213
#define		BRDDAT7 164,4244
#define		BRDDAT6 165,4275
#define		BRDDAT5 166,4306
#define		BRDDAT4 167,4337
#define		BRDSTB 168,4368
#define		BRDCS 169,4399
#define		BRDDAT3 170,4430
#define		BRDDAT2 171,4461
#define		BRDRW 172,4492
#define		BRDRW_ULTRA2 173,4523
#define		BRDCTL1 174,4554
#define		BRDSTB_ULTRA2 175,4585
#define		BRDCTL0 176,4616
#define	SEECTL 178,4648
#define		EXTARBACK 179,4679
#define		EXTARBREQ 180,4710
#define		SEEMS 181,4741
#define		SEERDY 182,4772
#define		SEECS 183,4803
#define		SEECK 184,4834
#define		SEEDO 185,4865
#define		SEEDI 186,4896
#define	SBLKCTL 188,4928
#define		DIAGLEDEN 189,4959
#define		DIAGLEDON 190,4990
#define		AUTOFLUSHDIS 191,5021
#define		ENAB40 192,5052
#define		ENAB20 193,5083
#define		SELWIDE 194,5114
#define		XCVR 195,5145
#define	SRAM_BASE 197,5177
#define	TARG_SCSIRATE 199,5209
#define	ULTRA_ENB 201,5241
#define	DISC_DSB 203,5273
#define	MSG_OUT 205,5305
#define	DMAPARAMS 207,5337
#define		PRELOADEN 208,5368
#define		WIDEODD 209,5399
#define		SCSIEN 210,5430
#define		SDMAENACK 211,5461
#define		SDMAEN 212,5492
#define		HDMAEN 213,5523
#define		HDMAENACK 214,5554
#define		DIRECTION 215,5585
#define		FIFOFLUSH 216,5616
#define		FIFORESET 217,5647
#define	SEQ_FLAGS 219,5679
#define		IDENTIFY_SEEN 220,5710
#define		SCBPTR_VALID 221,5741
#define		DPHASE 222,5772
#define		AMTARGET 223,5803
#define		WIDE_BUS 224,5834
#define		TWIN_BUS 225,5865
#define	SAVED_TCL 227,5897
#define	SG_COUNT 229,5929
#define	SG_NEXT 231,5961
#define	LASTPHASE 233,5993
#define		P_MESGIN 234,6024
#define		PHASE_MASK 235,6055
#define		P_STATUS 236,6086
#define		P_MESGOUT 237,6117
#define		P_COMMAND 238,6148
#define		CDI 239,6179
#define		IOI 240,6210
#define		P_DATAIN 241,6241
#define		MSGI 242,6272
#define		P_BUSFREE 243,6303
#define		P_DATAOUT 244,6334
#define	WAITING_SCBH 246,6366
#define	DISCONNECTED_SCBH	248,6398
#define	FREE_SCBH 250,6431
#define	HSCB_ADDR 252,6463
#define	SCBID_ADDR 254,6495
#define	TMODE_CMDADDR 256,6527
#define	KERNEL_QINPOS 258,6559
#define	QINPOS 260,6591
#define	QOUTPOS 262,6623
#define	TMODE_CMDADDR_NEXT	264,6655
#define	ARG_1 266,6689
#define	RETURN_1 267,6720
#define		SEND_MSG 268,6751
#define		SEND_SENSE 269,6782
#define		SEND_REJ 270,6813
#define		MSGOUT_PHASEMIS 271,6844
#define	ARG_2 273,6876
#define	RETURN_2 274,6907
#define	LAST_MSG 276,6939
#define	PREFETCH_CNT 278,6971
#define	SCSICONF 280,7003
#define		TERM_ENB 281,7034
#define		RESET_SCSI 282,7065
#define		HWSCSIID 283,7096
#define		HSCSIID 284,7127
#define	HOSTCONF 286,7159
#define	HA_274_BIOSCTRL 288,7191
#define		BIOSMODE 289,7222
#define		BIOSDISABLED 290,7253
#define		CHANNEL_B_PRIMARY	291,7284
#define	SEQCTL 293,7317
#define		PERRORDIS 294,7348
#define		PAUSEDIS 295,7379
#define		FAILDIS 296,7410
#define		FASTMODE 297,7441
#define		BRKADRINTEN 298,7472
#define		STEP 299,7503
#define		SEQRESET 300,7534
#define		LOADRAM 301,7565
#define	SEQRAM 303,7597
#define	SEQADDR0 305,7629
#define	SEQADDR1 307,7661
#define		SEQADDR1_MASK 308,7692
#define	ACCUM 310,7724
#define	SINDEX 312,7756
#define	DINDEX 314,7788
#define	ALLONES 316,7820
#define	ALLZEROS 318,7852
#define	NONE 320,7884
#define	FLAGS 322,7916
#define		ZERO 323,7947
#define		CARRY 324,7978
#define	SINDIR 326,8010
#define	DINDIR 328,8042
#define	FUNCTION1 330,8074
#define	STACK 332,8106
#define	TARG_OFFSET 334,8138
#define	BCTL 336,8170
#define		ACE 337,8201
#define		ENABLE 338,8232
#define	DSCOMMAND0 340,8264
#define		INTSCBRAMSEL 341,8295
#define		RAMPS 342,8326
#define		USCBSIZE32 343,8357
#define		CIOPARCKEN 344,8388
#define	DSCOMMAND 346,8420
#define		CACHETHEN 347,8451
#define		DPARCKEN 348,8482
#define		MPARCKEN 349,8513
#define		EXTREQLCK 350,8544
#define	BUSTIME 352,8576
#define		BOFF 353,8607
#define		BON 354,8638
#define	BUSSPD 356,8670
#define		DFTHRSH 357,8701
#define		STBOFF 358,8732
#define		STBON 359,8763
#define	DSPCISTATUS 361,8795
#define		DFTHRSH_100 362,8826
#define	HCNTRL 364,8858
#define		POWRDN 365,8889
#define		SWINT 366,8920
#define		IRQMS 367,8951
#define		PAUSE 368,8982
#define		INTEN 369,9013
#define		CHIPRST 370,9044
#define		CHIPRSTACK 371,9075
#define	HADDR 373,9107
#define	HCNT 375,9139
#define	SCBPTR 377,9171
#define	INTSTAT 379,9203
#define		SEQINT_MASK 380,9234
#define		DATA_OVERRUN 381,9265
#define		MSGIN_PHASEMIS 382,9296
#define		TRACEPOINT2 383,9327
#define		TRACEPOINT 384,9358
#define		AWAITING_MSG 385,9389
#define		RESIDUAL 386,9420
#define		BAD_STATUS 387,9451
#define		REJECT_MSG 388,9482
#define		ABORT_REQUESTED 389,9513
#define		EXTENDED_MSG 390,9544
#define		NO_MATCH 391,9575
#define		NO_IDENT 392,9606
#define		SEND_REJECT 393,9637
#define		INT_PEND 394,9668
#define		BRKADRINT 395,9699
#define		SCSIINT 396,9730
#define		CMDCMPLT 397,9761
#define		BAD_PHASE 398,9792
#define		SEQINT 399,9823
#define	CLRINT 401,9855
#define		CLRPARERR 402,9886
#define		CLRBRKADRINT 403,9917
#define		CLRSCSIINT 404,9948
#define		CLRCMDINT 405,9979
#define		CLRSEQINT 406,10010
#define	ERROR 408,10042
#define		CIOPARERR 409,10073
#define		PCIERRSTAT 410,10104
#define		MPARERR 411,10135
#define		DPARERR 412,10166
#define		SQPARERR 413,10197
#define		ILLOPCODE 414,10228
#define		ILLSADDR 415,10259
#define		ILLHADDR 416,10290
#define	DFCNTRL 418,10322
#define	DFSTATUS 420,10354
#define		PRELOAD_AVAIL 421,10385
#define		DWORDEMP 422,10416
#define		MREQPEND 423,10447
#define		HDONE 424,10478
#define		DFTHRESH 425,10509
#define		FIFOFULL 426,10540
#define		FIFOEMP 427,10571
#define	DFDAT 429,10603
#define	SCBCNT 431,10635
#define		SCBAUTO 432,10666
#define		SCBCNT_MASK 433,10697
#define	QINFIFO 435,10729
#define	QINCNT 437,10761
#define	QOUTFIFO 439,10793
#define	QOUTCNT 441,10825
#define	SFUNCT 443,10857
#define	SCB_CONTROL 445,10889
#define		MK_MESSAGE 446,10920
#define		DISCENB 447,10951
#define		TAG_ENB 448,10982
#define		DISCONNECTED 449,11013
#define		SCB_TAG_TYPE 450,11044
#define	SCB_BASE 452,11076
#define	SCB_TCL 454,11108
#define		TID 455,11139
#define		SELBUSB 456,11170
#define		LID 457,11201
#define	SCB_TARGET_STATUS	459,11233
#define	SCB_SGCOUNT 461,11266
#define	SCB_SGPTR 463,11298
#define	SCB_RESID_SGCNT 465,11330
#define	SCB_RESID_DCNT 467,11362
#define	SCB_DATAPTR 469,11394
#define	SCB_DATACNT 471,11426
#define	SCB_CMDPTR 473,11458
#define	SCB_CMDLEN 475,11490
#define	SCB_TAG 477,11522
#define	SCB_NEXT 479,11554
#define	SCB_PREV 481,11586
#define	SCB_BUSYTARGETS 483,11618
#define	SEECTL_2840 485,11650
#define		CS_2840 486,11681
#define		CK_2840 487,11712
#define		DO_2840 488,11743
#define	STATUS_2840 490,11775
#define		EEPROM_TF 491,11806
#define		BIOS_SEL 492,11837
#define		ADSEL 493,11868
#define		DI_2840 494,11899
#define	CCHADDR 496,11931
#define	CCHCNT 498,11963
#define	CCSGRAM 500,11995
#define	CCSGADDR 502,12027
#define	CCSGCTL 504,12059
#define		CCSGDONE 505,12090
#define		CCSGEN 506,12121
#define		FLAG 507,12152
#define		CCSGRESET 508,12183
#define	CCSCBRAM 510,12215
#define	CCSCBADDR 512,12247
#define	CCSCBCTL 514,12279
#define		CCSCBDONE 515,12310
#define		ARRDONE 516,12341
#define		CCARREN 517,12372
#define		CCSCBEN 518,12403
#define		CCSCBDIR 519,12434
#define		CCSCBRESET 520,12465
#define	CCSCBCNT 522,12497
#define	CCSCBPTR 524,12529
#define	HNSCB_QOFF 526,12561
#define	SNSCB_QOFF 528,12593
#define	SDSCB_QOFF 530,12625
#define	QOFF_CTLSTA 532,12657
#define		SCB_AVAIL 533,12688
#define		SNSCB_ROLLOVER 534,12719
#define		SDSCB_ROLLOVER 535,12750
#define		SCB_QSIZE 536,12781
#define		SCB_QSIZE_256 537,12812
#define	DFF_THRSH 539,12844
#define		WR_DFTHRSH 540,12875
#define		WR_DFTHRSH_MAX 541,12906
#define		WR_DFTHRSH_90 542,12937
#define		WR_DFTHRSH_85 543,12968
#define		WR_DFTHRSH_75 544,12999
#define		WR_DFTHRSH_63 545,13030
#define		WR_DFTHRSH_50 546,13061
#define		WR_DFTHRSH_25 547,13092
#define		RD_DFTHRSH_MAX 548,13123
#define		RD_DFTHRSH 549,13154
#define		RD_DFTHRSH_90 550,13185
#define		RD_DFTHRSH_85 551,13216
#define		RD_DFTHRSH_75 552,13247
#define		RD_DFTHRSH_63 553,13278
#define		RD_DFTHRSH_50 554,13309
#define		RD_DFTHRSH_25 555,13340
#define		WR_DFTHRSH_MIN 556,13371
#define		RD_DFTHRSH_MIN 557,13402
#define	SG_CACHEPTR 559,13434
#define		SG_USER_DATA 560,13465
#define		LAST_SEG 561,13496
#define		LAST_SEG_DONE 562,13527
#define	CMD_GROUP2_BYTE_DELTA	565,13560
#define	MAX_OFFSET_8BIT	566,13595
#define	BUS_16_BIT	567,13624
#define	QINFIFO_OFFSET	568,13648
#define	CMD_GROUP5_BYTE_DELTA	569,13676
#define	CMD_GROUP_CODE_SHIFT	570,13711
#define	MAX_OFFSET_ULTRA2	571,13745
#define	MAX_OFFSET_16BIT	572,13776
#define	BUS_8_BIT	573,13806
#define	QOUTFIFO_OFFSET	574,13829
#define	UNTAGGEDSCB_OFFSET	575,13858
#define	CCSGRAM_MAXSEGS	576,13890
#define	SCB_LIST_NULL	577,13919
#define	SG_SIZEOF	578,13946
#define	CMD_GROUP4_BYTE_DELTA	579,13969
#define	CMD_GROUP0_BYTE_DELTA	580,14004
#define	HOST_MSG	581,14039
#define	BUS_32_BIT	582,14061
#define	CCSGADDR_MAX	583,14085
#define	TMODE_NUMCMDS	587,14151

drivers/scsi/ppa.h,1135
#define _PPA_H11,249
#define   PPA_VERSION 13,265
#define   PPA_AUTODETECT 79,2479
#define   PPA_NIBBLE 80,2550
#define   PPA_PS2 81,2621
#define   PPA_EPP_8 82,2684
#define   PPA_EPP_16 83,2755
#define   PPA_EPP_32 84,2826
#define   PPA_UNKNOWN 85,2897
static char *PPA_MODE_STRING[87,2969
int ppa_sg 102,3206
#define PPA_CAN_QUEUE 105,3286
#define PPA_BURST_SIZE	106,3343
#define PPA_SELECT_TMO 107,3392
#define PPA_SPIN_TMO 108,3457
#define PPA_DEBUG	109,3515
#define IN_EPP_MODE(IN_EPP_MODE110,3557
#define CONNECT_EPP_MAYBE 113,3662
#define CONNECT_NORMAL 114,3690
#define r_dtr(r_dtr116,3717
#define r_str(r_str117,3765
#define r_ctr(r_ctr118,3815
#define r_epp(r_epp119,3865
#define r_fifo(r_fifo120,3915
#define r_ecr(r_ecr121,3969
#define w_dtr(w_dtr123,4024
#define w_str(w_str124,4061
#define w_epp(w_epp125,4100
#define w_fifo(w_fifo126,4139
#define w_ecr(w_ecr127,4182
#define w_ctr(w_ctr130,4259
#define w_ctr(w_ctr132,4306
struct proc_dir_entry proc_scsi_ppa 141,4540
extern struct proc_dir_entry proc_scsi_ppa;144,4643
#define ppa_release 145,4687
#define PPA 157,5047

drivers/scsi/wd7000.c,4553
#define ANY2SCSI_INLINE	168,6859
struct proc_dir_entry proc_scsi_wd7000 175,7023
#define OGMB_CNT	191,7407
#define ICMB_CNT	192,7427
#define MAX_SCBS 201,7781
} Mailbox;Mailbox210,7975
typedef struct adapter adapter216,8120
} Adapter;Adapter231,8937
static const long wd7000_biosaddr[236,8994
#define NUM_ADDRS 241,9188
static const unsigned short wd7000_iobase[243,9246
#define NUM_IOPORTS 250,9568
static const short wd7000_irq[252,9636
#define NUM_IRQS 253,9709
static const short wd7000_dma[255,9762
#define NUM_DMAS 256,9809
#define IRQ_MIN 261,9891
#define IRQ_MAX 262,9911
#define IRQS 263,9932
static struct Scsi_Host *wd7000_host[271,10239
#define BUS_ON 273,10284
#define BUS_OFF 274,10343
} Config;Config288,10978
static Config configs[293,11030
#define NUM_CONFIGS 300,11356
typedef struct signature signature307,11609
} Signature;Signature311,11809
static const Signature signatures[313,11823
#define NUM_SIGNATURES 317,11927
#define ASC_STAT 324,12103
#define ASC_COMMAND 325,12158
#define ASC_INTR_STAT 326,12213
#define ASC_INTR_ACK 327,12268
#define ASC_CONTROL 328,12323
#define INT_IM	333,12405
#define CMD_RDY	334,12463
#define CMD_REJ	335,12522
#define ASC_INIT 336,12581
#define ASC_STATMASK 337,12647
#define NO_OP 348,13113
#define INITIALIZATION 349,13186
#define DISABLE_UNS_INTR 350,13259
#define ENABLE_UNS_INTR 351,13332
#define INTR_ON_FREE_OGMB 352,13405
#define SOFT_RESET 353,13478
#define HARD_RESET_ACK 354,13551
#define START_OGMB 355,13624
#define SCAN_OGMBS 356,13700
typedef struct initCmd initCmd361,13855
} InitCmd;InitCmd370,14404
#define MB_INTR 388,14909
#define IMB_INTR 389,14974
#define MB_MASK 390,15039
#define INT_EN 395,15133
#define DMA_EN 396,15181
#define SCSI_RES 397,15229
#define ASC_RES 398,15277
typedef struct sgb sgb428,16655
} Sgb;Sgb431,16749
typedef struct scb scb433,16757
} Scb;Scb452,18023
#define ICB_OP_MASK 465,18561
#define ICB_OP_OPEN_RBUF 466,18638
#define ICB_OP_RECV_CMD 467,18715
#define ICB_OP_RECV_DATA 468,18792
#define ICB_OP_RECV_SDATA 469,18869
#define ICB_OP_SEND_DATA 470,18946
#define ICB_OP_SEND_STAT 471,19023
#define ICB_OP_READ_INIT 473,19147
#define ICB_OP_READ_ID 474,19224
#define ICB_OP_SET_UMASK 475,19301
#define ICB_OP_GET_UMASK 476,19378
#define ICB_OP_GET_REVISION 477,19455
#define ICB_OP_DIAGNOSTICS 478,19532
#define ICB_OP_SET_EPARMS 479,19609
#define ICB_OP_GET_EPARMS 480,19686
typedef struct icbRecvCmd icbRecvCmd482,19764
} IcbRecvCmd;IcbRecvCmd491,20191
typedef struct icbSendStat icbSendStat493,20206
} IcbSendStat;IcbSendStat501,20641
typedef struct icbRevLvl icbRevLvl503,20657
} IcbRevLvl;IcbRevLvl511,21113
typedef struct icbUnsMask icbUnsMask513,21127
} IcbUnsMask;IcbUnsMask522,21507
typedef struct icbDiag icbDiag524,21522
} IcbDiag;IcbDiag533,21959
#define ICB_DIAG_POWERUP 535,21971
#define ICB_DIAG_WALKING 536,22032
#define ICB_DIAG_DMA 537,22093
#define ICB_DIAG_FULL 538,22154
typedef struct icbParms icbParms540,22216
} IcbParms;IcbParms550,22694
typedef struct icbAny icbAny552,22707
} IcbAny;IcbAny558,22976
typedef union icb icb560,22987
} Icb;Icb569,23439
static Scb scbs[578,23613
static Scb *scbfree 579,23640
static int freescbs 580,23692
static void setup_error 585,23801
void wd7000_setup 613,24717
} i_u;i_u728,27845
static inline void any2scsi 731,27854
static inline int scsi2int 739,28009
#define any2scsi(any2scsi755,28309
#define scsi2int(scsi2int760,28479
static inline void wd7000_enable_intr 766,28622
static inline void wd7000_enable_dma 773,28765
#define WAITnexttimeout 787,29077
static inline short WAIT 789,29122
static inline void delay 805,29507
static inline int command_out 813,29653
static inline Scb *alloc_scbs 844,30620
static inline void free_scb 898,31971
static inline void init_scbs 914,32211
static int mail_out 935,32593
int make_code 1002,34205
static void wd7000_scsi_done 1050,35698
#define wd7000_intr_ack(wd7000_intr_ack1060,35864
void wd7000_intr_handle 1062,35935
void do_wd7000_intr_handle 1157,38843
int wd7000_queuecommand 1167,39092
int wd7000_command 1222,40581
int wd7000_diagnostics 1233,40787
int wd7000_init 1267,41727
void wd7000_revision 1354,43998
#define SPRINTF(SPRINTF1375,44589
int wd7000_set_info 1377,44679
int wd7000_proc_info 1399,45084
int wd7000_detect 1530,48492
int wd7000_abort 1714,52905
int wd7000_reset 1732,53264
int wd7000_biosparam 1741,53418
Scsi_Host_Template driver_template 1793,54716

drivers/scsi/esp.c,6832
#define DEBUG_ESP42,935
#define ESPLOG(ESPLOG63,1548
#define ESPLOG(ESPLOG65,1586
#define ESPHME(ESPHME69,1659
#define ESPHME(ESPHME71,1697
#define ESPDATA(ESPDATA75,1753
#define ESPDATA(ESPDATA77,1792
#define ESPQUEUE(ESPQUEUE81,1850
#define ESPQUEUE(ESPQUEUE83,1890
#define ESPDISC(ESPDISC87,1954
#define ESPDISC(ESPDISC89,1993
#define ESPSTAT(ESPSTAT93,2052
#define ESPSTAT(ESPSTAT95,2091
#define ESPPHASE(ESPPHASE99,2150
#define ESPPHASE(ESPPHASE101,2190
#define ESPBUS(ESPBUS105,2251
#define ESPBUS(ESPBUS107,2289
#define ESPIRQ(ESPIRQ111,2345
#define ESPIRQ(ESPIRQ113,2383
#define ESPSDTR(ESPSDTR117,2435
#define ESPSDTR(ESPSDTR119,2474
#define ESPMISC(ESPMISC123,2531
#define ESPMISC(ESPMISC125,2570
	not_issued 130,2639
	not_issued    = 0x00,130,2639
#define in_slct_mask 133,2752
	in_slct_norm 134,2781
	in_slct_norm  = 0x10,134,2781
	in_slct_stop 135,2849
	in_slct_stop  = 0x11,135,2849
	in_slct_msg 136,2917
	in_slct_msg   = 0x12,136,2917
	in_slct_tag 137,2985
	in_slct_tag   = 0x13,137,2985
	in_slct_sneg 138,3053
	in_slct_sneg  = 0x14,138,3053
#define in_phases_mask 141,3158
	in_datain 142,3187
	in_datain     = 0x20,142,3187
	in_dataout 143,3255
	in_dataout    = 0x21,143,3255
	in_data_done 144,3323
	in_data_done  = 0x22,144,3323
	in_msgin 145,3391
	in_msgin      = 0x23,145,3391
	in_msgincont 146,3459
	in_msgincont  = 0x24,146,3459
	in_msgindone 147,3527
	in_msgindone  = 0x25,147,3527
	in_msgout 148,3595
	in_msgout     = 0x26,148,3595
	in_msgoutdone 149,3663
	in_msgoutdone = 0x27,149,3663
	in_cmdbegin 150,3731
	in_cmdbegin   = 0x28,150,3731
	in_cmdend 151,3799
	in_cmdend     = 0x29,151,3799
	in_status 152,3867
	in_status     = 0x2a,152,3867
	in_freeing 153,3935
	in_freeing    = 0x2b,153,3935
	in_the_dark 154,4003
	in_the_dark   = 0x2c,154,4003
#define in_spec_mask 157,4129
	in_abortone 158,4158
	in_abortone   = 0x80,158,4158
	in_abortall 159,4226
	in_abortall   = 0x81,159,4226
	in_resetdev 160,4294
	in_resetdev   = 0x82,160,4294
	in_resetbus 161,4362
	in_resetbus   = 0x83,161,4362
	in_tgterror 162,4430
	in_tgterror   = 0x84,162,4430
/*0*/	do_never,167,4561
/*1*/	do_phase_determine,169,4578
/*2*/	do_reset_bus,170,4604
/*3*/	do_reset_complete,171,4624
/*4*/	do_work_bus,172,4649
/*5*/	do_intr_end173,4668
struct proc_dir_entry proc_scsi_esp 176,4690
static struct Sparc_ESP *espchain;182,4863
static int esps_running 183,4898
struct esp_cmdstrings esp_cmdstrings192,5149
} esp_cmd_strings[195,5203
#define NUM_ESP_COMMANDS 230,6268
static inline void esp_print_cmd(233,6410
static inline void esp_print_statreg(250,6796
static inline void esp_print_ireg(277,7499
static inline void esp_print_seqreg(300,8034
static char *phase_string(312,8417
static inline void esp_advance_phase(369,9480
#define esp_advance_phase(esp_advance_phase376,9661
extern inline void esp_cmd(382,9817
#define esp_cmd(esp_cmd390,10032
static inline void append_SC(415,11021
static inline void prepend_SC(429,11318
static inline Scsi_Cmnd *remove_first_SC(435,11451
static inline Scsi_Cmnd *remove_SC(444,11608
static void esp_reset_dma(462,12057
static void esp_reset_esp(552,14364
static void esp_bootup_reset(654,17033
__initfunc(674,17506
#define ESP_IS_MY_DVMA(ESP_IS_MY_DVMA714,18513
__initfunc(1025,27601
__initfunc(1047,28120
const char *esp_info(1104,29615
struct info_strinfo_str1128,30126
static void copy_mem_info(1136,30199
static int copy_info(1156,30617
static int esp_host_info(1170,30839
int esp_proc_info(1270,33258
static void esp_get_dmabufs(1291,33613
static void esp_release_dmabufs(1312,34382
static void esp_restore_pointers(1324,34699
static void esp_save_pointers(1334,35008
static inline void esp_check_cmd(1364,36078
static inline void build_sync_nego_msg(1381,36355
static inline void build_wide_nego_msg(1392,36704
static void esp_exec_cmd(1413,37070
int esp_queue(1670,45521
int esp_command(1710,46561
static void esp_dump_cmd(1719,46767
static void esp_dump_state(1728,46982
int esp_abort(1779,48362
static int esp_finish_reset(1858,50741
static int esp_do_resetbus(1893,51561
int esp_reset(1907,51949
static void esp_done(1916,52190
#define sreg_datainp(sreg_datainp1959,53832
#define sreg_dataoutp(sreg_dataoutp1960,53903
static void hme_fifo_read(1965,54085
static inline void hme_fifo_push(2007,55460
static inline int skipahead1(2021,55834
static inline int skipahead2(2056,56917
static inline void dma_setup(2095,58100
static inline void dma_drain(2117,58600
static inline void dma_invalidate(2134,58933
static inline void dma_flashclear(2167,59723
static inline int dma_can_transfer(2175,59912
#define esp_setcount(esp_setcount2195,60338
#define esp_getcount(esp_getcount2203,60554
#define fcount(fcount2207,60663
#define fnzero(fnzero2212,60813
#define esp_maybe_nop(esp_maybe_nop2220,61091
#define sreg_to_dataphase(sreg_to_dataphase2224,61207
static inline int esp100_sync_hwbug(2235,61747
static inline int esp100_reconnect_hwbug(2261,62670
static inline int reconnect_target(2277,63017
static inline int reconnect_lun(2307,63758
static inline void esp_connect(2336,64520
static inline void esp_reconnect(2358,65220
static int esp_do_msgin(2370,65560
static inline int esp_bytes_sent(2387,66164
static inline void advance_sg(2398,66460
static int esp_do_data(2424,67695
static int esp_do_data_finale(2473,69196
static int esp_should_clear_sync(2656,75214
static int esp_do_freebus(2688,75972
static int esp_bad_reconnect(2759,78349
static int esp_do_reconnect(2791,79186
static int esp_do_status(2842,80492
static int esp_enter_status(2963,84199
static int esp_disconnect_amidst_phases(2986,84833
static int esp_enter_msgout(3032,86019
static int esp_enter_msgin(3040,86244
static int esp_enter_cmd(3048,86464
static int esp_enter_badphase(3056,86684
typedef int (*espfunc_t)espfunc_t3065,86936
static espfunc_t phase_vector[3069,87046
static int esp_do_phase_determine(3083,87459
static int esp_select_complete(3093,87817
static int esp_do_msgincont(3352,96594
static int check_singlebyte_msg(3378,97427
static int target_with_ants_in_pants(3457,99727
static void sync_report(3476,100187
static int check_multibyte_msg(3515,101224
static int esp_do_msgindone(3685,106175
static int esp_do_cmdbegin(3768,108711
static int esp_do_cmddone(3800,109572
static int esp_do_msgout(3816,110051
static int esp_do_msgoutdone(3895,112240
static int esp_bus_unexpected(3956,113892
static espfunc_t bus_vector[3964,114139
static int esp_work_bus(3984,114553
static espfunc_t isvc_vector[4005,115120
static void esp_handle(4014,115288
static void esp_intr(4202,120997
static void esp_intr(4233,121653
static void esp_intr_4d(4260,122215
static void esp_intr(4280,122648

drivers/scsi/atari_scsi.h,2914
#define ATARI_SCSI_H16,404
#define atari_scsi_release 30,862
#define ATARI_TT_CAN_QUEUE	43,1318
#define ATARI_TT_CMD_PER_LUN	44,1349
#define ATARI_TT_SG_TABLESIZE	45,1381
#define ATARI_FALCON_CAN_QUEUE	47,1420
#define ATARI_FALCON_CMD_PER_LUN	48,1454
#define ATARI_FALCON_SG_TABLESIZE	49,1489
#define	DEFAULT_USE_TAGGED_QUEUING	51,1532
#define ATARI_SCSI 56,1614
#define	NCR5380_implementation_fields	74,2291
#define NCR5380_read(NCR5380_read76,2341
#define NCR5380_write(NCR5380_write77,2397
#define NCR5380_intr 79,2467
#define NCR5380_queue_command 80,2504
#define NCR5380_abort 81,2559
#define NCR5380_proc_info 82,2598
#define NCR5380_dma_read_setup(NCR5380_dma_read_setup83,2645
#define NCR5380_dma_write_setup(NCR5380_dma_write_setup84,2723
#define NCR5380_dma_residual(NCR5380_dma_residual85,2802
#define	NCR5380_dma_xfer_len(NCR5380_dma_xfer_len86,2869
#define ARB_PRINTK(ARB_PRINTK118,3756
#define ARB_PRINTK(ARB_PRINTK121,3837
#define ASEN_PRINTK(ASEN_PRINTK124,3910
#define ASEN_PRINTK(ASEN_PRINTK127,3992
#define DMA_PRINTK(DMA_PRINTK130,4060
#define DMA_PRINTK(DMA_PRINTK133,4141
#define HSH_PRINTK(HSH_PRINTK136,4214
#define HSH_PRINTK(HSH_PRINTK139,4295
#define INF_PRINTK(INF_PRINTK142,4370
#define INF_PRINTK(INF_PRINTK145,4451
#define INI_PRINTK(INI_PRINTK148,4519
#define INI_PRINTK(INI_PRINTK151,4600
#define INT_PRINTK(INT_PRINTK154,4668
#define INT_PRINTK(INT_PRINTK157,4749
#define LNK_PRINTK(LNK_PRINTK160,4819
#define LNK_PRINTK(LNK_PRINTK163,4900
#define MAIN_PRINTK(MAIN_PRINTK166,4968
#define MAIN_PRINTK(MAIN_PRINTK169,5050
#define NDAT_PRINTK(NDAT_PRINTK172,5125
#define NDAT_PRINTK(NDAT_PRINTK175,5207
#define NWR_PRINTK(NWR_PRINTK178,5280
#define NWR_PRINTK(NWR_PRINTK181,5361
#define PIO_PRINTK(PIO_PRINTK184,5428
#define PIO_PRINTK(PIO_PRINTK187,5509
#define PDMA_PRINTK(PDMA_PRINTK190,5583
#define PDMA_PRINTK(PDMA_PRINTK193,5665
#define QU_PRINTK(QU_PRINTK196,5736
#define QU_PRINTK(QU_PRINTK199,5816
#define RSL_PRINTK(RSL_PRINTK202,5890
#define RSL_PRINTK(RSL_PRINTK205,5971
#define SEL_PRINTK(SEL_PRINTK208,6044
#define SEL_PRINTK(SEL_PRINTK211,6125
#define USL_PRINTK(USL_PRINTK214,6195
#define USL_PRINTK(USL_PRINTK217,6276
#define LBS_PRINTK(LBS_PRINTK220,6354
#define LBS_PRINTK(LBS_PRINTK223,6435
#define RSS_PRINTK(RSS_PRINTK226,6513
#define RSS_PRINTK(RSS_PRINTK229,6594
#define EXT_PRINTK(EXT_PRINTK232,6666
#define EXT_PRINTK(EXT_PRINTK235,6747
#define ABRT_PRINTK(ABRT_PRINTK238,6816
#define ABRT_PRINTK(ABRT_PRINTK241,6898
#define TAG_PRINTK(TAG_PRINTK244,6967
#define TAG_PRINTK(TAG_PRINTK247,7048
#define MER_PRINTK(MER_PRINTK250,7119
#define MER_PRINTK(MER_PRINTK253,7200
#define NCR_PRINT(NCR_PRINT258,7304
#define NCR_PRINT_PHASE(NCR_PRINT_PHASE261,7388
#define NCR_PRINT_STATUS(NCR_PRINT_STATUS264,7484
#define NDEBUG_ANY	267,7582

drivers/scsi/esp.h,5687
#define _SPARC_ESP_H8,201
struct Sparc_ESP_regs Sparc_ESP_regs27,675
#define esp_busid 38,1376
#define esp_timeo 41,1585
#define esp_stp 44,1794
#define esp_soff 47,2003
#define esp_status2 52,2341
#define esp_uid 65,3080
#define fas_rlo 66,3159
#define fas_rhi 69,3366
enum esp_rev esp_rev73,3491
  esp100 74,3506
  esp100     = 0x00,74,3506
  esp100a 75,3557
  esp100a    = 0x01,75,3557
  esp236 76,3595
  esp236     = 0x02,76,3595
  fas236 77,3616
  fas236     = 0x03,77,3616
  fas100a 78,3637
  fas100a    = 0x04,78,3637
  fast 79,3658
  fast       = 0x05,79,3658
  fashme 80,3679
  fashme     = 0x06,80,3679
  espunknown 81,3700
  espunknown = 0x0781,3700
struct Sparc_ESP Sparc_ESP85,3771
#define SYNC_DEFP_SLOW 166,8054
#define SYNC_DEFP_FAST 167,8108
#define ESP_CONFIG1_ID 207,9791
#define ESP_CONFIG1_CHTEST 208,9859
#define ESP_CONFIG1_PENABLE 209,9934
#define ESP_CONFIG1_PARTEST 210,10008
#define ESP_CONFIG1_SRRDISAB 211,10087
#define ESP_CONFIG1_SLCABLE 212,10167
#define ESP_CONFIG2_DMAPARITY 215,10322
#define ESP_CONFIG2_REGPARITY 216,10403
#define ESP_CONFIG2_BADPARITY 217,10484
#define ESP_CONFIG2_SCSI2ENAB 218,10562
#define ESP_CONFIG2_HI 219,10651
#define ESP_CONFIG2_HMEFENAB 220,10729
#define ESP_CONFIG2_BCM 221,10802
#define ESP_CONFIG2_DISPINT 222,10880
#define ESP_CONFIG2_FENAB 223,10957
#define ESP_CONFIG2_SPL 224,11047
#define ESP_CONFIG2_MKDONE 225,11137
#define ESP_CONFIG2_HME32 226,11208
#define ESP_CONFIG2_MAGIC 227,11277
#define ESP_CONFIG3_FCLOCK 230,11430
#define ESP_CONFIG3_TEM 231,11518
#define ESP_CONFIG3_FAST 232,11606
#define ESP_CONFIG3_ADMA 233,11694
#define ESP_CONFIG3_TENB 234,11782
#define ESP_CONFIG3_SRB 235,11870
#define ESP_CONFIG3_TMS 236,11958
#define ESP_CONFIG3_FCLK 237,12046
#define ESP_CONFIG3_IDMSG 238,12134
#define ESP_CONFIG3_FSCSI 239,12222
#define ESP_CONFIG3_GTM 240,12310
#define ESP_CONFIG3_IDBIT3 241,12398
#define ESP_CONFIG3_TBMS 242,12486
#define ESP_CONFIG3_EWIDE 243,12574
#define ESP_CONFIG3_IMS 244,12662
#define ESP_CONFIG3_OBPUSH 245,12750
#define ESP_CMD_NULL 253,13174
#define ESP_CMD_FLUSH 254,13251
#define ESP_CMD_RC 255,13315
#define ESP_CMD_RS 256,13379
#define ESP_CMD_TI 261,13575
#define ESP_CMD_ICCSEQ 262,13649
#define ESP_CMD_MOK 263,13734
#define ESP_CMD_TPAD 264,13806
#define ESP_CMD_SATN 265,13872
#define ESP_CMD_RATN 266,13933
#define ESP_CMD_SMSG 271,14164
#define ESP_CMD_SSTAT 272,14230
#define ESP_CMD_SDATA 273,14295
#define ESP_CMD_DSEQ 274,14358
#define ESP_CMD_TSEQ 275,14432
#define ESP_CMD_TCCSEQ 276,14504
#define ESP_CMD_DCNCT 277,14583
#define ESP_CMD_RMSG 278,14647
#define ESP_CMD_RCMD 279,14716
#define ESP_CMD_RDATA 280,14785
#define ESP_CMD_RCSEQ 281,14851
#define ESP_CMD_RSEL 287,15120
#define ESP_CMD_SEL 288,15182
#define ESP_CMD_SELA 289,15250
#define ESP_CMD_SELAS 290,15316
#define ESP_CMD_ESEL 291,15389
#define ESP_CMD_DSEL 292,15459
#define ESP_CMD_SA3 293,15531
#define ESP_CMD_RSEL3 294,15598
#define ESP_CMD_DMA 297,15711
#define ESP_STAT_PIO 301,15810
#define ESP_STAT_PCD 302,15876
#define ESP_STAT_PMSG 303,15942
#define ESP_STAT_PMASK 304,16009
#define ESP_STAT_TDONE 305,16081
#define ESP_STAT_TCNT 306,16153
#define ESP_STAT_PERR 307,16231
#define ESP_STAT_SPAM 308,16297
#define ESP_STAT_INTR 312,16482
#define ESP_STAT2_SCHBIT 315,16580
#define ESP_STAT2_FFLAGS 316,16653
#define ESP_STAT2_XCNT 317,16725
#define ESP_STAT2_CREGA 318,16798
#define ESP_STAT2_WIDE 319,16869
#define ESP_STAT2_F1BYTE 320,16944
#define ESP_STAT2_FMSB 321,17018
#define ESP_STAT2_FEMPTY 322,17097
#define ESP_DOP 329,17420
#define ESP_DIP 330,17496
#define ESP_CMDP 331,17572
#define ESP_STATP 332,17648
#define ESP_MOP 333,17724
#define ESP_MIP 334,17802
#define ESP_INTR_S 337,17919
#define ESP_INTR_SATN 338,17987
#define ESP_INTR_RSEL 339,18053
#define ESP_INTR_FDONE 340,18117
#define ESP_INTR_BSERV 341,18184
#define ESP_INTR_DC 342,18249
#define ESP_INTR_IC 343,18313
#define ESP_INTR_SR 344,18388
#define ESP_SRESET_IRQ(ESP_SRESET_IRQ347,18496
#define ESP_ILLCMD_IRQ(ESP_ILLCMD_IRQ348,18557
#define ESP_SELECT_WITH_ATN_IRQ(ESP_SELECT_WITH_ATN_IRQ349,18618
#define ESP_SELECT_WITHOUT_ATN_IRQ(ESP_SELECT_WITHOUT_ATN_IRQ350,18693
#define ESP_SELECTION_IRQ(ESP_SELECTION_IRQ351,18765
#define ESP_RESELECTION_IRQ(ESP_RESELECTION_IRQ353,18882
#define ESP_STEP_VBITS 356,19001
#define ESP_STEP_ASEL 357,19065
#define ESP_STEP_SID 358,19144
#define ESP_STEP_NCMD 359,19215
#define ESP_STEP_PPC 360,19293
#define ESP_STEP_FINI4 363,19489
#define ESP_STEP_FINI5 366,19629
#define ESP_STEP_FINI6 367,19664
#define ESP_STEP_FINI7 368,19699
#define ESP_TEST_TARG 371,19775
#define ESP_TEST_INI 372,19845
#define ESP_TEST_TS 373,19918
#define ESP_UID_F100A 376,20060
#define ESP_UID_F236 377,20126
#define ESP_UID_REV 378,20192
#define ESP_UID_FAM 379,20258
#define ESP_FF_FBYTES 383,20430
#define ESP_FF_ONOTZERO 384,20501
#define ESP_FF_SSTEP 385,20583
#define ESP_CCF_F0 388,20705
#define ESP_CCF_NEVER 389,20775
#define ESP_CCF_F2 390,20851
#define ESP_CCF_F3 391,20910
#define ESP_CCF_F4 392,20980
#define ESP_CCF_F5 393,21050
#define ESP_CCF_F6 394,21120
#define ESP_CCF_F7 395,21190
#define ESP_BUSID_RESELID 398,21279
#define ESP_BUSID_CTR32BIT 399,21314
#define ESP_BUS_TIMEOUT 401,21350
#define ESP_TIMEO_CONST 402,21420
#define ESP_NEG_DEFP(ESP_NEG_DEFP403,21455
#define ESP_MHZ_TO_CYCLE(ESP_MHZ_TO_CYCLE405,21554
#define ESP_TICK(ESP_TICK406,21623
extern struct proc_dir_entry proc_scsi_esp;417,22065
#define SCSI_SPARC_ESP 419,22110
#define for_each_esp(for_each_esp438,22708

drivers/scsi/a2091.c,473
struct proc_dir_entry proc_scsi_a2091 24,444
#define DMA(DMA29,558
#define HDATA(HDATA30,609
static struct Scsi_Host *first_instance 32,676
static Scsi_Host_Template *a2091_template;33,724
static void a2091_intr 35,768
static void do_a2091_intr 57,1313
static int dma_setup 66,1546
static void dma_stop 142,3561
static int num_a2091 201,5142
__initfunc(203,5169
#define HOSTS_C243,6333
Scsi_Host_Template driver_template 247,6370
int a2091_release(253,6454

drivers/scsi/a2091.h,648
#define NULL 21,523
#define CMD_PER_LUN 25,566
#define CAN_QUEUE 29,614
extern struct proc_dir_entry proc_scsi_a2091;34,659
#define A2091_SCSI 36,706
#define A2091_XFER_MASK 54,1417
} a2091_scsiregs;a2091_scsiregs75,2178
#define DAWR_A2091	77,2197
#define CNTR_TCEN	80,2239
#define CNTR_PREST	81,2265
#define CNTR_PDMD	82,2292
#define CNTR_INTEN	83,2318
#define CNTR_DDIR	84,2345
#define ISTR_INTX	87,2389
#define ISTR_INT_F	88,2415
#define ISTR_INTS	89,2442
#define ISTR_E_INT	90,2468
#define ISTR_INT_P	91,2495
#define ISTR_UE_INT	92,2522
#define ISTR_OE_INT	93,2550
#define ISTR_FF_FLG	94,2578
#define ISTR_FE_FLG	95,2606

drivers/scsi/a3000.c,388
struct proc_dir_entry proc_scsi_a3000 23,419
#define DMA(DMA28,533
#define HDATA(HDATA29,584
static struct Scsi_Host *a3000_host 31,651
static void a3000_intr 33,696
static void do_a3000_intr 51,1140
static int dma_setup 59,1372
static void dma_stop 123,3025
__initfunc(178,4603
#define HOSTS_C206,5383
Scsi_Host_Template driver_template 210,5420
int a3000_release(216,5504

drivers/scsi/dtc.c,1623
#define AUTOSENSE2,1
#define PSEUDO_DMA3,19
#define DONT_USE_INTR4,38
#define UNSAFE	5,60
#define xNDEBUG 6,129
#define DMA_WORKS_RIGHT8,219
#define rtrc(rtrc69,1759
#define rtrc(rtrc71,1832
#define AUTOPROBE_IRQ83,2032
#define DTC_PUBLIC_RELEASE 92,2190
#define DTCDEBUG_INIT	95,2245
#define DTCDEBUG_TRANSFER 96,2271
#define DTC_CONTROL_REG	106,2404
#define D_CR_ACCESS	107,2444
#define CSR_DIR_READ	108,2509
#define CSR_RESET 110,2576
#define CSR_5380_REG 111,2639
#define CSR_TRANS_DIR 112,2719
#define CSR_SCSI_BUFF_INTR 113,2792
#define CSR_5380_INTR 114,2870
#define CSR_SHARED_INTR 115,2942
#define CSR_HOST_BUF_NOT_RDY 116,3009
#define CSR_SCSI_BUF_RDY 117,3080
#define CSR_GATED_5380_IRQ 118,3147
#define CSR_INT_BASE 119,3215
#define DTC_BLK_CNT	122,3275
#define D_CR_ACCESS 126,3357
#define DTC_SWITCH_REG	128,3437
#define DTC_RESUME_XFER	129,3492
#define DTC_5380_OFFSET	132,3590
#define DTC_DATA_BUF	135,3715
struct proc_dir_entry proc_scsi_dtc 138,3771
static struct override override144,3886
} overrides147,3948
[] __initdata 149,3976
[4] __initdata 151,4008
#define NO_OVERRIDES 154,4095
static struct base base156,4163
} bases[159,4224
} bases[] __initdata 159,4224
#define NO_BASES 161,4306
static const struct signature signature163,4364
} signatures[166,4434
#define NO_SIGNATURES 168,4501
__initfunc(180,4814
__initfunc(212,5644
int dtc_biosparam(322,9206
static int dtc_maxi 346,9747
static int dtc_wmaxi 347,9772
static inline int NCR5380_pread 349,9799
static inline int NCR5380_pwrite 401,11373
Scsi_Host_Template driver_template 445,12696

drivers/scsi/dtc.h,873
#define DTC3280_H29,510
#define NULL 41,881
#define CMD_PER_LUN 45,924
#define CAN_QUEUE 49,972
#define DTC3x80 60,1253
#define NCR5380_implementation_fields 77,1661
#define NCR5380_local_declare(NCR5380_local_declare80,1733
#define NCR5380_setup(NCR5380_setup83,1799
#define DTC_address(DTC_address86,1876
#define dbNCR5380_read(dbNCR5380_read88,1933
#define dbNCR5380_write(dbNCR5380_write93,2179
#define NCR5380_read(NCR5380_read100,2473
#define NCR5380_write(NCR5380_write101,2525
#define NCR5380_read(NCR5380_read103,2599
#define xNCR5380_read(xNCR5380_read104,2651
#define NCR5380_write(NCR5380_write108,2817
#define NCR5380_intr 114,3031
#define do_NCR5380_intr 115,3061
#define NCR5380_queue_command 116,3097
#define NCR5380_abort 117,3145
#define NCR5380_reset 118,3177
#define NCR5380_proc_info 119,3209
#define DTC_IRQS 124,3293

drivers/scsi/a3000.h,676
#define NULL 21,518
#define CMD_PER_LUN 25,561
#define CAN_QUEUE 29,609
extern struct proc_dir_entry proc_scsi_a3000;34,654
#define A3000_SCSI 36,701
#define A3000_XFER_MASK 55,1421
} a3000_scsiregs;a3000_scsiregs78,2255
#define DAWR_A3000	80,2274
#define CNTR_TCEN	83,2316
#define CNTR_PREST	84,2342
#define CNTR_PDMD	85,2369
#define CNTR_INTEN	86,2395
#define CNTR_DDIR	87,2422
#define CNTR_IO_DX	88,2448
#define ISTR_INTX	91,2493
#define ISTR_INT_F	92,2519
#define ISTR_INTS	93,2546
#define ISTR_E_INT	94,2572
#define ISTR_INT_P	95,2599
#define ISTR_UE_INT	96,2626
#define ISTR_OE_INT	97,2654
#define ISTR_FF_FLG	98,2682
#define ISTR_FE_FLG	99,2710

drivers/scsi/atari_NCR5380.c,1919
#define LIST(LIST78,2715
#define REMOVE(REMOVE81,2845
#define LIST(LIST86,3027
#define REMOVE(REMOVE87,3045
static struct Scsi_Host *first_instance 256,10169
static Scsi_Host_Template *the_template 257,10217
#define	SETUP_HOSTDATA(SETUP_HOSTDATA260,10296
#define	HOSTDATA(HOSTDATA263,10415
#define	NEXT(NEXT265,10481
#define	NEXTADDR(NEXTADDR266,10537
#define	HOSTNO	268,10600
#define	H_NO(H_NO269,10634
#define TAG_NONE 310,12610
} TAG_ALLOC;TAG_ALLOC321,12883
static TAG_ALLOC TagAlloc[323,12897
__initfunc(326,12959
static int is_lun_busy(356,13834
static void cmd_get_tag(380,14521
static void cmd_free_tag(412,15485
static void free_all_tags(435,16130
static void merge_contiguous_buffers(467,16887
static __inline__ void initialize_SCp(505,17929
signals[536,18775
static void NCR5380_print(559,19763
} phases[593,20787
static void NCR5380_print_phase(606,21183
__inline__ void NCR5380_print(624,21657
__inline__ void NCR5380_print_phase(625,21720
static volatile int main_running 645,22367
static struct tq_struct NCR5380_tqueue 646,22405
static __inline__ void queue_main(653,22592
static inline void NCR5380_all_init 668,23038
__initfunc(687,23433
static void NCR5380_print_status 715,24030
#define SPRINTF(SPRINTF751,24950
int NCR5380_proc_info 760,25222
#define check_offset(check_offset769,25494
lprint_Scsi_Cmnd 823,27076
__initfunc(851,27864
int NCR5380_queue_command 919,29761
static void NCR5380_main 1048,33739
static void NCR5380_dma_complete(1212,38875
static void NCR5380_intr 1285,40916
static void collect_stats(1363,43413
static int NCR5380_select 1419,45286
static int NCR5380_transfer_pio(1747,55340
static int do_abort 1864,58764
static int NCR5380_transfer_dma(1928,60682
static void NCR5380_information_transfer 2009,63045
static void NCR5380_reselect 2513,78938
int NCR5380_abort 2666,83092
static int NCR5380_reset(2873,89454

drivers/scsi/qlogicisp.c,7918
#define RELOAD_FIRMWARE	41,1313
#define USE_NVRAM_DEFAULTS	47,1529
#define DEBUG_ISP1020	51,1593
#define DEBUG_ISP1020_INT	52,1618
#define DEBUG_ISP1020_SETUP	53,1646
#define TRACE_ISP	54,1676
#define DEFAULT_LOOP_COUNT	56,1698
#define LinuxVersionCode(LinuxVersionCode58,1734
# define TRACE_BUF_LEN	66,1917
} trace;76,2072
#define TRACE(TRACE78,2082
# define TRACE(TRACE93,2467
#define ENTER(ENTER97,2517
#define LEAVE(LEAVE98,2574
#define DEBUG(DEBUG99,2630
#define ENTER(ENTER101,2655
#define LEAVE(LEAVE102,2672
#define DEBUG(DEBUG103,2689
#define ENTER_INTR(ENTER_INTR107,2757
#define LEAVE_INTR(LEAVE_INTR108,2819
#define DEBUG_INTR(DEBUG_INTR109,2880
#define ENTER_INTR(ENTER_INTR111,2910
#define LEAVE_INTR(LEAVE_INTR112,2932
#define DEBUG_INTR(DEBUG_INTR113,2954
#define ISP1020_REV_ID	116,3009
#define MAX_TARGETS	118,3035
#define MAX_LUNS	119,3058
#define HOST_HCCR	122,3125
#define PCI_ID_LOW	125,3214
#define PCI_ID_HIGH	126,3254
#define ISP_CFG0	127,3295
#define ISP_CFG1	128,3349
#define PCI_INTF_CTL	129,3403
#define PCI_INTF_STS	130,3457
#define PCI_SEMAPHORE	131,3510
#define PCI_NVRAM	132,3557
#define MBOX0	135,3631
#define MBOX1	136,3667
#define MBOX2	137,3703
#define MBOX3	138,3739
#define MBOX4	139,3775
#define MBOX5	140,3811
#define MBOX_COMMAND_COMPLETE	143,3892
#define INVALID_COMMAND	144,3930
#define HOST_INTERFACE_ERROR	145,3963
#define TEST_FAILED	146,4000
#define COMMAND_ERROR	147,4029
#define COMMAND_PARAM_ERROR	148,4060
#define ASYNC_SCSI_BUS_RESET	151,4128
#define SYSTEM_ERROR	152,4165
#define REQUEST_TRANSFER_ERROR	153,4195
#define RESPONSE_TRANSFER_ERROR	154,4234
#define REQUEST_QUEUE_WAKEUP	155,4274
#define EXECUTION_TIMEOUT_RESET	156,4311
struct Entry_header Entry_header158,4352
#define ENTRY_COMMAND	166,4484
#define ENTRY_CONTINUATION	167,4509
#define ENTRY_STATUS	168,4538
#define ENTRY_MARKER	169,4562
#define ENTRY_EXTENDED_COMMAND	170,4586
#define EFLAG_CONTINUATION	173,4656
#define EFLAG_BUSY	174,4685
#define EFLAG_BAD_HEADER	175,4707
#define EFLAG_BAD_PAYLOAD	176,4734
struct dataseg dataseg178,4763
struct Command_Entry Command_Entry183,4819
#define CFLAG_NODISC	198,5136
#define CFLAG_HEAD_TAG	199,5163
#define CFLAG_ORDERED_TAG	200,5192
#define CFLAG_SIMPLE_TAG	201,5223
#define CFLAG_TAR_RTN	202,5253
#define CFLAG_READ	203,5281
#define CFLAG_WRITE	204,5306
struct Ext_Command_Entry Ext_Command_Entry206,5333
struct Continuation_Entry Continuation_Entry219,5580
struct Marker_Entry Marker_Entry225,5686
#define SYNC_DEVICE	236,5897
#define SYNC_TARGET	237,5919
#define SYNC_ALL	238,5941
struct Status_Entry Status_Entry240,5961
#define CS_COMPLETE	255,6293
#define CS_INCOMPLETE	256,6322
#define CS_DMA_ERROR	257,6353
#define CS_TRANSPORT_ERROR	258,6383
#define CS_RESET_OCCURRED	259,6418
#define CS_ABORTED	260,6452
#define CS_TIMEOUT	261,6480
#define CS_DATA_OVERRUN	262,6508
#define CS_COMMAND_OVERRUN	263,6541
#define CS_STATUS_OVERRUN	264,6576
#define CS_BAD_MESSAGE	265,6610
#define CS_NO_MESSAGE_OUT	266,6642
#define CS_EXT_ID_FAILED	267,6676
#define CS_IDE_MSG_FAILED	268,6709
#define CS_ABORT_MSG_FAILED	269,6743
#define CS_REJECT_MSG_FAILED	270,6779
#define CS_NOP_MSG_FAILED	271,6816
#define CS_PARITY_ERROR_MSG_FAILED	272,6850
#define CS_DEVICE_RESET_MSG_FAILED	273,6892
#define CS_ID_MSG_FAILED	274,6934
#define CS_UNEXP_BUS_FREE	275,6967
#define CS_DATA_UNDERRUN	276,7001
#define SF_GOT_BUS	279,7077
#define SF_GOT_TARGET	280,7105
#define SF_SENT_CDB	281,7136
#define SF_TRANSFERRED_DATA	282,7165
#define SF_GOT_STATUS	283,7201
#define SF_GOT_SENSE	284,7232
#define STF_DISCONNECT	287,7306
#define STF_SYNCHRONOUS	288,7338
#define STF_PARITY_ERROR	289,7371
#define STF_BUS_RESET	290,7404
#define STF_DEVICE_RESET	291,7435
#define STF_ABORTED	292,7468
#define STF_TIMEOUT	293,7497
#define STF_NEGOTIATION	294,7526
#define ISP_RESET	297,7593
#define ISP_EN_INT	298,7620
#define ISP_EN_RISC	299,7648
#define HCCR_NOP	302,7706
#define HCCR_RESET	303,7732
#define HCCR_PAUSE	304,7760
#define HCCR_RELEASE	305,7788
#define HCCR_SINGLE_STEP	306,7818
#define HCCR_SET_HOST_INTR	307,7851
#define HCCR_CLEAR_HOST_INTR	308,7886
#define HCCR_CLEAR_RISC_INTR	309,7923
#define HCCR_BP_ENABLE	310,7960
#define HCCR_BIOS_DISABLE	311,7992
#define HCCR_TEST_MODE	312,8026
#define RISC_BUSY	314,8059
#define MBOX_NO_OP	317,8110
#define MBOX_LOAD_RAM	318,8138
#define MBOX_EXEC_FIRMWARE	319,8169
#define MBOX_DUMP_RAM	320,8204
#define MBOX_WRITE_RAM_WORD	321,8235
#define MBOX_READ_RAM_WORD	322,8271
#define MBOX_MAILBOX_REG_TEST	323,8306
#define MBOX_VERIFY_CHECKSUM	324,8344
#define MBOX_ABOUT_FIRMWARE	325,8381
#define MBOX_CHECK_FIRMWARE	326,8417
#define MBOX_INIT_REQ_QUEUE	327,8453
#define MBOX_INIT_RES_QUEUE	328,8489
#define MBOX_EXECUTE_IOCB	329,8525
#define MBOX_WAKE_UP	330,8559
#define MBOX_STOP_FIRMWARE	331,8589
#define MBOX_ABORT	332,8624
#define MBOX_ABORT_DEVICE	333,8652
#define MBOX_ABORT_TARGET	334,8686
#define MBOX_BUS_RESET	335,8720
#define MBOX_STOP_QUEUE	336,8752
#define MBOX_START_QUEUE	337,8785
#define MBOX_SINGLE_STEP_QUEUE	338,8818
#define MBOX_ABORT_QUEUE	339,8857
#define MBOX_GET_DEV_QUEUE_STATUS	340,8890
#define MBOX_GET_FIRMWARE_STATUS	341,8931
#define MBOX_GET_INIT_SCSI_ID	342,8971
#define MBOX_GET_SELECT_TIMEOUT	343,9009
#define MBOX_GET_RETRY_COUNT	344,9049
#define MBOX_GET_TAG_AGE_LIMIT	345,9086
#define MBOX_GET_CLOCK_RATE	346,9125
#define MBOX_GET_ACT_NEG_STATE	347,9161
#define MBOX_GET_ASYNC_DATA_SETUP_TIME	348,9200
#define MBOX_GET_PCI_PARAMS	349,9246
#define MBOX_GET_TARGET_PARAMS	350,9282
#define MBOX_GET_DEV_QUEUE_PARAMS	351,9321
#define MBOX_SET_INIT_SCSI_ID	352,9362
#define MBOX_SET_SELECT_TIMEOUT	353,9400
#define MBOX_SET_RETRY_COUNT	354,9440
#define MBOX_SET_TAG_AGE_LIMIT	355,9477
#define MBOX_SET_CLOCK_RATE	356,9516
#define MBOX_SET_ACTIVE_NEG_STATE	357,9552
#define MBOX_SET_ASYNC_DATA_SETUP_TIME	358,9593
#define MBOX_SET_PCI_CONTROL_PARAMS	359,9639
#define MBOX_SET_TARGET_PARAMS	360,9682
#define MBOX_SET_DEV_QUEUE_PARAMS	361,9721
#define MBOX_RETURN_BIOS_BLOCK_ADDR	362,9762
#define MBOX_WRITE_FOUR_RAM_WORDS	363,9805
#define MBOX_EXEC_BIOS_IOCB	364,9846
#define PACKB(PACKB368,9911
static const u_char mbox_param[370,9949
#define MAX_MBOX_COMMAND	440,12469
struct host_param host_param442,12532
struct dev_param dev_param474,13258
#define RES_QUEUE_LEN	487,13556
#define QUEUE_ENTRY_LEN	488,13619
struct isp1020_hostdata isp1020_hostdata490,13648
#define QUEUE_DEPTH(QUEUE_DEPTH508,14214
#define REQ_QUEUE_DEPTH(REQ_QUEUE_DEPTH509,14267
#define RES_QUEUE_DEPTH(RES_QUEUE_DEPTH511,14365
static struct proc_dir_entry proc_scsi_isp1020 537,15382
static inline void isp1020_enable_irqs(543,15506
static inline void isp1020_disable_irqs(549,15636
int isp1020_detect(555,15748
int isp1020_release(625,17407
const char *isp1020_info(644,17728
int isp1020_queuecommand(669,18365
#define ASYNC_EVENT_INTERRUPT	806,21841
void do_isp1020_intr_handler(808,21877
void isp1020_intr_handler(817,22116
static int isp1020_return_status(899,24378
int isp1020_abort(987,26603
int isp1020_reset(1022,27331
int isp1020_biosparam(1054,27994
static int isp1020_reset_hardware(1077,28326
static int isp1020_init(1168,30763
static int isp1020_get_defaults(1239,32334
#define ISP1020_NVRAM_LEN	1341,36248
#define ISP1020_NVRAM_SIG1	1342,36279
#define ISP1020_NVRAM_SIG2	1343,36313
static int isp1020_verify_nvram(1345,36348
#define NVRAM_DELAY(NVRAM_DELAY1372,36857
u_short isp1020_read_nvram_word(1375,36917
static int isp1020_set_defaults(1405,37694
static int isp1020_load_parameters(1442,38845
static int isp1020_mbox_command(1631,43485
void isp1020_print_status_entry(1687,45204
void isp1020_print_scsi_cmd(1710,46050
Scsi_Host_Template driver_template 1726,46391

drivers/scsi/gvp11.c,569
struct proc_dir_entry proc_scsi_gvp11 24,444
#define DMA(DMA29,558
#define HDATA(HDATA30,609
static struct Scsi_Host *first_instance 32,676
static Scsi_Host_Template *gvp11_template;33,724
static void gvp11_intr 35,768
static void do_gvp11_intr 55,1262
static int gvp11_xfer_mask 64,1495
void gvp11_setup 66,1528
static int dma_setup 71,1604
static void dma_stop 162,4171
static int num_gvp11 210,5557
#define CHECK_WD33C93212,5584
__initfunc(214,5607
#define HOSTS_C387,10536
Scsi_Host_Template driver_template 391,10573
int gvp11_release(397,10657

drivers/scsi/wd33c93.h,5205
#define WD33C93_H24,814
#define PROC_INTERFACE 27,834
#define PROC_STATISTICS 29,936
#define SYNC_DEBUG 32,1022
#define DEBUGGING_ON 33,1094
#define DEBUG_DEFAULTS 34,1165
#define DB(DB38,1246
#define DB(DB40,1297
#define uchar 43,1321
#define WD_OWN_ID 47,1375
#define WD_CONTROL 48,1401
#define WD_TIMEOUT_PERIOD 49,1430
#define WD_CDB_1 50,1462
#define WD_CDB_2 51,1488
#define WD_CDB_3 52,1514
#define WD_CDB_4 53,1540
#define WD_CDB_5 54,1566
#define WD_CDB_6 55,1592
#define WD_CDB_7 56,1618
#define WD_CDB_8 57,1644
#define WD_CDB_9 58,1670
#define WD_CDB_10 59,1696
#define WD_CDB_11 60,1722
#define WD_CDB_12 61,1748
#define WD_TARGET_LUN 62,1774
#define WD_COMMAND_PHASE 63,1806
#define WD_SYNCHRONOUS_TRANSFER 64,1838
#define WD_TRANSFER_COUNT_MSB 65,1875
#define WD_TRANSFER_COUNT 66,1910
#define WD_TRANSFER_COUNT_LSB 67,1942
#define WD_DESTINATION_ID 68,1977
#define WD_SOURCE_ID 69,2009
#define WD_SCSI_STATUS 70,2038
#define WD_COMMAND 71,2070
#define WD_DATA 72,2099
#define WD_QUEUE_TAG 73,2125
#define WD_AUXILIARY_STATUS 74,2154
#define WD_CMD_RESET 77,2208
#define WD_CMD_ABORT 78,2237
#define WD_CMD_ASSERT_ATN 79,2266
#define WD_CMD_NEGATE_ACK 80,2298
#define WD_CMD_DISCONNECT 81,2330
#define WD_CMD_RESELECT 82,2362
#define WD_CMD_SEL_ATN 83,2394
#define WD_CMD_SEL 84,2426
#define WD_CMD_SEL_ATN_XFER 85,2455
#define WD_CMD_SEL_XFER 86,2490
#define WD_CMD_RESEL_RECEIVE 87,2522
#define WD_CMD_RESEL_SEND 88,2557
#define WD_CMD_WAIT_SEL_RECEIVE 89,2589
#define WD_CMD_TRANS_ADDR 90,2626
#define WD_CMD_TRANS_INFO 91,2658
#define WD_CMD_TRANSFER_PAD 92,2690
#define WD_CMD_SBT_MODE 93,2725
#define ASR_INT 96,2777
#define ASR_LCI 97,2808
#define ASR_BSY 98,2839
#define ASR_CIP 99,2870
#define ASR_PE 100,2901
#define ASR_DBR 101,2932
#define PHS_DATA_OUT 104,2986
#define PHS_DATA_IN 105,3015
#define PHS_COMMAND 106,3044
#define PHS_STATUS 107,3073
#define PHS_MESS_OUT 108,3102
#define PHS_MESS_IN 109,3131
#define CSR_RESET 114,3235
#define CSR_RESET_AF 115,3261
#define CSR_RESELECT 118,3332
#define CSR_SELECT 119,3361
#define CSR_SEL_XFER_DONE 120,3390
#define CSR_XFER_DONE 121,3422
#define CSR_MSGIN 124,3492
#define CSR_SDP 125,3518
#define CSR_SEL_ABORT 126,3547
#define CSR_RESEL_ABORT 127,3579
#define CSR_RESEL_ABORT_AM 128,3611
#define CSR_ABORT 129,3643
#define CSR_INVALID 132,3700
#define CSR_UNEXP_DISC 133,3729
#define CSR_TIMEOUT 134,3761
#define CSR_PARITY 135,3790
#define CSR_PARITY_ATN 136,3819
#define CSR_BAD_STATUS 137,3851
#define CSR_UNEXP 138,3883
#define CSR_RESEL 141,3946
#define CSR_RESEL_AM 142,3972
#define CSR_DISC 143,4001
#define CSR_SRV_REQ 144,4027
#define OWNID_EAF 147,4091
#define OWNID_EHP 148,4117
#define OWNID_RAF 149,4143
#define OWNID_FS_8 150,4169
#define OWNID_FS_12 151,4195
#define OWNID_FS_16 152,4221
#define WD33C93_FS_8_10 155,4311
#define WD33C93_FS_12_15 156,4347
#define WD33C93_FS_16_20 157,4384
#define CTRL_HSP 160,4448
#define CTRL_HA 161,4474
#define CTRL_IDI 162,4500
#define CTRL_EDI 163,4526
#define CTRL_HHP 164,4552
#define CTRL_POLLED 165,4578
#define CTRL_BURST 166,4604
#define CTRL_BUS 167,4630
#define CTRL_DMA 168,4656
#define TIMEOUT_PERIOD_VALUE 171,4716
#define STR_FSS 174,4810
#define DSTID_DPD 177,4870
#define DATA_OUT_DIR 178,4896
#define DATA_IN_DIR 179,4919
#define DSTID_SCC 180,4942
#define SRCID_MASK 183,4997
#define SRCID_SIV 184,5023
#define SRCID_DSP 185,5049
#define SRCID_ES 186,5075
#define SRCID_ER 187,5101
} wd33c93_regs;wd33c93_regs194,5299
typedef int (*dma_setup_t)dma_setup_t197,5317
typedef void (*dma_stop_t)dma_stop_t198,5376
#define ILLEGAL_STATUS_BYTE 202,5478
#define DEFAULT_SX_PER 204,5514
#define DEFAULT_SX_OFF 205,5570
#define OPTIMUM_SX_PER 207,5620
#define OPTIMUM_SX_OFF 208,5691
struct sx_period sx_period210,5751
#define BUF_CHIP_ALLOCED 217,5885
#define BUF_SCSI_ALLOCED 218,5912
struct WD33C93_hostdata WD33C93_hostdata220,5940
#define C_WD33C93 268,8582
#define C_WD33C93A 269,8608
#define C_WD33C93B 270,8634
#define C_UNKNOWN_CHIP 271,8660
#define S_UNCONNECTED 275,8724
#define S_SELECTING 276,8756
#define S_RUNNING_LEVEL2 277,8788
#define S_CONNECTED 278,8820
#define S_PRE_TMP_DISC 279,8852
#define S_PRE_CMP_DISC 280,8884
#define D_DMA_OFF 284,8950
#define D_DMA_RUNNING 285,8979
#define L2_NONE 290,9097
#define L2_SELECT 291,9173
#define L2_BASIC 292,9248
#define L2_DATA 293,9318
#define L2_MOST 294,9378
#define L2_RESELECT 295,9452
#define L2_ALL 296,9531
#define DIS_NEVER 300,9616
#define DIS_ADAPTIVE 301,9639
#define DIS_ALWAYS 302,9662
#define DB_TEST1 306,9720
#define DB_TEST2 307,9755
#define DB_QUEUE_COMMAND 308,9790
#define DB_EXECUTE 309,9825
#define DB_INTR 310,9860
#define DB_TRANSFER 311,9895
#define DB_MASK 312,9930
#define SS_UNSET 316,10007
#define SS_FIRST 317,10030
#define SS_WAITING 318,10053
#define SS_SET 319,10076
#define PR_VERSION 323,10134
#define PR_INFO 324,10160
#define PR_STATISTICS 325,10186
#define PR_CONNECTED 326,10213
#define PR_INPUTQ 327,10239
#define PR_DISCQ 328,10265
#define PR_TEST 329,10291
#define PR_STOP 330,10317

drivers/scsi/gvp11.h,379
#define NULL 22,557
#define CMD_PER_LUN 26,600
#define CAN_QUEUE 30,648
extern struct proc_dir_entry proc_scsi_gvp11;35,693
#define GVP11_SCSI 37,740
#define GVP11_XFER_MASK 55,1444
} gvp11_scsiregs;gvp11_scsiregs73,2154
#define GVP11_DMAC_BUSY	76,2192
#define GVP11_DMAC_INT_PENDING	77,2224
#define GVP11_DMAC_INT_ENABLE	78,2262
#define GVP11_DMAC_DIR_WRITE	79,2299

drivers/scsi/scsiiom.c,1208
dc390_StartSCSI(10,426
#define DMA_INT 172,5730
dc390_dma_intr 177,5815
DC390_Interrupt(237,7699
do_DC390_Interrupt(374,10979
dc390_DataOut_0(383,11245
dc390_DataIn_0(433,12779
dc390_Command_0(541,16089
dc390_Status_0(546,16162
dc390_MsgOut_0(559,16477
dc390_reprog 568,16692
dc390_printMsg 580,16979
#define DC390_ENABLE_MSGOUT 590,17152
dc390_MsgIn_reject 594,17257
dc390_EnableMsgOut_Abort 603,17481
dc390_MsgIn_QTag 611,17671
dc390_MsgIn_set_async 652,18483
dc390_MsgIn_set_sync 670,19066
dc390_MsgIn_complete 752,21800
dc390_MsgIn_0(768,22119
dc390_DataIO_Comm(839,24089
dc390_DataOutPhase(899,25931
dc390_DataInPhase(905,26060
dc390_CommandPhase(911,26180
dc390_StatusPhase(942,26968
dc390_MsgOutPhase(951,27207
dc390_MsgInPhase(1004,28608
dc390_Nop_0(1017,28931
dc390_Nop_1(1022,29000
dc390_SetXferRate(1028,29070
dc390_Disconnect(1063,29692
dc390_Reselect(1145,31520
dc390_remove_dev 1227,33905
dc390_tagq_blacklist 1261,34932
dc390_disc_tagq_set 1272,35110
dc390_add_dev 1303,35992
dc390_SRBdone(1313,36220
dc390_DoingSRB_Done(1591,45063
dc390_ResetSCSIBus(1629,45762
dc390_ScsiRstDetect(1645,46089
dc390_RequestSense(1674,46778
dc390_InvalidCmd(1712,47962

drivers/scsi/53c7xx.c,2929
#define FORCE_DSA_ALIGNMENT34,1460
#define BIG_ENDIAN264,9446
#define NO_IO_SPACE265,9465
#define BIG_ENDIAN272,9568
#define NO_IO_SPACE273,9587
#define VALID_IDS274,9607
#define BIG_ENDIAN281,9710
#define NO_IO_SPACE282,9729
#define VALID_IDS283,9749
#define inb(inb301,10088
#define inw(inw302,10114
#define inl(inl303,10140
#define outb(outb304,10166
#define outw(outw305,10192
#define outl(outl306,10218
static int track_events 345,12045
static struct Scsi_Host *first_host 346,12074
static Scsi_Host_Template *the_template 347,12151
#define DEBUG_SYNC_INTR 353,12285
int NCR53c7xx_script_len 355,12333
int NCR53c7xx_dsa_len 356,12377
int CmdPageStart 358,12478
static char *setup_strings[361,12563
#define MAX_SETUP_STRINGS 364,12623
#define SETUP_BUFFER_SIZE 365,12690
static char setup_buffer[366,12720
static char setup_used[367,12765
void ncr53c7xx_setup 369,12809
static int check_setup_strings(403,13507
#define ROUNDUP(ROUNDUP588,20899
issue_to_cmd 605,21318
static const unsigned char sdtr_message[636,22512
static const unsigned char async_message[646,22820
static const unsigned char wdtr_message[652,23005
find_host 669,23429
request_synchronous 698,24257
request_disconnect 745,25435
NCR53c7x0_driver_init 769,26051
clock_to_ccf_710 816,27537
NCR53c7x0_init 845,28269
ncr53c7xx_init 1118,36719
NCR53c7x0_init_fixup 1337,44084
NCR53c7xx_run_tests 1565,52837
NCR53c7xx_dsa_fixup 1747,58281
static volatile int process_issue_queue_running 1810,60942
run_process_issue_queue(1813,61020
abnormal_finished 1845,61987
intr_break 1960,65546
print_synchronous 2015,67140
set_synchronous 2045,68260
asynchronous 2121,70426
} syncs[2153,71710
synchronous 2181,72660
NCR53c7x0_dstat_sir_intr 2239,74686
NCR53c7x0_soft_reset 2900,96596
my_free_page 3031,100885
allocate_cmd 3041,101190
create_cmd 3141,104578
NCR53c7xx_queue_command 3584,118649
to_schedule_list 3696,122057
busyp 3790,124867
process_issue_queue 3816,125802
intr_scsi 3907,128563
u32 insn_log[4074,133290
u32 insn_log_index 4075,133310
void log1 4077,133335
void log_insn 4084,133442
void dump_log(4093,133590
NCR53c7x0_intfly 4134,134432
NCR53c7x0_intr 4237,137255
abort_connected 4360,141004
datapath_residual 4432,142807
sbcl_to_phase 4473,143963
sstat2_to_phase 4502,144565
intr_phase_mismatch 4537,145501
intr_bf 4749,152720
intr_dma 4826,154908
print_insn 5049,162448
NCR53c7xx_abort 5131,164889
NCR53c7xx_reset 5295,169933
insn_to_offset 5385,172699
print_progress 5448,174545
print_dsa 5501,176075
print_queues 5576,178725
print_lots 5658,181418
shutdown 5733,184148
ncr_scsi_reset 5758,184714
hard_reset 5776,185132
return_outstanding_commands 5811,186301
disable 5877,188036
ncr_halt 5913,189085
event_name 5971,190430
dump_events 5994,191192
check_address 6051,192791
NCR53c7x0_release(6058,192950
Scsi_Host_Template driver_template 6102,194376

drivers/scsi/pci2000.c,900
#define PCI2000_VERSION	32,1319
struct proc_dir_entry Proc_Scsi_Pci2000 58,1825
#define DEB(DEB64,1970
#define STOP_HERE	65,1987
#define DEB(DEB67,2049
#define STOP_HERE68,2064
	}	SCATGATH, *PSCATGATH;PSCATGATH75,2141
	}	DEV2000, *PDEV2000;PDEV200082,2243
	}	ADAPTER2000, *PADAPTER2000;PADAPTER200095,2447
#define HOSTDATA(HOSTDATA97,2479
static struct	Scsi_Host 	   *PsiHost[100,2536
static			int				NumAdapters 101,2621
static int WaitReady 112,2961
static void OpDone 135,3509
static UCHAR Command 151,4010
static int BuildSgList 174,4671
static int PsiRaidCmd 204,5649
static void Irq_Handler 225,6284
int Pci2000_QueueCommand 335,9300
static void internal_done 536,14765
int Pci2000_Command 550,15152
int Pci2000_Detect 571,15727
int Pci2000_Abort 654,18561
int Pci2000_Reset 674,19248
int Pci2000_BiosParam 694,19813
Scsi_Host_Template driver_template 716,20333

drivers/scsi/qlogicisp.h,226
#define _QLOGICISP_H44,1238
#define QLOGICISP_REQ_QUEUE_LEN	58,1891
#define QLOGICISP_MAX_SG(QLOGICISP_MAX_SG59,1957
#define NULL 70,2358
extern struct proc_dir_entry proc_scsi_isp1020;73,2383
#define QLOGICISP 75,2432

drivers/scsi/qlogicfas.c,1570
#define QL_INT_ACTIVE_HIGH 35,1174
#define QL_USE_IRQ 39,1347
#define QL_TURBO_PDMA 43,1496
#define QL_ENABLE_PARITY 46,1571
#define QL_RESET_AT_START 54,2015
#define XTALFREQ	59,2216
#define SLOWCABLE 73,2734
#define FASTSCSI 79,2900
#define FASTCLK 82,2982
#define SYNCXFRPD 90,3207
#define SYNCOFFST 100,3577
#define QL_INT_ACTIVE_HIGH 109,3981
#define MODULE110,4010
static struct proc_dir_entry proc_scsi_qlogicfas 134,4453
static int	    qbase 141,4696
static int	    qinitid;142,4733
static int	    qabort;143,4776
static int	    qlirq 144,4828
static char	    qinfo[145,4876
static Scsi_Cmnd   *qlcmd;146,4921
static int	    qlcfg5 148,4987
static int	    qlcfg6 149,5046
static int	    qlcfg7 150,5081
static int	    qlcfg8 151,5116
static int	    qlcfg9 152,5188
static int	    qlcfgc 153,5238
#define REG0 157,5447
#define REG1 158,5536
#define WATCHDOG 161,5702
#define rtrc(rtrc168,5944
#define rtrc(rtrc170,6013
void	ql_zap(178,6266
static int	ql_pdma(195,6592
static int	ql_wai(274,8541
static void	ql_icmd(296,9026
static unsigned int	ql_pcmd(340,10313
static void	    ql_ihandl(450,14054
static void	    do_ql_ihandl(469,14521
static void	qlidone(484,14958
int	qlogicfas_command(488,15050
int	qlogicfas_queuecommand(511,15500
int	qlogicfas_queuecommand(527,15819
void	qlogicfas_preset(537,16106
int	qlogicfas_detect(546,16298
int	qlogicfas_biosparam(642,19083
int	qlogicfas_abort(660,19534
int	qlogicfas_reset(669,19701
const char	*qlogicfas_info(678,19894
Scsi_Host_Template driver_template 685,20055

drivers/scsi/qlogicisp_asm.c,211
static const unsigned short risc_code_version 5,64
static const unsigned short risc_code_addr01 7,124
static const unsigned short risc_code01[11,202
static const unsigned short risc_code_length01 1304,83954

drivers/scsi/qlogicfas.h,73
#define _QLOGICFAS_H2,21
#define NULL 13,386
#define QLOGICFAS 16,411

drivers/scsi/seagate.c,3852
#define DPRINTK(DPRINTK105,3522
#define DPRINTK(DPRINTK107,3626
#define DANY(DANY109,3682
static struct proc_dir_entry proc_scsi_seagate 111,3730
#define IRQ 118,3865
#define FAST122,3901
#define CMD_RST 141,4294
#define CMD_SEL 142,4317
#define CMD_BSY 143,4340
#define CMD_ATTN 144,4363
#define CMD_START_ARB	145,4390
#define CMD_EN_PARITY	146,4418
#define CMD_INTR	147,4446
#define CMD_DRVR_ENABLE	148,4469
	#define STAT_MSG	154,4530
	#define STAT_CD	155,4554
	#define STAT_MSG	157,4584
	#define STAT_CD	158,4608
#define STAT_BSY	161,4640
#define STAT_IO	162,4663
#define STAT_REQ	163,4686
#define STAT_SEL	164,4709
#define STAT_PARITY	165,4732
#define STAT_ARB_CMPL	166,4758
#define REQ_MASK 172,4805
#define REQ_DATAOUT 173,4854
#define REQ_DATAIN 174,4876
#define REQ_CMDOUT 175,4903
#define REQ_STATIN 176,4930
#define REQ_MSGOUT 177,4969
#define REQ_MSGIN 178,5009
extern volatile int seagate_st0x_timeout;180,5059
	#define BASE_CMD 183,5116
	#define BASE_CMD 185,5154
#define PHASE_BUS_FREE 192,5206
#define PHASE_ARBITRATION 193,5231
#define PHASE_SELECTION 194,5259
#define PHASE_DATAIN 195,5285
#define PHASE_DATAOUT 196,5309
#define PHASE_CMDOUT 197,5336
#define PHASE_MSGIN 198,5362
#define PHASE_MSGOUT 199,5387
#define PHASE_STATUSIN 200,5413
#define PHASE_ETC 201,5442
#define PRINT_COMMAND 202,5552
#define PHASE_EXIT 203,5580
#define PHASE_RESELECT 204,5605
#define DEBUG_FAST 205,5634
#define DEBUG_SG 206,5660
#define DEBUG_LINKED	207,5686
#define DEBUG_BORKEN	208,5714
#define ST0X_BUS_FREE_DELAY 215,5836
#define ST0X_SELECTION_DELAY 216,5867
#define SEAGATE 218,5900
#define FD	219,5967
#define ST0X_ID_STR	221,5981
#define FD_ID_STR	222,6023
static int incommand;229,6248
static unsigned int base_address 232,6404
static unsigned long st0x_cr_sr;236,6617
static unsigned long st0x_dr;242,6953
static volatile int st0x_aborted 245,7091
static unsigned char controller_type 248,7230
static int irq 251,7442
#define retcode(retcode253,7465
#define STATUS 254,7534
#define DATA 255,7574
#define WRITE_CONTROL(WRITE_CONTROL256,7609
#define WRITE_DATA(WRITE_DATA257,7663
void st0x_setup 259,7712
void tmc8xx_setup 266,7828
static unsigned int seagate_bases[274,7958
Signature;Signature287,8172
static const Signature __initdata signatures[289,8184
#define NUM_SIGNATURES 319,9298
static int hostno 326,9463
static int fast 331,9639
#define fast 333,9666
static int borken_calibration 377,11564
static void __init borken_init 378,11599
static inline void borken_wait 395,12034
#define ULOOP(ULOOP413,12496
#define TIMEOUT 414,12535
int __init seagate_st0x_detect 416,12565
const char *seagate_st0x_info 542,15865
static unsigned char current_target,557,16222
static unsigned char current_target, current_lun;557,16222
static unsigned char *current_cmnd,558,16272
static unsigned char *current_cmnd, *current_data;558,16272
static int current_nobuffs;559,16323
static struct scatterlist *current_buffer;560,16351
static int current_bufflen;561,16394
static int linked_connected 570,16613
static unsigned char linked_target,571,16646
static unsigned char linked_target, linked_lun;571,16646
static Scsi_Cmnd *SCint 575,16747
#define NO_RECONNECT 582,16889
#define RECONNECT_NOW 583,16915
#define CAN_RECONNECT 584,16941
#define LINKED_RIGHT 592,17211
#define LINKED_WRONG 593,17237
static int should_reconnect 599,17332
static void do_seagate_reconnect_intr 607,17539
static void seagate_reconnect_intr 616,17794
static int recursion_depth 666,19446
int seagate_st0x_queue_command 668,19479
int seagate_st0x_command 723,20909
static int internal_command 730,21148
int seagate_st0x_abort 1668,50270
int seagate_st0x_reset 1680,50467
int seagate_st0x_biosparam 1698,50868
Scsi_Host_Template driver_template 1818,54495

drivers/scsi/ide-scsi.h,48
#define IDESCSI_H8,126
#define IDESCSI 19,627

drivers/scsi/ibmmca.h,100
#define _IBMMCA_H2,18
extern struct proc_dir_entry proc_scsi_ibmmca;19,577
#define IBMMCA 28,896

drivers/scsi/sr_vendor.c,290
# define DEBUG50,1551
#define VENDOR_SCSI3 55,1637
#define VENDOR_NEC 57,1699
#define VENDOR_TOSHIBA 58,1732
#define VENDOR_WRITER 59,1765
#define VENDOR_ID 61,1825
sr_vendor_init(64,1874
sr_set_blocklength(108,3049
#define BCD_TO_BIN(BCD_TO_BIN150,4332
int sr_cd_check(152,4404

drivers/scsi/qlogicpti.c,1546
#define MAX_TARGETS	45,1082
#define MAX_LUNS	46,1105
#define DEFAULT_LOOP_COUNT	48,1125
static struct qlogicpti *qptichain;52,1189
static int qptis_running 53,1225
#define PACKB(PACKB55,1256
const u_char mbox_param[57,1294
#define MAX_MBOX_COMMAND	127,3756
#define QUEUE_DEPTH(QUEUE_DEPTH130,3864
#define REQ_QUEUE_DEPTH(REQ_QUEUE_DEPTH131,3917
#define RES_QUEUE_DEPTH(RES_QUEUE_DEPTH133,4015
static struct proc_dir_entry proc_scsi_qlogicpti 135,4085
static inline void qlogicpti_enable_irqs(140,4212
static inline void qlogicpti_disable_irqs(146,4344
static inline void set_sbus_cfg1(151,4444
static int qlogicpti_mbox_command(164,4867
static int qlogicpti_reset_hardware(221,6353
#define PTI_RESET_LIMIT 354,10121
__initfunc(356,10150
static int qlogicpti_verify_tmon(523,14961
static inline void qlogicpti_set_hostdev_defaults(554,15863
__initfunc(586,16977
#define QSIZE(QSIZE757,22339
int qlogicpti_release(815,23976
const char *qlogicpti_info(833,24452
static inline void marker_frob(844,24770
static inline void cmd_frob(855,25060
static inline u_int load_cmd(885,25991
static inline void update_can_queue(961,28027
int qlogicpti_queuecommand(978,28700
static int qlogicpti_return_status(1034,30450
static __inline__ int qlogicpti_intr_handler(1098,32186
static void do_qlogicpti_intr_handler_sun4m(1177,34168
static void do_qlogicpti_intr_handler(1194,34531
int qlogicpti_abort(1203,34790
int qlogicpti_reset(1226,35604
Scsi_Host_Template driver_template 1247,36282
EXPORT_NO_SYMBOLS;1251,36357

drivers/scsi/qlogicpti.h,11179
#define _QLOGICPTI_H7,164
struct qlogicpti_regs qlogicpti_regs9,186
#define MAX_TARGETS	138,9361
#define MAX_LUNS	139,9384
#define QLOGICISP_REQ_QUEUE_LEN	152,10032
#define QLOGICISP_MAX_SG(QLOGICISP_MAX_SG153,10099
#define NULL 156,10178
extern struct proc_dir_entry proc_scsi_qlogicpti;166,10491
#define MBOX_COMMAND_COMPLETE	169,10586
#define INVALID_COMMAND	170,10624
#define HOST_INTERFACE_ERROR	171,10657
#define TEST_FAILED	172,10694
#define COMMAND_ERROR	173,10723
#define COMMAND_PARAM_ERROR	174,10754
#define ASYNC_SCSI_BUS_RESET	177,10822
#define SYSTEM_ERROR	178,10859
#define REQUEST_TRANSFER_ERROR	179,10889
#define RESPONSE_TRANSFER_ERROR	180,10928
#define REQUEST_QUEUE_WAKEUP	181,10968
#define EXECUTION_TIMEOUT_RESET	182,11005
struct Entry_header Entry_header185,11083
#define ENTRY_COMMAND	200,11343
#define ENTRY_CONTINUATION	201,11368
#define ENTRY_STATUS	202,11397
#define ENTRY_MARKER	203,11421
#define ENTRY_EXTENDED_COMMAND	204,11445
#define EFLAG_CONTINUATION	207,11515
#define EFLAG_BUSY	208,11544
#define EFLAG_BAD_HEADER	209,11566
#define EFLAG_BAD_PAYLOAD	210,11593
struct dataseg dataseg212,11622
struct Command_Entry Command_Entry217,11678
#define CFLAG_NODISC	237,12093
#define CFLAG_HEAD_TAG	238,12120
#define CFLAG_ORDERED_TAG	239,12149
#define CFLAG_SIMPLE_TAG	240,12180
#define CFLAG_TAR_RTN	241,12210
#define CFLAG_READ	242,12238
#define CFLAG_WRITE	243,12263
struct Ext_Command_Entry Ext_Command_Entry245,12290
struct Continuation_Entry Continuation_Entry263,12635
struct Marker_Entry Marker_Entry269,12741
#define SYNC_DEVICE	290,13141
#define SYNC_TARGET	291,13163
#define SYNC_ALL	292,13185
struct Status_Entry Status_Entry294,13205
#define CS_COMPLETE	309,13537
#define CS_INCOMPLETE	310,13566
#define CS_DMA_ERROR	311,13597
#define CS_TRANSPORT_ERROR	312,13627
#define CS_RESET_OCCURRED	313,13662
#define CS_ABORTED	314,13696
#define CS_TIMEOUT	315,13724
#define CS_DATA_OVERRUN	316,13752
#define CS_COMMAND_OVERRUN	317,13785
#define CS_STATUS_OVERRUN	318,13820
#define CS_BAD_MESSAGE	319,13854
#define CS_NO_MESSAGE_OUT	320,13886
#define CS_EXT_ID_FAILED	321,13920
#define CS_IDE_MSG_FAILED	322,13953
#define CS_ABORT_MSG_FAILED	323,13987
#define CS_REJECT_MSG_FAILED	324,14023
#define CS_NOP_MSG_FAILED	325,14060
#define CS_PARITY_ERROR_MSG_FAILED	326,14094
#define CS_DEVICE_RESET_MSG_FAILED	327,14136
#define CS_ID_MSG_FAILED	328,14178
#define CS_UNEXP_BUS_FREE	329,14211
#define CS_DATA_UNDERRUN	330,14245
#define CS_BUS_RESET	331,14278
#define SF_GOT_BUS	334,14351
#define SF_GOT_TARGET	335,14379
#define SF_SENT_CDB	336,14410
#define SF_TRANSFERRED_DATA	337,14439
#define SF_GOT_STATUS	338,14475
#define SF_GOT_SENSE	339,14506
#define STF_DISCONNECT	342,14580
#define STF_SYNCHRONOUS	343,14612
#define STF_PARITY_ERROR	344,14645
#define STF_BUS_RESET	345,14678
#define STF_DEVICE_RESET	346,14709
#define STF_ABORTED	347,14742
#define STF_TIMEOUT	348,14771
#define STF_NEGOTIATION	349,14800
#define MBOX_NO_OP	352,14857
#define MBOX_LOAD_RAM	353,14885
#define MBOX_EXEC_FIRMWARE	354,14916
#define MBOX_DUMP_RAM	355,14951
#define MBOX_WRITE_RAM_WORD	356,14982
#define MBOX_READ_RAM_WORD	357,15018
#define MBOX_MAILBOX_REG_TEST	358,15053
#define MBOX_VERIFY_CHECKSUM	359,15091
#define MBOX_ABOUT_FIRMWARE	360,15128
#define MBOX_CHECK_FIRMWARE	361,15164
#define MBOX_INIT_REQ_QUEUE	362,15200
#define MBOX_INIT_RES_QUEUE	363,15236
#define MBOX_EXECUTE_IOCB	364,15272
#define MBOX_WAKE_UP	365,15306
#define MBOX_STOP_FIRMWARE	366,15336
#define MBOX_ABORT	367,15371
#define MBOX_ABORT_DEVICE	368,15399
#define MBOX_ABORT_TARGET	369,15433
#define MBOX_BUS_RESET	370,15467
#define MBOX_STOP_QUEUE	371,15499
#define MBOX_START_QUEUE	372,15532
#define MBOX_SINGLE_STEP_QUEUE	373,15565
#define MBOX_ABORT_QUEUE	374,15604
#define MBOX_GET_DEV_QUEUE_STATUS	375,15637
#define MBOX_GET_FIRMWARE_STATUS	376,15678
#define MBOX_GET_INIT_SCSI_ID	377,15718
#define MBOX_GET_SELECT_TIMEOUT	378,15756
#define MBOX_GET_RETRY_COUNT	379,15796
#define MBOX_GET_TAG_AGE_LIMIT	380,15833
#define MBOX_GET_CLOCK_RATE	381,15872
#define MBOX_GET_ACT_NEG_STATE	382,15908
#define MBOX_GET_ASYNC_DATA_SETUP_TIME	383,15947
#define MBOX_GET_SBUS_PARAMS	384,15993
#define MBOX_GET_TARGET_PARAMS	385,16030
#define MBOX_GET_DEV_QUEUE_PARAMS	386,16069
#define MBOX_SET_INIT_SCSI_ID	387,16110
#define MBOX_SET_SELECT_TIMEOUT	388,16148
#define MBOX_SET_RETRY_COUNT	389,16188
#define MBOX_SET_TAG_AGE_LIMIT	390,16225
#define MBOX_SET_CLOCK_RATE	391,16264
#define MBOX_SET_ACTIVE_NEG_STATE	392,16300
#define MBOX_SET_ASYNC_DATA_SETUP_TIME	393,16341
#define MBOX_SET_SBUS_CONTROL_PARAMS	394,16387
#define MBOX_SET_TARGET_PARAMS	395,16431
#define MBOX_SET_DEV_QUEUE_PARAMS	396,16470
struct host_param host_param398,16512
struct dev_param dev_param428,17181
#define RES_QUEUE_LEN	441,17479
#define QUEUE_ENTRY_LEN	442,17537
#define NEXT_REQ_PTR(NEXT_REQ_PTR444,17566
#define NEXT_RES_PTR(NEXT_RES_PTR445,17638
#define PREV_REQ_PTR(PREV_REQ_PTR446,17700
#define PREV_RES_PTR(PREV_RES_PTR447,17772
struct pti_queue_entry pti_queue_entry449,17835
struct qlogicpti qlogicpti454,17934
#define SREG_TPOWER 491,19705
#define SREG_FUSE 492,19779
#define SREG_PDISAB 493,19853
#define SREG_DSENSE 494,19927
#define SREG_IMASK 495,20001
#define SREG_SPMASK 496,20075
#define SBUS_CFG0_HREVMASK 504,20330
#define SBUS_CFG1_EPAR 507,20446
#define SBUS_CFG1_FMASK 508,20529
#define SBUS_CFG1_BENAB 509,20612
#define SBUS_CFG1_B64 510,20695
#define SBUS_CFG1_B32 511,20778
#define SBUS_CFG1_B16 512,20861
#define SBUS_CFG1_B8 513,20944
#define SBUS_CTRL_EDIRQ 516,21056
#define SBUS_CTRL_ECIRQ 517,21139
#define SBUS_CTRL_ESIRQ 518,21222
#define SBUS_CTRL_ERIRQ 519,21305
#define SBUS_CTRL_GENAB 520,21388
#define SBUS_CTRL_RESET 521,21471
#define SBUS_STAT_DINT 524,21582
#define SBUS_STAT_CINT 525,21665
#define SBUS_STAT_SINT 526,21748
#define SBUS_STAT_RINT 527,21831
#define SBUS_STAT_GINT 528,21914
#define SBUS_SEMAPHORE_STAT 531,22028
#define SBUS_SEMAPHORE_LCK 532,22111
#define DMA_CFG_DVMAENAB 535,22222
#define DMA_CFG_EIRQ 536,22305
#define DMA_CFG_EBURST 537,22388
#define DMA_CFG_DIRECTION 538,22471
#define DMA_CTRL_CSUSPEND 541,22583
#define DMA_CTRL_CCLEAR 542,22666
#define DMA_CTRL_FCLEAR 543,22749
#define DMA_CTRL_CIRQ 544,22832
#define DMA_CTRL_DMASTART 545,22915
#define DMA_STAT_PFULL 548,23026
#define DMA_STAT_PORUN 549,23109
#define DMA_STAT_PSTG1 550,23192
#define DMA_STAT_PEMPTY 551,23275
#define DMA_STAT_CSUSP 552,23358
#define DMA_STAT_CTRAN 553,23441
#define DMA_STAT_CACTIVE 554,23524
#define DMA_STAT_CIDLE 555,23607
#define DMA_STAT_SPAR 556,23690
#define DMA_STAT_SERR 557,23773
#define DMA_STAT_TCNT 558,23856
#define DMA_STAT_IRQ 559,23939
#define DMA_FSTAT_ORUN 562,24055
#define DMA_FSTAT_URUN 563,24138
#define DMA_FSTAT_CMASK 564,24221
#define CPU_CFG1_ASTIME 567,24344
#define CPU_CFG1_STUNIT 568,24427
#define CPU_CFG1_STIMEO 569,24510
#define CPU_CFG1_CFACT 570,24593
#define CPU_CFG1_SID 571,24676
#define CPU_CFG2_FDISAB 574,24799
#define CPU_CFG2_ERAPUPS 575,24882
#define CPU_CFG2_EDPUPS 576,24965
#define CPU_CFG2_ECAUTO 577,25048
#define CPU_CFG2_ERESEL 578,25131
#define CPU_CFG2_ESEL 579,25214
#define CPU_IRQ_PERR 582,25338
#define CPU_IRQ_GERR 583,25421
#define CPU_IRQ_FABORT 584,25504
#define CPU_IRQ_CFAIL 585,25587
#define CPU_IRQ_FEMPTY 586,25670
#define CPU_IRQ_BCZ 587,25753
#define CPU_IRQ_XZ 588,25836
#define CPU_IRQ_IRQ 589,25919
#define CPU_IRQ_CRUN 590,26002
#define CPU_IRQ_RCODE 591,26085
#define CPU_GERR_ONZ 594,26211
#define CPU_GERR_OUF 595,26294
#define CPU_GERR_OOF 596,26377
#define CPU_GERR_FUF 597,26460
#define CPU_GERR_FOF 598,26543
#define CPU_GERR_WERR 599,26626
#define CPU_GERR_ILL 600,26709
#define CPU_EXC_UZERO 603,26833
#define CPU_EXC_UONE 604,26916
#define CPU_EXC_BFREE 605,26999
#define CPU_EXC_TATN 606,27082
#define CPU_EXC_RESEL 607,27165
#define CPU_EXC_SEL 608,27248
#define CPU_EXC_ARB 609,27331
#define CPU_EXC_GERR 610,27414
#define CPU_EXC_RESET 611,27497
#define CPU_ORIDE_ETRIG 614,27620
#define CPU_ORIDE_STEP 615,27703
#define CPU_ORIDE_BKPT 616,27786
#define CPU_ORIDE_PWRITE 617,27869
#define CPU_ORIDE_OFORCE 618,27952
#define CPU_ORIDE_LBACK 619,28035
#define CPU_ORIDE_PTEST 620,28118
#define CPU_ORIDE_TENAB 621,28201
#define CPU_ORIDE_TPINS 622,28284
#define CPU_ORIDE_FRESET 623,28367
#define CPU_ORIDE_CTERM 624,28450
#define CPU_ORIDE_RREG 625,28533
#define CPU_ORIDE_RMOD 626,28616
#define CPU_CMD_BRESET 629,28730
#define CPU_UEXC_ONE 632,28859
#define CPU_UEXC_ZERO 633,28942
#define CPU_SID_RSEID 636,29064
#define CPU_SID_SID 637,29147
#define CPU_DCFG1_SHOLD 640,29268
#define CPU_DCFG1_SSETUP 641,29351
#define CPU_DCFG1_SOFF 642,29434
#define CPU_DCFG2_FMASK 645,29555
#define CPU_DCFG2_EWIDE 646,29638
#define CPU_DCFG2_EPAR 647,29721
#define CPU_DCFG2_EBLK 648,29804
#define CPU_DCFG2_AMASK 649,29887
#define CPU_PPTR_STAT 652,30015
#define CPU_PPTR_MSGIN 653,30098
#define CPU_PPTR_COM 654,30181
#define CPU_PPTR_MSGOUT 655,30264
#define CPU_FSTAT_TFULL 658,30390
#define CPU_FSTAT_ARES 659,30473
#define CPU_FSTAT_CMSK 660,30556
#define CPU_FSTAT_BRES 661,30639
#define CPU_PCTRL_PVALID 664,30765
#define CPU_PCTRL_PHI 665,30848
#define CPU_PCTRL_PLO 666,30931
#define CPU_PCTRL_REQ 667,31014
#define CPU_PCTRL_ACK 668,31097
#define CPU_PCTRL_RST 669,31180
#define CPU_PCTRL_BSY 670,31263
#define CPU_PCTRL_SEL 671,31346
#define CPU_PCTRL_ATN 672,31429
#define CPU_PCTRL_MSG 673,31512
#define CPU_PCTRL_CD 674,31595
#define CPU_PCTRL_IO 675,31678
#define CPU_PDIFF_SENSE 678,31810
#define CPU_PDIFF_MODE 679,31893
#define CPU_PDIFF_OENAB 680,31976
#define CPU_PDIFF_PMASK 681,32059
#define CPU_PDIFF_TGT 682,32142
#define CPU_PDIFF_INIT 683,32225
#define RISC_PSR_FTRUE 686,32346
#define RISC_PSR_LCD 687,32429
#define RISC_PSR_RIRQ 688,32512
#define RISC_PSR_TOFLOW 689,32595
#define RISC_PSR_AOFLOW 690,32678
#define RISC_PSR_AMSB 691,32761
#define RISC_PSR_ACARRY 692,32844
#define RISC_PSR_AZERO 693,32927
#define RISC_PSR_ULTRA 694,33010
#define RISC_PSR_DIRQ 695,33093
#define RISC_PSR_SIRQ 696,33176
#define RISC_PSR_HIRQ 697,33259
#define RISC_PSR_IPEND 698,33342
#define RISC_PSR_FFALSE 699,33425
#define RISC_MTREG_P1DFLT 702,33553
#define RISC_MTREG_P0DFLT 703,33636
#define RISC_MTREG_P1ULTRA 704,33719
#define RISC_MTREG_P0ULTRA 705,33802
#define HCCTRL_NOP 708,33919
#define HCCTRL_RESET 709,34002
#define HCCTRL_PAUSE 710,34085
#define HCCTRL_REL 711,34168
#define HCCTRL_STEP 712,34251
#define HCCTRL_SHIRQ 713,34334
#define HCCTRL_CHIRQ 714,34417
#define HCCTRL_CRIRQ 715,34500
#define HCCTRL_BKPT 716,34583
#define HCCTRL_TMODE 717,34666
#define HCCTRL_HIRQ 718,34749
#define HCCTRL_RRIP 719,34832
#define HCCTRL_RPAUSED 720,34915
#define HCCTRL_EBENAB 721,34998
#define HCCTRL_B1ENAB 722,35081
#define HCCTRL_B0ENAB 723,35164
#define QLOGICPTI 725,35248
#define for_each_qlogicpti(for_each_qlogicpti741,35752

drivers/scsi/qlogicpti_asm.c,383
unsigned short pti_risc_code_addr01 3,53
unsigned short pti_risc_code01[5,100
unsigned short pti_risc_code01[] __initdata 5,100
unsigned short pti_risc_code_length01 1132,73203
unsigned short sbus_risc_code_addr01 1137,73351
unsigned short sbus_risc_code01[1139,73399
unsigned short sbus_risc_code01[] __initdata 1139,73399
unsigned short sbus_risc_code_length01 2298,148543

drivers/scsi/53c7xx.h,18971
#define NCR53c710_H53,1256
#define LINUX_1_357,1391
#define LINUX_1_259,1415
#define NCR53c7xx_release 79,1966
#define NCR53c7xx 83,2022
#define NCR53c7xx 90,2420
extern inline unsigned long virt_to_phys(109,3154
extern inline void * phys_to_virt(114,3272
#define virt_to_bus 122,3439
#define bus_to_virt 123,3472
#define readb(readb131,3739
#define readw(readw132,3796
#define readl(readl133,3854
#define writeb(writeb135,3911
#define writew(writew136,3979
#define writel(writel137,4048
#define mb(mb139,4116
#define SCNTL0_REG 144,4199
#define SCNTL0_ARB1	145,4226
#define SCNTL0_ARB2	146,4283
#define SCNTL0_STRT	147,4338
#define SCNTL0_WATN	148,4385
#define SCNTL0_EPC	149,4433
#define SCNTL0_EPG_700	151,4531
#define SCNTL0_AAP	152,4591
#define SCNTL0_TRG	153,4644
#define SCNTL1_REG 157,4729
#define SCNTL1_EXC	158,4756
#define SCNTL1_ADB	159,4819
#define SCNTL1_ESR_700	160,4875
#define SCNTL1_DHP_800	162,4969
#define SCNTL1_CON	164,5065
#define SCNTL1_RST	165,5106
#define SCNTL1_AESP	166,5147
#define SCNTL1_SND_700	167,5196
#define SCNTL1_IARB_800	168,5247
#define SCNTL1_RCV_700	171,5378
#define SCNTL1_SST_800	172,5432
#define SCNTL2_REG_800	176,5514
#define SCNTL2_800_SDU	177,5544
#define SCNTL3_REG_800 181,5632
#define SCNTL3_800_SCF_SHIFT	182,5663
#define SCNTL3_800_SCF_MASK	183,5694
#define SCNTL3_800_SCF2	184,5727
#define SCNTL3_800_SCF1	185,5783
#define SCNTL3_800_SCF0	186,5833
#define SCNTL3_800_CCF_SHIFT	191,5962
#define SCNTL3_800_CCF_MASK	192,5993
#define SCNTL3_800_CCF2	193,6026
#define SCNTL3_800_CCF1	194,6079
#define SCNTL3_800_CCF0	195,6132
#define SDID_REG_700 204,6398
#define SDID_REG_800	205,6428
#define GP_REG_800	207,6456
#define GP_800_IO1	208,6506
#define GP_800_IO2	209,6531
#define SIEN_REG_700	212,6604
#define SIEN0_REG_800	213,6632
#define SIEN_MA	214,6660
#define SIEN_FC	215,6723
#define SIEN_700_STO	216,6770
#define SIEN_800_SEL	217,6836
#define SIEN_700_SEL	218,6878
#define SIEN_800_RESEL	219,6934
#define SIEN_SGE	220,6980
#define SIEN_UDC	221,7026
#define SIEN_RST	222,7077
#define SIEN_PAR	223,7125
#define SCID_REG	234,7409
#define SCID_800_RRE	236,7477
#define SCID_800_SRE	237,7541
#define SCID_800_ENC_MASK	239,7662
#define SXFER_REG	242,7755
#define SXFER_DHP	243,7779
#define SXFER_TP2	245,7833
#define SXFER_TP1	246,7883
#define SXFER_TP0	247,7907
#define SXFER_TP_MASK	248,7941
#define SXFER_TP_SHIFT	250,8027
#define SXFER_TP_4	251,8053
#define SXFER_TP_5	252,8093
#define SXFER_TP_6	253,8121
#define SXFER_TP_7	254,8149
#define SXFER_TP_8	255,8177
#define SXFER_TP_9	256,8205
#define SXFER_TP_10	257,8233
#define SXFER_TP_11	258,8262
#define SXFER_MO3	260,8292
#define SXFER_MO2	261,8337
#define SXFER_MO1	262,8361
#define SXFER_MO0	263,8385
#define SXFER_MO_MASK	264,8419
#define SXFER_MO_SHIFT	265,8447
#define SODL_REG_700	273,8711
#define SODL_REG_800	274,8739
#define SOCL_REG	285,9063
#define SOCL_REQ	286,9086
#define SOCL_ACK	287,9120
#define SOCL_BSY	288,9154
#define SOCL_SEL	289,9188
#define SOCL_ATN	290,9222
#define SOCL_MSG	291,9256
#define SOCL_CD	292,9290
#define SOCL_IO	293,9324
#define SFBR_REG	311,9781
#define SIDL_REG_700	319,9993
#define SIDL_REG_800	320,10020
#define SBDL_REG_700	328,10279
#define SBDL_REG_800	329,10306
#define SSID_REG_800	331,10334
#define SSID_800_VAL	332,10361
#define SSID_800_ENCID_MASK	333,10427
#define SBCL_REG	340,10583
#define SBCL_REQ	341,10608
#define SBCL_ACK	342,10645
#define SBCL_BSY	343,10682
#define SBCL_SEL	344,10719
#define SBCL_ATN	345,10756
#define SBCL_MSG	346,10793
#define SBCL_CD	347,10830
#define SBCL_IO	348,10867
#define SBCL_PHASE_CMDOUT	349,10904
#define SBCL_PHASE_DATAIN	350,10938
#define SBCL_PHASE_DATAOUT	351,10972
#define SBCL_PHASE_MSGIN	352,11001
#define SBCL_PHASE_MSGOUT	353,11053
#define SBCL_PHASE_STATIN	354,11098
#define SBCL_PHASE_MASK	355,11142
#define SBCL_SSCF1	363,11318
#define SBCL_SSCF0	364,11362
#define SBCL_SSCF_MASK	365,11406
#define DSTAT_REG	372,11591
#define DSTAT_DFE	373,11616
#define DSTAT_800_MDPE	374,11661
#define DSTAT_800_BF	375,11721
#define DSTAT_ABRT	376,11764
#define DSTAT_SSI	377,11818
#define DSTAT_SIR	378,11878
#define DSTAT_WTD	381,11992
#define DSTAT_OPC	382,12048
#define DSTAT_800_IID	383,12098
#define SSTAT0_REG	387,12205
#define SIST0_REG_800	388,12253
#define SSTAT0_MA	389,12282
#define SSTAT0_CMP	392,12369
#define SSTAT0_700_STO	393,12418
#define SIST0_800_SEL	394,12486
#define SSTAT0_700_SEL	395,12529
#define SIST0_800_RSL	396,12587
#define SSTAT0_SGE	397,12632
#define SSTAT0_UDC	398,12680
#define SSTAT0_RST	399,12733
#define SSTAT0_PAR	400,12783
#define SSTAT1_REG	404,12871
#define SSTAT1_ILF	405,12919
#define SSTAT1_ORF	406,12960
#define SSTAT1_OLF	407,13001
#define SSTAT1_AIP	408,13042
#define SSTAT1_LOA	409,13097
#define SSTAT1_WOA	410,13145
#define SSTAT1_RST	411,13192
#define SSTAT1_SDP	412,13247
#define SSTAT2_REG	414,13303
#define SSTAT2_FF3	415,13351
#define SSTAT2_FF2	416,13414
#define SSTAT2_FF1	417,13455
#define SSTAT2_FF0	418,13481
#define SSTAT2_FF_MASK	419,13506
#define SSTAT2_FF_SHIFT	420,13535
#define SSTAT2_SDP	426,13664
#define SSTAT2_MSG	427,13699
#define SSTAT2_CD	428,13734
#define SSTAT2_IO	429,13768
#define SSTAT2_PHASE_CMDOUT	430,13802
#define SSTAT2_PHASE_DATAIN	431,13840
#define SSTAT2_PHASE_DATAOUT	432,13878
#define SSTAT2_PHASE_MSGIN	433,13909
#define SSTAT2_PHASE_MSGOUT	434,13969
#define SSTAT2_PHASE_STATIN	435,14020
#define SSTAT2_PHASE_MASK	436,14070
#define SCRATCHA_REG_00	440,14155
#define DSA_REG	442,14248
#define CTEST0_REG_700	444,14301
#define CTEST0_REG_800	445,14351
#define CTEST0_700_RTRG	447,14449
#define CTEST0_700_DDIR	448,14502
#define CTEST1_REG_700	453,14619
#define CTEST1_REG_800	454,14669
#define CTEST1_FMT3	455,14719
#define CTEST1_FMT2	456,14787
#define CTEST1_FMT1	457,14836
#define CTEST1_FMT0	458,14862
#define CTEST1_FFL3	460,14889
#define CTEST1_FFL2	461,14957
#define CTEST1_FFL1	462,15005
#define CTEST1_FFL0	463,15031
#define CTEST2_REG_700	465,15058
#define CTEST2_REG_800	466,15108
#define CTEST2_800_DDIR	468,15159
#define CTEST2_800_SIGP	469,15210
#define CTEST2_800_CIO	471,15308
#define CTEST2_800_CM	472,15361
#define CTEST2_700_SOFF	475,15468
#define CTEST2_700_SFP	483,15743
#define CTEST2_700_DFP	487,15880
#define CTEST2_TEOP	491,16016
#define CTEST2_DREQ	495,16134
#define CTEST2_800_DACK	497,16229
#define CTEST3_REG_700	506,16563
#define CTEST3_REG_800	508,16615
#define CTEST3_800_V3	509,16644
#define CTEST3_800_V2	510,16692
#define CTEST3_800_V1	511,16720
#define CTEST3_800_V0	512,16748
#define CTEST3_800_FLF	513,16776
#define CTEST3_800_CLF	514,16826
#define CTEST3_800_FM	515,16876
#define CTEST4_REG_700	518,16970
#define CTEST4_REG_800	519,17020
#define CTEST4_800_BDIS	521,17113
#define CTEST4_ZMOD	522,17168
#define CTEST4_SZM	523,17220
#define CTEST4_700_SLBE	524,17275
#define CTEST4_800_SRTM	525,17333
#define CTEST4_700_SFWR	526,17395
#define CTEST4_800_MPEE	530,17523
#define CTEST4_FBL2	539,17849
#define CTEST4_FBL1	540,17876
#define CTEST4_FBL0	541,17902
#define CTEST4_FBL_MASK	542,17929
#define CTEST4_FBL_0	543,17959
#define CTEST4_FBL_1	544,18020
#define CTEST4_FBL_2	545,18081
#define CTEST4_FBL_3	546,18142
#define CTEST4_800_SAVE	547,18203
#define CTEST5_REG_700	550,18248
#define CTEST5_REG_800	551,18298
#define CTEST5_ADCK	557,18532
#define CTEST5_BBCK	562,18664
#define CTEST5_700_ROFF	572,19107
#define CTEST5_MASR 578,19298
#define CTEST5_DDIR	579,19326
#define CTEST5_700_EOP	583,19424
#define CTEST5_700_DREQ	584,19474
#define CTEST5_700_DACK	585,19523
#define CTEST6_REG_700	592,19731
#define CTEST6_REG_800	593,19760
#define CTEST7_REG	595,19790
#define CTEST7_10_CDIS	597,19903
#define CTEST7_10_SC1	598,19958
#define CTEST7_10_SC0	599,20011
#define CTEST7_10_SC_MASK	600,20040
#define CTEST7_0060_FM	602,20111
#define CTEST7_STD	603,20157
#define CTEST7_DFP	604,20214
#define CTEST7_EVP	605,20276
#define CTEST7_10_TT1	606,20341
#define CTEST7_00_DC	607,20389
#define CTEST7_DIFF	609,20476
#define CTEST7_SAVE 611,20527
#define TEMP_REG	614,20578
#define DFIFO_REG	616,20640
#define DFIFO_00_FLF	621,20794
#define DFIFO_00_CLF	622,20852
#define DFIFO_BO6	623,20910
#define DFIFO_BO5	624,20934
#define DFIFO_BO4	625,20958
#define DFIFO_BO3	626,20982
#define DFIFO_BO2	627,21006
#define DFIFO_BO1	628,21031
#define DFIFO_BO0	629,21055
#define DFIFO_10_BO_MASK	630,21079
#define DFIFO_00_BO_MASK	631,21129
#define ISTAT_REG_700	638,21311
#define ISTAT_REG_800	639,21339
#define ISTAT_ABRT	640,21367
#define ISTAT_10_SRST	643,21529
#define ISTAT_10_SIGP	644,21578
#define ISTAT_800_SEM	646,21675
#define ISTAT_CON	647,21719
#define ISTAT_800_INTF	648,21766
#define ISTAT_700_PRE	649,21822
#define ISTAT_SIP	654,21997
#define ISTAT_DIP	658,22109
#define CTEST8_REG	663,22225
#define CTEST8_0066_EAS	664,22271
#define CTEST8_0066_EFM	667,22386
#define CTEST8_0066_GRP	668,22454
#define CTEST8_0066_TE	673,22621
#define CTEST8_0066_HSC	678,22782
#define CTEST8_0066_SRA	679,22834
#define CTEST8_0066_DAS	683,22956
#define CTEST8_0066_LDE	686,23052
#define CTEST8_10_V3	696,23353
#define CTEST8_10_V2	697,23400
#define CTEST8_10_V1	698,23427
#define CTEST8_10_V0	699,23455
#define CTEST8_10_V_MASK	700,23482
#define CTEST8_10_FLF	701,23513
#define CTEST8_10_CLF	702,23559
#define CTEST8_10_FM	703,23605
#define CTEST8_10_SM	704,23653
#define CTEST9_REG_00	717,24035
#define LCRC_REG_10	718,24084
#define DBC_REG	729,24349
#define DBC_TCI_TRUE	736,24597
#define DBC_TCI_COMPARE_DATA	737,24651
#define DBC_TCI_COMPARE_PHASE	738,24709
#define DBC_TCI_WAIT_FOR_VALID	739,24785
#define DBC_TCI_MASK_MASK	741,24902
#define DBC_TCI_MASK_SHIFT	742,24965
#define DBC_TCI_DATA_MASK	743,24994
#define DBC_TCI_DATA_SHIFT	744,25053
#define DBC_RWRI_IMMEDIATE_MASK	746,25083
#define DBC_RWRI_IMMEDIATE_SHIFT 747,25144
#define DBC_RWRI_ADDRESS_MASK	748,25202
#define DBC_RWRI_ADDRESS_SHIFT 749,25264
#define DCMD_REG	755,25327
#define DCMD_TYPE_MASK	756,25351
#define DCMD_TYPE_BMI	757,25401
#define DCMD_BMI_IO	758,25470
#define DCMD_BMI_CD	759,25536
#define DCMD_BMI_MSG	760,25602
#define DCMD_BMI_OP_MASK	762,25656
#define DCMD_BMI_OP_MOVE_T	763,25708
#define DCMD_BMI_OP_MOVE_I	764,25751
#define DCMD_BMI_INDIRECT	766,25805
#define DCMD_TYPE_TCI	768,25864
#define DCMD_TCI_IO	770,25948
#define DCMD_TCI_CD	771,26014
#define DCMD_TCI_MSG	772,26080
#define DCMD_TCI_OP_MASK	773,26133
#define DCMD_TCI_OP_JUMP	774,26185
#define DCMD_TCI_OP_CALL	775,26226
#define DCMD_TCI_OP_RETURN	776,26267
#define DCMD_TCI_OP_INT	777,26312
#define DCMD_TYPE_RWRI	779,26353
#define DCMD_RWRI_OPC_MASK	781,26445
#define DCMD_RWRI_OPC_WRITE	782,26495
#define DCMD_RWRI_OPC_READ	783,26557
#define DCMD_RWRI_OPC_MODIFY	784,26617
#define DCMD_RWRI_OP_MASK	786,26674
#define DCMD_RWRI_OP_MOVE	787,26705
#define DCMD_RWRI_OP_SHL	788,26736
#define DCMD_RWRI_OP_OR	789,26766
#define DCMD_RWRI_OP_XOR	790,26796
#define DCMD_RWRI_OP_AND	791,26826
#define DCMD_RWRI_OP_SHR	792,26856
#define DCMD_RWRI_OP_ADD	793,26886
#define DCMD_RWRI_OP_ADDC	794,26916
#define DCMD_TYPE_MMI	796,26948
#define DNAD_REG	800,27043
#define DSP_REG	802,27120
#define DSPS_REG	803,27185
#define DMODE_REG_00	805,27264
#define DMODE_00_BL1	806,27310
#define DMODE_00_BL0	807,27360
#define DMODE_BL_MASK	808,27386
#define DMODE_BL_2	810,27439
#define DMODE_BL_4	811,27480
#define DMODE_BL_8	812,27522
#define DMODE_BL_16	813,27564
#define DMODE_10_BL_1	815,27609
#define DMODE_10_BL_2	816,27653
#define DMODE_10_BL_4	817,27698
#define DMODE_10_BL_8	818,27743
#define DMODE_10_FC2	819,27788
#define DMODE_10_FC1	820,27838
#define DMODE_710_PD	821,27888
#define DMODE_710_UO	822,27944
#define DMODE_700_BW16	824,27995
#define DMODE_700_286	825,28048
#define DMODE_700_IOM	826,28090
#define DMODE_700_FAM	827,28143
#define DMODE_700_PIPE	828,28195
#define DMODE_MAN	831,28291
#define DMODE_700_SAVE 837,28458
#define SCRATCHA_REG_800	840,28562
#define SCRATCHB_REG_10	842,28645
#define DMODE_REG_10 844,28708
#define DMODE_800_SIOM	845,28777
#define DMODE_800_DIOM	846,28826
#define DMODE_800_ERL	847,28880
#define DIEN_REG	850,28988
#define DIEN_800_MDPE	852,29101
#define DIEN_800_BF	853,29160
#define DIEN_700_BF	854,29202
#define DIEN_ABRT	855,29244
#define DIEN_SSI	856,29299
#define DIEN_SIR	857,29357
#define DIEN_700_WTD	861,29481
#define DIEN_700_OPC	862,29548
#define DIEN_800_IID	865,29634
#define DWT_REG	871,29763
#define DCNTL_REG	874,29808
#define DCNTL_700_CF1	875,29832
#define DCNTL_700_CF0	876,29885
#define DCNTL_700_CF_MASK	877,29913
#define DCNTL_700_CF_2	879,29996
#define DCNTL_700_CF_1_5	880,30053
#define DCNTL_700_CF_1	881,30108
#define DCNTL_700_CF_3	882,30163
#define DCNTL_700_S16	884,30230
#define DCNTL_SSM	885,30295
#define DCNTL_700_LLM	886,30342
#define DCNTL_800_IRQM	888,30433
#define DCNTL_STD	889,30487
#define DCNTL_00_RST	891,30560
#define DCNTL_10_COM	895,30720
#define DCNTL_10_EA	896,30785
#define DCNTL_700_SAVE 898,30850
#define SCRATCHB_REG_00	902,30928
#define SCRATCHB_REG_800	903,30990
#define ADDER_REG_10	905,31073
#define SIEN1_REG_800	907,31129
#define SIEN1_800_STO	908,31157
#define SIEN1_800_GEN	909,31221
#define SIEN1_800_HTH	910,31277
#define SIST1_REG_800	912,31335
#define SIST1_800_STO	913,31363
#define SIST1_800_GEN	914,31427
#define SIST1_800_HTH	915,31483
#define SLPAR_REG_800	917,31541
#define MACNTL_REG_800	919,31583
#define MACNTL_800_TYP3	920,31640
#define MACNTL_800_TYP2	921,31670
#define MACNTL_800_TYP1	922,31700
#define MACNTL_800_TYP0	923,31730
#define MACNTL_800_DWR	924,31760
#define MACNTL_800_DRD	925,31789
#define MACNTL_800_PSCPT	926,31818
#define MACNTL_800_SCPTS	927,31848
#define GPCNTL_REG_800	929,31879
#define STIME0_REG_800	932,32018
#define STIME0_800_HTH_MASK	933,32075
#define STIME0_800_HTH_SHIFT	934,32145
#define STIME0_800_SEL_MASK	935,32176
#define STIME0_800_SEL_SHIFT	936,32233
#define STIME1_REG_800	938,32265
#define STIME1_800_GEN_MASK	939,32294
#define RESPID_REG_800	941,32356
#define STEST0_REG_800	944,32462
#define STEST0_800_SLT	945,32492
#define STEST0_800_ART	946,32557
#define STEST0_800_SOZ	947,32626
#define STEST0_800_SOM	948,32685
#define STEST1_REG_800	950,32748
#define STEST1_800_SCLK	951,32777
#define STEST2_REG_800	953,32833
#define STEST2_800_SCE	954,32863
#define STEST2_800_ROF	955,32915
#define STEST2_800_SLB	956,32973
#define STEST2_800_SZM	957,33034
#define STEST2_800_EXT	958,33094
#define STEST2_800_LOW	959,33162
#define STEST3_REG_800	961,33218
#define STEST3_800_TE	962,33249
#define STEST3_800_STR	963,33306
#define STEST3_800_HSC	964,33361
#define STEST3_800_DSI	965,33412
#define STEST3_800_TTM	966,33481
#define STEST3_800_CSF	967,33531
#define STEST3_800_STW	968,33582
#define OPTION_PARITY 970,33639
#define OPTION_TAGGED_QUEUE	971,33696
#define OPTION_700	972,33764
#define OPTION_INTFLY	973,33823
#define OPTION_DEBUG_INTR	974,33879
#define OPTION_DEBUG_INIT_ONLY	975,33933
#define OPTION_DEBUG_READ_ONLY	979,34104
#define OPTION_DEBUG_TRACE	981,34203
#define OPTION_DEBUG_SINGLE	984,34342
#define OPTION_SYNCHRONOUS	986,34428
#define OPTION_MEMORY_MAPPED	987,34486
#define OPTION_IO_MAPPED	989,34576
#define OPTION_DEBUG_PROBE_ONLY	991,34662
#define OPTION_DEBUG_TESTS_ONLY	992,34736
#define OPTION_DEBUG_TEST0	993,34814
#define OPTION_DEBUG_TEST1	994,34866
#define OPTION_DEBUG_TEST2	995,34918
#define OPTION_DEBUG_DUMP	996,34970
#define OPTION_DEBUG_TARGET_LIMIT 997,35024
#define OPTION_DEBUG_NCOMMANDS_LIMIT 998,35107
#define OPTION_DEBUG_SCRIPT 999,35188
#define OPTION_DEBUG_FIXUP 1000,35265
#define OPTION_DEBUG_DSA 1001,35326
#define OPTION_DEBUG_CORRUPTION	1002,35360
#define OPTION_DEBUG_SDTR 1003,35433
#define OPTION_DEBUG_MISMATCH 1004,35500
#define OPTION_DISCONNECT	1005,35571
#define OPTION_DEBUG_DISCONNECT 1006,35630
#define OPTION_ALWAYS_SYNCHRONOUS 1007,35674
#define OPTION_DEBUG_QUEUES	1009,35772
#define OPTION_DEBUG_ALLOCATION 1010,35812
#define OPTION_DEBUG_SYNCHRONOUS 1011,35858
#define OPTION_NO_ASYNC	1013,35961
#define OPTION_NO_PRINT_RACE 1017,36139
#define PERM_OPTIONS 1021,36307
struct NCR53c7x0_synchronous NCR53c7x0_synchronous1033,36729
#define CMD_FLAG_SDTR 1047,37234
#define CMD_FLAG_WDTR	1049,37319
#define CMD_FLAG_DID_SDTR	1051,37395
#define CMD_FLAG_DID_WDTR	1052,37438
struct NCR53c7x0_table_indirect NCR53c7x0_table_indirect1054,37482
enum ncr_event ncr_event1059,37554
    EVENT_NONE 1060,37572
    EVENT_ISSUE_QUEUE 1066,37696
    EVENT_ISSUE_QUEUE = 0x5000000,1066,37696
    EVENT_START_QUEUE,1067,37772
    EVENT_SELECT,1068,37834
    EVENT_DISCONNECT,1069,37890
    EVENT_RESELECT,1070,37943
    EVENT_COMPLETE,1071,37992
    EVENT_IDLE,1072,38047
    EVENT_SELECT_FAILED,1073,38074
    EVENT_BEFORE_SELECT,1074,38108
    EVENT_RESELECT_FAILED	1075,38142
struct NCR53c7x0_event NCR53c7x0_event1078,38181
struct NCR53c7x0_cmd NCR53c7x0_cmd1112,39279
struct NCR53c7x0_break NCR53c7x0_break1206,42361
#define STATE_HALTED	1213,42572
#define STATE_WAITING	1219,42818
#define STATE_RUNNING	1221,42898
#define STATE_ABORTING	1225,42977
#define STATE_ABORTED 1227,43057
#define STATE_DISABLED 1229,43149
#define SPECIFIC_INT_NOTHING 1238,43436
#define SPECIFIC_INT_RESTART	1239,43493
#define SPECIFIC_INT_ABORT	1240,43562
#define SPECIFIC_INT_PANIC	1241,43626
#define SPECIFIC_INT_DONE	1242,43688
#define SPECIFIC_INT_BREAK	1243,43748
struct NCR53c7x0_hostdata NCR53c7x0_hostdata1245,43808
#define IRQ_NONE	1539,53088
#define DMA_NONE	1540,53109
#define IRQ_AUTO	1541,53130
#define DMA_AUTO	1542,53151
#define BOARD_GENERIC	1544,53173
#define NCR53c7x0_insn_size(NCR53c7x0_insn_size1546,53198
#define NCR53c7x0_local_declare(NCR53c7x0_local_declare1550,53301
#define NCR53c7x0_local_setup(NCR53c7x0_local_setup1555,53477
#define NCR53c7x0_read8(NCR53c7x0_read81565,53934
#define NCR53c7x0_read16(NCR53c7x0_read161570,54131
#define NCR53c7x0_read8(NCR53c7x0_read81575,54334
#define NCR53c7x0_read16(NCR53c7x0_read161580,54527
#define NCR53c7x0_read32(NCR53c7x0_read321585,54727
#define NCR53c7x0_write8(NCR53c7x0_write81598,55299
#define NCR53c7x0_write16(NCR53c7x0_write161602,55446
#define NCR53c7x0_write32(NCR53c7x0_write321606,55595
#define NCR53c7x0_write8(NCR53c7x0_write81612,55748
#define NCR53c7x0_write16(NCR53c7x0_write161617,55968
#define NCR53c7x0_write32(NCR53c7x0_write321622,56189
#define patch_abs_32(patch_abs_321630,56467
#define patch_abs_rwri_data(patch_abs_rwri_data1642,56995
#define patch_abs_tci_data(patch_abs_tci_data1652,57434
#define patch_dsa_32(patch_dsa_321662,57873
#define FATAL(FATAL1673,58270

drivers/scsi/pluto.c,729
#define pluto_printk 32,604
#define PLD(PLD35,685
#define PLND(PLND36,717
#define PLD(PLD38,769
#define PLND(PLND39,784
struct proc_dir_entry proc_scsi_pluto 42,808
static struct ctrl_inquiry ctrl_inquiry47,916
} *fcs __initdata 53,1043
static int fcscount __initdata 54,1070
static atomic_t fcss __initdata 55,1106
static struct timer_list fc_timer __initdata 56,1156
struct semaphore fc_sem __initdata 57,1210
__initfunc(61,1354
__initfunc(67,1459
__initfunc(72,1542
static void pluto_select_queue_depths(80,1747
__initfunc(95,2175
int pluto_release(279,6940
const char *pluto_info(293,7257
static int pluto_encode_addr(316,7960
Scsi_Host_Template driver_template 338,8620
EXPORT_NO_SYMBOLS;342,8691

drivers/scsi/amiga7xx.c,78
struct proc_dir_entry proc_scsi_amiga7xx 31,769
int amiga7xx_detect(40,1054

drivers/scsi/dc390.h,201
#define DC390_H16,487
#define DC390_BANNER 18,504
#define DC390_VERSION 19,549
# define DC390_release 34,1023
extern struct proc_dir_entry DC390_proc_scsi_tmscsim;37,1059
#define DC390_T 40,1219

drivers/scsi/FlashPoint.c,45922
#define UNIX25,705
#define FW_TYPE	26,718
#define MAX_CARDS	27,746
#define OS_InPortByte(OS_InPortByte31,787
#define OS_InPortWord(OS_InPortWord32,826
#define OS_InPortLong(OS_InPortLong33,865
#define OS_OutPortByte(OS_OutPortByte34,904
#define OS_OutPortWord(OS_OutPortWord35,958
#define OS_OutPortLong(OS_OutPortLong36,1012
#define OS_Lock(OS_Lock37,1066
#define OS_UnLock(OS_UnLock38,1085
#define SccbMgr_sense_adapter	45,1192
#define SccbMgr_config_adapter	46,1251
#define SccbMgr_unload_card	47,1319
#define SccbMgr_start_sccb	48,1378
#define SccbMgr_abort_sccb	49,1426
#define SccbMgr_my_int	50,1474
#define SccbMgr_isr	51,1527
#define BL_Card	58,1649
#define BusMasterInit	59,1680
#define CalcCrc16	60,1722
#define CalcLrc	61,1756
#define ChkIfChipInitialized	62,1787
#define DiagBusMaster	63,1842
#define DiagEEPROM	64,1884
#define DiagXbow	65,1920
#define GetTarLun	66,1952
#define RNVRamData	67,1986
#define RdStack	68,2022
#define SccbMgrTableInitAll	69,2053
#define SccbMgrTableInitCard	70,2106
#define SccbMgrTableInitTarget	71,2161
#define SccbMgr_bad_isr	72,2220
#define SccbMgr_scsi_reset	73,2266
#define SccbMgr_timer_expired	74,2317
#define SendMsg	75,2374
#define Wait	76,2405
#define Wait1Second	77,2430
#define WrStack	78,2468
#define XbowInit	79,2499
#define autoCmdCmplt	80,2531
#define autoLoadDefaultMap	81,2571
#define busMstrDataXferStart	82,2622
#define busMstrSGDataXferStart	83,2677
#define busMstrTimeOut	84,2736
#define dataXferProcessor	85,2780
#define default_intena	86,2829
#define hostDataXferAbort	87,2873
#define hostDataXferRestart	88,2922
#define inisci	89,2975
#define mbCards	90,3004
#define nvRamInfo	91,3035
#define phaseBusFree	92,3069
#define phaseChkFifo	93,3109
#define phaseCommand	94,3149
#define phaseDataIn	95,3189
#define phaseDataOut	96,3227
#define phaseDecode	97,3267
#define phaseIllegal	98,3305
#define phaseMsgIn	99,3345
#define phaseMsgOut	100,3381
#define phaseStatus	101,3419
#define queueAddSccb	102,3457
#define queueCmdComplete	103,3497
#define queueDisconnect	104,3544
#define queueFindSccb	105,3590
#define queueFlushSccb	106,3632
#define queueFlushTargSccb	107,3676
#define queueSearchSelect	108,3727
#define queueSelectFail	109,3776
#define s_PhaseTbl	110,3822
#define scamHAString	111,3858
#define scamInfo	112,3898
#define scarb	113,3930
#define scasid	114,3957
#define scbusf	115,3986
#define sccbMgrTbl	116,4015
#define schkdd	117,4051
#define scini	118,4080
#define sciso	119,4107
#define scmachid	120,4134
#define scsavdi	121,4166
#define scsel	122,4197
#define scsell	123,4224
#define scsendi	124,4253
#define scvalq	125,4284
#define scwirod	126,4313
#define scwiros	127,4344
#define scwtsel	128,4375
#define scxferc	129,4406
#define sdecm	130,4437
#define sfm	131,4464
#define shandem	132,4487
#define sinits	133,4518
#define sisyncn	134,4547
#define sisyncr	135,4578
#define siwidn	136,4609
#define siwidr	137,4638
#define sres	138,4667
#define sresb	139,4692
#define ssel	140,4719
#define ssenss	141,4744
#define sssyncv	142,4773
#define stsyncn	143,4804
#define stwidn	144,4835
#define sxfrp	145,4864
#define utilEERead	146,4891
#define utilEEReadOrg	147,4927
#define utilEESendCmdAddr	148,4969
#define utilEEWrite	149,5018
#define utilEEWriteOnOff	150,5056
#define utilUpdateResidual	151,5103
#define __GLOBALS_H__172,5693
#define _UCB_MGR_ 174,5716
#define _SCCB_MGR_ 175,5737
#define MAX_CDBLEN 179,5785
#define SCAM_LEV_2	181,5809
#define CRCMASK	183,5831
   #define       COMPILER_16_BIT 190,6123
   #define       COMPILER_32_BIT 192,6285
#define     BL_VENDOR_ID 196,6329
#define     FP_DEVICE_ID 197,6366
#define     MM_DEVICE_ID 198,6403
#define FALSE 202,6456
#define TRUE 205,6502
#define NULL 209,6558
#define FAILURE 212,6592
typedef unsigned char   UCHAR;UCHAR215,6630
typedef unsigned short  USHORT;USHORT216,6661
typedef unsigned int    UINT;UINT217,6693
typedef unsigned long   ULONG;ULONG218,6723
typedef unsigned char * PUCHAR;PUCHAR219,6754
typedef unsigned short* PUSHORT;PUSHORT220,6786
typedef unsigned long * PULONG;PULONG221,6819
typedef void *          PVOID;PVOID222,6851
typedef unsigned char far       * uchar_ptr;uchar_ptr226,6913
typedef unsigned short far      * ushort_ptr;ushort_ptr227,6958
typedef unsigned long far       * ulong_ptr;ulong_ptr228,7004
typedef unsigned char           * uchar_ptr;uchar_ptr232,7109
typedef unsigned short          * ushort_ptr;ushort_ptr233,7154
typedef unsigned long           * ulong_ptr;ulong_ptr234,7200
#define s08bits	246,7520
#define s16bits 247,7541
#define s32bits	248,7564
#define u08bits	250,7586
#define u16bits	251,7619
#define u32bits	252,7652
typedef u08bits far 	* pu08bits;pu08bits256,7716
typedef u16bits far 	* pu16bits;pu16bits257,7749
typedef u32bits far	* pu32bits;pu32bits258,7782
typedef u08bits 	* pu08bits;pu08bits264,7875
typedef u16bits 	* pu16bits;pu16bits265,7904
typedef u32bits 	* pu32bits;pu32bits266,7933
#define BIT(BIT271,7994
#define BITW(BITW272,8079
	#define OS_InPortByte(OS_InPortByte283,8367
	#define OS_InPortWord(OS_InPortWord284,8416
	#define OS_InPortLong(OS_InPortLong285,8464
	#define OS_OutPortByte(OS_OutPortByte286,8518
	#define OS_OutPortWord(OS_OutPortWord287,8577
	#define OS_OutPortLong(OS_OutPortLong288,8635
		extern __declspec(308,9506
	#define OS_InPortByte(OS_InPortByte326,10403
	#define OS_InPortWord(OS_InPortWord327,10475
	#define OS_InPortLong(OS_InPortLong328,10548
	#define OS_OutPortByte(OS_OutPortByte330,10621
	#define OS_OutPortWord(OS_OutPortWord331,10715
	#define OS_OutPortLong(OS_OutPortLong332,10810
	#define OS_OutPortByteBuffer(OS_OutPortByteBuffer333,10904
	#define OS_OutPortWordBuffer(OS_OutPortWordBuffer335,11043
	#define OS_Lock(OS_Lock338,11184
	#define OS_UnLock(OS_UnLock339,11204
	#define OS_InPortByte(OS_InPortByte343,11313
	#define OS_InPortWord(OS_InPortWord344,11368
	#define OS_InPortLong(OS_InPortLong345,11423
	#define OS_OutPortByte(OS_OutPortByte346,11478
	#define OS_OutPortWord(OS_OutPortWord347,11551
	#define OS_OutPortLong(OS_OutPortLong348,11624
	#define OS_Lock(OS_Lock350,11698
	#define OS_UnLock(OS_UnLock351,11718
	#define OS_InPortByte(OS_InPortByte361,11948
	#define OS_InPortWord(OS_InPortWord362,11993
	#define OS_OutPortByte(OS_OutPortByte363,12038
	#define OS_OutPortWord(OS_OutPortWord364,12093
	#define OS_Lock(OS_Lock368,12254
	#define OS_UnLock(OS_UnLock369,12274
#define OS_InPortByte(OS_InPortByte377,12449
#define OS_InPortWord(OS_InPortWord378,12494
#define OS_Lock(OS_Lock385,12812
#define OS_UnLock(OS_UnLock386,12831
#define __SCCB_H__412,13503
#define debug_size 418,13594
   typedef struct _SCCB near *PSCCB;PSCCB423,13642
   	typedef void (*CALL_BK_FN)CALL_BK_FN425,13708
   typedef struct _SCCB far *PSCCB;PSCCB430,13776
   	typedef void (far *CALL_BK_FN)CALL_BK_FN432,13841
   typedef struct _SCCB *PSCCB;PSCCB437,13900
   	typedef void (*CALL_BK_FN)CALL_BK_FN439,13961
typedef struct SCCBMgr_info SCCBMgr_info445,14018
} SCCBMGR_INFO;SCCBMGR_INFO467,14644
   typedef SCCBMGR_INFO *      PSCCBMGR_INFO;PSCCBMGR_INFO470,14678
   typedef SCCBMGR_INFO far *  PSCCBMGR_INFO;PSCCBMGR_INFO473,14763
   typedef SCCBMGR_INFO *      PSCCBMGR_INFO;PSCCBMGR_INFO475,14818
	#define SCSI_PARITY_ENA	483,14927
	#define LOW_BYTE_TERM	484,14962
	#define HIGH_BYTE_TERM	485,14995
	#define BUSTYPE_PCI	486,15029
#define SUPPORT_16TAR_32LUN	489,15064
#define SOFT_RESET	490,15101
#define EXTENDED_TRANSLATION	491,15130
#define POST_ALL_UNDERRRUNS	492,15168
#define FLAG_SCAM_ENABLED	493,15205
#define FLAG_SCAM_LEVEL2	494,15240
#define HARPOON_FAMILY 499,15278
#define ISA_BUS_CARD 502,15315
#define EISA_BUS_CARD 503,15350
#define PCI_BUS_CARD 504,15385
#define VESA_BUS_CARD 505,15420
typedef struct _SCCB _SCCB513,15610
   } SCCB;SCCB559,16827
#define SCCB_SIZE 561,16839
#define SCSI_INITIATOR_COMMAND 567,16889
#define TARGET_MODE_COMMAND 568,16928
#define SCATTER_GATHER_COMMAND 569,16967
#define RESIDUAL_COMMAND 570,17006
#define RESIDUAL_SG_COMMAND 571,17045
#define RESET_COMMAND 572,17084
#define F_USE_CMD_Q 575,17125
#define TAG_TYPE_MASK 576,17198
#define TAG_Q_MASK 577,17270
#define SCCB_DATA_XFER_OUT 578,17308
#define SCCB_DATA_XFER_IN 579,17362
#define FOURTEEN_BYTES 582,17417
#define NO_AUTO_REQUEST_SENSE 583,17491
#define BUS_FREE_ST 586,17565
#define SELECT_ST 587,17598
#define SELECT_BDR_ST 588,17624
#define SELECT_SN_ST 589,17687
#define SELECT_WN_ST 590,17743
#define SELECT_Q_ST 591,17804
#define COMMAND_ST 592,17863
#define DATA_OUT_ST 593,17889
#define DATA_IN_ST 594,17915
#define DISCONNECT_ST 595,17941
#define STATUS_ST 596,17967
#define ABORT_ST 597,17994
#define MESSAGE_ST 598,18021
#define F_HOST_XFER_DIR 601,18050
#define F_ALL_XFERRED 602,18094
#define F_SG_XFER 603,18138
#define F_AUTO_SENSE 604,18182
#define F_ODD_BALL_CNT 605,18226
#define F_NO_DATA_YET 606,18270
#define F_STATUSLOADED 609,18316
#define F_MSGLOADED 610,18360
#define F_DEV_SELECTED 611,18404
#define SCCB_COMPLETE 614,18450
#define SCCB_DATA_UNDER_RUN 615,18527
#define SCCB_SELECTION_TIMEOUT 616,18568
#define SCCB_DATA_OVER_RUN 617,18645
#define SCCB_UNEXPECTED_BUS_FREE 618,18686
#define SCCB_PHASE_SEQUENCE_FAIL 619,18758
#define SCCB_INVALID_OP_CODE 621,18841
#define SCCB_INVALID_SCCB 622,18917
#define SCCB_GROSS_FW_ERR 623,18994
#define SCCB_BM_ERR 624,19057
#define SCCB_PARITY_ERR 625,19122
   #define  HBA_AUTO_SENSE_FAIL 630,19218
   #define  HBA_TQ_REJECTED 631,19264
   #define  HBA_UNSUPORTED_MSG 632,19310
   #define  HBA_HW_ERROR 633,19356
   #define  HBA_ATN_NOT_RESPONDED 634,19402
   #define  HBA_SCSI_RESET_BY_ADAPTER 635,19448
   #define  HBA_SCSI_RESET_BY_TARGET 636,19492
   #define  HBA_WRONG_CONNECTION 637,19536
   #define  HBA_BUS_DEVICE_RESET 638,19580
   #define  HBA_ABORT_QUEUE 639,19624
   #define SCCB_INVALID_DIRECTION 643,19713
   #define SCCB_DUPLICATE_SCCB 644,19789
   #define SCCB_SCSI_RST 645,19855
#define SCCB_IN_PROCESS 650,19963
#define SCCB_SUCCESS 651,20003
#define SCCB_ABORT 652,20043
#define SCCB_NOT_FOUND 653,20083
#define SCCB_ERROR 654,20123
#define SCCB_INVALID 655,20163
#define SCCB_SIZE 657,20204
#define __blx30_H__731,22577
#define  ORION_FW_REV 735,22624
#define HARP_REVD 740,22660
#define QUEUE_DEPTH 744,22702
#define QUEUE_DEPTH 746,22789
#define	MAX_MB_CARDS	749,22899
#define WIDE_SCSI 751,22977
      #define MAX_SCSI_TAR 755,23047
      #define MAX_LUN 756,23080
		#define LUN_MASK	757,23112
      #define MAX_SCSI_TAR 759,23147
      #define MAX_LUN 760,23180
		#define LUN_MASK	761,23213
   #define MAX_SCSI_TAR 765,23257
   #define MAX_LUN 766,23286
	#define LUN_MASK	767,23315
#define SG_BUF_CNT 771,23372
#define SG_BUF_CNT 773,23453
#define SG_ELEMENT_SIZE 776,23536
#define SG_LOCAL_MASK 777,23604
#define SG_ELEMENT_MASK 778,23640
	#define OPC_DECODE_NORMAL 782,23705
	#define RD_HARPOON(RD_HARPOON790,23809
	#define RDW_HARPOON(RDW_HARPOON791,23870
	#define WR_HARPOON(WR_HARPOON792,23931
	#define WRW_HARPOON(WRW_HARPOON793,23997
	#define RD_HARP32(RD_HARP32795,24064
	#define WR_HARP32(WR_HARP32806,24668
	#define RD_HARPOON(RD_HARPOON819,25353
	#define RDW_HARPOON(RDW_HARPOON820,25422
	#define RD_HARP32(RD_HARP32821,25491
	#define WR_HARPOON(WR_HARPOON822,25570
	#define WRW_HARPOON(WRW_HARPOON823,25644
	#define WR_HARP32(WR_HARP32824,25720
	#define RD_HARPOON(RD_HARPOON828,25904
	#define RDW_HARPOON(RDW_HARPOON829,25970
	#define RD_HARP32(RD_HARP32830,26036
	#define WR_HARPOON(WR_HARPOON831,26124
	#define WRW_HARPOON(WRW_HARPOON832,26203
	#define WR_HARP32(WR_HARP32833,26282
	#define RD_HARPOON(RD_HARPOON837,26429
	#define RDW_HARPOON(RDW_HARPOON838,26497
	#define RD_HARP32(RD_HARP32839,26565
	#define WR_HARPOON(WR_HARPOON840,26655
	#define WRW_HARPOON(WRW_HARPOON841,26738
	#define WR_HARP32(WR_HARP32842,26822
	#define RD_HARPOON(RD_HARPOON846,26947
	#define RDW_HARPOON(RDW_HARPOON847,27021
	#define RD_HARP32(RD_HARP32848,27095
	#define WR_HARPOON(WR_HARPOON849,27183
	#define WRW_HARPOON(WRW_HARPOON850,27262
	#define WR_HARP32(WR_HARP32851,27343
	#define RD_HARPOON(RD_HARPOON856,27482
	#define RDW_HARPOON(RDW_HARPOON857,27556
	#define RD_HARP32(RD_HARP32858,27630
	#define WR_HARPOON(WR_HARPOON859,27718
	#define WRW_HARPOON(WRW_HARPOON860,27797
	#define WR_HARP32(WR_HARP32861,27878
#define __TARGET__887,28580
#define  TAR_SYNC_MASK 893,28650
#define  SYNC_UNKNOWN 894,28693
#define  SYNC_TRYING 895,28725
#define  SYNC_SUPPORTED 896,28767
#define  TAR_WIDE_MASK 898,28811
#define  WIDE_DISABLED 899,28854
#define  WIDE_ENABLED 900,28886
#define  WIDE_NEGOCIATED 901,28928
#define  TAR_TAG_Q_MASK 903,28963
#define  TAG_Q_UNKNOWN 904,29006
#define  TAG_Q_TRYING 905,29038
#define  TAG_Q_REJECT 906,29080
#define  TAG_Q_SUPPORTED 907,29114
#define  TAR_ALLOW_DISC 909,29158
#define  EE_SYNC_MASK 912,29194
#define  EE_SYNC_ASYNC 913,29237
#define  EE_SYNC_5MB 914,29269
#define  EE_SYNC_10MB 915,29303
#define  EE_SYNC_20MB 916,29337
#define  EE_ALLOW_DISC 918,29381
#define  EE_WIDE_SCSI 919,29415
   typedef struct SCCBMgr_tar_info near *PSCCBMgr_tar_info;PSCCBMgr_tar_info923,29468
   typedef struct SCCBMgr_tar_info far *PSCCBMgr_tar_info;PSCCBMgr_tar_info926,29548
   typedef struct SCCBMgr_tar_info *PSCCBMgr_tar_info;PSCCBMgr_tar_info929,29614
typedef struct SCCBMgr_tar_info SCCBMgr_tar_info934,29679
} SCCBMGR_TAR_INFO;SCCBMGR_TAR_INFO947,30057
typedef struct NVRAMInfo NVRAMInfo949,30078
}NVRAMINFO;NVRAMINFO963,30790
typedef NVRAMINFO near *PNVRamInfo;PNVRamInfo966,30820
typedef NVRAMINFO far *PNVRamInfo;PNVRamInfo968,30876
typedef NVRAMINFO *PNVRamInfo;PNVRamInfo970,30917
#define	MODEL_LT	973,30956
#define	MODEL_DL	974,30976
#define	MODEL_LW	975,30996
#define	MODEL_DW	976,31016
typedef struct SCCBcard SCCBcard979,31038
}SCCBCARD;SCCBCARD1003,31456
typedef struct SCCBcard near *PSCCBcard;PSCCBcard1006,31485
typedef struct SCCBcard far *PSCCBcard;PSCCBcard1008,31546
typedef struct SCCBcard *PSCCBcard;PSCCBcard1010,31592
#define F_TAG_STARTED	1014,31637
#define F_CONLUN_IO	1015,31665
#define F_DO_RENEGO	1016,31692
#define F_NO_FILTER	1017,31719
#define F_GREEN_PC	1018,31746
#define F_HOST_XFER_ACT	1019,31772
#define F_NEW_SCCB_CMD	1020,31802
#define F_UPDATE_EEPROM	1021,31831
#define  ID_STRING_LENGTH 1024,31863
#define  TYPE_CODE0 1025,31893
#define  TYPE_CODE1 1027,31966
#define  SLV_TYPE_CODE0 1029,32024
#define  ASSIGN_ID 1031,32102
#define  SET_P_FLAG 1032,32128
#define  CFG_CMPLT 1033,32154
#define  DOM_MSTR 1034,32180
#define  SYNC_PTRN 1035,32206
#define  ID_0_7 1037,32233
#define  ID_8_F 1038,32259
#define  ID_10_17 1039,32285
#define  ID_18_1F 1040,32311
#define  MISC_CODE 1041,32337
#define  CLR_P_FLAG 1042,32363
#define  LOCATE_ON 1043,32389
#define  LOCATE_OFF 1044,32415
#define  LVL_1_MST 1046,32442
#define  LVL_2_MST 1047,32468
#define  DOM_LVL_2 1048,32494
#define  INIT_SELTD 1051,32522
#define  LEVEL2_TAR 1052,32548
enum scam_id_st scam_id_st1055,32576
enum scam_id_st { ID0,1055,32576
enum scam_id_st { ID0,ID1,1055,32576
enum scam_id_st { ID0,ID1,ID2,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,ID6,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,ID6,ID7,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,ID6,ID7,ID8,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,ID6,ID7,ID8,ID9,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,ID6,ID7,ID8,ID9,ID10,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,ID6,ID7,ID8,ID9,ID10,ID11,1055,32576
enum scam_id_st { ID0,ID1,ID2,ID3,ID4,ID5,ID6,ID7,ID8,ID9,ID10,ID11,ID12,1055,32576
                  ID13,1056,32650
                  ID13,ID14,1056,32650
                  ID13,ID14,ID15,1056,32650
                  ID13,ID14,ID15,ID_UNUSED,1056,32650
                  ID13,ID14,ID15,ID_UNUSED,ID_UNASSIGNED,1056,32650
                  ID13,ID14,ID15,ID_UNUSED,ID_UNASSIGNED,ID_ASSIGNED,1056,32650
                  ID13,ID14,ID15,ID_UNUSED,ID_UNASSIGNED,ID_ASSIGNED,LEGACY,1056,32650
                  CLR_PRIORITY,1057,32727
                  CLR_PRIORITY,NO_ID_AVAIL 1057,32727
typedef struct SCCBscam_info SCCBscam_info1059,32774
} SCCBSCAM_INFO, *PSCCBSCAM_INFO;PSCCBSCAM_INFO1064,32878
#define __SCSI_H__1086,33461
#define  SCSI_TEST_UNIT_READY 1090,33483
#define  SCSI_REZERO_UNIT 1091,33521
#define  SCSI_REQUEST_SENSE 1092,33559
#define  SCSI_FORMAT_UNIT 1093,33597
#define  SCSI_REASSIGN 1094,33635
#define  SCSI_READ 1095,33673
#define  SCSI_WRITE 1096,33711
#define  SCSI_SEEK 1097,33749
#define  SCSI_INQUIRY 1098,33787
#define  SCSI_MODE_SELECT 1099,33825
#define  SCSI_RESERVE_UNIT 1100,33863
#define  SCSI_RELEASE_UNIT 1101,33901
#define  SCSI_MODE_SENSE 1102,33939
#define  SCSI_START_STOP_UNIT 1103,33977
#define  SCSI_SEND_DIAGNOSTIC 1104,34015
#define  SCSI_READ_CAPACITY 1105,34053
#define  SCSI_READ_EXTENDED 1106,34091
#define  SCSI_WRITE_EXTENDED 1107,34129
#define  SCSI_SEEK_EXTENDED 1108,34167
#define  SCSI_WRITE_AND_VERIFY 1109,34205
#define  SCSI_VERIFY 1110,34243
#define  SCSI_READ_DEFECT_DATA 1111,34281
#define  SCSI_WRITE_BUFFER 1112,34319
#define  SCSI_READ_BUFFER 1113,34357
#define  SCSI_RECV_DIAGNOSTIC 1114,34395
#define  SCSI_READ_LONG 1115,34433
#define  SCSI_WRITE_LONG 1116,34471
#define  SCSI_LAST_SCSI_CMND 1117,34509
#define  SCSI_INVALID_CMND 1118,34558
#define  SSGOOD 1122,34599
#define  SSCHECK 1123,34637
#define  SSCOND_MET 1124,34675
#define  SSBUSY 1125,34713
#define  SSRESERVATION_CONFLICT 1126,34751
#define  SSCMD_TERM 1127,34789
#define  SSQ_FULL 1128,34827
#define  SKNO_SEN 1131,34867
#define  SKRECOV_ERR 1132,34905
#define  SKNOT_RDY 1133,34943
#define  SKMED_ERR 1134,34981
#define  SKHW_ERR 1135,35019
#define  SKILL_REQ 1136,35057
#define  SKUNIT_ATTN 1137,35095
#define  SKDATA_PROTECT 1138,35133
#define  SKBLNK_CHK 1139,35171
#define  SKCPY_ABORT 1140,35209
#define  SKABORT_CMD 1141,35247
#define  SKEQUAL 1142,35285
#define  SKVOL_OVF 1143,35323
#define  SKMIS_CMP 1144,35361
#define  SMCMD_COMP 1147,35401
#define  SMEXT 1148,35439
#define  SMSAVE_DATA_PTR 1149,35477
#define  SMREST_DATA_PTR 1150,35515
#define  SMDISC 1151,35553
#define  SMINIT_DETEC_ERR 1152,35591
#define  SMABORT 1153,35629
#define  SMREJECT 1154,35667
#define  SMNO_OP 1155,35705
#define  SMPARITY 1156,35743
#define  SMDEV_RESET 1157,35781
#define	SMABORT_TAG	1158,35819
#define	SMINIT_RECOVERY	1159,35848
#define	SMREL_RECOVERY	1160,35879
#define  SMIDENT 1162,35911
#define  DISC_PRIV 1163,35949
#define  SMSYNC 1166,35989
#define  SM10MBS 1167,36027
#define  SM5MBS 1168,36091
#define  SMOFFSET 1169,36155
#define  SMWDTR 1170,36219
#define  SM8BIT 1171,36257
#define  SM16BIT 1172,36295
#define  SM32BIT 1173,36333
#define  SMIGNORWR 1174,36371
#define  ARBITRATION_DELAY 1177,36441
#define  BUS_SETTLE_DELAY 1178,36515
#define  BUS_CLEAR_DELAY 1179,36569
#define  SPHASE_TO 1183,36626
#define  SCMD_TO 1184,36701
#define  SIX_BYTE_CMD 1188,36773
#define  TEN_BYTE_CMD 1189,36811
#define  TWELVE_BYTE_CMD 1190,36849
#define  ASYNC 1192,36888
#define  PERI25NS 1193,36926
#define  SYNC10MBS 1194,37002
#define  SYNC5MBS 1195,37040
#define  MAX_OFFSET 1196,37078
#define __EEPROM__1218,37707
#define  EEPROM_WD_CNT 1222,37753
#define  EEPROM_CHECK_SUM 1224,37785
#define  FW_SIGNATURE 1225,37814
#define  MODEL_NUMB_0 1226,37843
#define  MODEL_NUMB_1 1227,37872
#define  MODEL_NUMB_2 1228,37901
#define  MODEL_NUMB_3 1229,37930
#define  MODEL_NUMB_4 1230,37959
#define  MODEL_NUMB_5 1231,37988
#define  IO_BASE_ADDR 1232,38017
#define  IRQ_NUMBER 1233,38047
#define  PCI_INT_PIN 1234,38077
#define  BUS_DELAY 1235,38107
#define  SYSTEM_CONFIG 1236,38183
#define  SCSI_CONFIG 1237,38213
#define  BIOS_CONFIG 1238,38243
#define  SPIN_UP_DELAY 1239,38273
#define  SCAM_CONFIG 1240,38303
#define  ADAPTER_SCSI_ID 1241,38333
#define  IGNORE_B_SCAN 1244,38365
#define  SEND_START_ENA 1245,38395
#define  DEVICE_ENABLE 1246,38425
#define  SYNC_RATE_TBL 1248,38456
#define  SYNC_RATE_TBL01 1249,38486
#define  SYNC_RATE_TBL23 1250,38516
#define  SYNC_RATE_TBL45 1251,38546
#define  SYNC_RATE_TBL67 1252,38576
#define  SYNC_RATE_TBL89 1253,38606
#define  SYNC_RATE_TBLab 1254,38636
#define  SYNC_RATE_TBLcd 1255,38666
#define  SYNC_RATE_TBLef 1256,38696
#define  EE_SCAMBASE 1260,38729
   #define  DOM_MASTER 1264,38763
   #define  SCAM_ENABLED 1265,38808
   #define  SCAM_LEVEL2 1266,38842
	#define	RENEGO_ENA	1269,38878
	#define	CONNIO_ENA	1270,38908
   #define  GREEN_PC_ENA 1271,38938
   #define  AUTO_RATE_00 1274,38976
   #define  AUTO_RATE_05 1275,39006
   #define  AUTO_RATE_10 1276,39036
   #define  AUTO_RATE_20 1277,39066
   #define  WIDE_NEGO_BIT 1279,39097
   #define  DISC_ENABLE_BIT 1280,39134
#define __HARPOON__1306,39751
   #define  hp_vendor_id_0 1309,39773
      #define  ORION_VEND_0 1310,39822
   #define  hp_vendor_id_1 1312,39859
      #define  ORION_VEND_1 1313,39908
   #define  hp_device_id_0 1315,39944
      #define  ORION_DEV_0 1316,39993
   #define  hp_device_id_1 1318,40030
      #define  ORION_DEV_1 1319,40079
   #define  hp_sub_vendor_id_0 1324,40205
   #define  hp_sub_vendor_id_1 1325,40254
   #define  hp_sub_device_id_0 1326,40303
   #define  hp_sub_device_id_1 1327,40352
   #define  hp_dual_addr_lo 1330,40403
   #define  hp_dual_addr_lmi 1331,40441
   #define  hp_dual_addr_hmi 1332,40479
   #define  hp_dual_addr_hi 1333,40517
   #define  hp_semaphore 1335,40556
      #define SCCB_MGR_ACTIVE 1336,40594
      #define TICKLE_ME 1337,40634
      #define SCCB_MGR_PRESENT 1338,40674
      #define BIOS_IN_USE 1339,40714
   #define  hp_user_defined_D 1341,40755
   #define  hp_reserved_E 1343,40794
   #define  hp_sys_ctrl 1345,40833
      #define  STOP_CLK 1347,40872
      #define  DRVR_RST 1348,40947
      #define  HALT_MACH 1349,41026
      #define  HARD_ABORT 1350,41100
      #define  DIAG_MODE 1351,41174
      #define  BM_ABORT_TMOUT 1353,41249
   #define  hp_sys_cfg 1355,41328
      #define  DONT_RST_FIFO 1357,41367
   #define  hp_host_ctrl0 1360,41441
      #define  DUAL_ADDR_MODE 1362,41480
      #define  IO_MEM_SPACE 1363,41551
      #define  RESOURCE_LOCK 1364,41618
      #define  IGNOR_ACCESS_ERR 1365,41686
      #define  HOST_INT_EDGE 1366,41753
      #define  SIX_CLOCKS 1367,41835
      #define  DMA_EVEN_PARITY 1368,41908
   #define  hp_reserved_12 1374,42026
   #define  hp_host_blk_cnt 1376,42065
      #define  XFER_BLK1 1378,42104
      #define  XFER_BLK2 1379,42179
      #define  XFER_BLK4 1380,42254
      #define  XFER_BLK8 1381,42329
      #define  XFER_BLK16 1382,42404
      #define  XFER_BLK32 1383,42479
      #define  XFER_BLK64 1384,42554
      #define  BM_THRESHOLD 1386,42633
   #define  hp_reserved_14 1389,42714
   #define  hp_reserved_15 1390,42752
   #define  hp_reserved_16 1391,42790
   #define  hp_int_mask 1393,42829
      #define  INT_CMD_COMPL 1395,42868
      #define  INT_EXT_STATUS 1396,42939
      #define  INT_SCSI 1397,43010
      #define  INT_FIFO_RDY 1398,43081
   #define  hp_xfer_cnt_lo 1401,43154
   #define  hp_xfer_cnt_mi 1402,43192
   #define  hp_xfer_cnt_hi 1403,43230
   #define  hp_xfer_cmd 1404,43268
      #define  XFER_HOST_DMA 1406,43307
      #define  XFER_DMA_HOST 1407,43386
      #define  XFER_HOST_MPU 1408,43466
      #define  XFER_MPU_HOST 1409,43546
      #define  XFER_DMA_MPU 1410,43626
      #define  XFER_MPU_DMA 1411,43706
      #define  SET_SEMAPHORE 1412,43786
      #define  XFER_NOP 1413,43866
      #define  XFER_MB_MPU 1414,43946
      #define  XFER_MB_DMA 1415,44023
      #define  XFER_HOST_AUTO 1418,44102
      #define  XFER_HOST_8BIT 1419,44179
      #define  XFER_HOST_16BIT 1420,44256
      #define  XFER_HOST_32BIT 1421,44333
      #define  XFER_DMA_8BIT 1423,44411
      #define  XFER_DMA_16BIT 1424,44488
      #define  DISABLE_INT 1426,44566
      #define  HOST_WRT_CMD 1428,44646
      #define  HOST_RD_CMD 1429,44744
      #define  WIDE_HOST_WRT_CMD 1430,44842
      #define  WIDE_HOST_RD_CMD 1431,44941
   #define  hp_host_addr_lo 1433,45041
   #define  hp_host_addr_lmi 1434,45079
   #define  hp_host_addr_hmi 1435,45117
   #define  hp_host_addr_hi 1436,45155
   #define  hp_pio_data 1438,45194
   #define  hp_reserved_21 1439,45232
   #define  hp_ee_ctrl 1440,45270
      #define  EXT_ARB_ACK 1442,45309
      #define  SCSI_TERM_ENA_H 1443,45349
      #define  SEE_MS 1444,45423
      #define  SEE_CS 1445,45463
      #define  SEE_CLK 1446,45503
      #define  SEE_DO 1447,45543
      #define  SEE_DI 1448,45583
      #define  EE_READ 1450,45624
      #define  EE_WRITE 1451,45662
      #define  EWEN 1452,45700
      #define  EWEN_ADDR 1453,45738
      #define  EWDS 1454,45778
      #define  EWDS_ADDR 1455,45816
   #define  hp_brdctl 1457,45857
      #define  DAT_7 1459,45896
      #define  DAT_6 1460,45936
      #define  DAT_5 1461,45976
      #define  BRD_STB 1462,46016
      #define  BRD_CS 1463,46056
      #define  BRD_WR 1464,46096
   #define  hp_reserved_24 1466,46137
   #define  hp_reserved_25 1467,46175
   #define  hp_bm_ctrl 1472,46217
      #define  SCSI_TERM_ENA_L 1474,46256
      #define  FLUSH_XFER_CNTR 1475,46339
      #define  BM_XFER_MIN_8 1476,46409
      #define  BIOS_ENA 1477,46488
      #define  FORCE1_XFER 1478,46560
      #define  FAST_SINGLE 1479,46641
      #define  BMCTRL_DEFAULT 1481,46692
   #define  hp_reserved_27 1483,46768
   #define  hp_sg_addr 1485,46807
   #define  hp_page_ctrl 1486,46845
      #define  SCATTER_EN 1488,46884
      #define  SGRAM_ARAM 1489,46927
      #define  BIOS_SHADOW 1490,46970
      #define  G_INT_DISABLE 1491,47013
      #define  NARROW_SCSI_CARD 1492,47091
   #define  hp_reserved_2A 1494,47168
   #define  hp_pci_cmd_cfg 1495,47206
      #define  IO_SPACE_ENA 1497,47245
      #define  MEM_SPACE_ENA 1498,47309
      #define  BUS_MSTR_ENA 1499,47376
      #define  MEM_WI_ENA 1500,47451
      #define  PAR_ERR_RESP 1501,47526
   #define  hp_reserved_2C 1503,47604
   #define  hp_pci_stat_cfg 1505,47643
      #define  DATA_PARITY_ERR 1507,47682
      #define  REC_TARGET_ABORT 1508,47725
      #define  REC_MASTER_ABORT 1509,47794
      #define  SIG_SYSTEM_ERR 1510,47863
      #define  DETECTED_PAR_ERR 1511,47906
   #define  hp_reserved_2E 1513,47950
   #define  hp_sys_status 1515,47989
      #define  SLV_DATA_RDY 1517,48028
      #define  XFER_CNT_ZERO 1518,48092
      #define  BM_FIFO_EMPTY 1519,48160
      #define  BM_FIFO_FULL 1520,48218
      #define  HOST_OP_DONE 1521,48275
      #define  DMA_OP_DONE 1522,48342
      #define  SLV_OP_DONE 1523,48408
      #define  PWR_ON_FLAG 1524,48476
   #define  hp_reserved_30 1526,48538
   #define  hp_host_status0 1528,48577
      #define  HOST_TERM 1530,48616
      #define  HOST_TRSHLD 1531,48683
      #define  CONNECTED_2_HOST 1532,48750
   #define  hp_reserved_32 1534,48818
   #define  hp_rev_num 1536,48857
      #define  REV_A_CONST 1538,48896
      #define  REV_B_CONST 1539,48934
   #define  hp_stack_data 1541,48973
   #define  hp_stack_addr 1542,49011
   #define  hp_ext_status 1544,49050
      #define  BM_FORCE_OFF 1546,49089
      #define  PCI_TGT_ABORT 1547,49168
      #define  PCI_DEV_TMOUT 1548,49250
      #define  FIFO_TC_NOT_ZERO 1549,49317
      #define  CHIP_RST_OCCUR 1550,49398
      #define  CMD_ABORTED 1551,49463
      #define  BM_PARITY_ERR 1552,49526
      #define  PIO_OVERRUN 1553,49605
      #define  BM_CMD_BUSY 1554,49671
      #define  BAD_EXT_STATUS 1555,49751
   #define  hp_int_status 1558,49896
      #define  BM_CMD_CMPL 1560,49941
      #define  EXT_STATUS_ON 1561,50016
      #define  SCSI_INTERRUPT 1562,50088
      #define  BM_FIFO_RDY 1563,50168
      #define  INT_ASSERTED 1564,50211
      #define  SRAM_BUSY 1565,50259
      #define  CMD_REG_BUSY 1566,50330
   #define  hp_fifo_cnt 1569,50411
   #define  hp_curr_host_cnt 1570,50449
   #define  hp_reserved_3A 1571,50487
   #define  hp_fifo_in_addr 1572,50525
   #define  hp_fifo_out_addr 1574,50564
   #define  hp_reserved_3D 1575,50602
   #define  hp_reserved_3E 1576,50640
   #define  hp_reserved_3F 1577,50678
   extern USHORT default_intena;1581,50719
   #define  hp_intena	1583,50753
      #define  RESET	1585,50783
      #define  PROG_HLT	1586,50814
      #define  PARITY	1587,50850
      #define  FIFO	1588,50882
      #define  SEL	1589,50912
      #define  SCAM_SEL	1590,50941
      #define  RSEL	1591,50976
      #define  TIMEOUT	1592,51006
      #define  BUS_FREE	1593,51039
      #define  XFER_CNT_0	1594,51074
      #define  PHASE	1595,51110
      #define  IUNKWN	1596,51142
      #define  ICMD_COMP	1597,51175
      #define  ITICKLE	1598,51210
      #define  IDO_STRT	1599,51244
      #define  ITAR_DISC	1600,51278
      #define  AUTO_INT	1601,51312
      #define  CLR_ALL_INT	1602,51383
      #define  CLR_ALL_INT_1	1603,51418
   #define  hp_intstat	1605,51456
   #define  hp_scsisig 1607,51487
      #define  SCSI_SEL 1609,51526
      #define  SCSI_BSY 1610,51566
      #define  SCSI_REQ 1611,51606
      #define  SCSI_ACK 1612,51646
      #define  SCSI_ATN 1613,51686
      #define  SCSI_CD 1614,51726
      #define  SCSI_MSG 1615,51766
      #define  SCSI_IOBIT 1616,51806
      #define  S_SCSI_PHZ 1618,51847
      #define  S_CMD_PH 1619,51903
      #define  S_MSGO_PH 1620,51959
      #define  S_STAT_PH 1621,52015
      #define  S_MSGI_PH 1622,52071
      #define  S_DATAI_PH 1623,52127
      #define  S_DATAO_PH 1624,52183
      #define  S_ILL_PH 1625,52221
   #define  hp_scsictrl_0 1627,52278
      #define  NO_ARB 1629,52317
      #define  SEL_TAR 1630,52357
      #define  ENA_ATN 1631,52397
      #define  ENA_RESEL 1632,52437
      #define  SCSI_RST 1633,52477
      #define  ENA_SCAM_SEL 1634,52517
   #define  hp_portctrl_0 1638,52560
      #define  SCSI_PORT 1640,52599
      #define  SCSI_INBIT 1641,52639
      #define  DMA_PORT 1642,52679
      #define  DMA_RD 1643,52719
      #define  HOST_PORT 1644,52759
      #define  HOST_WRT 1645,52799
      #define  SCSI_BUS_EN 1646,52839
      #define  START_TO 1647,52879
   #define  hp_scsireset 1649,52920
      #define  SCSI_TAR 1651,52959
      #define  SCSI_INI 1652,52999
      #define  SCAM_EN 1653,53039
      #define  ACK_HOLD 1654,53079
      #define  DMA_RESET 1655,53119
      #define  HPSCSI_RESET 1656,53159
      #define  PROG_RESET 1657,53199
      #define  FIFO_CLR 1658,53239
   #define  hp_xfercnt_0 1660,53280
   #define  hp_xfercnt_1 1661,53318
   #define  hp_xfercnt_2 1662,53356
   #define  hp_xfercnt_3 1663,53394
   #define  hp_fifodata_0 1665,53433
   #define  hp_fifodata_1 1666,53471
   #define  hp_addstat 1667,53509
      #define  SCAM_TIMER 1669,53548
      #define  AUTO_RUNNING 1670,53588
      #define  FAST_SYNC 1671,53628
      #define  SCSI_MODE8 1672,53668
      #define  SCSI_PAR_ERR 1673,53708
   #define  hp_prgmcnt_0 1675,53749
      #define  AUTO_PC_MASK 1677,53788
   #define  hp_selfid_0 1679,53827
   #define  hp_selfid_1 1680,53865
   #define  hp_arb_id 1681,53903
      #define  ARB_ID 1683,53942
   #define  hp_select_id 1685,54012
      #define  RESEL_ID 1687,54051
      #define  SELECT_ID 1688,54120
   #define  hp_synctarg_base 1690,54190
   #define  hp_synctarg_12 1691,54228
   #define  hp_synctarg_13 1692,54266
   #define  hp_synctarg_14 1693,54304
   #define  hp_synctarg_15 1694,54342
   #define  hp_synctarg_8 1696,54381
   #define  hp_synctarg_9 1697,54419
   #define  hp_synctarg_10 1698,54457
   #define  hp_synctarg_11 1699,54495
   #define  hp_synctarg_4 1701,54534
   #define  hp_synctarg_5 1702,54572
   #define  hp_synctarg_6 1703,54610
   #define  hp_synctarg_7 1704,54648
   #define  hp_synctarg_0 1706,54687
   #define  hp_synctarg_1 1707,54725
   #define  hp_synctarg_2 1708,54763
   #define  hp_synctarg_3 1709,54801
      #define  RATE_20MB 1711,54840
      #define  RATE_10MB 1712,54878
      #define  RATE_6_6MB 1713,54934
      #define  RATE_5MB 1714,54993
      #define  RATE_4MB 1715,55049
      #define  RATE_3_33MB 1716,55105
      #define  RATE_2_85MB 1717,55161
      #define  RATE_2_5MB 1718,55217
      #define  NEXT_CLK 1719,55273
      #define  SLOWEST_SYNC 1720,55313
      #define  NARROW_SCSI 1721,55369
      #define  SYNC_OFFSET 1722,55409
      #define  DEFAULT_ASYNC 1723,55478
      #define  DEFAULT_OFFSET 1724,55516
   #define  hp_autostart_0 1726,55555
   #define  hp_autostart_1 1727,55593
   #define  hp_autostart_2 1728,55631
   #define  hp_autostart_3 1729,55669
      #define  DISABLE 1733,55710
      #define  AUTO_IMMED 1734,55739
      #define  SELECT 1735,55775
      #define  RESELECT 1736,55806
      #define  BUSFREE 1737,55846
      #define  XFER_0 1738,55877
      #define  END_DATA 1739,55917
      #define  MSG_PHZ 1740,55957
   #define  hp_gp_reg_0 1742,56005
   #define  hp_gp_reg_1 1743,56043
   #define  hp_gp_reg_2 1744,56081
   #define  hp_gp_reg_3 1745,56119
   #define  hp_seltimeout 1747,56158
      #define  TO_2ms 1750,56198
      #define  TO_4ms 1751,56256
      #define  TO_5ms 1753,56315
      #define  TO_10ms 1754,56373
      #define  TO_250ms 1755,56431
      #define  TO_290ms 1756,56489
      #define  TO_350ms 1757,56547
      #define  TO_417ms 1758,56605
   #define  hp_clkctrl_0 1760,56664
      #define  PWR_DWN 1762,56703
      #define  ACTdeassert 1763,56743
      #define  ATNonErr 1764,56783
      #define  CLK_30MHZ 1765,56823
      #define  CLK_40MHZ 1766,56863
      #define  CLK_50MHZ 1767,56914
      #define  CLKCTRL_DEFAULT 1769,56955
   #define  hp_fiforead 1771,57015
   #define  hp_fifowrite 1772,57053
   #define  hp_offsetctr 1774,57092
   #define  hp_xferstat 1775,57130
      #define  FIFO_FULL 1777,57169
      #define  FIFO_EMPTY 1778,57209
      #define  FIFO_MASK 1779,57249
      #define  FIFO_LEN 1780,57326
   #define  hp_portctrl_1 1782,57365
      #define  EVEN_HOST_P 1784,57404
      #define  INVT_SCSI 1785,57444
      #define  CHK_SCSI_P 1786,57484
      #define  HOST_MODE8 1787,57524
      #define  HOST_MODE16 1788,57564
   #define  hp_xfer_pad 1790,57603
      #define  ID_UNLOCK 1792,57642
      #define  XFER_PAD 1793,57682
   #define  hp_scsidata_0 1795,57723
   #define  hp_scsidata_1 1796,57761
   #define  hp_timer_0 1797,57799
   #define  hp_timer_1 1798,57837
   #define  hp_reserved_78 1800,57876
   #define  hp_reserved_79 1801,57914
   #define  hp_reserved_7A 1802,57952
   #define  hp_reserved_7B 1803,57990
   #define  hp_reserved_7C 1805,58029
   #define  hp_reserved_7D 1806,58067
   #define  hp_reserved_7E 1807,58105
   #define  hp_reserved_7F 1808,58143
   #define  hp_aramBase 1810,58182
   #define  BIOS_DATA_OFFSET 1811,58220
   #define  BIOS_RELATIVE_CARD 1812,58258
      #define  AUTO_LEN 1817,58300
      #define  AR0 1818,58329
      #define  AR1 1819,58358
      #define  AR2 1820,58390
      #define  AR3 1821,58422
      #define  SDATA 1822,58466
      #define  NOP_OP 1824,58500
      #define  CRD_OP 1826,58555
      #define  CRR_OP 1828,58616
      #define  CBE_OP 1830,58677
      #define  CBN_OP 1832,58774
      #define  CPE_OP 1834,58867
      #define  CPN_OP 1836,58944
      #define  ADATA_OUT 1839,59026
      #define  ADATA_IN 1840,59063
      #define  ACOMMAND 1841,59098
      #define  ASTATUS 1842,59134
      #define  AMSG_OUT 1843,59180
      #define  AMSG_IN 1844,59226
      #define  AILLEGAL 1845,59280
      #define  BRH_OP 1848,59327
      #define  ALWAYS 1851,59383
      #define  EQUAL 1852,59412
      #define  NOT_EQ 1853,59444
      #define  TCB_OP 1855,59477
      #define  ATN_SET 1858,59562
      #define  ATN_RESET 1859,59597
      #define  XFER_CNT 1860,59632
      #define  FIFO_0 1861,59677
      #define  FIFO_NOT0 1862,59713
      #define  T_USE_SYNC0 1863,59759
      #define  MPM_OP 1866,59807
      #define  MDR_OP 1868,59880
      #define  MRR_OP 1870,59949
      #define  S_IDREG 1873,60016
      #define  D_AR0 1876,60065
      #define  D_AR1 1877,60094
      #define  D_AR2 1878,60125
      #define  D_AR3 1879,60156
      #define  D_SDATA 1880,60198
      #define  D_BUCKET 1881,60229
      #define  ADR_OP 1884,60282
      #define  ADS_OP 1886,60358
      #define  ODR_OP 1888,60413
      #define  ODS_OP 1890,60469
      #define  STR_OP 1892,60534
      #define  AINT_ENA1 1894,60601
      #define  AINT_STAT1 1895,60633
      #define  ASCSI_SIG 1896,60668
      #define  ASCSI_CNTL 1897,60703
      #define  APORT_CNTL 1898,60748
      #define  ARST_CNTL 1899,60784
      #define  AXFERCNT0 1900,60830
      #define  AXFERCNT1 1901,60876
      #define  AXFERCNT2 1902,60930
      #define  AFIFO_DATA 1903,60966
      #define  ASCSISELID 1904,61012
      #define  ASCSISYNC0 1905,61058
      #define  RAT_OP 1908,61114
      #define  SSI_OP 1910,61171
      #define  SSI_ITAR_DISC	1913,61220
      #define  SSI_IDO_STRT	1914,61266
      #define  SSI_IDI_STRT	1915,61310
      #define  SSI_ICMD_COMP	1917,61355
      #define  SSI_ITICKLE	1918,61401
      #define  SSI_IUNKWN	1920,61444
      #define  SSI_INO_CC	1921,61484
      #define  SSI_IRFAIL	1922,61524
      #define  NP 1925,61566
      #define  NTCMD 1926,61612
      #define  CMDPZ 1927,61673
      #define  DINT 1928,61722
      #define  DI 1929,61779
      #define  MI 1930,61823
      #define  DC 1931,61869
      #define  ST 1932,61923
      #define  UNKNWN 1933,61971
      #define  CC 1934,62025
      #define  TICK 1935,62087
      #define  RFAIL 1936,62148
      #define  SELCHK 1937,62202
      #define  ID_MSG_STRT 1940,62273
      #define  NON_TAG_ID_MSG 1941,62322
      #define  CMD_STRT 1942,62371
      #define  SYNC_MSGS 1943,62420
      #define  TAG_STRT 1949,62474
      #define  SELECTION_START 1950,62512
      #define  DISCONNECT_START 1951,62550
      #define  END_DATA_START 1952,62590
      #define  NONTAG_STRT 1953,62630
      #define  CMD_ONLY_STRT 1954,62670
      #define  TICKLE_STRT 1955,62711
      #define  SELCHK_STRT 1956,62749
#define mEEPROM_CLK_DELAY(mEEPROM_CLK_DELAY1961,62793
#define mWAIT_10MS(mWAIT_10MS1963,62858
#define CLR_XFER_CNT(CLR_XFER_CNT1966,62917
#define SET_XFER_CNT(SET_XFER_CNT1968,62983
#define GET_XFER_CNT(GET_XFER_CNT1970,63053
#define HP_SETUP_ADDR_CNT(HP_SETUP_ADDR_CNT1976,63390
#define HP_SETUP_ADDR_CNT(HP_SETUP_ADDR_CNT1984,63838
#define ACCEPT_MSG(ACCEPT_MSG1993,64264
#define ACCEPT_MSG_ATN(ACCEPT_MSG_ATN1997,64407
#define ACCEPT_STAT(ACCEPT_STAT2000,64564
#define ACCEPT_STAT_ATN(ACCEPT_STAT_ATN2003,64707
#define DISABLE_AUTO(DISABLE_AUTO2006,64865
#define ARAM_ACCESS(ARAM_ACCESS2009,64999
#define SGRAM_ACCESS(SGRAM_ACCESS2012,65141
#define MDISABLE_INT(MDISABLE_INT2015,65285
#define MENABLE_INT(MENABLE_INT2018,65431
extern SCCBCARD BL_Card[2281,74663
extern SCCBMGR_TAR_INFO sccbMgrTbl[2282,74699
   extern void (far *s_PhaseTbl[2286,74779
   extern void (far *s_PhaseTbl[8]) (ULONG,2286,74779
   extern void (far *s_PhaseTbl[8]) (ULONG, UCHAR)2286,74779
      extern void (*s_PhaseTbl[2289,74857
      extern void (*s_PhaseTbl[8]) (USHORT,2289,74857
      extern void (*s_PhaseTbl[8]) (USHORT, UCHAR)2289,74857
      extern void (*s_PhaseTbl[2291,74918
      extern void (*s_PhaseTbl[8]) (ULONG,2291,74918
      extern void (*s_PhaseTbl[8]) (ULONG, UCHAR)2291,74918
extern SCCBSCAM_INFO scamInfo[2295,74987
extern NVRAMINFO nvRamInfo[2296,75032
extern UCHAR temp_id_string[2298,75107
extern UCHAR scamHAString[2300,75161
extern UCHAR mbCards;2303,75192
extern UCHAR debug_int[2305,75234
extern UCHAR debug_index[2306,75281
   extern UCHAR first_time;2312,75418
   extern u08bits first_time;2318,75531
extern unsigned int SccbGlobalFlags;2326,75680
#define mOS_Lock(mOS_Lock2366,76657
#define mOS_UnLock(mOS_UnLock2367,76737
#define mOS_Lock(mOS_Lock2369,76850
#define mOS_UnLock(mOS_UnLock2370,76922
int SccbMgr_sense_adapter(2409,77853
USHORT SccbMgr_config_adapter(2716,85712
STATIC s16bits FP_PresenceCheck(2929,90557
STATIC s32bits probe_adapter(2975,92314
STATIC CARD_HANDLE init_adapter(3327,100901
void build_UCB(3534,106098
STATIC  int GetDevSyncRate(3628,108199
STATIC int SetDevSyncRate(3708,110207
int GetDevWideMode(3784,112244
int SetDevWideMode(3807,112689
void ReadNVRam(3884,114226
void WriteNVRam(3937,115320
void UpdateCheckSum(4017,117062
void SccbMgr_save_foreign_state(4040,117555
void SccbMgr_restore_foreign_state(4045,117621
void SccbMgr_restore_native_state(4049,117684
void SccbMgr_unload_card(4059,117850
void RNVRamData(4116,119154
UCHAR RdStack(4158,120160
void WrStack(4168,120375
u08bits ChkIfChipInitialized(4179,120619
void SccbMgr_start_sccb(4209,121499
s32bits SccbMgr_abort_sccb(4492,128380
u08bits SccbMgr_my_int(4630,131248
s32bits SccbMgr_isr(4674,132070
UCHAR SccbMgr_bad_isr(4954,139916
void SccbMgr_scsi_reset(5141,144438
void SccbMgr_timer_expired(5205,146314
USHORT SccbMgr_status(5227,146923
void SccbMgrTableInitAll(5241,147264
void SccbMgrTableInitCard(5266,147909
void SccbMgrTableInitTarget(5301,148747
void Debug_Load(5344,149687
SCCBMGR_TAR_INFO sccbMgrTbl[5395,150945
SCCBCARD BL_Card[5396,151015
SCCBSCAM_INFO scamInfo[5397,151056
NVRAMINFO nvRamInfo[5398,151110
void (far *s_PhaseTbl[5402,151176
void (far *s_PhaseTbl[8]) (ULONG,5402,151176
void (far *s_PhaseTbl[8]) (ULONG, UCHAR)5402,151176
UCHAR temp_id_string[5403,151226
void (*s_PhaseTbl[5405,151328
void (*s_PhaseTbl[8]) (ULONG,5405,151328
void (*s_PhaseTbl[8]) (ULONG, UCHAR)5405,151328
void (*s_PhaseTbl[5407,151380
UCHAR first_time 5411,151431
UCHAR mbCards 5414,151461
UCHAR scamHAString[5415,151480
USHORT default_intena 5420,151719
UCHAR    debug_int[5423,151767
UCHAR    debug_index[5424,151818
UCHAR    reserved_1[5425,151859
UCHAR sfm(5480,153293
void ssel(5557,155091
void sres(5909,163580
UCHAR GetTarLun(6198,169293
void SendMsg(6291,170917
void sdecm(6344,172133
void shandem(6529,176083
UCHAR sisyncn(6614,177626
void stsyncn(6693,179794
void sisyncr(6834,182800
UCHAR siwidn(6871,183972
void stwidn(6927,185579
void siwidr(7011,187296
void sssyncv(7046,188341
void sresb(7121,190060
void ssenss(7197,192069
void sxfrp(7247,193266
void schkdd(7333,195770
void sinits(7449,198376
void phaseDecode(7579,201910
void far phaseDataOut(7616,202689
void far phaseDataIn(7675,204045
void far phaseCommand(7730,205306
void far phaseStatus(7794,206709
void far phaseMsgOut(7824,207514
void far phaseMsgIn(7980,210527
void far phaseIllegal(8041,211715
void phaseChkFifo(8077,212548
void phaseBusFree(8174,214812
void autoLoadDefaultMap(8316,218600
void autoCmdCmplt(8432,223249
#define SHORT_WAIT 8699,231485
#define LONG_WAIT 8700,231517
void dataXferProcessor(8725,232600
void busMstrSGDataXferStart(8767,233552
void busMstrDataXferStart(8892,236380
UCHAR busMstrTimeOut(8979,238623
void hostDataXferAbort(9021,239574
void hostDataXferRestart(9308,246615
void scini(9408,249175
int scarb(9630,254376
void scbusf(9697,256079
void scasid(9741,257120
void scsel(9840,259394
UCHAR scxferc(9878,260360
UCHAR scsendi(9933,261751
UCHAR sciso(9990,263036
void scwirod(10055,264343
void scwiros(10088,264965
UCHAR scvalq(10118,265471
UCHAR scsell(10146,266109
UCHAR scsellDOS(10237,268595
void scwtsel(10318,270761
void inisci(10336,271160
UCHAR scmachid(10403,272969
void scsavdi(10541,275557
void XbowInit(10625,277610
void BusMasterInit(10704,279992
int DiagXbow(10745,280948
int DiagBusMaster(10831,282874
void DiagEEPROM(10874,284226
void queueSearchSelect(11075,289534
void queueSelectFail(11206,292467
void queueCmdComplete(11245,293466
   UCHAR i,11342,295913
   UCHAR i, SCSIcmd;11342,295913
   CALL_BK_FN callback;11343,295934
   PSCCBMgr_tar_info currTar_Info;11344,295958
   SCSIcmd 11346,295994
	if(11367,296622
   if 11375,296809
   if 11383,296981
	if(11402,297493
	callback 11426,298050
   pCurrCard->currentSCCB 11429,298162
void queueDisconnect(11441,298467
void  queueFlushSccb(11476,299408
void  queueFlushTargSccb(11515,300376
void queueAddSccb(11544,300948
UCHAR queueFindSccb(11578,301707
void  utilUpdateResidual(11639,303113
void Wait1Second(11698,304226
void Wait(11727,304740
void utilEEWriteOnOff(11779,306080
void utilEEWrite(11812,306863
USHORT utilEERead(11867,308360
USHORT utilEEReadOrg(11901,309022
void utilEESendCmdAddr(11953,310307
USHORT CalcCrc16(12019,311785
UCHAR CalcLrc(12039,312109
FlashPoint__ProbeHostAdapter(12056,312341
FlashPoint__HardwareResetHostAdapter(12063,312519
FlashPoint__ReleaseHostAdapter(12069,312693
FlashPoint__StartCCB(12076,312830
FlashPoint__AbortCCB(12083,312981
FlashPoint__InterruptPending(12090,313135
FlashPoint__HandleInterrupt(12097,313274
#define FlashPoint_ProbeHostAdapter	12103,313393
#define FlashPoint_HardwareResetHostAdapter 12104,313462
#define FlashPoint_ReleaseHostAdapter	12105,313543
#define FlashPoint_StartCCB	12106,313616
#define FlashPoint_AbortCCB	12107,313670
#define FlashPoint_InterruptPending	12108,313724
#define FlashPoint_HandleInterrupt	12109,313793
void FlashPoint_InquireTargetInfo(12117,314020

drivers/scsi/amiga7xx.h,161
#define NULL 14,399
#define CMD_PER_LUN 18,442
#define CAN_QUEUE 22,490
extern struct proc_dir_entry proc_scsi_amiga7xx;28,586
#define AMIGA7XX_SCSI 30,636

drivers/scsi/u14-34f.c,4689
#define LinuxVersionCode(LinuxVersionCode315,15115
#define MAX_INT_PARAM 316,15174
#define __initfunc(__initfunc356,16108
#define __initdata357,16132
#define __init358,16151
#define IRQ_FLAGS363,16252
#define IRQ_LOCK364,16270
#define IRQ_LOCK_SAVE365,16287
#define IRQ_UNLOCK366,16309
#define IRQ_UNLOCK_RESTORE367,16328
#define SPIN_FLAGS 368,16355
#define SPIN_LOCK 369,16400
#define SPIN_LOCK_SAVE 370,16451
#define SPIN_UNLOCK 371,16523
#define SPIN_UNLOCK_RESTORE 372,16578
static int use_new_eh_code 374,16680
#define IRQ_FLAGS 376,16721
#define IRQ_LOCK 377,16764
#define IRQ_LOCK_SAVE 378,16788
#define IRQ_UNLOCK 379,16856
#define IRQ_UNLOCK_RESTORE 380,16882
#define SPIN_FLAGS381,16951
#define SPIN_LOCK382,16970
#define SPIN_LOCK_SAVE383,16988
#define SPIN_UNLOCK384,17011
#define SPIN_UNLOCK_RESTORE385,17031
static int use_new_eh_code 386,17059
struct proc_dir_entry proc_scsi_u14_34f 389,17103
#define PRODUCT_ID1 395,17276
#define PRODUCT_ID2 396,17302
#define ISA 399,17398
#define ESA 400,17413
#define OP_HOST_ADAPTER 402,17428
#define OP_SCSI 403,17458
#define OP_RESET 404,17488
#define DTD_SCSI 405,17518
#define DTD_IN 406,17548
#define DTD_OUT 407,17578
#define DTD_NONE 408,17608
#define HA_CMD_INQUIRY 409,17638
#define HA_CMD_SELF_DIAG 410,17668
#define HA_CMD_READ_BUFF 411,17698
#define HA_CMD_WRITE_BUFF 412,17728
#define MAX_ISA 422,17938
#define MAX_VESA 423,17956
#define MAX_EISA 424,17975
#define MAX_PCI 425,17994
#define MAX_BOARDS 426,18012
#define MAX_CHANNEL 427,18073
#define MAX_LUN 428,18095
#define MAX_TARGET 429,18113
#define MAX_MAILBOXES 430,18134
#define MAX_SGLIST 431,18159
#define MAX_SAFE_SGLIST 432,18181
#define MAX_INTERNAL_RETRIES 433,18208
#define MAX_CMD_PER_LUN 434,18240
#define MAX_TAGGED_CMD_PER_LUN 435,18266
#define SKIP 437,18332
#define FALSE 438,18355
#define TRUE 439,18371
#define FREE 440,18386
#define IN_USE 441,18401
#define LOCKED 442,18420
#define IN_RESET 443,18439
#define IGNORE 444,18458
#define READY 445,18477
#define ABORTING 446,18496
#define NO_DMA 447,18515
#define MAXLOOP 448,18536
#define REG_LCL_MASK 450,18560
#define REG_LCL_INTR 451,18588
#define REG_SYS_MASK 452,18616
#define REG_SYS_INTR 453,18644
#define REG_PRODUCT_ID1 454,18672
#define REG_PRODUCT_ID2 455,18700
#define REG_CONFIG1 456,18728
#define REG_CONFIG2 457,18756
#define REG_OGM 458,18784
#define REG_ICM 459,18812
#define REGION_SIZE 460,18841
#define BSY_ASSERTED 461,18870
#define IRQ_ASSERTED 462,18901
#define CMD_RESET 463,18932
#define CMD_OGM_INTR 464,18963
#define CMD_CLR_INTR 465,18994
#define CMD_ENA_INTR 466,19025
#define ASOK 467,19056
#define ASST 468,19087
#define ARRAY_SIZE(ARRAY_SIZE470,19119
#define YESNO(YESNO471,19176
#define TLDEV(TLDEV472,19211
#define PACKED 474,19276
struct sg_list sg_list476,19325
struct mscp mscp482,19506
struct hostdata hostdata507,20856
static struct Scsi_Host *sh[528,21988
static const char *driver_name 529,22033
static char sha[530,22074
static unsigned int num_boards 533,22183
static unsigned long io_port[535,22229
static unsigned long io_port[] __initdata 535,22229
#define HD(HD548,22554
#define BN(BN549,22615
#define SWAP_BYTE(SWAP_BYTE551,22658
#define H2DEV(H2DEV558,22944
#define H2DEV(H2DEV560,22980
#define DEV2H(DEV2H563,23009
#define V2DEV(V2DEV564,23035
#define DEV2V(DEV2V565,23103
static int do_trace 569,23325
static int setup_done 570,23354
static int link_statistics 571,23385
static int ext_tran 572,23417
static int have_old_firmware 575,23483
static int have_old_firmware 577,23526
static int linked_comm 581,23621
static int linked_comm 583,23658
static int max_queue_depth 587,23740
static int max_queue_depth 589,23805
static void select_queue_depths(592,23859
static inline int wait_on_busy(649,25423
static int board_inquiry(659,25636
__initfunc 704,26813
__initfunc 918,33757
__initfunc 952,34713
static inline void build_sg_list(981,35325
static inline int do_qcomm(998,35830
int u14_34f_queuecommand(1111,39217
static inline int do_old_abort(1121,39404
int u14_34f_old_abort(1187,41573
static inline int do_abort(1199,41781
int u14_34f_abort(1271,44015
static inline int do_old_reset(1278,44110
int u14_34f_old_reset(1420,48246
static inline int do_reset(1432,48480
int u14_34f_reset(1564,52292
int u14_34f_biosparam(1571,52387
static void sort(1593,52959
static inline int reorder(1618,53488
static void flush_dev(1716,57126
static inline void ihdlr(1755,58293
static void do_interrupt_handler(1957,65168
int u14_34f_release(1972,65532
Scsi_Host_Template driver_template 1997,66159

drivers/scsi/tmscsim.c,7193
#define DC390_IRQ 103,5162
# define DEBUG0(DEBUG0114,5405
# define DEBUG0(DEBUG0116,5433
# define DEBUG1(DEBUG1119,5479
# define DEBUG1(DEBUG1121,5507
# define DCBDEBUG(DCBDEBUG124,5555
# define DCBDEBUG(DCBDEBUG126,5585
# define PARSEDEBUG(PARSEDEBUG129,5637
# define PARSEDEBUG(PARSEDEBUG131,5669
# define REMOVABLEDEBUG(REMOVABLEDEBUG134,5727
# define REMOVABLEDEBUG(REMOVABLEDEBUG136,5763
#define DCBDEBUG1(DCBDEBUG1138,5797
#define PCI_DEVICE_ID_AMD53C974 171,6422
#define LinuxVersionCode(LinuxVersionCode193,7285
# define USE_SPINLOCKS 202,7509
# define NEW_PCI 203,7534
#  define USE_SPINLOCKS 207,7627
#   define DC390_LOCKA_INIT 216,7774
#   define DC390_LOCKA_INIT218,7884
   spinlock_t dc390_drvlock 220,7921
#  define DC390_AFLAGS 222,7972
#  define DC390_IFLAGS 223,8017
#  define DC390_DFLAGS 224,8062
#  define DC390_LOCK_IO 226,8109
#  define DC390_UNLOCK_IO 227,8178
#  define DC390_LOCK_DRV 229,8255
#  define DC390_UNLOCK_DRV 230,8323
#  define DC390_LOCK_DRV_NI 231,8398
#  define DC390_UNLOCK_DRV_NI 232,8453
#  define DC390_LOCK_ACB 234,8513
#  define DC390_UNLOCK_ACB 235,8580
#  define DC390_LOCK_ACB_NI 236,8654
#  define DC390_UNLOCK_ACB_NI 237,8708
#    define DC390_LOCKA_INIT 245,8938
#    define DC390_LOCKA_INIT247,9050
    spinlock_t dc390_drvlock 249,9089
#   define DC390_AFLAGS 250,9140
#   define DC390_IFLAGS 251,9186
#  define DC390_DFLAGS 252,9211
#   define DC390_LOCK_IO 253,9257
#   define DC390_UNLOCK_IO 254,9333
#   define DC390_LOCK_DRV 255,9416
#   define DC390_UNLOCK_DRV 256,9485
#   define DC390_LOCK_DRV_NI 257,9561
#   define DC390_UNLOCK_DRV_NI 258,9617
#   define DC390_LOCK_ACB 259,9677
#   define DC390_UNLOCK_ACB 260,9745
#   define DC390_LOCK_ACB_NI 261,9820
#   define DC390_UNLOCK_ACB_NI 262,9875
#   define DC390_AFLAGS 267,10059
#   define DC390_IFLAGS 268,10084
#   define DC390_DFLAGS 269,10130
    spinlock_t dc390_drvlock 270,10177
#   define DC390_LOCK_IO 271,10228
#   define DC390_UNLOCK_IO 272,10298
#   define DC390_LOCK_DRV 273,10375
#   define DC390_UNLOCK_DRV 274,10444
#   define DC390_LOCK_DRV_NI 275,10520
#   define DC390_UNLOCK_DRV_NI 276,10576
#   define DC390_LOCK_ACB 277,10636
#   define DC390_UNLOCK_ACB 278,10682
#   define DC390_LOCK_ACB_NI 279,10732
#   define DC390_UNLOCK_ACB_NI 280,10793
#   define DC390_LOCKA_INIT 281,10858
# define DC390_AFLAGS 288,10981
# define DC390_IFLAGS 289,11025
# define DC390_DFLAGS 290,11069
# define DC390_LOCK_IO 291,11114
# define DC390_UNLOCK_IO 292,11165
# define DC390_LOCK_DRV 293,11213
# define DC390_UNLOCK_DRV 294,11265
# define DC390_LOCK_DRV_NI295,11314
# define DC390_UNLOCK_DRV_NI296,11341
# define DC390_LOCK_ACB 297,11370
# define DC390_UNLOCK_ACB 298,11422
# define DC390_LOCK_ACB_NI299,11471
# define DC390_UNLOCK_ACB_NI300,11498
# define DC390_LOCKA_INIT301,11527
# define PDEV 308,11670
# define PDEVDECL 309,11689
# define PDEVDECL0 310,11728
# define PDEVDECL1 311,11775
# define PDEVSET 312,11815
# define PDEVSET1 313,11848
# define PCI_WRITE_CONFIG_BYTE(PCI_WRITE_CONFIG_BYTE314,11882
# define PCI_READ_CONFIG_BYTE(PCI_READ_CONFIG_BYTE315,11960
# define PCI_WRITE_CONFIG_WORD(PCI_WRITE_CONFIG_WORD316,12036
# define PCI_READ_CONFIG_WORD(PCI_READ_CONFIG_WORD317,12114
# define PCI_BUS_DEV 318,12190
# define PCI_PRESENT 319,12242
# define PCI_SET_MASTER 320,12278
# define PCI_FIND_DEVICE(PCI_FIND_DEVICE321,12324
# define PCI_GET_IO_AND_IRQ 322,12401
# define PDEV 325,12538
# define PDEVDECL 326,12565
# define PDEVDECL0 327,12608
# define PDEVDECL1 328,12693
# define PDEVSET 329,12761
# define PDEVSET1 330,12848
# define PCI_WRITE_CONFIG_BYTE(PCI_WRITE_CONFIG_BYTE331,12936
# define PCI_READ_CONFIG_BYTE(PCI_READ_CONFIG_BYTE332,13018
# define PCI_WRITE_CONFIG_WORD(PCI_WRITE_CONFIG_WORD333,13098
# define PCI_READ_CONFIG_WORD(PCI_READ_CONFIG_WORD334,13180
# define PCI_BUS_DEV 335,13260
# define PCI_PRESENT 336,13294
# define PCI_SET_MASTER 337,13334
# define PCI_FIND_DEVICE(PCI_FIND_DEVICE338,13390
# define PCI_GET_IO_AND_IRQ 339,13488
# define __init348,13844
static PACB	dc390_pACB_start=393,15901
static PACB	dc390_pACB_current 394,15937
static UCHAR	dc390_adapterCnt 395,15976
static UCHAR	dc390_CurrSyncOffset 396,16011
static ULONG	dc390_lastabortedpid 397,16050
static ULONG	dc390_laststatus 398,16089
int tmscsim[402,16219
static PVOID dc390_phase0[425,17029
static PVOID dc390_phase1[437,17268
static char* dc390_p0_str[450,17545
static char* dc390_p1_str[462,17809
UCHAR  dc390_baddevname1[476,18155
#define BADDEVCNT	479,18269
static char*  dc390_adapname 481,18290
UCHAR  dc390_eepromBuf[482,18330
UCHAR  dc390_clock_period1[483,18379
struct proc_dir_entry	DC390_proc_scsi_tmscsim 485,18440
static void __init dc390_EnDisableCE(498,18795
static void __init dc390_EEpromDefaults 514,19157
static void __init dc390_checkparams 535,19751
void __init dc390_setup 556,20476
static void __init dc390_EEpromOutDI(568,20740
static UCHAR __init dc390_EEpromInDO(589,21135
static USHORT __init dc390_EEpromGetData1(605,21430
static void __init dc390_Prepare(622,21680
static void __init dc390_ReadEEprom(638,21959
static UCHAR __init dc390_CheckEEpromCheckSum(654,22295
static PDCB __inline__ dc390_findDCB 676,23000
static void dc390_QLinkcmd(694,23572
static __inline__ PSCSICMD dc390_Getcmd(717,23909
static __inline__ PSRB dc390_GetSRB(730,24119
static __inline__ void dc390_RewaitSRB0(745,24325
static void dc390_RewaitSRB(762,24589
static void dc390_DoWaitingSRB(799,25407
static __inline__ void dc390_SRBwaiting(853,26411
static void dc390_SendSRB(875,26932
static void dc390_BuildSRB 925,28061
int DC390_queue_command 985,29785
static void dc390_DoNextCmd(1089,32330
static int partsize(1137,33811
int DC390_bios_param 1198,35886
int DC390_bios_param 1234,36728
void dc390_dumpinfo 1241,36853
int DC390_abort 1287,38989
static void dc390_ResetDevParam(1444,42848
static void dc390_RecoverSRB(1465,43273
int DC390_reset(1513,44316
void dc390_initDCB(1563,45609
void dc390_updateDCB 1626,47264
static void dc390_updateDCBs 1655,48253
static void __inline__ dc390_initSRB(1675,48785
void dc390_linkSRB(1681,48887
void __init dc390_initACB 1706,49565
int __init dc390_initAdapter 1776,51661
static int __init DC390_init 1875,54572
static void __init dc390_set_master 1964,57122
static void __init dc390_set_pci_cfg 1987,57742
int __init DC390_detect 1997,58076
static void dc390_inquiry_done 2043,59408
void dc390_inquiry 2062,59899
static int dc390_scanf 2104,61162
#define SCANF(SCANF2113,61356
static int dc390_yesno 2117,61484
#define YESNO(YESNO2130,61749
static int dc390_search 2135,61885
#define SEARCH(SEARCH2156,62430
#define SEARCH2(SEARCH22160,62577
#define SEARCH3(SEARCH32164,62725
static char _prstr[2170,62902
char* prstr 2171,62927
int dc390_set_info 2183,63158
#define SPRINTF(SPRINTF2416,70220
#define YESNO(YESNO2418,70275
int DC390_proc_info 2423,70350
static int dc390_shutdown 2521,73461
void dc390_freeDCBs 2540,73899
int DC390_release(2558,74305
Scsi_Host_Template driver_template 2594,75005

drivers/scsi/tmscsim.h,10875
#define _TMSCSIM_H9,361
#define IRQ_NONE 11,381
#define MAX_ADAPTER_NUM 13,403
#define MAX_SG_LIST_BUF 14,430
#define MAX_CMD_PER_LUN 15,458
#define MAX_CMD_QUEUE	16,485
#define MAX_SCSI_ID	17,529
#define MAX_SRB_CNT	18,552
#define END_SCAN	19,626
#define SEL_TIMEOUT	21,647
typedef unsigned char	UCHAR;UCHAR23,715
typedef unsigned short	USHORT;USHORT24,744
typedef unsigned long	ULONG;ULONG25,775
typedef unsigned int	UINT;UINT26,804
typedef UCHAR		*PUCHAR;PUCHAR28,832
typedef USHORT		*PUSHORT;PUSHORT29,856
typedef ULONG		*PULONG;PULONG30,882
typedef Scsi_Host_Template  *PSHT;PSHT31,906
typedef struct Scsi_Host    *PSH;PSH32,941
typedef Scsi_Device	*PSCSIDEV;PSCSIDEV33,975
typedef Scsi_Cmnd	*PSCSICMD;PSCSICMD34,1006
typedef void		*PVOID;PVOID35,1035
typedef struct scatterlist  *PSGL, SGL;SGL36,1057
typedef  struct  _SyncMsg_SyncMsg40,1176
} SyncMsg;SyncMsg47,1293
typedef  struct  _Capacity_Capacity49,1381
} Capacity;Capacity53,1449
typedef  struct  _SGentry_SGentry55,1538
} SGentry;SGentry59,1610
typedef  struct  _SGentry1_SGentry161,1622
} SGentry1, *PSGE;PSGE65,1681
struct	_SRB_SRB73,1875
typedef  struct  _SRB	 DC390_SRB, *PSRB;PSRB120,2701
struct	_DCB_DCB127,2918
typedef  struct  _DCB	 DC390_DCB, *PDCB;PDCB176,3776
struct	_ACB_ACB182,3993
typedef  struct  _ACB	 DC390_ACB, *PACB;PACB237,4910
#define BIT31	242,5031
#define BIT30	243,5056
#define BIT29	244,5081
#define BIT28	245,5106
#define BIT27	246,5131
#define BIT26	247,5156
#define BIT25	248,5181
#define BIT24	249,5206
#define BIT23	250,5231
#define BIT22	251,5256
#define BIT21	252,5281
#define BIT20	253,5306
#define BIT19	254,5331
#define BIT18	255,5356
#define BIT17	256,5381
#define BIT16	257,5406
#define BIT15	258,5431
#define BIT14	259,5456
#define BIT13	260,5481
#define BIT12	261,5506
#define BIT11	262,5531
#define BIT10	263,5556
#define BIT9	264,5581
#define BIT8	265,5605
#define BIT7	266,5629
#define BIT6	267,5653
#define BIT5	268,5677
#define BIT4	269,5701
#define BIT3	270,5725
#define BIT2	271,5749
#define BIT1	272,5773
#define BIT0	273,5797
#define UNIT_ALLOCATED	276,5844
#define UNIT_INFO_CHANGED 277,5872
#define FORMATING_MEDIA 278,5903
#define UNIT_RETRY	279,5932
#define DASD_SUPPORT	282,5976
#define SCSI_SUPPORT	283,6002
#define ASPI_SUPPORT	284,6028
#define SRB_FREE	287,6093
#define SRB_WAIT	288,6112
#define SRB_READY	289,6134
#define SRB_MSGOUT	290,6157
#define SRB_MSGIN	291,6215
#define SRB_MSGIN_MULTI 292,6238
#define SRB_COMMAND	293,6267
#define SRB_START_	294,6292
#define SRB_DISCONNECT	295,6353
#define SRB_DATA_XFER	296,6381
#define SRB_XFERPAD	297,6408
#define SRB_STATUS	298,6433
#define SRB_COMPLETED	299,6458
#define SRB_ABORT_SENT	300,6486
#define DO_SYNC_NEGO	301,6515
#define SRB_UNEXPECT_RESEL 302,6542
#define SRB_OK	305,6595
#define ABORTION	306,6616
#define OVER_RUN	307,6638
#define UNDER_RUN	308,6660
#define PARITY_ERROR	309,6683
#define SRB_ERROR	310,6709
#define RESET_DEV	313,6750
#define RESET_DETECT	314,6773
#define RESET_DONE	315,6799
#define ABORT_DEV_	318,6841
#define DATAOUT 321,6883
#define DATAIN	322,6905
#define RESIDUAL_VALID	323,6926
#define ENABLE_TIMER	324,6954
#define RESET_DEV0	325,6980
#define ABORT_DEV	326,7004
#define AUTO_REQSENSE	327,7027
#define H_STATUS_GOOD	330,7079
#define H_SEL_TIMEOUT	331,7104
#define H_OVER_UNDER_RUN 332,7132
#define H_UNEXP_BUS_FREE 333,7162
#define H_TARGET_PHASE_F 334,7192
#define H_INVALID_CCB_OP 335,7222
#define H_LINK_CCB_BAD	336,7252
#define H_BAD_TARGET_DIR 337,7281
#define H_DUPLICATE_CCB 338,7311
#define H_BAD_CCB_OR_SG 339,7341
#define H_ABORT 340,7371
#define SCSI_STAT_GOOD	343,7471
#define SCSI_STAT_CHECKCOND	344,7519
#define SCSI_STAT_CONDMET	345,7581
#define SCSI_STAT_BUSY	346,7634
#define SCSI_STAT_INTER 347,7690
#define SCSI_STAT_INTERCONDMET	348,7748
#define SCSI_STAT_RESCONFLICT	349,7819
#define SCSI_STAT_CMDTERM	350,7883
#define SCSI_STAT_QUEUEFULL	351,7941
#define SCSI_STAT_UNEXP_BUS_F	353,7994
#define SCSI_STAT_BUS_RST_DETECT 354,8055
#define SCSI_STAT_SEL_TIMEOUT	355,8125
#define SYNC_DISABLE	358,8207
#define SYNC_ENABLE	359,8230
#define SYNC_NEGO_DONE	360,8255
#define WIDE_ENABLE	361,8283
#define WIDE_NEGO_DONE	362,8327
#define EN_TAG_QUEUEING	363,8374
#define EN_ATN_STOP	364,8403
#define SYNC_NEGO_OFFSET 366,8429
#define SCSI_DATA_OUT	369,8481
#define SCSI_DATA_IN	370,8505
#define SCSI_COMMAND	371,8528
#define SCSI_STATUS_	372,8551
#define SCSI_NOP0	373,8574
#define SCSI_NOP1	374,8594
#define SCSI_MSG_OUT	375,8614
#define SCSI_MSG_IN	376,8637
#define MSG_COMPLETE	379,8705
#define MSG_EXTENDED	380,8732
#define MSG_SAVE_PTR	381,8759
#define MSG_RESTORE_PTR 382,8786
#define MSG_DISCONNECT	383,8816
#define MSG_INITIATOR_ERROR	384,8845
#define MSG_ABORT	385,8878
#define MSG_REJECT_	386,8902
#define MSG_NOP 387,8928
#define MSG_PARITY_ERROR	388,8951
#define MSG_LINK_CMD_COMPL	389,8981
#define MSG_LINK_CMD_COMPL_FLG	390,9013
#define MSG_BUS_RESET	391,9049
#define MSG_ABORT_TAG	392,9077
#define MSG_SIMPLE_QTAG 393,9105
#define MSG_HEAD_QTAG	394,9135
#define MSG_ORDER_QTAG	395,9163
#define MSG_IDENTIFY	396,9192
#define MSG_HOST_ID	397,9219
#define STATUS_MASK_	400,9265
#define MSG_MASK	401,9292
#define RETURN_MASK	402,9317
typedef struct	_SCSIInqData _SCSIInqData408,9379
} SCSI_INQDATA, *PSCSI_INQDATA;PSCSI_INQDATA423,10009
#define SCSI_DEVTYPE	429,10073
#define SCSI_PERIPHQUAL 430,10142
#define TYPE_NODEV	431,10212
#define SCSI_REMOVABLE_MEDIA 436,10316
#define TYPE_PRINTER	442,10484
#define TYPE_COMM	443,10540
#define SCSI_INQ_RELADR 449,10653
#define SCSI_INQ_WBUS32 450,10732
#define SCSI_INQ_WBUS16 451,10811
#define SCSI_INQ_SYNC	452,10890
#define SCSI_INQ_LINKED 453,10967
#define SCSI_INQ_CMDQUEUE 454,11046
#define SCSI_INQ_SFTRE	455,11125
typedef  struct  _EEprom_EEprom463,11345
} EEprom, *PEEprom;PEEprom469,11426
#define REAL_EE_ADAPT_SCSI_ID 471,11447
#define REAL_EE_MODE2	472,11480
#define REAL_EE_DELAY	473,11505
#define REAL_EE_TAG_CMD_NUM	474,11530
#define EE_ADAPT_SCSI_ID 476,11562
#define EE_MODE2	477,11590
#define EE_DELAY	478,11610
#define EE_TAG_CMD_NUM	479,11630
#define EE_LEN	481,11657
#define PARITY_CHK_	484,11708
#define SYNC_NEGO_	485,11733
#define EN_DISCONNECT_	486,11757
#define SEND_START_	487,11785
#define TAG_QUEUEING_	488,11810
#define MORE2_DRV	491,11869
#define GREATER_1G	492,11892
#define RST_SCSI_BUS	493,11916
#define ACTIVE_NEGATION 494,11942
#define NO_SEEK 495,11971
#define LUN_CHECK	496,11993
#define ENABLE_CE	498,12017
#define DISABLE_CE	499,12037
#define EEPROM_READ	500,12058
#define DMA_COMMAND	514,12346
#define NOP_CMD 515,12372
#define CLEAR_FIFO_CMD	516,12392
#define RST_DEVICE_CMD	517,12418
#define RST_SCSI_BUS_CMD	518,12444
#define INFO_XFER_CMD	520,12472
#define INITIATOR_CMD_CMPLTE	521,12500
#define MSG_ACCEPTED_CMD	522,12534
#define XFER_PAD_BYTE	523,12564
#define SET_ATN_CMD	524,12592
#define RESET_ATN_CMD	525,12618
#define SEL_WO_ATN	527,12647
#define SEL_W_ATN	528,12697
#define SEL_W_ATN_STOP	529,12721
#define SEL_W_ATN3	530,12750
#define EN_SEL_RESEL	531,12775
#define DIS_SEL_RESEL	532,12802
#define RESEL	533,12855
#define RESEL_ATN3	534,12884
#define DATA_XFER_CMD	536,12918
#define INTERRUPT	540,12991
#define ILLEGAL_OP_ERR	541,13015
#define PARITY_ERR	542,13044
#define COUNT_2_ZERO	543,13069
#define GROUP_CODE_VALID	544,13096
#define SCSI_PHASE_MASK 545,13126
#define SCSI_RESET	549,13265
#define INVALID_CMD	550,13290
#define DISCONNECTED	551,13316
#define SERVICE_REQUEST 552,13343
#define SUCCESSFUL_OP	553,13373
#define RESELECTED	554,13401
#define SEL_ATTENTION	555,13426
#define SELECTED	556,13454
#define SYNC_OFFSET_FLAG	559,13515
#define INTRN_STATE_MASK	560,13545
#define CLK_FREQ_40MHZ	564,13695
#define CLK_FREQ_35MHZ	565,13721
#define CLK_FREQ_30MHZ	566,13762
#define CLK_FREQ_25MHZ	567,13798
#define CLK_FREQ_20MHZ	568,13834
#define CLK_FREQ_15MHZ	569,13863
#define CLK_FREQ_10MHZ	570,13899
#define EXTENDED_TIMING 573,13962
#define DIS_INT_ON_SCSI_RST	574,13992
#define PARITY_ERR_REPO 575,14025
#define SCSI_ID_ON_BUS	576,14055
#define EN_FEATURE	579,14152
#define EN_SCSI2_CMD	580,14177
#define ID_MSG_CHECK	583,14238
#define EN_QTAG_MSG	584,14265
#define EN_GRP2_CMD	585,14291
#define FAST_SCSI	586,14317
#define FAST_CLK	587,14357
#define EATER_12NS	590,14433
#define EATER_25NS	591,14455
#define EATER_35NS	592,14480
#define EATER_0NS	593,14505
#define REDUCED_POWER	594,14536
#define CTRL4_RESERVED	595,14564
#define NEGATE_REQACKDATA	596,14628
#define NEGATE_REQACK	597,14659
#define GLITCH_TO_NS(GLITCH_TO_NS599,14688
#define NS_TO_GLITCH(NS_TO_GLITCH600,14766
#define READ_DIRECTION	608,14948
#define WRITE_DIRECTION 609,14977
#define EN_DMA_INT	610,15004
#define EN_PAGE_INT	611,15029
#define MAP_TO_MDL	612,15092
#define DIAGNOSTIC	613,15117
#define DMA_IDLE_CMD	614,15142
#define DMA_BLAST_CMD	615,15166
#define DMA_ABORT_CMD	616,15194
#define DMA_START_CMD	617,15222
#define PCI_MS_ABORT	620,15291
#define BLAST_COMPLETE	621,15318
#define SCSI_INTERRUPT	622,15347
#define DMA_XFER_DONE	623,15376
#define DMA_XFER_ABORT	624,15404
#define DMA_XFER_ERROR	625,15433
#define POWER_DOWN	626,15462
#define EN_INT_ON_PCI_ABORT	629,15524
#define WRT_ERASE_DMA_STAT	630,15558
#define PW_DOWN_CTRL	631,15591
#define SCSI_BUSY	632,15619
#define SCLK	633,15644
#define SCAM	634,15665
#define SCSI_LINES	635,15686
#define CtcReg_Low	643,15925
#define CtcReg_Mid	644,15978
#define CtcReg_High	645,16010
#define ScsiFifo	646,16043
#define ScsiCmd 647,16065
#define Scsi_Status	648,16087
#define INT_Status	649,16120
#define Sync_Period	650,16152
#define Sync_Offset	651,16185
#define Clk_Factor	652,16218
#define CtrlReg1	653,16250
#define CtrlReg2	654,16273
#define CtrlReg3	655,16295
#define CtrlReg4	656,16317
#define DMA_Cmd 657,16339
#define DMA_XferCnt	658,16361
#define DMA_XferAddr	659,16428
#define DMA_Wk_ByteCntr 660,16498
#define DMA_Wk_AddrCntr 661,16556
#define DMA_Status	662,16617
#define DMA_MDL_Addr	663,16649
#define DMA_Wk_MDL_Cntr 664,16705
#define DMA_ScsiBusCtrl 665,16762
#define StcReg_Low	667,16824
#define StcReg_Mid	668,16883
#define StcReg_High	669,16921
#define Scsi_Dest_ID	670,16961
#define Scsi_TimeOut	671,17002
#define Intern_State	672,17042
#define Current_Fifo	673,17083
#define DC390_read8(DC390_read8676,17150
#define DC390_read8_(DC390_read8_679,17222
#define DC390_read16(DC390_read16682,17298
#define DC390_read32(DC390_read32685,17371
#define DC390_write8(DC390_write8688,17444
#define DC390_write8_(DC390_write8_691,17530
#define DC390_write16(DC390_write16694,17619
#define DC390_write32(DC390_write32697,17706

drivers/scsi/aic7xxx/sequencer.h,840
struct ins_format1 ins_format140,1999
struct ins_format2 ins_format250,2137
struct ins_format3 ins_format360,2279
struct ins_format1 ins_format169,2438
struct ins_format2 ins_format279,2576
struct ins_format3 ins_format389,2718
union ins_formats ins_formats99,2848
struct instruction instruction106,3017
#define	AIC_OP_OR	115,3178
#define	AIC_OP_AND	116,3200
#define AIC_OP_XOR	117,3223
#define	AIC_OP_ADD	118,3246
#define	AIC_OP_ADC	119,3269
#define	AIC_OP_ROL	120,3292
#define	AIC_OP_BMOV	121,3315
#define	AIC_OP_JMP	123,3340
#define AIC_OP_JC	124,3363
#define AIC_OP_JNC	125,3385
#define AIC_OP_CALL	126,3408
#define	AIC_OP_JNE	127,3432
#define	AIC_OP_JNZ	128,3455
#define	AIC_OP_JE	129,3478
#define	AIC_OP_JZ	130,3500
#define	AIC_OP_SHL	133,3540
#define	AIC_OP_SHR	134,3564
#define	AIC_OP_ROR	135,3588

drivers/scsi/aic7xxx/scsi_message.h,1136
#define MSG_CMDCOMPLETE	2,66
#define MSG_EXTENDED	3,106
#define MSG_SAVEDATAPOINTER	4,143
#define MSG_RESTOREPOINTERS	5,186
#define MSG_DISCONNECT	6,229
#define MSG_INITIATOR_DET_ERR	7,268
#define MSG_ABORT	8,313
#define MSG_MESSAGE_REJECT	9,347
#define MSG_NOOP	10,389
#define MSG_PARITY_ERROR	11,422
#define MSG_LINK_CMD_COMPLETE	12,462
#define MSG_LINK_CMD_COMPLETEF	13,507
#define MSG_BUS_DEV_RESET	14,553
#define MSG_ABORT_TAG	15,594
#define MSG_CLEAR_QUEUE	16,632
#define MSG_INIT_RECOVERY	17,672
#define MSG_REL_RECOVERY	18,713
#define MSG_TERM_IO_PROC	19,753
#define MSG_SIMPLE_Q_TAG	22,818
#define MSG_HEAD_OF_Q_TAG	23,858
#define MSG_ORDERED_Q_TAG	24,899
#define MSG_IGN_WIDE_RESIDUE	25,940
#define MSG_IDENTIFYFLAG	28,1025
#define MSG_IDENTIFY_DISCFLAG	29,1056
#define MSG_IDENTIFY(MSG_IDENTIFY30,1092
#define MSG_ISIDENTIFY(MSG_ISIDENTIFY31,1169
#define MSG_EXT_SDTR	34,1265
#define MSG_EXT_SDTR_LEN	35,1292
#define MSG_EXT_WDTR	37,1323
#define MSG_EXT_WDTR_LEN	38,1350
#define MSG_EXT_WDTR_BUS_8_BIT	39,1380
#define MSG_EXT_WDTR_BUS_16_BIT	40,1416
#define MSG_EXT_WDTR_BUS_32_BIT	41,1453

drivers/scsi/gdth.h,7138
#define _GDTH_H2,16
#define NULL 20,434
#define TRUE 23,469
#define FALSE 26,505
#define GDTH_VERSION_STR 32,573
#define GDTH_VERSION 33,612
#define GDTH_SUBVERSION 34,646
#define PROTOCOL_VERSION 37,705
#define GDT_ISA 40,765
#define GDT_EISA 41,834
#define GDT_PCI 42,904
#define GDT_PCINEW 43,973
#define GDT_PCIMPR 44,1046
#define GDT3_ID 46,1160
#define GDT3A_ID 47,1227
#define GDT3B_ID 48,1302
#define GDT2_ID 50,1385
#define PCI_VENDOR_ID_VORTEX 55,1574
#define PCI_DEVICE_ID_VORTEX_GDT60x0 60,1712
#define PCI_DEVICE_ID_VORTEX_GDT6000B 61,1784
#define PCI_DEVICE_ID_VORTEX_GDT6x10 63,1869
#define PCI_DEVICE_ID_VORTEX_GDT6x20 64,1936
#define PCI_DEVICE_ID_VORTEX_GDT6530 65,2003
#define PCI_DEVICE_ID_VORTEX_GDT6550 66,2065
#define PCI_DEVICE_ID_VORTEX_GDT6x17 68,2173
#define PCI_DEVICE_ID_VORTEX_GDT6x27 69,2240
#define PCI_DEVICE_ID_VORTEX_GDT6537 70,2307
#define PCI_DEVICE_ID_VORTEX_GDT6557 71,2369
#define PCI_DEVICE_ID_VORTEX_GDT6x15 73,2480
#define PCI_DEVICE_ID_VORTEX_GDT6x25 74,2547
#define PCI_DEVICE_ID_VORTEX_GDT6535 75,2614
#define PCI_DEVICE_ID_VORTEX_GDT6555 76,2676
#define PCI_DEVICE_ID_VORTEX_GDT6x17RP 81,2836
#define PCI_DEVICE_ID_VORTEX_GDT6x27RP 82,2910
#define PCI_DEVICE_ID_VORTEX_GDT6537RP 83,2984
#define PCI_DEVICE_ID_VORTEX_GDT6557RP 84,3048
#define PCI_DEVICE_ID_VORTEX_GDT6x11RP 86,3156
#define PCI_DEVICE_ID_VORTEX_GDT6x21RP 87,3230
#define PCI_DEVICE_ID_VORTEX_GDT6x17RD 91,3392
#define PCI_DEVICE_ID_VORTEX_GDT6x27RD 92,3466
#define PCI_DEVICE_ID_VORTEX_GDT6537RD 93,3540
#define PCI_DEVICE_ID_VORTEX_GDT6557RD 94,3604
#define PCI_DEVICE_ID_VORTEX_GDT6x11RD 96,3712
#define PCI_DEVICE_ID_VORTEX_GDT6x21RD 97,3786
#define PCI_DEVICE_ID_VORTEX_GDT6x18RD 99,3903
#define PCI_DEVICE_ID_VORTEX_GDT6x28RD 101,4039
#define PCI_DEVICE_ID_VORTEX_GDT6x38RD 103,4175
#define PCI_DEVICE_ID_VORTEX_GDT6x58RD 104,4249
#define PCI_DEVICE_ID_VORTEX_GDT7x18RN 106,4379
#define PCI_DEVICE_ID_VORTEX_GDT7x28RN 108,4515
#define PCI_DEVICE_ID_VORTEX_GDT7x38RN 110,4651
#define PCI_DEVICE_ID_VORTEX_GDT7x58RN 111,4725
#define PCI_DEVICE_ID_VORTEX_GDT6x19RD 116,4886
#define PCI_DEVICE_ID_VORTEX_GDT6x29RD 117,4960
#define PCI_DEVICE_ID_VORTEX_GDT7x19RN 119,5087
#define PCI_DEVICE_ID_VORTEX_GDT7x29RN 120,5161
#define PCI_DEVICE_ID_VORTEX_GDTMAXRP 125,5311
#define GDTH_SCRATCH 129,5381
#define GDTH_MAXCMDS 130,5454
#define GDTH_MAXC_P_L 131,5482
#define MAXOFFSETS 132,5554
#define MAXHA 133,5582
#define MAXID 134,5609
#define MAXLUN 135,5637
#define MAXBUS 136,5663
#define MAX_HDRIVES 137,5689
#define MAX_EVENTS 138,5765
#define MAX_RES_ARGS 139,5838
#define MAXCYLS 141,5988
#define HEADS 142,6017
#define SECS 143,6044
#define MEDHEADS 144,6112
#define MEDSECS 145,6140
#define BIGHEADS 146,6209
#define BIGSECS 147,6237
#define UNUSED_CMND 150,6334
#define INTERNAL_CMND 151,6376
#define SCREEN_CMND 152,6418
#define SPECIAL_SCP(SPECIAL_SCP153,6460
#define SCSIRAWSERVICE 156,6566
#define CACHESERVICE 157,6592
#define SCREENSERVICE 158,6618
#define MSG_INV_HANDLE 161,6674
#define MSGLEN 162,6751
#define MSG_SIZE 163,6826
#define MSG_REQUEST 164,6906
#define SECTOR_SIZE 167,7010
#define DPMEM_MAGIC 170,7113
#define IC_HEADER_BYTES 171,7148
#define IC_QUEUE_BYTES 172,7175
#define DPMEM_COMMAND_OFFSET 173,7201
#define GDT_INIT 176,7309
#define GDT_READ 177,7386
#define GDT_WRITE 178,7453
#define GDT_INFO 179,7521
#define GDT_FLUSH 180,7601
#define GDT_IOCTL 181,7681
#define GDT_DEVTYPE 182,7749
#define GDT_MOUNT 183,7826
#define GDT_UNMOUNT 184,7899
#define GDT_SET_FEAT 185,7974
#define GDT_GET_FEAT 186,8055
#define GDT_WRITE_THR 187,8122
#define GDT_READ_THR 188,8190
#define GDT_EXT_INFO 189,8257
#define GDT_RESET 190,8325
#define GDT_RESERVE 193,8435
#define GDT_RELEASE 194,8515
#define GDT_RESERVE_ALL 195,8584
#define GDT_RELEASE_ALL 196,8658
#define GDT_RESET_BUS 197,8732
#define GDT_SCAN_START 198,8796
#define GDT_SCAN_END 199,8868
#define SCSI_CHAN_CNT 202,8970
#define GET_IOCHAN_DESC 203,9037
#define L_CTRL_PATTERN 204,9066
#define CACHE_INFO 205,9102
#define CACHE_CONFIG 206,9128
#define BOARD_INFO 207,9154
#define IO_CHANNEL 208,9183
#define INVALID_CHANNEL 209,9246
#define GDTIOCTL_MASK 212,9301
#define GDTIOCTL_GENERAL 213,9338
#define GDTIOCTL_DRVERS 214,9406
#define GDTIOCTL_CTRTYPE 215,9479
#define GDTIOCTL_CTRCNT 216,9553
#define GDTIOCTL_LOCKDRV 217,9628
#define GDTIOCTL_LOCKCHN 218,9698
#define GDTIOCTL_EVENT 219,9765
#define S_OK 222,9864
#define S_BSY 223,9927
#define S_RAW_SCSI 224,9997
#define S_RAW_ILL 225,10075
#define INIT_RETRIES 228,10170
#define INIT_TIMEOUT 229,10242
#define POLL_TIMEOUT 230,10312
#define DEFAULT_PRI 233,10402
#define IOCTL_PRI 234,10431
#define HIGH_PRI 235,10460
#define DATA_IN 238,10512
#define DATA_OUT 239,10583
#define ID0REG 242,10693
#define EINTENABREG 243,10756
#define SEMA0REG 244,10827
#define SEMA1REG 245,10899
#define LDOORREG 246,10970
#define EDENABREG 247,11039
#define EDOORREG 248,11120
#define MAILBOXREG 249,11195
#define EISAREG 250,11273
#define LINUX_OS 253,11367
#define SCATTER_GATHER 254,11443
#define GDTH_MAXSG 255,11509
#define SECS32 256,11581
#define BIOS_ID_OFFS 257,11650
#define LOCALBOARD 258,11731
#define ASYNCINDEX 259,11805
#define SPEZINDEX 260,11882
#define GDT_WR_THROUGH 261,11962
typedef u32     ulong32;ulong32265,12057
#define PACKED 266,12082
} PACKED gdth_msg_str;gdth_msg_str277,12644
} PACKED gdth_getch_str;gdth_getch_str285,13006
} PACKED gdth_iochan_str;gdth_iochan_str300,13661
} PACKED gdth_cpar_str;gdth_cpar_str309,14101
} PACKED gdth_cstat_str;gdth_cstat_str318,14454
} PACKED gdth_cinfo_str;gdth_cinfo_str323,14550
} PACKED gdth_binfo_str;gdth_binfo_str352,16436
} PACKED gdth_sg_str;gdth_sg_str358,16632
} PACKED gdth_cmd_str;gdth_cmd_str410,19685
#define ES_ASYNC 413,19742
#define ES_DRIVER 414,19764
#define ES_TEST 415,19786
#define ES_SYNC 416,19808
} PACKED gdth_evt_data;gdth_evt_data446,20746
} PACKED gdth_evt_str;gdth_evt_str457,21045
} PACKED gdt_dpr_if;gdt_dpr_if481,22166
} PACKED gdt_pci_sram;gdt_pci_sram492,22677
} PACKED gdt_eisa_sram;gdt_eisa_sram500,23027
} PACKED gdt2_dpram_str;gdt2_dpram_str528,24288
} PACKED gdt6_dpram_str;gdt6_dpram_str548,25084
} PACKED gdt6c_plx_regs;gdt6c_plx_regs568,26137
} PACKED gdt6c_dpram_str;gdt6c_dpram_str577,26433
} PACKED gdt6m_i960_regs;gdt6m_i960_regs596,27381
} PACKED gdt6m_dpram_str;gdt6m_dpram_str606,27751
} gdth_pci_str;gdth_pci_str621,28370
} gdth_ha_str;gdth_ha_str671,31298
} gdth_num_str;gdth_num_str677,31429
} gdth_ext_str;gdth_ext_str684,31642
} PACKED gdth_inq_data;gdth_inq_data700,31998
} PACKED gdth_rdcap_data;gdth_rdcap_data706,32133
} PACKED gdth_sense_data;gdth_sense_data720,32451
} PACKED gdth_modep_data;gdth_modep_data736,32809
} PACKED gdth_stackframe;gdth_stackframe741,32946
extern struct proc_dir_entry proc_scsi_gdth;760,33454
#define GDTH 766,33709
extern struct proc_dir_entry proc_scsi_gdth;791,35333
#define GDTH 793,35432
#define GDTH 815,36617

drivers/scsi/scsi_obsolete.c,1144
#define __NO_VERSION__49,1907
#define INTERNAL_ERROR 78,2519
extern volatile struct Scsi_Host * host_active;89,2898
#define SCSI_BLOCK(SCSI_BLOCK90,2946
static unsigned char generic_sense[93,3092
    #define SCSI_TIMEOUT 111,3606
    #define SCSI_TIMEOUT 113,3644
    #define SENSE_TIMEOUT 117,3697
    #define ABORT_TIMEOUT 118,3736
    #define RESET_TIMEOUT 119,3775
    #define SENSE_TIMEOUT 121,3820
    #define RESET_TIMEOUT 122,3856
    #define ABORT_TIMEOUT 123,3892
#define MIN_RESET_PERIOD 128,4008
#define NORMAL_TIMEOUT 135,4096
#define IN_ABORT 136,4121
#define IN_RESET 137,4141
#define IN_RESET2 138,4161
#define IN_RESET3 139,4181
void scsi_old_times_out 147,4402
static void scsi_request_sense 217,6656
static int check_sense 242,7305
void scsi_old_done 326,10080
#define CMD_FINISHED 351,10764
#define MAYREDO 352,10787
#define REDO 353,10806
#define PENDING 354,10825
static int scsi_abort 712,19329
static inline void scsi_mark_device_reset(812,22066
void scsi_mark_host_reset(821,22261
static void scsi_mark_bus_reset(836,22626
static int scsi_reset 850,22967
int update_timeout(1093,31634

drivers/scsi/pci2000.h,3619
#define _PCI2000_H28,1132
#define	PSI_EIDE_SCSIOP	34,1228
#define	CHAR	39,1399
#define	UCHAR	40,1417
#define	SHORT	41,1445
#define	USHORT	42,1465
#define	BOOL	43,1495
#define	LONG	44,1513
#define	ULONG	45,1531
#define	VOID	46,1559
typedef	CHAR	*PCHAR;PCHAR48,1578
typedef	UCHAR	*PUCHAR;PUCHAR49,1599
typedef	SHORT	*PSHORT;PSHORT50,1622
typedef	USHORT	*PUSHORT;PUSHORT51,1645
typedef	BOOL	*PBOOL;PBOOL52,1670
typedef	LONG	*PLONG;PLONG53,1691
typedef	ULONG	*PULONG;PULONG54,1712
typedef	VOID	*PVOID;PVOID55,1735
#define ANY2SCSI(ANY2SCSI61,1887
#define SCSI2LONG(SCSI2LONG65,1993
#define XANY2SCSI(XANY2SCSI70,2130
#define XSCSI2LONG(XSCSI2LONG76,2312
#define SCSIOP_TEST_UNIT_READY	85,2628
#define SCSIOP_REZERO_UNIT	86,2665
#define SCSIOP_REWIND	87,2699
#define SCSIOP_REQUEST_BLOCK_ADDR	88,2729
#define SCSIOP_REQUEST_SENSE	89,2768
#define SCSIOP_FORMAT_UNIT	90,2803
#define SCSIOP_READ_BLOCK_LIMITS	91,2837
#define SCSIOP_REASSIGN_BLOCKS	92,2875
#define SCSIOP_READ6	93,2912
#define SCSIOP_RECEIVE	94,2941
#define SCSIOP_WRITE6	95,2972
#define SCSIOP_PRINT	96,3002
#define SCSIOP_SEND	97,3031
#define SCSIOP_SEEK6	98,3060
#define SCSIOP_TRACK_SELECT	99,3089
#define SCSIOP_SLEW_PRINT	100,3124
#define SCSIOP_SEEK_BLOCK	101,3157
#define SCSIOP_PARTITION	102,3190
#define SCSIOP_READ_REVERSE	103,3222
#define SCSIOP_WRITE_FILEMARKS	104,3257
#define SCSIOP_FLUSH_BUFFER	105,3294
#define SCSIOP_SPACE	106,3329
#define SCSIOP_INQUIRY	107,3358
#define SCSIOP_VERIFY6	108,3389
#define SCSIOP_RECOVER_BUF_DATA	109,3420
#define SCSIOP_MODE_SELECT	110,3458
#define SCSIOP_RESERVE_UNIT	111,3492
#define SCSIOP_RELEASE_UNIT	112,3527
#define SCSIOP_COPY	113,3562
#define SCSIOP_ERASE	114,3591
#define SCSIOP_MODE_SENSE	115,3620
#define SCSIOP_START_STOP_UNIT	116,3653
#define SCSIOP_STOP_PRINT	117,3690
#define SCSIOP_LOAD_UNLOAD	118,3723
#define SCSIOP_RECEIVE_DIAGNOSTIC	119,3757
#define SCSIOP_SEND_DIAGNOSTIC	120,3796
#define SCSIOP_MEDIUM_REMOVAL	121,3833
#define SCSIOP_READ_CAPACITY	122,3869
#define SCSIOP_READ	123,3904
#define SCSIOP_WRITE	124,3933
#define SCSIOP_SEEK	125,3962
#define SCSIOP_LOCATE	126,3991
#define SCSIOP_WRITE_VERIFY	127,4021
#define SCSIOP_VERIFY	128,4056
#define SCSIOP_SEARCH_DATA_HIGH	129,4086
#define SCSIOP_SEARCH_DATA_EQUAL	130,4124
#define SCSIOP_SEARCH_DATA_LOW	131,4162
#define SCSIOP_SET_LIMITS	132,4199
#define SCSIOP_READ_POSITION	133,4232
#define SCSIOP_SYNCHRONIZE_CACHE	134,4267
#define SCSIOP_COMPARE	135,4305
#define SCSIOP_COPY_COMPARE	136,4336
#define SCSIOP_WRITE_DATA_BUFF	137,4371
#define SCSIOP_READ_DATA_BUFF	138,4408
#define SCSIOP_CHANGE_DEFINITION	139,4444
#define SCSIOP_READ_SUB_CHANNEL	140,4482
#define SCSIOP_READ_TOC	141,4520
#define SCSIOP_READ_HEADER	142,4552
#define SCSIOP_PLAY_AUDIO	143,4586
#define SCSIOP_PLAY_AUDIO_MSF	144,4619
#define SCSIOP_PLAY_TRACK_INDEX	145,4655
#define SCSIOP_PLAY_TRACK_RELATIVE	146,4693
#define SCSIOP_PAUSE_RESUME	147,4733
#define SCSIOP_LOG_SELECT	148,4768
#define SCSIOP_LOG_SENSE	149,4801
#define SCSIOP_MODE_SELECT10	150,4833
#define SCSIOP_MODE_SENSE10	151,4868
#define SCSIOP_LOAD_UNLOAD_SLOT	152,4903
#define SCSIOP_MECHANISM_STATUS	153,4941
#define SCSIOP_READ_CD	154,4979
typedef	struct _READ_CAPACITY_DATA_READ_CAPACITY_DATA157,5043
	}	READ_CAPACITY_DATA, *PREAD_CAPACITY_DATA;PREAD_CAPACITY_DATA161,5210
typedef struct _INQUIRYDATA_INQUIRYDATA164,5277
	}	INQUIRYDATA, *PINQUIRYDATA;PINQUIRYDATA187,5863
	#define NULL 200,6264
extern struct proc_dir_entry Proc_Scsi_Pci2000;203,6288
#define PCI2000 205,6337

drivers/scsi/psi_roy.h,6535
#define	ROY_HOST29,1128
#define	VENDOR_PSI	34,1272
#define	DEVICE_ROY_1	35,1300
#define MAXADAPTER	40,1476
#define	MAX_BUS	41,1571
#define	MAX_UNITS	42,1592
#define	TIMEOUT_COMMAND	43,1615
#define RTR_MAILBOX	48,1833
#define RTR_LOCAL_DOORBELL	49,1864
#define RTR_PCI_DOORBELL	50,1900
#define	CMD_READ_CHS	57,2102
#define	CMD_READ	58,2173
#define	CMD_READ_SG	59,2241
#define	CMD_WRITE_CHS	60,2314
#define	CMD_WRITE	61,2387
#define	CMD_WRITE_SG	62,2457
#define	CMD_READ_CHS_SG	63,2542
#define	CMD_WRITE_CHS_SG	64,2629
#define	CMD_VERIFY_CHS	65,2717
#define	CMD_VERIFY	66,2800
#define	CMD_DASD_CDB	67,2880
#define	CMD_DASD_CDB_SG	68,2944
#define	CMD_READ_ABS	70,3032
#define	CMD_WRITE_ABS	71,3085
#define	CMD_VERIFY_ABS	72,3140
#define	CMD_TEST_READY	73,3197
#define	CMD_LOCK_DOOR	74,3272
#define	CMD_UNLOCK_DOOR	75,3324
#define	CMD_EJECT_MEDIA	76,3380
#define	CMD_UPDATE_CAP	77,3433
#define	CMD_TEST_PRIV	78,3497
#define	CMD_SCSI_THRU	81,3570
#define	CMD_SCSI_THRU_SG	82,3627
#define	CMD_SCSI_REQ_SENSE	83,3706
#define	CMD_DASD_RAID_RQ	85,3800
#define	CMD_DASD_RAID_RQ0	86,3866
#define	CMD_DASD_RAID_RQ1	87,3957
#define	CMD_DASD_RAID_RQ5	88,4048
#define	CMD_DASD_SCSI_INQ	90,4140
#define	CMD_DASD_CAP	91,4220
#define	CMD_DASD_INQ	92,4273
#define	CMD_SCSI_INQ	93,4366
#define	CMD_READ_SETUP	94,4416
#define	CMD_WRITE_SETUP	95,4489
#define	CMD_READ_CONFIG	96,4579
#define	CMD_WRITE_CONFIG	97,4666
#define	CMD_TEXT_DEVICE	99,4763
#define	CMD_TEXT_SIGNON	100,4819
#define	CMD_QUEUE	102,4876
#define	CMD_PREFETCH	104,4971
#define	CMD_TEST_WRITE	105,5035
#define	CMD_LAST_STATUS	106,5103
#define	CMD_ABORT	107,5178
#define	CMD_ERROR	108,5237
#define	CMD_DONE	109,5303
#define	CMD_DIAGNOSTICS	110,5354
#define	CMD_FEATURE_MODE	111,5443
#define	CMD_DASD_INQUIRE	112,5506
#define	CMD_FEATURE_QUERY	113,5588
#define	CMD_DASD_EJECT	114,5657
#define	CMD_DASD_LOCK	115,5729
#define	CMD_DASD_TYPE	116,5799
#define	CMD_NUM_DEV	117,5858
#define	CMD_GET_PARMS	118,5949
#define	CMD_SPECIFY	119,6009
#define	CMD_RAID_GET_DEV	121,6099
#define CMD_RAID_READ	122,6162
#define	CMD_RAID_WRITE	123,6225
#define	CMD_RAID_LITEUP	124,6290
#define	CMD_RAID_REBUILD	125,6371
#define	CMD_RAID_MUTE	126,6436
#define	CMD_RAID_FAIL	127,6495
#define	CMD_RAID_STATUS	128,6552
#define	CMD_RAID_STOP	129,6613
#define CMD_RAID_START	130,6681
#define	CMD_RAID0_READ	131,6735
#define	CMD_RAID0_WRITE	132,6799
#define	CMD_RAID5_READ	133,6865
#define	CMD_RAID5_WRITE	134,6929
#define	CMD_ERASE_TABLES	136,6996
#define	CMD_SCSI_GET	138,7078
#define	CMD_SCSI_TIMEOUT	139,7142
#define	CMD_SCSI_ERROR	140,7209
#define	CMD_GET_SPARMS	141,7312
#define	CMD_SCSI_ABORT	142,7376
#define	CMD_CHIRP_CHIRP	144,7447
#define	CMD_GET_LAST_DONE	145,7509
#define	CMD_GET_FEATURES	146,7580
#define CMD_CLEAR_CACHE	147,7642
#define	CMD_BIOS_TEST	148,7711
#define	CMD_WAIT_FLUSH	149,7779
#define	CMD_RESET_BUS	150,7864
#define	CMD_STARTUP_QRY	151,7918
#define	CMD_RESET	152,7981
#define	CMD_RESTART_RESET	154,8035
#define	CMD_SOFT_RESET	155,8127
#define	ERR08_TAGGED	162,8352
#define	ERR16_NONE	164,8416
#define	ERR16_SC_COND_MET	165,8461
#define	ERR16_CMD	166,8529
#define	ERR16_SC_CHECK_COND	167,8577
#define	ERR16_CMD_NOT	168,8649
#define ERR16_NO_DEVICE 169,8708
#define	ERR16_SECTOR	170,8775
#define	ERR16_PROTECT	171,8822
#define	ERR16_NOSECTOR	172,8875
#define	ERR16_MEDIA	173,8930
#define	ERR16_CONTROL	174,8980
#define	ERR16_CONTROL_DMA	175,9034
#define	ERR16_NO_ALARM	176,9102
#define	ERR16_OP_BUSY	177,9160
#define	ERR16_SEEK	178,9212
#define	ERR16_DEVICE_FAIL	179,9260
#define ERR16_TIMEOUT	180,9318
#define	ERR16_DEV_NOT_READY	181,9369
#define	ERR16_UNDEFINED	182,9427
#define	ERR16_WRITE_FAULT	183,9482
#define ERR16_INVALID_DEV	184,9534
#define	ERR16_DEVICE_BUSY	185,9596
#define	ERR16_MEMORY	186,9651
#define	ERR16_NO_FEATURE	187,9729
#define	ERR16_NOTAG	188,9791
#define	ERR16_NOT_READY	189,9850
#define	ERR16_SETUP_FLASH	190,9916
#define	ERR16_SETUP_SIZE	191,9997
#define	ERR16_SENSE	192,10059
#define	ERR16_SC_BUSY	193,10120
#define	ERR16_SC_RES_CONFL	194,10176
#define	ERR16_SC_CMD_TERM	195,10252
#define	ERR16_SC_OTHER	196,10325
#define	ERR16_MEDIA_CHANGED	197,10411
#define	ERR32_NONE	199,10485
#define	ERR32_SC_COND_MET	200,10533
#define	ERR32_CMD	201,10604
#define	ERR32_SC_CHECK_COND	202,10655
#define	ERR32_CMD_NOT	203,10730
#define ERR32_NO_DEVICE 204,10792
#define	ERR32_SECTOR	205,10862
#define	ERR32_PROTECT	206,10912
#define	ERR32_NOSECTOR	207,10968
#define	ERR32_MEDIA	208,11026
#define	ERR32_CONTROL	209,11079
#define	ERR32_CONTROL_DMA	210,11136
#define	ERR32_NO_ALARM	211,11200
#define	ERR32_OP_BUSY	212,11262
#define	ERR32_SEEK	213,11317
#define	ERR32_DEVICE_FAIL	214,11368
#define ERR32_TIMEOUT	215,11429
#define	ERR32_DEV_NOT_READY	216,11483
#define	ERR32_UNDEFINED	217,11544
#define	ERR32_WRITE_FAULT	218,11602
#define ERR32_INVALID_DEV	219,11657
#define	ERR32_DEVICE_BUSY	220,11722
#define	ERR32_MEMORY	221,11780
#define	ERR32_NO_FEATURE	222,11861
#define	ERR32_NOTAG	223,11926
#define	ERR32_NOT_READY	224,11988
#define	ERR32_SETUP_FLASH	225,12057
#define	ERR32_SETUP_SIZE	226,12141
#define	ERR32_SENSE	227,12206
#define	ERR32_SC_BUSY	228,12270
#define	ERR32_SC_RES_CONFL	229,12329
#define	ERR32_SC_CMD_TERM	230,12408
#define	ERR32_SC_OTHER	231,12484
#define	ERR32_MEDIA_CHANGED	232,12573
#define	SPEC_INTERRUPT	239,12834
#define	SPEC_BACKWARD_SG	240,12908
#define	SPEC_DOS_BLOCK	241,12998
#define	SPEC_OS2_V3	242,13068
#define	SPCE_SCO_3242	243,13112
#define	SPEC_QNX_4X	244,13159
#define	SPEC_NOVELL_NWPA	245,13202
typedef	struct	_CNT_SCSI_INQ_CNT_SCSI_INQ252,13442
	}	CNT_SCSI_INQ;CNT_SCSI_INQ265,13946
typedef	struct	_CNT_IDE_INQ_CNT_IDE_INQ267,13964
	}	CNT_IDE_INQ;CNT_IDE_INQ297,15043
typedef struct	_DASD_INQUIRE_DASD_INQUIRE299,15060
	}	DASD_INQUIRE;DASD_INQUIRE307,15246
#define DEVC_DASD	314,15426
#define DEVC_SEQACESS	315,15487
#define DEVC_PRINTER	316,15547
#define DEVC_PROCESSOR	317,15596
#define DEVC_WRITEONCE	318,15649
#define DEVC_CDROM	319,15703
#define DEVC_SCANNER	320,15750
#define DEVC_OPTICAL	321,15799
#define DEVC_MEDCHGR	322,15855
#define	DEVC_DASD_REMOVABLE	323,15911
#define	DEVC_NONE	324,15991
#define	SC_MY_RAID	327,16060
#define	MY_SCSI_QUERY0	328,16143
#define	MY_SCSI_QUERY1	329,16236
#define	MY_SCSI_QUERY5	330,16329
#define	MY_SCSI_REBUILD	331,16422
#define MY_SCSI_DEMOFAIL	332,16506
#define	MY_SCSI_ALARMMUTE	333,16590

drivers/scsi/pci2220i.c,1957
#define	PCI2220I_VERSION	49,1597
#define	READ_CMD	53,1786
#define	WRITE_CMD	54,1828
#define	MAX_BUS_MASTER_BLOCKS	55,1872
struct proc_dir_entry Proc_Scsi_Pci2220i 58,1958
#define DEB(DEB64,2106
#define STOP_HERE(STOP_HERE65,2123
#define DEB(DEB67,2187
#define STOP_HERE(STOP_HERE68,2202
#define MAXADAPTER 71,2230
	}	OUR_DEVICE, *POUR_DEVICE;POUR_DEVICE91,2976
	}	ADAPTER2220I, *PADAPTER2220I;PADAPTER2220I141,5375
#define HOSTDATA(HOSTDATA143,5409
#define	RECON_PHASE_READY	145,5466
#define	RECON_PHASE_COPY	146,5498
#define	RECON_PHASE_UPDATE	147,5529
#define	RECON_PHASE_LAST	148,5562
#define	RECON_PHASE_END	149,5593
#define	RECON_PHASE_MARKING	150,5625
#define	RECON_PHASE_FAILOVER	151,5659
static struct	Scsi_Host 	   *PsiHost[153,5694
static			int				NumAdapters 154,5779
static			SETUP			DaleSetup;155,5812
static			DISK_MIRROR		DiskMirror[156,5840
static			ULONG			ModeArray[157,5877
static			UCHAR			Buffer[158,5979
static void MuteAlarm 172,6415
static int WaitReady 189,6931
static int WaitReadyReset 213,7555
static int WaitDrq 241,8386
static int HardReset 267,9043
static void BusMaster 298,10093
static int WriteData 334,11306
static int WriteDataBoth 364,12155
static UCHAR IdeCmd 406,13281
static UCHAR IdeCmdBoth 437,14362
static void OpDone 479,15662
static ULONG InlineIdentify 524,16786
static ULONG DecodeError 549,17632
static void StartTimer 586,18491
static int WriteSignature 604,19052
static int InitFailover 639,20366
static void TimerExpiry 673,21461
static LONG SetReconstruct 829,25346
static void ReconTimerExpiry 848,26081
static void Irq_Handler 1065,32145
int Pci2220i_QueueCommand 1414,42404
static void internal_done(1595,47130
int Pci2220i_Command 1609,47515
VOID ReadFlash 1630,48150
int Pci2220i_Detect 1658,49169
int Pci2220i_Abort 1849,56972
int Pci2220i_Reset 1868,57625
int Pci2220i_BiosParam 1888,58191
Scsi_Host_Template driver_template 1903,58530

drivers/scsi/gdth_ioctl.h,424
#define _GDTH_IOCTL_H2,22
#define GDTIOCTL_MASK 9,138
#define GDTIOCTL_GENERAL 10,175
#define GDTIOCTL_DRVERS 11,243
#define GDTIOCTL_CTRTYPE 12,316
#define GDTIOCTL_OSVERS 13,390
#define GDTIOCTL_CTRCNT 14,459
#define GDTIOCTL_LOCKDRV 15,534
#define GDTIOCTL_LOCKCHN 16,604
#define GDTIOCTL_EVENT 17,671
#define GDTIOCTL_MAGIC 19,749
} gdth_iowr_str;gdth_iowr_str49,1968
} gdth_iord_str;gdth_iord_str83,3292

drivers/scsi/pci2220i.h,4657
#define	PSI_EIDE_SCSIOP	29,1144
#define	CHAR	34,1310
#define	UCHAR	35,1329
#define	SHORT	36,1358
#define	USHORT	37,1379
#define	BOOL	38,1410
#define	LONG	39,1439
#define	ULONG	40,1458
#define	VOID	41,1487
#define	TIMEOUT_READY	48,1663
#define	TIMEOUT_DRQ	49,1706
#define	TIMEOUT_DATA	50,1748
#define ANY2SCSI(ANY2SCSI55,1924
#define SCSI2LONG(SCSI2LONG59,2030
#define XANY2SCSI(XANY2SCSI64,2167
#define XSCSI2LONG(XSCSI2LONG70,2349
#define	SelectSpigot(SelectSpigot76,2527
#define WriteCommand(WriteCommand77,2603
#define SCSIOP_TEST_UNIT_READY	82,2813
#define SCSIOP_REZERO_UNIT	83,2850
#define SCSIOP_REWIND	84,2884
#define SCSIOP_REQUEST_BLOCK_ADDR	85,2914
#define SCSIOP_REQUEST_SENSE	86,2953
#define SCSIOP_FORMAT_UNIT	87,2988
#define SCSIOP_READ_BLOCK_LIMITS	88,3022
#define SCSIOP_REASSIGN_BLOCKS	89,3060
#define SCSIOP_READ6	90,3097
#define SCSIOP_RECEIVE	91,3126
#define SCSIOP_WRITE6	92,3157
#define SCSIOP_PRINT	93,3187
#define SCSIOP_SEND	94,3216
#define SCSIOP_SEEK6	95,3245
#define SCSIOP_TRACK_SELECT	96,3274
#define SCSIOP_SLEW_PRINT	97,3309
#define SCSIOP_SEEK_BLOCK	98,3342
#define SCSIOP_PARTITION	99,3375
#define SCSIOP_READ_REVERSE	100,3407
#define SCSIOP_WRITE_FILEMARKS	101,3442
#define SCSIOP_FLUSH_BUFFER	102,3479
#define SCSIOP_SPACE	103,3514
#define SCSIOP_INQUIRY	104,3543
#define SCSIOP_VERIFY6	105,3574
#define SCSIOP_RECOVER_BUF_DATA	106,3605
#define SCSIOP_MODE_SELECT	107,3643
#define SCSIOP_RESERVE_UNIT	108,3677
#define SCSIOP_RELEASE_UNIT	109,3712
#define SCSIOP_COPY	110,3747
#define SCSIOP_ERASE	111,3776
#define SCSIOP_MODE_SENSE	112,3805
#define SCSIOP_START_STOP_UNIT	113,3838
#define SCSIOP_STOP_PRINT	114,3875
#define SCSIOP_LOAD_UNLOAD	115,3908
#define SCSIOP_RECEIVE_DIAGNOSTIC	116,3942
#define SCSIOP_SEND_DIAGNOSTIC	117,3981
#define SCSIOP_MEDIUM_REMOVAL	118,4018
#define SCSIOP_READ_CAPACITY	119,4054
#define SCSIOP_READ	120,4089
#define SCSIOP_WRITE	121,4118
#define SCSIOP_SEEK	122,4147
#define SCSIOP_LOCATE	123,4176
#define SCSIOP_WRITE_VERIFY	124,4206
#define SCSIOP_VERIFY	125,4241
#define SCSIOP_SEARCH_DATA_HIGH	126,4271
#define SCSIOP_SEARCH_DATA_EQUAL	127,4309
#define SCSIOP_SEARCH_DATA_LOW	128,4347
#define SCSIOP_SET_LIMITS	129,4384
#define SCSIOP_READ_POSITION	130,4417
#define SCSIOP_SYNCHRONIZE_CACHE	131,4452
#define SCSIOP_COMPARE	132,4490
#define SCSIOP_COPY_COMPARE	133,4521
#define SCSIOP_WRITE_DATA_BUFF	134,4556
#define SCSIOP_READ_DATA_BUFF	135,4593
#define SCSIOP_CHANGE_DEFINITION	136,4629
#define SCSIOP_READ_SUB_CHANNEL	137,4667
#define SCSIOP_READ_TOC	138,4705
#define SCSIOP_READ_HEADER	139,4737
#define SCSIOP_PLAY_AUDIO	140,4771
#define SCSIOP_PLAY_AUDIO_MSF	141,4804
#define SCSIOP_PLAY_TRACK_INDEX	142,4840
#define SCSIOP_PLAY_TRACK_RELATIVE	143,4878
#define SCSIOP_PAUSE_RESUME	144,4918
#define SCSIOP_LOG_SELECT	145,4953
#define SCSIOP_LOG_SENSE	146,4986
#define SCSIOP_MODE_SELECT10	147,5018
#define SCSIOP_MODE_SENSE10	148,5053
#define SCSIOP_LOAD_UNLOAD_SLOT	149,5088
#define SCSIOP_MECHANISM_STATUS	150,5126
#define SCSIOP_READ_CD	151,5164
#define IDE_COMMAND_ATAPI_RESET	154,5223
#define IDE_COMMAND_READ	155,5261
#define IDE_COMMAND_WRITE	156,5293
#define IDE_COMMAND_RECALIBRATE	157,5326
#define IDE_COMMAND_SEEK	158,5364
#define IDE_COMMAND_SET_PARAMETERS	159,5396
#define IDE_COMMAND_VERIFY	160,5436
#define IDE_COMMAND_ATAPI_PACKET	161,5470
#define IDE_COMMAND_ATAPI_IDENTIFY	162,5508
#define	IDE_CMD_READ_MULTIPLE	163,5548
#define	IDE_CMD_WRITE_MULTIPLE	164,5584
#define	IDE_CMD_SET_MULTIPLE	165,5621
#define IDE_COMMAND_IDENTIFY	166,5656
#define IDE_STATUS_ERROR	169,5718
#define IDE_STATUS_INDEX	170,5750
#define IDE_STATUS_CORRECTED_ERROR	171,5782
#define IDE_STATUS_DRQ	172,5822
#define IDE_STATUS_DSC	173,5853
#define	IDE_STATUS_WRITE_FAULT	174,5884
#define IDE_STATUS_DRDY	175,5921
#define IDE_STATUS_BUSY	176,5953
#define	IDE_ERROR_AMNF	179,6011
#define	IDE_ERROR_TKONF	180,6042
#define	IDE_ERROR_ABRT	181,6074
#define	IDE_ERROR_MCR	182,6105
#define	IDE_ERROR_IDFN	183,6135
#define	IDE_ERROR_MC	184,6166
#define	IDE_ERROR_UNC	185,6195
#define	IDE_ERROR_BBK	186,6225
typedef	struct _READ_CAPACITY_DATA_READ_CAPACITY_DATA189,6288
	}	READ_CAPACITY_DATA, *PREAD_CAPACITY_DATA;PREAD_CAPACITY_DATA193,6455
typedef struct _INQUIRYDATA_INQUIRYDATA196,6522
	}	INQUIRYDATA, *PINQUIRYDATA;PINQUIRYDATA219,7108
typedef struct _IDENTIFY_DATA_IDENTIFY_DATA224,7194
	}	IDENTIFY_DATA, *PIDENTIFY_DATA;PIDENTIFY_DATA277,9892
	#define NULL 291,10353
extern struct proc_dir_entry Proc_Scsi_Pci2220i;294,10377
#define PCI2220I 296,10427

drivers/scsi/gdth_proc.c,450
int gdth_proc_info(7,105
static int gdth_set_info(31,785
static int gdth_set_asc_info(68,1867
static int gdth_set_bin_info(198,6374
static int gdth_get_info(412,14530
void gdth_scsi_done(478,16445
static int gdth_ioctl_alloc(488,16631
static void gdth_ioctl_free(510,17048
static void gdth_wait_completion(523,17261
static void gdth_stop_timeout(556,18171
static void gdth_start_timeout(581,18864
static int gdth_update_timeout(606,19555

drivers/scsi/psi_dale.h,3550
#define	VENDOR_PSI	31,1238
#define	DEVICE_DALE_1	32,1266
#define	DALE_MAXDRIVES	37,1439
#define	SECTORSXFER	38,1466
#define	BYTES_PER_SECTOR	39,1491
#define	DEFAULT_TIMING_MODE	40,1521
#define	DALE_FLASH_PAGE_SIZE	45,1684
#define	DALE_FLASH_SIZE	46,1748
#define	DALE_FLASH_BIOS	48,1782
#define	DALE_FLASH_SETUP	49,1842
#define	DALE_FLASH_RAID	50,1928
#define	DALE_FLASH_FACTORY	51,1993
#define	DALE_FLASH_BIOS_SIZE	53,2081
#define	REG_DATA	58,2290
#define	REG_ERROR	59,2317
#define	REG_SECTOR_COUNT	60,2345
#define	REG_LBA_0	61,2378
#define	REG_LBA_8	62,2406
#define	REG_LBA_16	63,2434
#define	REG_LBA_24	64,2463
#define	REG_STAT_CMD	65,2492
#define	REG_STAT_SEL	66,2522
#define	REG_FAIL	67,2552
#define	REG_ALT_STAT	68,2579
#define	REG_DRIVE_ADRS	69,2609
#define	DALE_DATA_SLOW	71,2642
#define	DALE_DATA_MODE2	72,2681
#define	DALE_DATA_MODE3	73,2721
#define	DALE_DATA_MODE4	74,2761
#define	DALE_DATA_MODE4P	75,2801
#define RTR_LOCAL_RANGE	77,2842
#define RTR_LOCAL_REMAP	78,2876
#define RTR_EXP_RANGE	79,2910
#define RTR_EXP_REMAP	80,2942
#define RTR_REGIONS	81,2974
#define RTR_DM_MASK	82,3005
#define RTR_DM_LOCAL_BASE	83,3036
#define RTR_DM_IO_BASE	84,3071
#define RTR_DM_PCI_REMAP	85,3104
#define RTR_DM_IO_CONFIG	86,3138
#define RTR_MAILBOX	87,3172
#define RTR_LOCAL_DOORBELL	88,3203
#define RTR_PCI_DOORBELL	89,3239
#define RTR_INT_CONTROL_STATUS 90,3273
#define RTR_EEPROM_CONTROL_STATUS	91,3313
#define RTL_DMA0_MODE	93,3355
#define RTL_DMA0_PCI_ADDR	94,3386
#define RTL_DMA0_LOCAL_ADDR	95,3420
#define RTL_DMA0_COUNT	96,3456
#define RTL_DMA0_DESC_PTR	97,3488
#define RTL_DMA1_MODE	98,3522
#define RTL_DMA1_PCI_ADDR	99,3553
#define RTL_DMA1_LOCAL_ADDR	100,3587
#define RTL_DMA1_COUNT	101,3623
#define RTL_DMA1_DESC_PTR	102,3655
#define RTL_DMA_COMMAND_STATUS	103,3689
#define RTL_DMA_ARB0	104,3727
#define RTL_DMA_ARB1	105,3757
#define	DALE_CHANNEL_DEVICE_0	110,3926
#define	DALE_CHANNEL_DEVICE_1	111,3989
#define	DALE_CHANNEL_DEVICE_2	112,4023
#define	DALE_CHANNEL_DEVICE_3	113,4057
#define	DALE_SCRATH_DEVICE_0	115,4092
#define	DALE_SCRATH_DEVICE_1	116,4147
#define DALE_SCRATH_DEVICE_2	117,4180
#define	DALE_SCRATH_DEVICE_3	118,4213
#define	DALE_RAID_0_STATUS	120,4247
#define DALE_RAID_1_STATUS	121,4279
#define	DALE_TIMING_MODE	123,4312
#define	DALE_NUM_DRIVES	124,4383
#define	DALE_RAID_ON	125,4461
#define	DALE_LAST_ERROR	126,4509
#define	SEL_NONE	131,4707
#define	SEL_1	132,4734
#define	SEL_2	133,4759
#define	PIC1	138,4929
#define	PIC2	139,4986
#define	INT_OCW1	140,5044
#define	EOI	141,5108
#define GEOMETRY_NONE	146,5304
#define GEOMETRY_SET	147,5350
#define	GEOMETRY_LBA	148,5397
#define	GEOMETRY_PHOENIX	149,5464
#define	DEVICE_NONE	151,5550
#define	DEVICE_INACTIVE	152,5602
#define	DEVICE_ATAPI	153,5680
#define	DEVICE_DASD_NONLBA	154,5750
#define	DEVICE_DASD_LBA	155,5817
	} SETUP_DEVICE, *PSETUP_DEVICE;PSETUP_DEVICE169,6429
	}	SETUP, *PSETUP;PSETUP182,6706
	}	DISK_MIRROR;DISK_MIRROR193,7095
typedef struct	DEVICE_RAID1DEVICE_RAID1195,7112
	}	DEVICE_RAID1, *PDEVICE_RAID1;PDEVICE_RAID1199,7188
#define	DISK_MIRROR_POSITION	201,7222
#define	SIGNATURE	202,7258
#define	MASK_SERIAL_NUMBER	204,7285
#define	MASK_SERIAL_UNIT	205,7356
#define	UCBF_MIRRORED	208,7448
#define	UCBF_MATCHED	209,7505
#define	UCBF_SURVIVOR	210,7566
#define	UCBF_REBUILD	211,7640
#define	SC_MY_RAID	214,7741
#define	MY_SCSI_QUERY1	215,7824
#define	MY_SCSI_REBUILD	216,7917
#define MY_SCSI_DEMOFAIL	217,8001
#define	MY_SCSI_ALARMMUTE	218,8085

drivers/scsi/gdth_proc.h,26
#define _GDTH_PROC_H2,21

drivers/scsi/psi240i.c,1315
struct proc_dir_entry Proc_Scsi_Psi240i 49,1518
#define DEB(DEB55,1663
#define DEB(DEB57,1686
#define MAXBOARDS 60,1709
#define	PORT_DATA	62,1803
#define	PORT_ERROR	63,1826
#define	PORT_SECTOR_COUNT	64,1850
#define	PORT_LBA_0	65,1879
#define	PORT_LBA_8	66,1903
#define	PORT_LBA_16	67,1927
#define	PORT_LBA_24	68,1952
#define	PORT_STAT_CMD	69,1977
#define	PORT_SEL_FAIL	70,2003
#define	PORT_IRQ_STATUS	71,2029
#define	PORT_ADDRESS	72,2057
#define	PORT_FAIL	73,2083
#define	PORT_ALT_STAT	74,2107
	}	OUR_DEVICE, *POUR_DEVICE;POUR_DEVICE87,2583
	}	ADAPTER240I, *PADAPTER240I;PADAPTER240I100,2818
#define HOSTDATA(HOSTDATA102,2850
static struct	Scsi_Host *PsiHost[104,2906
static			IDENTIFY_DATA	identifyData;105,2991
static			SETUP			ChipSetup;106,3028
static	USHORT	portAddr[108,3057
static int WriteData 120,3490
static UCHAR IdeCmd 147,4335
static int SetupTransfer 188,5756
static ULONG DecodeError 217,6722
static void Irq_Handler 258,7703
static void do_Irq_Handler 373,10955
int Psi240i_QueueCommand 392,11558
static void internal_done(498,14742
int Psi240i_Command 512,15127
void ReadChipMemory 536,15846
int Psi240i_Detect 565,16593
int Psi240i_Abort 666,20583
int Psi240i_Reset 686,21269
int Psi240i_BiosParam 706,21833
Scsi_Host_Template driver_template 721,22171

drivers/scsi/psi240i.h,4847
#define _PSI240I_H28,1136
#define	PSI_EIDE_SCSIOP	34,1232
#define	CHAR	39,1398
#define	UCHAR	40,1417
#define	SHORT	41,1446
#define	USHORT	42,1467
#define	BOOL	43,1498
#define	LONG	44,1527
#define	ULONG	45,1546
#define	VOID	46,1575
#define	TIMEOUT_READY	51,1728
#define	TIMEOUT_DRQ	52,1769
#define ANY2SCSI(ANY2SCSI57,1939
#define SCSI2LONG(SCSI2LONG61,2045
#define XANY2SCSI(XANY2SCSI66,2182
#define XSCSI2LONG(XSCSI2LONG72,2364
#define SCSIOP_TEST_UNIT_READY	81,2680
#define SCSIOP_REZERO_UNIT	82,2717
#define SCSIOP_REWIND	83,2751
#define SCSIOP_REQUEST_BLOCK_ADDR	84,2781
#define SCSIOP_REQUEST_SENSE	85,2820
#define SCSIOP_FORMAT_UNIT	86,2855
#define SCSIOP_READ_BLOCK_LIMITS	87,2889
#define SCSIOP_REASSIGN_BLOCKS	88,2927
#define SCSIOP_READ6	89,2964
#define SCSIOP_RECEIVE	90,2993
#define SCSIOP_WRITE6	91,3024
#define SCSIOP_PRINT	92,3054
#define SCSIOP_SEND	93,3083
#define SCSIOP_SEEK6	94,3112
#define SCSIOP_TRACK_SELECT	95,3141
#define SCSIOP_SLEW_PRINT	96,3176
#define SCSIOP_SEEK_BLOCK	97,3209
#define SCSIOP_PARTITION	98,3242
#define SCSIOP_READ_REVERSE	99,3274
#define SCSIOP_WRITE_FILEMARKS	100,3309
#define SCSIOP_FLUSH_BUFFER	101,3346
#define SCSIOP_SPACE	102,3381
#define SCSIOP_INQUIRY	103,3410
#define SCSIOP_VERIFY6	104,3441
#define SCSIOP_RECOVER_BUF_DATA	105,3472
#define SCSIOP_MODE_SELECT	106,3510
#define SCSIOP_RESERVE_UNIT	107,3544
#define SCSIOP_RELEASE_UNIT	108,3579
#define SCSIOP_COPY	109,3614
#define SCSIOP_ERASE	110,3643
#define SCSIOP_MODE_SENSE	111,3672
#define SCSIOP_START_STOP_UNIT	112,3705
#define SCSIOP_STOP_PRINT	113,3742
#define SCSIOP_LOAD_UNLOAD	114,3775
#define SCSIOP_RECEIVE_DIAGNOSTIC	115,3809
#define SCSIOP_SEND_DIAGNOSTIC	116,3848
#define SCSIOP_MEDIUM_REMOVAL	117,3885
#define SCSIOP_READ_CAPACITY	118,3921
#define SCSIOP_READ	119,3956
#define SCSIOP_WRITE	120,3985
#define SCSIOP_SEEK	121,4014
#define SCSIOP_LOCATE	122,4043
#define SCSIOP_WRITE_VERIFY	123,4073
#define SCSIOP_VERIFY	124,4108
#define SCSIOP_SEARCH_DATA_HIGH	125,4138
#define SCSIOP_SEARCH_DATA_EQUAL	126,4176
#define SCSIOP_SEARCH_DATA_LOW	127,4214
#define SCSIOP_SET_LIMITS	128,4251
#define SCSIOP_READ_POSITION	129,4284
#define SCSIOP_SYNCHRONIZE_CACHE	130,4319
#define SCSIOP_COMPARE	131,4357
#define SCSIOP_COPY_COMPARE	132,4388
#define SCSIOP_WRITE_DATA_BUFF	133,4423
#define SCSIOP_READ_DATA_BUFF	134,4460
#define SCSIOP_CHANGE_DEFINITION	135,4496
#define SCSIOP_READ_SUB_CHANNEL	136,4534
#define SCSIOP_READ_TOC	137,4572
#define SCSIOP_READ_HEADER	138,4604
#define SCSIOP_PLAY_AUDIO	139,4638
#define SCSIOP_PLAY_AUDIO_MSF	140,4671
#define SCSIOP_PLAY_TRACK_INDEX	141,4707
#define SCSIOP_PLAY_TRACK_RELATIVE	142,4745
#define SCSIOP_PAUSE_RESUME	143,4785
#define SCSIOP_LOG_SELECT	144,4820
#define SCSIOP_LOG_SENSE	145,4853
#define SCSIOP_MODE_SELECT10	146,4885
#define SCSIOP_MODE_SENSE10	147,4920
#define SCSIOP_LOAD_UNLOAD_SLOT	148,4955
#define SCSIOP_MECHANISM_STATUS	149,4993
#define SCSIOP_READ_CD	150,5031
#define IDE_COMMAND_ATAPI_RESET	153,5090
#define IDE_COMMAND_READ	154,5128
#define IDE_COMMAND_WRITE	155,5160
#define IDE_COMMAND_RECALIBRATE	156,5193
#define IDE_COMMAND_SEEK	157,5231
#define IDE_COMMAND_SET_PARAMETERS	158,5263
#define IDE_COMMAND_VERIFY	159,5303
#define IDE_COMMAND_ATAPI_PACKET	160,5337
#define IDE_COMMAND_ATAPI_IDENTIFY	161,5375
#define	IDE_CMD_READ_MULTIPLE	162,5415
#define	IDE_CMD_WRITE_MULTIPLE	163,5451
#define	IDE_CMD_SET_MULTIPLE	164,5488
#define IDE_COMMAND_WRITE_DMA	165,5523
#define IDE_COMMAND_READ_DMA	166,5559
#define IDE_COMMAND_IDENTIFY	167,5594
#define IDE_STATUS_ERROR	170,5656
#define IDE_STATUS_INDEX	171,5688
#define IDE_STATUS_CORRECTED_ERROR	172,5720
#define IDE_STATUS_DRQ	173,5760
#define IDE_STATUS_DSC	174,5791
#define	IDE_STATUS_WRITE_FAULT	175,5822
#define IDE_STATUS_DRDY	176,5859
#define IDE_STATUS_BUSY	177,5891
#define	IDE_ERROR_AMNF	180,5949
#define	IDE_ERROR_TKONF	181,5980
#define	IDE_ERROR_ABRT	182,6012
#define	IDE_ERROR_MCR	183,6043
#define	IDE_ERROR_IDFN	184,6073
#define	IDE_ERROR_MC	185,6104
#define	IDE_ERROR_UNC	186,6133
#define	IDE_ERROR_BBK	187,6163
typedef struct _IDE_STRUCT_IDE_STRUCT190,6221
	}	IDE_STRUCT;IDE_STRUCT204,6394
typedef	struct _READ_CAPACITY_DATA_READ_CAPACITY_DATA207,6442
	}	READ_CAPACITY_DATA, *PREAD_CAPACITY_DATA;PREAD_CAPACITY_DATA211,6609
typedef struct _INQUIRYDATA_INQUIRYDATA214,6676
	}	INQUIRYDATA, *PINQUIRYDATA;PINQUIRYDATA237,7262
typedef struct _IDENTIFY_DATA_IDENTIFY_DATA240,7315
	}	IDENTIFY_DATA, *PIDENTIFY_DATA;PIDENTIFY_DATA272,8823
typedef struct _IDENTIFY_DATA2 _IDENTIFY_DATA2275,8899
	}	IDENTIFY_DATA2, *PIDENTIFY_DATA2;PIDENTIFY_DATA2305,10352
	#define NULL 318,10778
extern struct proc_dir_entry Proc_Scsi_Psi240i;321,10802
#define PSI240I 323,10851

drivers/scsi/mesh.c,2329
#define KERN_DEBUG 45,1030
int mesh_sync_period 49,1106
int mesh_sync_offset 50,1134
int mesh_sync_period 52,1166
int mesh_sync_offset 53,1233
int mesh_sync_targets 56,1268
int mesh_resel_targets 57,1340
int mesh_debug_targets 58,1417
unsigned char use_active_neg 59,1481
#define ALLOW_SYNC(ALLOW_SYNC61,1559
#define ALLOW_RESEL(ALLOW_RESEL62,1619
#define ALLOW_DEBUG(ALLOW_DEBUG63,1680
#define DEBUG_TARGET(DEBUG_TARGET64,1741
struct proc_dir_entry proc_scsi_mesh 66,1806
#define N_DBG_LOG	72,1927
#define N_DBG_SLOG	73,1948
#define NUM_DBG_EVENTS	74,1970
struct dbglog dbglog77,2035
enum mesh_phase mesh_phase87,2122
	idle,88,2140
	arbitrating,89,2147
	selecting,90,2161
	commanding,91,2173
	dataing,92,2186
	statusing,93,2196
	busfreeing,94,2208
	disconnecting,95,2221
	reselecting96,2237
enum msg_phase msg_phase99,2254
	msg_none,100,2271
	msg_out,101,2282
	msg_out_xxx,102,2292
	msg_out_last,103,2306
	msg_in,104,2321
	msg_in_bad,105,2330
enum sdtr_phase sdtr_phase108,2347
	do_sdtr,109,2365
	sdtr_sent,110,2375
	sdtr_done111,2387
struct mesh_target mesh_target114,2402
struct mesh_state mesh_state128,2665
static inline void dlog(172,3717
static inline void dumplog(174,3785
static inline void dumpslog(176,3847
#define MKWORD(MKWORD180,3924
static struct mesh_state *all_meshes;182,3999
static struct notifier_block mesh_notifier 211,5339
mesh_detect(218,5425
mesh_queue(324,8419
mesh_abort(350,8872
mesh_dump_regs(362,9120
mesh_reset(395,10365
mesh_notify_reboot(443,11775
mesh_command(464,12280
mesh_init(471,12395
mesh_start(504,13396
mesh_start_cmd(536,14078
finish_cmds(681,18601
add_sdtr_msg(702,18954
set_sdtr(715,19252
start_phase(757,20419
get_msgin(900,24366
msgin_length(915,24616
cmd_complete(934,24911
static void phase_mismatch(1112,29789
reselected(1190,31460
static void do_abort(1304,34297
handle_reset(1314,34466
do_mesh_interrupt(1347,35308
static void handle_error(1356,35534
static void handle_exception(1450,37913
mesh_interrupt(1483,38762
handle_msgin(1511,39561
mesh_done(1610,41909
mesh_completed(1644,42877
set_dma_cmds(1664,43280
halt_dma(1727,45010
data_goes_out(1777,46541
static inline u32 readtb(1817,47314
static void dlog(1830,47503
static void dumplog(1855,48099
static void dumpslog(1881,48613

drivers/scsi/mac53c94.c,558
struct proc_dir_entry proc_scsi_mac53c94 29,700
enum fsc_phase fsc_phase34,811
	idle,35,828
	selecting,36,835
	dataing,37,847
	completing,38,857
	busfreeing,39,870
struct fsc_state fsc_state42,887
static struct fsc_state *all_53c94s;57,1318
mac53c94_detect(68,1737
mac53c94_queue(136,3719
mac53c94_abort(173,4528
mac53c94_reset(179,4595
mac53c94_command(203,5200
mac53c94_init(210,5321
mac53c94_start(233,5916
do_mac53c94_interrupt(277,6891
mac53c94_interrupt(287,7137
cmd_done(444,11547
set_dma_cmds(462,11853
data_goes_out(505,13092

drivers/scsi/psi_chip.h,2294
#define PSI_CHIP28,1123
#define	CHIP_MAXDRIVES	33,1271
#define	CHIP_ADRS_0	38,1432
#define	CHIP_ADRS_1	39,1462
#define	CHIP_ADRS_2	40,1492
#define	CHIP_ADRS_3	41,1522
#define	CHIP_ADRS_4	42,1552
#define	CHIP_ADRS_5	43,1582
#define	CHIP_EEPROM_BIOS	48,1740
#define	CHIP_EEPROM_DATA	49,1795
#define	CHIP_EEPROM_FACTORY	50,1859
#define	CHIP_EEPROM_SETUP	51,1928
#define	CHIP_EEPROM_SIZE	53,1997
#define	CHIP_EEPROM_BIOS_SIZE	54,2063
#define	CHIP_EEPROM_DATA_SIZE	55,2131
#define	CHIP_EEPROM_SETUP_SIZE	56,2221
#define	CHIP_IRQ_10	61,2433
#define	CHIP_IRQ_11	62,2461
#define	CHIP_IRQ_12	63,2489
#define	CHIP_SETUP_BASE	68,2649
#define	REG_DATA	73,2827
#define	REG_ERROR	74,2852
#define	REG_SECTOR_COUNT	75,2878
#define	REG_LBA_0	76,2909
#define	REG_LBA_8	77,2935
#define	REG_LBA_16	78,2961
#define	REG_LBA_24	79,2988
#define	REG_STAT_CMD	80,3015
#define	REG_SEL_FAIL	81,3043
#define	REG_IRQ_STATUS	82,3071
#define	REG_ADDRESS	83,3101
#define	REG_FAIL	84,3129
#define	REG_ALT_STAT	85,3154
#define	REG_DRIVE_ADRS	86,3185
#define	CHIP_DEVICE	91,3345
#define	CHIP_DEVICE_0	92,3375
#define CHIP_DEVICE_1	93,3406
#define	CHIP_DEVICE_2	94,3437
#define	CHIP_DEVICE_3	95,3468
#define	CHIP_DEVICE_4	96,3499
#define	CHIP_DEVICE_5	97,3530
#define	CHIP_DEVICE_6	98,3561
#define	CHIP_DEVICE_7	99,3592
	}	CHIP_DEVICE_N;CHIP_DEVICE_N105,3766
#define	CHIP_CONFIG	107,3785
	}	CHIP_CONFIG_N;CHIP_CONFIG_N113,4028
#define	CHIP_MAP	115,4047
#define	CHIP_RAID	118,4109
#define	CHIP_RAID_1	119,4185
#define CHIP_RAID_2	120,4215
#define	CHIP_RAID_3	121,4245
#define	CHIP_RAID_4	122,4275
#define	CHIP_ID	127,4436
#define	SEL_RAM	128,4461
#define	MASK_FAIL	129,4488
#define	SECTORSXFER	134,4648
#define	SEL_NONE	139,4807
#define	SEL_1	140,4832
#define	SEL_2	141,4855
#define	SEL_3	142,4878
#define	SEL_4	143,4901
#define	PIC1	148,5067
#define	PIC2	149,5122
#define	INT_OCW1	150,5178
#define	EOI	151,5240
#define GEOMETRY_NONE	156,5434
#define GEOMETRY_AUTO	157,5478
#define GEOMETRY_USER	158,5538
#define	DEVICE_NONE	160,5596
#define	DEVICE_INACTIVE	161,5646
#define	DEVICE_ATAPI	162,5722
#define	DEVICE_DASD_NONLBA	163,5790
#define	DEVICE_DASD_LBA	164,5855
	} SETUP_DEVICE, *PSETUP_DEVICE;PSETUP_DEVICE179,6430
	}	SETUP, *PSETUP;PSETUP192,6700

drivers/scsi/mac53c94.h,3229
#define _MAC53C94_H8,217
extern struct proc_dir_entry proc_scsi_mac53c94;10,238
#define SCSI_MAC53C94 18,507
struct mac53c94_regs mac53c94_regs37,924
#define dest_id	75,1648
#define sel_timeout	76,1672
#define sync_period	77,1702
#define sync_offset	78,1730
#define CMD_DMA_MODE	83,1793
#define CMD_MODE_MASK	84,1819
#define CMD_MODE_INIT	85,1846
#define CMD_MODE_TARG	86,1873
#define CMD_MODE_DISC	87,1900
#define CMD_NOP	89,1928
#define CMD_FLUSH	90,1947
#define CMD_RESET	91,1967
#define CMD_SCSI_RESET	92,1987
#define CMD_XFER_DATA	94,2013
#define CMD_I_COMPLETE	95,2040
#define CMD_ACCEPT_MSG	96,2068
#define CMD_XFER_PAD	97,2096
#define CMD_SET_ATN	98,2122
#define CMD_CLR_ATN	99,2147
#define CMD_SEND_MSG	101,2173
#define CMD_SEND_STATUS	102,2199
#define CMD_SEND_DATA	103,2228
#define CMD_DISC_SEQ	104,2255
#define CMD_TERMINATE	105,2281
#define CMD_T_COMPLETE	106,2308
#define CMD_DISCONNECT	107,2336
#define CMD_RECV_MSG	108,2364
#define CMD_RECV_CDB	109,2390
#define CMD_RECV_DATA	110,2416
#define CMD_RECV_CMD	111,2443
#define CMD_ABORT_DMA	112,2469
#define CMD_RESELECT	114,2497
#define CMD_SELECT	115,2523
#define CMD_SELECT_ATN	116,2547
#define CMD_SELATN_STOP	117,2575
#define CMD_ENABLE_SEL	118,2604
#define CMD_DISABLE_SEL	119,2632
#define CMD_SEL_ATN3	120,2661
#define CMD_RESEL_ATN3	121,2687
#define STAT_IRQ	126,2751
#define STAT_ERROR	127,2773
#define STAT_PARITY	128,2797
#define STAT_TC_ZERO	129,2822
#define STAT_DONE	130,2848
#define STAT_PHASE	131,2871
#define STAT_MSG	132,2895
#define STAT_CD	133,2917
#define STAT_IO	134,2939
#define INTR_RESET	139,3000
#define INTR_ILL_CMD	140,3049
#define INTR_DISCONNECT	141,3097
#define INTR_BUS_SERV	142,3152
#define INTR_DONE	143,3207
#define INTR_RESELECTED	144,3255
#define INTR_SEL_ATN	145,3309
#define INTR_SELECT	146,3372
#define TIMO_VAL(TIMO_VAL151,3477
#define SS_MASK	156,3560
#define SS_ARB_SEL	157,3579
#define SS_MSG_SENT	158,3639
#define SS_NOT_CMD	159,3689
#define SS_PHASE_CHG	160,3737
#define SS_DONE	161,3801
#define SYNCP_MASK	166,3892
#define SYNCP_MIN	167,3916
#define SYNCP_MAX	168,3936
#define FLAGS_FIFO_LEV	173,3992
#define FLAGS_SEQ_STEP	174,4020
#define SYNCO_MASK	179,4085
#define SYNCO_ASS_CTRL	180,4109
#define SYNCO_NEG_CTRL	181,4169
#define CF1_SLOW_CABLE	186,4265
#define CF1_NO_RES_REP	187,4315
#define CF1_PAR_TEST	188,4376
#define CF1_PAR_ENABLE	189,4432
#define CF1_TEST	190,4487
#define CF1_MY_ID	191,4526
#define CLKF_MASK	196,4628
#define CLKF_VAL(CLKF_VAL197,4648
#define TEST_TARGET	202,4755
#define TEST_INITIATOR	203,4800
#define TEST_TRISTATE	204,4851
#define CF2_RFB	209,4944
#define CF2_FEATURE_EN	210,4966
#define CF2_BYTECTRL	211,5030
#define CF2_DREQ_HIZ	212,5056
#define CF2_SCSI2	213,5082
#define CF2_PAR_ABORT	214,5105
#define CF2_REG_PARERR	215,5162
#define CF2_DMA_PARERR	216,5218
#define CF3_ID_MSG_CHK	221,5310
#define CF3_3B_MSGS	222,5338
#define CF3_CDB10	223,5363
#define CF3_FASTSCSI	224,5386
#define CF3_FASTCLOCK	225,5443
#define CF3_SAVERESID	226,5470
#define CF3_ALT_DMA	227,5497
#define CF3_THRESH_8	228,5522
#define CF4_EAN	233,5589
#define CF4_TEST	234,5611
#define CF4_BBTE	235,5633

drivers/scsi/mesh.h,1680
#define _MESH_H8,206
extern struct proc_dir_entry proc_scsi_mesh;10,223
#define SCSI_MESH 18,468
struct mesh_regs mesh_regs37,859
#define SEQ_DMA_MODE	73,1590
#define SEQ_TARGET	74,1648
#define SEQ_ATN	75,1714
#define SEQ_ACTIVE_NEG	76,1760
#define SEQ_CMD	77,1825
#define SEQ_ARBITRATE	78,1867
#define SEQ_SELECT	79,1910
#define SEQ_COMMAND	80,1954
#define SEQ_STATUS	81,1998
#define SEQ_DATAOUT	82,2041
#define SEQ_DATAIN	83,2080
#define SEQ_MSGOUT	84,2121
#define SEQ_MSGIN	85,2164
#define SEQ_BUSFREE	86,2209
#define SEQ_ENBPARITY	87,2256
#define SEQ_DISPARITY	88,2313
#define SEQ_ENBRESEL	89,2371
#define SEQ_DISRESEL	90,2423
#define SEQ_RESETMESH	91,2476
#define SEQ_FLUSHFIFO	92,2531
#define BS0_REQ	96,2704
#define BS0_ACK	97,2726
#define BS0_ATN	98,2748
#define BS0_MSG	99,2770
#define BS0_CD	100,2792
#define BS0_IO	101,2813
#define BS1_RST	102,2834
#define BS1_BSY	103,2856
#define BS1_SEL	104,2878
#define BS0_PHASE	107,2953
#define BP_DATAOUT	108,2995
#define BP_DATAIN	109,3016
#define BP_COMMAND	110,3041
#define BP_STATUS	111,3067
#define BP_MSGOUT	112,3101
#define BP_MSGIN	113,3136
#define EXC_SELWATN	116,3216
#define EXC_SELECTED	117,3285
#define EXC_RESELECTED	118,3354
#define EXC_ARBLOST	119,3422
#define EXC_PHASEMM	120,3473
#define EXC_SELTO	121,3524
#define ERR_UNEXPDISC	124,3605
#define ERR_SCSIRESET	125,3671
#define ERR_SEQERR	126,3729
#define ERR_PARITY	127,3797
#define INT_ERROR	130,3906
#define INT_EXCEPTION	131,3951
#define INT_CMDDONE	132,4004
#define SYNC_OFF(SYNC_OFF135,4100
#define SYNC_PER(SYNC_PER136,4150
#define SYNC_PARAMS(SYNC_PARAMS137,4201
#define ASYNC_PARAMS	138,4246

drivers/scsi/scsi_error.c,1347
#define __NO_VERSION__11,276
#define __KERNEL_SYSCALLS__26,610
#define SHUTDOWN_SIGS	38,794
    #define SENSE_TIMEOUT 41,882
    #define ABORT_TIMEOUT 42,921
    #define RESET_TIMEOUT 43,960
    #define SENSE_TIMEOUT 45,1005
    #define RESET_TIMEOUT 46,1039
    #define ABORT_TIMEOUT 47,1072
#define STATIC50,1114
#define BUS_RESET_SETTLE_TIME 56,1248
#define HOST_RESET_SETTLE_TIME 57,1285
static const char RCSid[60,1325
scsi_add_timer(98,3043
scsi_delete_timer(135,4052
static void do_scsi_times_out 161,4567
void scsi_times_out 228,6817
scsi_block_when_processing_errors(252,7518
void scsi_eh_times_out 277,8144
void scsi_eh_done 322,9368
void scsi_eh_action_done 349,10059
scsi_sense_valid(368,10547
scsi_eh_retry_command(389,11002
scsi_request_sense(421,11893
scsi_test_unit_ready(488,14015
void scsi_sleep_done 552,16156
void scsi_sleep 561,16259
STATIC void scsi_send_eh_cmnd 591,17030
scsi_unit_is_ready(692,19342
scsi_eh_finish_command(727,20508
scsi_try_to_abort_command(760,21608
scsi_try_bus_device_reset(795,22588
scsi_try_bus_reset(826,23230
scsi_try_host_reset(875,24376
int scsi_decide_disposition 933,26212
STATIC int scsi_eh_completed_normally 1099,30399
STATIC  int scsi_check_sense 1178,32234
scsi_restart_operations(1244,33731
scsi_unjam_host(1304,36002
scsi_error_handler(1923,57296

drivers/scsi/blz1230.c,431
#define MKIV 38,900
volatile unsigned char cmd_buffer[51,1503
int blz1230_esp_detect(58,1739
static int dma_bytes_sent(159,4463
static int dma_can_transfer(169,4818
static void dma_dump_state(180,5095
void dma_init_read(186,5227
void dma_init_write(213,5873
static void dma_ints_off(240,6516
static void dma_ints_on(245,6591
static int dma_irq_p(250,6664
static int dma_ports_p(255,6761
static void dma_setup(260,6849

drivers/scsi/imm.c,1565
#define IMM_CODE 17,537
#define IMM_PROBE_SPP 18,556
#define IMM_PROBE_PS2 19,587
#define IMM_PROBE_ECR 20,618
#define IMM_PROBE_EPP17 21,649
#define IMM_PROBE_EPP19 22,680
} imm_struct;imm_struct44,1542
#define IMM_EMPTY 46,1557
#define NO_HOSTS 61,1804
static imm_struct imm_hosts[62,1823
#define IMM_BASE(IMM_BASE65,1910
int parbus_base[67,1951
void imm_wakeup(70,2014
int imm_release(88,2361
static int imm_pb_claim(97,2553
#define imm_pb_release(imm_pb_release108,2785
Scsi_Host_Template driver_template 115,3095
int imm_detect(119,3171
static inline int imm_proc_write(229,5826
int imm_proc_info(242,6146
#define imm_fail(imm_fail271,6846
static inline void imm_fail_func(273,6970
static unsigned char imm_wait(292,7514
static int imm_negotiate(337,8612
static inline void epp_reset(384,9592
static inline void ecp_sync(393,9723
static int imm_byte_out(408,9991
static int imm_nibble_in(423,10411
static int imm_byte_in(442,10823
static int imm_out(458,11150
static int imm_in(509,12203
static int imm_cpp(566,13332
static inline int imm_connect(636,15412
static void imm_disconnect(650,15906
static int imm_select(657,16050
static int imm_init(706,16994
static inline int imm_send_command(730,17591
static int imm_completion(750,18140
int imm_command(843,20654
static void imm_interrupt(880,21622
static int imm_engine(939,22971
int imm_queuecommand(1080,26376
int imm_biosparam(1111,27272
int imm_abort(1126,27579
void imm_reset_pulse(1146,28095
int imm_reset(1158,28309
static int device_check(1174,28722

drivers/scsi/bvme6000.c,82
struct proc_dir_entry proc_scsi_bvme6000 26,498
int bvme6000_scsi_detect(35,770

drivers/scsi/mvme16x.c,80
struct proc_dir_entry proc_scsi_mvme16x 25,475
int mvme16x_scsi_detect(34,744

drivers/scsi/pluto.h,147
#define _PLUTO_H7,155
struct pluto pluto11,203
struct pluto_inquiry pluto_inquiry19,329
#define PLUTO_CAN_QUEUE	39,765
#define PLUTO 45,920

drivers/scsi/wd33c93.c,1315
#define WD33C93_VERSION 90,3450
#define WD33C93_DATE 91,3484
static char *setup_args[164,6804
static char *setup_strings 168,6897
static inline uchar read_wd33c93(176,6992
#define READ_AUX_STAT(READ_AUX_STAT183,7113
static inline void write_wd33c93(186,7152
static inline void write_wd33c93_cmd(193,7286
static inline uchar read_1_byte(200,7409
static void write_wd33c93_count(216,7766
static unsigned long read_wd33c93_count(225,7963
static int is_dir_out(242,8460
static struct sx_period sx_table[264,9321
static int round_period(275,9504
static uchar calc_sync_xfer(288,9754
int wd33c93_queuecommand 302,10086
static void wd33c93_execute 413,14185
static void transfer_pio(630,21207
static void transfer_bytes(666,22214
void wd33c93_intr 744,24820
static void reset_wd33c93(1355,46389
int wd33c93_reset(1398,47709
int wd33c93_abort 1436,48730
#define MAX_WD33C93_HOSTS 1581,52956
#define MAX_SETUP_ARGS 1582,52984
#define SETUP_BUFFER_SIZE 1583,53052
static char setup_buffer[1584,53082
static char setup_used[1585,53127
static int done_setup 1586,53167
void wd33c93_setup 1588,53195
static int check_setup_args(1638,54550
void wd33c93_init 1667,55150
int wd33c93_proc_info(1796,58931
int init_module(1968,63672
void cleanup_module(1969,63708
void wd33c93_release(1970,63737

drivers/scsi/NCR53C9x.c,4866
#define SYMBIOS_HACK50,1296
	not_issued 63,1506
	not_issued    = 0x00,63,1506
#define in_slct_mask 66,1619
	in_slct_norm 67,1648
	in_slct_norm  = 0x10,67,1648
	in_slct_stop 68,1716
	in_slct_stop  = 0x11,68,1716
	in_slct_msg 69,1784
	in_slct_msg   = 0x12,69,1784
	in_slct_tag 70,1852
	in_slct_tag   = 0x13,70,1852
	in_slct_sneg 71,1920
	in_slct_sneg  = 0x14,71,1920
#define in_phases_mask 74,2025
	in_datain 75,2054
	in_datain     = 0x20,75,2054
	in_dataout 76,2122
	in_dataout    = 0x21,76,2122
	in_data_done 77,2190
	in_data_done  = 0x22,77,2190
	in_msgin 78,2258
	in_msgin      = 0x23,78,2258
	in_msgincont 79,2326
	in_msgincont  = 0x24,79,2326
	in_msgindone 80,2394
	in_msgindone  = 0x25,80,2394
	in_msgout 81,2462
	in_msgout     = 0x26,81,2462
	in_msgoutdone 82,2530
	in_msgoutdone = 0x27,82,2530
	in_cmdbegin 83,2598
	in_cmdbegin   = 0x28,83,2598
	in_cmdend 84,2666
	in_cmdend     = 0x29,84,2666
	in_status 85,2734
	in_status     = 0x2a,85,2734
	in_freeing 86,2802
	in_freeing    = 0x2b,86,2802
	in_the_dark 87,2870
	in_the_dark   = 0x2c,87,2870
#define in_spec_mask 90,2996
	in_abortone 91,3025
	in_abortone   = 0x80,91,3025
	in_abortall 92,3093
	in_abortall   = 0x81,92,3093
	in_resetdev 93,3161
	in_resetdev   = 0x82,93,3161
	in_resetbus 94,3229
	in_resetbus   = 0x83,94,3229
	in_tgterror 95,3297
	in_tgterror   = 0x84,95,3297
struct proc_dir_entry proc_scsi_esp 98,3369
struct NCR_ESP *espchain 104,3542
int nesps 105,3572
struct esp_cmdstrings esp_cmdstrings110,3710
} esp_cmd_strings[113,3764
#define NUM_ESP_COMMANDS 148,4829
static inline void esp_print_cmd(151,4971
static inline void esp_print_statreg(168,5357
static inline void esp_print_ireg(195,6060
static inline void esp_print_seqreg(218,6595
static char *phase_string(231,7033
static inline void esp_advance_phase(288,8076
extern inline void esp_cmd(297,8286
static inline void append_SC(329,9438
static inline void prepend_SC(346,9807
static inline Scsi_Cmnd *remove_first_SC(356,10013
static inline Scsi_Cmnd *remove_SC(369,10243
static inline void esp_reset_esp(392,10804
inline void esp_bootup_reset(502,13776
struct NCR_ESP* esp_allocate(526,14422
void esp_initialize(558,15222
const char *esp_info(732,20180
struct info_strinfo_str758,20689
static void copy_mem_info(766,20762
static int copy_info(786,21180
static int esp_host_info(800,21402
int esp_proc_info(905,23936
static inline void esp_check_cmd(946,25053
static inline void build_sync_nego_msg(963,25328
static inline void build_wide_nego_msg(974,25675
static inline void esp_exec_cmd(995,26039
int esp_queue(1249,34456
int esp_command(1316,36454
static inline void esp_dump_cmd(1327,36680
static inline void esp_dump_state(1336,36902
int esp_abort(1390,38224
int esp_reset(1464,40424
static void esp_done(1476,40759
	do_phase_determine,1523,41823
	do_phase_determine, do_reset_bus,1523,41823
	do_phase_determine, do_reset_bus, do_reset_complete,1523,41823
	do_work_bus,1524,41877
	do_work_bus, do_intr_end,1524,41877
static inline int sreg_datainp(1538,42536
static inline int sreg_dataoutp(1543,42629
static inline void hme_fifo_hwbug_workaround(1549,42780
static inline void hme_fifo_push(1589,44105
static inline int skipahead1(1603,44485
static inline int skipahead2(1635,45416
static inline void esp_setcount(1671,46459
static inline int esp_getcount(1681,46699
static inline int fcount(1687,46849
static inline int fnzero(1695,47048
static inline void esp_maybe_nop(1707,47385
static inline int sreg_to_dataphase(1713,47530
static inline int esp100_sync_hwbug(1729,48105
static inline int esp100_reconnect_hwbug(1755,49028
static inline int reconnect_target(1772,49376
static inline int reconnect_lun(1802,50117
static inline void esp_connect(1822,50605
static inline void esp_reconnect(1839,51198
static inline int esp_do_msgin(1851,51540
static inline void advance_sg(1865,51970
static inline int esp_do_data(1895,53306
static inline int esp_do_data_finale(1929,54450
static inline int esp_do_freebus(2087,59446
static inline int esp_do_reconnect(2162,62076
static int esp_do_status(2238,64073
static int esp_do_phase_determine(2354,67545
static int esp_select_complete(2467,70746
static int esp_do_msgincont(2727,79516
static inline int check_singlebyte_msg(2752,80297
static inline int target_with_ants_in_pants(2818,82171
static inline void sync_report(2837,82636
static inline int check_multibyte_msg(2870,83530
static int esp_do_msgindone(3044,88585
static int esp_do_cmdbegin(3127,91081
static inline int esp_do_cmddone(3151,91730
static int esp_do_msgout(3167,92180
static inline int esp_do_msgoutdone(3265,95101
static inline int esp_work_bus(3316,96457
inline void esp_handle(3388,98069
void esp_intr(3663,105864
void esp_intr(3695,106462
static void esp_intr(3720,106913

drivers/scsi/scsi_queue.c,240
#define __NO_VERSION__13,468
#define __KERNEL_SYSCALLS__28,802
static const char RCSid[57,1648
spinlock_t	scsi_mlqueue_lock 64,1979
spinlock_t	scsi_mlqueue_remove_lock 65,2037
scsi_mlqueue_insert(85,2655
scsi_mlqueue_finish(210,5784

drivers/scsi/bvme6000.h,189
#define BVME6000_SCSI_H2,24
#define NULL 15,433
#define CMD_PER_LUN 19,476
#define CAN_QUEUE 23,524
extern struct proc_dir_entry proc_scsi_mvme16x;29,620
#define BVME6000_SCSI 31,669

drivers/scsi/NCR53C9x.h,7588
#define NCR53C9X_H14,432
#define ESPLOG(ESPLOG41,1135
#define ESPLOG(ESPLOG43,1173
#define ESPHME(ESPHME47,1246
#define ESPHME(ESPHME49,1284
#define ESPDATA(ESPDATA53,1340
#define ESPDATA(ESPDATA55,1379
#define ESPQUEUE(ESPQUEUE59,1437
#define ESPQUEUE(ESPQUEUE61,1477
#define ESPDISC(ESPDISC65,1541
#define ESPDISC(ESPDISC67,1580
#define ESPSTAT(ESPSTAT71,1639
#define ESPSTAT(ESPSTAT73,1678
#define ESPPHASE(ESPPHASE77,1737
#define ESPPHASE(ESPPHASE79,1777
#define ESPBUS(ESPBUS83,1838
#define ESPBUS(ESPBUS85,1876
#define ESPIRQ(ESPIRQ89,1932
#define ESPIRQ(ESPIRQ91,1970
#define ESPSDTR(ESPSDTR95,2022
#define ESPSDTR(ESPSDTR97,2061
#define ESPMISC(ESPMISC101,2118
#define ESPMISC(ESPMISC103,2157
#define INTERNAL_ESP_ERROR 106,2186
#define INTERNAL_ESP_ERROR_NOPANIC 110,2308
#define EREGS_PAD(EREGS_PAD118,2504
#define EREGS_PAD(EREGS_PAD120,2531
#define SETREG(SETREG143,3099
#define GETREG(GETREG144,3136
struct ESP_regs ESP_regs146,3168
#define esp_busid 157,3868
#define esp_timeo 160,4078
#define esp_stp 163,4288
#define esp_soff 166,4498
#define esp_status2 171,4838
#define esp_uid 185,5713
#define fas_rlo 186,5792
#define fas_rhi 189,6004
#define SETREG(SETREG193,6093
#define GETREG(GETREG194,6133
struct ESP_regs ESP_regs196,6168
#define esp_tclow 202,6342
#define esp_tcmed 203,6423
#define esp_fdata 204,6504
#define esp_cmnd 205,6585
#define esp_status 206,6667
#define esp_busid 207,6748
#define esp_intrpt 208,6830
#define esp_timeo 209,6911
#define esp_sstep 210,6993
#define esp_stp 211,7074
#define esp_fflags 212,7156
#define esp_soff 213,7237
#define esp_cfg1 214,7319
#define esp_cfact 215,7400
#define esp_status2 216,7481
#define esp_ctest 217,7563
#define esp_cfg2 218,7644
#define esp_cfg3 221,7795
#define esp_hole 222,7875
#define esp_tchi 225,8031
#define esp_uid 226,8111
#define fas_rlo 227,8192
#define esp_fgrnd 228,8273
#define fas_rhi 229,8353
#define save_and_cli(save_and_cli233,8459
enum esp_rev esp_rev239,8572
  esp100 240,8587
  esp100     = 0x00,240,8587
  esp100a 241,8638
  esp100a    = 0x01,241,8638
  esp236 242,8676
  esp236     = 0x02,242,8676
  fas236 243,8697
  fas236     = 0x03,243,8697
  fas100a 244,8718
  fas100a    = 0x04,244,8718
  fast 245,8739
  fast       = 0x05,245,8739
  fashme 246,8760
  fashme     = 0x06,246,8760
  fas216 247,8781
  fas216     = 0x07,247,8781
  espunknown 248,8806
  espunknown = 0x08248,8806
struct NCR_ESP NCR_ESP252,8877
#define SYNC_DEFP_SLOW 317,12408
#define SYNC_DEFP_FAST 318,12462
#define ESP_CONFIG1_ID 396,15614
#define ESP_CONFIG1_CHTEST 397,15682
#define ESP_CONFIG1_PENABLE 398,15757
#define ESP_CONFIG1_PARTEST 399,15831
#define ESP_CONFIG1_SRRDISAB 400,15910
#define ESP_CONFIG1_SLCABLE 401,15990
#define ESP_CONFIG2_DMAPARITY 404,16145
#define ESP_CONFIG2_REGPARITY 405,16226
#define ESP_CONFIG2_BADPARITY 406,16307
#define ESP_CONFIG2_SCSI2ENAB 407,16385
#define ESP_CONFIG2_HI 408,16474
#define ESP_CONFIG2_HMEFENAB 409,16552
#define ESP_CONFIG2_BCM 410,16625
#define ESP_CONFIG2_DISPINT 411,16703
#define ESP_CONFIG2_FENAB 412,16780
#define ESP_CONFIG2_SPL 413,16870
#define ESP_CONFIG2_MKDONE 414,16960
#define ESP_CONFIG2_HME32 415,17031
#define ESP_CONFIG2_MAGIC 416,17100
#define ESP_CONFIG3_FCLOCK 419,17253
#define ESP_CONFIG3_TEM 420,17341
#define ESP_CONFIG3_FAST 421,17429
#define ESP_CONFIG3_ADMA 422,17517
#define ESP_CONFIG3_TENB 423,17605
#define ESP_CONFIG3_SRB 424,17693
#define ESP_CONFIG3_TMS 425,17781
#define ESP_CONFIG3_FCLK 426,17869
#define ESP_CONFIG3_IDMSG 427,17957
#define ESP_CONFIG3_FSCSI 428,18045
#define ESP_CONFIG3_GTM 429,18133
#define ESP_CONFIG3_BIGID 430,18221
#define ESP_CONFIG3_TBMS 431,18309
#define ESP_CONFIG3_EWIDE 432,18397
#define ESP_CONFIG3_IMS 433,18485
#define ESP_CONFIG3_OBPUSH 434,18573
#define ESP_CMD_NULL 442,18997
#define ESP_CMD_FLUSH 443,19074
#define ESP_CMD_RC 444,19138
#define ESP_CMD_RS 445,19202
#define ESP_CMD_TI 450,19398
#define ESP_CMD_ICCSEQ 451,19472
#define ESP_CMD_MOK 452,19557
#define ESP_CMD_TPAD 453,19629
#define ESP_CMD_SATN 454,19695
#define ESP_CMD_RATN 455,19756
#define ESP_CMD_SMSG 460,19987
#define ESP_CMD_SSTAT 461,20053
#define ESP_CMD_SDATA 462,20118
#define ESP_CMD_DSEQ 463,20181
#define ESP_CMD_TSEQ 464,20255
#define ESP_CMD_TCCSEQ 465,20327
#define ESP_CMD_DCNCT 466,20406
#define ESP_CMD_RMSG 467,20470
#define ESP_CMD_RCMD 468,20539
#define ESP_CMD_RDATA 469,20608
#define ESP_CMD_RCSEQ 470,20674
#define ESP_CMD_RSEL 476,20943
#define ESP_CMD_SEL 477,21005
#define ESP_CMD_SELA 478,21073
#define ESP_CMD_SELAS 479,21139
#define ESP_CMD_ESEL 480,21212
#define ESP_CMD_DSEL 481,21282
#define ESP_CMD_SA3 482,21354
#define ESP_CMD_RSEL3 483,21421
#define ESP_CMD_DMA 486,21534
#define ESP_STAT_PIO 490,21633
#define ESP_STAT_PCD 491,21699
#define ESP_STAT_PMSG 492,21765
#define ESP_STAT_PMASK 493,21832
#define ESP_STAT_TDONE 494,21904
#define ESP_STAT_TCNT 495,21976
#define ESP_STAT_PERR 496,22054
#define ESP_STAT_SPAM 497,22120
#define ESP_STAT_INTR 501,22305
#define ESP_STAT2_SCHBIT 504,22403
#define ESP_STAT2_FFLAGS 505,22476
#define ESP_STAT2_XCNT 506,22548
#define ESP_STAT2_CREGA 507,22621
#define ESP_STAT2_WIDE 508,22692
#define ESP_STAT2_F1BYTE 509,22767
#define ESP_STAT2_FMSB 510,22841
#define ESP_STAT2_FEMPTY 511,22920
#define ESP_DOP 518,23243
#define ESP_DIP 519,23319
#define ESP_CMDP 520,23395
#define ESP_STATP 521,23471
#define ESP_MOP 522,23547
#define ESP_MIP 523,23625
#define ESP_INTR_S 526,23742
#define ESP_INTR_SATN 527,23810
#define ESP_INTR_RSEL 528,23876
#define ESP_INTR_FDONE 529,23940
#define ESP_INTR_BSERV 530,24007
#define ESP_INTR_DC 531,24072
#define ESP_INTR_IC 532,24136
#define ESP_INTR_SR 533,24211
#define ESP_SRESET_IRQ(ESP_SRESET_IRQ536,24319
#define ESP_ILLCMD_IRQ(ESP_ILLCMD_IRQ537,24380
#define ESP_SELECT_WITH_ATN_IRQ(ESP_SELECT_WITH_ATN_IRQ538,24441
#define ESP_SELECT_WITHOUT_ATN_IRQ(ESP_SELECT_WITHOUT_ATN_IRQ539,24516
#define ESP_SELECTION_IRQ(ESP_SELECTION_IRQ540,24588
#define ESP_RESELECTION_IRQ(ESP_RESELECTION_IRQ542,24705
#define ESP_STEP_VBITS 545,24824
#define ESP_STEP_ASEL 546,24888
#define ESP_STEP_SID 547,24967
#define ESP_STEP_NCMD 548,25038
#define ESP_STEP_PPC 549,25116
#define ESP_STEP_FINI4 552,25312
#define ESP_STEP_FINI5 555,25452
#define ESP_STEP_FINI6 556,25487
#define ESP_STEP_FINI7 557,25522
#define ESP_TEST_TARG 560,25598
#define ESP_TEST_INI 561,25668
#define ESP_TEST_TS 562,25741
#define ESP_UID_F100A 565,25883
#define ESP_UID_F236 566,25949
#define ESP_UID_REV 567,26015
#define ESP_UID_FAM 568,26081
#define ESP_FF_FBYTES 572,26253
#define ESP_FF_ONOTZERO 573,26324
#define ESP_FF_SSTEP 574,26406
#define ESP_CCF_F0 577,26528
#define ESP_CCF_NEVER 578,26598
#define ESP_CCF_F2 579,26674
#define ESP_CCF_F3 580,26733
#define ESP_CCF_F4 581,26803
#define ESP_CCF_F5 582,26873
#define ESP_CCF_F6 583,26943
#define ESP_CCF_F7 584,27013
#define ESP_BUSID_RESELID 587,27102
#define ESP_BUSID_CTR32BIT 588,27137
#define ESP_BUS_TIMEOUT 590,27173
#define ESP_TIMEO_CONST 591,27243
#define ESP_NEG_DEFP(ESP_NEG_DEFP592,27278
#define ESP_MHZ_TO_CYCLE(ESP_MHZ_TO_CYCLE594,27377
#define ESP_TICK(ESP_TICK595,27446
extern struct proc_dir_entry proc_scsi_esp;598,27512
extern int nesps,601,27581
extern int nesps, esps_in_use,601,27581
extern int nesps, esps_in_use, esps_running;601,27581
#define for_each_esp(for_each_esp604,27659

drivers/scsi/fastlane.c,631
#define NODMAIRQ49,1286
static unsigned char ctrl_data 67,2088
volatile unsigned char cmd_buffer[73,2279
int fastlane_esp_detect(80,2515
static int dma_bytes_sent(193,5471
static int dma_can_transfer(203,5826
static void dma_dump_state(211,5982
static void dma_init_read(220,6243
static void dma_init_write(239,6673
static inline void dma_clear(260,7142
static void dma_ints_off(276,7458
static void dma_ints_on(281,7533
static void dma_irq_exit(286,7606
static int dma_irq_p(298,7882
static void dma_led_off(318,8381
static void dma_led_on(324,8536
static int dma_ports_p(330,8689
static void dma_setup(335,8777

drivers/scsi/mac_NCR5380.c,1962
#define LIST(LIST94,3181
#define REMOVE(REMOVE97,3311
#define LIST(LIST102,3493
#define REMOVE(REMOVE103,3511
static struct Scsi_Host *first_instance 274,10717
static Scsi_Host_Template *the_template 275,10765
#define	SETUP_HOSTDATA(SETUP_HOSTDATA278,10844
#define	HOSTDATA(HOSTDATA281,10963
#define	NEXT(NEXT283,11029
#define	NEXTADDR(NEXTADDR284,11085
#define	HOSTNO	286,11148
#define	H_NO(H_NO287,11182
#define TAG_NONE 328,13158
} TAG_ALLOC;TAG_ALLOC339,13431
static TAG_ALLOC TagAlloc[341,13445
static void init_tags(344,13507
static int is_lun_busy(374,14370
static void cmd_get_tag(398,15057
static void cmd_free_tag(430,16021
static void free_all_tags(453,16666
static void merge_contiguous_buffers(485,17423
static __inline__ void initialize_SCp(523,18465
signals[554,19306
static void NCR5380_print(577,20294
} phases[611,21318
static void NCR5380_print_phase(624,21714
__inline__ void NCR5380_print(642,22188
__inline__ void NCR5380_print_phase(643,22251
static volatile int main_running 663,22898
static struct tq_struct NCR5380_tqueue 664,22936
static __inline__ void queue_main(671,23123
static void NCR5380_all_init 686,23569
static void NCR5380_print_options 705,23957
static void NCR5380_print_status 736,24585
#define SPRINTF(SPRINTF772,25505
int NCR5380_proc_info 781,25777
#define check_offset(check_offset790,26049
lprint_Scsi_Cmnd 844,27631
static void NCR5380_init 872,28419
int NCR5380_queue_command 940,30304
static void NCR5380_main 1053,33469
static void NCR5380_dma_complete(1211,38377
static void NCR5380_intr 1284,40412
static void collect_stats(1362,42909
static int NCR5380_select 1418,44782
static int NCR5380_transfer_pio(1746,54881
static int do_abort 1863,58305
static int NCR5380_transfer_dma(1927,60246
static void NCR5380_information_transfer 2154,66865
static void NCR5380_reselect 2659,82831
int NCR5380_abort 2809,86867
static int NCR5380_reset(3008,92897

drivers/scsi/mac_scsi.c,2797
#define NDEBUG_ABORT	28,747
#define NDEBUG_TAGS	29,777
#define NDEBUG_MERGING	30,807
#define NDEBUG 32,841
#define AUTOSENSE34,861
#define EMULATE_PSEUDO_DMA46,1296
#define DMA_WORKS_RIGHT47,1323
#define UNSAFE48,1347
#define	SUPPORT_TAGS52,1436
#define	MAX_TAGS 53,1457
struct proc_dir_entry proc_scsi_mac 83,2042
#define RBV_HACK92,2269
#define	ENABLE_IRQ(ENABLE_IRQ95,2303
#define	DISABLE_IRQ(DISABLE_IRQ96,2357
#define	ENABLE_IRQ(ENABLE_IRQ98,2418
#define	DISABLE_IRQ(DISABLE_IRQ99,2472
#define HOSTDATA_DMALEN	102,2535
#define	AFTER_RESET_DELAY	109,2870
#define	AFTER_RESET_DELAY	111,2909
static struct Scsi_Host *mac_scsi_host 140,4075
static unsigned long	mac_dma_residual,147,4293
static unsigned long	mac_dma_residual, mac_dma_startaddr;147,4293
static short		mac_dma_active;148,4351
static char		*mac_dma_buffer 150,4417
static unsigned long	mac_dma_phys_buffer;152,4513
static char		*mac_dma_orig_addr;154,4625
#define	MAC_BUFFER_SIZE	161,5003
static unsigned long	mac_dma_stram_mask;164,5145
#define STRAM_ADDR(STRAM_ADDR165,5186
static int mac_read_overruns 168,5317
static unsigned long	mac_pdma_residual,171,5376
static unsigned long	mac_pdma_residual, mac_pdma_startaddr,171,5376
static unsigned long	mac_pdma_residual, mac_pdma_startaddr, mac_pdma_current;171,5376
static short		mac_pdma_active;172,5454
static unsigned long	mac_dma_stram_mask;175,5589
#define STRAM_ADDR(STRAM_ADDR176,5630
static int mac_read_overruns 177,5686
static int setup_can_queue 179,5727
static int setup_cmd_per_lun 180,5760
static int setup_sg_tablesize 181,5795
static int setup_use_tagged_queuing 183,5851
static int setup_hostid 185,5900
static int scsi_dma_is_ignored_buserr(191,5974
static void scsi_dma_buserr 218,6748
void restore_irq(246,7659
static int polled_scsi_on 255,7819
static unsigned char *mac_scsi_regp 256,7850
void scsi_mac_polled 258,7895
static void scsi_mac_intr 270,8081
static void mac_scsi_fetch_restbytes(394,12023
#define	RTC_READ(RTC_READ417,12766
#define	RTC_WRITE(RTC_WRITE424,12900
int mac_scsi_detect 431,13029
int mac_scsi_release 541,16153
void mac_scsi_setup(550,16340
int mac_scsi_reset(611,17703
static void mac_scsi_reset_boot(639,18398
const char * mac_scsi_info 675,19365
unsigned long mac_scsi_dma_setup(685,19564
static long mac_scsi_dma_residual(731,21042
#define	CMD_SURELY_BLOCK_MODE	737,21141
#define	CMD_SURELY_BYTE_MODE	738,21173
#define	CMD_MODE_UNKNOWN	739,21204
static int mac_classify_cmd(741,21233
static unsigned long mac_dma_xfer_len(775,22501
static unsigned char mac_scsi_reg_read(874,25878
static void mac_scsi_reg_write(879,25979
static inline int mac_pdma_read 893,26258
static inline int mac_pdma_write 1002,29000
Scsi_Host_Template driver_template 1104,31642

drivers/scsi/blz1230.h,350
#define BLZ1230_H12,270
#define BLZ1230_ESP_ADDR 17,377
#define BLZ1230_DMA_ADDR 18,409
#define BLZ1230II_ESP_ADDR 19,442
#define BLZ1230II_DMA_ADDR 20,477
struct blz1230_dma_registers blz1230_dma_registers36,1151
struct blz1230II_dma_registers blz1230II_dma_registers42,1353
#define BLZ1230_DMA_WRITE 48,1554
#define SCSI_BLZ1230 59,1977

drivers/scsi/mac_scsi.h,2875
#define MAC_SCSI_H22,517
#define mac_scsi_release 36,964
#define MAC_SCSI_CAN_QUEUE	49,1418
#define MAC_SCSI_CMD_PER_LUN	50,1457
#define MAC_SCSI_SG_TABLESIZE	51,1497
#define	DEFAULT_USE_TAGGED_QUEUING	53,1536
#define MAC_SCSI 58,1618
#define	NCR5380_implementation_fields	82,2324
#define NCR5380_read(NCR5380_read84,2374
#define NCR5380_write(NCR5380_write85,2428
#define NCR5380_intr 87,2496
#define NCR5380_queue_command 88,2531
#define NCR5380_abort 89,2584
#define NCR5380_proc_info 90,2621
#define NCR5380_dma_read_setup(NCR5380_dma_read_setup91,2666
#define NCR5380_dma_write_setup(NCR5380_dma_write_setup92,2742
#define NCR5380_dma_residual(NCR5380_dma_residual93,2819
#define	NCR5380_dma_xfer_len(NCR5380_dma_xfer_len94,2884
#define NCR5380_pread(NCR5380_pread97,3018
#define NCR5380_pwrite(NCR5380_pwrite98,3077
#define ARB_PRINTK(ARB_PRINTK130,3908
#define ARB_PRINTK(ARB_PRINTK133,3989
#define ASEN_PRINTK(ASEN_PRINTK136,4062
#define ASEN_PRINTK(ASEN_PRINTK139,4144
#define DMA_PRINTK(DMA_PRINTK142,4212
#define DMA_PRINTK(DMA_PRINTK145,4293
#define HSH_PRINTK(HSH_PRINTK148,4366
#define HSH_PRINTK(HSH_PRINTK151,4447
#define INF_PRINTK(INF_PRINTK154,4522
#define INF_PRINTK(INF_PRINTK157,4603
#define INI_PRINTK(INI_PRINTK160,4671
#define INI_PRINTK(INI_PRINTK163,4752
#define INT_PRINTK(INT_PRINTK166,4820
#define INT_PRINTK(INT_PRINTK169,4901
#define LNK_PRINTK(LNK_PRINTK172,4971
#define LNK_PRINTK(LNK_PRINTK175,5052
#define MAIN_PRINTK(MAIN_PRINTK178,5120
#define MAIN_PRINTK(MAIN_PRINTK181,5202
#define NDAT_PRINTK(NDAT_PRINTK184,5277
#define NDAT_PRINTK(NDAT_PRINTK187,5359
#define NWR_PRINTK(NWR_PRINTK190,5432
#define NWR_PRINTK(NWR_PRINTK193,5513
#define PIO_PRINTK(PIO_PRINTK196,5580
#define PIO_PRINTK(PIO_PRINTK199,5661
#define PDMA_PRINTK(PDMA_PRINTK202,5735
#define PDMA_PRINTK(PDMA_PRINTK205,5817
#define QU_PRINTK(QU_PRINTK208,5888
#define QU_PRINTK(QU_PRINTK211,5968
#define RSL_PRINTK(RSL_PRINTK214,6042
#define RSL_PRINTK(RSL_PRINTK217,6123
#define SEL_PRINTK(SEL_PRINTK220,6196
#define SEL_PRINTK(SEL_PRINTK223,6277
#define USL_PRINTK(USL_PRINTK226,6347
#define USL_PRINTK(USL_PRINTK229,6428
#define LBS_PRINTK(LBS_PRINTK232,6506
#define LBS_PRINTK(LBS_PRINTK235,6587
#define RSS_PRINTK(RSS_PRINTK238,6665
#define RSS_PRINTK(RSS_PRINTK241,6746
#define EXT_PRINTK(EXT_PRINTK244,6818
#define EXT_PRINTK(EXT_PRINTK247,6899
#define ABRT_PRINTK(ABRT_PRINTK250,6968
#define ABRT_PRINTK(ABRT_PRINTK253,7050
#define TAG_PRINTK(TAG_PRINTK256,7119
#define TAG_PRINTK(TAG_PRINTK259,7200
#define MER_PRINTK(MER_PRINTK262,7271
#define MER_PRINTK(MER_PRINTK265,7352
#define NCR_PRINT(NCR_PRINT270,7456
#define NCR_PRINT_PHASE(NCR_PRINT_PHASE273,7540
#define NCR_PRINT_STATUS(NCR_PRINT_STATUS276,7636
#define NDEBUG_ANY	279,7734

drivers/scsi/atari_dma_emul.c,251
#define hades_dma_ctrl	24,722
#define hades_psdm_reg	25,778
#define TRANSFER_SIZE	27,835
struct m68040_frame m68040_frame29,862
static void writeback 47,1641
static inline void set_restdata_reg(103,2894
static void hades_dma_emulator(141,4425

drivers/scsi/blz2060.c,491
volatile unsigned char cmd_buffer[51,1575
int blz2060_esp_detect(58,1811
static int dma_bytes_sent(135,3951
static int dma_can_transfer(145,4306
static void dma_dump_state(156,4583
static void dma_init_read(162,4715
static void dma_init_write(177,5118
static void dma_ints_off(192,5518
static void dma_ints_on(197,5593
static int dma_irq_p(202,5666
static void dma_led_off(207,5763
static void dma_led_on(213,5897
static int dma_ports_p(218,6014
static void dma_setup(223,6102

drivers/scsi/mvme16x.h,187
#define MVME16x_SCSI_H2,23
#define NULL 15,430
#define CMD_PER_LUN 19,473
#define CAN_QUEUE 23,521
extern struct proc_dir_entry proc_scsi_mvme16x;29,617
#define MVME16x_SCSI 31,666

drivers/scsi/blz2060.h,248
#define BLZ2060_H12,267
#define BLZ2060_ESP_ADDR 17,374
#define BLZ2060_DMA_ADDR 18,407
struct blz2060_dma_registers blz2060_dma_registers29,794
#define BLZ2060_DMA_WRITE 41,1291
#define BLZ2060_DMA_LED 44,1352
#define SCSI_BLZ2060 55,1800

drivers/scsi/cyberstorm.c,529
static unsigned char ctrl_data 54,1724
volatile unsigned char cmd_buffer[60,1915
int cyber_esp_detect(67,2151
static int dma_bytes_sent(159,4866
static int dma_can_transfer(169,5223
static void dma_dump_state(180,5496
static void dma_init_read(189,5754
static void dma_init_write(226,6989
static void dma_ints_off(253,7723
static void dma_ints_on(258,7798
static int dma_irq_p(263,7871
static void dma_led_off(271,8126
static void dma_led_on(277,8275
static int dma_ports_p(283,8422
static void dma_setup(288,8510

drivers/scsi/imm.h,1135
#define _IMM_H11,250
#define   IMM_VERSION 13,266
#define   IMM_AUTODETECT 87,2963
#define   IMM_NIBBLE 88,3034
#define   IMM_PS2 89,3105
#define   IMM_EPP_8 90,3168
#define   IMM_EPP_16 91,3239
#define   IMM_EPP_32 92,3310
#define   IMM_UNKNOWN 93,3381
static char *IMM_MODE_STRING[95,3453
int imm_sg 110,3690
#define IMM_CAN_QUEUE 113,3770
#define IMM_BURST_SIZE	114,3827
#define IMM_SELECT_TMO 115,3876
#define IMM_SPIN_TMO 116,3944
#define IMM_DEBUG	117,4007
#define IN_EPP_MODE(IN_EPP_MODE118,4049
#define CONNECT_EPP_MAYBE 121,4154
#define CONNECT_NORMAL 122,4182
#define r_dtr(r_dtr124,4209
#define r_str(r_str125,4257
#define r_ctr(r_ctr126,4307
#define r_epp(r_epp127,4357
#define r_fifo(r_fifo128,4407
#define r_ecr(r_ecr129,4461
#define w_dtr(w_dtr131,4516
#define w_str(w_str132,4553
#define w_epp(w_epp133,4592
#define w_fifo(w_fifo134,4631
#define w_ecr(w_ecr135,4674
#define w_ctr(w_ctr138,4751
#define w_ctr(w_ctr140,4798
struct proc_dir_entry proc_scsi_imm 149,5032
extern struct proc_dir_entry proc_scsi_imm;152,5135
#define imm_release 153,5179
#define IMM 165,5539

drivers/scsi/cyberstormII.c,491
volatile unsigned char cmd_buffer[50,1517
int cyberII_esp_detect(57,1753
static int dma_bytes_sent(146,4216
static int dma_can_transfer(156,4573
static void dma_dump_state(167,4846
static void dma_init_read(176,5106
static void dma_init_write(190,5478
static void dma_ints_off(204,5847
static void dma_ints_on(209,5922
static int dma_irq_p(214,5995
static void dma_led_off(220,6159
static void dma_led_on(225,6288
static int dma_ports_p(230,6415
static void dma_setup(235,6503

drivers/scsi/aic7xxx_seq.c,522
static unsigned char seqprog[4,64
aic7xxx_patch12_func(595,14797
aic7xxx_patch11_func(603,14970
aic7xxx_patch10_func(611,15130
aic7xxx_patch9_func(619,15291
aic7xxx_patch8_func(627,15450
aic7xxx_patch7_func(635,15610
aic7xxx_patch6_func(643,15769
aic7xxx_patch5_func(651,15928
aic7xxx_patch4_func(659,16092
aic7xxx_patch3_func(667,16250
aic7xxx_patch2_func(675,16414
aic7xxx_patch1_func(683,16576
aic7xxx_patch0_func(691,16737
struct sequencer_patch sequencer_patch696,16799
} sequencer_patches[701,16934

drivers/scsi/cyberstorm.h,396
#define CYBER_ESP_H9,178
#define CYBER_ESP_ADDR 14,287
#define CYBER_DMA_ADDR 15,317
struct cyber_dma_registers cyber_dma_registers19,384
#define ctrl_reg 29,866
#define CYBER_DMA_LED 33,954
#define CYBER_DMA_WRITE 34,1012
#define CYBER_DMA_Z3 35,1073
#define CYBER_DMA_HNDL_INTR 38,1173
#define CYBER_HOST_ID 43,1366
#define CYBER_SLOW_CABLE 46,1466
#define SCSI_CYBERSTORM 58,1919

drivers/scsi/cyberstormII.h,245
#define CYBERII_ESP_H9,188
#define CYBERII_ESP_ADDR 14,299
#define CYBERII_DMA_ADDR 15,332
struct cyberII_dma_registers cyberII_dma_registers19,405
#define ctrl_reg 21,509
#define CYBERII_DMA_LED 33,976
#define SCSI_CYBERSTORMII 45,1423

drivers/scsi/fastlane.h,553
#define FASTLANE_H9,173
#define FASTLANE_ESP_ADDR 14,281
#define FASTLANE_DMA_ADDR 15,317
struct fastlane_dma_registers fastlane_dma_registers19,388
#define ctrl_reg 21,486
#define FASTLANE_DMA_MINT 28,677
#define FASTLANE_DMA_IACT 29,709
#define FASTLANE_DMA_CREQ 30,741
#define FASTLANE_DMA_FCODE 33,797
#define FASTLANE_DMA_MASK 34,829
#define FASTLANE_DMA_LED 35,861
#define FASTLANE_DMA_WRITE 36,921
#define FASTLANE_DMA_ENABLE 37,969
#define FASTLANE_DMA_EDI 38,1019
#define FASTLANE_DMA_ESI 39,1074
#define SCSI_FASTLANE 50,1515

drivers/scsi/sgiwd93.c,485
struct hpc_chunk hpc_chunk33,650
struct proc_dir_entry proc_scsi_sgiwd93 38,724
struct Scsi_Host *sgiwd93_host 43,838
static inline void write_wd33c93_count(46,949
static inline unsigned long read_wd33c93_count(54,1185
static void sgiwd93_intr(66,1465
static int dma_setup(73,1587
static void dma_stop(141,3439
static inline void init_hpc_chain(203,5075
__initfunc(220,5450
#define HOSTS_C255,6399
Scsi_Host_Template driver_template 259,6438
int sgiwd93_release(265,6524

drivers/scsi/sgiwd93.h,184
#define _SGIWD93_H7,178
#define NULL 10,211
#define CMD_PER_LUN 14,261
#define CAN_QUEUE 18,309
extern struct proc_dir_entry proc_scsi_sgiwd93;28,608
#define SGIWD93_SCSI 30,657

drivers/scsi/jazz_esp.c,736
volatile unsigned char cmd_buffer[49,1647
int jazz_esp_detect(56,1882
static int dma_bytes_sent(144,4186
static int dma_can_transfer(149,4277
static void dma_dump_state(160,4491
static void dma_init_read(167,4697
static void dma_init_write(177,5081
static void dma_ints_off(187,5479
static void dma_ints_on(192,5557
static int dma_irq_p(197,5633
static int dma_ports_p(202,5733
static void dma_setup(209,5879
static void dma_mmu_get_scsi_one 222,6210
static void dma_mmu_get_scsi_sgl 228,6438
static void dma_mmu_release_scsi_one 240,6800
static void dma_mmu_release_scsi_sgl 245,6916
static void dma_advance_sg 256,7153
#define JAZZ_HDC_LED 261,7274
static void dma_led_off(263,7343
static void dma_led_on(270,7454

drivers/scsi/jazz_esp.h,90
#define JAZZ_ESP_H7,161
#define EREGS_PAD(EREGS_PAD9,181
#define SCSI_JAZZ_ESP 23,609

drivers/scsi/scsi_obsolete.h,778
#define _SCSI_OBSOLETE_H7,90
#define SCSI_ABORT_SNOOZE 21,706
#define SCSI_ABORT_SUCCESS 26,962
#define SCSI_ABORT_PENDING 31,1184
#define SCSI_ABORT_BUSY 34,1290
#define SCSI_ABORT_NOT_RUNNING 38,1402
#define SCSI_ABORT_ERROR 43,1632
#define SCSI_RESET_SNOOZE 49,1919
#define SCSI_RESET_PUNT 54,2157
#define SCSI_RESET_SUCCESS 63,2666
#define SCSI_RESET_PENDING 72,3053
#define SCSI_RESET_WAKEUP 77,3262
#define SCSI_RESET_NOT_RUNNING 81,3376
#define SCSI_RESET_ERROR 84,3472
#define SCSI_RESET_SYNCHRONOUS	86,3500
#define SCSI_RESET_ASYNCHRONOUS	87,3537
#define SCSI_RESET_SUGGEST_BUS_RESET	88,3575
#define SCSI_RESET_SUGGEST_HOST_RESET	89,3617
#define SCSI_RESET_BUS_RESET 94,3787
#define SCSI_RESET_HOST_RESET 99,3957
#define SCSI_RESET_ACTION 104,4081

drivers/scsi/fd_mcs.c,4132
#define DRIVER_VERSION 100,4053
struct proc_dir_entry proc_scsi_fd_mcs 102,4109
#define DEBUG 109,4263
#define ENABLE_PARITY 110,4320
#define DO_DETECT 111,4372
#define EVERY_ACCESS 116,4491
#define ERRORS_ONLY 117,4558
#define DEBUG_DETECT 118,4630
#define DEBUG_MESSAGES 119,4685
#define DEBUG_ABORT 120,4741
#define DEBUG_RESET 121,4796
#define DEBUG_RACE 122,4851
#define EVERY_ACCESS 124,4933
#define ERRORS_ONLY 125,5007
#define DEBUG_DETECT 126,5034
#define DEBUG_MESSAGES 127,5061
#define DEBUG_ABORT 128,5088
#define DEBUG_RESET 129,5115
#define DEBUG_RACE 130,5142
#define ERRORS_ONLY 136,5290
#define PARITY_MASK 140,5343
#define PARITY_MASK 142,5379
enum chip_type chip_type145,5417
  unknown 146,5434
  unknown          = 0x00,146,5434
  tmc1800 147,5461
  tmc1800          = 0x01,147,5461
  tmc18c50 148,5488
  tmc18c50         = 0x02,148,5488
  tmc18c30 149,5515
  tmc18c30         = 0x03,149,5515
  in_arbitration 153,5553
  in_arbitration   = 0x02,153,5553
  in_selection 154,5580
  in_selection     = 0x04,154,5580
  in_other 155,5607
  in_other         = 0x08,155,5607
  disconnect 156,5634
  disconnect       = 0x10,156,5634
  aborted 157,5661
  aborted          = 0x20,157,5661
  sent_ident 158,5688
  sent_ident       = 0x40,158,5688
enum in_port_type in_port_type161,5719
  Read_SCSI_Data 162,5739
  SCSI_Status 163,5764
  TMC_Status 164,5789
  FIFO_Status 165,5814
  Interrupt_Cond 166,5868
  LSB_ID_Code 167,5922
  MSB_ID_Code 168,5947
  Read_Loopback 169,5972
  SCSI_Data_NoACK 170,5997
  Interrupt_Status 171,6022
  Configuration1 172,6047
  Configuration2 173,6072
  Read_FIFO 174,6126
  FIFO_Data_Count 175,6151
enum out_port_type out_port_type178,6179
  Write_SCSI_Data 179,6200
  SCSI_Cntl 180,6225
  Interrupt_Cntl 181,6250
  SCSI_Mode_Cntl 182,6275
  TMC_Cntl 183,6300
  Memory_Cntl 184,6325
  Write_Loopback 185,6379
  IO_Control 186,6404
  Write_FIFO 187,6449
struct fd_hostdata fd_hostdata190,6477
#define FD_MAX_HOSTS 228,7690
#define HOSTDATA(HOSTDATA230,7729
#define bios_base 231,7794
#define bios_major 232,7854
#define bios_minor 233,7915
#define in_command 234,7976
#define current_SC 235,8037
#define chip 236,8098
#define adapter_mask 237,8153
#define FIFO_COUNT 238,8216
#define adapter_name 239,8277
#define in_interrupt_flag 241,8355
#define SCSI_Mode_Cntl_port 243,8452
#define FIFO_Data_Count_port 244,8522
#define Interrupt_Cntl_port 245,8593
#define Interrupt_Status_port 246,8663
#define Interrupt_Cond_port 247,8735
#define Read_FIFO_port 248,8805
#define Read_SCSI_Data_port 249,8870
#define SCSI_Cntl_port 250,8940
#define SCSI_Data_NoACK_port 251,9005
#define SCSI_Status_port 252,9076
#define TMC_Cntl_port 253,9143
#define TMC_Status_port 254,9207
#define Write_FIFO_port 255,9273
#define Write_SCSI_Data_port 256,9339
#define FIFO_Size 257,9410
#define Bytes_Read 258,9470
#define Bytes_Written 259,9531
#define INTR_Processed 260,9595
struct fd_mcs_adapters_struct fd_mcs_adapters_struct262,9661
#define REPLY_ID 270,9782
static struct fd_mcs_adapters_struct fd_mcs_adapters[272,9807
#define FD_BRDS 290,10156
static unsigned long addresses[294,10309
static unsigned short ports[295,10382
static unsigned short ints[296,10446
static int found 299,10534
static struct Scsi_Host *hosts[300,10556
static int user_fifo_count 302,10616
static int user_fifo_size 303,10648
void fd_mcs_setup(305,10680
static void print_banner(318,11010
static void do_pause(338,11498
inline static void fd_mcs_make_bus_idle(345,11632
int fd_mcs_detect(355,11937
const char *fd_mcs_info(591,18270
static int TOTAL_INTR 596,18347
int fd_mcs_proc_info(608,18872
static int fd_mcs_select(646,19767
static void my_done(688,20796
static void fd_mcs_intr(705,21210
int fd_mcs_release(1150,35099
int fd_mcs_queue(1179,35609
static void internal_done(1232,37291
int fd_mcs_command(1238,37408
static void fd_mcs_print_info(1249,37671
int fd_mcs_abort(1320,39922
int fd_mcs_reset(1359,40727
int fd_mcs_biosparam(1393,41522
Scsi_Host_Template driver_template 1475,44453

drivers/scsi/fd_mcs.h,104
#define _FD_MCS_H23,833
extern struct proc_dir_entry proc_scsi_fd_mcs;35,1331
#define FD_MCS 37,1379

drivers/scsi/atp870u.c,1839
struct proc_dir_entry proc_scsi_atp870u 30,568
static unsigned char admaxu=40,853
static unsigned short int active_idu[41,934
static unsigned short int active_idu[2],wide_idu[41,934
static unsigned short int active_idu[2],wide_idu[2],sync_idu,41,934
static unsigned short int active_idu[2],wide_idu[2],sync_idu,ultra_map[41,934
static int  workingu[42,1009
static Scsi_Cmnd *querequ[43,1040
static Scsi_Cmnd *querequ[2][qcnt],*curr_req[43,1040
static unsigned char devspu[44,1093
static unsigned char dirctu[48,1318
static unsigned char dirctu[2][16],last_cmd[48,1318
static unsigned char dirctu[2][16],last_cmd[2],in_snd[48,1318
static unsigned char dirctu[2][16],last_cmd[2],in_snd[2],in_int[48,1318
static unsigned char ata_cdbu[49,1386
static unsigned int ioportu[50,1424
static unsigned int irqnumu[51,1462
static unsigned short int pciportu[52,1500
static unsigned long prdaddru[53,1539
static unsigned long prdaddru[2][16],tran_lenu[53,1539
static unsigned long prdaddru[2][16],tran_lenu[2][16],last_lenu[53,1539
static unsigned char prd_tableu[54,1611
static unsigned char *prd_posu[55,1657
static unsigned char quhdu[56,1696
static unsigned char quhdu[2],quendu[56,1696
static unsigned char devtypeu[57,1737
static struct Scsi_Host * atp_host[59,1855
static void atp870u_intr_handle(61,1907
int atp870u_queuecommand(455,9822
void mydlyu(526,11090
void send_s870(535,11217
static void internal_done(768,16419
int atp870u_command(773,16491
unsigned char fun_scam 784,16681
void tscam(831,17821
void is870(1103,23170
int atp870u_detect(1677,34160
int atp870u_abort(1877,38887
int atp870u_reset(1909,39670
atp870u_info(1935,40251
atp870u_set_info(1945,40427
#define BLS 1950,40554
atp870u_proc_info(1952,40590
int atp870u_biosparam(2015,41976
Scsi_Host_Template driver_template 2038,42364

drivers/scsi/atp870u.h,242
#define MAX_CDB 18,302
#define MAX_SENSE 19,321
#define qcnt 29,640
#define ATP870U_SCATTER 30,667
#define ATP870U_CMDLUN 31,695
        #define NULL 34,734
extern struct proc_dir_entry proc_scsi_atp870u;37,765
#define ATP870U 43,938

drivers/scsi/i91uscsi.c,2691
#define DEBUG_INTERRUPT 77,3988
#define DEBUG_QUEUE 78,4014
#define DEBUG_STATE 79,4040
#define INT_DISC	80,4066
#define	CVT_LINUX_VERSION(CVT_LINUX_VERSION84,4113
HCS tul_hcs[154,6435
static INI_ADPT_STRUCT i91u_adpt[156,6511
static NVRAM i91unvram;159,6606
static NVRAM *i91unvramp;160,6630
static UCHAR i91udftNvRam[164,6659
static UCHAR tul_rate_tbl[204,7896
extern int tul_num_ch;217,8192
static void tul_do_pause(220,8217
void tul_se2_wait(236,8730
void tul_se2_instr(301,10157
void tul_se2_ew_en(332,10956
void tul_se2_ew_ds(344,11301
USHORT tul_se2_rd(357,11661
void tul_se2_wr(388,12485
int tul_se2_rd_all(430,13674
void tul_se2_update_all(458,14425
void tul_read_eeprom(487,15150
int Addi91u_into_Adapter_table(504,15673
void init_i91uAdapter_table(536,16667
void tul_stop_bm(550,16980
void get_tulipPCIConfig(562,17417
int tul_reset_scsi(571,17792
int init_tulip(590,18376
SCB *tul_alloc_scb(712,22578
void tul_release_scb(740,23308
void tul_append_pend_scb(771,24057
void tul_push_pend_scb(789,24512
SCB *tul_find_first_pend_scb(805,24916
SCB *tul_pop_pend_scb(836,25754
void tul_unlink_pend_scb(853,26160
void tul_append_busy_scb(881,26936
SCB *tul_pop_busy_scb(903,27524
void tul_unlink_busy_scb(924,28077
SCB *tul_find_busy_scb(957,29005
void tul_append_done_scb(979,29553
SCB *tul_find_done_scb(998,30009
int tul_abort_srb(1015,30417
int tul_bad_seq(1142,34133
int tul_device_reset(1162,34617
int tul_reset_scsi_bus(1262,37275
void tul_exec_scb(1314,38568
int tul_isr(1360,39711
int tulip_main(1381,40196
void tulip_scsi(1467,43055
int tul_next_state(1575,46179
int tul_state_1(1616,46933
int tul_state_2(1670,48879
int tul_state_3(1693,49530
int tul_state_4(1759,51494
int tul_state_5(1819,53107
int tul_state_6(1905,56239
int tul_state_7(1945,57201
int tul_xfer_data_in(1968,57760
int tul_xfer_data_out(1994,58686
int tul_xpad_in(2020,59601
int tul_xpad_out(2046,60269
int tul_status_msg(2075,61128
int int_tul_busfree(2128,62790
int int_tul_scsi_rst(2154,63663
int int_tul_resel(2184,64557
int int_tul_bad_seq(2260,66936
int tul_msgout_abort_targ(2279,67420
int tul_msgout_abort_tag(2295,67928
int tul_msgin(2312,68440
int tul_msgout_reject(2387,70365
int tul_msgout_ide(2406,70903
int tul_msgin_extend(2415,71189
int tul_msgin_sync(2503,74447
int wdtr_done(2536,75249
int tul_sync_done(2553,75828
int tul_post_scsi_rst(2575,76407
void tul_select_atn_stop(2604,77247
void tul_select_atn(2616,77610
void tul_select_atn3(2633,78145
int tul_bus_device_reset(2653,78831
int tul_msgin_accept(2703,80250
int wait_tulip(2710,80455
int tul_wait_disc(2759,82437
int tul_wait_done_disc(2782,83227

drivers/scsi/i91uscsi.h,12198
#define ULONG 58,3029
#define USHORT 59,3059
#define UCHAR 60,3090
#define BYTE 61,3120
#define WORD 62,3150
#define DWORD 63,3181
#define UBYTE 64,3211
#define UWORD 65,3241
#define UDWORD 66,3272
#define U32 68,3315
#define U32 70,3350
#define NULL 74,3401
#define TRUE 77,3461
#define FALSE 80,3524
#define FAILURE 83,3589
#define TOTAL_SG_ENTRY	86,3619
#define MAX_SUPPORTED_ADAPTERS 87,3646
#define MAX_OFFSET	88,3680
#define MAX_TARGETS	89,3703
#define INI_VENDOR_ID 91,3728
#define I950_DEVICE_ID	92,3794
#define I940_DEVICE_ID	93,3861
#define I935_DEVICE_ID	94,3928
#define	_I91USCSI_H96,3996
} i91u_config;i91u_config101,4077
#define TUL_PVID 106,4217
#define TUL_PDID 107,4281
#define TUL_PCMD 108,4345
#define TUL_PSTUS 109,4409
#define TUL_PRID 110,4473
#define TUL_PPI 111,4537
#define TUL_PSC 112,4601
#define TUL_PBC 113,4665
#define TUL_PCLS 114,4729
#define TUL_PLTR 115,4793
#define TUL_PHDT 116,4857
#define TUL_PBIST 117,4921
#define TUL_PBAD 118,4985
#define TUL_PBAD1 119,5049
#define TUL_PBAD2 120,5113
#define TUL_PBAD3 121,5177
#define TUL_PBAD4 122,5241
#define TUL_PBAD5 123,5305
#define TUL_PRSVD 124,5369
#define TUL_PRSVD1 125,5433
#define TUL_PRAD 126,5497
#define TUL_PRSVD2 127,5561
#define TUL_PRSVD3 128,5625
#define TUL_PINTL 129,5689
#define TUL_PINTP 130,5753
#define TUL_PIGNT 131,5817
#define TUL_PMGNT 132,5881
#define TUL_HACFG0 137,6027
#define TUL_HACFG1 138,6099
#define TUL_HACFG2 139,6171
#define TUL_SDCFG0 141,6244
#define TUL_SDCFG1 142,6316
#define TUL_SDCFG2 143,6388
#define TUL_SDCFG3 144,6460
#define TUL_GINTS 146,6533
#define TUL_GIMSK 147,6605
#define TUL_GCTRL 148,6677
#define TUL_GCTRL_EEPROM_BIT 149,6749
#define TUL_GCTRL1 150,6786
#define TUL_DMACFG 151,6858
#define TUL_NVRAM 152,6930
#define TUL_SCnt0 154,7003
#define TUL_SCnt1 155,7075
#define TUL_SCnt2 156,7147
#define TUL_SFifoCnt 157,7219
#define TUL_SIntEnable 158,7291
#define TUL_SInt 159,7363
#define TUL_SCtrl0 160,7435
#define TUL_SStatus0 161,7507
#define TUL_SCtrl1 162,7579
#define TUL_SStatus1 163,7651
#define TUL_SConfig 164,7723
#define TUL_SStatus2 165,7795
#define TUL_SPeriod 166,7867
#define TUL_SOffset 167,7940
#define TUL_SScsiId 168,8012
#define TUL_SBusId 169,8084
#define TUL_STimeOut 170,8156
#define TUL_SIdent 171,8228
#define TUL_SAvail 172,8300
#define TUL_SData 173,8372
#define TUL_SFifo 174,8444
#define TUL_SSignal 175,8516
#define TUL_SCmd 176,8588
#define TUL_STest0 177,8660
#define TUL_STest1 178,8732
#define TUL_SCFG1	179,8804
#define TUL_XAddH 181,8871
#define TUL_XAddW 182,8943
#define TUL_XCntH 183,9015
#define TUL_XCntW 184,9087
#define TUL_XCmd 185,9159
#define TUL_Int 186,9231
#define TUL_XStatus 187,9303
#define TUL_Mask 188,9375
#define TUL_XCtrl 189,9447
#define TUL_XCtrl1 190,9519
#define TUL_XFifo 191,9591
#define TUL_WCtrl 193,9664
#define TUL_DCtrl 194,9736
#define BUSMS 199,10034
#define IOSPA 200,10106
#define TSC_EN_RESEL 205,10404
#define TSC_CMD_COMP 206,10476
#define TSC_SEL 207,10548
#define TSC_SEL_ATN 208,10620
#define TSC_SEL_ATN_DMA 209,10692
#define TSC_SEL_ATN3 210,10764
#define TSC_SEL_ATNSTOP 211,10836
#define TSC_SELATNSTOP 212,10908
#define TSC_SEL_ATN_DIRECT_IN 214,10981
#define TSC_SEL_ATN_DIRECT_OUT 215,11053
#define TSC_SEL_ATN3_DIRECT_IN 216,11125
#define TSC_SEL_ATN3_DIRECT_OUT 217,11197
#define TSC_XF_DMA_OUT_DIRECT 218,11269
#define TSC_XF_DMA_IN_DIRECT 219,11341
#define TSC_XF_DMA_OUT 221,11414
#define TSC_XF_DMA_IN 222,11486
#define TSC_XF_FIFO_OUT 223,11558
#define TSC_XF_FIFO_IN 224,11630
#define TSC_MSG_ACCEPT 226,11703
#define TSC_RST_SEQ 231,12001
#define TSC_FLUSH_FIFO 232,12073
#define TSC_ABT_CMD 233,12145
#define TSC_RST_CHIP 234,12217
#define TSC_RST_BUS 235,12289
#define TSC_EN_SCAM 240,12587
#define TSC_TIMER 241,12659
#define TSC_EN_SCSI2 242,12731
#define TSC_PWDN 243,12803
#define TSC_WIDE_CPU 244,12875
#define TSC_HW_RESELECT 245,12947
#define TSC_EN_BUS_OUT 246,13019
#define TSC_EN_BUS_IN 247,13091
#define TSC_EN_LATCH 252,13389
#define TSC_INITIATOR 253,13461
#define TSC_EN_SCSI_PAR 254,13533
#define TSC_DMA_8BIT 255,13605
#define TSC_DMA_16BIT 256,13677
#define TSC_EN_WDACK 257,13749
#define TSC_ALT_PERIOD 258,13821
#define TSC_DIS_SCSIRST 259,13893
#define TSC_INITDEFAULT 261,13966
#define TSC_WIDE_SCSI 263,14057
#define TSC_RST_ACK 268,14355
#define TSC_RST_ATN 269,14427
#define TSC_RST_BSY 270,14499
#define TSC_SET_ACK 272,14572
#define TSC_SET_ATN 273,14644
#define TSC_REQI 275,14717
#define TSC_ACKI 276,14789
#define TSC_BSYI 277,14861
#define TSC_SELI 278,14933
#define TSC_ATNI 279,15005
#define TSC_MSGI 280,15077
#define TSC_CDI 281,15149
#define TSC_IOI 282,15221
#define TSS_INT_PENDING 288,15520
#define TSS_SEQ_ACTIVE 289,15584
#define TSS_XFER_CNT 290,15648
#define TSS_FIFO_EMPTY 291,15712
#define TSS_PAR_ERROR 292,15776
#define TSS_PH_MASK 293,15840
#define TSS_STATUS_RCV 298,16130
#define TSS_MSG_SEND 299,16194
#define TSS_CMD_PH_CMP 300,16258
#define TSS_DATA_PH_CMP 301,16325
#define TSS_STATUS_SEND 302,16389
#define TSS_XFER_CMP 303,16453
#define TSS_SEL_CMP 304,16517
#define TSS_ARB_CMP 305,16581
#define TSS_CMD_ABTED 310,16871
#define TSS_OFFSET_0 311,16935
#define TSS_FIFO_FULL 312,16999
#define TSS_TIMEOUT_0 313,17063
#define TSS_BUSY_RLS 314,17127
#define TSS_PH_MISMATCH 315,17191
#define TSS_SCSI_BUS_EN 316,17255
#define TSS_SCSIRST 317,17319
#define TSS_RESEL_INT 322,17609
#define TSS_SEL_TIMEOUT 323,17673
#define TSS_BUS_SERV 324,17737
#define TSS_SCSIRST_INT 325,17766
#define TSS_DISC_INT 326,17830
#define TSS_SEL_INT 327,17894
#define TSS_SCAM_SEL 328,17958
#define TSS_FUNC_COMP 329,18022
#define DATA_OUT 334,18277
#define DATA_IN 335,18303
#define CMD_OUT 336,18364
#define STATUS_IN 337,18390
#define MSG_OUT 338,18451
#define MSG_IN 339,18512
#define TAX_X_FORC 346,18766
#define TAX_X_ABT 347,18795
#define TAX_X_CLR_FIFO 348,18824
#define TAX_X_IN 350,18854
#define TAX_X_OUT 351,18883
#define TAX_SG_IN 352,18912
#define TAX_SG_OUT 353,18941
#define XCMP 358,19196
#define FCMP 359,19225
#define XABT 360,19254
#define XERR 361,19283
#define SCMP 362,19312
#define IPEND 363,19341
#define XPEND 368,19596
#define FEMPTY 369,19660
#define EXTSG 376,19952
#define EXTAD 377,19981
#define SEG4K 378,20010
#define EEPRG 379,20039
#define MRMUL 380,20068
#define SE2CS 385,20323
#define SE2CLK 386,20352
#define SE2DO 387,20381
#define SE2DI 388,20410
typedef struct SG_Struc SG_Struc394,20666
} SG;SG397,20757
typedef struct Scsi_Ctrl_Blk Scsi_Ctrl_Blk402,20932
} SCB;SCB440,22212
#define SCB_RENT 443,22256
#define SCB_PEND 444,22285
#define SCB_CONTIG 445,22314
#define SCB_SELECT 446,22370
#define SCB_BUSY 447,22399
#define SCB_DONE 448,22428
#define ExecSCSI 452,22487
#define BusDevRst 453,22515
#define AbortCmd 454,22543
#define SCM_RSENS 458,22607
#define SCF_DONE 462,22698
#define SCF_POST 463,22727
#define SCF_SENSE 464,22756
#define SCF_DIR 465,22785
#define SCF_NO_DCHK 466,22814
#define SCF_DIN 467,22843
#define SCF_DOUT 468,22872
#define SCF_NO_XF 469,22901
#define SCF_WR_VF 470,22930
#define SCF_POLL 471,22994
#define SCF_SG 472,23023
#define HOST_SEL_TOUT 475,23086
#define HOST_DO_DU 476,23115
#define HOST_BUS_FREE 477,23144
#define HOST_BAD_PHAS 478,23173
#define HOST_INV_CMD 479,23202
#define HOST_ABORTED 480,23231
#define HOST_SCSI_RST 481,23275
#define HOST_DEV_RST 482,23304
#define TARGET_CHKCOND 485,23367
#define TARGET_BUSY 486,23396
#define QUEUE_FULL	487,23425
#define MSG_COMP 490,23469
#define MSG_EXTEND 491,23498
#define MSG_SDP 492,23527
#define MSG_RESTORE 493,23556
#define MSG_DISC 494,23585
#define MSG_IDE 495,23614
#define MSG_ABORT 496,23643
#define MSG_REJ 497,23672
#define MSG_NOP 498,23701
#define MSG_PARITY 499,23730
#define MSG_LINK_COMP 500,23759
#define MSG_LINK_FLAG 501,23788
#define MSG_DEVRST 502,23817
#define MSG_ABORT_TAG 503,23846
#define MSG_STAG 506,23952
#define MSG_HTAG 507,23981
#define MSG_OTAG 508,24010
#define MSG_IGNOREWIDE 510,24040
#define MSG_IDENT 512,24070
typedef struct Tar_Ctrl_Struc Tar_Ctrl_Struc518,24276
} TCS;TCS526,24481
#define TCF_SCSI_RATE 533,24704
#define TCF_EN_DISC 534,24743
#define TCF_NO_SYNC_NEGO 535,24782
#define TCF_NO_WDTR 536,24821
#define TCF_EN_255 537,24860
#define TCF_EN_START 538,24899
#define TCF_WDTR_DONE 539,24938
#define TCF_SYNC_DONE 540,24977
#define TCF_BUSY 541,25016
#define TCF_DRV_BUSY 545,25095
#define TCF_DRV_EN_TAG 546,25167
#define TCF_DRV_255_63 547,25206
typedef struct I91u_Adpt_Struc I91u_Adpt_Struc549,25246
} INI_ADPT_STRUCT;INI_ADPT_STRUCT555,25411
typedef struct Ha_Ctrl_Struc Ha_Ctrl_Struc561,25617
} HCS;HCS608,26957
#define HCC_SCSI_RESET 611,27001
#define HCC_EN_PAR 612,27038
#define HCC_ACT_TERM1 613,27075
#define HCC_ACT_TERM2 614,27112
#define HCC_AUTO_TERM 615,27149
#define HCC_EN_PWR 616,27186
#define HCF_EXPECT_DISC 619,27259
#define HCF_EXPECT_SELECT 620,27296
#define HCF_EXPECT_RESET 621,27333
#define HCF_EXPECT_DONE_DISC 622,27370
typedef struct _NVRAM_SCSI _NVRAM_SCSI628,27561
} NVRAM_SCSI;NVRAM_SCSI650,28848
typedef struct _NVRAM _NVRAM652,28863
} NVRAM, *PNVRAM;PNVRAM670,29744
#define NBC1_ENABLE 673,29838
#define NBC1_8DRIVE 674,29910
#define NBC1_REMOVABLE 675,29982
#define NBC1_INT19 676,30054
#define NBC1_BIOSSCAN 677,30126
#define NBC1_LUNSUPPORT 678,30198
#define NHC1_BOOTIDMASK 681,30346
#define NHC1_LUNMASK 682,30410
#define NHC1_CHANMASK 683,30474
#define NCC1_BUSRESET 686,30614
#define NCC1_PARITYCHK 687,30686
#define NCC1_ACTTERM1 688,30758
#define NCC1_ACTTERM2 689,30830
#define NCC1_AUTOTERM 690,30902
#define NCC1_PWRMGR 691,30974
#define NTC_DISCONNECT 694,31122
#define NTC_SYNC 695,31194
#define NTC_NO_WDTR 696,31266
#define NTC_1GIGA 697,31338
#define NTC_SPINUP 698,31411
#define INI_SIGNATURE 701,31559
#define NBC1_DEFAULT 702,31598
#define NCC1_DEFAULT 703,31644
#define NTC_DEFAULT 704,31725
#define DISC_NOT_ALLOW 707,31876
#define DISC_ALLOW 708,31948
#define SCSICMD_RequestSense 709,32020
#define PCI_FUNCTION_ID 715,32284
#define PCI_BIOS_PRESENT 716,32321
#define FIND_PCI_DEVICE 717,32358
#define FIND_PCI_CLASS_CODE 718,32395
#define GENERATE_SPECIAL_CYCLE 719,32432
#define READ_CONFIG_BYTE 720,32469
#define READ_CONFIG_WORD 721,32506
#define READ_CONFIG_DWORD 722,32543
#define WRITE_CONFIG_BYTE 723,32580
#define WRITE_CONFIG_WORD 724,32617
#define WRITE_CONFIG_DWORD 725,32654
#define SUCCESSFUL 727,32692
#define FUNC_NOT_SUPPORTED 728,32729
#define BAD_VENDOR_ID 729,32766
#define DEVICE_NOT_FOUND 730,32838
#define BAD_REGISTER_NUMBER 731,32910
#define MAX_PCI_DEVICES 733,32948
#define MAX_PCI_CHANL 735,33019
typedef struct _BIOS32_ENTRY_STRUCTURE _BIOS32_ENTRY_STRUCTURE737,33054
} BIOS32_ENTRY_STRUCTURE, *PBIOS32_ENTRY_STRUCTURE;PBIOS32_ENTRY_STRUCTURE744,33412
} REGS;REGS799,34214
} CONFIG_ADR;CONFIG_ADR811,34485
} HOST_ADR;HOST_ADR820,34679
typedef struct _HCSinfo _HCSinfo822,34692
} HCSINFO;HCSINFO827,34866
#define TUL_RD(TUL_RD829,34878
#define TUL_RDLONG(TUL_RDLONG830,34947
#define TUL_WR(TUL_WR831,35014
#define TUL_WRSHORT(TUL_WRSHORT832,35079
#define TUL_WRLONG(TUL_WRLONG833,35144
#define SCSI_ABORT_SNOOZE 835,35210
#define SCSI_ABORT_SUCCESS 836,35238
#define SCSI_ABORT_PENDING 837,35267
#define SCSI_ABORT_BUSY 838,35296
#define SCSI_ABORT_NOT_RUNNING 839,35322
#define SCSI_ABORT_ERROR 840,35355
#define SCSI_RESET_SNOOZE 842,35383
#define SCSI_RESET_PUNT 843,35411
#define SCSI_RESET_SUCCESS 844,35437
#define SCSI_RESET_PENDING 845,35466
#define SCSI_RESET_WAKEUP 846,35495
#define SCSI_RESET_NOT_RUNNING 847,35523
#define SCSI_RESET_ERROR 848,35556
#define SCSI_RESET_SYNCHRONOUS	850,35584
#define SCSI_RESET_ASYNCHRONOUS	851,35621
#define SCSI_RESET_SUGGEST_BUS_RESET	852,35659
#define SCSI_RESET_SUGGEST_HOST_RESET	853,35701
#define SCSI_RESET_BUS_RESET 855,35745
#define SCSI_RESET_HOST_RESET 856,35780
#define SCSI_RESET_ACTION 857,35816

drivers/scsi/ini9100u.c,1445
#define CVT_LINUX_VERSION(CVT_LINUX_VERSION100,4607
unsigned int i91u_debug 167,6019
Scsi_Host_Template driver_template 171,6082
char *i91uCopyright 175,6162
char *i91uInitioName 176,6209
char *i91uProductName 177,6257
char *i91uVersion 178,6297
struct proc_dir_entry proc_scsi_ini9100u 181,6379
#define TULSZ(TULSZ189,6555
#define TUL_RDWORD(TUL_RDWORD190,6606
static int setup_called 193,6741
static int tul_num_ch 195,6771
static int tul_num_scb;196,6833
static int tul_tag_enable 197,6857
static SCB *tul_scb;198,6888
static int setup_debug 201,6928
static char *setup_str 204,6964
extern HCS tul_hcs[248,9066
struct id id250,9089
const struct id id_table[255,9139
static void i91uAppendSRBToQueue(274,9803
static Scsi_Cmnd *i91uPopSRBFromQueue(307,10807
void i91u_setup(334,11332
int tul_NewReturnNumberOfAdapters(348,11621
int tul_ReturnNumberOfAdapters(390,12903
int i91u_detect(520,16725
static void i91uBuildSCB(687,21808
int i91u_queue(765,24341
int i91u_command(792,25028
int i91u_abort(802,25236
int i91u_reset(814,25479
int i91u_biosparam(830,25931
static void i91uSCBPost(877,27371
static void i91u_intr0(949,29693
static void i91u_intr1(973,30254
static void i91u_intr2(997,30815
static void i91u_intr3(1021,31376
static void i91u_intr4(1045,31937
static void i91u_intr5(1069,32498
static void i91u_intr6(1093,33059
static void i91u_intr7(1117,33620
static void i91u_panic(1143,34185

drivers/scsi/ini9100u.h,2068
#define	CVT_LINUX_VERSION(CVT_LINUX_VERSION69,3445
extern struct proc_dir_entry proc_scsi_ini9100u;86,3964
#define i91u_REVID 91,4095
#define INI9100U	94,4225
#define INI9100U	118,4546
#define INI9100U	142,4875
#define VIRT_TO_BUS(VIRT_TO_BUS175,5591
#define ULONG 176,5655
#define USHORT 177,5685
#define UCHAR 178,5716
#define BYTE 179,5746
#define WORD 180,5776
#define DWORD 181,5807
#define UBYTE 182,5837
#define UWORD 183,5867
#define UDWORD 184,5898
#define U32 186,5941
#define U32 188,5974
#define NULL 192,6023
#define TRUE 195,6083
#define FALSE 198,6146
#define FAILURE 201,6211
#define i91u_MAXQUEUE	204,6241
#define TOTAL_SG_ENTRY	205,6266
#define MAX_TARGETS	206,6293
#define SENSE_SIZE	207,6317
#define INI_VENDOR_ID 209,6341
#define DMX_VENDOR_ID 210,6407
#define I950_DEVICE_ID	211,6472
#define I940_DEVICE_ID	212,6539
#define I935_DEVICE_ID	213,6606
#define I920_DEVICE_ID	214,6673
typedef struct SG_Struc SG_Struc219,6966
} SG;SG222,7057
typedef struct Scsi_Ctrl_Blk Scsi_Ctrl_Blk227,7232
} SCB;SCB250,8116
#define ExecSCSI 253,8152
#define BusDevRst 254,8180
#define AbortCmd 255,8208
#define SCF_DONE 258,8272
#define SCF_POST 259,8301
#define SCF_SENSE 260,8330
#define SCF_DIR 261,8359
#define SCF_NO_DCHK 262,8388
#define SCF_DIN 263,8417
#define SCF_DOUT 264,8446
#define SCF_NO_XF 265,8475
#define SCF_POLL 266,8504
#define SCF_SG 267,8533
#define HOST_SEL_TOUT 270,8596
#define HOST_DO_DU 271,8625
#define HOST_BUS_FREE 272,8654
#define HOST_BAD_PHAS 273,8683
#define HOST_INV_CMD 274,8712
#define HOST_SCSI_RST 275,8741
#define HOST_DEV_RST 276,8770
#define TARGET_CHKCOND 279,8833
#define TARGET_BUSY 280,8862
#define MSG_STAG 283,8968
#define MSG_HTAG 284,8997
#define MSG_OTAG 285,9026
typedef struct Tar_Ctrl_Struc Tar_Ctrl_Struc291,9236
} TCS;TCS297,9391
#define TCF_DRV_255_63 303,9616
typedef struct Ha_Ctrl_Struc Ha_Ctrl_Struc308,9841
} HCS;HCS328,10455
#define HCF_EXPECT_RESET 331,10498
#define DISC_NOT_ALLOW 334,10611
#define DISC_ALLOW 335,10683

drivers/scsi/mca_53c9x.c,602
volatile unsigned char cmd_buffer[71,2255
static struct ESP_regs eregs;78,2388
int mca_esp_detect(81,2499
int mca_esp_release(257,6461
static int dma_bytes_sent(280,6945
static int dma_can_transfer(287,7067
static void dma_dump_state(300,7327
static void dma_init_read(311,7599
static void dma_init_write(329,7981
static void dma_ints_off(347,8385
static void dma_ints_on(357,8593
static int dma_irq_p(367,8760
static int dma_ports_p(381,9252
static void dma_setup(391,9499
static void dma_led_on(408,9909
static void dma_led_off(413,10003
Scsi_Host_Template driver_template 419,10112

drivers/scsi/mca_53c9x.h,148
#define MCA_53C9X_H14,377
#define PS2_SYS_CTR	21,514
#define MCA_53C9X 34,970
#define MCA_53C9X_IO_PORTS 49,1481
#define MCA_53C9X_IDS 60,1900

drivers/scsi/megaraid.c,2308
#define CRLFSTR 83,3243
char kernel_version[92,3394
#define ioremap 141,4467
#define iounmap 142,4490
} spinlock_t;spinlock_t147,4578
#define spin_lock_init(spin_lock_init149,4593
#define spin_lock_irqsave(spin_lock_irqsave150,4637
#define spin_unlock_irqrestore(spin_unlock_irqrestore153,4825
#define queue_task_irq(queue_task_irq158,4947
#define queue_task_irq_off(queue_task_irq_off159,4995
#define MAX_SERBUF 162,5051
#define COM_BASE 163,5074
#define ENQUEUE(ENQUEUE165,5098
#define ENQUEUE_NL(ENQUEUE_NL175,5426
#define DEQUEUE(DEQUEUE182,5596
u_long RDINDOOR 191,5817
void WRINDOOR 196,5906
u_long RDOUTDOOR 201,6008
void WROUTDOOR 206,6098
#define SERDEBUG 231,6927
static int numCtlrs 245,7289
static mega_host_config *megaCtlrs[246,7314
static mega_scb *qPending 249,7399
static Scsi_Cmnd *qCompleted 250,7433
volatile static spinlock_t mega_lock;252,7471
static struct tq_struct runq 253,7509
struct proc_dir_entry proc_scsi_megaraid 255,7568
static char strbuf[262,7700
static void ser_init 264,7737
static void ser_puts 276,7947
static void ser_putc 285,8066
static int ser_printk 297,8276
#define TRACE(TRACE311,8476
#define TRACE(TRACE314,8520
void callDone 317,8545
static int initSCB 337,9133
static mega_scb * allocateSCB 360,9744
static void freeSCB 390,10496
static void mega_rundoneq 399,10664
static void mega_cmd_done 440,11586
static void mega_runque 452,11961
static mega_scb * mega_build_cmd 504,13427
static mega_scb * mega_ioctl 666,18068
static void megaraid_isr 746,20145
static int busyWaitMbox 849,22817
static int MegaIssueCmd 872,23472
static int build_sglist 978,26197
static int mega_register_mailbox 1028,27748
static int mega_i_query_adapter 1054,28779
int megaraid_proc_info 1139,31612
int findCard 1146,31754
int megaraid_detect 1267,35050
int megaraid_release 1290,35697
static inline void freeSgList(1324,36467
const char * megaraid_info 1337,36825
int megaraid_queue 1369,37754
volatile static int internal_done_flag 1400,38663
volatile static int internal_done_errcode 1401,38707
static void internal_done 1403,38755
int megaraid_command 1428,39538
int megaraid_abort 1444,39966
int megaraid_reset 1477,40896
int megaraid_biosparam 1516,42035
Scsi_Host_Template driver_template 1545,42701

drivers/scsi/megaraid.h,3279
#define __MEGARAID_H__2,23
#define MULTI_IO 8,109
#define IN_ISR 11,253
#define NO_INTR 12,297
#define IN_TIMEOUT 13,341
#define PENDING 14,385
#define BOARD_QUARTZ 15,429
#define SCB_ACTIVE 17,474
#define SCB_WAITQ 18,497
#define SCB_ISSUED 19,520
#define SCB_FREE 21,544
#define SCB_RESET 22,579
#define SCB_ABORT 23,614
#define SCB_LOCKED 24,649
#define MEGA_CMD_TIMEOUT 26,685
#define MAX_SGLIST 28,721
#define MAX_COMMANDS 29,756
#define MAX_LOGICAL_DRIVES 31,793
#define MAX_CHANNEL 32,827
#define MAX_TARGET 33,861
#define MAX_PHYSICAL_DRIVES 34,896
#define INQUIRY_DATA_SIZE 36,952
#define MAX_CDB_LEN 37,989
#define MAX_REQ_SENSE_LEN 38,1026
#define INTR_VALID 40,1064
#define MEGA_MBOXCMD_LREAD 43,1125
#define MEGA_MBOXCMD_LWRITE 44,1162
#define MEGA_MBOXCMD_PASSTHRU 45,1199
#define MEGA_MBOXCMD_ADAPTERINQ 46,1236
#define COMMAND_PORT 49,1301
#define COMMAND_ID_PORT 50,1333
#define SG_LIST_PORT0 51,1365
#define SG_LIST_PORT1 52,1397
#define SG_LIST_PORT2 53,1429
#define SG_LIST_PORT3 54,1461
#define SG_ELEMENT_PORT 55,1493
#define NO_FIRED_PORT 56,1525
#define I_CMD_PORT 59,1581
#define I_ACK_PORT 60,1613
#define I_TOGGLE_PORT 61,1645
#define INTR_PORT 62,1677
#define MAILBOX_SIZE 64,1710
#define MBOX_BUSY_PORT 65,1763
#define MBOX_PORT0 66,1795
#define MBOX_PORT1 67,1827
#define MBOX_PORT2 68,1859
#define MBOX_PORT3 69,1891
#define ENABLE_MBOX_REGION 70,1923
#define ISSUE_BYTE 73,1978
#define ACK_BYTE 74,2010
#define ENABLE_INTR_BYTE 75,2042
#define DISABLE_INTR_BYTE 76,2074
#define VALID_INTR_BYTE 77,2106
#define MBOX_BUSY_BYTE 78,2138
#define ENABLE_MBOX_BYTE 79,2170
#define WRITE_MAILBOX(WRITE_MAILBOX82,2237
#define READ_MAILBOX(READ_MAILBOX83,2301
#define WRITE_PORT(WRITE_PORT85,2360
#define READ_PORT(READ_PORT86,2429
#define ISSUE_COMMAND(ISSUE_COMMAND88,2492
#define CLEAR_INTR(CLEAR_INTR89,2561
#define ENABLE_INTR(ENABLE_INTR90,2628
#define DISABLE_INTR(DISABLE_INTR91,2706
#define PCI_VENDOR_ID_AMI 98,2901
#define PCI_DEVICE_ID_AMI_MEGARAID 99,2943
#define PCI_CONF_BASE_ADDR_OFFSET 102,2993
#define PCI_CONF_IRQ_OFFSET 103,3033
#define PCI_CONF_AMISIG 104,3073
#define AMI_SIGNATURE 105,3113
#define MEGARAID 108,3193
#define MEGARAID 132,4799
typedef struct _mega_ADP_INFO _mega_ADP_INFO155,6219
} mega_ADP_INFO;mega_ADP_INFO167,6508
typedef struct _mega_LDRV_INFO _mega_LDRV_INFO169,6526
} mega_LDRV_INFO;mega_LDRV_INFO175,6724
typedef struct _mega_PDRV_INFO _mega_PDRV_INFO177,6743
} mega_PDRV_INFO;mega_PDRV_INFO180,6837
typedef struct _mega_RAIDINQ _mega_RAIDINQ183,6893
} mega_RAIDINQ;mega_RAIDINQ187,7014
typedef struct mega_passthru mega_passthru190,7075
} mega_passthru;mega_passthru208,7650
typedef struct _mega_mailbox _mega_mailbox210,7668
} mega_mailbox;mega_mailbox226,8129
typedef struct _mega_ioctl_mbox _mega_ioctl_mbox228,8146
} mega_ioctl_mbox;mega_ioctl_mbox245,8640
typedef struct _mega_sglist _mega_sglist247,8660
} mega_sglist;mega_sglist250,8729
typedef struct _mega_scb mega_scb;mega_scb253,8771
struct _mega_scb _mega_scb255,8807
typedef struct _mega_host_config _mega_host_config266,9003
} mega_host_config;mega_host_config286,9444
extern struct proc_dir_entry proc_scsi_megaraid;288,9465

drivers/scsi/mac_esp.c,1213
#define myreadl(myreadl12,235
#define mywritel(mywritel13,293
static int esp_initialized 66,1969
static int setup_num_esps 68,2002
static int setup_disconnect 69,2034
static int setup_nosync 70,2068
static int setup_can_queue 71,2098
static int setup_cmd_per_lun 72,2131
static int setup_sg_tablesize 73,2166
static int setup_use_tagged_queuing 75,2222
static int setup_hostid 77,2271
void mac_esp_intr(84,2402
void scsi_esp_polled(118,3181
void fake_intr(126,3326
void fake_drq(135,3487
#define DRIVER_SETUP140,3583
void mac_esp_setup(155,3953
unsigned long get_base(238,5799
int mac_esp_detect(282,6657
static int esp_dafb_dma_irq_p(469,11496
static int esp_iosb_dma_irq_p(510,12227
static int dma_bytes_sent(533,12760
static int dma_can_transfer(548,13072
static void dma_dump_state(571,13461
static void dma_init_read(588,13873
static void dma_init_write(594,13993
static void dma_ints_off(600,14115
static void dma_ints_on(606,14196
static int dma_irq_p(615,14313
static int dma_irq_p_quick(626,14499
static void dma_led_off(649,14999
static void dma_led_on(657,15122
static int dma_ports_p(665,15243
static void dma_setup(671,15305
static void dma_setup_quick(686,15568

drivers/scsi/mac_esp.h,54
#define MAC_ESP_H12,106
#define SCSI_MAC_ESP 24,429

drivers/scsi/i60uscsi.c,1074
#define CVT_LINUX_VERSION(CVT_LINUX_VERSION70,3506
ORC_HCS orc_hcs[100,4622
static INIA100_ADPT_STRUCT inia100_adpt[101,4663
int orc_num_scb;103,4785
NVRAM nvram,105,4803
NVRAM nvram, *nvramp 105,4803
static UCHAR dftNvRam[106,4834
static void waitForPause(156,6915
UCHAR waitChipReady(168,7244
UCHAR waitFWReady(181,7613
UCHAR waitSCSIRSTdone(194,7976
UCHAR waitHDOoff(207,8349
UCHAR waitHDIset(220,8709
unsigned short get_FW_version(233,9091
UCHAR set_NVRAM(260,9926
UCHAR get_NVRAM(281,10646
void orc_exec_scb(304,11405
int se2_rd_all(315,11762
void se2_update_all(340,12406
void read_eeprom(364,12993
UCHAR load_FW(374,13257
void setup_SCBs(441,16078
static void initAFlag(485,17387
int init_orchid(497,17637
int orc_reset_scsi_bus(564,20073
int orc_device_reset(607,21364
ORC_SCB *orc_alloc_scb(683,23334
void orc_release_scb(725,24333
int Addinia100_into_Adapter_table(759,25238
void init_inia100Adapter_table(800,26673
void get_orcPCIConfig(820,27360
int abort_SCB(837,28123
int orc_abort_srb(869,29357
void orc_interrupt(935,31234

drivers/scsi/i60uscsi.h,6919
#define ULONG 65,3298
#define PVOID 66,3328
#define USHORT 67,3351
#define UCHAR 68,3382
#define BYTE 69,3412
#define WORD 70,3442
#define DWORD 71,3473
#define UBYTE 72,3503
#define UWORD 73,3533
#define UDWORD 74,3564
#define U32 76,3607
#define U32 78,3642
#define NULL 82,3693
#define TRUE 85,3753
#define FALSE 88,3816
#define FAILURE 91,3881
#define ORC_MAXQUEUE	94,3916
#define ORC_MAXQUEUE	96,3948
#define TOTAL_SG_ENTRY	99,3981
#define MAX_TARGETS	100,4008
#define IMAX_CDB	101,4032
#define SENSE_SIZE	102,4054
#define MAX_SUPPORTED_ADAPTERS 103,4077
#define SUCCESSFUL 104,4111
#define I920_DEVICE_ID	106,4149
typedef struct ORC_SG_Struc ORC_SG_Struc111,4442
} ORC_SG;ORC_SG114,4537
typedef struct inia100_Adpt_Struc inia100_Adpt_Struc116,4548
} INIA100_ADPT_STRUCT;INIA100_ADPT_STRUCT122,4716
#define DISC_NOT_ALLOW 126,4816
#define DISC_ALLOW 127,4888
#define ORC_OFFSET_SCB	130,4962
#define ORC_MAX_SCBS	131,4990
#define MAX_CHANNELS 132,5020
#define MAX_ESCB_ELE	133,5049
#define TCF_DRV_255_63 134,5076
#define ORC_PVID	139,5288
#define ORC_VENDOR_ID	140,5347
#define ORC_PDID 141,5413
#define ORC_DEVICE_ID	142,5477
#define ORC_COMMAND	143,5543
#define BUSMS	144,5605
#define IOSPA	145,5662
#define ORC_STATUS	146,5719
#define ORC_REVISION	147,5780
#define ORC_BASE	148,5843
#define ORC_BIOS	149,5902
#define ORC_INT_NUM	150,5961
#define ORC_INT_PIN	151,6015
#define ORC_CMD_NOP	157,6248
#define ORC_CMD_VERSION	158,6311
#define ORC_CMD_ECHO	159,6378
#define ORC_CMD_SET_NVM	160,6442
#define ORC_CMD_GET_NVM	161,6509
#define ORC_CMD_GET_BUS_STATUS	162,6576
#define ORC_CMD_ABORT_SCB	163,6653
#define ORC_CMD_ISSUE_SCB	164,6721
#define ORC_GINTS	169,6967
#define QINT	170,7027
#define ORC_GIMSK	171,7075
#define MQINT	172,7127
#define	ORC_GCFG	173,7184
#define EEPRG	174,7243
#define	ORC_GSTAT	175,7295
#define WIDEBUS	176,7347
#define ORC_HDATA	177,7406
#define ORC_HCTRL	178,7466
#define SCSIRST	179,7526
#define HDO	180,7577
#define HOSTSTOP	181,7625
#define DEVRST	182,7677
#define ORC_HSTUS	183,7735
#define HDI	184,7795
#define RREADY	185,7851
#define	ORC_NVRAM	186,7910
#define SE2CS	187,7970
#define SE2CLK	188,7991
#define SE2DO	189,8013
#define SE2DI	190,8034
#define ORC_PQUEUE	191,8055
#define ORC_PQCNT	192,8116
#define ORC_RQUEUE	193,8168
#define ORC_RQUEUECNT	194,8229
#define	ORC_FWBASEADR	195,8293
#define	ORC_EBIOSADR0 197,8350
#define	ORC_EBIOSADR1 198,8405
#define	ORC_EBIOSADR2 199,8460
#define	ORC_EBIOSDATA 200,8515
#define	ORC_SCBSIZE	202,8571
#define	ORC_SCBBASE0	203,8633
#define	ORC_SCBBASE1	204,8696
#define	ORC_RISCCTL	206,8760
#define PRGMRST	207,8822
#define DOWNLOAD	208,8845
#define	ORC_PRGMCTR0	209,8869
#define	ORC_PRGMCTR1	210,8932
#define	ORC_RISCRAM	211,8995
typedef struct orc_extended_scb orc_extended_scb213,9058
} ESCB;ESCB217,9306
typedef struct orc_scb orc_scb222,9483
} ORC_SCB;ORC_SCB249,10821
#define ORC_EXECSCSI	252,10864
#define ORC_BUSDEVRST	253,10933
#define SCB_COMPLETE	256,11020
#define SCB_POST	257,11075
#define SCF_DISINT	260,11173
#define SCF_DIR	261,11226
#define SCF_NO_DCHK	262,11277
#define SCF_DIN	263,11339
#define SCF_DOUT	264,11398
#define SCF_NO_XF	265,11457
#define SCF_POLL 266,11517
#define HOST_SEL_TOUT	269,11578
#define HOST_DO_DU	270,11605
#define HOST_BUS_FREE	271,11629
#define HOST_BAD_PHAS	272,11656
#define HOST_INV_CMD	273,11683
#define HOST_SCSI_RST	274,11709
#define HOST_DEV_RST	275,11736
#define TARGET_CHK_COND	279,11800
#define TARGET_BUSY	280,11829
#define TARGET_TAG_FULL	281,11854
#define MSG_STAG	285,11961
#define MSG_HTAG	286,11983
#define MSG_OTAG	287,12005
#define MSG_IGNOREWIDE	289,12028
#define MSG_IDENT	291,12057
#define MSG_DISC	292,12080
#define	MSG_EXTEND	296,12160
#define	MSG_SDP	297,12184
#define	MSG_ABORT	298,12206
#define	MSG_REJ	299,12229
#define	MSG_NOP	300,12251
#define	MSG_PARITY	301,12273
#define	MSG_DEVRST	302,12297
#define	MSG_STAG	303,12321
typedef struct ORC_Tar_Ctrl_Struc ORC_Tar_Ctrl_Struc309,12524
} ORC_TCS, *PORC_TCS;PORC_TCS315,12703
#define	TCS_DF_NODASD_SUPT	318,12764
#define	TCS_DF_NOSCSI_SUPT	319,12833
typedef struct ORC_Ha_Ctrl_Struc ORC_Ha_Ctrl_Struc325,13096
} ORC_HCS;ORC_HCS356,14285
#define HCF_SCSI_RESET	360,14333
#define HCF_PARITY 361,14390
#define HCF_LVDS 362,14455
#define TCF_EN_255	366,14557
#define TCF_EN_TAG	367,14585
#define TCF_BUSY	368,14613
#define TCF_DISCONNECT	369,14641
#define TCF_SPIN_UP	370,14669
#define	HCS_AF_IGNORE	373,14733
#define	HCS_AF_DISABLE_RESET	374,14790
#define	HCS_AF_DISABLE_ADPT	375,14853
#define DELAYED_RESET_MAX 384,15189
#define DELAYED_RESET_INTERVAL 385,15232
#define IRQ_TIMEOUT_INTERVAL 390,15423
#define DELAYED_RETRY_INTERVAL 395,15619
#define	INQUIRY_SIZE	397,15657
#define	CAPACITY_SIZE	398,15682
#define	DEFAULT_SENSE_LEN	399,15707
#define	DEVICE_NOT_FOUND	401,15737
#define	MAX_PCI_DEVICES	406,15921
#define	MAX_PCI_BUSES	407,15948
typedef struct Adpt_Struc Adpt_Struc409,15973
} JACS, *PJACS;PJACS415,16133
typedef struct _NVRAM _NVRAM417,16150
} NVRAM, *PNVRAM;PNVRAM489,20064
#define NBC_BIOSENABLE	492,20158
#define NBC_CDROM	493,20223
#define NBC_REMOVABLE	494,20275
#define	NBB_TARGET_MASK	497,20415
#define	NBB_CHANL_MASK	498,20481
#define NCC_BUSRESET	501,20622
#define NCC_PARITYCHK	502,20685
#define NCC_LVDS	503,20749
#define NCC_ACTTERM1	504,20808
#define NCC_ACTTERM2	505,20871
#define NCC_AUTOTERM	506,20934
#define	NTC_PERIOD	509,21073
#define NTC_1GIGA	510,21134
#define NTC_NO_SYNC	511,21193
#define NTC_NO_WIDESYNC	512,21247
#define	NTC_DISC_ENABLE	513,21313
#define NTC_SPINUP	514,21371
#define NBC_DEFAULT	517,21508
#define NCC_DEFAULT	518,21541
#define NCC_MAX_TAGS	519,21607
#define	NCC_RESET_TIME	520,21670
#define NTC_DEFAULT	521,21735
} CONFIG_ADR;CONFIG_ADR533,22068
} HOST_ADR;HOST_ADR542,22264
#define ORC_RD(ORC_RD544,22277
#define ORC_RDLONG(ORC_RDLONG545,22360
#define ORC_WR(ORC_WR547,22441
#define ORC_WRSHORT(ORC_WRSHORT548,22506
#define ORC_WRLONG(ORC_WRLONG549,22571
#define SCSI_ABORT_SNOOZE 552,22638
#define SCSI_ABORT_SUCCESS 553,22666
#define SCSI_ABORT_PENDING 554,22695
#define SCSI_ABORT_BUSY 555,22724
#define SCSI_ABORT_NOT_RUNNING 556,22750
#define SCSI_ABORT_ERROR 557,22783
#define SCSI_RESET_SNOOZE 559,22811
#define SCSI_RESET_PUNT 560,22839
#define SCSI_RESET_SUCCESS 561,22865
#define SCSI_RESET_PENDING 562,22894
#define SCSI_RESET_WAKEUP 563,22923
#define SCSI_RESET_NOT_RUNNING 564,22951
#define SCSI_RESET_ERROR 565,22984
#define SCSI_RESET_SYNCHRONOUS	567,23012
#define SCSI_RESET_ASYNCHRONOUS	568,23049
#define SCSI_RESET_SUGGEST_BUS_RESET	569,23087
#define SCSI_RESET_SUGGEST_HOST_RESET	570,23129
#define SCSI_RESET_BUS_RESET 572,23173
#define SCSI_RESET_HOST_RESET 573,23208
#define SCSI_RESET_ACTION 574,23244

drivers/scsi/inia100.c,1305
#define CVT_LINUX_VERSION(CVT_LINUX_VERSION64,3313
Scsi_Host_Template driver_template 125,4586
#define ORC_RDWORD(ORC_RDWORD129,4665
char *inia100_Copyright 131,4747
char *inia100_InitioName 132,4798
char *inia100_ProductName 133,4850
char *inia100_Version 134,4893
struct proc_dir_entry proc_scsi_inia100 137,4979
static int setup_called 146,5209
static int orc_num_ch 147,5238
#define NUMBER(NUMBER150,5358
static char *setup_str 151,5413
extern int orc_num_scb;190,7304
extern ORC_HCS orc_hcs[191,7328
static void inia100AppendSRBToQueue(201,7791
static Scsi_Cmnd *inia100PopSRBFromQueue(233,8778
void inia100_setup(263,9653
int orc_ReturnNumberOfAdapters(280,10200
int inia100_detect(418,14453
static void inia100BuildSCB(585,19765
int inia100_queue(657,22206
int inia100_command(688,23305
int inia100_abort(702,23887
int inia100_reset(718,24513
void inia100SCBPost(739,25334
int inia100_biosparam(817,28250
static void subIntr(847,29011
static void inia100_intr0(872,29587
static void inia100_intr1(881,29818
static void inia100_intr2(890,30049
static void inia100_intr3(899,30280
static void inia100_intr4(908,30511
static void inia100_intr5(917,30742
static void inia100_intr6(926,30973
static void inia100_intr7(935,31204
static void inia100_panic(946,31439

drivers/scsi/inia100.h,5203
#define	CVT_LINUX_VERSION(CVT_LINUX_VERSION64,3302
extern struct proc_dir_entry proc_scsi_inia100;81,3839
#define inia100_REVID 86,3972
#define INIA100	89,4104
#define INIA100	114,4434
#define INIA100	138,4777
#define VIRT_TO_BUS(VIRT_TO_BUS170,5511
#define ULONG 171,5575
#define PVOID 172,5605
#define USHORT 173,5628
#define UCHAR 174,5659
#define BYTE 175,5689
#define WORD 176,5719
#define DWORD 177,5750
#define UBYTE 178,5780
#define UWORD 179,5810
#define UDWORD 180,5841
#define U32 182,5884
#define U32 184,5919
#define NULL 188,5970
#define TRUE 191,6030
#define FALSE 194,6093
#define FAILURE 197,6158
#define ORC_MAXQUEUE	200,6193
#define ORC_MAXQUEUE	202,6225
#define TOTAL_SG_ENTRY	205,6258
#define MAX_TARGETS	206,6285
#define IMAX_CDB	207,6309
#define SENSE_SIZE	208,6331
#define MAX_SUPPORTED_ADAPTERS 209,6354
#define SUCCESSFUL 210,6388
#define I920_DEVICE_ID	212,6426
typedef struct ORC_SG_Struc ORC_SG_Struc217,6719
} ORC_SG;ORC_SG220,6814
#define DISC_NOT_ALLOW 224,6901
#define DISC_ALLOW 225,6973
#define ORC_OFFSET_SCB	228,7047
#define ORC_MAX_SCBS	229,7075
#define MAX_CHANNELS 230,7105
#define MAX_ESCB_ELE	231,7134
#define TCF_DRV_255_63 232,7161
#define ORC_PVID	237,7373
#define ORC_VENDOR_ID	238,7432
#define ORC_PDID 239,7498
#define ORC_DEVICE_ID	240,7562
#define ORC_COMMAND	241,7628
#define BUSMS	242,7690
#define IOSPA	243,7747
#define ORC_STATUS	244,7804
#define ORC_REVISION	245,7865
#define ORC_BASE	246,7928
#define ORC_BIOS	247,7987
#define ORC_INT_NUM	248,8046
#define ORC_INT_PIN	249,8100
#define ORC_CMD_NOP	254,8332
#define ORC_CMD_VERSION	255,8395
#define ORC_CMD_ECHO	256,8462
#define ORC_CMD_SET_NVM	257,8526
#define ORC_CMD_GET_NVM	258,8593
#define ORC_CMD_GET_BUS_STATUS	259,8660
#define ORC_CMD_ABORT_SCB	260,8737
#define ORC_CMD_ISSUE_SCB	261,8805
#define ORC_GINTS	266,9051
#define QINT	267,9111
#define ORC_GIMSK	268,9159
#define MQINT	269,9211
#define	ORC_GCFG	270,9268
#define EEPRG	271,9327
#define	ORC_GSTAT	272,9379
#define WIDEBUS	273,9431
#define ORC_HDATA	274,9490
#define ORC_HCTRL	275,9550
#define SCSIRST	276,9610
#define HDO	277,9661
#define HOSTSTOP	278,9709
#define DEVRST	279,9761
#define ORC_HSTUS	280,9819
#define HDI	281,9879
#define RREADY	282,9935
#define	ORC_NVRAM	283,9994
#define SE2CS	284,10054
#define SE2CLK	285,10075
#define SE2DO	286,10097
#define SE2DI	287,10118
#define ORC_PQUEUE	288,10139
#define ORC_PQCNT	289,10200
#define ORC_RQUEUE	290,10252
#define ORC_RQUEUECNT	291,10313
#define	ORC_FWBASEADR	292,10377
#define	ORC_EBIOSADR0 294,10434
#define	ORC_EBIOSADR1 295,10489
#define	ORC_EBIOSADR2 296,10544
#define	ORC_EBIOSDATA 297,10599
#define	ORC_SCBSIZE	299,10655
#define	ORC_SCBBASE0	300,10717
#define	ORC_SCBBASE1	301,10780
#define	ORC_RISCCTL	303,10844
#define PRGMRST	304,10906
#define DOWNLOAD	305,10929
#define	ORC_PRGMCTR0	306,10953
#define	ORC_PRGMCTR1	307,11016
#define	ORC_RISCRAM	308,11079
typedef struct orc_extended_scb orc_extended_scb310,11142
} ESCB;ESCB313,11326
typedef struct orc_scb orc_scb318,11503
} ORC_SCB;ORC_SCB345,12841
#define ORC_EXECSCSI	348,12884
#define ORC_BUSDEVRST	349,12953
#define SCB_COMPLETE	352,13040
#define SCB_POST	353,13095
#define SCF_DISINT	356,13193
#define SCF_DIR	357,13246
#define SCF_NO_DCHK	358,13297
#define SCF_DIN	359,13359
#define SCF_DOUT	360,13418
#define SCF_NO_XF	361,13477
#define SCF_POLL 362,13537
#define HOST_SEL_TOUT	365,13598
#define HOST_DO_DU	366,13625
#define HOST_BUS_FREE	367,13649
#define HOST_BAD_PHAS	368,13676
#define HOST_INV_CMD	369,13703
#define HOST_SCSI_RST	370,13729
#define HOST_DEV_RST	371,13756
#define TARGET_CHK_COND	375,13820
#define TARGET_BUSY	376,13849
#define TARGET_TAG_FULL	377,13874
#define MSG_STAG	381,13981
#define MSG_HTAG	382,14003
#define MSG_OTAG	383,14025
#define MSG_IGNOREWIDE	385,14048
#define MSG_IDENT	387,14077
#define MSG_DISC	388,14100
#define	MSG_EXTEND	392,14180
#define	MSG_SDP	393,14204
#define	MSG_ABORT	394,14226
#define	MSG_REJ	395,14249
#define	MSG_NOP	396,14271
#define	MSG_PARITY	397,14293
#define	MSG_DEVRST	398,14317
#define	MSG_STAG	399,14341
typedef struct ORC_Tar_Ctrl_Struc ORC_Tar_Ctrl_Struc405,14544
} ORC_TCS, *PORC_TCS;PORC_TCS411,14723
#define	TCS_DF_NODASD_SUPT	414,14784
#define	TCS_DF_NOSCSI_SUPT	415,14853
typedef struct ORC_Ha_Ctrl_Struc ORC_Ha_Ctrl_Struc421,15116
} ORC_HCS;ORC_HCS452,16315
#define HCF_SCSI_RESET	456,16363
#define HCF_PARITY 457,16420
#define HCF_LVDS 458,16485
#define TCF_EN_255	462,16587
#define TCF_EN_TAG	463,16615
#define TCF_BUSY	464,16643
#define TCF_DISCONNECT	465,16671
#define TCF_SPIN_UP	466,16699
#define	HCS_AF_IGNORE	469,16763
#define	HCS_AF_DISABLE_RESET	470,16820
#define	HCS_AF_DISABLE_ADPT	471,16883
#define DELAYED_RESET_MAX 480,17219
#define DELAYED_RESET_INTERVAL 481,17262
#define IRQ_TIMEOUT_INTERVAL 486,17453
#define DELAYED_RETRY_INTERVAL 491,17649
#define	INQUIRY_SIZE	493,17687
#define	CAPACITY_SIZE	494,17712
#define	DEFAULT_SENSE_LEN	495,17737
#define	DEVICE_NOT_FOUND	497,17767
#define	MAX_PCI_DEVICES	502,17951
#define	MAX_PCI_BUSES	503,17978

drivers/scsi/qlogicfc.c,7928
#define RELOAD_FIRMWARE	69,1860
#define USE_NVRAM_DEFAULTS 71,1888
#define ISP2100_FABRIC 77,2067
#define DEFAULT_LOOP_COUNT	91,2328
#define TRACE_BUF_LEN	99,2489
} trace;109,2638
#define TRACE(TRACE111,2648
#define TRACE(TRACE126,3033
#define DEBUG_FABRIC(DEBUG_FABRIC130,3089
#define DEBUG_FABRIC(DEBUG_FABRIC132,3121
#define ENTER(ENTER137,3202
#define LEAVE(LEAVE138,3259
#define DEBUG(DEBUG139,3315
#define ENTER(ENTER141,3340
#define LEAVE(LEAVE142,3357
#define DEBUG(DEBUG143,3374
#define ENTER_INTR(ENTER_INTR147,3445
#define LEAVE_INTR(LEAVE_INTR148,3507
#define DEBUG_INTR(DEBUG_INTR149,3568
#define ENTER_INTR(ENTER_INTR151,3598
#define LEAVE_INTR(LEAVE_INTR152,3620
#define DEBUG_INTR(DEBUG_INTR153,3642
#define virt_to_bus_low32(virt_to_bus_low32158,3723
#define virt_to_bus_high32(virt_to_bus_high32159,3769
#define bus_to_virt_low32(bus_to_virt_low32160,3804
#define bus_to_virt_high32(bus_to_virt_high32161,3850
#define virt_to_bus_low32(virt_to_bus_low32163,3910
#define virt_to_bus_high32(virt_to_bus_high32164,3979
#define bus_to_virt_low32(bus_to_virt_low32165,4054
#define bus_to_virt_high32(bus_to_virt_high32166,4123
#define ISP2100_REV_ID	169,4206
#define ISP2100_REV_ID3 170,4231
#define MAX_TARGETS	172,4265
#define MAX_LUNS	173,4288
#define HOST_HCCR	176,4355
#define FLASH_BIOS_ADDR	179,4444
#define FLASH_BIOS_DATA	180,4473
#define ISP_CTRL_STATUS	181,4502
#define PCI_INTER_CTL	182,4563
#define PCI_INTER_STS	183,4617
#define PCI_SEMAPHORE	184,4670
#define PCI_NVRAM	185,4717
#define MBOX0	188,4791
#define MBOX1	189,4827
#define MBOX2	190,4863
#define MBOX3	191,4899
#define MBOX4	192,4935
#define MBOX5	193,4971
#define MBOX6	194,5007
#define MBOX7	195,5043
#define MBOX_COMMAND_COMPLETE	198,5124
#define INVALID_COMMAND	199,5162
#define HOST_INTERFACE_ERROR	200,5195
#define TEST_FAILED	201,5232
#define COMMAND_ERROR	202,5261
#define COMMAND_PARAM_ERROR	203,5292
#define PORT_ID_USED 204,5328
#define LOOP_ID_USED 205,5375
#define ALL_IDS_USED 206,5422
#define RESET_DETECTED 209,5501
#define SYSTEM_ERROR	210,5534
#define REQUEST_TRANSFER_ERROR	211,5564
#define RESPONSE_TRANSFER_ERROR	212,5603
#define REQUEST_QUEUE_WAKEUP	213,5643
#define LIP_OCCURED 214,5680
#define LOOP_UP 215,5727
#define LOOP_DOWN 216,5774
#define LIP_RECEIVED 217,5821
#define PORT_DB_CHANGED 218,5868
#define CHANGE_NOTIFICATION 219,5915
#define SCSI_COMMAND_COMPLETE 220,5962
struct Entry_header Entry_header222,6010
#define ENTRY_COMMAND	230,6142
#define ENTRY_CONTINUATION	231,6170
#define ENTRY_STATUS	232,6202
#define ENTRY_MARKER	233,6229
#define EFLAG_BUSY	236,6293
#define EFLAG_BAD_HEADER	237,6315
#define EFLAG_BAD_PAYLOAD	238,6342
struct dataseg dataseg240,6371
struct Command_Entry Command_Entry246,6446
#define CFLAG_NODISC	262,6763
#define CFLAG_HEAD_TAG	263,6790
#define CFLAG_ORDERED_TAG	264,6819
#define CFLAG_SIMPLE_TAG	265,6850
#define CFLAG_TAR_RTN	266,6880
#define CFLAG_READ	267,6908
#define CFLAG_WRITE	268,6933
struct Ext_Command_Entry Ext_Command_Entry270,6960
struct Continuation_Entry Continuation_Entry283,7189
struct Marker_Entry Marker_Entry288,7275
#define SYNC_DEVICE	299,7474
#define SYNC_TARGET	300,7496
#define SYNC_ALL	301,7518
struct Status_Entry Status_Entry303,7538
#define CS_COMPLETE	318,7862
#define CS_INCOMPLETE	319,7891
#define CS_DMA_ERROR	320,7922
#define CS_TRANSPORT_ERROR	321,7952
#define CS_RESET_OCCURRED	322,7987
#define CS_ABORTED	323,8021
#define CS_TIMEOUT	324,8049
#define CS_DATA_OVERRUN	325,8077
#define CS_ABORT_MSG_FAILED	326,8110
#define CS_REJECT_MSG_FAILED	327,8146
#define CS_DATA_UNDERRUN	328,8183
#define CS_PORT_UNAVAILABLE 329,8216
#define CS_PORT_LOGGED_OUT 330,8263
#define CS_PORT_CONFIG_CHANGED	331,8310
#define SF_SENT_CDB	334,8392
#define SF_TRANSFERRED_DATA	335,8421
#define SF_GOT_STATUS	336,8457
#define STF_BUS_RESET	339,8532
#define STF_DEVICE_RESET	340,8563
#define STF_ABORTED	341,8596
#define STF_TIMEOUT	342,8625
#define ISP_EN_INT	345,8687
#define ISP_EN_RISC	346,8715
#define HCCR_NOP	349,8773
#define HCCR_RESET	350,8799
#define HCCR_PAUSE	351,8827
#define HCCR_RELEASE	352,8855
#define HCCR_SINGLE_STEP	353,8885
#define HCCR_SET_HOST_INTR	354,8918
#define HCCR_CLEAR_HOST_INTR	355,8953
#define HCCR_CLEAR_RISC_INTR	356,8990
#define HCCR_BP_ENABLE	357,9027
#define HCCR_BIOS_DISABLE	358,9059
#define HCCR_TEST_MODE	359,9093
#define RISC_BUSY	361,9126
#define MBOX_NO_OP	364,9177
#define MBOX_LOAD_RAM	365,9205
#define MBOX_EXEC_FIRMWARE	366,9236
#define MBOX_DUMP_RAM	367,9271
#define MBOX_WRITE_RAM_WORD	368,9302
#define MBOX_READ_RAM_WORD	369,9338
#define MBOX_MAILBOX_REG_TEST	370,9373
#define MBOX_VERIFY_CHECKSUM	371,9411
#define MBOX_ABOUT_FIRMWARE	372,9448
#define MBOX_LOAD_RISC_RAM 373,9484
#define MBOX_DUMP_RISC_RAM 374,9531
#define MBOX_CHECK_FIRMWARE	375,9578
#define MBOX_INIT_REQ_QUEUE	376,9614
#define MBOX_INIT_RES_QUEUE	377,9650
#define MBOX_EXECUTE_IOCB	378,9686
#define MBOX_WAKE_UP	379,9720
#define MBOX_STOP_FIRMWARE	380,9750
#define MBOX_ABORT_IOCB	381,9785
#define MBOX_ABORT_DEVICE	382,9818
#define MBOX_ABORT_TARGET	383,9852
#define MBOX_BUS_RESET	384,9886
#define MBOX_STOP_QUEUE	385,9918
#define MBOX_START_QUEUE	386,9951
#define MBOX_SINGLE_STEP_QUEUE	387,9984
#define MBOX_ABORT_QUEUE	388,10023
#define MBOX_GET_DEV_QUEUE_STATUS	389,10056
#define MBOX_GET_FIRMWARE_STATUS	390,10097
#define MBOX_GET_INIT_SCSI_ID	391,10137
#define MBOX_GET_RETRY_COUNT	392,10175
#define MBOX_GET_TARGET_PARAMS	393,10212
#define MBOX_GET_DEV_QUEUE_PARAMS	394,10251
#define MBOX_SET_RETRY_COUNT	395,10292
#define MBOX_SET_TARGET_PARAMS	396,10329
#define MBOX_SET_DEV_QUEUE_PARAMS	397,10368
#define MBOX_EXECUTE_IOCB64 398,10409
#define MBOX_INIT_FIRMWARE 399,10456
#define MBOX_GET_INIT_CB 400,10503
#define MBOX_INIT_LIP	401,10550
#define MBOX_GET_POS_MAP 402,10581
#define MBOX_GET_PORT_DB 403,10628
#define MBOX_CLEAR_ACA 404,10675
#define MBOX_TARGET_RESET 405,10722
#define MBOX_CLEAR_TASK_SET 406,10769
#define MBOX_ABORT_TASK_SET 407,10816
#define MBOX_GET_FIRMWARE_STATE 408,10863
#define MBOX_GET_PORT_NAME 409,10910
#define MBOX_SEND_SNS 410,10957
#define MBOX_PORT_LOGIN 411,11004
#define MBOX_SEND_CHANGE_REQUEST 412,11051
#define MBOX_PORT_LOGOUT 413,11098
const u_char mbox_param[421,11342
#define MAX_MBOX_COMMAND	539,14487
struct id_name_map id_name_map542,14551
struct sns_cb sns_cb547,14603
struct init_cb init_cb559,14831
#define RES_QUEUE_LEN	585,15393
#define QUEUE_ENTRY_LEN	586,15455
#define QLOGICFC_MAX_ID 589,15503
#define QLOGICFC_MAX_ID 591,15541
struct isp2100_hostdata isp2100_hostdata594,15581
#define QUEUE_DEPTH(QUEUE_DEPTH620,16375
#define REQ_QUEUE_DEPTH(REQ_QUEUE_DEPTH621,16428
#define RES_QUEUE_DEPTH(RES_QUEUE_DEPTH623,16525
static struct proc_dir_entry proc_scsi_isp2100 652,17561
static inline void isp2100_enable_irqs(659,17684
static inline void isp2100_disable_irqs(665,17817
int isp2100_detect(671,17930
static int isp2100_make_portdb(774,21126
int isp2100_init_fabric(877,23582
int isp2100_release(974,26448
const char *isp2100_info(993,26770
int isp2100_queuecommand(1018,27407
#define ASYNC_EVENT_INTERRUPT	1219,33143
void do_isp2100_intr_handler(1222,33180
void isp2100_intr_handler(1231,33419
static int isp2100_return_status(1376,37577
int isp2100_abort(1453,39273
int isp2100_reset(1499,40280
int isp2100_biosparam(1529,40906
static int isp2100_reset_hardware(1551,41238
static int isp2100_get_nvram_defaults(1674,45081
static int isp2100_init(1697,45841
#define NVRAM_DELAY(NVRAM_DELAY1759,47209
u_short isp2100_read_nvram_word(1762,47271
static int isp2100_mbox_command(1811,48333
void isp2100_print_status_entry(1897,50543
void isp2100_print_scsi_cmd(1916,51316
Scsi_Host_Template driver_template 1933,51660

drivers/scsi/qlogicfc.h,259
#define _QLOGICFC_H50,1340
#define QLOGICFC_REQ_QUEUE_LEN	64,1992
#define QLOGICFC_MAX_SG(QLOGICFC_MAX_SG65,2057
#define QLOGICFC_CMD_PER_LUN 66,2123
#define NULL 77,2493
extern struct proc_dir_entry proc_scsi_isp2100;80,2518
#define QLOGICFC 82,2567

drivers/scsi/qlogicfc_asm.c,204
unsigned short risc_code_version 13,331
unsigned char firmware_version[15,378
unsigned short risc_code_addr01 17,424
unsigned short risc_code01[19,468
unsigned short   risc_code_length01 2984,193075

drivers/scsi/sym53c416.c,4675
#define VERSION_STRING 40,1146
#define TC_LOW 42,1193
#define TC_MID 43,1257
#define SCSI_FIFO 44,1321
#define COMMAND_REG 45,1385
#define STATUS_REG 46,1449
#define DEST_BUS_ID 47,1513
#define INT_REG 48,1577
#define TOM 49,1641
#define STP 50,1705
#define SYNC_OFFSET 51,1769
#define CONF_REG_1 52,1833
#define CONF_REG_2 53,1897
#define CONF_REG_3 54,1961
#define CONF_REG_4 55,2025
#define TC_HIGH 56,2089
#define PIO_FIFO_1 57,2153
#define PIO_FIFO_2 58,2217
#define PIO_FIFO_3 59,2281
#define PIO_FIFO_4 60,2345
#define PIO_FIFO_CNT 61,2409
#define PIO_INT_REG 62,2473
#define CONF_REG_5 63,2537
#define FEATURE_EN 64,2601
#define SCM 68,2746
#define SRID 69,2821
#define PTM 70,2896
#define EPC 71,2971
#define CTME 72,3046
#define FE 75,3162
#define SCSI2 76,3237
#define TBPA 77,3312
#define IDMRC 80,3428
#define QTE 81,3503
#define CDB10 82,3578
#define FSCSI 83,3653
#define FCLK 84,3728
#define RBS 87,3844
#define EAN 88,3919
#define LPSR 91,4035
#define IE 92,4110
#define LPM 93,4185
#define WSE0 94,4260
#define SRST 97,4370
#define ILCMD 98,4445
#define DIS 99,4520
#define BS 100,4595
#define FC 101,4670
#define RESEL 102,4745
#define SI 103,4820
#define SCI 106,4927
#define GE 107,5002
#define PE 108,5077
#define TC 109,5152
#define VGC 110,5227
#define PHBITS 111,5302
#define SCI 114,5416
#define PFI 115,5491
#define FULL 116,5566
#define EMPTY 117,5641
#define CE 118,5716
#define OUE 119,5791
#define FIE 120,5866
#define EIE 121,5941
#define PHASE_DATA_OUT 124,6084
#define PHASE_DATA_IN 125,6115
#define PHASE_COMMAND 126,6146
#define PHASE_STATUS 127,6177
#define PHASE_RESERVED_1 128,6208
#define PHASE_RESERVED_2 129,6239
#define PHASE_MESSAGE_OUT 130,6270
#define PHASE_MESSAGE_IN 131,6301
#define NOOP 134,6363
#define FLUSH_FIFO 135,6402
#define RESET_CHIP 136,6441
#define RESET_SCSI_BUS 137,6480
#define DISABLE_SEL_RESEL 138,6519
#define RESEL_SEQ 139,6558
#define SEL_WITHOUT_ATN_SEQ 140,6597
#define SEL_WITH_ATN_SEQ 141,6636
#define SEL_WITH_ATN_AND_STOP_SEQ 142,6675
#define ENABLE_SEL_RESEL 143,6714
#define SEL_WITH_ATN3_SEQ 144,6753
#define RESEL3_SEQ 145,6792
#define SND_MSG 146,6831
#define SND_STAT 147,6870
#define SND_DATA 148,6909
#define DISCONNECT_SEQ 149,6948
#define TERMINATE_SEQ 150,6987
#define TARGET_COMM_COMPLETE_SEQ 151,7026
#define DISCONN 152,7065
#define RECV_MSG_SEQ 153,7104
#define RECV_CMD 154,7143
#define RECV_DATA 155,7182
#define RECV_CMD_SEQ 156,7221
#define TARGET_ABORT_PIO 157,7260
#define TRANSFER_INFORMATION 158,7299
#define INIT_COMM_COMPLETE_SEQ 159,7338
#define MSG_ACCEPTED 160,7377
#define TRANSFER_PAD 161,7416
#define SET_ATN 162,7455
#define RESET_ATN 163,7494
#define ILLEGAL 164,7533
#define PIO_MODE 166,7573
#define IO_RANGE 168,7613
#define ID 169,7679
#define PIO_SIZE 170,7708
#define READ_TIMEOUT 172,7775
#define WRITE_TIMEOUT 173,7813
#define sym53c416_base 177,7867
#define sym53c416_base_1 178,7900
#define sym53c416_base_2 179,7937
#define sym53c416_base_3 180,7974
static unsigned short sym53c416_base 182,8012
static unsigned int sym53c416_irq 183,8054
static unsigned short sym53c416_base_1 184,8093
static unsigned int sym53c416_irq_1 185,8137
static unsigned short sym53c416_base_2 186,8178
static unsigned int sym53c416_irq_2 187,8222
static unsigned short sym53c416_base_3 188,8263
static unsigned int sym53c416_irq_3 189,8307
#define DEB(DEB198,8427
#define DEB(DEB200,8450
#define MAXHOSTS 203,8473
enum phasesphases205,8493
  idle,207,8509
  data_out,208,8517
  data_in,209,8529
  command_ph,210,8540
  status_ph,211,8554
  message_out,212,8567
  message_in213,8582
  } host;host221,8658
host hosts[223,8669
static int host_index 230,8920
static char info[232,8948
static Scsi_Cmnd *current_command 234,8972
struct proc_dir_entry proc_scsi_sym53c416 236,9015
int fastpio 238,9122
int probeaddrs[240,9140
static void sym53c416_set_transfer_counter(242,9186
static __inline__ unsigned int sym53c416_read(251,9471
static __inline__ unsigned int sym53c416_write(295,10611
static void sym53c416_intr_handle(339,11695
static void sym53c416_init(511,17579
static int sym53c416_probeirq(526,18081
void sym53c416_setup(554,18802
static int sym53c416_test(584,19442
void sym53c416_probe(597,19792
int sym53c416_detect(611,20046
const char *sym53c416_info(692,22247
int sym53c416_queuecommand(707,22681
static void internal_done(735,23765
int sym53c416_command(740,23841
int sym53c416_abort(749,24030
int sym53c416_reset(757,24187
int sym53c416_bios_param(776,24693
Scsi_Host_Template driver_template 803,25531

drivers/scsi/sym53c416.h,223
#define _SYM53C416_H19,610
#define LinuxVersionCode(LinuxVersionCode25,700
#define SYM53C416_SCSI_ID 30,812
extern struct proc_dir_entry proc_scsi_sym53c416;32,841
#define SYM53C416 45,1372
#define SYM53C416 65,2408

drivers/scsi/fcal.c,540
#define fcal_printk 32,602
#define FCALD(FCALD35,680
#define FCALND(FCALND36,713
#define FCALD(FCALD38,766
#define FCALND(FCALND39,783
static unsigned char alpa2target[42,809
static unsigned char target2alpa[60,2291
struct proc_dir_entry proc_scsi_fcal 71,3095
static void fcal_select_queue_depths(78,3291
__initfunc(93,3714
int fcal_release(189,6100
#define SPRINTF(SPRINTF204,6429
int fcal_proc_info 206,6519
static int fcal_encode_addr(283,8703
Scsi_Host_Template driver_template 302,9346
EXPORT_NO_SYMBOLS;306,9416

drivers/scsi/fcal.h,99
#define _FCAL_H7,172
struct fcal fcal11,219
#define FCAL_CAN_QUEUE	21,460
#define FCAL 27,627

drivers/sound/ad1848.c,2886
#define DEB(DEB40,1125
#define DEB1(DEB141,1140
#define MD_1848	67,1729
#define MD_4231	68,1748
#define MD_4231A	69,1767
#define MD_1845	70,1786
#define MD_4232	71,1805
#define MD_C930	72,1824
#define MD_IWAVE	73,1843
#define MD_4235 74,1862
} ad1848_info;ad1848_info88,2320
typedef struct ad1848_port_infoad1848_port_info90,2336
ad1848_port_info;ad1848_port_info99,2541
static int nr_ad1848_devs 101,2560
int deskpro_xl 102,2591
int soundpro 104,2636
int soundpro 106,2660
static volatile char irq2dev[109,2686
static int timer_installed 116,2874
static int ad_format_mask[120,2916
static ad1848_info adev_info[133,3536
#define io_Index_Addr(io_Index_Addr135,3582
#define io_Indexed_Data(io_Indexed_Data136,3619
#define io_Status(io_Status137,3660
#define io_Polled_IO(io_Polled_IO138,3696
static int ad_read(157,4480
static void ad_write(176,4899
static void wait_for_calibration(192,5345
static void ad_mute(223,6147
static void ad_unmute(239,6371
static void ad_enter_MCE(243,6418
static void ad_leave_MCE(266,6833
static int ad1848_set_recmask(295,7467
static void change_bits(405,9822
static int ad1848_mixer_get(441,10825
static void ad1848_mixer_set_channel(451,11013
static int ad1848_mixer_set(475,11677
static void ad1848_mixer_reset(524,12588
static int ad1848_mixer_ioctl(602,14465
static int ad1848_set_speed(693,16451
static short ad1848_set_channels(782,18456
static unsigned int ad1848_set_bits(793,18678
static struct audio_driver ad1848_audio_driver 868,19802
static struct mixer_operations ad1848_mixer_operations 888,20135
static int ad1848_open(895,20257
static void ad1848_close(939,21129
static void ad1848_output_block(961,21567
static void ad1848_start_input(1004,22569
static int ad1848_prepare_for_output(1056,23747
static int ad1848_prepare_for_input(1125,25404
static void ad1848_halt(1241,28164
static void ad1848_halt_input(1256,28560
static void ad1848_halt_output(1293,29380
static void ad1848_trigger(1330,30203
static void ad1848_init_hw(1366,30884
int ad1848_detect(1441,32898
int ad1848_init(1812,42209
int ad1848_control(1955,45816
void ad1848_unload(2012,47189
void adintr(2055,48158
static int init_deskpro(2137,50209
int probe_ms_sound(2335,55447
void attach_ms_sound(2420,57847
void unload_ms_sound(2506,59726
static unsigned int current_interval 2522,60085
static unsigned int ad1848_tmr_start(2524,60128
static void ad1848_tmr_reprogram(2569,61417
static void ad1848_tmr_disable(2580,61703
static void ad1848_tmr_restart(2592,61961
static struct sound_lowlev_timer ad1848_tmr 2607,62257
static int ad1848_tmr_install(2616,62377
int io 2648,63251
int irq 2649,63264
int dma 2650,63278
int dma2 2651,63292
int type 2652,63307
static int loaded 2654,63322
struct address_info hw_config;2656,63346
int init_module(2658,63378
void cleanup_module(2682,63892

drivers/sound/os.h,371
#define ALLOW_SELECT1,0
#define SHORT_BANNERS3,42
#define MANUAL_PNP4,64
#define __NO_VERSION__8,117
#define LINUX21X13,232
#define FALSE	41,776
#define TRUE	42,792
#define USE_AUTOINIT_DMA51,1025
extern caddr_t sound_mem_blocks[53,1051
extern int sound_nblocks;54,1090
#define ALLOW_BUFFER_MAPPING57,1144
extern struct file_operations oss_sound_fops;59,1174

drivers/sound/soundcard.c,2195
struct notifier_block *sound_locker=44,1125
static int lock_depth 45,1189
#define modular 48,1231
#define modular 50,1255
#define valid_dma(valid_dma57,1355
static int      chrdev_registered 60,1433
static int      is_unloading 61,1472
caddr_t         sound_mem_blocks[66,1589
int             sound_nblocks 67,1629
int		sound_dmap_flag 71,1719
int		sound_dmap_flag 73,1751
static int      soundcard_configured 76,1785
static char     dma_alloc_map[78,1828
#define DMA_MAP_UNAVAIL	81,1884
#define DMA_MAP_FREE	82,1911
#define DMA_MAP_BUSY	83,1935
static int in_use 86,1961
unsigned long seq_time 87,2022
static mixer_vol_table mixer_vols[92,2136
static int num_mixer_volumes 93,2186
int *load_mixer_volumes(96,2222
static int set_mixer_levels(128,2840
static int get_mixer_levels(141,3191
static int sound_proc_get_info(154,3479
#define MODULEPROCSTRING 161,3658
#define MODULEPROCSTRING 163,3717
static struct proc_dir_entry proc_root_sound 300,7825
#define MIN(MIN308,8002
#define PROC_BLOCK_SIZE 312,8124
static ssize_t sndstat_file_read(319,8354
static ssize_t sound_read(375,10049
static ssize_t sound_write(407,10725
static long long sound_lseek(434,11325
static int sound_open(439,11423
static int sound_release(510,12950
static int get_mixer_info(554,13699
static int get_old_mixer_info(567,14061
static int sound_mixer_ioctl(579,14379
static int sound_ioctl(602,15073
static unsigned int sound_poll(674,16927
static int sound_mmap(702,17496
struct file_operations oss_sound_fops 769,19117
static int create_special_devices(787,19373
soundcard_init(811,19805
static void destroy_special_devices(848,20458
static int      sound[855,20595
int traceinit 859,20632
static int dmabuf 860,20651
int init_module(864,20730
void cleanup_module(901,21396
int sound_alloc_dma(946,22178
int sound_open_dma(958,22348
void sound_free_dma(981,22810
void sound_close_dma(992,23032
static void do_sequencer_timer(1011,23361
static struct timer_list seq_timer 1017,23440
void request_sound_timer(1020,23518
void sound_stop_timer(1041,23826
void conf_printf(1047,23891
void conf_printf2(1066,24314
void sound_notifier_chain_register(1094,24774

drivers/sound/audio.c,454
#define NEUTRAL8	35,977
#define NEUTRAL16	36,999
static int set_format(41,1092
int audio_open(66,1647
static void sync_output(110,2418
void audio_release(154,3412
static void translate_bytes(181,4110
int audio_write(192,4297
int audio_read(277,6206
int audio_ioctl(347,7535
void audio_init_devices(508,11937
void reorganize_buffers(517,12055
static int dma_subdivide(645,15061
static int dma_set_fragment(667,15511
int dma_ioctl(719,16735

drivers/sound/lowlevel/aci.c,848
int aci_port 81,3100
unsigned char aci_idcode[82,3180
unsigned char aci_version 83,3260
int aci_solo;84,3340
static int aci_present 87,3500
int aci_reset 90,3607
int aci_reset 93,3789
#define COMMAND_REGISTER 97,3876
#define STATUS_REGISTER 98,3915
#define BUSY_REGISTER 99,3958
static int busy_wait(118,4752
static int read_general_status(138,5032
int aci_implied_cmd(158,5475
int aci_write_cmd(180,5821
int aci_write_cmd_d(222,6822
int aci_read_cmd(263,7948
int aci_indexed_cmd(291,8642
#define SCALE(SCALE335,9901
static int getvolume(338,9961
static int setvolume(355,10402
aci_mixer_ioctl 378,10973
static struct mixer_operations aci_mixer_operations 487,14050
mad_read 496,14181
int attach_aci(520,14989
#define MC4_PORT	525,15058
void unload_aci(659,19211
int init_module(669,19319
void cleanup_module(674,19373

drivers/sound/lowlevel/aedsp16.c,4193
#  define CONFIG_AEDSP16 41,1288
#define VERSION 267,10449
# define DBG(DBG274,10749
#  define DBG1(DBG1276,10808
#  define DBG1(DBG1278,10842
# define DBG(DBG281,10874
# define DBG1(DBG1282,10890
#define TRUE	288,10942
#define FALSE	289,10957
#define IOBASE_REGION_SIZE	294,11030
#define DEF_AEDSP16_IOB 299,11099
#define DEF_AEDSP16_IRQ 300,11174
#define DEF_AEDSP16_MRQ 301,11243
#define DEF_AEDSP16_DMA 302,11312
#define WRITE_MDIRQ_CFG 308,11498
#define COMMAND_52 309,11572
#define READ_HARD_CFG 310,11646
#define COMMAND_5C 311,11720
#define COMMAND_60 312,11794
#define COMMAND_66 313,11868
#define COMMAND_6C 314,11942
#define COMMAND_6E 315,12016
#define COMMAND_88 316,12090
#define DSP_INIT_MSS 317,12164
#define COMMAND_C5 318,12238
#define GET_DSP_VERSION 319,12312
#define GET_DSP_COPYRIGHT 320,12386
#define DSP_RESET 331,12680
#define DSP_READ 332,12749
#define DSP_WRITE 333,12818
#define DSP_COMMAND 334,12887
#define DSP_STATUS 335,12956
#define DSP_DATAVAIL 336,13025
#define RETRY 339,13096
#define STATUSRETRY 340,13166
#define HARDRETRY 341,13236
#define CARDNAMELEN 346,13384
#define CARDVERLEN 347,13451
#define IOBASE(IOBASE356,13650
#define JOY(JOY357,13696
#define MPUADDR(MPUADDR358,13727
#define WSSADDR(WSSADDR363,13843
#define CDROM(CDROM364,13890
#define CDROMADDR(CDROMADDR365,13921
#define BLDIOBASE(BLDIOBASE369,13997
#define BLDJOY(BLDJOY374,14090
#define BLDMPUADDR(BLDMPUADDR379,14177
#define BLDWSSADDR(BLDWSSADDR399,14491
#define BLDCDROM(BLDCDROM404,14585
#define BLDCDROMADDR(BLDCDROMADDR409,14674
#define INIT_NONE 424,14966
#define INIT_SBPRO 425,14993
#define INIT_MSS 426,15020
#define INIT_MPU401 427,15047
static int      soft_cfg __initdata 429,15075
static int      soft_cfg_mss __initdata 430,15139
static int      ver[431,15211
static int      ver[CARDVERLEN] __initdata 431,15211
static int	hard_cfg[435,15338
                     __initdata 436,15408
struct	d_hcfg d_hcfg441,15539
struct d_hcfg decoded_hcfg __initdata 450,15643
struct orVals orVals455,15773
struct aedsp16_info aedsp16_info461,15973
static struct orVals orIRQ[475,16593
static struct orVals orIRQ[] __initdata 475,16593
static struct orVals orMIRQ[485,16773
static struct orVals orMIRQ[] __initdata 485,16773
static struct orVals orDMA[494,16939
static struct orVals orDMA[] __initdata 494,16939
static struct aedsp16_info ae_config __initdata 501,17046
static char     DSPCopyright[514,17246
static char     DSPCopyright[CARDNAMELEN + 1] __initdata 514,17246
static char     DSPVersion[515,17312
static char     DSPVersion[CARDVERLEN + 1] __initdata 515,17312
static int __init aedsp16_wait_data(517,17376
static int __init aedsp16_read(540,17775
static int __init aedsp16_test_dsp(558,18058
static int __init aedsp16_dsp_reset(563,18163
static int __init aedsp16_write(584,18485
void __init aedsp16_pinfo(612,19048
void __init aedsp16_hard_decode(622,19459
void __init aedsp16_hard_encode(666,20605
static int __init aedsp16_hard_write(691,21215
static int __init aedsp16_hard_read(726,22031
static int __init aedsp16_ext_cfg_write(760,22792
static int __init aedsp16_cfg_write(814,23994
static int __init aedsp16_init_mss(826,24307
static int __init aedsp16_setup_board(851,24714
static int __init aedsp16_stdcfg(940,26671
static int __init aedsp16_dsp_version(955,27003
static int __init aedsp16_dsp_copyright(986,27626
static void __init aedsp16_init_tables(1022,28303
static int __init aedsp16_init_board(1046,28822
static int __init init_aedsp16_sb(1147,31173
static void __init uninit_aedsp16_sb(1167,31558
static int __init init_aedsp16_mss(1176,31690
static void __init uninit_aedsp16_mss(1215,32651
static int __init init_aedsp16_mpu(1229,32964
static void __init uninit_aedsp16_mpu(1259,33627
int __init init_aedsp16(1274,33959
void __init uninit_aedsp16(1332,35360
int io 1344,35558
int irq 1345,35571
int dma 1346,35585
int mpu_irq 1347,35599
int mss_base 1348,35617
int mpu_base 1349,35636
MODULE_DESCRIPTION("Audio Excel DSP 16 Driver Version " VERSION)1365,36226
int init_module(1367,36293
void cleanup_module(1394,36893

drivers/sound/lowlevel/awe_compat-fbsd.h,1528
#define AWE_COMPAT_H_DEF25,902
#define AWE_OBSOLETE_VOXWARE34,1150
#define CONFIG_AWE32_SYNTH56,1703
#  define CONFIG_AWE32_SYNTH67,1923
#  define SEQUENCER_C86,2436
#define INLINE	108,2998
#define KERN_WARNING 110,3025
#define awe_check_port(awe_check_port117,3250
#define awe_request_region(awe_request_region118,3296
#define awe_release_region(awe_release_region119,3339
#define AWE_DYNAMIC_BUFFER121,3383
#define my_malloc_init(my_malloc_init123,3411
#define my_malloc_memptr(my_malloc_memptr124,3453
#define my_malloc(my_malloc125,3482
#define my_free(my_free126,3538
#define INIT_TABLE(INIT_TABLE128,3591
#define OUTW(OUTW135,3883
#define COPY_FROM_USER(COPY_FROM_USER137,3926
#define COPY_TO_USER(COPY_TO_USER139,4040
#define GET_BYTE_FROM_USER(GET_BYTE_FROM_USER141,4152
#define GET_SHORT_FROM_USER(GET_SHORT_FROM_USER143,4255
#define IOCTL_TO_USER(IOCTL_TO_USER145,4359
#define IO_WRITE_CHECK(IO_WRITE_CHECK147,4455
#define IOCTL_IN(IOCTL_IN148,4498
#define IOCTL_OUT(IOCTL_OUT149,4536
#define BZERO(BZERO150,4586
#define MEMCPY(MEMCPY151,4640
#  define printk 154,4737
#  define RET_ERROR(RET_ERROR155,4761
#define sound_alloc_synthdev(sound_alloc_synthdev160,4847
#define sound_alloc_mixerdev(sound_alloc_mixerdev162,4931
#define sound_alloc_mididev(sound_alloc_mididev164,5015
#define sound_unload_synthdev(sound_unload_synthdev166,5096
#define sound_unload_mixerdev(sound_unload_mixerdev167,5136
#define sound_unload_mididev(sound_unload_mididev168,5176

drivers/sound/lowlevel/awe_hw.h,1873
#define AWE_HW_H_DEF26,942
#define awe_cmd_idx(awe_cmd_idx33,1029
#define Data0 35,1079
#define Data1 36,1127
#define Data2 37,1175
#define Data3 38,1217
#define Pointer 39,1259
#define AWE_CPF(AWE_CPF41,1313
#define AWE_PTRX(AWE_PTRX42,1405
#define AWE_CVCF(AWE_CVCF43,1490
#define AWE_VTFT(AWE_VTFT44,1579
#define AWE_0080(AWE_008045,1668
#define AWE_00A0(AWE_00A046,1727
#define AWE_PSST(AWE_PSST47,1786
#define AWE_CSL(AWE_CSL48,1874
#define AWE_CCCA(AWE_CCCA49,1962
#define AWE_HWCF4	50,2055
#define AWE_HWCF5	51,2120
#define AWE_HWCF6	52,2185
#define AWE_HWCF7	53,2250
#define AWE_SMALR	54,2333
#define AWE_SMARR	55,2421
#define AWE_SMALW	56,2492
#define AWE_SMARW	57,2581
#define AWE_SMLD	58,2653
#define AWE_SMRD	59,2727
#define AWE_WC	60,2792
#define AWE_WC_Cmd	61,2857
#define AWE_WC_Port	62,2894
#define AWE_HWCF1	63,2920
#define AWE_HWCF2	64,2983
#define AWE_HWCF3	65,3046
#define AWE_INIT1(AWE_INIT166,3109
#define AWE_INIT2(AWE_INIT267,3178
#define AWE_INIT3(AWE_INIT368,3247
#define AWE_INIT4(AWE_INIT469,3316
#define AWE_ENVVOL(AWE_ENVVOL70,3385
#define AWE_DCYSUSV(AWE_DCYSUSV71,3464
#define AWE_ENVVAL(AWE_ENVVAL72,3556
#define AWE_DCYSUS(AWE_DCYSUS73,3639
#define AWE_ATKHLDV(AWE_ATKHLDV74,3734
#define AWE_LFO1VAL(AWE_LFO1VAL75,3824
#define AWE_ATKHLD(AWE_ATKHLD76,3894
#define AWE_LFO2VAL(AWE_LFO2VAL77,3987
#define AWE_IP(AWE_IP78,4057
#define AWE_IFATN(AWE_IFATN79,4124
#define AWE_PEFE(AWE_PEFE80,4218
#define AWE_FMMOD(AWE_FMMOD81,4307
#define AWE_TREMFRQ(AWE_TREMFRQ82,4398
#define AWE_FM2FRQ2(AWE_FM2FRQ283,4486
#define AWE_U1	86,4650
#define AWE_U2(AWE_U287,4716
#define AWE_MAX_VOICES	90,4791
#define AWE_NORMAL_VOICES	91,4818
#define AWE_MAX_CHANNELS	93,4888
#define AWE_MAX_LAYERS	94,4957
#define AWE_DRAM_OFFSET	96,5036
#define AWE_MAX_DRAM_SIZE	97,5070

drivers/sound/lowlevel/awe_wave.c,16241
#define DEBUG(DEBUG43,1415
#define ERRMSG(ERRMSG44,1485
#define FATALERR(FATALERR45,1546
#define DEBUG(DEBUG47,1578
#define ERRMSG(ERRMSG48,1606
#define FATALERR(FATALERR49,1630
typedef struct _sf_list _sf_list57,1849
} sf_list;sf_list69,2204
typedef struct _awe_voice_list _awe_voice_list72,2234
} awe_voice_list;awe_voice_list79,2561
#define V_ST_NORMAL	82,2602
#define V_ST_MAPPED	83,2624
typedef struct _awe_sample_list _awe_sample_list85,2647
} awe_sample_list;awe_sample_list88,2771
static int current_sf_id 91,2826
static int locked_sf_id 92,2856
static int max_sfs;93,2885
static sf_list *sflists 94,2905
#define awe_free_mem_ptr(awe_free_mem_ptr96,2938
#define awe_free_info(awe_free_info97,3025
#define awe_free_sample(awe_free_sample98,3110
static int max_samples;100,3200
static awe_sample_list *samples 101,3224
static int max_infos;103,3265
static awe_voice_list *infos 104,3287
#define AWE_MAX_PRESETS	107,3326
#define AWE_DEFAULT_PRESET	108,3355
#define AWE_DEFAULT_BANK	109,3384
#define AWE_DEFAULT_DRUM	110,3411
#define AWE_DRUM_BANK	111,3438
#define MAX_LAYERS	113,3466
static int preset_table[116,3526
typedef	struct FX_Rec FX_Rec123,3741
} FX_Rec;FX_Rec126,3845
typedef struct _awe_chan_info _awe_chan_info130,3882
} awe_chan_info;awe_chan_info145,4498
typedef struct _voice_info _voice_info148,4539
#define AWE_ST_OFF	AWE_ST_OFF150,4580
#define AWE_ST_ON	AWE_ST_ON151,4622
#define AWE_ST_STANDBY	AWE_ST_STANDBY152,4662
#define AWE_ST_SUSTAINED	AWE_ST_SUSTAINED153,4720
#define AWE_ST_MARK	AWE_ST_MARK154,4768
#define AWE_ST_DRAM	AWE_ST_DRAM155,4824
#define AWE_ST_FM	AWE_ST_FM156,4874
#define AWE_ST_RELEASED	AWE_ST_RELEASED157,4922
} voice_info;voice_info176,5539
static voice_info voices[179,5578
#define IS_NO_SOUND(IS_NO_SOUND181,5621
#define IS_NO_EFFECT(IS_NO_EFFECT182,5725
#define IS_PLAYING(IS_PLAYING183,5780
#define IS_EMPTY(IS_EMPTY184,5867
static awe_chan_info channels[188,6012
#define AWE_DEFAULT_BASE_ADDR	196,6250
#define AWE_DEFAULT_MEM_SIZE	200,6336
#define awe_port	206,6519
#define awe_mem_size	207,6539
int io 208,6568
int memsize 209,6627
static int awe_port 217,6880
static int awe_mem_size 218,6925
static int awe_mem_start 222,7018
static int awe_max_voices 225,7098
static int patch_opened 227,7143
static char atten_relative 229,7203
static short atten_offset 230,7239
static int awe_present 232,7271
static int awe_busy 233,7330
static int my_dev 235,7386
#define DEFAULT_DRUM_FLAGS	237,7414
#define IS_DRUM_CHANNEL(IS_DRUM_CHANNEL238,7464
#define DRUM_CHANNEL_ON(DRUM_CHANNEL_ON239,7517
#define DRUM_CHANNEL_OFF(DRUM_CHANNEL_OFF240,7571
static unsigned int drum_flags 241,7627
static int playing_mode 243,7701
#define SINGLE_LAYER_MODE(SINGLE_LAYER_MODE244,7746
#define MULTI_LAYER_MODE(MULTI_LAYER_MODE245,7845
static int current_alloc_time 247,7941
static struct synth_info awe_info 249,8023
static struct voice_alloc_info *voice_alloc;261,8327
typedef void (*fx_affect_func)fx_affect_func310,10133
#define awe_key_pressure(awe_key_pressure356,12323
#define limitvalue(limitvalue440,16004
#define MALLOC_LOOP_DATA444,16120
#define WAIT_BY_LOOP445,16145
#define DEF_VOLUME_CALC	454,16365
#define DEF_VOLUME_CALC	456,16400
#define DEF_ZERO_ATTEN	459,16455
#define DEF_MOD_SENSE	460,16499
#define DEF_CHORUS_MODE	461,16525
#define DEF_REVERB_MODE	462,16552
#define DEF_BASS_LEVEL	463,16579
#define DEF_TREBLE_LEVEL	464,16605
static struct CtrlParmsDef CtrlParmsDef466,16633
} ctrl_parms[470,16718
static int ctrls[493,17763
static struct synth_operations awe_operations 500,17957
static int _attach_awe(535,18564
static void free_tables(606,20137
static void *realloc_block(619,20364
#define free_buffers(free_buffers636,20679
static void _unload_awe(641,20738
static int pnp 676,21481
#define AWE_NUM_CHIPS	678,21527
static unsigned int pnp_ids[679,21551
static struct pnp_driver pnp_awe[684,21700
static int awe_pnp_ok 685,21749
static void awe_pnp_config(687,21777
static int awe_pnp_event 705,22189
static int awe_initpnp 737,22763
static void awe_unload_pnp 751,23090
int attach_awe_obsolete(766,23469
int probe_awe_obsolete(774,23635
int attach_awe(783,23780
void unload_awe(796,23935
int init_module(808,24122
void cleanup_module(813,24171
EXPORT_NO_SYMBOLS;819,24236
long attach_awe_obsolete(839,24689
int probe_awe_obsolete(845,24794
void attach_awe(853,24913
int probe_awe(858,24982
awe_reset_samples(873,25263
static int awe_ports[894,25664
static int port_setuped 895,25689
static int awe_cur_cmd 896,25722
#define awe_set_cmd(awe_set_cmd897,25751
static void setup_ports(901,25894
awe_poke(918,26228
awe_poke_dw(926,26395
awe_peek(936,26684
awe_peek_dw(946,26864
awe_wait(960,27190
static struct wait_queue *awe_sleeper 982,27655
static void awe_wait(983,27701
awe_write_dram(991,27910
awe_check_port(1005,28235
awe_request_region(1014,28415
awe_release_region(1023,28660
awe_initialize(1038,29039
awe_init_voice_info(1088,30058
awe_init_voice_parm(1126,30777
freq_to_note(1162,31414
calc_rate_offset(1218,32470
static short attack_time_tbl[1252,33255
static short decay_time_tbl[1263,33875
#define calc_parm_delay(calc_parm_delay1274,34566
calc_parm_hold(1278,34676
calc_parm_attack(1288,34858
calc_parm_decay(1295,34999
calc_parm_search(1302,35152
#define FX_FLAG_OFF	1322,35592
#define FX_FLAG_SET	1323,35614
#define FX_FLAG_ADD	1324,35636
#define FX_SET(FX_SET1326,35659
#define FX_ADD(FX_ADD1328,35756
#define FX_UNSET(FX_UNSET1330,35853
#define FX_ON(FX_ON1334,35977
#define PARM_BYTE	1336,36023
#define PARM_WORD	1337,36043
#define PARM_SIGN	1338,36063
static struct PARM_DEFS PARM_DEFS1340,36084
} parm_defs[1344,36232
FX_BYTE(1388,38017
FX_WORD(1418,38712
FX_COMB(1440,39282
FX_OFFSET(1451,39570
static unsigned short voltarget[1474,40164
awe_note_on(1480,40354
awe_note_off(1634,45187
awe_terminate(1659,45906
awe_exclusive_off(1668,46117
awe_set_pitch(1696,46857
awe_set_voice_pitch(1705,47101
awe_set_volume(1713,47245
awe_set_voice_vol(1736,47886
awe_set_pan(1747,48084
awe_fx_fmmod(1790,49327
awe_fx_tremfrq(1808,49839
awe_fx_fm2frq2(1826,50345
awe_fx_filterQ(1845,50864
awe_calc_pitch(1871,51708
awe_calc_pitch_from_freq(1925,53414
static int vol_table[1969,54799
static unsigned char voltab1[1981,55239
static unsigned char voltab2[1997,56087
static unsigned char expressiontab[2013,56935
awe_calc_volume(2030,57801
awe_change_master_volume(2096,59465
static void awe_update_volume(2105,59657
static void awe_sostenuto_on(2113,59797
static void awe_sustain_off(2121,59951
static void awe_terminate_and_init(2132,60184
#define AWE_VOICE_KEY(AWE_VOICE_KEY2144,60498
#define AWE_CHAN_KEY(AWE_CHAN_KEY2145,60538
#define KEY_CHAN_MATCH(KEY_CHAN_MATCH2146,60589
awe_voice_init(2150,60681
static void awe_fx_init(2185,61330
static void awe_channel_init(2194,61575
static void awe_voice_change(2226,62339
awe_open(2255,63014
awe_close(2282,63436
awe_init_ctrl_parms(2292,63550
awe_ioctl(2305,63761
static int voice_in_range(2338,64398
static void release_voice(2350,64631
static void awe_note_off_all(2365,64990
awe_kill_note(2376,65194
static void start_or_volume_change(2410,65896
static void set_and_start_voice(2420,66164
awe_start_note(2435,66543
awe_search_instr(2515,68497
awe_set_instr_2(2530,68767
awe_set_instr(2542,69106
awe_reset(2581,70159
awe_hw_control(2605,70746
awe_hw_gus_control(2621,71092
awe_hw_awe_control(2708,72688
awe_send_effect(2829,75131
awe_modwheel_change(2867,75999
awe_aftertouch(2883,76359
awe_controller(2906,76832
awe_panning(3022,79959
awe_volume_method(3045,80442
awe_patchmgr(3055,80619
awe_bender(3065,80801
awe_load_patch(3092,81498
awe_create_sf(3172,83434
#define ASC_TO_KEY(ASC_TO_KEY3232,84832
static int is_shared_sf(3233,84870
static int is_identical_name(3247,85201
static int info_duplicated(3256,85438
awe_open_patch(3283,86102
check_patch_opened(3315,86916
awe_close_patch(3330,87248
awe_unload_patch(3344,87581
static int alloc_new_info(3352,87802
static int alloc_new_sample(3379,88477
awe_load_map(3406,89111
awe_probe_info(3460,90525
awe_probe_data(3492,91416
awe_load_info(3507,91790
awe_load_data(3588,94029
awe_replace_data(3638,95268
static const char *readbuf_addr;3698,96922
static int readbuf_offs;3699,96955
static int readbuf_flags;3700,96980
static unsigned short *readbuf_loop;3702,97030
static int readbuf_loopstart,3703,97067
static int readbuf_loopstart, readbuf_loopend;3703,97067
readbuf_init(3708,97162
readbuf_word(3731,97774
readbuf_word_cache(3757,98499
readbuf_end(3765,98659
#define readbuf_word_cache	3775,98760
#define readbuf_end(readbuf_end3776,98800
#define BLANK_LOOP_START	3782,98907
#define BLANK_LOOP_END	3783,98934
#define BLANK_LOOP_SIZE	3784,98961
awe_write_wave_data(3788,99028
calc_gus_envelope_time(3885,101415
#define calc_gus_sustain(calc_gus_sustain3899,101668
#define calc_gus_attenuation(calc_gus_attenuation3900,101727
awe_load_guspatch(3904,101813
static void add_sf_info(4063,106954
static void add_sf_sample(4082,107343
static void purge_old_list(4093,107628
static void add_info_list(4115,108327
awe_remove_samples(4150,109138
static void rebuild_preset_list(4168,109425
static int is_identical_id(4182,109698
static int search_sample_index(4205,110263
awe_set_sample(4228,110849
awe_search_multi_voices(4256,111518
really_alloc_voices(4284,112234
awe_alloc_multi_voices(4314,113104
search_best_voice(4352,114159
awe_clear_voice(4387,114937
awe_alloc_one_voice(4430,116001
awe_alloc(4458,116824
awe_setup_voice(4468,117051
static int my_mixerdev 4505,118320
static struct mixer_operations awe_mixer_operations 4507,118350
static void attach_mixer(4515,118485
static void unload_mixer(4522,118627
awe_mixer_ioctl(4529,118735
awe_init_audio(4603,120508
awe_init_dma(4643,121460
static unsigned short init1[4654,121637
static unsigned short init2[4676,122753
static unsigned short init3[4698,123837
static unsigned short init4[4720,124921
awe_init_array(4745,126063
awe_send_array(4759,126341
awe_tweak_voice(4782,126854
awe_tweak(4801,127466
awe_init_fm(4816,127698
awe_open_dram_for_write(4868,129196
awe_open_dram_for_check(4926,130788
awe_close_dram(4948,131319
awe_detect_base(4975,131974
awe_detect(4989,132282
#define UNIQUE_ID1	5015,132847
#define UNIQUE_ID2	5016,132873
#define UNIQUE_ID3	5017,132899
awe_check_dram(5020,132938
static char chorus_defined[5077,134604
static awe_chorus_fx_rec chorus_parm[5078,134652
awe_load_chorus_fx(5090,135272
awe_set_chorus_mode(5107,135847
awe_update_chorus_mode(5122,136368
static char reverb_defined[5132,136652
static awe_reverb_fx_rec reverb_parm[5133,136700
static struct ReverbCmdPair ReverbCmdPair5184,138762
} reverb_cmds[5186,138819
awe_load_reverb_fx(5197,139402
awe_set_reverb_mode(5214,139977
awe_update_reverb_mode(5226,140275
static unsigned short bass_parm[5235,140528
static unsigned short treble_parm[5250,141038
awe_equalizer(5270,142117
static void awe_update_equalizer(5291,142923
enum { Q_NONE,5308,143405
enum { Q_NONE, Q_VARLEN,5308,143405
enum { Q_NONE, Q_VARLEN, Q_READ,5308,143405
enum { Q_NONE, Q_VARLEN, Q_READ, Q_SYSEX,5308,143405
#define MAX_MIDIBUF	5310,143451
typedef struct MidiStatus MidiStatus5313,143493
} MidiStatus;MidiStatus5320,143708
enum { MODE_GM,5323,143744
enum { MODE_GM, MODE_GS,5323,143744
enum { MODE_GM, MODE_GS, MODE_XG,5323,143744
} ConvTable;ConvTable5330,143914
#define numberof(numberof5364,145468
static struct midi_operations awe_midi_operations 5371,145684
static int my_mididev 5386,146020
static void attach_midiemu(5388,146049
static void unload_midiemu(5396,146242
static int midi_opened 5407,146502
static int midi_mode;5409,146535
static int coarsetune 5410,146557
static int xg_mapping 5412,146599
static int xg_bankmode 5413,146629
#define FX_CUTOFF	5417,146684
#define FX_RESONANCE	5418,146704
#define FX_ATTACK	5419,146727
#define FX_RELEASE	5420,146747
#define FX_VIBRATE	5421,146768
#define FX_VIBDEPTH	5422,146789
#define FX_VIBDELAY	5423,146811
#define FX_NUMS	5424,146833
#define DEF_FX_CUTOFF	5426,146853
#define DEF_FX_RESONANCE	5427,146880
#define DEF_FX_ATTACK	5428,146907
#define DEF_FX_RELEASE	5429,146933
#define DEF_FX_VIBRATE	5430,146960
#define DEF_FX_VIBDEPTH	5431,146987
#define DEF_FX_VIBDELAY	5432,147014
static int gs_sense[5435,147065
static int xg_sense[5440,147210
static MidiStatus curst;5448,147378
awe_midi_open 5452,147416
awe_midi_close 5476,147790
awe_midi_ioctl 5483,147854
awe_midi_outputc 5489,147938
static void init_midi_status(5506,148295
#define MAX_MIDI_CHANNELS	5518,148543
static unsigned char nrpn[5521,148590
static int msb_bit;5522,148666
static unsigned char rpn_msb[5524,148752
static unsigned char rpn_msb[MAX_MIDI_CHANNELS], rpn_lsb[5524,148752
static int rpn_val[5526,148853
static void clear_rpn(5528,148893
typedef void (*StatusEvent)StatusEvent5546,149252
static struct StatusEventList StatusEventList5547,149297
} status_event[5550,149362
static void get_midi_char(5563,149617
static void special_event(5594,150216
static void queue_varlen(5615,150601
static void queue_read(5633,150852
static void midi_note_on(5657,151459
static void midi_note_off(5667,151706
static void midi_key_pressure(5674,151915
static void midi_channel_pressure(5680,152052
static void midi_pitch_wheel(5687,152221
static void midi_program_change(5694,152370
#define send_effect(send_effect5706,152674
#define add_effect(add_effect5707,152743
#define unset_effect(unset_effect5708,152818
static void midi_control_change(5711,152916
static void midi_select_bank(5785,154401
static void midi_rpn_event(5820,155381
static void midi_detune(5857,156232
static void midi_system_exclusive(5875,156699
static int send_converted_effect(5972,159111
static int add_converted_effect(5985,159426
#define fx_env1_delay	6013,160300
#define fx_env1_attack	6014,160352
#define fx_env1_hold	6015,160406
#define fx_env1_decay	6016,160457
#define fx_env1_release	6017,160509
#define fx_env1_sustain	6018,160563
#define fx_env1_pitch	6019,160621
#define fx_env1_cutoff	6020,160684
#define fx_env2_delay	6022,160749
#define fx_env2_attack	6023,160801
#define fx_env2_hold	6024,160855
#define fx_env2_decay	6025,160906
#define fx_env2_release	6026,160958
#define fx_env2_sustain	6027,161012
#define fx_lfo1_delay	6029,161071
#define fx_lfo1_freq	6030,161123
#define fx_lfo1_volume	6031,161179
#define fx_lfo1_pitch	6032,161240
#define fx_lfo1_cutoff	6033,161303
#define fx_lfo2_delay	6035,161368
#define fx_lfo2_freq	6036,161420
#define fx_lfo2_pitch	6037,161476
#define fx_init_pitch	6039,161540
#define fx_chorus	6040,161601
#define fx_reverb	6041,161649
#define fx_cutoff	6042,161697
#define fx_filterQ	6043,161749
static unsigned short fx_delay(6045,161796
static unsigned short fx_attack(6050,161887
static unsigned short fx_hold(6055,161980
static unsigned short fx_decay(6060,162069
static unsigned short fx_the_value(6065,162160
static unsigned short fx_twice_value(6070,162247
static unsigned short fx_conv_pitch(6075,162342
static unsigned short fx_conv_Q(6080,162428
static ConvTable awe_effects[6086,162519
static int num_awe_effects 6120,163658
static unsigned short gs_cutoff(6128,163939
static unsigned short gs_filterQ(6134,164062
static unsigned short gs_attack(6140,164173
static unsigned short gs_decay(6146,164280
static unsigned short gs_release(6152,164389
static unsigned short gs_vib_rate(6158,164527
static unsigned short gs_vib_depth(6164,164662
static unsigned short gs_vib_delay(6170,164797
static ConvTable gs_effects[6175,164896
static int num_gs_effects 6187,165235
static void midi_nrpn_event(6194,165479
static unsigned short xg_cutoff(6215,166187
static unsigned short xg_filterQ(6221,166323
static unsigned short xg_attack(6227,166434
static unsigned short xg_release(6233,166543
static ConvTable xg_effects[6238,166639
static int num_xg_effects 6246,166823
static int xg_control_change(6248,166874

drivers/sound/lowlevel/lowlevel.h,25
#define MODVERSIONS2,23

drivers/sound/lowlevel/miroaci.h,0

drivers/sound/lowlevel/soundlow.c,138
char *lowlevel_version 12,227
extern int init_aedsp16(19,400
sound_init_lowlevel_drivers(37,874
sound_unload_lowlevel_drivers(49,1017

drivers/sound/lowlevel/awe_config.h,428
#define AWE_CONFIG_H_DEF25,896
#define DEF_FM_CHORUS_DEPTH	44,1583
#define DEF_FM_REVERB_DEPTH	45,1616
#define AWE_DEBUG_ON56,1917
#define AWE_HAS_GUS_COMPATIBILITY59,1965
#define CONFIG_AWE32_MIDIEMU62,2038
#define AWE_USE_NEW_VOLUME_CALC68,2191
#define AWE_CHECK_VTARGET71,2285
#define AWE_ALLOW_SAMPLE_SHARING74,2339
#define AWE_MAX_SF_LISTS 93,3129
#define AWE_MAX_SAMPLES 99,3336
#define AWE_MAX_INFOS 100,3364

drivers/sound/lowlevel/awe_compat.h,2571
#define AWE_COMPAT_H_DEF25,902
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION33,1107
#define AWE_OBSOLETE_VOXWARE41,1318
#define AWE_NEW_KERNEL_INTERFACE45,1406
#define AWE_MODULE_SUPPORT47,1491
#define AWE_NO_PATCHMGR59,1716
#define AWE_OSS3860,1740
#define HAS_LOWLEVEL_H61,1758
#define CONFIG_AWE32_SYNTH84,2303
#define INLINE	134,3420
#define awe_check_port(awe_check_port144,3700
#define awe_request_region(awe_request_region145,3746
#define awe_release_region(awe_release_region146,3789
static int _mem_start;148,3833
#define my_malloc_init(my_malloc_init150,3901
#define my_malloc_memptr(my_malloc_memptr151,3954
#define my_free(my_free152,3992
#define INIT_TABLE(INIT_TABLE155,4063
#define AWE_DYNAMIC_BUFFER161,4187
#define my_malloc_init(my_malloc_init163,4215
#define my_malloc_memptr(my_malloc_memptr164,4257
#define my_malloc(my_malloc165,4286
#define my_free(my_free166,4325
#define INIT_TABLE(INIT_TABLE169,4413
#define RET_ERROR(RET_ERROR172,4502
#define OUTW(OUTW180,4705
#define COPY_FROM_USER(COPY_FROM_USER183,4780
#define GET_BYTE_FROM_USER(GET_BYTE_FROM_USER185,4879
#define GET_SHORT_FROM_USER(GET_SHORT_FROM_USER187,4977
#define IOCTL_TO_USER(IOCTL_TO_USER190,5094
#define IO_WRITE_CHECK(IO_WRITE_CHECK192,5184
#define IOCTL_TO_USER(IOCTL_TO_USER194,5248
#define IO_WRITE_CHECK(IO_WRITE_CHECK196,5344
#define COPY_TO_USER	198,5424
#define IOCTL_IN(IOCTL_IN199,5459
#define IOCTL_OUT(IOCTL_OUT200,5496
#define COPY_FROM_USER(COPY_FROM_USER203,5572
#define GET_BYTE_FROM_USER(GET_BYTE_FROM_USER205,5672
#define GET_SHORT_FROM_USER(GET_SHORT_FROM_USER207,5771
#define IOCTL_TO_USER(IOCTL_TO_USER210,5888
#define COPY_TO_USER(COPY_TO_USER212,5978
#define IOCTL_IN(IOCTL_IN214,6075
#define IOCTL_OUT(IOCTL_OUT215,6112
#define IO_WRITE_CHECK(IO_WRITE_CHECK216,6162
#define IOCTL_TO_USER(IOCTL_TO_USER218,6242
#define COPY_TO_USER	220,6339
#define IOCTL_IN(IOCTL_IN221,6374
#define IOCTL_OUT(IOCTL_OUT222,6424
#define IO_WRITE_CHECK(IO_WRITE_CHECK223,6485
#define BZERO(BZERO228,6591
#define MEMCPY(MEMCPY229,6640
#define MEMCMP(MEMCMP230,6690
#define sound_alloc_synthdev(sound_alloc_synthdev235,6811
#define sound_alloc_mixerdev(sound_alloc_mixerdev237,6895
#define sound_alloc_mididev(sound_alloc_mididev239,6979
#define sound_unload_synthdev(sound_unload_synthdev241,7060
#define sound_unload_mixerdev(sound_unload_mixerdev242,7100
#define sound_unload_mididev(sound_unload_mididev243,7140
inline static void interruptible_sleep_on_timeout(248,7263

drivers/sound/lowlevel/awe_version.h,203
#define AWE_VERSION_H_DEF27,940
#define AWE_MAJOR_VERSION	29,967
#define AWE_MINOR_VERSION	30,995
#define AWE_TINY_VERSION	31,1023
#define AWE_VERSION_NUMBER	32,1050
#define AWEDRV_VERSION	33,1143

drivers/sound/lowlevel/awe_compat-linux.h,2479
#define AWE_COMPAT_H_DEF25,902
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION33,1107
#define AWE_OBSOLETE_VOXWARE41,1318
#define AWE_NEW_KERNEL_INTERFACE45,1406
#define AWE_MODULE_SUPPORT47,1491
#define AWE_NO_PATCHMGR59,1716
#define AWE_OSS3860,1740
#define HAS_LOWLEVEL_H61,1758
#define CONFIG_AWE32_SYNTH84,2303
#define INLINE	134,3420
#define awe_check_port(awe_check_port144,3696
#define awe_request_region(awe_request_region145,3742
#define awe_release_region(awe_release_region146,3785
static int _mem_start;148,3829
#define my_malloc_init(my_malloc_init150,3897
#define my_malloc_memptr(my_malloc_memptr151,3950
#define my_free(my_free152,3988
#define INIT_TABLE(INIT_TABLE155,4059
#define AWE_DYNAMIC_BUFFER161,4183
#define my_malloc_init(my_malloc_init163,4211
#define my_malloc_memptr(my_malloc_memptr164,4253
#define my_malloc(my_malloc165,4282
#define my_free(my_free166,4321
#define INIT_TABLE(INIT_TABLE169,4409
#define RET_ERROR(RET_ERROR172,4498
#define OUTW(OUTW180,4701
#define COPY_FROM_USER(COPY_FROM_USER183,4776
#define GET_BYTE_FROM_USER(GET_BYTE_FROM_USER185,4875
#define GET_SHORT_FROM_USER(GET_SHORT_FROM_USER187,4973
#define IOCTL_TO_USER(IOCTL_TO_USER190,5090
#define IO_WRITE_CHECK(IO_WRITE_CHECK192,5180
#define IOCTL_TO_USER(IOCTL_TO_USER194,5244
#define IO_WRITE_CHECK(IO_WRITE_CHECK196,5340
#define COPY_TO_USER	198,5420
#define IOCTL_IN(IOCTL_IN199,5455
#define IOCTL_OUT(IOCTL_OUT200,5492
#define COPY_FROM_USER(COPY_FROM_USER203,5568
#define GET_BYTE_FROM_USER(GET_BYTE_FROM_USER205,5668
#define GET_SHORT_FROM_USER(GET_SHORT_FROM_USER207,5767
#define IOCTL_TO_USER(IOCTL_TO_USER210,5884
#define COPY_TO_USER(COPY_TO_USER212,5974
#define IOCTL_IN(IOCTL_IN214,6071
#define IOCTL_OUT(IOCTL_OUT215,6108
#define IO_WRITE_CHECK(IO_WRITE_CHECK216,6158
#define IOCTL_TO_USER(IOCTL_TO_USER218,6238
#define COPY_TO_USER	220,6335
#define IOCTL_IN(IOCTL_IN221,6370
#define IOCTL_OUT(IOCTL_OUT222,6420
#define IO_WRITE_CHECK(IO_WRITE_CHECK223,6481
#define BZERO(BZERO228,6587
#define MEMCPY(MEMCPY229,6636
#define sound_alloc_synthdev(sound_alloc_synthdev234,6761
#define sound_alloc_mixerdev(sound_alloc_mixerdev236,6845
#define sound_alloc_mididev(sound_alloc_mididev238,6929
#define sound_unload_synthdev(sound_unload_synthdev240,7010
#define sound_unload_mixerdev(sound_unload_mixerdev241,7050
#define sound_unload_mididev(sound_unload_mididev242,7090

drivers/sound/dmabuf.c,1750
#define BE_CONSERVATIVE27,998
#define SAMPLE_ROUNDUP 28,1022
#define DMAP_FREE_ON_CLOSE 34,1125
#define DMAP_KEEP_ON_CLOSE 35,1159
extern int sound_dmap_flag;36,1193
static int debugmem 44,1410
static int dma_buffsize 45,1465
static long dmabuf_timeout(47,1506
static int sound_alloc_dmap(60,1777
static void sound_free_dmap(117,3553
static int sound_start_dma(141,4187
static void dma_init_buffers(160,4651
static int open_dmap(177,5098
static void close_dmap(208,5984
static unsigned int default_set_bits(226,6361
static int default_set_speed(236,6575
static short default_set_channels(246,6774
static void check_driver(257,6997
int DMAbuf_open(267,7246
void DMAbuf_reset(315,8437
static void dma_reset_output(324,8610
static void dma_reset_input(367,9729
void DMAbuf_launch_output(387,10239
int DMAbuf_sync(415,11259
int DMAbuf_release(466,12717
int DMAbuf_activate_recording(500,13645
int DMAbuf_getrdbuffer(534,14641
int DMAbuf_rmchars(590,16160
int DMAbuf_get_buffer_pointer(613,16748
void DMAbuf_start_devices(673,17906
int DMAbuf_space_in_queue(694,18336
static int output_sleep(731,19077
static int find_output_space(766,19951
int DMAbuf_getwrbuffer(816,21494
int DMAbuf_move_wrpointer(849,22262
int DMAbuf_start_dma(897,23685
static int local_start_dma(913,24188
static void finish_output_interrupt(931,24794
static void do_outputintr(940,25038
void DMAbuf_outputintr(1012,27215
static void do_inputintr(1046,28004
void DMAbuf_inputintr(1109,30343
int DMAbuf_open_dma(1143,31081
void DMAbuf_close_dma(1168,31674
void DMAbuf_init(1173,31767
static unsigned int poll_input(1212,32799
static unsigned int poll_output(1245,33627
unsigned int DMAbuf_poll(1268,34248
void DMAbuf_deinit(1273,34393

drivers/sound/mpu401.c,4028
#define USE_SEQ_MACROS21,514
#define USE_SIMPLE_MACROS22,537
static int      timer_mode 32,742
struct mpu_configmpu_config36,821
#define MODE_MIDI	50,1097
#define MODE_SYNTH	51,1117
#define MPU_CAP_INTLG	54,1205
#define MPU_CAP_SYNC	55,1238
#define MPU_CAP_FSK	56,1270
#define MPU_CAP_CLS	57,1301
#define MPU_CAP_SMPTE 58,1332
#define MPU_CAP_2PORT	59,1366
#define MBUF_MAX	62,1429
#define BUFTEST(BUFTEST63,1449
#define	DATAPORT(DATAPORT76,1923
#define	COMDPORT(COMDPORT77,1955
#define	STATPORT(STATPORT78,1989
static int mpu401_status(80,2024
#define input_avail(input_avail85,2114
#define output_ready(output_ready86,2178
static void write_command(88,2245
static int read_data(93,2354
static void write_data(98,2440
#define	OUTPUT_READY	103,2548
#define	INPUT_AVAIL	104,2574
#define	MPU_ACK	105,2599
#define	MPU_RESET	106,2621
#define	UART_MODE_ON	107,2644
static struct mpu_config dev_conf[109,2671
static int n_mpu_devs 114,2732
static struct synth_info mpu_synth_info_proto 123,3037
static struct synth_info mpu_synth_info[133,3200
#define ST_INIT	139,3296
#define ST_TIMED	140,3351
#define ST_DATABYTE	141,3402
#define ST_SYSMSG	143,3465
#define ST_SYSEX	144,3521
#define ST_MTC	145,3570
#define ST_SONGSEL	146,3629
#define ST_SONGPOS	147,3671
static unsigned char len_tab[149,3724
#define STORE(STORE163,3954
#define STORE(STORE165,3979
#define _seqbuf 174,4091
#define _seqbufptr 175,4112
#define _SEQ_ADVBUF(_SEQ_ADVBUF176,4133
static int mpu_input_scanner(178,4163
static void mpu401_input_loop(409,8345
void mpuintr(440,8878
static int mpu401_open(460,9257
static void mpu401_close(514,10362
static int mpu401_out(531,10709
static int mpu401_command(560,11286
static int mpu_cmd(666,13272
static int mpu401_prefix_cmd(682,13593
static int mpu401_start_read(707,13943
static int mpu401_end_read(712,13997
static int mpu401_ioctl(717,14049
static void mpu401_kick(750,14797
static int mpu401_buffer_status(754,14835
static int mpu_synth_ioctl(761,14930
static int mpu_synth_open(789,15446
static void mpu_synth_close(843,16719
#define MIDI_SYNTH_NAME	862,17187
#define MIDI_SYNTH_CAPS	863,17231
static struct synth_operations mpu401_synth_proto 866,17296
static struct synth_operations *mpu401_synth_operations[892,17753
static struct midi_operations mpu401_midi_proto 894,17825
static struct midi_operations mpu401_midi_operations[911,18107
static void mpu401_chk_version(913,18176
void attach_mpu401(944,18690
static int reset_mpu401(1095,22499
static void set_uart_mode(1146,23564
int probe_mpu401(1167,24004
void unload_mpu401(1200,24719
static volatile int timer_initialized 1221,25235
static volatile int curr_tempo,1222,25311
static volatile int curr_tempo, curr_timebase,1222,25311
static volatile int curr_tempo, curr_timebase, hw_timebase;1222,25311
static int      max_timebase 1223,25371
static volatile unsigned long next_event_time;1224,25425
static volatile unsigned long curr_ticks,1225,25472
static volatile unsigned long curr_ticks, curr_clocks;1225,25472
static unsigned long prev_event_time;1226,25527
static int      metronome_mode;1227,25565
static unsigned long clocks2ticks(1229,25598
static void set_timebase(1240,25968
static void tmr_reset(1264,26392
static void set_timer_mode(1276,26591
static void stop_metronome(1299,27169
static void setup_metronome(1304,27268
static int mpu_start_timer(1326,27937
static int mpu_timer_open(1350,28536
static void mpu_timer_close(1372,28994
static int mpu_timer_event(1383,29316
static unsigned long mpu_timer_get_time(1456,30716
static int mpu_timer_ioctl(1464,30821
static void mpu_timer_arm(1566,32736
static struct sound_timer_operations mpu_timer 1576,32939
static void mpu_timer_interrupt(1589,33176
static void timer_ext_event(1607,33440
static int mpu_timer_init(1664,34424
int             io 1725,35634
int             irq 1726,35659
struct address_info hw;1727,35685
int init_module(1729,35710
void cleanup_module(1745,35982

drivers/sound/adlib_card.c,211
void attach_adlib_card(21,432
int probe_adlib(27,615
void unload_adlib(37,861
int io 45,1016
EXPORT_NO_SYMBOLS;48,1052
struct address_info cfg;50,1072
int init_module(52,1098
void cleanup_module(66,1336

drivers/sound/opl3.c,1551
#define MAX_VOICE	39,811
#define OFFS_4OP	40,832
struct voice_infovoice_info42,853
typedef struct opl_devinfoopl_devinfo54,1122
} opl_devinfo;opl_devinfo76,1614
static struct opl_devinfo *devc 78,1630
static int      detected_model;80,1671
static void enter_4op_mode(87,1997
static int opl3_ioctl(112,2578
int opl3_detect(146,3466
static int opl3_kill_note 252,6047
#define HIHAT	279,6771
#define CYMBAL	280,6789
#define TOMTOM	281,6808
#define SNARE	282,6827
#define BDRUM	283,6845
#define UNDEFINED	284,6863
#define DEFAULT	285,6889
static int store_instr(287,6915
static int opl3_set_instr 295,7243
static char fm_volume_table[316,8022
static void calc_vol(336,8552
static void set_voice_volume(355,8902
static int opl3_start_note 442,10825
static void freq_to_fnum 662,15932
static void opl3_command 703,16486
static void opl3_reset(729,16993
static int opl3_open(766,17771
static void opl3_close(792,18263
static void opl3_hw_control(804,18490
static int opl3_load_patch(808,18554
static void opl3_panning(832,19119
static void opl3_volume_method(837,19215
#define SET_VIBRATO(SET_VIBRATO841,19270
static void opl3_aftertouch(847,19481
static void bend_pitch(916,20540
static void opl3_controller 950,21381
static void opl3_bender(975,21847
static int opl3_alloc_voice(983,22000
static void opl3_setup_voice(1049,23270
static struct synth_operations opl3_operations 1062,23656
int opl3_init(1087,24024
int io 1183,26128
int me;1184,26141
int init_module 1186,26150
void cleanup_module(1208,26619

drivers/sound/sb_card.c,694
static int sbmpu 28,527
void attach_sb_card(30,550
int probe_sb(38,721
void unload_sb(109,2479
int sb_be_quiet=115,2595
extern int esstype;116,2614
static struct address_info config;120,2670
static struct address_info config_mpu;121,2705
int mpu_io 129,2930
int io 130,2946
int irq 131,2959
int dma 132,2973
int dma16 133,2987
int type 134,3044
int mad16 135,3102
int trix 136,3170
int pas2 137,3235
int support 138,3300
int sm_games 139,3368
int acer 140,3415
void *smw_free 155,3758
int init_module(157,3782
void cleanup_module(192,4521
int             sm_games 206,4739
int             sm_games 208,4775
int             acer 211,4834
int             acer 213,4866

drivers/sound/cs4232.c,897
#define KEY_PORT	54,1839
#define CSN_NUM	55,1893
static void CS_OUT(57,1943
#define CS_OUT2(CS_OUT262,2004
#define CS_OUT3(CS_OUT363,2050
static int mpu_base 65,2109
static int synth_base 66,2147
static int mpu_detected 67,2189
int probe_cs4232_mpu(69,2219
void attach_cs4232_mpu(81,2397
static unsigned char crystal_key[86,2484
static void sleep(94,2757
int probe_cs4232(100,2864
void attach_cs4232(218,5690
void unload_cs4232(272,7035
void unload_cs4232_mpu(311,7929
int             io 318,8050
int             irq 319,8075
int             dma 320,8101
int             dma2 321,8127
int             mpuio 322,8154
int             mpuirq 323,8182
int             synthio 332,8350
int             synthirq 333,8380
EXPORT_NO_SYMBOLS;337,8465
struct address_info cfg;339,8485
struct address_info mpu_cfg;340,8510
int init_module(347,8628
void cleanup_module(394,9569

drivers/sound/dev_table.c,911
#define _DEV_TABLE_C_18,319
int softoss_dev 21,368
int sound_started 22,389
int snd_find_driver(25,447
static void start_services(36,607
start_cards(60,990
void sndtable_init(117,2294
void sound_unload_drivers(123,2341
void sound_unload_driver(157,2988
int sndtable_probe(186,3552
int sndtable_init_card(243,5244
int sndtable_get_cardcount(289,6658
int sndtable_identify_card(294,6757
void sound_setup(316,7146
struct address_info * sound_getconf(382,8659
int sound_install_audiodrv(401,9011
int sound_install_mixer(469,10690
void sound_unload_audiodev(515,11817
int sound_alloc_audiodev(525,11964
int sound_alloc_mididev(536,12140
int sound_alloc_synthdev(551,12353
int sound_alloc_mixerdev(567,12545
int sound_alloc_timerdev(578,12717
void sound_unload_mixerdev(594,12927
void sound_unload_mididev(603,13050
void sound_unload_synthdev(614,13200
void sound_unload_timerdev(620,13283

drivers/sound/gus_card.c,770
int             gus_base 35,743
int             gus_no_wave_dma 36,799
extern int      gus_wave_volume;37,837
extern int      gus_pcm_volume;38,870
extern int      have_gus_max;39,902
int             gus_pnp_flag 40,932
static int      db16 42,986
void attach_gus_card(45,1051
int probe_gus(66,1802
void unload_gus(112,2927
void gusintr(128,3350
int probe_gus_db16(187,4406
void attach_gus_db16(192,4527
void unload_gus_db16(206,4831
static struct address_info config;221,5070
int             io 228,5202
int             irq 229,5227
int             dma 230,5253
int             dma16 231,5279
int             type 232,5347
int             gus16 233,5389
static int      no_wave_dma 235,5437
int init_module(252,5802
void cleanup_module(285,6442

drivers/sound/gus_midi.c,1040
static int      midi_busy 23,432
static int      my_dev;24,481
static int      output_used 25,505
static volatile unsigned char gus_midi_control;26,538
static unsigned char tmp_queue[30,654
extern int      gus_pnp_flag;31,691
static volatile int qlen;32,721
static volatile unsigned char qhead,33,747
static volatile unsigned char qhead, qtail;33,747
extern int      gus_base,34,791
extern int      gus_base, gus_irq,34,791
extern int      gus_base, gus_irq, gus_dma;34,791
extern int     *gus_osp;35,835
static int GUS_MIDI_STATUS(37,861
static int gus_midi_open(42,926
static int dump_to_midi(70,1504
static void gus_midi_close(98,1930
static int gus_midi_out(108,2072
static int gus_midi_start_read(155,2685
static int gus_midi_end_read(160,2741
static void gus_midi_kick(165,2795
static int gus_midi_buffer_status(169,2835
#define MIDI_SYNTH_NAME	188,3125
#define MIDI_SYNTH_CAPS	189,3174
static struct midi_operations gus_midi_operations 192,3239
void gus_midi_init(213,3565
void gus_midi_interrupt(231,3928

drivers/sound/gus_vol.c,146
#define GUS_VOLUME	18,381
extern int      gus_wave_volume;21,418
unsigned short gus_adagio_vol(38,1244
unsigned short gus_linear_vol(130,2964

drivers/sound/gus_wave.c,7101
#define GUSPNP_AUTODETECT22,577
#define GUS_BANK_SIZE 30,700
#define MAX_SAMPLE	32,764
#define MAX_PATCH	33,787
#define NOT_SAMPLE	35,810
struct voice_infovoice_info37,837
#define LMODE_FINISH	50,1194
#define LMODE_PCM	51,1218
#define LMODE_PCM_STOP	52,1239
#define VMODE_HALT	54,1316
#define VMODE_ENVELOPE	55,1338
#define VMODE_START_NOTE	56,1364
static struct voice_alloc_info *voice_alloc;75,1795
static struct address_info *gus_hw_config;76,1840
extern int      gus_base;77,1883
extern int      gus_irq,78,1909
extern int      gus_irq, gus_dma;78,1909
extern int      gus_pnp_flag;79,1943
extern int      gus_no_wave_dma;80,1973
static int      gus_dma2 81,2006
static int      dual_dma_mode 82,2037
static long     gus_mem_size 83,2072
static long     free_mem_ptr 84,2106
static int      gus_busy 85,2140
static int      gus_no_dma 86,2170
static int      nr_voices 87,2202
static int      gus_devnum 88,2233
static int      volume_base,89,2265
static int      volume_base, volume_scale,89,2265
static int      volume_base, volume_scale, volume_method;89,2265
static int      gus_recmask 90,2323
static int      recording_active 91,2369
static int      only_read_access 92,2407
static int      only_8_bits 93,2445
int             iw_mode 95,2479
int             gus_wave_volume 96,2508
int             gus_pcm_volume 97,2546
int             have_gus_max 98,2583
static int      gus_line_vol 99,2617
static unsigned char mix_image 100,2670
int             gus_timer_enabled 102,2710
static int      active_device 109,2897
#define GUS_DEV_WAVE	111,2933
#define GUS_DEV_PCM_DONE	112,2980
#define GUS_DEV_PCM_CONTINUE	113,3039
static int      gus_audio_speed;115,3111
static int      gus_audio_channels;116,3144
static int      gus_audio_bits;117,3180
static int      gus_audio_bsize;118,3212
static char     bounce_buf[119,3245
static struct wait_queue *dram_sleeper 121,3327
#define MAX_PCM_BUFFERS	127,3423
static int      pcm_bsize,129,3494
static int      pcm_bsize, pcm_nblk,129,3494
static int      pcm_bsize, pcm_nblk, pcm_banksize;129,3494
static int      pcm_datasize[130,3545
static volatile int pcm_head,131,3592
static volatile int pcm_head, pcm_tail,131,3592
static volatile int pcm_head, pcm_tail, pcm_qlen;131,3592
static volatile int pcm_active;132,3642
static volatile int dma_active;133,3674
static int      pcm_opened 134,3706
static int      pcm_current_dev;135,3738
static int      pcm_current_block;136,3771
static unsigned long pcm_current_buf;137,3806
static int      pcm_current_count;138,3844
static int      pcm_current_intrflag;139,3879
extern int     *gus_osp;141,3918
static struct voice_info voices[143,3944
static int      freq_div_table[145,3982
static struct patch_info *samples 168,4383
static long     sample_ptrs[169,4425
static int      sample_map[170,4470
static int      free_sample;171,4502
static int      mixer_type 172,4531
static int      patch_table[175,4565
static int      patch_map[176,4605
static struct synth_info gus_info 178,4637
#define	INSTANT_RAMP	192,5221
#define FAST_RAMP	193,5279
static void reset_sample_memory(195,5329
void gus_delay(216,5716
static void gus_poke(224,5793
static unsigned char gus_peek(240,6150
void gus_write8(259,6530
static unsigned char gus_read8(272,6780
static unsigned char gus_look8(287,7056
static void gus_write16(302,7330
static unsigned short gus_read16(318,7645
static unsigned short gus_look16(337,7968
static void gus_write_addr(356,8295
static void gus_select_voice(394,9232
static void gus_select_max_voices(401,9342
static void gus_voice_on(414,9583
static void gus_voice_off(421,9746
static void gus_voice_mode(426,9826
static void gus_voice_freq(436,10100
static void gus_voice_volume(451,10486
static void gus_voice_balance(457,10650
static void gus_ramp_range(462,10760
static void gus_ramp_rate(468,10942
static void gus_rampon(473,11088
static void gus_ramp_mode(482,11263
static void gus_rampoff(492,11536
static void gus_set_voice_pos(497,11596
static void gus_voice_init(512,11990
static void gus_voice_init2(530,12392
static void step_envelope(552,13030
static void init_envelope(617,14499
static void start_release(625,14632
static void gus_voice_fade(641,15054
static void gus_reset(683,15959
static void gus_initialize(699,16202
static void pnp_mem_init(856,19954
#define CHUNK_SIZE 859,20006
#define BANK_SIZE 860,20036
#define CHUNKS_PER_BANK 861,20068
int gus_wave_detect(1025,24689
static int guswave_ioctl(1098,26140
static int guswave_set_instr(1124,26625
static int guswave_kill_note(1157,27434
static void guswave_aftertouch(1178,27797
static void guswave_panning(1182,27867
static void guswave_volume_method(1188,27995
static void compute_volume(1194,28138
static void compute_and_set_volume(1221,28846
static void dynamic_volume_change(1278,29928
static void guswave_controller(1320,30731
static int guswave_start_note2(1378,31973
static int guswave_start_note(1573,37095
static void guswave_reset(1634,38626
static int guswave_open(1645,38750
static void guswave_close(1678,39397
static int guswave_load_patch(1688,39537
static void guswave_hw_control(1949,45669
static int gus_audio_set_speed(2107,48897
static int gus_audio_set_channels(2131,49372
static int gus_audio_set_bits(2143,49590
static int gus_audio_ioctl(2158,49785
static void gus_audio_reset(2210,50797
static int saved_iw_mode;2219,50938
static int gus_audio_open(2221,50988
static void gus_audio_close(2266,51872
static void gus_audio_update_volume(2282,52129
static void play_next_pcm_block(2300,52512
static void gus_transfer_output_block(2398,54915
static void gus_uninterleave8(2484,57029
static void gus_uninterleave16(2499,57385
static void gus_audio_output_block(2514,57768
static void gus_audio_start_input(2537,58376
static int gus_audio_prepare_for_input(2559,58871
static int gus_audio_prepare_for_output(2577,59299
static int gus_local_qlen(2608,60009
static struct audio_driver gus_audio_driver 2614,60068
static void guswave_setup_voice(2628,60324
static void guswave_bender(2643,60860
static int guswave_alloc(2659,61230
static struct synth_operations guswave_operations 2703,61941
static void set_input_volumes(2728,62365
#define MIX_DEVS	2766,63123
int gus_default_mixer_ioctl(2769,63213
static struct mixer_operations gus_mixer_operations 2895,65754
static int gus_default_mixer_init(2902,65869
void gus_wave_init(2927,66331
void gus_wave_unload(3169,72116
static void do_loop_irq(3202,72887
static void do_volume_irq(3287,74617
void gus_voice_irq(3344,75870
void guswave_dma_irq(3391,76718
static volatile int select_addr,3442,77764
static volatile int select_addr, data_addr;3442,77764
static volatile int curr_timer 3443,77808
void gus_timer_command(3445,77845
static void arm_timer(3460,78115
static unsigned int gus_tmr_start(3480,78604
static void gus_tmr_disable(3501,78991
static void gus_tmr_restart(3507,79105
static struct sound_lowlev_timer gus_tmr 3516,79305
static void gus_tmr_install(3525,79413

drivers/sound/ics2101.c,417
#define MIX_DEVS	25,505
extern int     *gus_osp;29,623
extern int      gus_base;30,648
static int      volumes[31,674
static int      left_fix[32,712
static int      right_fix[34,772
static int scale_vol(37,834
static void write_mix(66,1235
static int set_volumes(97,1771
static int ics2101_mixer_ioctl(119,2130
static struct mixer_operations ics2101_mixer_operations 209,3844
ics2101_mixer_init(217,3974

drivers/sound/mad16.c,1906
#define MAD16_CDSEL 76,2656
#define MAD16_CONF 77,2690
static int      mad16_conf;79,2724
static int      mad16_cdsel;80,2752
static int      already_initialized 88,2828
#define C928	90,2870
#define MOZART	91,2885
#define C929	92,2902
#define C930	93,2917
#define C924 94,2932
#define MC0_PORT	108,3349
#define MC1_PORT	109,3389
#define MC2_PORT	110,3462
#define MC3_PORT	111,3531
#define PASSWD_REG	112,3554
#define MC4_PORT	113,3579
#define MC5_PORT	114,3602
#define MC6_PORT	115,3625
#define MC7_PORT	116,3648
#define MC8_PORT	117,3671
#define MC9_PORT	118,3694
#define MC10_PORT	119,3717
#define MC11_PORT	120,3741
#define MC12_PORT	121,3765
static int      board_type 123,3790
static int     *mad16_osp;125,3826
static int	c931_detected;126,3853
static char	c924pnp 127,3913
static int	debug 128,3972
#define DDB(DDB133,4047
static unsigned char mad_read(135,4079
static void mad_write(181,4863
static int detect_c930(222,5601
static int detect_mad16(295,7272
static int wss_init(346,8623
static int init_c930(397,9965
static int chip_detect(457,11236
int probe_mad16(536,12957
void attach_mad16(646,15281
void attach_mad16_mpu(720,16937
int probe_mad16_mpu(747,17516
void unload_mad16(854,19610
unload_mad16_mpu(865,19856
int		mpu_io 882,20196
int		mpu_irq 883,20213
int             io 884,20231
int             dma 885,20256
int             dma16 886,20282
int             irq 887,20350
int             cdtype 889,20377
int             cdirq 890,20405
int             cdport 891,20432
int             cddma 892,20464
int             opl4 893,20491
int             joystick 894,20517
EXPORT_NO_SYMBOLS;910,20863
static int found_mpu;912,20883
static int dma_map[915,20907
static int irq_map[921,21023
struct address_info config;929,21135
struct address_info config_mpu;930,21163
int init_module(932,21196
void cleanup_module(1062,23463

drivers/sound/maui.c,1027
#define USE_SEQ_MACROS25,500
#define USE_SIMPLE_MACROS26,523
static int      maui_base 34,650
static volatile int irq_ok 36,686
static int     *maui_osp;37,718
#define HOST_DATA_PORT	39,745
#define HOST_STAT_PORT	40,784
#define HOST_CTRL_PORT	41,823
#define STAT_TX_INTR	43,863
#define STAT_TX_AVAIL	44,889
#define STAT_TX_IENA	45,916
#define STAT_RX_INTR	46,942
#define STAT_RX_AVAIL	47,968
#define STAT_RX_IENA	48,995
static unsigned char *maui_os 56,1202
static int maui_osLen 57,1240
static int maui_wait(60,1275
static int maui_read(92,1722
static int maui_write(99,1827
static void mauiintr(110,2013
static int download_code(115,2098
static int maui_init(188,3307
static int maui_short_wait(251,4527
static int maui_load_patch(265,4678
int probe_maui(326,6063
void attach_maui(406,7871
void unload_maui(440,8542
EXPORT_NO_SYMBOLS;457,8819
int io 459,8839
int irq 460,8852
static int fw_load 462,8867
struct address_info cfg;464,8892
int init_module(470,8979
void cleanup_module(493,9464

drivers/sound/midi_synth.c,965
#define USE_SEQ_MACROS19,499
#define USE_SIMPLE_MACROS20,522
#define _MIDI_SYNTH_C_26,596
static int      midi2synth[30,645
static int      sysex_state[31,687
static unsigned char prev_out_status[33,736
#define STORE(STORE36,814
#define STORE(STORE38,839
#define _seqbuf 47,955
#define _seqbufptr 48,976
#define _SEQ_ADVBUF(_SEQ_ADVBUF49,997
do_midi_msg(52,1032
midi_outc(97,1961
prefix_cmd(122,2482
midi_synth_input(131,2673
leave_sysex(242,5247
midi_synth_output(260,5548
int midi_synth_ioctl(267,5607
midi_synth_kill_note(289,5966
midi_synth_set_instr(355,7400
midi_synth_start_note(377,7837
midi_synth_reset(418,8714
midi_synth_open(425,8769
midi_synth_close(460,9494
midi_synth_hw_control(478,9813
midi_synth_load_patch(483,9875
void midi_synth_panning(560,11635
void midi_synth_aftertouch(564,11702
midi_synth_controller(595,12393
midi_synth_bender(623,13034
midi_synth_setup_voice(654,13733
midi_synth_send_sysex(659,13798

drivers/sound/midibuf.c,971
#define MIDIBUF_C20,451
#define MAX_QUEUE_SIZE	30,571
static struct wait_queue *midi_sleeper[32,600
static struct wait_queue *input_sleeper[33,663
struct midi_bufmidi_buf35,728
struct midi_parmsmidi_parms41,810
static struct midi_buf *midi_out_buf[48,901
static struct midi_buf *midi_in_buf[49,962
static struct midi_parms parms[50,1022
static struct timer_list poll_timer 55,1115
static volatile int open_devs 59,1188
#define DATA_AVAIL(DATA_AVAIL61,1224
#define SPACE_AVAIL(SPACE_AVAIL62,1255
#define QUEUE_BYTE(QUEUE_BYTE64,1305
#define REMOVE_BYTE(REMOVE_BYTE74,1539
static void drain_midi_queue(84,1771
static void midi_input_intr(97,2075
static void midi_output_intr(115,2379
static void midi_poll(122,2449
int MIDIbuf_open(159,3268
void MIDIbuf_release(216,4666
int MIDIbuf_write(264,5528
int MIDIbuf_read(317,6406
int MIDIbuf_ioctl(364,7321
unsigned int MIDIbuf_poll(399,8071
void MIDIbuf_init(419,8462
int MIDIbuf_avail(428,8580

drivers/sound/pas2_card.c,1299
static unsigned char dma_bits[14,210
static unsigned char irq_bits[18,274
static unsigned char sb_irq_bits[22,364
static unsigned char sb_dma_bits[27,493
int             translate_code 36,700
static int      pas_intr_mask 37,736
static int      pas_irq 38,771
static int      pas_sb_base 39,800
static int	joystick 41,861
static int 	joystick 43,892
static int 	symphony 46,945
static int 	symphony 48,977
static int	broken_bus_clock 51,1034
static int	broken_bus_clock 53,1073
char            pas_model 57,1115
static char    *pas_model_names[58,1146
unsigned char pas_read(74,1523
void pas_write(79,1601
static void pasintr(86,1768
int pas_set_intr(109,2151
int pas_remove_intr(120,2279
extern struct address_info sbhw_config;135,2561
static int config_pas_hw(137,2602
static int detect_pas_hw(295,5911
void attach_pas_card(336,6989
int probe_pas(371,7632
void unload_pas(376,7717
int             io 396,8170
int             irq 397,8195
int             dma 398,8221
int             dma16 399,8247
int             sb_io 401,8316
int             sb_irq 402,8343
int             sb_dma 403,8372
int             sb_dma16 404,8401
struct address_info config;420,8715
struct address_info sbhw_config;421,8743
int init_module(423,8777
void cleanup_module(449,9323

drivers/sound/msnd.c,733
#  define LINUX2029,1092
#define LOGNAME	52,1571
#define MSND_MAX_DEVS	54,1597
static multisound_dev_t		*devs[56,1623
static int			num_devs;57,1670
int msnd_register(59,1694
void msnd_unregister(78,1927
int msnd_get_num_devs(97,2214
multisound_dev_t *msnd_get_dev(102,2265
void msnd_fifo_init(116,2460
void msnd_fifo_free(121,2516
int msnd_fifo_alloc(129,2610
void msnd_fifo_make_empty(144,2808
int msnd_fifo_write(149,2886
int msnd_fifo_read(187,3583
int msnd_wait_TXDE(225,4234
int msnd_wait_HC0(237,4440
int msnd_send_dsp_cmd(249,4642
int msnd_send_word(266,5008
int msnd_upload_host(283,5357
int msnd_enable_irq(302,5725
int msnd_disable_irq(329,6408
int init_module(384,7771
void cleanup_module(389,7809

drivers/sound/pas2_midi.c,740
static int      midi_busy 21,411
static int      my_dev;22,460
int pas2_mididev=24,485
static unsigned char tmp_queue[26,507
static volatile int qlen;27,544
static volatile unsigned char qhead,28,570
static volatile unsigned char qhead, qtail;28,570
static int pas_midi_open(32,682
static void pas_midi_close(91,1661
static int dump_to_midi(103,1825
static int pas_midi_out(125,2455
static int pas_midi_start_read(172,3035
static int pas_midi_end_read(177,3091
static void pas_midi_kick(182,3145
static int pas_buffer_status(186,3185
#define MIDI_SYNTH_NAME	191,3242
#define MIDI_SYNTH_CAPS	192,3292
static struct midi_operations pas_midi_operations 195,3357
void pas_midi_init(212,3629
void pas_midi_interrupt(227,3921

drivers/sound/pas2_mixer.c,628
#define DEB(DEB25,478
extern int      translate_code;28,518
extern char     pas_model;29,550
extern int     *pas_osp;30,577
extern int      pas_audiodev;31,602
static int      rec_devices 33,633
static int      mode_control 34,713
#define POSSIBLE_RECORDING_DEVICES	36,748
#define SUPPORTED_MIXER_DEVICES	39,903
static int     *levels;43,1177
static int      default_levels[45,1202
mix_write(62,1554
mixer_output(81,2083
set_mode(110,2704
pas_mixer_set(119,2833
pas_mixer_reset(206,5384
static int pas_mixer_ioctl(218,5606
static struct mixer_operations pas_mixer_operations 312,7866
pas_init_mixer(320,7983

drivers/sound/pas2_pcm.c,1113
#define DEB(DEB25,565
#define PAS_PCM_INTRBITS 28,591
#define PCM_NON	33,671
#define PCM_DAC	34,689
#define PCM_ADC	35,707
static unsigned long pcm_speed 37,726
static unsigned char pcm_channels 38,782
static unsigned char pcm_bits 39,845
static unsigned char pcm_filter 40,908
static unsigned char pcm_mode 41,963
static unsigned long pcm_count 42,1004
static unsigned short pcm_bitsok 43,1040
static int      pcm_busy 44,1100
int             pas_audiodev 45,1130
static int      open_mode 46,1165
static int pcm_set_speed(48,1197
static int pcm_set_channels(119,2723
static int pcm_set_bits(135,3008
static int pas_audio_ioctl(152,3244
static void pas_audio_reset(202,4197
static int pas_audio_open(209,4367
static void pas_audio_close(236,4784
static void pas_audio_output_block(253,5065
static void pas_audio_start_input(300,6106
static void pas_audio_trigger(346,7142
static int pas_audio_prepare_for_input(365,7527
static int pas_audio_prepare_for_output(371,7637
static struct audio_driver pas_audio_driver 377,7748
void pas_pcm_init(394,8028
void pas_pcm_interrupt(416,8562

drivers/sound/pss.c,2785
#define REG(REG43,1166
#define	PSS_DATA	44,1196
#define	PSS_STATUS	45,1215
#define PSS_CONTROL	46,1236
#define	PSS_ID	47,1258
#define	PSS_IRQACK	48,1276
#define	PSS_PIO	49,1297
#define CONF_PSS	54,1347
#define CONF_WSS	55,1369
#define CONF_SB	56,1391
#define CONF_CDROM	57,1413
#define CONF_MIDI	58,1437
#define PSS_FLAG3 63,1484
#define PSS_FLAG2 64,1513
#define PSS_FLAG1 65,1542
#define PSS_FLAG0 66,1571
#define PSS_WRITE_EMPTY 67,1600
#define PSS_READ_FULL 68,1632
#define WSS_INDEX 73,1689
#define WSS_DATA 74,1709
#define WSS_INITIALIZING 79,1755
#define WSS_AUTOCALIBRATION 80,1785
#define NO_WSS_MIXER	82,1819
static int pss_synthLen 89,1912
static unsigned char *pss_synth 90,1941
static unsigned char pss_mixer 96,2075
static unsigned char pss_mixer 98,2117
typedef struct pss_mixerdata pss_mixerdata102,2162
} pss_mixerdata;pss_mixerdata108,2304
typedef struct pss_confdata pss_confdata110,2322
} pss_confdata;pss_confdata117,2496
static pss_confdata pss_data;119,2515
static pss_confdata *devc 120,2545
static int      pss_initialized 122,2585
static int      nonstandard_microcode 123,2622
static void pss_write(125,2666
int probe_pss(149,3355
static int set_irq(175,3985
static int set_io_base(201,4519
static int set_dma(211,4722
static int pss_reset_dsp(235,5190
static int pss_put_dspword(246,5442
static int pss_get_dspword(262,5687
static int pss_download_boot(278,5932
static void set_master_volume(367,7694
static void set_synth_volume(386,8580
static void set_bass(395,8779
static void set_treble(402,8950
static void pss_mixer_reset(409,9119
static void arg_to_volume_mono(427,9506
static void arg_to_volume_stereo(437,9660
static int ret_vol_mono(443,9822
static int ret_vol_stereo(448,9891
static int call_ad_mixer(453,9974
static int pss_mixer_ioctl 461,10199
static struct mixer_operations pss_mixer_operations 574,13347
void attach_pss(581,13454
int probe_pss_mpu(632,14636
static int pss_coproc_open(685,15864
static void pss_coproc_close(709,16369
static void pss_coproc_reset(714,16444
static int download_boot_block(724,16702
static int pss_coproc_ioctl(738,17082
static coproc_operations pss_coproc_operations 917,21398
void attach_pss_mpu(927,21553
int probe_pss_mss(936,21874
void attach_pss_mss(978,23053
void unload_pss(1010,23853
void unload_pss_mpu(1016,23996
void unload_pss_mss(1023,24167
int pss_io 1030,24268
int mss_io 1032,24286
int mss_irq 1033,24303
int mss_dma 1034,24321
int mpu_io 1036,24340
int mpu_irq 1037,24357
struct address_info cfgpss 1039,24376
struct address_info cfgmpu 1040,24436
struct address_info cfgmss 1041,24509
static int fw_load 1060,25811
static int pssmpu 1061,25835
int init_module(1067,25914
void cleanup_module(1106,26652

drivers/sound/sb_audio.c,1834
int sb_audio_open(34,750
void sb_audio_close(98,2571
static void sb_set_output_parms(129,3472
static void sb_set_input_parms(150,3933
static void sb1_audio_output_block(174,4414
static void sb1_audio_start_input(201,5087
static void sb1_audio_trigger(233,5820
static int sb1_audio_prepare_for_input(259,6319
static int sb1_audio_prepare_for_output(275,6656
static int sb1_audio_set_speed(290,6992
static short sb1_audio_set_channels(316,7459
static unsigned int sb1_audio_set_bits(322,7593
static void sb1_audio_halt_xfer(328,7736
static void sb20_audio_output_block(343,7967
static void sb20_audio_start_input(380,8904
static void sb20_audio_trigger(420,9929
static int sb201_audio_set_speed(449,10472
static int sbpro_audio_prepare_for_input(476,11012
static int sbpro_audio_prepare_for_output(505,11841
static int sbpro_audio_set_speed(547,12924
static short sbpro_audio_set_channels(564,13240
static int jazz16_audio_set_speed(580,13589
static int sb16_audio_set_speed(608,14066
static unsigned int sb16_audio_set_bits(626,14424
static int sb16_audio_prepare_for_input(641,14681
static int sb16_audio_prepare_for_output(667,15242
static void sb16_audio_output_block(693,15804
static void sb16_audio_start_input(745,17069
static void sb16_audio_trigger(784,18049
static unsigned char lbuf8[838,19040
static signed short *lbuf16 839,19074
#define LBUFCOPYSIZE 840,19127
sb16_copy_from_user(842,19165
sb16_audio_mmap(923,21410
static struct audio_driver sb1_audio_driver 929,21509
static struct audio_driver sb20_audio_driver 949,21908
static struct audio_driver sb201_audio_driver 969,22297
static struct audio_driver sbpro_audio_driver 989,22691
static struct audio_driver jazz16_audio_driver 1009,23091
static struct audio_driver sb16_audio_driver 1029,23505
void sb_audio_init(1052,23944

drivers/sound/sound_syms.c,63
char sound_syms_symbol;12,237
extern int softoss_dev;50,1218

drivers/sound/sb_common.c,1355
static sb_devc *detected_devc 37,921
static sb_devc *last_devc 38,1002
static unsigned char jazz_irq_bits[40,1069
static unsigned char jazz_dma_bits[44,1162
static int jazz16_base 52,1284
static unsigned char jazz16_bits 53,1332
static unsigned char *smw_ucode 62,1521
static int      smw_ucodeLen 63,1561
sb_devc *last_sb 67,1604
int sb_dsp_command(69,1652
int sb_dsp_get_byte(96,2336
static void sb_intr 108,2491
static void pci_intr(182,3851
static void sbintr(190,3963
int sb_dsp_reset(210,4235
static void dsp_get_vers(239,4725
static int sb16_set_dma_hw(268,5235
static void sb16_set_mpu_port(287,5637
static int sb16_set_irq_hw(311,6188
static void relocate_Jazz16(337,6535
static int init_Jazz16(373,7165
static void relocate_ess1688(433,8669
int sb_dsp_detect(493,9837
int sb_dsp_init(619,12573
void sb_dsp_disable_midi(861,19669
void sb_dsp_disable_recording(865,19712
void sb_dsp_unload(872,19889
void sb_setmixer(916,20929
unsigned int sb_getmixer(933,21284
void sb_chgmixer953,21624
static void smw_putmem(969,21897
static unsigned char smw_getmem(983,22196
static int smw_midi_init(999,22516
static int init_Jazz16_midi(1106,25143
void attach_sbmpu(1181,26480
int probe_sbmpu(1189,26686
void unload_sbmpu(1245,27908
void unload_sbmpu(1253,28078
int probe_sbmpu(1257,28133
void attach_sbmpu(1262,28197

drivers/sound/sb_midi.c,404
static int sb_midi_open(32,790
static void sb_midi_close(73,1487
static int sb_midi_out(90,1759
static int sb_midi_start_read(108,2023
static int sb_midi_end_read(113,2078
static int sb_midi_ioctl(125,2253
void sb_midi_interrupt(130,2343
#define MIDI_SYNTH_NAME	148,2615
#define MIDI_SYNTH_CAPS	149,2660
static struct midi_operations sb_midi_operations 152,2711
void sb_dsp_midi_init(171,2963

drivers/sound/sb_mixer.c,1342
#define __SB_MIXER_C__22,546
#define SBPRO_RECORDING_DEVICES	29,630
#define SGNXPRO_RECORDING_DEVICES 32,760
#define SBPRO_MIXER_DEVICES	34,819
#define SGNXPRO_MIXER_DEVICES	42,1194
#define SB16_RECORDING_DEVICES	45,1309
#define SB16_OUTFILTER_DEVICES	48,1420
#define SB16_MIXER_DEVICES	51,1512
#define ALS007_MIXER_DEVICES	60,1950
static mixer_tab sbpro_mix 65,2108
static mixer_tab sgnxpro_mix 82,2788
static mixer_tab sb16_mix 101,3588
static mixer_tab als007_mix 118,4372
static int smg_default_levels[141,5302
static int sb_default_levels[162,5791
static unsigned char sb16_recmasks_L[183,6279
static unsigned char sb16_recmasks_R[201,6776
static char     smw_mix_regs[219,7273
static int      sbmixnum 240,7929
void sb_mixer_set_stereo(244,8009
static int detect_mixer(249,8141
static void change_bits(255,8234
static int sb_mixer_get(269,8684
void smw_mixer_init(276,8829
int sb_common_mixer_set(293,9305
static int smw_mixer_set(331,10106
static int sb_mixer_set(369,11276
static void set_recsrc(407,12025
static int set_recmask(412,12162
static int set_outmask(514,14312
static int sb_mixer_ioctl(547,14883
static struct mixer_operations sb_mixer_operations 626,16644
static struct mixer_operations als007_mixer_operations 633,16744
static void sb_mixer_reset(640,16853
int sb_mixer_init(661,17330

drivers/sound/sequencer.c,2396
#define SEQUENCER_C22,496
static int      sequencer_ok 31,704
static struct sound_timer_operations *tmr;32,738
static int      tmr_no 33,781
static int      pending_timer 34,841
extern unsigned long seq_time;35,910
static int      obsolete_api_used 37,942
static int      max_mididev 43,1091
static int      max_synthdev 44,1124
#define SEQ_1	52,1302
#define SEQ_2	53,1318
static int      seq_mode 54,1334
static struct wait_queue *seq_sleeper 56,1369
static struct wait_queue *midi_sleeper 57,1415
static int      midi_opened[59,1463
static int      midi_written[63,1516
static unsigned long prev_input_time 67,1570
static int      prev_event_time;68,1612
#define EV_SZ	72,1667
#define IEV_SZ	73,1683
static unsigned char *queue 75,1701
static unsigned char *iqueue 76,1737
static volatile int qhead 78,1775
static volatile int iqhead 79,1827
static volatile int seq_playing 80,1882
static volatile int sequencer_busy 81,1919
static int      output_threshold;82,1959
static long     pre_event_timeout;83,1993
static unsigned synth_open_mask;84,2028
int sequencer_read(95,2304
static void sequencer_midi_output(137,3028
void seq_copy_to_input(144,3103
static void sequencer_midi_input(169,3581
void seq_input_event(196,4148
int sequencer_write(223,4740
static int seq_queue(339,7079
static int extended_event(372,7678
static int find_voice(427,8717
static int alloc_voice(439,8959
static void seq_chn_voice_event(454,9314
#define dev 456,9374
#define cmd 457,9399
#define chn 458,9424
#define note 459,9449
#define parm 460,9475
static void seq_chn_common_event(536,10970
static int seq_timing_event(633,13269
static void seq_local_event(714,14670
static void seq_sysex_message(731,14950
static int play_event(754,15379
static void seq_startplay(901,18179
static void reset_controllers(934,18727
static void setup_mode2(941,18887
int sequencer_open(975,19592
void seq_drain_midi_queues(1127,22502
void sequencer_release(1157,22978
static int seq_sync(1219,24206
static void midi_outc(1234,24469
static void seq_reset(1260,24968
static void seq_panic(1339,26778
int sequencer_ioctl(1360,27196
unsigned int sequencer_poll(1570,32483
void sequencer_timer(1593,32923
int note_to_freq(1598,32988
#define BASE_OCTAVE	1612,33265
unsigned long compute_finetune(1631,33557
void sequencer_init(1685,34496
void sequencer_unload(1714,35097

drivers/sound/soundmodule.h,223
#define _SOUNDMODULE_H2,23
extern struct notifier_block *sound_locker;6,76
#define SOUND_LOCK	11,204
#define SOUND_LOCK_END	12,273
static int my_notifier_call(14,356
static struct notifier_block sound_notifier=23,523

drivers/sound/sound_timer.c,994
static volatile int initialized 21,423
static volatile time_t tmr_offs,22,489
static volatile time_t tmr_offs, tmr_ctr;22,489
static volatile unsigned long ticks_offs;23,531
static volatile int curr_tempo,24,573
static volatile int curr_tempo, curr_timebase;24,573
static volatile unsigned long curr_ticks;25,620
static volatile unsigned long next_event_time;26,662
static unsigned long prev_event_time;27,709
static volatile unsigned long usecs_per_tmr;28,747
static struct sound_lowlev_timer *tmr 30,830
static unsigned long tmr2ticks(32,877
void reprogram_timer(46,1198
void sound_timer_syncinterval(69,1638
static void tmr_reset(81,1917
static int timer_open(96,2150
static void timer_close(108,2324
static int timer_event(114,2418
static unsigned long timer_get_time(175,3411
static int timer_ioctl(182,3507
static void timer_arm(256,4778
static struct sound_timer_operations sound_timer 267,4978
void sound_timer_interrupt(280,5190
void  sound_timer_init(300,5477

drivers/sound/sscape.c,2820
#define MIDI_DATA 32,552
#define MIDI_CTRL 33,578
#define HOST_CTRL 34,604
#define TX_READY	35,630
#define RX_READY	36,652
#define HOST_DATA 37,674
#define ODIE_ADDR 38,700
#define ODIE_DATA 39,726
#define GA_INTSTAT_REG	45,786
#define GA_INTENA_REG	46,811
#define GA_DMAA_REG	47,835
#define GA_DMAB_REG	48,857
#define GA_INTCFG_REG	49,879
#define GA_DMACFG_REG	50,903
#define GA_CDCFG_REG	51,927
#define GA_SMCFGA_REG	52,950
#define GA_SMCFGB_REG	53,974
#define GA_HMCTL_REG	54,998
#define SSCAPE_DMA_A	60,1067
#define SSCAPE_DMA_B	61,1090
#define PORT(PORT63,1114
#define CMD_GEN_HOST_ACK	69,1210
#define CMD_GEN_MPU_ACK	70,1240
#define CMD_GET_BOARD_TYPE	71,1270
#define CMD_SET_CONTROL	72,1302
#define CMD_GET_CONTROL	73,1356
#define 	CTL_MASTER_VOL	74,1410
#define 	CTL_MIC_MODE	75,1437
#define 	CTL_SYNTH_VOL	76,1462
#define 	CTL_WAVE_VOL	77,1488
#define CMD_SET_EXTMIDI	78,1513
#define CMD_GET_EXTMIDI	79,1543
#define CMD_SET_MT32	80,1573
#define CMD_GET_MT32	81,1600
#define CMD_ACK	83,1628
typedef struct sscape_infosscape_info85,1652
} sscape_info;sscape_info95,1831
static struct sscape_info adev_info 97,1847
static struct sscape_info *devc 101,1894
static int sscape_mididev 102,1940
static char valid_interrupts_old[105,2051
static char valid_interrupts_new[109,2107
static char *valid_interrupts 113,2163
static char old_hardware 120,2309
static char old_hardware 122,2345
static void sleep(125,2383
static unsigned char sscape_read(131,2484
static void sscape_write(144,2722
static void host_open(155,2930
static void host_close(160,3052
static int host_write(165,3175
static int host_read(194,3672
static int host_command2(222,4084
static int host_command3(232,4302
static void set_mt32(242,4572
static void set_control(253,4819
static void do_dma(264,5090
static int verify_mpu(287,5796
static int sscape_coproc_open(313,6435
static void sscape_coproc_close(324,6611
static void sscape_coproc_reset(340,6930
static int sscape_download_boot(344,6983
static int download_boot_block(494,10158
static int sscape_coproc_ioctl(507,10478
static coproc_operations sscape_coproc_operations 536,11026
static int sscape_detected 546,11203
void attach_sscape(548,11236
#define SSCAPE_REGS 564,11905
static int detect_ga(679,14711
int probe_sscape(736,15919
int probe_ss_ms_sound(780,16821
void attach_ss_ms_sound(813,17567
void unload_sscape(885,19240
void unload_ss_ms_sound(893,19418
int             dma 905,19648
int             irq 906,19674
int             io 907,19700
int             mpu_irq 909,19726
int             mpu_io 910,19756
int		spea 912,19786
static int      mss 914,19803
struct address_info config;924,20035
struct address_info mpu_config;925,20063
int init_module(927,20096
void cleanup_module(966,20913

drivers/sound/sys_timer.c,729
static volatile int opened 25,594
static volatile time_t tmr_offs,26,643
static volatile time_t tmr_offs, tmr_ctr;26,643
static volatile unsigned long ticks_offs;27,685
static volatile int curr_tempo,28,727
static volatile int curr_tempo, curr_timebase;28,727
static volatile unsigned long curr_ticks;29,774
static volatile unsigned long next_event_time;30,816
static unsigned long prev_event_time;31,863
static struct timer_list def_tmr 36,955
tmr2ticks(40,1046
poll_def_tmr(57,1428
tmr_reset(83,1833
def_tmr_open(99,2065
def_tmr_close(120,2294
def_tmr_event(127,2383
def_tmr_get_time(189,3420
static int def_tmr_ioctl(198,3540
def_tmr_arm(268,4847
struct sound_timer_operations default_sound_timer 280,5038

drivers/sound/trix.c,1200
static unsigned char *trix_boot 32,642
static int trix_boot_len 33,682
static int kilroy_was_here 37,721
static int sb_initialized 38,778
static int mpu_initialized 39,809
static int *trix_osp 41,842
static int mpu 43,872
static unsigned char trix_read(45,893
static void trix_write(51,1054
static void download_boot(57,1235
static int trix_set_wss_port(84,1965
int probe_trix_wss(141,2941
attach_trix_wss(208,4674
int probe_trix_sb(278,6268
void attach_trix_sb(332,7353
void attach_trix_mpu(350,7676
int probe_trix_mpu(358,7857
void unload_trix_wss(423,9203
void unload_trix_mpu(441,9560
void unload_trix_sb(448,9705
int             io 457,9836
int             irq 458,9861
int             dma 459,9887
int             dma2 460,9913
int             sb_io 462,9981
int             sb_dma 463,10009
int             sb_irq 464,10038
int             mpu_io 466,10068
int             mpu_irq 467,10097
EXPORT_NO_SYMBOLS;469,10128
struct address_info config;481,10362
struct address_info sb_config;482,10390
struct address_info mpu_config;483,10421
static int      sb 485,10454
static int      fw_load;487,10479
int init_module(489,10505
void cleanup_module(552,11813

drivers/sound/uart401.c,1290
typedef struct uart401_devcuart401_devc31,656
uart401_devc;uart401_devc42,946
static uart401_devc *detected_devc 44,961
#define	DATAPORT 46,1005
#define	COMDPORT 47,1037
#define	STATPORT 48,1071
static int uart401_status(50,1106
#define input_avail(input_avail55,1181
#define output_ready(output_ready56,1245
static void uart401_cmd(58,1312
static int uart401_read(63,1405
static void uart401_write(68,1478
#define	OUTPUT_READY	73,1575
#define	INPUT_AVAIL	74,1601
#define	MPU_ACK	75,1626
#define	MPU_RESET	76,1648
#define	UART_MODE_ON	77,1671
static void uart401_input_loop(82,1805
void uart401intr(99,2252
uart401_open(114,2492
static void uart401_close(137,2919
static int uart401_out(145,3062
static int uart401_start_read(184,3887
static int uart401_end_read(189,3942
static void uart401_kick(194,3995
static int uart401_buffer_status(198,4034
#define MIDI_SYNTH_NAME	203,4092
#define MIDI_SYNTH_CAPS	204,4131
static struct midi_operations uart401_operations 207,4196
static void enter_uart_mode(226,4486
void attach_uart401(249,4952
static int reset_uart401(335,7150
int probe_uart401(384,8093
void unload_uart401(420,8758
int io 453,9369
int irq 454,9382
struct address_info hw;458,9442
int init_module(460,9467
void cleanup_module(477,9825

drivers/sound/uart6850.c,1479
static int uart6850_base 32,843
static int *uart6850_osp;34,878
#define	DATAPORT 36,905
#define	COMDPORT 37,940
#define	STATPORT 38,977
static int uart6850_status(40,1015
#define input_avail(input_avail45,1076
#define output_ready(output_ready46,1131
static void uart6850_cmd(48,1189
static int uart6850_read(53,1260
static void uart6850_write(58,1319
#define	OUTPUT_READY	63,1394
#define	INPUT_AVAIL	64,1450
#define	UART_RESET	66,1511
#define	UART_MODE_ON	67,1535
static int uart6850_opened 69,1562
static int uart6850_irq;70,1594
static int uart6850_detected 71,1619
static int my_dev;72,1653
static struct timer_list uart6850_timer 79,1818
static void uart6850_input_loop(83,1899
void m6850intr(107,2225
static void poll_uart6850(118,2430
static int uart6850_open(141,2781
static void uart6850_close(164,3220
static int uart6850_out(172,3361
static int uart6850_command(206,4004
static int uart6850_start_read(211,4083
static int uart6850_end_read(216,4139
static void uart6850_kick(221,4193
static int uart6850_buffer_status(225,4233
#define MIDI_SYNTH_NAME	232,4330
#define MIDI_SYNTH_CAPS	233,4371
static struct midi_operations uart6850_operations 236,4436
void attach_uart6850(253,4727
static int reset_uart6850(290,5500
int probe_uart6850(299,5589
void unload_uart6850(315,5903
int io 324,6054
int irq 325,6067
EXPORT_NO_SYMBOLS;330,6126
struct address_info cfg;332,6146
int init_module(334,6172
void cleanup_module(351,6416

drivers/sound/ad1848_mixer.h,865
#define MODE1_REC_DEVICES	26,845
#define SPRO_REC_DEVICES	29,954
#define MODE1_MIXER_DEVICES	32,1059
#define MODE2_MIXER_DEVICES	37,1222
#define MODE3_MIXER_DEVICES	43,1433
#define C930_MIXER_DEVICES	48,1595
#define SPRO_MIXER_DEVICES	53,1774
struct mixer_def mixer_def59,1996
static char mix_cvt[72,2685
typedef struct mixer_def mixer_ent;mixer_ent81,3033
typedef mixer_ent mixer_ents[mixer_ents82,3069
#define MIX_ENT(MIX_ENT93,3430
#define MIX_ENT2(MIX_ENT297,3662
static mixer_ents ad1848_mix_devices[106,4164
static mixer_ents iwave_mix_devices[126,5195
static mixer_ents c930_mix_devices[151,6480
static mixer_ents spro_mix_devices[171,7509
static int default_mixer_levels[195,8703
#define LEFT_CHN	216,9215
#define RIGHT_CHN	217,9234
#define	AUDIO_SPEAKER	224,9340
#define	AUDIO_HEADPHONE	225,9393
#define	AUDIO_LINE_OUT	226,9440

drivers/sound/sb.h,1672
#define DSP_RESET	5,67
#define DSP_READ	6,104
#define DSP_WRITE	7,140
#define DSP_COMMAND	8,177
#define DSP_STATUS	9,216
#define DSP_DATA_AVAIL	10,254
#define DSP_DATA_AVL16	11,296
#define MIXER_ADDR	12,338
#define MIXER_DATA	13,376
#define OPL3_LEFT	14,414
#define OPL3_RIGHT	15,451
#define OPL3_BOTH	16,489
#define DSP_CMD_SPKON	19,546
#define DSP_CMD_SPKOFF	20,574
#define DSP_CMD_DMAON	21,603
#define DSP_CMD_DMAOFF	22,631
#define IMODE_NONE	24,661
#define IMODE_OUTPUT	25,683
#define IMODE_INPUT	26,723
#define IMODE_INIT	27,761
#define IMODE_MIDI	28,783
#define NORMAL_MIDI	30,806
#define UART_MIDI	31,828
#define MDL_NONE	37,874
#define MDL_SB1	38,893
#define MDL_SB2	39,931
#define MDL_SB201	40,962
#define MDL_SBPRO	41,995
#define MDL_SB16	42,1028
#define MDL_SBPNP 43,1065
#define MDL_JAZZ	44,1108
#define MDL_SMW	45,1154
#define MDL_ESS	46,1212
#define MDL_AZTECH	47,1259
#define MDL_ES1868MIDI	48,1314
#define MDL_AEDSP	49,1367
#define MDL_ESSPCI	50,1413
#define SUBMDL_ALS007	52,1455
#define SUBMDL_ALS100	54,1556
#define SB_NO_MIDI	60,1670
#define SB_NO_MIXER	61,1700
#define SB_NO_AUDIO	62,1731
#define SB_NO_RECORDING	63,1762
#define SB_MIDI_ONLY	64,1822
#define SB_PCI_IRQ	65,1869
struct mixer_def mixer_def67,1921
typedef struct mixer_def mixer_tab[mixer_tab73,2016
typedef struct mixer_def mixer_ent;mixer_ent74,2059
typedef struct sb_devc sb_devc76,2096
#	define SBCAP_STEREO	SBCAP_STEREO85,2251
#	define SBCAP_16BITS	SBCAP_16BITS86,2284
	} sb_devc;sb_devc135,3551
#define	SB_PCI_ESSMAESTRO	141,3591
#define	SB_PCI_YAMAHA	142,3644
extern int acer;168,4638
extern sb_devc *last_sb;169,4655

drivers/sound/coproc.h,105
#define COPR_CUSTOM	9,142
#define COPR_MIDI	10,196
#define COPR_PCM	11,253
#define COPR_SYNTH	12,313

drivers/sound/dev_table.h,4778
#define _DEV_TABLE_H_16,328
#define SNDCARD_DESKPROXL	25,517
#define SNDCARD_VIDC	26,571
#define SNDCARD_SBPNP	27,613
#define SNDCARD_OPL3SA1	28,640
#define SNDCARD_OPL3SA1_SB	29,669
#define SNDCARD_OPL3SA1_MPU	30,700
#define SNDCARD_SOFTOSS	31,732
#define SNDCARD_VMIDI	32,761
#define SNDCARD_WAVEFRONT 33,788
#define SNDCARD_OPL3SA2 34,831
#define SNDCARD_OPL3SA2_MPU 35,874
#define SNDCARD_WAVEARTIST	36,917
#define SNDCARD_AD1816 37,948
extern int sound_started;60,1786
struct driver_info driver_info62,1813
struct card_info card_info73,2110
#define MAX_SUB_BUFFERS	85,2321
#define DMODE_NONE	87,2372
#define DMODE_OUTPUT	88,2394
#define DMODE_INPUT	89,2434
struct dma_buffparms dma_buffparms91,2473
#define DMA_BUSY	109,2767
#define DMA_RESTART	110,2795
#define DMA_ACTIVE	111,2826
#define DMA_STARTED	112,2856
#define DMA_EMPTY	113,2887
#define DMA_ALLOC_DONE	114,2917
#define DMA_SYNCING	115,2951
#define DMA_DIRTY	116,2982
#define DMA_POST	117,3011
#define DMA_NODMA	118,3039
#define DMA_NOTIMEOUT	119,3068
#define			DMA_MAP_MAPPED	148,3626
#define		 BUFF_EOF	161,3945
#define		 BUFF_DIRTY	162,4002
typedef struct coproc_operations coproc_operations169,4168
} coproc_operations;coproc_operations178,4449
struct audio_driver audio_driver180,4471
struct audio_operations audio_operations210,5667
#define NOTHING_SPECIAL 214,5730
#define NEEDS_RESTART	215,5760
#define DMA_AUTOMODE	216,5788
#define DMA_DUPLEX	217,5815
#define DMA_PSEUDO_AUTOMODE	218,5840
#define DMA_HARDSTOP	219,5873
#define DMA_EXACT	220,5900
#define DMA_NORESET	221,5924
#define		AM_NONE	243,6561
#define		AM_WRITE	244,6581
#define 	AM_READ	245,6610
#define CNV_MU_LAW	250,6700
struct mixer_operations mixer_operations258,6888
struct synth_operations synth_operations268,7041
#define	EMU_GM	298,8223
#define	EMU_XG	299,8261
#define MAX_SYSEX_BUF	300,8296
struct midi_input_info midi_input_info305,8382
#define MI_MAX	308,8444
#define MST_INIT	313,8606
#define MST_DATA	314,8627
#define MST_SYSEX	315,8648
struct midi_operations midi_operations320,8733
struct sound_lowlev_timer sound_lowlev_timer342,9367
struct sound_timer_operations sound_timer_operations351,9544
struct audio_operations *audio_devs[366,9900
struct audio_operations *audio_devs[MAX_AUDIO_DEV] = {NULL}; int num_audiodevs 366,9900
struct mixer_operations *mixer_devs[367,9984
struct mixer_operations *mixer_devs[MAX_MIXER_DEV] = {NULL}; int num_mixers 367,9984
struct synth_operations *synth_devs[368,10065
struct synth_operations *synth_devs[MAX_SYNTH_DEV+MAX_MIDI_DEV] = {NULL}; int num_synths 368,10065
struct midi_operations *midi_devs[369,10159
struct midi_operations *midi_devs[MAX_MIDI_DEV] = {NULL}; int num_midis 369,10159
extern struct sound_timer_operations default_sound_timer;372,10314
struct sound_timer_operations *sound_timer_devs[373,10372
int num_sound_timers 376,10471
struct sound_timer_operations *sound_timer_devs[378,10503
int num_sound_timers 381,10579
struct driver_info sound_drivers[388,10676
int num_sound_drivers 513,15695
struct card_info snd_installed_cards[524,15921
#define CONFIG_TRIX_DMA2 538,16378
#define CONFIG_MAD16_DMA2 567,17515
#define CONFIG_CS4232_DMA2 577,17873
#define CONFIG_OPL3SA2_DMA2 587,18244
#define CONFIG_SGALAXY_DMA2 597,18620
#define CONFIG_MSS_DMA2 605,18887
#define CONFIG_SB_DMA	625,19447
#define CONFIG_SB_DMA2	628,19502
#define CONFIG_GUS_DMA2 666,20692
int num_sound_cards 692,21471
static int max_sound_cards 693,21550
int num_sound_cards 696,21644
struct card_info snd_installed_cards[697,21669
static int max_sound_cards 698,21719
int trace_init 702,21819
int trace_init 704,21845
extern struct audio_operations * audio_devs[708,21879
extern struct audio_operations * audio_devs[MAX_AUDIO_DEV]; extern int num_audiodevs;708,21879
extern struct mixer_operations * mixer_devs[709,21965
extern struct mixer_operations * mixer_devs[MAX_MIXER_DEV]; extern int num_mixers;709,21965
extern struct synth_operations * synth_devs[710,22048
extern struct synth_operations * synth_devs[MAX_SYNTH_DEV+MAX_MIDI_DEV]; extern int num_synths;710,22048
extern struct midi_operations * midi_devs[711,22144
extern struct midi_operations * midi_devs[MAX_MIDI_DEV]; extern int num_midis;711,22144
extern struct sound_timer_operations * sound_timer_devs[712,22223
extern struct sound_timer_operations * sound_timer_devs[MAX_TIMER_DEV]; extern int num_sound_timers;712,22223
extern struct driver_info sound_drivers[714,22325
extern int num_sound_drivers;715,22368
extern struct card_info snd_installed_cards[716,22398
extern int num_sound_cards;717,22445
extern int trace_init;719,22474
#define AUDIO_DRIVER_VERSION	738,23303
#define MIXER_DRIVER_VERSION	739,23334

drivers/sound/finetune.h,88
  unsigned short finetune_table[11,256
  extern unsigned short finetune_table[31,1378

drivers/sound/gus_hw.h,1211
#define u_Base	6,26
#define u_Mixer	7,62
#define u_Status	8,87
#define u_TimerControl	9,124
#define u_TimerData	10,167
#define u_IRQDMAControl	11,207
#define u_MidiControl	12,251
#define 	MIDI_RESET	13,293
#define		MIDI_ENABLE_XMIT	14,319
#define		MIDI_ENABLE_RCV	15,350
#define u_MidiStatus	16,381
#define		MIDI_RCV_FULL	17,417
#define 	MIDI_XMIT_EMPTY	18,446
#define 	MIDI_FRAME_ERR	19,477
#define 	MIDI_OVERRUN	20,507
#define 	MIDI_IRQ_PEND	21,535
#define u_MidiData	22,564
#define u_Voice	23,603
#define u_Command	24,640
#define u_DataLo	25,678
#define u_DataHi	26,715
#define u_MixData 27,752
#define u_MixSelect 28,828
#define u_IrqStatus	29,904
#	define MIDI_TX_IRQ	30,934
#	define MIDI_RX_IRQ	31,989
#	define GF1_TIMER1_IRQ	32,1044
#	define GF1_TIMER2_IRQ	33,1102
#	define WAVETABLE_IRQ	34,1160
#	define ENVELOPE_IRQ	35,1217
#	define DMA_TC_IRQ	36,1279
#define ICS2101	38,1331
#	define ICS_MIXDEVS	39,1350
#	define DEV_MIC	40,1373
#	define DEV_LINE	41,1393
#	define DEV_CD	42,1414
#	define DEV_GF1	43,1433
#	define DEV_UNUSED	44,1453
#	define DEV_VOL	45,1475
#	define CHN_LEFT	47,1496
#	define CHN_RIGHT	48,1517
#define CS4231	49,1538
#define u_DRAMIO	50,1556

drivers/sound/gus_linearvol.h,41
static unsigned short gus_linearvol[1,0

drivers/sound/ad1816.c,2101
#define DEBUGNOISE(DEBUGNOISE57,1966
#define DEBUGINFO(DEBUGINFO58,1988
#define DEBUGLOG(DEBUGLOG59,2010
#define DEBUGWARN(DEBUGWARN60,2032
#define CHECK_FOR_POWER 62,2056
ad1816_info;ad1816_info97,3044
static int  nr_ad1816_devs 99,3058
static int  ad1816_clockfreq=101,3091
static volatile char irq2dev[105,3179
static int  ad_format_mask 110,3324
static ad1816_info dev_info[114,3456
static int ad_read 121,3634
static void ad_write 139,3968
static void ad1816_halt_input 158,4459
static void ad1816_halt_output 190,5114
static void ad1816_output_block 225,5855
static void ad1816_start_input 247,6345
static int ad1816_ioctl 269,6859
static int ad1816_prepare_for_input 275,6949
static int ad1816_prepare_for_output 322,8145
static void ad1816_trigger 368,9310
static void ad1816_halt 408,10323
static void ad1816_reset 414,10413
static int ad1816_set_speed 420,10498
static unsigned int ad1816_set_bits 440,10796
static short ad1816_set_channels 513,11812
static int ad1816_open 526,12047
static void ad1816_close 561,12715
static struct audio_driver ad1816_audio_driver 587,13203
void ad1816_interrupt 614,13659
struct mixer_def mixer_def667,14838
static char mix_cvt[674,14985
typedef struct mixer_def mixer_ent;mixer_ent683,15330
#define MIX_ENT(MIX_ENT694,15693
mixer_ent mix_devices[698,15842
static unsigned short default_mixer_levels[719,16823
#define LEFT_CHN	740,17344
#define RIGHT_CHN	741,17363
ad1816_set_recmask 746,17397
change_bits 819,18497
ad1816_mixer_get 841,18976
ad1816_mixer_set 857,19316
#define MIXER_DEVICES 956,21280
#define REC_DEVICES 967,21539
ad1816_mixer_reset 976,21743
ad1816_mixer_ioctl 993,22096
static struct mixer_operations ad1816_mixer_operations 1072,23838
int probe_ad1816 1086,24113
void attach_ad1816 1178,26509
void unload_card(1300,30061
void unload_ad1816 1334,30870
int             io 1375,31691
int             irq 1376,31716
int             dma 1377,31742
int             dma2 1378,31768
struct address_info cfg;1386,31920
int init_module(1389,31947
void cleanup_module(1409,32379

drivers/sound/iwmem.h,66
#define K 15,316
#define M 16,331
static int mem_decode[17,350

drivers/sound/dm.h,357
#define _DRIVERS_SOUND_DM_H2,28
struct dm_fm_voicedm_fm_voice14,290
struct dm_fm_notedm_fm_note41,646
struct dm_fm_paramsdm_fm_params53,801
#define FM_IOCTL_RESET 72,1027
#define FM_IOCTL_PLAY_NOTE 73,1062
#define FM_IOCTL_SET_VOICE 74,1097
#define FM_IOCTL_SET_PARAMS 75,1132
#define FM_IOCTL_SET_MODE 76,1167
#define FM_IOCTL_SET_OPL 77,1202

drivers/sound/midi_ctrl.h,42
static unsigned char ctrl_def_values[1,0

drivers/sound/midi_synth.h,103
static struct synth_info std_synth_info 20,956
static struct synth_operations std_midi_synth 23,1074

drivers/sound/opl3.h,2075
#define TEST_REGISTER	44,1409
#define   ENABLE_WAVE_SELECT	45,1439
#define TIMER1_REGISTER	47,1475
#define TIMER2_REGISTER	48,1507
#define TIMER_CONTROL_REGISTER	49,1539
#define   IRQ_RESET	50,1593
#define   TIMER1_MASK	51,1620
#define   TIMER2_MASK	52,1649
#define   TIMER1_START	53,1678
#define   TIMER2_START	54,1708
#define CONNECTION_SELECT_REGISTER	56,1739
#define   RIGHT_4OP_0	57,1797
#define   RIGHT_4OP_1	58,1826
#define   RIGHT_4OP_2	59,1855
#define   LEFT_4OP_0	60,1884
#define   LEFT_4OP_1	61,1912
#define   LEFT_4OP_2	62,1940
#define OPL3_MODE_REGISTER	64,1969
#define   OPL3_ENABLE	65,2020
#define   OPL4_ENABLE	66,2049
#define KBD_SPLIT_REGISTER	68,2079
#define   COMPOSITE_SINE_WAVE_MODE	69,2129
#define   KEYBOARD_SPLIT	70,2198
#define PERCOSSION_REGISTER	72,2230
#define   TREMOLO_DEPTH	73,2286
#define   VIBRATO_DEPTH	74,2317
#define	  PERCOSSION_ENABLE	75,2348
#define   BASSDRUM_ON	76,2382
#define   SNAREDRUM_ON	77,2411
#define   TOMTOM_ON	78,2441
#define   CYMBAL_ON	79,2468
#define   HIHAT_ON	80,2495
#define AM_VIB	88,2699
#define   TREMOLO_ON	89,2723
#define   VIBRATO_ON	90,2751
#define   SUSTAIN_ON	91,2779
#define   KSR	92,2807
#define   MULTIPLE_MASK	93,2853
#define KSL_LEVEL	98,2955
#define   KSL_MASK	99,2981
#define   TOTAL_LEVEL_MASK	100,3035
#define ATTACK_DECAY	105,3144
#define   ATTACK_MASK	106,3173
#define   DECAY_MASK	107,3202
#define SUSTAIN_RELEASE	112,3285
#define   SUSTAIN_MASK	113,3317
#define   RELEASE_MASK	114,3347
#define WAVE_SELECT	119,3415
#define FNUM_LOW	127,3595
#define KEYON_BLOCK	132,3691
#define	  KEYON_BIT	133,3720
#define	  BLOCKNUM_MASK	134,3748
#define   FNUM_HIGH_MASK	135,3780
#define FEEDBACK_CONNECTION	149,4222
#define   FEEDBACK_MASK	150,4258
#define   CONNECTION_BIT	151,4329
#define   STEREO_BITS	186,5023
#define     VOICE_TO_LEFT	187,5070
#define     VOICE_TO_RIGHT	188,5102
struct physical_voice_info physical_voice_info194,5189
#define USE_LEFT	214,5889
#define USE_RIGHT	215,5908
static struct physical_voice_info pv_map[217,5929

drivers/sound/sb_mixer.h,1059
#define VOC_VOL	40,720
#define MIC_VOL	41,742
#define MIC_MIX	42,764
#define RECORD_SRC	43,786
#define IN_FILTER	44,810
#define OUT_FILTER	45,833
#define MASTER_VOL	46,857
#define FM_VOL	47,881
#define CD_VOL	48,902
#define LINE_VOL	49,923
#define IRQ_NR	50,945
#define DMA_NR	51,966
#define IRQ_STAT	52,987
#define OPSW	53,1009
#define COVOX_VOL	58,1078
#define TREBLE_LVL	59,1101
#define BASS_LVL	60,1125
#define FREQ_HI 62,1148
#define FREQ_LOW 63,1218
#define FILT_ON 64,1281
#define FILT_OFF 65,1345
#define MONO_DAC	67,1379
#define STEREO_DAC	68,1401
#define SB16_OMASK	73,1460
#define SB16_IMASK_L	74,1484
#define SB16_IMASK_R	75,1510
#define LEFT_CHN	77,1537
#define RIGHT_CHN	78,1556
#define ALS007_RECORD_SRC	83,1613
#define ALS007_OUTPUT_CTRL1	84,1644
#define ALS007_OUTPUT_CTRL2	85,1677
#define MIX_ENT(MIX_ENT87,1711
#define SRC__MIC 94,1864
#define SRC__CD 95,1932
#define SRC__LINE 96,1992
#define ALS007_MIC	102,2100
#define ALS007_LINE	103,2121
#define ALS007_CD	104,2143
#define ALS007_SYNTH	105,2163

drivers/sound/sound_calls.h,183
#define AD_F_CS4231	181,6474
#define AD_F_CS4248	182,6553
#define		AD1848_SET_XTAL	185,6672
#define		AD1848_MIXER_REROUTE	186,6700
#define AD1848_REROUTE(AD1848_REROUTE187,6732

drivers/sound/sound_config.h,1658
#define  _SOUND_CONFIG_H_15,349
#define SND_DEFAULT_ENABLE	27,538
#define MAX_REALTIME_FACTOR	31,603
#define DSP_BUFFSIZE	38,734
#define DSP_BUFFCOUNT	41,789
#define FM_MONO	44,846
#define CONFIG_PAS_BASE	47,938
#  define CONFIG_SB_DMA2 51,1033
#   define CONFIG_SB_MPU_BASE 55,1141
#  define CONFIG_SB_MPU_IRQ 59,1219
#define SEQ_MAX_QUEUE	64,1391
#define SBFM_MAXINSTR	66,1419
#define SND_NDEVS	78,1885
#define SND_DEV_CTL	79,1941
#define SND_DEV_SEQ	80,1993
#define SND_DEV_MIDIN	82,2093
#define SND_DEV_DSP	83,2139
#define SND_DEV_AUDIO	84,2192
#define SND_DEV_DSP16	85,2250
#define SND_DEV_STATUS	86,2313
#define SND_DEV_AWFM	87,2357
#define SND_DEV_SEQ2	88,2395
#define SND_DEV_SNDPROC 89,2458
#define SND_DEV_PSS	90,2528
#define DSP_DEFAULT_SPEED	92,2565
#define MAX_AUDIO_DEV	94,2597
#define MAX_MIXER_DEV	95,2621
#define MAX_SYNTH_DEV	96,2645
#define MAX_MIDI_DEV	97,2669
#define MAX_TIMER_DEV	98,2692
struct address_info address_info100,2717
#define SYNTH_MAX_VOICES	115,3144
struct voice_alloc_info voice_alloc_info117,3173
struct channel_info channel_info126,3403
#define WK_NONE	136,3552
#define WK_WAKEUP	137,3574
#define WK_TIMEOUT	138,3597
#define WK_SIGNAL	139,3621
#define WK_SLEEP	140,3644
#define WK_SELECT	141,3666
#define WK_ABORT	142,3689
#define OPEN_READ	144,3712
#define OPEN_WRITE	145,3747
#define OPEN_READWRITE	146,3784
extern __inline__ int translate_mode(150,3889
extern __inline__ int translate_mode(157,3979
#define DEB(DEB170,4217
#define DDB(DDB174,4252
#define MDB(MDB179,4304
#define MDB(MDB181,4327
#define TIMER_ARMED	185,4357
#define TIMER_NOT_ARMED	186,4384

drivers/sound/soundvers.h,71
#define SOUND_VERSION_STRING 1,0
#define SOUND_INTERNAL_VERSION 2,46

drivers/sound/tuning.h,162
unsigned short semitone_tuning[3,20
unsigned short cent_tuning[10,263
extern unsigned short semitone_tuning[27,1149
extern unsigned short cent_tuning[28,1192

drivers/sound/ulaw.h,74
static unsigned char ulaw_dsp[1,0
static unsigned char dsp_ulaw[36,1640

drivers/sound/sb_ess.c,3961
#define ESSTYPE_LIKE20	182,8192
#define ESSTYPE_DETECT	183,8249
int esstype 185,8306
#define SUBMDL_ES1788	187,8373
#define SUBMDL_ES1868	188,8443
#define SUBMDL_ES1869	189,8513
#define SUBMDL_ES1878	190,8583
#define SUBMDL_ES1887	191,8653
#define SUBMDL_ES1888	192,8723
struct ess_command ess_command208,9337
static struct ess_command ess_i08m[213,9446
static struct ess_command ess_i16m[215,9551
static struct ess_command ess_i08s[217,9657
static struct ess_command ess_i16s[219,9764
static struct ess_command *ess_inp_cmds[222,9873
static struct ess_command ess_o08m[229,10030
static struct ess_command ess_o16m[231,10150
static struct ess_command ess_o08s[233,10271
static struct ess_command ess_o16s[235,10393
static struct ess_command *ess_out_cmds[238,10517
static void ess_exec_commands241,10607
static void ess_change254,10870
static void ess_set_output_parms264,11086
static void ess_set_input_parms282,11507
static int ess_calc_div 293,11751
static int ess_calc_best_speed318,12286
static void ess_common_speed 350,13056
static void ess_speed 366,13436
static int ess_audio_prepare_for_input(400,14212
static int ess_audio_prepare_for_output_audio1 421,14741
static int ess_audio_prepare_for_output_audio2 442,15347
static int ess_audio_prepare_for_output(480,16225
static void ess_audio_halt_xfer(496,16680
static void ess_audio_start_input512,16988
static void ess_audio_output_block_audio1535,17552
static void ess_audio_output_block_audio2555,18062
static void ess_audio_output_block573,18586
static void ess_audio_trigger(589,18982
static int ess_audio_set_speed(633,19907
static unsigned int ess_audio_set_bits(654,20389
static short ess_audio_set_channels(673,20744
static struct audio_driver ess_audio_driver 682,20940
struct audio_driver *ess_audio_init705,21397
static void ess_handle_channel732,22074
void ess_intr 762,22724
static void ess_extended 794,23382
static int ess_write 801,23487
static int ess_read 814,23797
int ess_dsp_reset(826,24071
static int ess_irq_bits 861,24705
static int ess_common_set_irq_hw 886,24997
static void ess_es1887_set_irq_hw 906,25538
static int ess_set_irq_hw 915,25733
static void FKS_test 933,26123
static unsigned int ess_identify 945,26455
static int ess_probe 972,27056
int ess_init(985,27327
static int ess_set_dma_hw(1174,31836
int ess_dsp_init 1246,33195
#define ES688_RECORDING_DEVICES	1285,34163
#define ES688_MIXER_DEVICES	1287,34254
#define ES1688_RECORDING_DEVICES	1292,34453
#define ES1688_MIXER_DEVICES	1294,34523
#define ES1887_RECORDING_DEVICES	1297,34603
#define ES1887_MIXER_DEVICES	1299,34707
#define ES_REC_MIXER_RECBASE	1309,35014
#define ES_REC_MIXER_RECDIFF	1310,35067
#define ES_REC_MIXER_RECSYNTH	1312,35140
#define ES_REC_MIXER_RECPCM	1313,35214
#define ES_REC_MIXER_RECSPEAKER	1314,35285
#define ES_REC_MIXER_RECLINE	1315,35362
#define ES_REC_MIXER_RECMIC	1316,35434
#define ES_REC_MIXER_RECCD	1317,35505
#define ES_REC_MIXER_RECIMIX	1318,35575
#define ES_REC_MIXER_RECALTPCM	1319,35647
#define ES_REC_MIXER_RECRECLEV	1320,35723
#define ES_REC_MIXER_RECIGAIN	1321,35799
#define ES_REC_MIXER_RECOGAIN	1322,35873
#define ES_REC_MIXER_RECLINE1	1323,35947
#define ES_REC_MIXER_RECLINE2	1324,36021
#define ES_REC_MIXER_RECLINE3	1325,36095
static mixer_tab es688_mix 1327,36170
static mixer_tab es1688_mix 1354,37324
static mixer_tab es1688later_mix 1374,38273
static mixer_tab es_rec_mix 1398,39319
static mixer_tab es1887_mix 1437,41226
static int ess_has_rec_mixer 1471,42968
static int ess_mixer_mon_regs[1482,43117
static void ess_show_mixerregs 1488,43312
void ess_setmixer 1501,43519
unsigned int ess_getmixer 1523,43963
static void ess_chgmixer1545,44310
void ess_mixer_init 1558,44595
int ess_mixer_set(1603,45757
void ess_mixer_reload 1616,46195
int es_rec_set_recmask(1627,46413
int ess_set_recmask(1662,47352
int ess_mixer_reset 1677,47697
int ess_midi_init(1716,48698

drivers/sound/v_midi.c,735
static vmidi_devc *v_devc[31,567
static int midi1,32,613
static int midi1,midi2;32,613
static void *midi_mem 33,637
static struct address_info config;37,683
int init_module(39,731
void cleanup_module(49,896
static int v_midi_open 68,1386
static void v_midi_close 100,1913
static int v_midi_out 116,2170
static int v_midi_start_read 132,2533
static int v_midi_end_read 137,2588
static int v_midi_ioctl 149,2780
#define MIDI_SYNTH_NAME	155,2863
#define MIDI_SYNTH_CAPS	156,2903
static struct midi_operations v_midi_operations 160,2969
static struct midi_operations v_midi_operations2 177,3219
struct vmidi_memoryvmidi_memory199,3602
void attach_v_midi 207,3747
int probe_v_midi(288,5812
void unload_v_midi(294,5895

drivers/sound/bin2hex.c,15
int main(3,20

drivers/sound/softoss.c,2653
#define SOFTSYN_MAIN24,656
#define HANDLE_LFO26,697
#define ENVELOPE_SCALE	28,717
#define NO_SAMPLE	29,743
int softsynth_disabled 38,896
static volatile int intr_pending 40,925
static struct timer_list poll_timer 44,984
static int      tremolo_table[55,1158
static int      vibrato_table[75,2064
static unsigned long last_resample_jiffies;97,3057
static unsigned long resample_counter;98,3101
extern int     *sound_osp;100,3141
static volatile int is_running 102,3169
static int      softsynth_loaded 103,3205
static struct synth_info softsyn_info 105,3244
static struct softsyn_devc sdev_info 109,3361
softsyn_devc   *devc 113,3409
static struct voice_alloc_info *voice_alloc;115,3472
static volatile int tmr_running 121,3674
static int      voice_limit 122,3711
static void set_max_voices(125,3747
static void update_vibrato(146,4030
static void update_tremolo(166,4401
static void start_vibrato(178,4662
static void start_tremolo(192,4946
static void update_volume(206,5230
static void step_envelope(255,6019
static void step_envelope_lfo(336,7631
static void compute_step(368,8180
static void init_voice(387,8653
static void reset_samples(433,9648
static void init_engine(460,10122
void softsyn_control_loop(498,10950
static void do_resample(519,11277
static void delayed_resample(630,13517
static void softsyn_poll(644,13816
static void softsyn_callback(656,14005
static void start_engine(662,14087
static void stop_engine(708,15186
static void request_engine(712,15236
static int softsynth_hook(724,15533
static int softsyn_ioctl(750,15960
static int softsyn_kill_note(773,16416
static int softsyn_set_instr(796,17077
static int softsyn_start_note(810,17370
static int softsyn_open(969,21079
static void softsyn_close(1032,23010
static void softsyn_hw_control(1049,23376
static int softsyn_load_patch(1072,23769
static void softsyn_panning(1222,27297
static void softsyn_volume_method(1237,27561
static void softsyn_aftertouch(1241,27619
static void softsyn_controller(1250,27792
static void softsyn_bender(1299,28738
static int softsyn_alloc_voice(1309,28968
static void softsyn_setup_voice(1358,29757
static void softsyn_reset(1381,30477
static struct synth_operations softsyn_operations 1394,30663
static unsigned int soft_tmr_start(1423,31128
static void soft_tmr_disable(1430,31266
static void soft_tmr_restart(1436,31347
static struct sound_lowlev_timer soft_tmr 1441,31408
int probe_softsyn(1450,31523
void attach_softsyn_card(1489,32204
void unload_softsyn(1502,32528
static struct address_info config;1513,32699
int init_module(1515,32735
void cleanup_module(1525,32948

drivers/sound/dmasound.c,9149
#define HAS_8BIT_TABLES125,3848
static int sq_unit 128,3887
static int mixer_unit 129,3912
static int state_unit 130,3940
static int irq_installed 131,3968
static char **sound_buffers 133,4018
extern volatile u_short amiga_audio_min_period;146,4299
extern u_short amiga_audio_period;154,4485
#define AMI_AUDIO_OFF	161,4558
#define AMI_AUDIO_8	162,4628
#define AMI_AUDIO_14	163,4700
static int awacs_irq,171,4879
static int awacs_irq, awacs_tx_irq,171,4879
static int awacs_irq, awacs_tx_irq, awacs_rx_irq;171,4879
static volatile struct awacs_regs *awacs;172,4929
static volatile struct dbdma_regs *awacs_txdma,173,4971
static volatile struct dbdma_regs *awacs_txdma, *awacs_rxdma;173,4971
static int awacs_rate_index;174,5033
static int awacs_subframe;175,5062
static int awacs_spkr_vol;176,5089
static int awacs_revision;178,5117
#define AWACS_BURGUNDY	179,5144
static void *awacs_tx_cmd_space;184,5254
static volatile struct dbdma_cmd *awacs_tx_cmds;185,5287
int awacs_reg[191,5433
#define HAS_16BIT_TABLES193,5452
static short beep_wform[201,5694
#define BEEP_SPEED	236,7108
#define BEEP_BUFLEN	237,7156
#define BEEP_VOLUME	238,7180
static int beep_volume 240,7218
static int beep_playing 241,7256
static short *beep_buf;242,7285
static volatile struct dbdma_cmd *beep_dbdma_cmd;243,7309
struct notifier_block awacs_sleep_notifier 259,7964
#define DMASND_TT	269,8173
#define DMASND_FALCON	270,8194
#define DMASND_AMIGA	271,8219
#define DMASND_AWACS	272,8243
#define MAX_CATCH_RADIUS	274,8268
#define MIN_BUFFERS	275,8296
#define MIN_BUFSIZE 276,8319
#define MAX_BUFSIZE	277,8343
static int catchRadius 279,8391
#define arraysize(arraysize284,8532
#define min(min285,8578
#define le2be16(le2be16286,8620
#define le2be16dbl(le2be16dbl287,8679
#define IOCTL_IN(IOCTL_IN289,8750
#define IOCTL_OUT(IOCTL_OUT293,8870
static char ulaw2dma8[301,9056
static char alaw2dma8[338,10167
static short ulaw2dma16[378,11337
static short alaw2dma16[415,13012
static char alaw2dma14l[456,14773
static char alaw2dma14l[493,15849
} MACHINE;MACHINE654,21792
} SETTINGS;SETTINGS665,22023
} TRANS;TRANS676,22653
struct sound_settings sound_settings678,22663
static struct sound_settings sound;696,23298
struct sound_mixer sound_mixer785,26193
static struct sound_mixer mixer;789,26232
struct sound_queue sound_queue795,26320
static struct sound_queue sq;823,27031
#define sq_block_address(sq_block_address825,27062
#define SIGNAL_RECEIVED	826,27106
#define NON_BLOCKING(NON_BLOCKING827,27156
#define ONE_SECOND	828,27213
#define NO_TIME_LIMIT	829,27273
#define SLEEP(SLEEP830,27306
#define WAKE_UP(WAKE_UP832,27396
struct sound_state sound_state838,27476
static struct sound_state state;844,27543
static inline int ioctl_return(849,27731
static ssize_t ata_ct_law(893,29426
static ssize_t ata_ct_s8(917,29942
static ssize_t ata_ct_u8(935,30315
static ssize_t ata_ct_s16be(969,31018
static ssize_t ata_ct_u16be(1000,31705
static ssize_t ata_ct_s16le(1037,32500
static ssize_t ata_ct_u16le(1076,33336
static ssize_t ata_ctx_law(1114,34180
static ssize_t ata_ctx_s8(1175,35508
static ssize_t ata_ctx_u8(1228,36631
static ssize_t ata_ctx_s16be(1283,37792
static ssize_t ata_ctx_u16be(1337,38975
static ssize_t ata_ctx_s16le(1393,40202
static ssize_t ata_ctx_u16le(1449,41440
static ssize_t ami_ct_law(1507,42746
static ssize_t ami_ct_s8(1546,43640
static ssize_t ami_ct_u8(1574,44301
static ssize_t ami_ct_s16be(1611,45113
static ssize_t ami_ct_u16be(1654,46201
static ssize_t ami_ct_s16le(1700,47346
static ssize_t ami_ct_u16le(1746,48509
static ssize_t pmac_ct_law(1793,49742
static ssize_t pmac_ct_s8(1825,50458
static ssize_t pmac_ct_u8(1856,51092
static ssize_t pmac_ct_s16(1887,51744
static ssize_t pmac_ct_u16(1916,52399
static ssize_t pmac_ctx_law(1948,53116
static ssize_t pmac_ctx_s8(1995,54213
static ssize_t pmac_ctx_u8(2040,55197
static ssize_t pmac_ctx_s16(2085,56199
static ssize_t pmac_ctx_u16(2129,57215
static TRANS transTTNormal 2178,58366
static TRANS transTTExpanding 2182,58471
static TRANS transFalconNormal 2186,58583
static TRANS transFalconExpanding 2191,58725
static TRANS transAmiga 2198,58924
static TRANS transAwacsNormal 2205,59103
static TRANS transAwacsExpand 2210,59244
static void *AtaAlloc(2225,59549
static void AtaFree(2230,59661
static int __init AtaIrqInit(2235,59742
static void AtaIrqCleanUp(2256,60537
#define TONE_VOXWARE_TO_DB(TONE_VOXWARE_TO_DB2265,60723
#define TONE_DB_TO_VOXWARE(TONE_DB_TO_VOXWARE2267,60815
static int AtaSetBass(2270,60890
static int AtaSetTreble(2278,61059
static void TTSilence(2292,61258
static void TTInit(2299,61397
static int TTSetFormat(2349,62684
#define VOLUME_VOXWARE_TO_DB(VOLUME_VOXWARE_TO_DB2377,63117
#define VOLUME_DB_TO_VOXWARE(VOLUME_DB_TO_VOXWARE2379,63209
static int TTSetVolume(2382,63270
#define GAIN_VOXWARE_TO_DB(GAIN_VOXWARE_TO_DB2393,63667
#define GAIN_DB_TO_VOXWARE(GAIN_DB_TO_VOXWARE2395,63757
static int TTSetGain(2397,63815
static void FalconSilence(2411,64004
static void FalconInit(2425,64513
static int FalconSetFormat(2505,66715
#define VOLUME_VOXWARE_TO_ATT(VOLUME_VOXWARE_TO_ATT2546,67449
#define VOLUME_ATT_TO_VOXWARE(VOLUME_ATT_TO_VOXWARE2548,67536
static int FalconSetVolume(2551,67592
static void ata_sq_play_next_frame(2561,67949
static void AtaPlay(2581,68574
static void ata_sq_interrupt(2647,70709
static void *AmiAlloc(2722,72740
static void AmiFree(2727,72836
static int __init AmiIrqInit(2732,72915
static void AmiIrqCleanUp(2745,73190
static void AmiSilence(2754,73392
static void AmiInit(2761,73498
static int AmiSetFormat(2790,74121
#define VOLUME_VOXWARE_TO_AMI(VOLUME_VOXWARE_TO_AMI2828,74741
#define VOLUME_AMI_TO_VOXWARE(VOLUME_AMI_TO_VOXWARE2830,74829
static int AmiSetVolume(2832,74876
static int AmiSetTreble(2842,75242
#define AMI_PLAY_LOADED	2853,75390
#define AMI_PLAY_PLAYING	2854,75417
#define AMI_PLAY_MASK	2855,75444
static void ami_sq_play_next_frame(2858,75471
static void AmiPlay(2908,77000
static void ami_sq_interrupt(2944,77719
static void *PMacAlloc(2990,78709
static void PMacFree(2995,78797
static int __init PMacIrqInit(3000,78866
static void PMacIrqCleanup(3009,79078
static void PMacSilence(3027,79594
static int awacs_freqs[3033,79699
static void PMacInit(3037,79787
static int PMacSetFormat(3081,81044
#define AWACS_VOLUME_TO_MASK(AWACS_VOLUME_TO_MASK3119,81669
#define AWACS_MASK_TO_VOLUME(AWACS_MASK_TO_VOLUME3120,81732
static int awacs_get_volume(3122,81789
static int awacs_volume_setter(3131,81977
static int PMacSetVolume(3153,82529
static void PMacPlay(3158,82626
pmac_awacs_tx_intr(3198,83808
pmac_awacs_intr(3225,84300
awacs_write(3242,84796
static void awacs_nosound(3251,85018
static struct timer_list beep_timer 3263,85233
static void awacs_mksound(3267,85310
static int awacs_sleep_notify(3344,87475
awacs_burgundy_busy_wait(3372,88265
awacs_burgundy_extend_wait(3379,88376
awacs_burgundy_wcw(3388,88539
awacs_burgundy_rcw(3401,89006
awacs_burgundy_wcb(3436,89858
awacs_burgundy_rcb(3443,90019
awacs_burgundy_check(3462,90359
awacs_burgundy_init(3471,90539
awacs_burgundy_write_volume(3517,92013
awacs_burgundy_read_volume(3530,92328
awacs_burgundy_read_mvolume(3546,92591
awacs_burgundy_write_mvolume(3562,92861
awacs_enable_amp(3583,93296
static MACHINE machTT 3618,94269
static MACHINE machFalcon 3628,94485
static MACHINE machAmiga 3640,94766
static MACHINE machPMac 3652,95025
static void sound_silence(3667,95374
static void sound_init(3676,95503
static int sound_set_format(3682,95561
static int sound_set_speed(3688,95647
static int sound_set_stereo(3702,95886
static int sound_set_volume(3718,96163
static int sound_set_bass(3725,96269
static int sound_set_gain(3730,96374
static int sound_set_treble(3737,96553
static ssize_t sound_copy_translate(3744,96711
#define RECLEVEL_VOXWARE_TO_GAIN(RECLEVEL_VOXWARE_TO_GAIN3789,97610
#define RECLEVEL_GAIN_TO_VOXWARE(RECLEVEL_GAIN_TO_VOXWARE3791,97695
static int mixer_open(3794,97754
static int mixer_release(3802,97870
static int mixer_ioctl(3810,97989
static struct file_operations mixer_fops 4199,110644
static void __init mixer_init(4214,110906
static int sq_allocate_buffers(4262,112047
static void sq_release_buffers(4285,112525
static void sq_setup(4298,112738
static void sq_play(4335,113713
static ssize_t sq_write(4343,113816
static int sq_open(4413,115642
static void sq_reset(4458,116533
static int sq_fsync(4467,116656
static int sq_release(4490,117112
static int sq_ioctl(4512,117559
static struct file_operations sq_fops 4602,119851
static void __init sq_init(4617,120073
static int state_open(4673,121159
static int state_release(4777,124196
static ssize_t state_read(4785,124315
static struct file_operations state_fops 4800,124592
static void __init state_init(4815,124854
static long long sound_lseek(4829,125127
void __init dmasound_init(4838,125308
#define MAXARGS	4985,129157
void __init dmasound_setup(4987,129212
int init_module(5018,129975
void cleanup_module(5025,130032

drivers/sound/dmasound.h,551
#define SND_NDEVS	13,374
#define SND_DEV_CTL	14,430
#define SND_DEV_SEQ	15,482
#define SND_DEV_MIDIN	17,582
#define SND_DEV_DSP	18,628
#define SND_DEV_AUDIO	19,681
#define SND_DEV_DSP16	20,739
#define SND_DEV_STATUS	21,802
#define SND_DEV_SEQ2	23,908
#define SND_DEV_SNDPROC 24,971
#define SND_DEV_PSS	25,1041
#define DSP_DEFAULT_SPEED	27,1078
#define ON	29,1110
#define OFF	30,1124
#define MAX_AUDIO_DEV	32,1140
#define MAX_MIXER_DEV	33,1164
#define MAX_SYNTH_DEV	34,1188
#define MAX_MIDI_DEV	35,1212
#define MAX_TIMER_DEV	36,1235

drivers/sound/es1370.c,6329
#define DBG(DBG134,6104
#define PCI_VENDOR_ID_ENSONIQ 140,6253
#define PCI_DEVICE_ID_ENSONIQ_ES1370 143,6345
#define ES1370_MAGIC 146,6397
#define ES1370_EXTENT 148,6479
#define JOY_EXTENT 149,6518
#define ES1370_REG_CONTROL 151,6555
#define ES1370_REG_STATUS 152,6594
#define ES1370_REG_UART_DATA 153,6633
#define ES1370_REG_UART_STATUS 154,6672
#define ES1370_REG_UART_CONTROL 155,6711
#define ES1370_REG_UART_TEST 156,6750
#define ES1370_REG_MEMPAGE 157,6789
#define ES1370_REG_CODEC 158,6828
#define ES1370_REG_SERIAL_CONTROL 159,6867
#define ES1370_REG_DAC1_SCOUNT 160,6906
#define ES1370_REG_DAC2_SCOUNT 161,6945
#define ES1370_REG_ADC_SCOUNT 162,6984
#define ES1370_REG_DAC1_FRAMEADR 164,7024
#define ES1370_REG_DAC1_FRAMECNT 165,7064
#define ES1370_REG_DAC2_FRAMEADR 166,7104
#define ES1370_REG_DAC2_FRAMECNT 167,7144
#define ES1370_REG_ADC_FRAMEADR 168,7184
#define ES1370_REG_ADC_FRAMECNT 169,7224
#define ES1370_FMT_U8_MONO 171,7265
#define ES1370_FMT_U8_STEREO 172,7298
#define ES1370_FMT_S16_MONO 173,7331
#define ES1370_FMT_S16_STEREO 174,7364
#define ES1370_FMT_STEREO 175,7397
#define ES1370_FMT_S16 176,7430
#define ES1370_FMT_MASK 177,7463
static const unsigned sample_size[179,7497
static const unsigned sample_shift[180,7551
static const unsigned dac1_samplerate[182,7607
#define DAC2_SRTODIV(DAC2_SRTODIV184,7681
#define DAC2_DIVTOSR(DAC2_DIVTOSR185,7731
#define CTRL_ADC_STOP 187,7774
#define CTRL_XCTL1 188,7832
#define CTRL_OPEN 189,7890
#define CTRL_PCLKDIV 190,7969
#define CTRL_SH_PCLKDIV 191,8034
#define CTRL_MSFMTSEL 192,8061
#define CTRL_M_SBB 193,8143
#define CTRL_WTSRSEL 194,8219
#define CTRL_SH_WTSRSEL 195,8312
#define CTRL_DAC_SYNC 196,8339
#define CTRL_CCB_INTRM 197,8410
#define CTRL_M_CB 198,8481
#define CTRL_XCTL0 199,8559
#define CTRL_BREQ 200,8627
#define CTRL_DAC1_EN 201,8703
#define CTRL_DAC2_EN 202,8757
#define CTRL_ADC_EN 203,8811
#define CTRL_UART_EN 204,8864
#define CTRL_JYSTK_EN 205,8923
#define CTRL_CDC_EN 206,9016
#define CTRL_SERR_DIS 207,9090
#define STAT_INTR 209,9161
#define STAT_CSTAT 210,9234
#define STAT_CBUSY 211,9318
#define STAT_CWRIP 212,9375
#define STAT_VC 213,9445
#define STAT_SH_VC 214,9534
#define STAT_MCCB 215,9560
#define STAT_UART 216,9618
#define STAT_DAC1 217,9677
#define STAT_DAC2 218,9736
#define STAT_ADC 219,9795
#define USTAT_RXINT 221,9854
#define USTAT_TXINT 222,9916
#define USTAT_TXRDY 223,9978
#define USTAT_RXRDY 224,10034
#define UCTRL_RXINTEN 226,10091
#define UCTRL_TXINTEN 227,10152
#define UCTRL_ENA_TXINT 228,10219
#define UCTRL_CNTRL 229,10275
#define UCTRL_CNTRL_SWR 230,10331
#define SCTRL_P2ENDINC 232,10397
#define SCTRL_SH_P2ENDINC 233,10442
#define SCTRL_P2STINC 234,10471
#define SCTRL_SH_P2STINC 235,10516
#define SCTRL_R1LOOPSEL 236,10545
#define SCTRL_P2LOOPSEL 237,10603
#define SCTRL_P1LOOPSEL 238,10661
#define SCTRL_P2PAUSE 239,10719
#define SCTRL_P1PAUSE 240,10778
#define SCTRL_R1INTEN 241,10837
#define SCTRL_P2INTEN 242,10898
#define SCTRL_P1INTEN 243,10959
#define SCTRL_P1SCTRLD 244,11020
#define SCTRL_P2DACSEN 245,11102
#define SCTRL_R1SEB 246,11191
#define SCTRL_R1SMB 247,11245
#define SCTRL_R1FMT 248,11300
#define SCTRL_SH_R1FMT 249,11356
#define SCTRL_P2SEB 250,11384
#define SCTRL_P2SMB 251,11438
#define SCTRL_P2FMT 252,11493
#define SCTRL_SH_P2FMT 253,11549
#define SCTRL_P1SEB 254,11577
#define SCTRL_P1SMB 255,11631
#define SCTRL_P1FMT 256,11686
#define SCTRL_SH_P1FMT 257,11742
#define FMODE_DAC 261,11789
#define MIDIINBUF 265,11883
#define MIDIOUTBUF 266,11906
#define FMODE_MIDI_SHIFT 268,11930
#define FMODE_MIDI_READ 269,11957
#define FMODE_MIDI_WRITE 270,12015
#define SND_DEV_DSP16 272,12075
struct es1370_state es1370_state276,12180
static struct es1370_state *devs 345,13576
extern inline unsigned ld2(349,13695
static void wrcodec(376,14041
extern inline void stop_adc(392,14502
extern inline void stop_dac1(402,14730
extern inline void stop_dac2(412,14960
static void start_dac1(422,15190
static void start_dac2(444,16048
static void start_adc(469,17039
#define DMABUF_DEFAULTORDER 493,17978
#define DMABUF_MINORDER 494,18022
extern inline void dealloc_dmabuf(496,18049
static int prog_dmabuf(511,18474
extern inline int prog_dmabuf_adc(562,20298
extern inline int prog_dmabuf_dac2(569,20550
extern inline int prog_dmabuf_dac1(576,20806
extern inline unsigned get_hwptr(583,21065
extern inline void clear_advance(594,21377
static void es1370_update_ptr(606,21679
static void es1370_handle_midi(674,24057
static void es1370_interrupt(706,24912
static const char invalid_magic[733,25683
#define VALIDATE_STATE(VALIDATE_STATE735,25763
} mixtable[752,26254
static int mixer_ioctl(765,26979
static loff_t es1370_llseek(946,32143
static int es1370_open_mixdev(953,32316
static int es1370_release_mixdev(968,32620
static int es1370_ioctl_mixdev(977,32820
static /*const*/ struct file_operations es1370_mixer_fops 982,33007
static int drain_dac1(1002,33473
static int drain_dac2(1037,34691
static ssize_t es1370_read(1074,35982
static ssize_t es1370_write(1125,37297
static unsigned int es1370_poll(1181,38811
static int es1370_mmap(1211,39723
static int es1370_ioctl(1240,40463
static int es1370_open(1541,50039
static int es1370_release(1594,51666
static /*const*/ struct file_operations es1370_audio_fops 1618,52252
static ssize_t es1370_write_dac(1638,52681
static unsigned int es1370_poll_dac(1693,54193
static int es1370_mmap_dac(1714,54830
static int es1370_ioctl_dac(1736,55434
static int es1370_open_dac(1918,61139
static int es1370_release_dac(1967,62547
static /*const*/ struct file_operations es1370_dac_fops 1983,62927
static ssize_t es1370_midi_read(2003,63382
static ssize_t es1370_midi_write(2048,64501
static unsigned int es1370_midi_poll(2098,65804
static int es1370_midi_open(2122,66470
static int es1370_midi_release(2171,67885
static /*const*/ struct file_operations es1370_midi_fops 2217,69220
#define NR_DEVICE 2238,69713
static int joystick[2240,69773
static int joystick[2242,69823
static int lineout[2244,69871
static int micz[2245,69911
static struct initvol initvol2249,70026
} initvol[2252,70072
} initvol[] __initdata 2252,70072
__initfunc(2266,70489
void cleanup_module(2392,74935

drivers/sound/opl3sa.c,795
static int sb_initialized 30,608
static int kilroy_was_here 36,671
static int mpu_initialized 37,728
static int *opl3sa_osp 39,761
static unsigned char opl3sa_read(41,793
static void opl3sa_write(56,1068
static int opl3sa_detect(68,1330
int probe_opl3sa_wss(108,2119
void attach_opl3sa_wss(163,3202
void attach_opl3sa_mpu(178,3548
int probe_opl3sa_mpu(186,3734
void unload_opl3sa_wss(248,4933
void unload_opl3sa_mpu(266,5292
void unload_opl3sa_sb(274,5452
int             io 283,5586
int             irq 284,5611
int             dma 285,5637
int             dma2 286,5663
int		mpu_io 288,5691
int 		mpu_irq 289,5709
struct address_info cfg;298,5870
struct address_info mpu_cfg;299,5895
static int found_mpu;300,5924
int init_module(302,5947
void cleanup_module(329,6412

drivers/sound/hex2hex.c,121
#define ABANDON(ABANDON10,199
#define MAX_SIZE 11,263
unsigned char buf[12,291
int loadhex(14,321
int main(67,1299

drivers/sound/softoss.h,854
#define SSYN_START	18,440
#define SSYN_REQUEST	19,461
#define SSYN_STOP	20,503
#define SSYN_GETTIME	21,523
#define MAX_PATCH 23,589
#define MAX_SAMPLE 24,611
#define MAX_VOICE 25,634
#define DEFAULT_VOICES 26,655
typedef struct voice_infovoice_info28,682
} voice_info;voice_info74,1923
extern voice_info softoss_voices[76,1938
typedef struct softsyn_devcsoftsyn_devc78,2010
#define ES_STOPPED	ES_STOPPED136,3083
#define ES_STARTED	ES_STARTED137,3106
} softsyn_devc;softsyn_devc143,3214
#define DELAY_SIZE	148,3325
  short voice_active[151,3370
  voice_info softoss_voices[152,3409
  int left_delay[153,3483
  int delayp=154,3546
  extern softsyn_devc *devc;156,3568
  extern int left_delay[158,3598
  extern int left_delay[DELAY_SIZE], right_delay[158,3598
  extern int delayp;159,3660
  extern short voice_active[160,3681

drivers/sound/softoss_rs.c,66
void softsynth_resample_loop(24,532
#define AFTERSCALE 103,2356

drivers/sound/sound_firmware.c,128
#define __KERNEL_SYSCALLS__2,16
static int errno;10,192
static int do_mod_firmware_load(11,210
int mod_firmware_load(50,856

drivers/sound/es1371.c,8753
#define PCI_VENDOR_ID_ENSONIQ 92,3896
#define PCI_DEVICE_ID_ENSONIQ_ES1371 95,3988
#define ES1371_MAGIC 98,4040
#define ES1371_EXTENT 100,4122
#define JOY_EXTENT 101,4161
#define ES1371_REG_CONTROL 103,4198
#define ES1371_REG_STATUS 104,4237
#define ES1371_REG_UART_DATA 105,4276
#define ES1371_REG_UART_STATUS 106,4315
#define ES1371_REG_UART_CONTROL 107,4354
#define ES1371_REG_UART_TEST 108,4393
#define ES1371_REG_MEMPAGE 109,4432
#define ES1371_REG_SRCONV 110,4471
#define ES1371_REG_CODEC 111,4510
#define ES1371_REG_LEGACY 112,4549
#define ES1371_REG_SERIAL_CONTROL 113,4588
#define ES1371_REG_DAC1_SCOUNT 114,4627
#define ES1371_REG_DAC2_SCOUNT 115,4666
#define ES1371_REG_ADC_SCOUNT 116,4705
#define ES1371_REG_DAC1_FRAMEADR 118,4745
#define ES1371_REG_DAC1_FRAMECNT 119,4785
#define ES1371_REG_DAC2_FRAMEADR 120,4825
#define ES1371_REG_DAC2_FRAMECNT 121,4865
#define ES1371_REG_ADC_FRAMEADR 122,4905
#define ES1371_REG_ADC_FRAMECNT 123,4945
#define ES1371_FMT_U8_MONO 125,4986
#define ES1371_FMT_U8_STEREO 126,5019
#define ES1371_FMT_S16_MONO 127,5052
#define ES1371_FMT_S16_STEREO 128,5085
#define ES1371_FMT_STEREO 129,5118
#define ES1371_FMT_S16 130,5151
#define ES1371_FMT_MASK 131,5184
static const unsigned sample_size[133,5218
static const unsigned sample_shift[134,5272
#define CTRL_JOY_SHIFT 136,5328
#define CTRL_JOY_MASK 137,5355
#define CTRL_JOY_200 138,5381
#define CTRL_JOY_208 139,5445
#define CTRL_JOY_210 140,5480
#define CTRL_JOY_218 141,5515
#define CTRL_GPIO_IN0 142,5550
#define CTRL_GPIO_IN1 143,5623
#define CTRL_GPIO_IN2 144,5658
#define CTRL_GPIO_IN3 145,5693
#define CTRL_GPIO_OUT0 146,5728
#define CTRL_GPIO_OUT1 147,5763
#define CTRL_GPIO_OUT2 148,5798
#define CTRL_GPIO_OUT3 149,5833
#define CTRL_MSFMTSEL 150,5868
#define CTRL_SYNCRES 151,5950
#define CTRL_ADCSTOP 152,6008
#define CTRL_PWR_INTRM 153,6069
#define CTRL_M_CB 154,6140
#define CTRL_CCB_INTRM 155,6218
#define CTRL_PDLEV0 156,6289
#define CTRL_PDLEV1 157,6348
#define CTRL_PDLEV2 158,6383
#define CTRL_PDLEV3 159,6418
#define CTRL_BREQ 160,6453
#define CTRL_DAC1_EN 161,6529
#define CTRL_DAC2_EN 162,6583
#define CTRL_ADC_EN 163,6637
#define CTRL_UART_EN 164,6690
#define CTRL_JYSTK_EN 165,6749
#define CTRL_XTALCLKDIS 166,6812
#define CTRL_PCICLKDIS 167,6886
#define STAT_INTR 170,6965
#define STAT_SYNC_ERR 171,7038
#define STAT_VC 172,7101
#define STAT_SH_VC 173,7190
#define STAT_MPWR 174,7216
#define STAT_MCCB 175,7280
#define STAT_UART 176,7338
#define STAT_DAC1 177,7397
#define STAT_DAC2 178,7456
#define STAT_ADC 179,7515
#define USTAT_RXINT 181,7574
#define USTAT_TXINT 182,7636
#define USTAT_TXRDY 183,7698
#define USTAT_RXRDY 184,7754
#define UCTRL_RXINTEN 186,7811
#define UCTRL_TXINTEN 187,7872
#define UCTRL_ENA_TXINT 188,7939
#define UCTRL_CNTRL 189,7995
#define UCTRL_CNTRL_SWR 190,8051
#define SRC_RAMADDR_MASK 193,8145
#define SRC_RAMADDR_SHIFT 194,8183
#define SRC_WE 195,8213
#define SRC_BUSY 196,8289
#define SRC_DIS 197,8343
#define SRC_DDAC1 198,8404
#define SRC_DDAC2 199,8483
#define SRC_DADC 200,8562
#define SRC_RAMDATA_MASK 201,8641
#define SRC_RAMDATA_SHIFT 202,8679
#define SRCREG_ADC 204,8709
#define SRCREG_DAC1 205,8738
#define SRCREG_DAC2 206,8767
#define SRCREG_VOL_ADC 207,8796
#define SRCREG_VOL_DAC1 208,8825
#define SRCREG_VOL_DAC2 209,8854
#define SRCREG_TRUNC_N 211,8884
#define SRCREG_INT_REGS 212,8916
#define SRCREG_ACCUM_FRAC 213,8948
#define SRCREG_VFREQ_FRAC 214,8980
#define CODEC_PIRD 216,9013
#define CODEC_PIADD_MASK 217,9081
#define CODEC_PIADD_SHIFT 218,9118
#define CODEC_PIDAT_MASK 219,9147
#define CODEC_PIDAT_SHIFT 220,9184
#define CODEC_RDY 222,9213
#define CODEC_WIP 223,9278
#define CODEC_PORD 224,9345
#define CODEC_POADD_MASK 225,9413
#define CODEC_POADD_SHIFT 226,9450
#define CODEC_PODAT_MASK 227,9479
#define CODEC_PODAT_SHIFT 228,9516
#define LEGACY_JFAST 231,9546
#define LEGACY_FIRQ 232,9611
#define SCTRL_DACTEST 234,9666
#define SCTRL_P2ENDINC 235,9756
#define SCTRL_SH_P2ENDINC 236,9801
#define SCTRL_P2STINC 237,9830
#define SCTRL_SH_P2STINC 238,9875
#define SCTRL_R1LOOPSEL 239,9904
#define SCTRL_P2LOOPSEL 240,9962
#define SCTRL_P1LOOPSEL 241,10020
#define SCTRL_P2PAUSE 242,10078
#define SCTRL_P1PAUSE 243,10137
#define SCTRL_R1INTEN 244,10196
#define SCTRL_P2INTEN 245,10257
#define SCTRL_P1INTEN 246,10318
#define SCTRL_P1SCTRLD 247,10379
#define SCTRL_P2DACSEN 248,10461
#define SCTRL_R1SEB 249,10550
#define SCTRL_R1SMB 250,10604
#define SCTRL_R1FMT 251,10659
#define SCTRL_SH_R1FMT 252,10715
#define SCTRL_P2SEB 253,10743
#define SCTRL_P2SMB 254,10797
#define SCTRL_P2FMT 255,10852
#define SCTRL_SH_P2FMT 256,10908
#define SCTRL_P1SEB 257,10936
#define SCTRL_P1SMB 258,10990
#define SCTRL_P1FMT 259,11045
#define SCTRL_SH_P1FMT 260,11101
#define CODEC_ID_DEDICATEDMIC 264,11153
#define CODEC_ID_MODEMCODEC 265,11192
#define CODEC_ID_BASSTREBLE 266,11231
#define CODEC_ID_SIMULATEDSTEREO 267,11270
#define CODEC_ID_HEADPHONEOUT 268,11309
#define CODEC_ID_LOUDNESS 269,11348
#define CODEC_ID_18BITDAC 270,11387
#define CODEC_ID_20BITDAC 271,11426
#define CODEC_ID_18BITADC 272,11465
#define CODEC_ID_20BITADC 273,11504
#define CODEC_ID_SESHIFT 275,11544
#define CODEC_ID_SEMASK 276,11575
#define FMODE_DAC 281,11628
#define MIDIINBUF 285,11722
#define MIDIOUTBUF 286,11745
#define FMODE_MIDI_SHIFT 288,11769
#define FMODE_MIDI_READ 289,11796
#define FMODE_MIDI_WRITE 290,11854
#define SND_DEV_DSP16 292,11914
static const char *stereo_enhancement[296,12019
static const char *stereo_enhancement[] __initdata 296,12019
struct es1371_state es1371_state323,12854
static struct es1371_state *devs 394,14348
extern inline unsigned ld2(398,14467
extern __inline__ unsigned int hweight32(433,14951
static unsigned wait_src_ready(444,15411
static unsigned src_read(457,15697
static void src_write(468,16014
static void set_adc_rate(482,16462
static void set_dac1_rate(518,17507
static void set_dac2_rate(541,18242
static void wrcodec(566,19054
static unsigned rdcodec(592,19966
extern inline void stop_adc(624,21092
extern inline void stop_dac1(634,21320
extern inline void stop_dac2(644,21550
static void start_dac1(654,21780
static void start_dac2(676,22638
static void start_adc(701,23629
#define DMABUF_DEFAULTORDER 725,24568
#define DMABUF_MINORDER 726,24612
extern inline void dealloc_dmabuf(729,24640
static int prog_dmabuf(744,25065
extern inline int prog_dmabuf_adc(795,26889
extern inline int prog_dmabuf_dac2(802,27095
extern inline int prog_dmabuf_dac1(809,27306
extern inline unsigned get_hwptr(816,27516
extern inline void clear_advance(827,27828
static void es1371_update_ptr(839,28130
static void es1371_handle_midi(907,30508
static void es1371_interrupt(939,31363
static const char invalid_magic[966,32134
#define VALIDATE_STATE(VALIDATE_STATE968,32214
#define AC97_PESSIMISTIC978,32565
static const unsigned int recsrc[988,32892
static const unsigned char volreg[1000,33088
#define swab(swab1026,33728
static int mixer_rdch(1028,33791
static const unsigned char volidx[1115,36299
static int mixer_wrch(1141,36910
static int mixer_ioctl(1277,39779
static loff_t es1371_llseek(1391,44011
static int es1371_open_mixdev(1398,44184
static int es1371_release_mixdev(1413,44488
static int es1371_ioctl_mixdev(1422,44688
static /*const*/ struct file_operations es1371_mixer_fops 1427,44875
static int drain_dac1(1447,45341
static int drain_dac2(1482,46505
static ssize_t es1371_read(1519,47745
static ssize_t es1371_write(1570,49060
static unsigned int es1371_poll(1626,50574
static int es1371_mmap(1656,51488
static int es1371_ioctl(1685,52228
static int es1371_open(1983,61565
static int es1371_release(2039,63146
static /*const*/ struct file_operations es1371_audio_fops 2062,63711
static ssize_t es1371_write_dac(2082,64140
static unsigned int es1371_poll_dac(2137,65652
static int es1371_mmap_dac(2158,66289
static int es1371_ioctl_dac(2180,66893
static int es1371_open_dac(2353,72183
static int es1371_release_dac(2401,73505
static /*const*/ struct file_operations es1371_dac_fops 2417,73885
static ssize_t es1371_midi_read(2437,74340
static ssize_t es1371_midi_write(2482,75459
static unsigned int es1371_midi_poll(2532,76762
static int es1371_midi_open(2556,77428
static int es1371_midi_release(2605,78843
static /*const*/ struct file_operations es1371_midi_fops 2650,80172
#define NR_DEVICE 2671,80665
static int joystick[2674,80723
static int joystick[2678,80802
static struct initvol initvol2683,80928
} initvol[2686,80974
} initvol[] __initdata 2686,80974
__initfunc(2703,81534
void cleanup_module(2875,87718

drivers/sound/sound_firmware.h,0

drivers/sound/sound_core.c,842
struct sound_unitsound_unit48,1611
static int __sound_insert_unit(60,1836
static void __sound_remove_unit(114,2670
static spinlock_t sound_loader_lock 135,3020
static int sound_insert_unit(142,3191
static void sound_remove_unit(164,3743
static struct sound_unit *chains[192,4266
int register_sound_special(194,4305
int register_sound_mixer(201,4487
int register_sound_midi(208,4652
int register_sound_dsp(220,4913
int register_sound_synth(227,5074
void unregister_sound_special(234,5239
void unregister_sound_mixer(241,5371
void unregister_sound_midi(248,5492
void unregister_sound_dsp(255,5618
void unregister_sound_synth(262,5742
static struct file_operations soundcore_fops=275,5964
static struct sound_unit *__look_for_unit(294,6130
int soundcore_open(308,6348
void cleanup_module(362,7612
int init_module(369,7764

drivers/sound/vidc.c,255
int vidc_busy;18,298
void vidc_update_filler(20,314
#define TYPE(TYPE24,384
void attach_vidc(57,979
int probe_vidc(86,1656
void unload_vidc(95,1839
static struct address_info config;107,2033
int init_module(109,2069
void cleanup_module(119,2231

drivers/sound/msnd.h,4618
#define __MSND_H31,1192
#define VERSION	33,1210
#define DEFSAMPLERATE	35,1239
#define DEFSAMPLESIZE	36,1280
#define DEFCHANNELS	37,1311
#define DEFFIFOSIZE	39,1335
#define SNDCARD_MSND	41,1361
#define SRAM_BANK_SIZE	43,1387
#define SRAM_CNTL_START	44,1418
#define DSP_BASE_ADDR	46,1451
#define DSP_BANK_BASE	47,1481
#define	HP_ICR	49,1512
#define	HP_CVR	50,1534
#define	HP_ISR	51,1556
#define	HP_IVR	52,1578
#define HP_NU	53,1600
#define HP_INFO	54,1621
#define	HP_TXH	55,1644
#define	HP_RXH	56,1666
#define	HP_TXM	57,1688
#define	HP_RXM	58,1710
#define	HP_TXL	59,1732
#define	HP_RXL	60,1754
#define HP_ICR_DEF	62,1777
#define HP_CVR_DEF	63,1802
#define HP_ISR_DEF	64,1827
#define HP_IVR_DEF	65,1852
#define HP_NU_DEF	66,1877
#define	HP_IRQM	68,1902
#define	HPR_BLRC	70,1926
#define	HPR_SPR1	71,1949
#define	HPR_SPR2	72,1972
#define	HPR_TCL0	73,1995
#define	HPR_TCL1	74,2018
#define	HPR_TCL2	75,2041
#define	HPR_TCL3	76,2064
#define	HPR_TCL4	77,2087
#define	HPICR_INIT	79,2111
#define HPICR_HM1	80,2136
#define HPICR_HM0	81,2160
#define HPICR_HF1	82,2184
#define HPICR_HF0	83,2208
#define	HPICR_TREQ	84,2232
#define	HPICR_RREQ	85,2257
#define HPCVR_HC	87,2283
#define	HPISR_HREQ	89,2307
#define HPISR_DMA	90,2332
#define HPISR_HF3	91,2356
#define HPISR_HF2	92,2380
#define	HPISR_TRDY	93,2404
#define	HPISR_TXDE	94,2429
#define	HPISR_RXDF	95,2454
#define	HPIO_290	97,2480
#define	HPIO_260	98,2500
#define	HPIO_250	99,2520
#define	HPIO_240	100,2540
#define	HPIO_230	101,2560
#define	HPIO_220	102,2580
#define	HPIO_210	103,2600
#define	HPIO_3E0	104,2620
#define	HPMEM_NONE	106,2641
#define	HPMEM_B000	107,2663
#define	HPMEM_C800	108,2685
#define	HPMEM_D000	109,2707
#define	HPMEM_D400	110,2729
#define	HPMEM_D800	111,2751
#define	HPMEM_E000	112,2773
#define	HPMEM_E800	113,2795
#define	HPIRQ_NONE	115,2818
#define HPIRQ_5	116,2840
#define HPIRQ_7	117,2860
#define HPIRQ_9	118,2880
#define HPIRQ_10	119,2900
#define HPIRQ_11	120,2920
#define HPIRQ_12	121,2940
#define HPIRQ_15	122,2960
#define	HIMT_PLAY_DONE	124,2981
#define	HIMT_RECORD_DONE	125,3010
#define	HIMT_MIDI_EOS	126,3040
#define	HIMT_MIDI_OUT	127,3068
#define	HIMT_MIDI_IN_UCHAR	129,3097
#define	HIMT_DSP	130,3129
#define	HDEX_BASE	132,3153
#define	HDEX_PLAY_START	133,3184
#define	HDEX_PLAY_STOP	134,3225
#define	HDEX_PLAY_PAUSE	135,3265
#define	HDEX_PLAY_RESUME	136,3306
#define	HDEX_RECORD_START	137,3347
#define	HDEX_RECORD_STOP	138,3389
#define	HDEX_MIDI_IN_START 139,3430
#define	HDEX_MIDI_IN_STOP	140,3474
#define	HDEX_MIDI_OUT_START	141,3516
#define	HDEX_MIDI_OUT_STOP	142,3560
#define	HDEX_AUX_REQ	143,3603
#define HIWORD(HIWORD145,3643
#define LOWORD(LOWORD146,3702
#define HIBYTE(HIBYTE147,3740
#define LOBYTE(LOBYTE148,3793
#define MAKELONG(MAKELONG149,3824
#define MAKEWORD(MAKEWORD150,3901
#define PCTODSP_OFFSET(PCTODSP_OFFSET152,3977
#define PCTODSP_BASED(PCTODSP_BASED153,4019
#define DSPTOPC_BASED(DSPTOPC_BASED154,4078
#  define outb	159,4173
#  define inb	160,4197
#  define __initfunc(__initfunc164,4242
#  define __initdata	165,4271
#  define spin_lock_irqsave(spin_lock_irqsave166,4309
#  define spin_unlock_irqrestore(spin_unlock_irqrestore167,4393
#define JQS_wStart	171,4506
#define JQS_wSize	172,4531
#define JQS_wHead	173,4555
#define JQS_wTail	174,4579
#define JQS__size	175,4603
#define DAQDS_wStart	178,4652
#define DAQDS_wSize	179,4679
#define DAQDS_wFormat	180,4705
#define DAQDS_wSampleSize	181,4733
#define DAQDS_wChannels	182,4764
#define DAQDS_wSampleRate	183,4794
#define DAQDS_wIntMsg	184,4825
#define DAQDS_wFlags	185,4853
#define DAQDS__size	186,4880
typedef u8			BYTE;BYTE188,4907
typedef u16			USHORT;USHORT189,4926
typedef u16			WORD;WORD190,4948
typedef u32			DWORD;DWORD191,4968
typedef volatile BYTE *		LPDAQD;LPDAQD192,4989
} msnd_fifo;msnd_fifo199,5105
typedef struct multisound_dev multisound_dev201,5119
#define F_RESETTING	F_RESETTING222,5598
#define F_HAVEDIGITAL	F_HAVEDIGITAL223,5622
#define F_AUDIO_WRITE_INUSE	F_AUDIO_WRITE_INUSE224,5648
#define F_WRITING	F_WRITING225,5679
#define F_WRITEBLOCK	F_WRITEBLOCK226,5701
#define F_WRITEFLUSH	F_WRITEFLUSH227,5726
#define F_AUDIO_READ_INUSE	F_AUDIO_READ_INUSE228,5751
#define F_READING	F_READING229,5781
#define F_READBLOCK	F_READBLOCK230,5803
#define F_EXT_MIDI_INUSE	F_EXT_MIDI_INUSE231,5827
#define F_INT_MIDI_INUSE	F_INT_MIDI_INUSE232,5855
#define F_DISABLE_WRITE_NDELAY	F_DISABLE_WRITE_NDELAY233,5884
} multisound_dev_t;multisound_dev_t260,6558
#  define mdelay(mdelay263,6594

drivers/sound/vidc_audio.c,915
static int      vidc_adev;23,420
static int      vidc_audio_volume;25,448
static int      vidc_audio_rate;26,483
static char     vidc_audio_format;27,516
static char     vidc_audio_channels;28,551
int  vidc_audio_get_volume(32,650
int vidc_audio_set_volume(37,715
static int vidc_audio_set_bits(43,814
static int vidc_audio_set_rate(64,1245
static int vidc_audio_set_channels(90,1899
static int vidc_audio_open(117,2450
static void vidc_audio_close(139,2829
static int vidc_audio_ioctl(144,2888
static void vidc_audio_output_block(210,4450
static void vidc_audio_start_input(230,5042
static int vidc_audio_prepare_for_input(235,5144
static void vidc_audio_dma_interrupt(240,5238
static int vidc_audio_prepare_for_output(256,5707
static void vidc_audio_reset(266,5925
static int vidc_audio_local_qlen(274,6076
static struct audio_driver vidc_audio_driver 279,6151
void vidc_audio_init(299,6925

drivers/sound/msnd_classic.c,26
#define MSND_CLASSIC2,74

drivers/sound/vidc_mixer.c,232
int vidc_volume;12,174
static int vidc_get_volume(14,192
static int vidc_set_volume(19,251
static int vidc_default_mixer_ioctl(26,383
static struct mixer_operations vidc_mixer_operations 139,2567
void vidc_mixer_init(145,2704

drivers/sound/vidc_synth.c,353
static struct synth_info vidc_info 12,189
int             vidc_sdev;25,553
int             vidc_synth_volume;26,580
static int vidc_synth_open(28,616
static void vidc_synth_close(37,728
static struct synth_operations vidc_synth_operations 43,788
int  vidc_synth_get_volume(73,1544
int vidc_synth_set_volume(78,1609
void vidc_synth_init(83,1688

drivers/sound/sonicvibes.c,6826
#define PCI_VENDOR_ID_S3 90,3505
#define PCI_DEVICE_ID_S3_SONICVIBES 93,3592
#define SV_MAGIC 96,3644
#define SV_EXTENT_SB 98,3716
#define SV_EXTENT_ENH 99,3747
#define SV_EXTENT_SYNTH 100,3778
#define SV_EXTENT_MIDI 101,3808
#define SV_EXTENT_GAME 102,3838
#define SV_EXTENT_DMA 103,3868
#define SV_MIDI_DATA 106,3901
#define SV_MIDI_COMMAND 107,3929
#define SV_MIDI_STATUS 108,3957
#define SV_DMA_ADDR0 110,3986
#define SV_DMA_ADDR1 111,4014
#define SV_DMA_ADDR2 112,4042
#define SV_DMA_ADDR3 113,4070
#define SV_DMA_COUNT0 114,4098
#define SV_DMA_COUNT1 115,4126
#define SV_DMA_COUNT2 116,4154
#define SV_DMA_MODE 117,4182
#define SV_DMA_RESET 118,4212
#define SV_DMA_MASK 119,4242
#define DMA_MODE_AUTOINIT 127,4419
#define DMA_MODE_READ 128,4450
#define DMA_MODE_WRITE 129,4541
#define SV_CODEC_CONTROL 131,4633
#define SV_CODEC_INTMASK 132,4661
#define SV_CODEC_STATUS 133,4689
#define SV_CODEC_IADDR 134,4717
#define SV_CODEC_IDATA 135,4745
#define SV_CCTRL_RESET 137,4774
#define SV_CCTRL_INTADRIVE 138,4807
#define SV_CCTRL_WAVETABLE 139,4840
#define SV_CCTRL_REVERB 140,4873
#define SV_CCTRL_ENHANCED 141,4906
#define SV_CINTMASK_DMAA 143,4940
#define SV_CINTMASK_DMAC 144,4973
#define SV_CINTMASK_SPECIAL 145,5006
#define SV_CINTMASK_UPDOWN 146,5039
#define SV_CINTMASK_MIDI 147,5072
#define SV_CSTAT_DMAA 149,5106
#define SV_CSTAT_DMAC	150,5139
#define SV_CSTAT_SPECIAL 151,5170
#define SV_CSTAT_UPDOWN	152,5203
#define SV_CSTAT_MIDI	153,5236
#define SV_CIADDR_TRD 155,5268
#define SV_CIADDR_MCE 156,5301
#define SV_CIMIX_ADCINL 159,5366
#define SV_CIMIX_ADCINR 160,5399
#define SV_CIMIX_AUX1INL 161,5432
#define SV_CIMIX_AUX1INR 162,5465
#define SV_CIMIX_CDINL 163,5498
#define SV_CIMIX_CDINR 164,5531
#define SV_CIMIX_LINEINL 165,5564
#define SV_CIMIX_LINEINR 166,5597
#define SV_CIMIX_MICIN 167,5630
#define SV_CIMIX_SYNTHINL 168,5663
#define SV_CIMIX_SYNTHINR 169,5696
#define SV_CIMIX_AUX2INL 170,5729
#define SV_CIMIX_AUX2INR 171,5762
#define SV_CIMIX_ANALOGINL 172,5795
#define SV_CIMIX_ANALOGINR 173,5828
#define SV_CIMIX_PCMINL 174,5861
#define SV_CIMIX_PCMINR 175,5894
#define SV_CIGAMECONTROL 177,5928
#define SV_CIDATAFMT 178,5961
#define SV_CIENABLE 179,5994
#define SV_CIUPDOWN 180,6027
#define SV_CIREVISION 181,6060
#define SV_CIADCOUTPUT 182,6093
#define SV_CIDMAABASECOUNT1 183,6126
#define SV_CIDMAABASECOUNT0 184,6159
#define SV_CIDMACBASECOUNT1 185,6192
#define SV_CIDMACBASECOUNT0 186,6225
#define SV_CIPCMSR0 187,6258
#define SV_CIPCMSR1 188,6291
#define SV_CISYNTHSR0 189,6324
#define SV_CISYNTHSR1 190,6357
#define SV_CIADCCLKSOURCE 191,6390
#define SV_CIADCALTSR 192,6423
#define SV_CIADCPLLM 193,6456
#define SV_CIADCPLLN 194,6489
#define SV_CISYNTHPLLM 195,6522
#define SV_CISYNTHPLLN 196,6555
#define SV_CIUARTCONTROL 197,6588
#define SV_CIDRIVECONTROL 198,6621
#define SV_CISRSSPACE 199,6654
#define SV_CISRSCENTER 200,6687
#define SV_CIWAVETABLESRC 201,6720
#define SV_CIANALOGPWRDOWN 202,6753
#define SV_CIDIGITALPWRDOWN 203,6786
#define SV_CIMIX_ADCSRC_CD 206,6821
#define SV_CIMIX_ADCSRC_DAC 207,6857
#define SV_CIMIX_ADCSRC_AUX2 208,6893
#define SV_CIMIX_ADCSRC_LINE 209,6929
#define SV_CIMIX_ADCSRC_AUX1 210,6965
#define SV_CIMIX_ADCSRC_MIC 211,7001
#define SV_CIMIX_ADCSRC_MIXOUT 212,7037
#define SV_CIMIX_ADCSRC_MASK 213,7073
#define SV_CFMT_STEREO 215,7110
#define SV_CFMT_16BIT 216,7142
#define SV_CFMT_MASK 217,7174
#define SV_CFMT_ASHIFT 218,7206
#define SV_CFMT_CSHIFT 219,7238
static const unsigned sample_size[221,7268
static const unsigned sample_shift[222,7322
#define SV_CENABLE_PPE 224,7378
#define SV_CENABLE_RE 225,7409
#define SV_CENABLE_PE 226,7440
#define MIDIINBUF 231,7498
#define MIDIOUTBUF 232,7521
#define FMODE_MIDI_SHIFT 234,7545
#define FMODE_MIDI_READ 235,7572
#define FMODE_MIDI_WRITE 236,7630
#define FMODE_DMFM 238,7690
#define SND_DEV_DSP16 240,7715
struct sv_state sv_state244,7820
static struct sv_state *devs 314,9339
static unsigned long wavetable_mem 315,9376
extern __inline__ unsigned ld2(319,9494
extern __inline__ unsigned int hweight32(353,9906
static void set_dmaa(370,10471
static void set_dmac(388,10924
extern __inline__ unsigned get_dmaa(408,11405
extern __inline__ unsigned get_dmac(423,11702
static void wrindir(438,12013
static unsigned char rdindir(446,12209
static void set_fmt(457,12421
static void frobindir(475,12884
#define REFFREQUENCY 483,13144
#define ADCMULT 484,13175
#define FULLRATE 485,13195
static unsigned setpll(487,13219
static unsigned getpll(526,14318
static void set_dac_rate(547,14815
static void set_adc_rate(566,15260
extern inline void stop_adc(594,15970
extern inline void stop_dac(604,16193
static void start_dac(614,16435
static void start_adc(626,16759
#define DMABUF_DEFAULTORDER 641,17186
#define DMABUF_MINORDER 642,17230
static void dealloc_dmabuf(644,17257
static int prog_dmabuf(662,17737
extern __inline__ void clear_advance(744,20803
static void sv_update_ptr(762,21264
static void sv_handle_midi(811,22829
static void sv_interrupt(840,23448
static void sv_midi_timer(855,23854
static const char invalid_magic[869,24216
#define VALIDATE_STATE(VALIDATE_STATE871,24292
#define MT_4 881,24639
#define MT_5MUTE 882,24663
#define MT_4MUTEMONO 883,24687
#define MT_6MUTE 884,24711
} mixtable[891,24830
static int return_mixval(905,25675
static const unsigned char volidx[950,26498
static unsigned mixer_recmask(965,26851
static int mixer_ioctl(978,27153
static loff_t sv_llseek(1172,32611
static int sv_open_mixdev(1179,32780
static int sv_release_mixdev(1194,33076
static int sv_ioctl_mixdev(1203,33264
static /*const*/ struct file_operations sv_mixer_fops 1208,33443
static int drain_dac(1228,33889
static ssize_t sv_read(1265,35112
static ssize_t sv_write(1321,36531
static unsigned int sv_poll(1382,38128
static int sv_mmap(1412,39017
static int sv_ioctl(1441,39741
static int sv_open(1732,48685
static int sv_release(1778,50023
static /*const*/ struct file_operations sv_audio_fops 1801,50573
static ssize_t sv_midi_read(1821,50966
static ssize_t sv_midi_write(1866,52073
static unsigned int sv_midi_poll(1916,53356
static int sv_midi_open(1940,54010
static int sv_midi_release(1997,55896
static /*const*/ struct file_operations sv_midi_fops 2043,57261
static int sv_dmfm_ioctl(2063,57694
static int sv_dmfm_open(2160,60363
static int sv_dmfm_release(2197,61251
static /*const*/ struct file_operations sv_dmfm_fops 2217,61700
#define NR_DEVICE 2238,62171
static int reverb[2240,62192
static int wavetable[2243,62238
static unsigned dmaio 2246,62288
static struct initvol initvol2250,62398
} initvol[2253,62444
} initvol[] __initdata 2253,62444
__initfunc(2266,62824
void cleanup_module(2467,70602

drivers/sound/sgalaxy.c,582
static void sleep(29,671
#define DPORT 35,782
#define SBDSP_RESET 39,828
#define SBDSP_READ 40,857
#define SBDSP_COMMAND 41,886
#define SBDSP_STATUS 42,915
#define SBDSP_DATA_AVAIL 43,954
static int sb_rst(45,984
static int sb_cmd(67,1336
#define ai_sgbase 83,1582
int probe_sgalaxy(85,1617
void attach_sgalaxy(114,2274
void unload_sgalaxy(131,2710
int   io 139,2841
int   irq 140,2862
int   dma 141,2883
int   dma2 142,2904
int   sgbase 143,2925
EXPORT_NO_SYMBOLS;151,3061
struct address_info ai;153,3081
int init_module(156,3107
void cleanup_module(179,3489

drivers/sound/msnd_classic.h,3906
#define __MSND_CLASSIC_H31,1216
#define DSP_NUMIO	35,1269
#define	HP_MEMM	37,1296
#define	HP_BITM	39,1322
#define	HP_WAIT	40,1347
#define	HP_DSPR	41,1372
#define	HP_PROR	42,1397
#define	HP_BLKS	43,1422
#define	HPPRORESET_OFF	45,1448
#define HPPRORESET_ON	46,1476
#define HPDSPRESET_OFF	48,1504
#define HPDSPRESET_ON	49,1532
#define HPBLKSEL_0	51,1560
#define HPBLKSEL_1	52,1584
#define HPWAITSTATE_0	54,1609
#define HPWAITSTATE_1	55,1636
#define HPBITMODE_16	57,1664
#define HPBITMODE_8	58,1690
#define	HIDSP_INT_PLAY_UNDER	60,1716
#define	HIDSP_INT_RECORD_OVER	61,1752
#define	HIDSP_INPUT_CLIPPING	62,1789
#define	HIDSP_MIDI_IN_OVER	63,1825
#define	HIDSP_MIDI_OVERRUN_ERR 64,1859
#define	HDEXAR_CLEAR_PEAKS	66,1897
#define	HDEXAR_IN_SET_POTS	67,1928
#define	HDEXAR_AUX_SET_POTS	68,1959
#define	HDEXAR_CAL_A_TO_D	69,1991
#define	HDEXAR_RD_EXT_DSP_BITS	70,2021
#define TIME_PRO_RESET_DONE	72,2057
#define TIME_PRO_SYSEX	73,2094
#define TIME_PRO_RESET	74,2127
#define AGND	76,2161
#define SIGNAL	77,2183
#define EXT_DSP_BIT_DCAL	79,2208
#define EXT_DSP_BIT_MIDI_CON	80,2242
#define BUFFSIZE	82,2281
#define HOSTQ_SIZE	83,2308
#define SRAM_CNTL_START	85,2336
#define SMA_STRUCT_START	86,2370
#define DAP_BUFF_SIZE	88,2405
#define DAR_BUFF_SIZE	89,2437
#define DAPQ_STRUCT_SIZE	91,2470
#define DARQ_STRUCT_SIZE	92,2502
#define DAPQ_BUFF_SIZE	93,2534
#define DARQ_BUFF_SIZE	94,2571
#define MODQ_BUFF_SIZE	95,2608
#define MIDQ_BUFF_SIZE	96,2640
#define DSPQ_BUFF_SIZE	97,2672
#define DAPQ_DATA_BUFF	99,2704
#define DARQ_DATA_BUFF	100,2737
#define MODQ_DATA_BUFF	101,2770
#define MIDQ_DATA_BUFF	102,2803
#define DSPQ_DATA_BUFF	103,2836
#define DAPQ_OFFSET	105,2870
#define DARQ_OFFSET	106,2909
#define MODQ_OFFSET	107,2957
#define MIDQ_OFFSET	108,3005
#define DSPQ_OFFSET	109,3053
#define MOP_PROTEUS	111,3102
#define MOP_EXTOUT	112,3130
#define MOP_EXTTHRU	113,3157
#define MOP_OUTMASK	114,3185
#define MIP_EXTIN	116,3214
#define MIP_PROTEUS	117,3240
#define MIP_INMASK	118,3268
#define SMA_wCurrPlayBytes	121,3326
#define SMA_wCurrRecordBytes	122,3362
#define SMA_wCurrPlayVolLeft	123,3400
#define SMA_wCurrPlayVolRight	124,3438
#define SMA_wCurrInVolLeft	125,3477
#define SMA_wCurrInVolRight	126,3513
#define SMA_wUser_3	127,3550
#define SMA_wUser_4	128,3580
#define SMA_dwUser_5	129,3610
#define SMA_dwUser_6	130,3641
#define SMA_wUser_7	131,3672
#define SMA_wReserved_A	132,3702
#define SMA_wReserved_B	133,3736
#define SMA_wReserved_C	134,3770
#define SMA_wReserved_D	135,3804
#define SMA_wReserved_E	136,3838
#define SMA_wReserved_F	137,3872
#define SMA_wReserved_G	138,3906
#define SMA_wReserved_H	139,3940
#define SMA_wCurrDSPStatusFlags	140,3974
#define SMA_wCurrHostStatusFlags	141,4015
#define SMA_wCurrInputTagBits	142,4056
#define SMA_wCurrLeftPeak	143,4095
#define SMA_wCurrRightPeak	144,4130
#define SMA_wExtDSPbits	145,4166
#define SMA_bExtHostbits	146,4200
#define SMA_bBoardLevel	147,4234
#define SMA_bInPotPosRight	148,4268
#define SMA_bInPotPosLeft	149,4304
#define SMA_bAuxPotPosRight	150,4339
#define SMA_bAuxPotPosLeft	151,4376
#define SMA_wCurrMastVolLeft	152,4412
#define SMA_wCurrMastVolRight	153,4450
#define SMA_bUser_12	154,4489
#define SMA_bUser_13	155,4520
#define SMA_wUser_14	156,4551
#define SMA_wUser_15	157,4582
#define SMA_wCalFreqAtoD	158,4613
#define SMA_wUser_16	159,4647
#define SMA_wUser_17	160,4678
#define SMA__size	161,4709
#  define PERMCODE	166,4807
#  define INITCODE	167,4836
#  define PERMCODESIZE	168,4865
#  define INITCODESIZE	169,4906
#    define CONFIG_MSNDCLAS_INIT_FILE	172,4989
#    define CONFIG_MSNDCLAS_PERM_FILE	176,5107
#  define PERMCODEFILE	179,5189
#  define INITCODEFILE	180,5239
#  define PERMCODE	181,5289
#  define INITCODE	182,5316
#  define PERMCODESIZE	183,5344
#  define INITCODESIZE	184,5382
#define LONGNAME	186,5428

drivers/sound/msnd_pinnacle.c,3896
#  define LINUX2039,1327
#  define SLOWIO52,1598
#    define HAVE_DSPCODEH57,1695
#  define LOGNAME	60,1758
#    define HAVE_DSPCODEH63,1833
#  define LOGNAME	66,1897
#  define CONFIG_MSND_WRITE_NDELAY	70,1974
#define get_play_delay_jiffies(get_play_delay_jiffies73,2019
#define get_rec_delay_jiffies(get_rec_delay_jiffies78,2168
static multisound_dev_t			dev;83,2313
static char				*dspini,86,2367
static char				*dspini, *permini;86,2367
static int				sizeof_dspini,87,2401
static int				sizeof_dspini, sizeof_permini;87,2401
static __inline__ int chk_send_dsp_cmd(93,2529
static void reset_play_queue(101,2722
static void reset_record_queue(122,3440
static void reset_queues(151,4454
static int dsp_set_format(163,4673
static int dsp_get_frag_size(195,5336
static int dsp_ioctl(204,5470
static int mixer_get(375,9480
#define update_volm(update_volm397,9886
#define update_potm(update_potm405,10190
#define update_pot(update_pot415,10585
static int mixer_set(423,10851
static void mixer_setup(495,12778
static unsigned long set_recsrc(507,13168
static unsigned long force_recsrc(546,14146
#define set_mixer_info(set_mixer_info552,14252
static int mixer_ioctl(556,14401
static int dev_ioctl(637,16147
static void dsp_write_flush(654,16554
static void dsp_halt(670,17007
static int dsp_release(696,17722
static int dsp_open(702,17797
static void set_default_play_audio_parameters(729,18512
static void set_default_rec_audio_parameters(736,18681
static void set_default_audio_parameters(743,18846
static void mod_inc_ref(749,18973
static void mod_dec_ref(754,19028
static int dev_open(759,19083
static void dev_release(798,20000
static __inline__ int pack_DARQ_to_DARF(830,20480
static __inline__ int pack_DAPF_to_DAPQ(865,21422
static int dsp_read(921,22803
static int dsp_write(964,23843
static int dev_read(1007,24852
static int dev_write(1022,25228
static __inline__ void eval_dsp_msg(1036,25598
static void intr(1107,27322
static struct file_operations dev_fileops 1125,27798
static int reset_dsp(1147,28233
__initfunc(1168,28617
static void msnd_init_queue(1228,30127
static int init_sma(1236,30365
__initfunc(1308,32574
static int upload_dsp_code(1328,33191
static void reset_proteus(1365,34075
static int initialize(1374,34255
static int dsp_full_reset(1411,34888
__initfunc(1430,35310
static void unload_multisound(1480,36582
__initfunc(1494,36868
__initfunc(1505,37099
__initfunc(1516,37386
__initfunc(1527,37673
__initfunc(1538,37962
__initfunc(1556,38410
__initfunc(1565,38620
typedef struct msnd_pinnacle_cfg_device msnd_pinnacle_cfg_device1582,39074
} msnd_pinnacle_cfg_t[msnd_pinnacle_cfg_t1585,39147
__initfunc(1587,39174
static int io __initdata 1661,41130
static int irq __initdata 1662,41162
static int mem __initdata 1663,41195
static int write_ndelay __initdata 1664,41228
static int cfg __initdata 1668,41331
static int reset __initdata;1671,41402
static int mpu_io __initdata;1672,41431
static int mpu_irq __initdata;1673,41461
static int ide_io0 __initdata;1674,41492
static int ide_io1 __initdata;1675,41523
static int ide_irq __initdata;1676,41554
static int joystick_io __initdata;1677,41585
static int digital __initdata;1680,41666
static int fifosize __initdata 1683,41705
static int calibrate_signal __initdata;1684,41751
int init_module(1688,41843
#    define CONFIG_MSNDPIN_CFG	1707,42373
#  define CONFIG_MSNDPIN_CFG	1713,42493
#  define CONFIG_MSNDPIN_MPU_IO	1721,42747
#  define CONFIG_MSNDPIN_MPU_IRQ	1726,42876
#  define CONFIG_MSNDPIN_IDE_IO0	1731,43007
#  define CONFIG_MSNDPIN_IDE_IO1	1736,43138
#  define CONFIG_MSNDPIN_IDE_IRQ	1741,43269
#  define CONFIG_MSNDPIN_JOYSTICK_IO	1746,43404
#  define CONFIG_MSNDPIN_DIGITAL	1752,43587
#  define CONFIG_MSND_FIFOSIZE	1759,43743
#  define CONFIG_MSND_CALSIGNAL	1764,43880
void cleanup_module(1954,48757

drivers/sound/msnd_pinnacle.h,6209
#define __MSND_PINNACLE_H31,1219
#define DSP_NUMIO	35,1273
#define IREG_LOGDEVICE	37,1300
#define IREG_ACTIVATE	38,1331
#define LD_ACTIVATE	39,1361
#define LD_DISACTIVATE	40,1389
#define IREG_EECONTROL	41,1420
#define IREG_MEMBASEHI	42,1451
#define IREG_MEMBASELO	43,1482
#define IREG_MEMCONTROL	44,1513
#define IREG_MEMRANGEHI	45,1545
#define IREG_MEMRANGELO	46,1577
#define MEMTYPE_8BIT	47,1609
#define MEMTYPE_16BIT	48,1638
#define MEMTYPE_RANGE	49,1668
#define MEMTYPE_HIADDR	50,1698
#define IREG_IO0_BASEHI	51,1729
#define IREG_IO0_BASELO	52,1761
#define IREG_IO1_BASEHI	53,1793
#define IREG_IO1_BASELO	54,1825
#define IREG_IRQ_NUMBER	55,1857
#define IREG_IRQ_TYPE	56,1889
#define IRQTYPE_HIGH	57,1919
#define IRQTYPE_LOW	58,1948
#define IRQTYPE_LEVEL	59,1976
#define IRQTYPE_EDGE	60,2006
#define	HP_DSPR	62,2036
#define	HP_BLKS	63,2061
#define HPDSPRESET_OFF	65,2087
#define HPDSPRESET_ON	66,2115
#define HPBLKSEL_0	68,2143
#define HPBLKSEL_1	69,2167
#define	HIMT_DAT_OFF	71,2192
#define	HIDSP_PLAY_UNDER	73,2222
#define	HIDSP_INT_PLAY_UNDER	74,2254
#define	HIDSP_SSI_TX_UNDER 75,2290
#define HIDSP_RECQ_OVERFLOW	76,2326
#define HIDSP_INT_RECORD_OVER	77,2361
#define HIDSP_SSI_RX_OVERFLOW	78,2398
#define	HIDSP_MIDI_IN_OVER	80,2436
#define	HIDSP_MIDI_FRAME_ERR	82,2471
#define	HIDSP_MIDI_PARITY_ERR	83,2507
#define	HIDSP_MIDI_OVERRUN_ERR	84,2544
#define HIDSP_INPUT_CLIPPING	86,2583
#define	HIDSP_MIX_CLIPPING	87,2619
#define HIDSP_DAT_IN_OFF	88,2653
#define	HDEXAR_SET_ANA_IN	90,2686
#define	HDEXAR_CLEAR_PEAKS	91,2716
#define	HDEXAR_IN_SET_POTS	92,2747
#define	HDEXAR_AUX_SET_POTS	93,2778
#define	HDEXAR_CAL_A_TO_D	94,2810
#define	HDEXAR_RD_EXT_DSP_BITS	95,2840
#define	HDEXAR_SET_SYNTH_IN	97,2876
#define	HDEXAR_READ_DAT_IN	98,2908
#define	HDEXAR_MIC_SET_POTS	99,2939
#define	HDEXAR_SET_DAT_IN	100,2971
#define HDEXAR_SET_SYNTH_48	102,3002
#define HDEXAR_SET_SYNTH_44	103,3034
#define TIME_PRO_RESET_DONE	105,3067
#define TIME_PRO_SYSEX	106,3104
#define TIME_PRO_RESET	107,3137
#define AGND	109,3171
#define SIGNAL	110,3193
#define EXT_DSP_BIT_DCAL	112,3218
#define EXT_DSP_BIT_MIDI_CON	113,3252
#define BUFFSIZE	115,3291
#define HOSTQ_SIZE	116,3318
#define SRAM_CNTL_START	118,3346
#define SMA_STRUCT_START	119,3380
#define DAP_BUFF_SIZE	121,3415
#define DAR_BUFF_SIZE	122,3447
#define DAPQ_STRUCT_SIZE	124,3480
#define DARQ_STRUCT_SIZE	125,3512
#define DAPQ_BUFF_SIZE	126,3544
#define DARQ_BUFF_SIZE	127,3581
#define MODQ_BUFF_SIZE	128,3618
#define MIDQ_BUFF_SIZE	129,3650
#define DSPQ_BUFF_SIZE	130,3682
#define DAPQ_DATA_BUFF	132,3715
#define DARQ_DATA_BUFF	133,3748
#define MODQ_DATA_BUFF	134,3781
#define MIDQ_DATA_BUFF	135,3814
#define DSPQ_DATA_BUFF	136,3847
#define DAPQ_OFFSET	138,3881
#define DARQ_OFFSET	139,3920
#define MODQ_OFFSET	140,3968
#define MIDQ_OFFSET	141,4016
#define DSPQ_OFFSET	142,4064
#define WAVEHDR_MOP	144,4113
#define EXTOUT_MOP	145,4138
#define HWINIT_MOP	146,4162
#define NO_MOP	147,4189
#define MAX_MOP	149,4214
#define EXTIN_MIP	151,4237
#define WAVEHDR_MIP	152,4260
#define HWINIT_MIP	153,4285
#define MAX_MIP	155,4313
#define SMA_wCurrPlayBytes	158,4372
#define SMA_wCurrRecordBytes	159,4408
#define SMA_wCurrPlayVolLeft	160,4446
#define SMA_wCurrPlayVolRight	161,4484
#define SMA_wCurrInVolLeft	162,4523
#define SMA_wCurrInVolRight	163,4559
#define SMA_wCurrMHdrVolLeft	164,4596
#define SMA_wCurrMHdrVolRight	165,4634
#define SMA_dwCurrPlayPitch	166,4673
#define SMA_dwCurrPlayRate	167,4710
#define SMA_wCurrMIDIIOPatch	168,4746
#define SMA_wCurrPlayFormat	169,4784
#define SMA_wCurrPlaySampleSize	170,4821
#define SMA_wCurrPlayChannels	171,4862
#define SMA_wCurrPlaySampleRate	172,4901
#define SMA_wCurrRecordFormat	173,4942
#define SMA_wCurrRecordSampleSize	174,4981
#define SMA_wCurrRecordChannels	175,5023
#define SMA_wCurrRecordSampleRate	176,5064
#define SMA_wCurrDSPStatusFlags	177,5106
#define SMA_wCurrHostStatusFlags	178,5147
#define SMA_wCurrInputTagBits	179,5188
#define SMA_wCurrLeftPeak	180,5227
#define SMA_wCurrRightPeak	181,5262
#define SMA_bMicPotPosLeft	182,5298
#define SMA_bMicPotPosRight	183,5334
#define SMA_bMicPotMaxLeft	184,5371
#define SMA_bMicPotMaxRight	185,5407
#define SMA_bInPotPosLeft	186,5444
#define SMA_bInPotPosRight	187,5479
#define SMA_bAuxPotPosLeft	188,5515
#define SMA_bAuxPotPosRight	189,5551
#define SMA_bInPotMaxLeft	190,5588
#define SMA_bInPotMaxRight	191,5623
#define SMA_bAuxPotMaxLeft	192,5659
#define SMA_bAuxPotMaxRight	193,5695
#define SMA_bInPotMaxMethod	194,5732
#define SMA_bAuxPotMaxMethod	195,5769
#define SMA_wCurrMastVolLeft	196,5807
#define SMA_wCurrMastVolRight	197,5845
#define SMA_wCalFreqAtoD	198,5884
#define SMA_wCurrAuxVolLeft	199,5918
#define SMA_wCurrAuxVolRight	200,5955
#define SMA_wCurrPlay1VolLeft	201,5993
#define SMA_wCurrPlay1VolRight	202,6032
#define SMA_wCurrPlay2VolLeft	203,6072
#define SMA_wCurrPlay2VolRight	204,6111
#define SMA_wCurrPlay3VolLeft	205,6151
#define SMA_wCurrPlay3VolRight	206,6190
#define SMA_wCurrPlay4VolLeft	207,6230
#define SMA_wCurrPlay4VolRight	208,6269
#define SMA_wCurrPlay1PeakLeft	209,6309
#define SMA_wCurrPlay1PeakRight	210,6349
#define SMA_wCurrPlay2PeakLeft	211,6390
#define SMA_wCurrPlay2PeakRight	212,6430
#define SMA_wCurrPlay3PeakLeft	213,6471
#define SMA_wCurrPlay3PeakRight	214,6511
#define SMA_wCurrPlay4PeakLeft	215,6552
#define SMA_wCurrPlay4PeakRight	216,6592
#define SMA_wCurrPlayPeakLeft	217,6633
#define SMA_wCurrPlayPeakRight	218,6672
#define SMA_wCurrDATSR	219,6712
#define SMA_wCurrDATRXCHNL	220,6745
#define SMA_wCurrDATTXCHNL	221,6781
#define SMA_wCurrDATRXRate	222,6817
#define SMA_dwDSPPlayCount	223,6853
#define SMA__size	224,6889
#  define PERMCODE	229,6987
#  define INITCODE	230,7016
#  define PERMCODESIZE	231,7045
#  define INITCODESIZE	232,7086
#    define CONFIG_MSNDPIN_INIT_FILE	235,7168
#    define CONFIG_MSNDPIN_PERM_FILE	239,7284
#  define PERMCODEFILE	242,7365
#  define INITCODEFILE	243,7414
#  define PERMCODE	244,7463
#  define INITCODE	245,7490
#  define PERMCODESIZE	246,7518
#  define INITCODESIZE	247,7556
#define LONGNAME	249,7602

drivers/sound/audio_syms.c,59
#define __NO_VERSION__6,103
char audio_syms_symbol;9,153

drivers/sound/wavfront.c,3911
#define LOOPS_PER_SEC 90,3211
#define LOOPS_PER_SEC	92,3282
#define LOOPS_PER_SEC 97,3355
#define _MIDI_SYNTH_C_100,3417
#define MIDI_SYNTH_NAME	101,3440
#define MIDI_SYNTH_CAPS	102,3481
#define OSS_SUPPORT_SEQ 121,4158
#define OSS_SUPPORT_STATIC_INSTALL 122,4226
#define OSS_SUPPORT_LEVEL 124,4304
#define WF_DEBUG 141,4884
#define DPRINT(DPRINT147,4970
#define DPRINT(DPRINT152,5125
#define LOGNAME 155,5171
#define STAT_RINTR_ENABLED	159,5250
#define STAT_CAN_READ	160,5282
#define STAT_INTR_READ	161,5310
#define STAT_WINTR_ENABLED	162,5339
#define STAT_CAN_WRITE	163,5371
#define STAT_INTR_WRITE	164,5400
int wf_raw 168,5507
int fx_raw 174,5731
int debug_default 181,6004
char *ospath 189,6274
int wait_usecs 193,6394
int sleep_interval 206,6920
int sleep_tries 207,6992
int reset_time 209,7062
int ramcheck_time 213,7186
int osrun_time 217,7295
struct wf_config wf_config239,7982
#define mpu_data_port 244,8171
#define mpu_command_port 245,8202
#define mpu_status_port 246,8258
#define data_port 247,8313
#define status_port 248,8348
#define control_port 249,8403
#define block_port 250,8460
#define last_block_port 251,8518
#define fx_status 259,8833
#define fx_op 260,8867
#define fx_lcr 261,8901
#define fx_dsp_addr 262,8935
#define fx_dsp_page 263,8970
#define fx_dsp_lsb 264,9006
#define fx_dsp_msb 265,9042
#define fx_mod_addr 266,9078
#define fx_mod_data 267,9113
} dev;294,10542
} wavefront_command;wavefront_command317,11076
} wavefront_errors[322,11147
#define NEEDS_ACK 335,11515
static wavefront_command wavefront_commands[337,11536
wavefront_errorstr 402,14723
wavefront_get_command 417,14971
wavefront_status 432,15206
wavefront_sleep 439,15279
wavefront_wait 449,15422
wavefront_read 490,16190
wavefront_write 502,16354
wavefront_cmd 516,16552
munge_int32 710,21175
demunge_int32 727,21522
munge_buf 742,21719
demunge_buf 757,21963
wavefront_delete_sample 780,22482
wavefront_get_sample_status 797,22756
wavefront_get_patch_status 867,24136
wavefront_get_program_status 916,25173
wavefront_send_patch 963,26117
wavefront_send_program 987,26657
wavefront_freemem 1025,27584
wavefront_send_sample 1039,27819
wavefront_send_alias 1342,35377
wavefront_send_multisample 1376,36477
wavefront_fetch_multisample 1422,37785
wavefront_send_drum 1472,38894
wavefront_find_free_sample 1498,39465
wavefront_find_free_patch 1513,39705
log2_2048(1528,39941
wavefront_load_gus_patch 1556,40421
wavefront_load_patch 1701,44432
process_sample_hdr 1782,46473
wavefront_synth_control 1814,47468
wavefront_llseek(1952,50679
wavefront_open 1958,50776
wavefront_release(1967,50926
wavefront_ioctl(1976,51064
static /*const*/ struct file_operations wavefront_fops 2004,51599
static struct synth_info wavefront_info 2029,52243
wavefront_oss_open 2034,52401
wavefront_oss_close 2042,52491
wavefront_oss_ioctl 2051,52582
wavefront_oss_load_patch 2097,53470
static struct synth_operations wavefront_operations 2131,54346
void attach_wavefront 2160,54929
int probe_wavefront 2166,55023
void unload_wavefront 2172,55149
wavefrontintr 2184,55509
wavefront_interrupt_bits 2230,56983
wavefront_should_cause_interrupt 2258,57291
wavefront_hw_reset 2272,57552
__initfunc 2477,62853
#define __KERNEL_SYSCALLS__2553,64493
static int errno;2560,64643
wavefront_download_firmware 2563,64674
__initfunc 2656,66685
wavefront_do_reset 2730,68920
wavefront_init 2834,70975
__initfunc 2864,71499
uninstall_wavefront 2905,72419
#define FX_LSB_TRANSFER 2932,73068
#define FX_MSB_TRANSFER 2933,73142
#define FX_AUTO_INCR 2934,73216
wffx_idle 2937,73308
__initfunc 2958,73582
__initfunc 2975,73964
wffx_mute 2987,74174
wffx_memset 2998,74296
wffx_ioctl 3052,75416
wffx_init 3110,76906
EXPORT_NO_SYMBOLS;3565,88710
int io 3567,88730
int irq 3568,88743
int init_module 3575,88933
void cleanup_module 3607,89552

drivers/sound/wf_midi.c,1831
struct wf_mpu_config wf_mpu_config61,2348
#define	DATAPORT(DATAPORT63,2394
#define	COMDPORT(COMDPORT64,2426
#define	STATPORT(STATPORT65,2460
#define MODE_MIDI	72,2615
#define MODE_SYNTH	73,2635
static struct wf_mpu_config  devs[79,2781
static struct wf_mpu_config *phys_dev 80,2819
static struct wf_mpu_config *virt_dev 81,2869
#define	OUTPUT_READY	85,2957
#define	INPUT_AVAIL	86,2983
#define	MPU_ACK	87,3008
#define	UART_MODE_ON	88,3030
wf_mpu_status 91,3076
input_avail 98,3157
output_ready 105,3242
read_data 112,3330
write_data 119,3408
#define MST_SYSMSG	129,3548
#define MST_MTC	130,3605
#define MST_SONGSEL	131,3665
#define MST_SONGPOS	132,3708
#define MST_TIMED	133,3761
#define BUFTEST(BUFTEST137,3860
static unsigned char len_tab[141,4043
wf_mpu_input_scanner 155,4267
wf_mpuintr 366,7797
wf_mpu_open 423,8862
wf_mpu_close 455,9503
wf_mpu_out 477,9919
wf_mpu_start_read 540,11182
wf_mpu_end_read 546,11237
wf_mpu_ioctl 552,11290
wf_mpu_buffer_status 560,11457
static struct synth_operations wf_mpu_synth_operations[565,11504
static struct midi_operations  wf_mpu_midi_operations[566,11563
static struct midi_operations wf_mpu_midi_proto 568,11622
static struct synth_info wf_mpu_synth_info_proto 585,11914
static struct synth_info wf_mpu_synth_info[589,12071
wf_mpu_synth_ioctl 592,12130
wf_mpu_synth_open 631,12815
wf_mpu_synth_close 663,13455
#define _MIDI_SYNTH_C_684,13874
#define MIDI_SYNTH_NAME	685,13897
#define MIDI_SYNTH_CAPS	686,13940
static struct synth_operations wf_mpu_synth_proto 689,14005
config_wf_mpu 716,14609
int virtual_midi_enable 772,16042
virtual_midi_disable 789,16332
__initfunc 806,16584
__initfunc 823,16886
uninstall_wf_mpu 867,17810
start_uart_mode 880,18043
probe_wf_mpu 909,18442
attach_wf_mpu 916,18560
unload_wf_mpu 923,18645

drivers/sound/yss225.c,600
unsigned char page_zero[1,0
unsigned char page_one[28,1573
unsigned char page_two[55,3141
unsigned char page_three[70,3941
unsigned char page_four[85,4743
unsigned char page_six[100,5544
unsigned char page_seven[121,6728
unsigned char page_zero_v2[148,8298
unsigned char page_one_v2[160,8910
unsigned char page_two_v2[172,9521
unsigned char page_three_v2[179,9843
unsigned char page_four_v2[186,10167
unsigned char page_seven_v2[194,10491
unsigned char mod_v2[205,11103
unsigned char coefficients[235,12956
unsigned char coefficients2[271,15175
unsigned char coefficients3[278,15547

drivers/sound/yss225.h,706
#define __yss255_h__2,21
extern unsigned char page_zero[4,43
extern unsigned char page_one[5,80
extern unsigned char page_two[6,116
extern unsigned char page_three[7,152
extern unsigned char page_four[8,190
extern unsigned char page_six[9,227
extern unsigned char page_seven[10,263
extern unsigned char page_zero_v2[11,301
extern unsigned char page_one_v2[12,340
extern unsigned char page_two_v2[13,378
extern unsigned char page_three_v2[14,416
extern unsigned char page_four_v2[15,456
extern unsigned char page_seven_v2[16,495
extern unsigned char mod_v2[17,535
extern unsigned char coefficients[18,569
extern unsigned char coefficients2[19,609
extern unsigned char coefficients3[20,649

drivers/sound/awacs_defs.h,4794
#define _AWACS_DEFS_H_7,264
struct awacs_regs awacs_regs13,391
#define MASK_ISFSEL	31,907
#define MASK_OSFSEL	32,962
#define MASK_RATE	33,1022
#define MASK_CNTLERR	34,1068
#define MASK_PORTCHG	35,1113
#define MASK_IEE	36,1164
#define MASK_IEPC	37,1225
#define MASK_SSFSEL	38,1293
#define MASK_NEWECMD	42,1435
#define MASK_EMODESEL	43,1506
#define MASK_EXMODEADDR	44,1576
#define MASK_EXMODEDATA	45,1653
#define MASK_ADDR0	49,1821
#define MASK_ADDR_MUX	50,1887
#define MASK_ADDR_GAIN	51,1938
#define MASK_ADDR1	53,1973
#define MASK_ADDR_MUTE	54,2039
#define MASK_ADDR_RATE	55,2073
#define MASK_ADDR2	57,2108
#define MASK_ADDR_VOLA	58,2174
#define MASK_ADDR_VOLHD 59,2245
#define MASK_ADDR4	61,2281
#define MASK_ADDR_VOLC	62,2347
#define MASK_ADDR_VOLSPK 63,2415
#define MASK_GAINRIGHT	67,2522
#define MASK_GAINLEFT	68,2574
#define MASK_GAINLINE	69,2628
#define MASK_GAINMIC	70,2691
#define MASK_MUX_CD	72,2753
#define MASK_MUX_MIC	73,2807
#define MASK_MUX_AUDIN	74,2864
#define MASK_MUX_LINE	75,2928
#define GAINRIGHT(GAINRIGHT77,2966
#define GAINLEFT(GAINLEFT78,3010
#define MASK_ADDR1RES1	82,3112
#define MASK_RECALIBRATE 83,3157
#define MASK_SAMPLERATE	84,3211
#define MASK_LOOPTHRU	85,3265
#define MASK_CMUTE	86,3323
#define MASK_SPKMUTE	87,3390
#define MASK_ADDR1RES2	88,3422
#define MASK_AMUTE	89,3471
#define MASK_HDMUTE	90,3540
#define MASK_PAROUT	91,3571
#define SAMPLERATE_48000	93,3629
#define SAMPLERATE_32000	94,3686
#define SAMPLERATE_24000	95,3743
#define SAMPLERATE_19200	96,3801
#define SAMPLERATE_16000	97,3861
#define SAMPLERATE_12000	98,3918
#define SAMPLERATE_9600	99,3977
#define SAMPLERATE_8000	100,4035
#define MASK_OUTVOLRIGHT 104,4170
#define MASK_ADDR2RES1	105,4228
#define MASK_ADDR4RES1	106,4277
#define MASK_OUTVOLLEFT	107,4315
#define MASK_ADDR2RES2	108,4375
#define MASK_ADDR4RES2	109,4425
#define VOLRIGHT(VOLRIGHT111,4464
#define VOLLEFT(VOLLEFT112,4514
#define MASK_EXTEND	116,4646
#define MASK_VALID	117,4691
#define MASK_OFLEFT	118,4740
#define MASK_OFRIGHT	119,4792
#define MASK_ERRCODE	120,4846
#define MASK_REVISION	121,4896
#define MASK_MFGID	122,4952
#define MASK_CODSTATRES	123,4996
#define MASK_INPPORT	124,5057
#define MASK_HDPCONN	125,5102
#define MASK_CLIPLEFT	129,5224
#define MASK_CLIPRIGHT	130,5293
#define MASK_CSERR	134,5433
#define MASK_EOI	135,5475
#define MASK_CSUNUSED	136,5548
#define MASK_WAIT	137,5606
#define RATE_48000	141,5683
#define RATE_44100	142,5726
#define RATE_32000	143,5771
#define RATE_29400	144,5814
#define RATE_24000	145,5859
#define RATE_22050	146,5902
#define RATE_19200	147,5948
#define RATE_17640	148,5993
#define RATE_16000	149,6039
#define RATE_14700	150,6082
#define RATE_12000	151,6127
#define RATE_11025	152,6170
#define RATE_9600	153,6217
#define RATE_8820	154,6260
#define RATE_8000	155,6304
#define RATE_7350	156,6345
#define RATE_LOW	158,6390
#define MASK_ADDR_BURGUNDY_INPSEL21 163,6480
#define MASK_ADDR_BURGUNDY_INPSEL3 164,6529
#define MASK_ADDR_BURGUNDY_GAINCH1 166,6578
#define MASK_ADDR_BURGUNDY_GAINCH2 167,6626
#define MASK_ADDR_BURGUNDY_GAINCH3 168,6674
#define MASK_ADDR_BURGUNDY_GAINCH4 169,6722
#define MASK_ADDR_BURGUNDY_VOLCH1 171,6771
#define MASK_ADDR_BURGUNDY_VOLCH2 172,6818
#define MASK_ADDR_BURGUNDY_VOLCH3 173,6865
#define MASK_ADDR_BURGUNDY_VOLCH4 174,6912
#define MASK_ADDR_BURGUNDY_OUTPUTSELECTS 176,6960
#define MASK_ADDR_BURGUNDY_OUTPUTENABLES 177,7014
#define MASK_ADDR_BURGUNDY_MASTER_VOLUME 179,7069
#define MASK_ADDR_BURGUNDY_MORE_OUTPUTENABLES 181,7124
#define MASK_ADDR_BURGUNDY_ATTENSPEAKER 183,7184
#define MASK_ADDR_BURGUNDY_ATTENLINEOUT 184,7237
#define MASK_ADDR_BURGUNDY_ATTENHP 185,7290
#define MASK_ADDR_BURGUNDY_VOLCD 187,7339
#define MASK_ADDR_BURGUNDY_VOLLINE 188,7400
#define MASK_ADDR_BURGUNDY_VOLMIC 189,7463
#define MASK_ADDR_BURGUNDY_VOLMODEM 190,7525
#define MASK_ADDR_BURGUNDY_GAINCD 192,7590
#define MASK_ADDR_BURGUNDY_GAINLINE 193,7653
#define MASK_ADDR_BURGUNDY_GAINMIC 194,7718
#define MASK_ADDR_BURGUNDY_GAINMODEM 195,7782
#define DEF_BURGUNDY_INPSEL21 199,7901
#define DEF_BURGUNDY_INPSEL3 200,7938
#define DEF_BURGUNDY_GAINCD 202,7975
#define DEF_BURGUNDY_GAINLINE 203,8010
#define DEF_BURGUNDY_GAINMIC 204,8047
#define DEF_BURGUNDY_GAINMODEM 205,8083
#define DEF_BURGUNDY_VOLCD 208,8165
#define DEF_BURGUNDY_VOLLINE 209,8205
#define DEF_BURGUNDY_VOLMIC 210,8247
#define DEF_BURGUNDY_VOLMODEM 211,8288
#define DEF_BURGUNDY_OUTPUTSELECTS 213,8332
#define DEF_BURGUNDY_OUTPUTENABLES 214,8380
#define DEF_BURGUNDY_MASTER_VOLUME 216,8423
#define DEF_BURGUNDY_MORE_OUTPUTENABLES 218,8472
#define DEF_BURGUNDY_ATTENSPEAKER 220,8520
#define DEF_BURGUNDY_ATTENLINEOUT 221,8561
#define DEF_BURGUNDY_ATTENHP 222,8602

drivers/sound/legacy.h,909
#define _SOUND_LEGACY_H_2,25
#define __SGNXPRO__8,90
#define DESKPROXL9,110
#define SM_WAVE11,151
#define SELECTED_SOUND_OPTIONS	17,202
#define HAVE_MAUI_BOOT19,239
#define PSS_HAVE_LD20,262
#define INCLUDE_TRIX_BOOT21,282
#define CONFIG_CS423223,309
#define CONFIG_GUS24,331
#define CONFIG_MAD1625,350
#define CONFIG_MAUI26,371
#define CONFIG_MPU40127,391
#define CONFIG_MSS28,413
#define CONFIG_OPL3SA129,432
#define CONFIG_OPL3SA230,455
#define CONFIG_PAS31,478
#define CONFIG_PSS32,497
#define CONFIG_SB33,516
#define CONFIG_SOFTOSS34,534
#define CONFIG_SSCAPE35,557
#define CONFIG_AD181636,579
#define CONFIG_TRIX37,601
#define CONFIG_VMIDI38,621
#define CONFIG_YM381239,642
#define CONFIG_AUDIO41,665
#define CONFIG_MIDI42,686
#define CONFIG_SEQUENCER43,706
#define CONFIG_AD184845,732
#define CONFIG_MPU_EMU46,754
#define CONFIG_SBDSP47,777
#define CONFIG_UART40148,798

drivers/sound/opl3sa2.c,1996
#define OPL3SA2_MASTER_LEFT 45,1721
#define OPL3SA2_MASTER_RIGHT 46,1755
#define OPL3SA2_MIC 47,1789
#define OPL3SA2_MISC 48,1823
#define OPL3SA3_WIDE 50,1858
#define OPL3SA3_BASS 51,1892
#define OPL3SA3_TREBLE 52,1926
#define DEFAULT_VOLUME 55,1985
#define DEFAULT_MIC 56,2011
#define DEFAULT_TIMBRE 57,2037
#define CHIPSET_UNKNOWN 59,2063
#define CHIPSET_OPL3SA2 65,2182
#define CHIPSET_OPL3SA3 66,2209
#define CHIPSET_OPL3SAX 67,2236
static int chipset 73,2313
static char chipset_name[76,2393
static int opl3sa2_mixer 79,2447
typedef struct opl3sa2_mixerdata opl3sa2_mixerdata82,2503
} opl3sa2_mixerdata;opl3sa2_mixerdata91,2738
static opl3sa2_mixerdata opl3sa2_data 95,2843
static opl3sa2_mixerdata opl3sa2_data;97,2920
static opl3sa2_mixerdata *devc 100,2967
static void opl3sa2_write(105,3058
static void opl3sa2_read(114,3209
static void opl3sa2_set_volume(125,3395
static void opl3sa2_set_mic(160,4469
static void opl3sa3_set_bass(175,4774
static void opl3sa3_set_treble(186,5004
static void opl3sa2_mixer_reset(197,5249
static void arg_to_volume_mono(214,5639
static void arg_to_volume_stereo(225,5794
static int ret_vol_mono(232,5957
static int ret_vol_stereo(238,6027
static int call_ad_mixer(244,6111
static int opl3sa2_mixer_ioctl(255,6356
static struct mixer_operations opl3sa2_mixer_operations 434,10035
int probe_opl3sa2_mpu(444,10172
void attach_opl3sa2_mpu(454,10369
void unload_opl3sa2_mpu(462,10545
static int probe_opl3sa2_mss(470,10721
static void attach_opl3sa2_mss(476,10823
static void unload_opl3sa2_mss(519,11986
int probe_opl3sa2(525,12084
void attach_opl3sa2(601,13513
void unload_opl3sa2(609,13667
int io 622,13901
int mss_io 623,13919
int mpu_io 624,13937
int irq 625,13955
int dma 626,13973
int dma2 627,13991
EXPORT_NO_SYMBOLS;650,14872
struct address_info cfg;652,14892
struct address_info mss_cfg;653,14917
struct address_info mpu_cfg;654,14946
int init_module(662,15068
void cleanup_module(726,16354

drivers/sound/v_midi.h,75
typedef struct vmidi_devc vmidi_devc1,0
	} vmidi_devc;vmidi_devc14,248

drivers/sound/midi_syms.c,88
#define __NO_VERSION__6,102
char midi_syms_symbol;9,152
#define _MIDI_SYNTH_C_12,202

drivers/sound/vidc.h,273
extern int vidc_busy;11,144
extern unsigned long dma_start,55,1344
extern unsigned long dma_start, dma_count,55,1344
extern unsigned long dma_start, dma_count, dma_bufsize;55,1344
extern unsigned long dma_buf[56,1400
extern unsigned long dma_buf[2], dma_pbuf[56,1400

drivers/sound/vidc_fill.S,0

drivers/sound/sequencer_syms.c,92
#define __NO_VERSION__6,107
char sequencer_syms_symbol;9,157
#define _SEQUENCER_C_33,640

drivers/sound/waveartist.c,2599
#define DEBUG_CMD	23,580
#define DEBUG_OUT	24,600
#define DEBUG_IN	25,620
#define DEBUG_INTR	26,639
#define DEBUG_MIXER	27,660
#define DEBUG_TRIGGER	28,683
#define debug_flg 30,709
#define DEB(DEB32,732
#define DDB(DDB33,747
#define DEB1(DEB134,762
#define	VNC_TIMER_PERIOD 49,1037
#define	MIXER_PRIVATE3_RESET	51,1097
#define	MIXER_PRIVATE3_READ	52,1137
#define	MIXER_PRIVATE3_WRITE	53,1176
#define	VNC_INTERNAL_SPKR	55,1217
#define	VNC_INTERNAL_MIC	56,1281
#define POSSIBLE_RECORDING_DEVICES	71,1720
#define SUPPORTED_MIXER_DEVICES	75,1847
static unsigned short levels[83,2054
} wavnc_info;wavnc_info133,3469
typedef struct wavnc_port_info wavnc_port_info135,3484
} wavnc_port_info;wavnc_port_info140,3583
static int		 nr_waveartist_devs;142,3603
static wavnc_info	 adev_info[143,3636
static struct timer_list vnc_timer;144,3681
waveartist_set_ctlr(148,3738
waveartist_iack(160,3995
waveartist_sleep(172,4225
waveartist_reset(185,4443
waveartist_cmd(216,4999
waveartist_cmd2(289,6260
waveartist_cmd3(302,6463
waveartist_sendcmd(315,6694
waveartist_getrev(361,7458
waveartist_mute(379,7757
waveartist_open(389,7997
waveartist_close(429,8769
waveartist_output_block(450,9153
waveartist_start_input(496,10132
waveartist_ioctl(541,11124
waveartist_get_speed(547,11223
waveartist_get_bits(575,11696
waveartist_prepare_for_input(590,11935
waveartist_prepare_for_output(643,13436
waveartist_halt(690,14827
waveartist_halt_input(707,15163
waveartist_halt_output(740,15762
waveartist_trigger(771,16341
waveartist_set_speed(811,17160
waveartist_set_channels(829,17436
waveartist_set_bits(841,17667
static struct audio_driver waveartist_audio_driver 856,17963
waveartist_intr(877,18377
waveartist_mixer_update(921,19485
#define SCALE(SCALE930,19723
waveartist_select_input(1004,21285
waveartist_mixer_set(1212,25329
waveartist_mixer_reset(1319,27774
waveartist_mixer_ioctl(1368,28837
	if 1408,30053
#define VNC_SOUND_PAUSE 1409,30089
#define VNC_SOUND_RESUME 1410,30148
	if 1428,30556
	if 1503,32574
	return -ENOIOCTLCMD;1564,33853
static struct mixer_operations waveartist_mixer_operations 1567,33878
waveartist_init(1575,34020
vnc_mute(1667,35987
vnc_volume_slider(1680,36254
vnc_slider(1730,37112
vnc_slider_tick(1784,38261
probe_waveartist(1797,38496
attach_waveartist(1830,39165
unload_waveartist(1870,40112
int io 1922,41167
int irq 1923,41202
int dma 1924,41236
int dma2 1925,41270
static int attached;1927,41306
struct address_info hw_config;1929,41328
int init_module(1931,41360
void cleanup_module(1948,41608

drivers/sound/waveartist.h,1192
#define	WA_BASE	5,88
#define CMDR	8,114
#define DATR	9,137
#define CTLR	11,161
#define	STATR	12,184
#define	IRQSTAT	14,209
#define	CMD_WE	18,260
#define	CMD_RF	19,280
#define	DAT_WE	20,300
#define	DAT_RF	21,320
#define	IRQ_REQ	23,341
#define	DMA1	24,362
#define	DMA0	25,380
#define	CMD_WEIE	29,421
#define	CMD_RFIE	30,443
#define	DAT_WEIE	31,465
#define	DAT_RFIE	32,487
#define	RESET	34,510
#define	DMA1_IE	35,529
#define	DMA0_IE	36,550
#define	IRQ_ACK	37,571
#define	WACMD_SYSTEMID	41,605
#define	WACMD_INPUTFORMAT	42,630
#define	WACMD_INPUTCHANNELS	43,681
#define	WACMD_INPUTSPEED	44,733
#define	WACMD_INPUTDMA	45,779
#define	WACMD_INPUTSIZE	46,833
#define	WACMD_INPUTSTART	47,886
#define	WACMD_INPUTPAUSE	48,928
#define	WACMD_INPUTSTOP	49,970
#define	WACMD_INPUTRESUME	50,1011
#define	WACMD_INPUTPIO	51,1055
#define	WACMD_OUTPUTFORMAT	53,1095
#define	WACMD_OUTPUTCHANNELS	54,1147
#define	WACMD_OUTPUTSPEED	55,1200
#define	WACMD_OUTPUTDMA	56,1247
#define	WACMD_OUTPUTSIZE	57,1302
#define	WACMD_OUTPUTSTART	58,1355
#define	WACMD_OUTPUTPAUSE	59,1398
#define	WACMD_OUTPUTSTOP	60,1441
#define	WACMD_OUTPUTRESUME	61,1482
#define	WACMD_OUTPUTPIO	62,1527

drivers/sound/sb_ess.h,0

drivers/sound/skeleton.c,325
#define PCI_VENDOR_MYIDENT	37,866
#define PCI_DEVICE_ID_MYIDENT_MYCARD1	43,942
#define CARD_NAME	46,996
#define MAX_CARDS	48,1055
static struct address_info	mss_data[56,1267
static int 			cards 57,1315
static int mycard_install(63,1396
int init_mycard(152,3163
int init_module(181,3616
void cleanup_module(201,3989

drivers/pci/pci.c,628
#define DBG(DBG25,518
#define DBG(DBG27,552
struct pci_bus pci_root;30,578
struct pci_dev *pci_devices 31,603
static struct pci_dev **pci_last_dev_p 32,639
static int pci_reverse __initdata 33,694
pci_find_slot(36,751
pci_find_device(48,968
pci_find_class(61,1235
pci_read_config_byte(74,1436
pci_read_config_word(80,1582
pci_read_config_dword(86,1729
pci_write_config_byte(92,1878
pci_write_config_word(98,2025
pci_write_config_dword(104,2173
pci_set_master(111,2325
__initfunc(131,2877
__initfunc(159,3640
struct pci_bus * __init pci_scan_peer_bridge(371,10337
__initfunc(384,10607
__initfunc(410,11050

drivers/pci/oldproc.c,529
struct pci_dev_info pci_dev_info22,471
#define DEVICE(DEVICE29,618
struct pci_dev_info dev_info[37,874
static struct pci_dev_info *pci_lookup_dev(563,25367
static const char *pci_strclass 597,25960
static const char *pci_strvendor(674,29697
static const char *pci_strdev(813,36877
static int sprint_dev_config(828,37353
#		define fast_b2b_capable	879,39113
#		define BIST_capable	888,39345
int get_pci_list(964,41153
#	define MSG 969,41259
static struct proc_dir_entry proc_old_pci 991,41787
__initfunc(997,41920

drivers/pci/proc.c,508
#define PCI_CFG_SPACE_SIZE 18,377
proc_bus_pci_lseek(21,423
proc_bus_pci_read(44,786
proc_bus_pci_write(128,2546
static struct file_operations proc_bus_pci_operations 198,4006
static struct inode_operations proc_bus_pci_inode_operations 212,4328
get_pci_dev_info(233,4829
static struct proc_dir_entry proc_pci_devices 277,5652
static struct proc_dir_entry *proc_bus_pci_dir;284,5824
int pci_proc_attach_device(286,5873
int pci_proc_detach_device(308,6458
__initfunc(321,6686
__initfunc(334,6947

drivers/pci/quirks.c,747
struct optimization_type optimization_type35,799
} bridge_optimization[39,880
} bridge_optimization[] __initdata 39,880
#define NUM_OPTIMIZATIONS 47,1135
struct bridge_mapping_type bridge_mapping_type50,1228
} bridge_mapping[54,1348
__initfunc(79,1878
__initfunc(111,2753
int isa_dma_bridge_buggy 136,3565
__initfunc(138,3616
typedef void (*quirk_handler)quirk_handler148,3817
struct quirk_name quirk_name154,3930
static struct quirk_name quirk_names[159,3991
static struct quirk_name quirk_names[] __initdata 159,3991
static inline char *get_quirk_name(168,4235
struct quirk_info quirk_info184,4552
static struct quirk_info quirk_list[190,4653
static struct quirk_info quirk_list[] __initdata 190,4653
__initfunc(207,5421

drivers/pci/compat.c,55
pcibios_find_class(14,235
pcibios_find_device(30,580

drivers/pci/pcisyms.c,0

drivers/cdrom/aztcd.c,3995
#define AZT_VERSION 1,0
#define MAJOR_NR 165,8584
static int aztcd_blocksizes[193,9129
#define SET_TIMER(SET_TIMER201,9348
#define CLEAR_TIMER 205,9555
#define RETURNM(RETURNM207,9613
#define RETURN(RETURN209,9740
#define SWITCH_IDE_SLAVE 213,9945
#define SWITCH_IDE_MASTER 217,10135
#define AZT_TEST221,10194
#define AZT_TEST1 222,10211
#define AZT_TEST2 223,10244
#define AZT_TEST3 224,10285
#define AZT_TEST4 225,10321
#define AZT_TEST5 226,10364
#define AZT_DEBUG227,10402
#define AZT_DEBUG_MULTISESSION228,10420
#define CURRENT_VALID 231,10459
#define AFL_STATUSorDATA 235,10594
#define AZT_BUF_SIZ 236,10643
#define READ_TIMEOUT 238,10667
#define azt_port 240,10694
#define  memcpy_fromfs 243,10777
#define  memcpy_tofs 244,10815
enum azt_state_e azt_state_e251,11035
{ AZT_S_IDLE,252,11053
  AZT_S_START,253,11078
  AZT_S_MODE,254,11103
  AZT_S_READ,255,11128
  AZT_S_DATA,256,11153
  AZT_S_STOP,257,11178
  AZT_S_STOPPING 258,11203
enum azt_read_modes azt_read_modes260,11231
{ AZT_MODE_0,261,11252
  AZT_MODE_1,262,11334
  AZT_MODE_2 263,11385
static int aztPresent 270,11612
static volatile int azt_transfer_is_active=272,11640
static char azt_buf[274,11687
static char buf[276,11797
static volatile int azt_buf_bn[279,11888
static volatile int azt_buf_bn[AZT_BUF_SIZ], azt_next_bn;279,11888
static volatile int azt_buf_in,280,11946
static volatile int azt_buf_in, azt_buf_out 280,11946
static volatile int azt_error=281,11996
static int azt_open_count=282,12029
static volatile enum azt_state_e azt_state 283,12058
static volatile enum azt_state_e azt_state_old 285,12132
static volatile int azt_st_old 286,12195
static volatile enum azt_read_modes azt_read_mode 288,12238
static int azt_mode 290,12303
static volatile int azt_read_count 291,12329
static int azt_port 293,12370
static int azt_port_auto[299,12473
static char  azt_cont 301,12520
static char  azt_init_end 302,12547
static char  azt_auto_eject 303,12578
static int AztTimeout,305,12625
static int AztTimeout, AztTries;305,12625
static struct wait_queue *azt_waitq 306,12658
static struct timer_list delay_timer 307,12703
static struct azt_DiskInfo DiskInfo;309,12771
static struct azt_Toc Toc[310,12808
static struct azt_Play_msf azt_Play;311,12847
static int  aztAudioStatus 313,12885
static char aztDiskChanged 314,12937
static char aztTocUpToDate 315,12969
static unsigned char aztIndatum;317,13002
static unsigned long aztTimeOutCount;318,13035
static int aztCmd 319,13073
static struct file_operations azt_fops 373,14886
# define OP_OK 406,16181
void op_ok(407,16204
# define PA_OK 419,16516
void pa_ok(420,16539
# define STEN_LOW 432,16861
void sten_low(433,16891
# define DTEN_LOW 445,17229
void dten_low(446,17258
#define STEN_LOW_WAIT 461,17637
void statusAzt(462,17673
static void aztStatTimer(470,17886
static int aztSendCmd(491,18438
static int sendAztCmd(532,19650
static int aztSeek(569,20789
static int aztSetDiskType(603,21743
static int aztStatus(636,22600
static int getAztStatus(654,22899
static int aztPlay(684,23650
static void aztCloseDoor(694,23930
static void aztLockDoor(701,24014
static void aztUnlockDoor(710,24127
static int aztGetValue(724,24442
int aztGetQChannelInfo(741,24779
static int aztUpdateToc(785,26674
static int aztGetDiskInfo(859,29186
static int aztGetMultiDiskInfo(916,30913
static int aztGetToc(1010,34281
void aztcd_setup(1088,36699
static int check_aztcd_media_change(1101,36946
static int aztcd_ioctl(1113,37183
static void azt_transfer(1446,49479
static void do_aztcd_request(1481,50341
static void azt_invalidate_buffers(1526,51495
int aztcd_open(1540,51774
static void aztcd_release(1585,52946
int aztcd_init(1618,53715
int init_module(1820,60886
void cleanup_module(1825,60935
static void azt_poll(1846,61577
static void azt_hsg2msf(2254,72491
static long azt_msf2hsg(2270,73005
static void azt_bin2bcd(2275,73181
static int azt_bcd2bin(2283,73293

drivers/cdrom/cdu31a.c,4116
#define MAJOR_NR 173,6247
#define CDU31A_READAHEAD 176,6307
#define CDU31A_MAX_CONSECUTIVE_ATTENTIONS 177,6379
#define DEBUG 179,6425
} cdu31a_addresses[194,6897
} cdu31a_addresses[] __initdata 194,6897
static unsigned int sony_next_block;225,8113
static unsigned int sony_blocks_left 226,8188
static unsigned int cdu31a_port 232,8484
static volatile unsigned short sony_cd_cmd_reg;239,8691
static volatile unsigned short sony_cd_param_reg;240,8739
static volatile unsigned short sony_cd_write_reg;241,8789
static volatile unsigned short sony_cd_control_reg;242,8839
static volatile unsigned short sony_cd_status_reg;243,8891
static volatile unsigned short sony_cd_result_reg;244,8942
static volatile unsigned short sony_cd_read_reg;245,8993
static volatile unsigned short sony_cd_fifost_reg;246,9042
static int sony_spun_up 249,9095
static int sony_speed 251,9173
static int sony_xa_mode 253,9241
static int sony_raw_data_mode 256,9353
static unsigned int sony_usage 259,9499
static int sony_pas_init 262,9635
static struct s_sony_session_toc single_toc;265,9727
static struct s_all_sessions_toc sony_toc;269,9837
static int sony_toc_read 272,9970
static struct s_sony_subcode last_sony_subcode;275,10059
static volatile int sony_inuse 278,10205
static struct wait_queue * sony_wait 281,10313
static struct task_struct *has_cd_task 283,10394
static int is_double_speed 287,10534
static int is_a_cdu31a 288,10610
static int is_auto_eject 290,10672
static volatile int sony_audio_status 296,10855
static unsigned volatile char cur_pos_msf[305,11275
static unsigned volatile char final_pos_msf[306,11335
static int cdu31a_irq 309,11445
static struct wait_queue *cdu31a_irq_wait 314,11586
static int curr_control_reg 316,11637
static char disk_changed;321,11882
static char readahead_buffer[326,12066
static int readahead_dataleft 327,12114
static int readahead_bad 328,12149
static struct timer_list cdu31a_abort_timer;333,12349
static int abort_read_started 338,12552
scd_disk_change(346,12705
scd_media_changed(361,12942
static int scd_drive_status(370,13122
enable_interrupts(383,13431
disable_interrupts(392,13677
sony_sleep(405,14071
is_attention(430,14538
is_busy(436,14639
is_data_ready(442,14735
is_data_requested(448,14841
is_result_ready(454,14955
is_param_write_rdy(460,15062
is_result_reg_not_empty(466,15180
reset_drive(472,15304
static int scd_reset(484,15539
clear_attention(500,15805
clear_result_ready(506,15919
clear_data_ready(512,16039
clear_param_reg(518,16158
read_status_register(524,16282
read_result_register(530,16378
read_data_register(536,16474
write_param(542,16557
write_cmd(548,16649
cdu31a_interrupt(555,16800
static unsigned char *translate_error(601,17853
set_drive_params(657,19597
static int scd_select_speed(701,20835
static int scd_lock_door(716,21103
restart_on_error(733,21485
write_params(765,22289
get_result(799,22938
do_sony_cd_cmd(935,26283
handle_sony_cd_attention(1038,28628
int_to_bcd(1135,30974
bcd_to_int(1148,31172
log_to_msf(1159,31386
msf_to_log(1173,31672
size_to_buf(1192,31982
start_request(1208,32510
abort_read(1291,34442
handle_abort_timeout(1326,35194
input_data(1359,35971
read_data_block(1427,37632
do_cdu31a_request(1644,43723
sony_get_toc(1876,49444
#define DEBUG 2057,56738
static int scd_get_last_session(2233,63698
find_track(2254,64233
read_subcode(2274,64512
scd_get_mcn(2308,65708
sony_get_subchnl_info(2352,67180
read_audio_data(2419,69040
read_audio(2555,72743
do_sony_cd_cmd_chk(2739,77993
static int scd_tray_move(2759,78598
static int scd_audio_ioctl(2781,79160
static int scd_dev_ioctl(3002,86497
static int scd_spinup(3080,88483
scd_open(3132,90126
scd_release(3203,92054
static struct cdrom_device_ops scd_dops 3218,92335
static struct cdrom_device_info scd_info 3238,93304
static const char *load_mech[3252,93888
static const char *load_mech[] __initdata 3252,93888
__initfunc(3254,93975
__initfunc(3321,95867
static int cdu31a_block_size;3347,96279
__initfunc(3352,96343
init_module(3545,100797
cleanup_module(3551,100848

drivers/cdrom/cm206.c,3251
#define REVISION 174,8067
#define MAJOR_NR 194,8505
#define STATISTICS	198,8577
#define AUTO_PROBE_MODULE199,8642
#define USE_INSW200,8668
static int auto_probe=208,8870
static int cm206_base 210,8916
static int cm206_irq 211,8952
#define POLLOOP 217,9183
#define READ_AHEAD 218,9223
#define BACK_AHEAD 219,9282
#define DATA_TIMEOUT 220,9337
#define UART_TIMEOUT 221,9399
#define DSB_TIMEOUT 222,9431
#define UR_SIZE 223,9503
#define LINUX_BLOCK_SIZE 225,9559
#define RAW_SECTOR_SIZE 226,9617
#define ISO_SECTOR_SIZE 227,9683
#define BLOCKS_ISO 228,9712
#define CD_SYNC_HEAD 229,9774
#define stats(stats232,9882
#define stats(stats236,9992
#define Debug(Debug239,10027
#define debug(debug241,10090
#define debug(debug243,10122
typedef unsigned char uch;uch246,10157
typedef unsigned short ush;ush247,10197
struct toc_struct{toc_struct249,10240
static int cm206_blocksizes[253,10329
struct cm206_struct cm206_struct255,10373
#define DISC_STATUS 287,11813
#define FIRST_TRACK 288,11852
#define LAST_TRACK 289,11891
#define PAUSED 290,11929
#define PLAY_TO 291,11995
static struct cm206_struct * cd;293,12061
void send_command_polled(298,12236
uch receive_echo_polled(308,12464
uch send_receive_polled(318,12657
inline void clear_ur(324,12763
static void cm206_interrupt(346,13609
void cm206_timeout(418,16318
int sleep_or_timeout(427,16545
void cm206_delay(443,16904
void send_command(449,17017
uch receive_byte(468,17624
inline uch receive_echo(494,18294
inline uch send_receive(499,18366
inline uch wait_dsb(505,18458
int type_0_command(510,18525
int type_1_command(525,18836
void reset_cm260(536,19180
void fsm(544,19419
inline int fsm2lba(551,19538
inline int f_s_m2lba(556,19619
int start_read(561,19696
int stop_read(581,20164
int read_background(598,20606
#define transport_data 609,20935
void transport_data(613,21105
#define MAX_TRIES 623,21252
int read_sector(624,21274
void cm206_bh(665,22588
void get_drive_status(709,23729
void get_disc_status(720,24017
static int cm206_open(729,24223
static void cm206_release(742,24544
void empty_buffer(757,24983
int try_adapter(774,25585
static void do_cm206_request(804,26541
void seek(861,28553
uch bcdbin(871,28735
inline uch normalize_track(876,28834
int get_toc_lba(887,29180
void update_toc_entry(929,30215
int read_toc_header(936,30365
void play_from_to_msf(951,30744
void play_from_to_track(964,31156
int get_current_q(987,31795
void invalidate_toc(1016,32776
void get_toc_entry(1023,32956
int cm206_audio_ioctl(1040,33606
static int cm206_ioctl(1086,34923
int cm206_media_changed(1104,35370
int cm206_open_files(1120,35798
int cm206_tray_move(1127,35931
int cm206_drive_status(1138,36205
int cm206_lock_door(1148,36570
int cm206_get_last_session(1159,37050
int cm206_get_upc(1178,37565
int cm206_reset(1194,37947
int cm206_select_speed(1207,38292
static struct cdrom_device_ops cm206_dops 1227,38641
static struct cdrom_device_info cm206_info 1249,39430
static void cleanup(1265,39957
__initfunc(1297,40853
__initfunc(1317,41470
__initfunc(1331,41913
static int cm206[1414,44684
__initfunc(1416,44762
int init_module(1431,45064
void cleanup_module(1440,45185
__initfunc(1450,45428

drivers/cdrom/gscd.c,2032
#define GSCD_VERSION 1,0
#define  NO_GSCD_DEBUG 38,1469
#define  NO_IOCTL_DEBUG39,1493
#define  NO_MODULE_DEBUG40,1517
#define  NO_FUTURE_WORK41,1542
#define MAJOR_NR 64,2017
#define gscd_port 66,2078
static int gscd_blocksizes[69,2173
static int gscdPresent 71,2213
static unsigned char gscd_buf[73,2253
static int   gscd_bn 74,2332
static short gscd_port 75,2372
static int  curr_drv_state;134,4274
static int  drv_states[135,4302
static int  drv_mode;136,4354
static int  disk_state;137,4376
static int  speed;138,4400
static int  ndrives;139,4419
static unsigned char drv_num_read;141,4441
static unsigned char f_dsk_valid;142,4476
static unsigned char current_drive;143,4510
static unsigned char f_drv_ok;144,4546
static char f_AudioPlay;147,4579
static char f_AudioPause;148,4604
static int  AudioStart_m;149,4630
static int  AudioStart_f;150,4656
static int  AudioEnd_m;151,4682
static int  AudioEnd_f;152,4706
static struct file_operations gscd_fops 155,4733
static int check_gscd_med_chg 176,5320
__initfunc(197,5625
static int gscd_ioctl 206,5736
static void gscd_transfer 244,6618
static void do_gscd_request 263,6972
gscd_read_cmd 317,7930
static int gscd_open 366,9172
static int gscd_release 400,9750
int get_status 416,9991
void cc_invalidate 435,10278
void clear_Audio 446,10436
int wait_drv_ready 462,10620
void cc_Ident 481,10916
void cc_SetSpeed 489,11059
void cc_Reset 502,11268
void cmd_status 512,11400
void cmd_out 525,11604
static void cmd_write_cmd 661,15291
static int cmd_unit_alive 682,15622
static void cmd_info_in 706,16045
static void cmd_read_b 740,16702
static void cmd_end 782,17551
static void cmd_read_w 817,18144
__initfunc(854,18872
__initfunc(905,19946
static void update_state 926,20285
int init_module 962,20902
void cleanup_module 981,21157
__initfunc(997,21512
__initfunc(1005,21705
static void gscd_hsg2msf 1076,23483
static void gscd_bin2bcd 1090,23807
static long gscd_msf2hsg 1101,23935
static int gscd_bcd2bin 1109,24125

drivers/cdrom/mcd.c,2712
#define MAJOR_NR 92,3409
#define mcd_port 95,3470
static int mcd_blocksizes[98,3565
static int mcdDouble 102,3682
static int mcd1xhold 105,3761
static int mcdPresent 108,3843
#define TEST1 111,3877
#define TEST2 112,3906
#define TEST3 113,3937
#define TEST4 114,3972
#define TEST5 115,4011
#define QUICK_LOOP_DELAY 119,4062
#define QUICK_LOOP_COUNT 120,4116
#define QUICK_LOOP_DELAY122,4150
#define QUICK_LOOP_COUNT 123,4175
#define CURRENT_VALID 127,4276
#define MFL_STATUSorDATA 131,4406
#define MCD_BUF_SIZ 132,4455
static volatile int mcd_transfer_is_active;133,4478
static char mcd_buf[134,4522
static volatile int mcd_buf_bn[135,4600
static volatile int mcd_buf_bn[MCD_BUF_SIZ], mcd_next_bn;135,4600
static volatile int mcd_buf_in,136,4658
static volatile int mcd_buf_in, mcd_buf_out 136,4658
static volatile int mcd_error;137,4708
static int mcd_open_count;138,4739
enum mcd_state_e mcd_state_e139,4766
  MCD_S_IDLE,140,4785
  MCD_S_START,141,4809
  MCD_S_MODE,142,4833
  MCD_S_READ,143,4855
  MCD_S_DATA,144,4879
  MCD_S_STOP,145,4903
  MCD_S_STOPPING 146,4927
static volatile enum mcd_state_e mcd_state 148,4955
static int mcd_mode 149,5012
static int MCMD_DATA_READ=150,5038
#define READ_TIMEOUT 151,5081
#define WORK_AROUND_MITSUMI_BUG_92152,5107
#define WORK_AROUND_MITSUMI_BUG_93153,5142
int mitsumi_bug_93_wait 155,5211
static short mcd_port 158,5281
static int   mcd_irq 159,5352
static int McdTimeout,162,5452
static int McdTimeout, McdTries;162,5452
static struct wait_queue *mcd_waitq 163,5485
static struct mcd_DiskInfo DiskInfo;165,5530
static struct mcd_Toc Toc[166,5567
static struct mcd_Play_msf mcd_Play;167,5606
static int audioStatus;169,5644
static char mcdDiskChanged;170,5668
static char tocUpToDate;171,5696
static char mcdVersion;172,5721
static struct cdrom_device_ops mcd_dops 196,6720
static struct cdrom_device_info mcd_info 216,7598
__initfunc(232,8211
static int mcd_media_changed(245,8495
statusCmd(272,8980
mcdPlay(294,9325
mcd_tray_move(311,9571
msf2hsg(338,10293
int mcd_audio_ioctl(347,10419
mcd_transfer(590,16332
mcd_interrupt(629,17224
do_mcd_request(650,17566
mcd_poll(690,18370
mcd_invalidate_buffers(1077,26735
static int mcd_open(1089,26925
static void mcd_release(1119,27835
static void cleanup(1130,28090
__initfunc(1156,28575
hsg2msf(1275,31381
bin2bcd(1290,31631
bcd2bin(1300,31733
mcdStatus(1312,31900
sendMcdCmd(1333,32117
mcdStatTimer(1351,32548
getMcdStatus(1377,32935
int mcd_drive_status(1408,33560
getValue(1428,34033
GetQChannelInfo(1455,34433
updateToc(1490,35304
GetDiskInfo(1511,35513
GetToc(1559,36637
int init_module(1638,38519
void cleanup_module(1643,38566

drivers/cdrom/mcdx.c,2672
static const char *mcdx_c_version51,2067
#define MAJOR_NR 71,2513
#define	mcdx_drive_map 75,2629
#define xwarn(xwarn82,2717
#define xinfo(xinfo85,2805
#define xinfo(xinfo87,2879
#define xtrace(xtrace91,2936
#define xdebug(xdebug94,3044
#define xtrace(xtrace96,3122
#define xdebug(xdebug97,3162
const int REQUEST_SIZE 107,3561
const int DIRECT_SIZE 108,3625
enum drivemodes drivemodes110,3694
enum drivemodes { TOC,110,3694
enum drivemodes { TOC, DATA,110,3694
enum drivemodes { TOC, DATA, RAW,110,3694
enum drivemodes { TOC, DATA, RAW, COOKED 110,3694
enum datamodes datamodes111,3738
enum datamodes { MODE0,111,3738
enum datamodes { MODE0, MODE1,111,3738
enum datamodes { MODE0, MODE1, MODE2 111,3738
enum resetmodes resetmodes112,3778
enum resetmodes { SOFT,112,3778
enum resetmodes { SOFT, HARD 112,3778
const int SINGLE 114,3811
const int DOUBLE 115,3875
const int DOOR 116,3939
const int MULTI 117,3995
const unsigned char READ1X 119,4053
const unsigned char READ2X 120,4088
struct s_subqcode s_subqcode124,4195
struct s_diskinfo s_diskinfo132,4331
struct s_multi s_multi139,4462
struct s_version s_version144,4534
struct s_drive_stuff s_drive_stuff151,4669
static int mcdx_blocksizes[266,9402
static int mcdx_drive_map[267,9444
static struct s_drive_stuff* mcdx_stuffp[268,9492
static struct s_drive_stuff* mcdx_irq_map[269,9548
static struct cdrom_device_ops mcdx_dops 274,9678
static struct cdrom_device_info mcdx_info 293,10520
static int mcdx_audio_ioctl(312,11208
void do_mcdx_request(524,17929
mcdx_open(605,19554
static void mcdx_close(742,24066
static int mcdx_media_changed(755,24287
__initfunc(773,24696
static void mcdx_delay(781,24912
mcdx_intr(801,25586
mcdx_talk 847,26784
EXPORT_NO_SYMBOLS;957,30044
int init_module(959,30064
void cleanup_module(979,30340
__initfunc(1016,31251
__initfunc(1173,35792
mcdx_transfer(1201,36312
static int mcdx_xfer(1231,37022
static char* port(1396,41271
static int irq(1397,41324
static unsigned int bcd2uint(1401,41397
static unsigned int uint2bcd(1404,41483
static void log2msf(1407,41577
static unsigned int msf2log(1415,41790
int mcdx_readtoc(1423,41978
mcdx_playmsf(1515,44386
mcdx_playtrk(1552,45252
mcdx_tray_move(1582,45997
mcdx_stop(1599,46443
mcdx_hold(1603,46571
mcdx_requestsubqcode(1607,46699
mcdx_requestmultidiskinfo(1632,47204
mcdx_requesttocdata(1651,47671
mcdx_setdrivemode(1673,48237
mcdx_setdatamode(1695,48762
mcdx_config(1709,49150
mcdx_requestversion(1730,49557
mcdx_reset(1746,49837
static int mcdx_lockdoor(1755,50158
mcdx_getstatus(1769,50549
mcdx_getval(1773,50682
mcdx_setattentuator(1791,51104

drivers/cdrom/optcd.c,6838
#define MAJOR_NR 71,2626
#define DEBUG(DEBUG86,2952
static void debug(87,2977
#define DEBUG(DEBUG101,3203
#define optcd_port 108,3340
static short optcd_port 109,3398
#define DATA_PORT	112,3523
#define STATUS_PORT	113,3575
#define COMIN_PORT	116,3678
#define RESET_PORT	117,3744
#define HCON_PORT	118,3814
#define ST_DRVERR	122,3933
#define ST_DOOR_OPEN	123,3957
#define ST_MIXEDMODE_DISK	124,3984
#define ST_MODE_BITS	125,4015
#define ST_M_STOP	126,4042
#define ST_M_READ	127,4066
#define ST_M_AUDIO	128,4090
#define ST_M_PAUSE	129,4115
#define ST_M_INITIAL	130,4140
#define ST_M_ERROR	131,4167
#define ST_M_OTHERS	132,4192
#define	ST_MODE2TRACK	133,4218
#define	ST_DSK_CHG	134,4246
#define ST_L_LOCK	135,4271
#define ST_CMD_OK	136,4295
#define ST_OP_OK	137,4319
#define ST_PA_OK	138,4342
#define ST_OP_ERROR	139,4365
#define ST_PA_ERROR	140,4391
#define ERR_ILLCMD	145,4520
#define ERR_ILLPARM	146,4583
#define ERR_SLEDGE	147,4649
#define ERR_FOCUS	148,4673
#define ERR_MOTOR	149,4696
#define ERR_RADIAL	150,4719
#define ERR_PLL	151,4743
#define ERR_SUB_TIM	152,4786
#define ERR_SUB_NF	153,4839
#define ERR_TRAY	154,4893
#define ERR_TOC	155,4915
#define ERR_JUMP	156,4972
#define ERR_MODE	158,5012
#define ERR_FORM	159,5034
#define ERR_HEADADDR	160,5056
#define ERR_CRC	161,5113
#define ERR_ECC	162,5135
#define ERR_CRC_UNC	163,5187
#define ERR_ILLBSYNC	164,5252
#define ERR_VDST	165,5309
#define ERR_READ_TIM	167,5373
#define ERR_DEC_STP	168,5424
#define ERR_DEC_TIM	169,5471
#define ERR_KEY	171,5561
#define ERR_READ_FINISH	172,5609
#define ERR_NOBSYNC	174,5691
#define ERR_SHORTB	175,5736
#define ERR_LONGB	176,5778
#define ERR_SHORTDSP	177,5818
#define ERR_LONGDSP	178,5865
#define FL_EJECT	182,5970
#define FL_WAIT	183,5992
#define FL_EOP	184,6031
#define FL_STEN	185,6069
#define FL_DTEN	186,6123
#define FL_DRQ	187,6175
#define FL_RESET	188,6213
#define FL_STDT	189,6275
#define HCON_DTS	193,6358
#define HCON_SDRQB	194,6380
#define HCON_LOHI	195,6404
#define HCON_DMA16	196,6427
#define COMDRVST	201,6534
#define COMERRST	202,6580
#define COMIOCTLISTAT	203,6626
#define COMINITSINGLE	204,6695
#define COMINITDOUBLE	205,6752
#define COMUNLOCK	206,6809
#define COMLOCK	207,6845
#define COMLOCKST	208,6878
#define COMVERSION	209,6926
#define COMVOIDREADMODE	210,6978
#define COMFETCH	212,7053
#define COMREAD	213,7095
#define COMREADRAW	214,7128
#define COMREADALL	215,7172
#define COMLEADIN	217,7252
#define COMSEEK	218,7297
#define COMPAUSEON	219,7330
#define COMPAUSEOFF	220,7369
#define COMSTOP	221,7410
#define COMOPEN	222,7443
#define COMCLOSE	223,7486
#define COMPLAY	224,7530
#define COMPLAY_TNO	225,7569
#define COMSUBQ	226,7627
#define COMLOCATION	227,7671
#define COMCHCTRL	229,7750
#define COMDRVTEST	231,7837
#define COMTEST	232,7884
inline static int flag_low(239,8089
static int sleep_timeout;255,8442
static struct wait_queue *waitq 256,8498
static struct timer_list delay_timer 257,8538
#define SET_TIMER(SET_TIMER259,8604
#define CLEAR_TIMER	263,8746
static void sleep_timer(268,8877
static int sleep_flag_low(280,9164
#define ERR_IF_CMD_TIMEOUT	304,9742
#define ERR_IF_ERR_TIMEOUT	305,9775
#define ERR_IF_RESP_TIMEOUT	306,9808
#define ERR_IF_DATA_TIMEOUT	307,9842
#define ERR_IF_NOSTAT	308,9876
static int send_cmd(312,9958
static int send_params(329,10489
static int send_seek_params(357,11274
inline static int get_exec_status(379,11917
inline static int get_data(396,12364
static int reset_drive(410,12660
inline static int stdt_flags(439,13311
inline static int fetch_status(446,13467
inline static void fetch_data(460,13753
inline static void flush_data(468,13918
inline static int exec_cmd(480,14202
inline static int exec_read_cmd(491,14457
inline static int exec_seek_cmd(501,14677
inline static int exec_long_cmd(514,14935
inline static void single_bin2bcd(526,15170
static void bin2bcd(534,15331
#define CD_FPM	546,15651
static void lba2msf(548,15713
inline static u_char bcd2bin(563,16071
static void msf2lba(570,16203
static void msf_bcd2bin(580,16477
static int audio_status 590,16704
static char toc_uptodate 591,16753
static char disk_changed 592,16783
static int drive_status(595,16890
static int get_q_channel(624,17562
#define ERR_TOC_MISSINGINFO	705,18999
#define ERR_TOC_MISSINGENTRY	706,19033
struct cdrom_disk_info cdrom_disk_info709,19070
static struct cdrom_disk_info disk_info;722,19387
#define MAX_TRACKS	724,19429
static struct cdrom_subchnl toc[725,19453
#define QINFO_FIRSTTRACK	727,19499
#define QINFO_LASTTRACK	728,19548
#define QINFO_DISKLENGTH	729,19597
#define QINFO_NEXTSESSION	730,19646
#define I_FIRSTTRACK	732,19697
#define I_LASTTRACK	733,19723
#define I_DISKLENGTH	734,19748
#define I_NEXTSESSION	735,19774
#define I_ALL	736,19801
void toc_debug_info(740,19875
static int read_toc(756,20295
static int get_multi_disk_info(862,23384
static int update_toc(924,24784
#define CURRENT_VALID 973,25838
#define NOBUF	979,26013
static char buf[981,26032
static volatile int buf_bn[982,26072
static volatile int buf_bn[N_BUFS], next_bn;982,26072
static volatile int buf_in 983,26117
inline static void opt_invalidate_buffers(985,26167
static void transfer(999,26499
enum state_e state_e1042,27407
	S_IDLE,1043,27422
	S_START,1044,27440
	S_READ,1045,27458
	S_DATA,1046,27476
	S_STOP,1047,27494
	S_STOPPING	1048,27512
static volatile enum state_e state 1051,27536
static volatile enum state_e state_old 1053,27597
static volatile int flags_old 1054,27646
static volatile long state_n 1055,27681
static int in_vfs 1063,27959
static volatile int transfer_is_active 1066,27984
static volatile int error 1067,28028
static int tries;1068,28093
static int timeout 1069,28125
static struct timer_list req_timer 1071,28150
#define SET_REQ_TIMER(SET_REQ_TIMER1073,28214
#define CLEAR_REQ_TIMER	1077,28354
static void poll(1079,28401
static void do_optcd_request(1359,34236
static char auto_eject 1408,35418
static int cdrompause(1410,35447
static int cdromresume(1427,35729
static int cdromplaymsf(1445,36050
static int cdromplaytrkind(1468,36515
static int cdromreadtochdr(1514,37756
static int cdromreadtocentry(1531,38086
static int cdromvolctrl(1567,39088
static int cdromsubchnl(1594,39710
static int cdromread(1619,40251
static int cdromseek(1647,40877
static int cdrommultisession(1669,41275
static int cdromreset(1717,42414
static int opt_ioctl(1737,42672
static int open_count 1865,45937
static int opt_open(1868,46022
static int opt_release(1918,47251
static int opt_media_change(1948,47954
__initfunc(1965,48325
static struct file_operations opt_fops 2002,49133
__initfunc(2021,49644
__initfunc(2029,49850
int init_module(2074,50923
void cleanup_module(2080,50973

drivers/cdrom/sbpcd.c,7902
#define VERSION 16,769
#define SBPCD_ISSUE 322,16713
#define MAJOR_NR 349,17267
#define MAJOR_NR 352,17335
#define MAJOR_NR 355,17430
#define MAJOR_NR 358,17524
#define DO_SBPCD_REQUEST(DO_SBPCD_REQUEST369,17815
#define SBPCD_INIT(SBPCD_INIT370,17863
#define DO_SBPCD_REQUEST(DO_SBPCD_REQUEST373,17927
#define SBPCD_INIT(SBPCD_INIT374,17976
#define DO_SBPCD_REQUEST(DO_SBPCD_REQUEST377,18041
#define SBPCD_INIT(SBPCD_INIT378,18090
#define DO_SBPCD_REQUEST(DO_SBPCD_REQUEST381,18155
#define SBPCD_INIT(SBPCD_INIT382,18204
#define SBPCD_CLI 386,18345
#define SBPCD_STI 387,18369
#define SBPCD_CLI389,18399
#define SBPCD_STI390,18417
static int sbpcd[410,19196
static int sbpcd[454,20784
#define NUM_PROBE 458,20895
#define INLINE 478,21342
static int sbpcd_debug 534,23196
static int sbpcd_debug 536,23241
static int sbpcd_ioaddr 542,23367
static int sbpro_type 543,23436
static unsigned char setup_done 544,23467
static unsigned char f_16bit 545,23504
static unsigned char do_16bit 546,23538
static int CDo_command,547,23573
static int CDo_command, CDo_reset;547,23573
static int CDo_sel_i_d,548,23608
static int CDo_sel_i_d, CDo_enable;548,23608
static int CDi_info,549,23644
static int CDi_info, CDi_status,549,23644
static int CDi_info, CDi_status, CDi_data;549,23644
static struct cdrom_msf msf;550,23687
static struct cdrom_ti ti;551,23716
static struct cdrom_tochdr tochdr;552,23743
static struct cdrom_tocentry tocentry;553,23778
static struct cdrom_subchnl SC;554,23817
static struct cdrom_volctrl volctrl;555,23849
static struct cdrom_read_audio read_audio;556,23886
static unsigned char msgnum=558,23930
static char msgbuf[559,23961
static const char *str_sb 561,23986
static const char *str_sb_l 562,24030
static const char *str_lm 563,24076
static const char *str_sp 564,24117
static const char *str_sp_l 565,24153
static const char *str_ss 566,24191
static const char *str_ss_l 567,24233
static const char *str_t16 568,24277
static const char *str_t16_l 569,24319
static const char *type;570,24363
static const char *major_name=573,24410
static const char *major_name=576,24477
static const char *major_name=579,24545
static const char *major_name=582,24613
static struct wait_queue *sbp_waitq 588,24752
static int teac=591,24811
static int buffers=592,24843
static u_char family0[594,24882
static u_char family1[595,24951
static u_char family2[596,25012
static u_char familyL[597,25078
static u_char familyT[598,25139
static u_char familyV[599,25193
static u_int recursion=601,25251
static u_int fatal_err=602,25305
static u_int response_count=603,25359
static u_int flags_cmd_out;604,25390
static u_char cmd_type=605,25418
static u_char drvcmd[606,25444
static u_char infobuf[607,25470
static u_char xa_head_buf[608,25497
static u_char xa_tail_buf[609,25536
static volatile u_char busy_data=612,25589
static volatile u_char busy_audio=613,25625
static struct semaphore ioctl_read_sem 615,25715
static u_long timeout;616,25763
static volatile u_char timed_out_delay=617,25786
static volatile u_char timed_out_data=618,25828
static volatile u_char timed_out_audio=620,25875
static u_int datarate=622,25924
static u_int maxtim16=623,25956
static u_int maxtim04=624,25988
static u_int maxtim02=625,26020
static u_int maxtim_8=626,26052
static u_int maxtim_data=628,26100
static u_int maxtim_data=630,26138
static int n_retries=633,26206
static int n_retries=635,26236
static int ndrives=639,26347
static u_char drv_pattern[640,26369
static int sbpcd_blocksizes[641,26452
static int d=647,26646
} D_S[750,29475
unsigned long cli_sti;757,29642
static struct timer_list delay_timer 760,29788
static struct timer_list data_timer 761,29868
static struct timer_list audio_timer 763,29952
static void msg(769,30142
#define MSG_LEVEL 772,30210
#define MSG_LEVEL 774,30246
static int sbpcd_dbg_ioctl(798,30799
static void mark_timeout_delay(813,31119
static void mark_timeout_data(821,31316
static void mark_timeout_audio(830,31516
static void sbp_sleep(842,31780
#define RETURN_UP(RETURN_UP850,31976
static INLINE void lba2msf(855,32184
static INLINE void bin2bcdx(868,32574
static INLINE u_int blk2msf(873,32759
static INLINE u_int make16(886,33104
static INLINE u_int make32(891,33258
static INLINE u_char swap_nibbles(896,33411
static INLINE u_char byt2bcd(901,33563
static INLINE u_char bcd2bin(906,33713
static INLINE int msf2blk(911,33871
static INLINE int msf2lba(925,34206
static int sta2err(935,34476
static INLINE void clr_cmdbuf(969,35760
static void flush_status(977,35935
static int CDi_stat_loop_T(999,36593
static int CDi_stat_loop(1036,37884
static int tst_DataReady(1058,38471
static int tst_ResultReady(1067,38665
static int tst_Attention(1076,38863
static int ResponseInfo(1087,39144
static void EvaluateStatus(1125,40033
static int get_state_T(1176,42081
static int ResponseStatus(1223,43154
static void cc_ReadStatus(1260,44057
static int cc_ReadError(1274,44490
static int cmd_out_T(1323,45625
#define CMDT_TRIES 1326,45672
#define TEST_FALSE_FF 1327,45696
static int cmd_out(1482,50422
static int cc_Seek(1549,52187
static int cc_SpinUp(1605,53609
static int cc_SpinDown(1643,54464
static int cc_get_mode_T(1681,55253
static int cc_set_mode_T(1693,55493
static int cc_prep_mode_T(1713,56009
static int cc_SetSpeed(1741,56822
static int cc_SetVolume(1780,57516
static int GetStatus(1947,61086
static int cc_DriveReset(1959,61351
static int SetSpeed(2005,62315
static int sbpcd_select_speed(2022,62644
static int DriveReset(2033,62928
static int sbpcd_reset(2058,63310
static int cc_PlayAudio(2069,63535
static int cc_Pause_Resume(2130,65053
static int cc_LockDoor(2171,66063
static int UnLockDoor(2212,67127
static int LockDoor(2232,67393
static int sbpcd_lock_door(2259,67657
static int cc_CloseTray(2265,67852
static int sbpcd_tray_move(2337,69275
static int cc_ReadSubQ(2352,69579
static int cc_ModeSense(2428,71516
static int cc_ModeSelect(2477,72719
static int cc_GetVolume(2524,73902
static int cc_ReadCapacity(2659,76379
static int cc_ReadTocDescr(2706,77784
static int cc_ReadTocEntry(2824,80925
static int cc_ReadPacket(2903,82788
static int convert_UPC(2922,83239
static int cc_ReadUPC(2949,83712
static int sbpcd_get_mcn(3049,85842
static int cc_CheckMultiSession(3122,87482
static int cc_SubChanInfo(3190,89160
__initfunc(3218,89905
static int c2_ReadError(3266,90931
__initfunc(3288,91355
__initfunc(3307,92023
static void switch_drive(3593,99442
__initfunc(3605,99742
#define N_RESPO 3608,99803
__initfunc(3709,102289
static int obey_audio_state(3748,103412
static int check_allowed1(3790,104481
static int check_allowed2(3813,105247
static int check_allowed3(3831,105702
static int seek_pos_audio_end(3865,106585
static int ReadToC(3876,106816
static int DiskInfo(3922,108224
#define LOOP_COUNT 3929,108307
static int sbpcd_drive_status(3997,109792
static int prepare(4038,111006
static int sbp_status(4114,112410
static int sbpcd_get_last_session(4156,113140
static int sbpcd_dev_ioctl(4173,113690
static int sbpcd_audio_ioctl(4493,123009
static void sbp_transfer(4744,131474
static inline void sbpcd_end_request(4787,133034
static void DO_SBPCD_REQUEST(4797,133327
static void sbp_read_cmd(4935,136797
static int sbp_data(5042,139714
static int sbpcd_open(5322,146897
static void sbpcd_release(5362,147877
static struct cdrom_device_ops sbpcd_dops 5403,148915
static struct cdrom_device_info sbpcd_info 5422,149841
__initfunc(5461,151279
__initfunc(5515,153217
#define SPEA_REG_1 5533,153786
#define SPEA_REG_2 5534,153825
#define SPEA_PATTERN 5550,154167
#define SPEA_PATTERN 5552,154199
int init_module(5572,154776
void cleanup_module(5811,161424
static int sbpcd_chk_disk_change(5842,162215
static int sbpcd_media_changed(5859,162581

drivers/cdrom/sbpcd3.c,26
#define SBPCD_ISSUE 4,57

drivers/cdrom/sbpcd2.c,26
#define SBPCD_ISSUE 4,57

drivers/cdrom/sbpcd4.c,26
#define SBPCD_ISSUE 4,57

drivers/cdrom/sjcd.c,3560
#define SJCD_VERSION_MAJOR 51,2074
#define SJCD_VERSION_MINOR 52,2103
#define MAJOR_NR 74,2536
static int sjcd_present 78,2613
#define SJCD_BUF_SIZ 80,2643
static char sjcd_buf[85,2750
static volatile int sjcd_buf_bn[86,2795
static volatile int sjcd_buf_bn[ SJCD_BUF_SIZ ], sjcd_next_bn;86,2795
static volatile int sjcd_buf_in,87,2858
static volatile int sjcd_buf_in, sjcd_buf_out 87,2858
static unsigned short sjcd_status_valid 92,2929
static unsigned short sjcd_door_closed;93,2974
static unsigned short sjcd_door_was_open;94,3014
static unsigned short sjcd_media_is_available;95,3056
static unsigned short sjcd_media_is_changed;96,3103
static unsigned short sjcd_toc_uptodate 97,3148
static unsigned short sjcd_command_failed;98,3193
static volatile unsigned char sjcd_completion_status 99,3236
static volatile unsigned char sjcd_completion_error 100,3294
static unsigned short sjcd_command_is_in_progress 101,3351
static unsigned short sjcd_error_reported 102,3406
static int sjcd_open_count;104,3454
static int sjcd_audio_status;106,3483
static struct sjcd_play_msf sjcd_playing;107,3513
static int sjcd_base 109,3556
static struct wait_queue *sjcd_waitq 115,3647
static volatile unsigned short sjcd_transfer_is_active 120,3718
enum sjcd_transfer_state sjcd_transfer_state122,3779
  SJCD_S_IDLE 123,3806
  SJCD_S_START 124,3829
  SJCD_S_MODE 125,3852
  SJCD_S_READ 126,3875
  SJCD_S_DATA 127,3898
  SJCD_S_STOP 128,3921
  SJCD_S_STOPPING 129,3944
static enum sjcd_transfer_state sjcd_transfer_state 131,3969
static long sjcd_transfer_timeout 132,4036
static int sjcd_read_count 133,4075
static unsigned char sjcd_mode 134,4107
#define SJCD_READ_TIMEOUT 136,4144
static struct sjcd_stat statistic;142,4229
static struct timer_list sjcd_delay_timer 148,4289
#define SJCD_SET_TIMER(SJCD_SET_TIMER150,4362
#define CLEAR_TIMER 155,4562
__initfunc(163,4723
static unsigned char bin2bcd(172,4857
static int bcd2bin(179,4972
static long msf2hsg(183,5066
static void hsg2msf(188,5204
static void sjcd_send_cmd(199,5540
static void sjcd_send_1_cmd(212,5853
static void sjcd_send_4_cmd(226,6226
static void sjcd_send_6_cmd(244,6728
static int sjcd_load_response(264,7383
static void sjcd_load_status(280,7826
static int sjcd_check_status(321,9110
static volatile long sjcd_status_timeout;339,9464
#define SJCD_WAIT_FOR_STATUS_TIMEOUT 346,9715
static void sjcd_status_timer(348,9758
static int sjcd_wait_for_status(371,10302
static int sjcd_receive_status(382,10652
static void sjcd_get_status(405,11183
static int sjcd_disk_change(416,11420
static struct sjcd_hw_disk_info sjcd_table_of_contents[433,11910
static unsigned char sjcd_first_track_no,434,11985
static unsigned char sjcd_first_track_no, sjcd_last_track_no;434,11985
#define sjcd_disk_length 435,12047
static int sjcd_update_toc(437,12113
static int sjcd_get_q_info(573,15476
static int sjcd_play(596,16184
static int sjcd_tray_close(623,16757
static int sjcd_tray_lock(631,16934
static int sjcd_tray_unlock(639,17108
static int sjcd_tray_open(647,17288
static int sjcd_ioctl(658,17496
static void sjcd_invalidate_buffers(913,25273
#define CURRENT_IS_VALID 924,25553
static void sjcd_transfer(928,25739
static void sjcd_poll(966,26712
static void do_sjcd_request(1272,35148
int sjcd_open(1314,36314
static int sjcd_release(1389,38101
static struct file_operations sjcd_fops 1423,38925
} sjcd_version;1448,39819
__initfunc(1454,39958
sjcd_cleanup(1561,42761
int init_module(1573,42965
void cleanup_module(1578,43014

drivers/cdrom/sonycd535.c,2305
#define REALLY_SLOW_IO123,4411
#define MAJOR_NR 130,4530
#define sony535_cd_base_io 132,4590
# define CDU535_ADDRESS	142,4951
# define CDU535_INTERRUPT	145,5015
# define CDU535_HANDLE	148,5073
# define CDU535_MESSAGE_NAME	151,5142
#define CDU535_BLOCK_SIZE	154,5194
# define MAX_SPINUP_RETRY	157,5253
# define RETRY_FOR_BAD_STATUS	160,5359
# define DEBUG	164,5439
#define SONY535_BUFFER_SIZE	181,5962
# define LOCK_DOORS188,6122
static unsigned int sony535_cd_base_io 201,6648
static unsigned short select_unit_reg;208,6882
static unsigned short result_reg;209,6921
static unsigned short command_reg;210,6955
static unsigned short read_status_reg;211,6990
static unsigned short data_reg;212,7029
static int initialized 214,7062
static int sony_disc_changed 215,7130
static int sony_toc_read 217,7226
static unsigned int sony_buffer_size;219,7308
static unsigned int sony_buffer_sectors;221,7400
static unsigned int sony_usage 223,7510
static int sony_first_block 226,7601
static int sony_last_block 228,7700
static struct s535_sony_toc *sony_toc;231,7798
static struct s535_sony_subcode *last_sony_subcode;234,7885
static Byte **sony_buffer;236,7995
static int sony_inuse 239,8083
static int sony_audio_status 246,8290
static Byte cur_pos_msf[257,8801
static Byte final_pos_msf[258,8841
static int sony535_irq_used 261,8931
static struct wait_queue *cdu535_irq_wait 264,9059
cdu535_check_media_change(272,9271
enable_interrupts(288,9604
disable_interrupts(303,9938
cdu535_interrupt(318,10266
sony_sleep(333,10554
select_unit(354,11164
read_result_reg(368,11649
read_exec_status(399,12545
check_drive_status(423,13322
do_sony_cmd(528,16632
set_drive_mode(570,17853
seek_and_read_N_blocks(593,18786
request_toc_data(653,20646
spin_up_drive(691,21984
int_to_bcd(711,22552
bcd_to_int(723,22740
log_to_msf(734,22951
msf_to_log(748,23218
size_to_buf(767,23543
do_cdu535_request(784,24065
sony_get_toc(937,28361
find_track(955,28773
read_subcode(976,29125
sony_get_subchnl_info(1003,29908
cdu_ioctl(1071,31707
cdu_open(1389,41178
cdu_release(1437,42130
static struct file_operations cdu_fops 1466,42674
static int sonycd535_block_size 1484,43184
__initfunc(1489,43271
__initfunc(1658,48307
int init_module(1676,48726
cleanup_module(1682,48782

drivers/cdrom/aztcd.h,1772
#define AZT_BASE_ADDR	28,1171
#define AZT_BASE_AUTO 32,1351
#define AZT_SW32_BASE_ADDR 40,1586
#define AZT_ALLOW_TRAY_LOCK	45,1776
#define AZT_AUTO_EJECT 49,1923
#define AZT_PRIVATE_IOCTLS 53,2054
#define AZT_MULTISESSION 61,2542
#define AZT_STATUS_DELAY	72,2980
#define AZT_TIMEOUT	73,3049
#define AZT_FAST_TIMEOUT	74,3117
#define AZT_RETRY_ATTEMPTS	77,3246
#define CMD_PORT	80,3301
#define DATA_PORT	81,3328
#define STATUS_PORT	82,3356
#define MODE_PORT	83,3388
 #define AZT_SW32_INIT 85,3451
 #define AZT_SW32_CONFIG_REG 86,3528
 #define AZT_SW32_ID_REG 87,3618
#define AST_CMD_CHECK	91,3737
#define AST_DOOR_OPEN	92,3790
#define AST_NOT_READY	93,3842
#define AST_DSK_CHG	94,3902
#define AST_MODE 95,3963
#define AST_MODE_BITS	96,4034
#define AST_INITIAL	97,4079
#define AST_BUSY	98,4136
#define AFL_DATA	102,4254
#define AFL_STATUS	103,4306
#define AFL_OP_OK	104,4362
#define AFL_PA_OK	105,4414
#define AFL_OP_ERR	106,4468
#define AFL_PA_ERR	107,4516
#define POLLED	108,4567
#define ACMD_SOFT_RESET	111,4624
#define ACMD_PLAY_READ	112,4673
#define ACMD_PLAY_READ_RAW 113,4740
#define ACMD_SEEK 114,4803
#define ACMD_SEEK_TO_LEADIN 115,4873
#define ACMD_GET_ERROR	116,4937
#define ACMD_GET_STATUS	117,4988
#define ACMD_GET_Q_CHANNEL 118,5036
#define ACMD_EJECT	119,5105
#define ACMD_CLOSE 120,5153
#define ACMD_LOCK	121,5218
#define ACMD_UNLOCK	122,5266
#define ACMD_PAUSE	123,5311
#define ACMD_STOP	124,5349
#define ACMD_PLAY_AUDIO	125,5390
#define ACMD_SET_VOLUME	126,5444
#define ACMD_GET_VERSION	127,5497
#define ACMD_SET_DISK_TYPE	128,5555
#define MAX_TRACKS	130,5614
struct msf msf132,5639
struct azt_Play_msf azt_Play_msf138,5718
struct azt_DiskInfo azt_DiskInfo143,5780
struct azt_Toc azt_Toc156,6091

drivers/cdrom/isp16.c,583
#define ISP16_VERSION_MAJOR 39,1436
#define ISP16_VERSION_MINOR 40,1466
static short isp16_type;58,1912
static u_char isp16_ctrl;59,1979
static u_short isp16_enable_port;60,2005
static int isp16_cdrom_base 62,2040
static int isp16_cdrom_irq 63,2091
static int isp16_cdrom_dma 64,2137
static char *isp16_cdrom_type 65,2183
#define ISP16_IN(ISP16_IN76,2448
#define ISP16_OUT(ISP16_OUT77,2511
__initfunc(80,2582
__initfunc(97,2884
__initfunc(147,4459
__initfunc(157,4600
__initfunc(206,6002
__initfunc(233,6601
int init_module(311,9303
void cleanup_module(316,9353

drivers/cdrom/cdrom.c,1684
#define REVISION 126,5716
#define VERSION 127,5750
#define CD_NOTHING 131,5940
#define CD_WARNING	132,5968
#define CD_REG_UNREG	133,5991
#define CD_DO_IOCTL	134,6016
#define CD_OPEN	135,6040
#define CD_CLOSE	136,6061
#define CD_COUNT_TRACKS 137,6083
#define ERRLOGMASK 141,6206
static int debug 163,6848
static int keeplocked 165,6914
static int autoclose=167,6974
static int autoeject=168,6998
static int lockdoor 169,7022
static int check_media_type 170,7047
#define cdinfo(cdinfo178,7257
#define cdinfo(cdinfo182,7401
#define IOCTL_IN(IOCTL_IN186,7521
#define IOCTL_OUT(IOCTL_OUT189,7615
#define FM_WRITE	193,7712
static struct cdrom_device_info *topCdromPtr 209,8405
struct file_operations cdrom_fops 211,8459
#define ENSURE(ENSURE234,9440
int register_cdrom(236,9521
int unregister_cdrom(287,11079
struct cdrom_device_info *cdrom_find_device 316,11647
int cdrom_open(335,12159
int open_for_data(361,12895
int check_for_audio_disc(466,16474
int cdrom_release(523,18184
int media_changed(565,19501
int cdrom_media_changed(582,19947
void cdrom_count_tracks(597,20446
void sanitize_format(663,22553
int cdrom_ioctl(696,23844
#define CHECKAUDIO 948,31591
#define CDROM_STR_SIZE 1068,35365
static char cdrom_drive_info[1070,35394
int cdrom_sysctl_info(1072,35450
ctl_table cdrom_table[1149,38368
ctl_table cdrom_cdrom_table[1155,38503
ctl_table cdrom_root_table[1161,38642
static struct ctl_table_header *cdrom_sysctl_header;1166,38738
static void cdrom_procfs_modcount(1176,39089
static void cdrom_sysctl_register(1185,39227
static void cdrom_sysctl_unregister(1199,39503
int init_module(1208,39671
void cleanup_module(1216,39784

drivers/cdrom/cdu31a.h,6485
#define SONY_XA_DISK_TYPE 27,885
#define SONY_CMD_REG_OFFSET 33,1017
#define SONY_PARAM_REG_OFFSET 34,1051
#define SONY_WRITE_REG_OFFSET 35,1085
#define SONY_CONTROL_REG_OFFSET 36,1119
#       define SONY_ATTN_CLR_BIT 37,1153
#       define SONY_RES_RDY_CLR_BIT 38,1198
#       define SONY_DATA_RDY_CLR_BIT 39,1243
#       define SONY_ATTN_INT_EN_BIT 40,1288
#       define SONY_RES_RDY_INT_EN_BIT 41,1333
#       define SONY_DATA_RDY_INT_EN_BIT 42,1378
#       define SONY_PARAM_CLR_BIT 43,1423
#       define SONY_DRIVE_RESET_BIT 44,1468
#define SONY_STATUS_REG_OFFSET 50,1613
#       define SONY_ATTN_BIT 51,1647
#       define SONY_RES_RDY_BIT 52,1692
#       define SONY_DATA_RDY_BIT 53,1737
#       define SONY_ATTN_INT_ST_BIT 54,1782
#       define SONY_RES_RDY_INT_ST_BIT 55,1827
#       define SONY_DATA_RDY_INT_ST_BIT 56,1872
#       define SONY_DATA_REQUEST_BIT 57,1917
#       define SONY_BUSY_BIT 58,1962
#define SONY_RESULT_REG_OFFSET 59,2007
#define SONY_READ_REG_OFFSET 60,2041
#define SONY_FIFOST_REG_OFFSET 61,2075
#       define SONY_PARAM_WRITE_RDY_BIT 62,2109
#       define SONY_PARAM_REG_EMPTY_BIT 63,2154
#       define SONY_RES_REG_NOT_EMP_BIT 64,2199
#       define SONY_RES_REG_FULL_BIT 65,2244
#define LOG_START_OFFSET 67,2290
#define SONY_DETECT_TIMEOUT	69,2368
#define SONY_JIFFIES_TIMEOUT 75,2696
#define SONY_RESET_TIMEOUT 78,2890
#define SONY_READY_RETRIES 81,3084
#define MAX_CDU31A_RETRIES 85,3285
#define SONY_REQ_DRIVE_CONFIG_CMD 89,3491
#define SONY_REQ_DRIVE_MODE_CMD 90,3573
#define SONY_REQ_DRIVE_PARAM_CMD 91,3618
#define SONY_REQ_MECH_STATUS_CMD 92,3663
#define SONY_REQ_AUDIO_STATUS_CMD 93,3708
#define SONY_SET_DRIVE_PARAM_CMD 94,3753
#define SONY_REQ_TOC_DATA_CMD 95,3798
#define SONY_REQ_SUBCODE_ADDRESS_CMD 96,3871
#define SONY_REQ_UPC_EAN_CMD 97,3948
#define SONY_REQ_ISRC_CMD 98,3993
#define SONY_REQ_TOC_DATA_SPEC_CMD 99,4038
#define SONY_READ_TOC_CMD 102,4173
#define SONY_SEEK_CMD 103,4263
#define SONY_READ_CMD 104,4308
#define SONY_READ_BLKERR_STAT_CMD 105,4353
#define SONY_ABORT_CMD 106,4398
#define SONY_READ_TOC_SPEC_CMD 107,4443
#define SONY_AUDIO_PLAYBACK_CMD 110,4521
#define SONY_AUDIO_STOP_CMD 111,4566
#define SONY_AUDIO_SCAN_CMD 112,4611
#define SONY_EJECT_CMD 115,4694
#define SONY_SPIN_UP_CMD 116,4739
#define SONY_SPIN_DOWN_CMD 117,4784
#define SONY_WRITE_BUFFER_CMD 120,4856
#define SONY_READ_BUFFER_CMD 121,4901
#define SONY_DIAGNOSTICS_CMD 122,4946
#define SONY_SD_DECODE_PARAM 128,5076
#define SONY_SD_INTERFACE_PARAM 129,5121
#define SONY_SD_BUFFERING_PARAM 130,5166
#define SONY_SD_AUDIO_PARAM 131,5211
#define SONY_SD_AUDIO_VOLUME 132,5256
#define SONY_SD_MECH_CONTROL 133,5301
#define SONY_SD_AUTO_SPIN_DOWN_TIME 134,5346
#define SONY_AUTO_SPIN_UP_BIT 139,5470
#define SONY_AUTO_EJECT_BIT 140,5515
#define SONY_DOUBLE_SPEED_BIT 141,5560
#define SONY_HWC_GET_LOAD_MECH(SONY_HWC_GET_LOAD_MECH147,5706
#define SONY_HWC_EJECT(SONY_HWC_EJECT148,5770
#define SONY_HWC_LED_SUPPORT(SONY_HWC_LED_SUPPORT149,5834
#define SONY_HWC_DOUBLE_SPEED(SONY_HWC_DOUBLE_SPEED150,5898
#define SONY_HWC_GET_BUF_MEM_SIZE(SONY_HWC_GET_BUF_MEM_SIZE151,5962
#define SONY_HWC_AUDIO_PLAYBACK(SONY_HWC_AUDIO_PLAYBACK152,6033
#define SONY_HWC_ELECTRIC_VOLUME(SONY_HWC_ELECTRIC_VOLUME153,6097
#define SONY_HWC_ELECTRIC_VOLUME_CTL(SONY_HWC_ELECTRIC_VOLUME_CTL154,6161
#define SONY_HWC_CADDY_LOAD_MECH 156,6226
#define SONY_HWC_TRAY_LOAD_MECH 157,6271
#define SONY_HWC_POPUP_LOAD_MECH 158,6316
#define SONY_HWC_UNKWN_LOAD_MECH 159,6361
#define SONY_HWC_8KB_BUFFER 161,6407
#define SONY_HWC_32KB_BUFFER 162,6452
#define SONY_HWC_64KB_BUFFER 163,6497
#define SONY_HWC_UNKWN_BUFFER 164,6542
struct s_sony_drive_configs_sony_drive_config170,6684
struct s_sony_subcodes_sony_subcode180,6930
#define MAX_TRACKS 192,7205
struct s_sony_tocs_sony_toc197,7422
struct s_sony_session_tocs_sony_session_toc227,8196
struct s_all_sessions_tocs_all_sessions_toc290,10076
#define SONY_ILL_CMD_ERR 316,10638
#define SONY_ILL_PARAM_ERR 317,10683
#define SONY_NOT_LOAD_ERR 320,10751
#define SONY_NO_DISK_ERR 321,10796
#define SONY_NOT_SPIN_ERR 322,10841
#define SONY_SPIN_ERR 323,10886
#define SONY_SPINDLE_SERVO_ERR 324,10931
#define SONY_FOCUS_SERVO_ERR 325,10976
#define SONY_EJECT_MECH_ERR 326,11021
#define SONY_AUDIO_PLAYING_ERR 327,11066
#define SONY_EMERGENCY_EJECT_ERR 328,11111
#define SONY_FOCUS_ERR 331,11180
#define SONY_FRAME_SYNC_ERR 332,11225
#define SONY_SUBCODE_ADDR_ERR 333,11270
#define SONY_BLOCK_SYNC_ERR 334,11315
#define SONY_HEADER_ADDR_ERR 335,11360
#define SONY_ILL_TRACK_R_ERR 338,11429
#define SONY_MODE_0_R_ERR 339,11474
#define SONY_ILL_MODE_R_ERR 340,11519
#define SONY_ILL_BLOCK_SIZE_R_ERR 341,11564
#define SONY_MODE_R_ERR 342,11609
#define SONY_FORM_R_ERR 343,11654
#define SONY_LEAD_OUT_R_ERR 344,11699
#define SONY_BUFFER_OVERRUN_R_ERR 345,11744
#define SONY_UNREC_CIRC_ERR 348,11813
#define SONY_UNREC_LECC_ERR 349,11858
#define SONY_NO_TOC_ERR 352,11930
#define SONY_SUBCODE_DATA_NVAL_ERR 353,11975
#define SONY_FOCUS_ON_TOC_READ_ERR 354,12020
#define SONY_FRAME_SYNC_ON_TOC_READ_ERR 355,12065
#define SONY_TOC_DATA_ERR 356,12110
#define SONY_HW_FAILURE_ERR 359,12185
#define SONY_LEAD_IN_A_ERR 360,12230
#define SONY_LEAD_OUT_A_ERR 361,12275
#define SONY_DATA_TRACK_A_ERR 362,12320
#define SONY_NO_CIRC_ERR_BLK_STAT 369,12547
#define SONY_NO_LECC_ERR_BLK_STAT 370,12592
#define SONY_RECOV_LECC_ERR_BLK_STAT 371,12637
#define SONY_NO_ERR_DETECTION_STAT 372,12682
#define SONY_TIMEOUT_OP_ERR 378,12874
#define SONY_SIGNAL_OP_ERR 379,12919
#define SONY_BAD_DATA_ERR 380,12964
#define SONY_EMER_EJECT_ATTN 388,13126
#define SONY_HW_FAILURE_ATTN 389,13171
#define SONY_MECH_LOADED_ATTN 390,13216
#define SONY_EJECT_PUSHED_ATTN 391,13261
#define SONY_AUDIO_PLAY_DONE_ATTN 394,13335
#define SONY_LEAD_IN_ERR_ATTN 395,13380
#define SONY_LEAD_OUT_ERR_ATTN 396,13425
#define SONY_DATA_TRACK_ERR_ATTN 397,13470
#define SONY_AUDIO_PLAYBACK_ERR_ATTN 398,13515
#define SONY_SPIN_UP_COMPLETE_ATTN 401,13586
#define SONY_SPINDLE_SERVO_ERR_ATTN 402,13631
#define SONY_FOCUS_SERVO_ERR_ATTN 403,13676
#define SONY_TOC_READ_DONE_ATTN 404,13721
#define SONY_FOCUS_ON_TOC_READ_ERR_ATTN 405,13766
#define SONY_SYNC_ON_TOC_READ_ERR_ATTN 406,13811
#define SONY_SPIN_DOWN_COMPLETE_ATTN 409,13880
#define SONY_EJECT_COMPLETE_ATTN 410,13925
#define SONY_EJECT_MECH_ERR_ATTN 411,13970

drivers/cdrom/cm206.h,2879
#define LINUX_CM206_H6,103
#define CM206_BASE 17,488
#define CM206_IRQ 18,513
#define r_data_status 20,535
#define r_uart_receive 21,570
#define r_fifo_output_buffer 22,610
#define r_line_status 23,656
#define r_data_control 24,695
#define r_uart_transmit 25,735
#define r_test_clock 26,776
#define r_test_control 27,814
#define ds_ram_size 30,883
#define ds_toc_ready 31,910
#define ds_fifo_empty 32,938
#define ds_sync_error 33,967
#define ds_crc_error 34,995
#define ds_data_error 35,1022
#define ds_fifo_overflow 36,1050
#define ds_data_ready 37,1081
#define ls_attention 40,1137
#define ls_parity_error 41,1163
#define ls_overrun 42,1191
#define ls_receive_buffer_full 43,1214
#define ls_transmitter_buffer_empty 44,1249
#define dc_read_q_channel 47,1328
#define dc_mask_sync_error 48,1361
#define dc_toc_enable 49,1395
#define dc_no_stop_on_error 50,1424
#define dc_break 51,1458
#define dc_initialize 52,1481
#define dc_mask_transmit_ready 53,1509
#define dc_flag_enable 54,1546
#define dc_normal 57,1633
#define dsb_error_condition 63,1844
#define dsb_play_in_progress 64,1876
#define dsb_possible_media_change 65,1909
#define dsb_disc_present 66,1947
#define dsb_drive_not_ready 67,1977
#define dsb_tray_locked 68,2010
#define dsb_tray_not_closed 69,2039
#define dsb_not_useful 71,2073
#define c_close_tray 75,2170
#define c_lock_tray 76,2193
#define c_unlock_tray 77,2218
#define c_open_tray 78,2245
#define c_seek 79,2270
#define c_read_data 80,2290
#define c_force_1x 81,2315
#define c_force_2x 82,2339
#define c_auto_mode 83,2363
#define c_play 84,2388
#define c_set_audio_mode 85,2408
#define c_read_current_q 86,2438
#define c_stream_q 87,2468
#define c_drive_status 88,2492
#define c_disc_status 89,2520
#define c_audio_status 90,2547
#define c_drive_configuration 91,2575
#define c_read_upc 92,2610
#define c_stop 93,2634
#define c_calc_checksum 94,2654
#define c_gimme 96,2684
#define e_none 101,2840
#define e_illegal_command 102,2857
#define e_sync 103,2888
#define e_seek 104,2908
#define e_parity 105,2928
#define e_focus 106,2950
#define e_header_sync 107,2971
#define e_code_incompatibility 108,2998
#define e_reset_done 109,3034
#define e_bad_parameter 110,3060
#define e_radial 111,3089
#define e_sub_code 112,3111
#define e_no_data_track 113,3135
#define e_scan 114,3164
#define e_tray_open 115,3184
#define e_no_disc 116,3209
#define e_tray 117,3232
#define dcf_revision_code 121,3294
#define dcf_transfer_rate 122,3324
#define dcf_motorized_tray 123,3355
#define cds_multi_session 127,3412
#define cds_all_audio 128,3442
#define cds_xa_mode 129,3468
#define CM206CTL_GET_STAT 133,3536
#define CM206CTL_GET_LAST_STAT 134,3577
#define x(x142,3795
#define y 143,3817
#define x(x145,3838
#define y 146,3854
#define NR_STATS 161,4327
#define NR_STATS 163,4364

drivers/cdrom/gscd.h,1145
#define GSCD_BASE_ADDR	19,621
#define GSCD_DMA_CHANNEL 22,700
#define GSCDPORT(GSCDPORT27,861
#define CMD_STATUS 33,965
#define CMD_READSUBQ 34,993
#define CMD_SEEK 35,1046
#define CMD_READ 36,1096
#define CMD_RESET 37,1160
#define CMD_SETMODE 38,1188
#define CMD_PLAY 39,1216
#define CMD_LOCK_CTL 40,1262
#define CMD_IDENT 41,1315
#define CMD_SETSPEED 42,1343
#define CMD_GETMODE 43,1395
#define CMD_PAUSE 44,1423
#define CMD_READTOC 45,1451
#define CMD_DISKINFO 46,1479
#define CMD_TRAY_CTL 47,1507
#define ST_PLAYING	52,1558
#define ST_UNLOCKED	53,1582
#define ST_NO_DISK	54,1607
#define ST_DOOR_OPEN	55,1631
#define ST_x08 56,1657
#define ST_x04	57,1678
#define ST_INVALID	58,1698
#define ST_x01	59,1722
#define TYPE_INFO	64,1763
#define TYPE_DATA	65,1786
#define MOD_POLLED	70,1831
#define MOD_x08	71,1855
#define MOD_RAW	72,1876
#define READ_DATA(READ_DATA74,1898
#define SET_TIMER(SET_TIMER76,1952
#define CLEAR_TIMER	81,2115
#define MAX_TRACKS	83,2170
struct msf msf85,2195
struct gscd_Play_msf gscd_Play_msf91,2274
struct gscd_DiskInfo gscd_DiskInfo96,2337
struct gscd_Toc gscd_Toc103,2455

drivers/cdrom/isp16.h,1294
#define ISP16_CDROM_TYPE 23,882
#define ISP16_CDROM_IO_BASE 24,915
#define ISP16_CDROM_IRQ 25,949
#define ISP16_CDROM_DMA 26,975
#define ISP16_DRIVE_X 30,1103
#define ISP16_SONY 31,1130
#define ISP16_PANASONIC0 32,1155
#define ISP16_SANYO0 33,1185
#define ISP16_MITSUMI 34,1211
#define ISP16_PANASONIC1 35,1239
#define ISP16_SANYO1 36,1269
#define ISP16_DRIVE_NOT_USED 37,1295
#define ISP16_DRIVE_SET_MASK 38,1345
#define ISP16_DRIVE_SET_PORT 40,1434
#define ISP16_BASE_340 42,1493
#define ISP16_BASE_330 43,1522
#define ISP16_BASE_360 44,1551
#define ISP16_BASE_320 45,1580
#define ISP16_IRQ_X 46,1609
#define ISP16_IRQ_5 47,1635
#define ISP16_IRQ_7 48,1716
#define ISP16_IRQ_3 49,1797
#define ISP16_IRQ_9 50,1823
#define ISP16_IRQ_10 51,1849
#define ISP16_IRQ_11 52,1876
#define ISP16_DMA_X 53,1903
#define ISP16_DMA_3 54,1929
#define ISP16_DMA_5 55,1955
#define ISP16_DMA_6 56,1981
#define ISP16_DMA_7 57,2007
#define ISP16_IO_SET_MASK 58,2033
#define ISP16_IO_SET_PORT 60,2109
#define ISP16_C928__ENABLE_PORT 62,2164
#define ISP16_C929__ENABLE_PORT 63,2238
#define ISP16_ENABLE_CDROM 64,2312
#define ISP16_CTRL_PORT 67,2385
#define ISP16_C928__CTRL 68,2416
#define ISP16_C929__CTRL 69,2482
#define ISP16_IO_BASE 71,2549
#define ISP16_IO_SIZE 72,2577

drivers/cdrom/mcd.h,1151
#define MCD_BASE_ADDR	25,881
#define MCD_INTR_NR 28,968
#define MCD_STATUS_DELAY	39,1170
#define MCD_RETRY_ATTEMPTS 42,1259
#define MCDPORT(MCDPORT45,1319
#define SINGLE_HOLD_SECTORS 51,1641
#define MCMD_2X_READ 53,1674
#define MST_CMD_CHECK	57,1757
#define MST_BUSY	58,1806
#define MST_READ_ERR	59,1848
#define MST_DSK_TYPE	60,1893
#define MST_SERVO_CHECK	61,1920
#define MST_DSK_CHG	62,1950
#define MST_READY	63,2007
#define MST_DOOR_OPEN	64,2056
#define MFL_DATA	68,2122
#define MFL_STATUS	69,2167
#define MCMD_GET_DISK_INFO	73,2233
#define MCMD_GET_Q_CHANNEL	74,2292
#define MCMD_GET_STATUS	75,2356
#define MCMD_SET_MODE	76,2386
#define MCMD_SOFT_RESET	77,2414
#define MCMD_STOP	78,2444
#define MCMD_CONFIG_DRIVE	79,2485
#define MCMD_SET_VOLUME	80,2516
#define MCMD_PLAY_READ	81,2569
#define MCMD_GET_VERSION 82,2623
#define MCMD_EJECT	83,2655
#define READ_DATA(READ_DATA87,2741
#define SET_TIMER(SET_TIMER90,2797
#define CLEAR_TIMER	95,2957
#define MAX_TRACKS	97,3011
struct msf msf99,3036
struct mcd_Play_msf mcd_Play_msf105,3115
struct mcd_DiskInfo mcd_DiskInfo110,3177
struct mcd_Toc mcd_Toc117,3294

drivers/cdrom/mcdx.h,1938
#define MCDX_AUTOPROBE 46,1766
	#define MCDX_NDRIVES 57,2107
	#define MCDX_DRIVEMAP 58,2131
#define MCDX_QUIET 70,2340
#define MCDX_DEBUG 74,2390
#define MCDX 82,2572
#define INIT 85,2620
#define MALLOC 86,2637
#define IOCTL 87,2656
#define PLAYTRK 88,2674
#define SUBCHNL 89,2696
#define TOCHDR 90,2718
#define MS 91,2740
#define PLAYMSF 92,2762
#define READTOC 93,2784
#define OPENCLOSE 94,2806
#define HW	95,2827
#define TALK	96,2845
#define IRQ 97,2861
#define XFER 98,2877
#define REQUEST	99,2894
#define SLEEP	100,2914
#define MCDX_IO_BEGIN	105,3061
#define MCDX_IO_END	106,3128
#define MCDX_IO_SIZE	109,3239
#define MCDX_RBIT_OPEN 117,3366
#define MCDX_RBIT_DISKSET 118,3419
#define MCDX_RBIT_CHANGED 119,3481
#define MCDX_RBIT_CHECK 120,3538
#define MCDX_RBIT_AUDIOTR 121,3604
#define MCDX_RBIT_RDERR 122,3669
#define MCDX_RBIT_AUDIOBS 123,3737
#define MCDX_RBIT_CMDERR 124,3801
#define MCDX_RBIT_DOOR 128,3964
#define MCDX_RBIT_STEN 129,4017
#define MCDX_RBIT_DTEN 130,4094
#define OPCODE	136,4189
#define MCDX_CMD_REQUEST_TOC	137,4230
#define MCDX_CMD_REQUEST_STATUS	138,4268
#define MCDX_CMD_RESET	139,4310
#define MCDX_CMD_REQUEST_DRIVE_MODE	140,4344
#define MCDX_CMD_SET_INTERLEAVE	141,4388
#define MCDX_CMD_DATAMODE_SET	142,4432
	#define MCDX_DATAMODE1	143,4474
	#define MCDX_DATAMODE2	144,4504
#define MCDX_CMD_LOCK_DOOR	145,4534
#define READ_AHEAD	147,4574
#define e_door(e_door150,4639
#define e_check(e_check151,4681
#define e_notset(e_notset152,4726
#define e_changed(e_changed153,4774
#define e_audio(e_audio154,4821
#define e_audiobusy(e_audiobusy155,4867
#define e_cmderr(e_cmderr156,4916
#define e_readerr(e_readerr157,4962
#define MCDX_CDBLK	160,5033
#define MCDX_DATA_TIMEOUT	162,5090
#define MSF_MIN	167,5176
#define MSF_SEC	168,5210
#define MSF_FRM	169,5244
#define MCDX_E	174,5296
#define MCDX_ST_EOM 175,5335
#define MCDX_ST_DRV 176,5382

drivers/cdrom/optcd.h,558
#define _LINUX_OPTCD_H11,273
#define OPTCD_PORTBASE	17,489
#define	MULTISESSION	21,577
#define	DEBUG_DRIVE_IF	25,693
#define	DEBUG_CONV	26,750
#define	DEBUG_BUFFERS	27,797
#define	DEBUG_REQUEST	28,863
#define	DEBUG_STATE	29,911
#define	DEBUG_TOC	30,953
#define	DEBUG_MULTIS	31,1011
#define	DEBUG_VFS	32,1058
#define BUSY_TIMEOUT	38,1206
#define FAST_TIMEOUT	39,1257
#define SLEEP_TIMEOUT	40,1311
#define MULTI_SEEK_TIMEOUT	41,1361
#define READ_TIMEOUT	42,1415
#define STOP_TIMEOUT	43,1463
#define RESET_WAIT	44,1511
#define N_BUFS	49,1732

drivers/cdrom/sbpcd.h,10863
#define CDROM_PORT 78,3060
#define SBPRO 79,3140
#define MAX_DRIVES 80,3220
#define SOUND_BASE 81,3300
#define CDROM_PORT 84,3467
#define SBPRO 85,3547
#define MAX_DRIVES 86,3627
#define SOUND_BASE 87,3707
#define CDROM_PORT 90,3874
#define SBPRO 91,3954
#define MAX_DRIVES 92,4034
#define SOUND_BASE 93,4114
#define CDROM_PORT 96,4281
#define SBPRO 97,4361
#define MAX_DRIVES 98,4441
#define SOUND_BASE 99,4521
#define DISTRIBUTION 107,4760
#define KLOGD_PAUSE 115,4983
#define JUKEBOX 119,5071
#define JUKEBOX 121,5095
#define EJECT 126,5203
#define EJECT 128,5225
#define READ_AUDIO 135,5488
#define SBP_TEAC_SPEED 152,6285
#define _LINUX_SBPCD_H161,6577
#define SBP_BUFFER_FRAMES 167,6803
#define LONG_TIMING 169,6833
#define TEST_UPC 173,6943
#define SPEA_TEST 174,6962
#define TEST_STI 175,6982
#define OLD_BUSY 176,7001
#define SOUND_BASE 179,7057
#define SBP_TEAC_SPEED 183,7124
#define DDIOCSDBG	190,7309
#define CDROMAUDIOBUFSIZ	196,7450
#define DBG_INF	202,7624
#define DBG_BSZ	203,7670
#define DBG_REA	204,7711
#define DBG_CHK	205,7753
#define DBG_TIM	206,7795
#define DBG_INI	207,7839
#define DBG_TOC	208,7884
#define DBG_IOC	209,7929
#define DBG_STA	210,7965
#define DBG_ERR	211,8012
#define DBG_CMD	212,8058
#define DBG_WRN	213,8099
#define DBG_MUL	214,8161
#define DBG_IDX	215,8210
#define DBG_IOX	216,8262
#define DBG_DID	217,8312
#define DBG_RES	218,8351
#define DBG_SPI	219,8393
#define DBG_IOS	220,8430
#define DBG_IO2	221,8489
#define DBG_UPC	222,8535
#define DBG_XA1	223,8581
#define DBG_LCK	224,8624
#define DBG_SQ1	225,8668
#define DBG_AUD	226,8709
#define DBG_SEQ	227,8755
#define DBG_LCS	228,8818
#define DBG_CD2	229,8878
#define DBG_TEA	230,8935
#define DBG_ECS	231,8988
#define DBG_000	232,9049
#define f_respo3	240,9291
#define f_putcmd	241,9315
#define f_respo2	242,9338
#define f_lopsta	243,9361
#define f_getsta	244,9384
#define f_ResponseStatus	245,9407
#define f_obey_p_check	246,9437
#define f_bit1	247,9466
#define f_wait_if_busy	248,9488
#define x80_bit	253,9545
#define upc_bit	254,9568
#define volume_bit	255,9591
#define toc_bit	256,9616
#define multisession_bit	257,9639
#define cd_size_bit	258,9669
#define subq_bit	259,9695
#define frame_size_bit	260,9718
#define upc_valid	265,9797
#define volume_valid	266,9849
#define toc_valid	267,9907
#define cd_size_valid	268,9959
#define subq_valid	269,10019
#define frame_size_valid	270,10073
#define p_success	275,10174
#define p_door_closed	276,10198
#define p_caddy_in	277,10225
#define p_spinning	278,10249
#define p_check	279,10273
#define p_busy_new	280,10295
#define p_door_locked	281,10319
#define p_disk_ok	282,10346
#define p_lcs_door_locked	287,10417
#define p_lcs_door_closed	288,10448
#define p_caddin_old	293,10548
#define p_success_old	294,10574
#define p_busy_old	295,10601
#define p_bit_1	296,10625
#define p0_door_closed	301,10739
#define p0_caddy_in	302,10767
#define p0_spinning	303,10792
#define p0_check	304,10817
#define p0_success	305,10839
#define p0_busy	306,10876
#define p0_bit_1	307,10898
#define p0_disk_ok	308,10933
#define pL_disk_in	310,10958
#define pL_spinning	311,10982
#define pL_check	312,11007
#define pL_success	313,11029
#define pL_busy	314,11069
#define pL_door_locked	315,11091
#define pL_door_closed	316,11119
#define pV_door_closed	318,11148
#define pV_spinning	319,11176
#define pV_check	320,11201
#define pV_success	321,11223
#define pV_busy	322,11247
#define pV_door_locked	323,11269
#define pV_disk_ok	324,11297
#define p1_door_closed	326,11322
#define p1_disk_in	327,11350
#define p1_spinning	328,11374
#define p1_check	329,11399
#define p1_busy	330,11421
#define p1_door_locked	331,11443
#define p1_bit_1	332,11471
#define p1_disk_ok	333,11506
#define p2_disk_ok	335,11531
#define p2_door_locked	336,11555
#define p2_spinning	337,11583
#define p2_busy2	338,11608
#define p2_busy1	339,11630
#define p2_door_closed	340,11652
#define p2_disk_in	341,11680
#define p2_check	342,11704
#define st_door_closed	347,11756
#define st_caddy_in	348,11814
#define st_spinning	349,11866
#define st_check	350,11918
#define st_busy	351,11964
#define st_door_locked	352,12013
#define st_diskok	353,12071
#define s_not_result_ready	358,12164
#define s_not_data_ready	359,12220
#define s_attention	360,12274
#define DRV_ATTN	364,12351
#define DATA_READY	365,12403
#define RESULT_READY	366,12462
#define drv_fam0	371,12582
#define drv_199	372,12627
#define drv_200	373,12671
#define drv_201	374,12715
#define drv_210	375,12759
#define drv_211	376,12803
#define drv_300	377,12847
#define drv_fam1	379,12893
#define drv_099	380,12938
#define drv_100	381,12982
#define drv_fam2	383,13054
#define drv_famT	385,13099
#define drv_famL	387,13143
#define drv_260	388,13191
#define drv_e1	389,13239
#define drv_f4	390,13303
#define drv_famV	392,13368
#define drv_at	393,13426
#define fam0_drive	395,13489
#define famL_drive	396,13535
#define famV_drive	397,13581
#define fam1_drive	398,13627
#define fam2_drive	399,13673
#define famT_drive	400,13719
#define fam0L_drive	401,13765
#define fam0V_drive	402,13823
#define famLV_drive	403,13881
#define fam0LV_drive	404,13939
#define fam1L_drive	405,14007
#define fam1V_drive	406,14065
#define fam1LV_drive	407,14123
#define fam01_drive	408,14191
#define fam12_drive	409,14249
#define fam2T_drive	410,14307
#define audio_playing	415,14390
#define audio_pausing	416,14414
#define speed_auto	421,14475
#define speed_300	422,14499
#define speed_150	423,14522
#define audio_mono	424,14545
#define READ_M1	429,14609
#define READ_M2	430,14672
#define READ_SC	431,14742
#define READ_AU	432,14807
#define aud_00 445,15097
#define audx11 446,15168
#define audx12 447,15239
#define audx13 448,15310
#define audx14 449,15381
#define audx15 450,15452
#define aud_11 452,15548
#define aud_12 453,15619
#define aud_13 454,15690
#define aud_14 455,15761
#define aud_15 456,15832
#define NR_SBPCD	461,15953
#define SBPCD_DIS_IRQ	466,16034
#define OUT(OUT471,16090
#define MIXER_addr 475,16198
#define MIXER_data 476,16266
#define MIXER_CD_Volume	477,16331
#define MAX_TRACKS	481,16480
#define ERR_DISKCHANGE 483,16503
typedef union _msf_msf489,16668
} MSF;MSF493,16713
typedef union _blk_blk495,16721
} BLK;BLK499,16766
#define CMD1_RESET	664,21538
#define CMD2_RESET	665,21562
#define CMDT_RESET	666,21586
#define CMD1_LOCK_CTL	668,21611
#define CMD2_LOCK_CTL	669,21638
#define CMDT_LOCK_CTL	670,21665
#define CMDL_LOCK_CTL	671,21701
#define CMDV_LOCK_CTL	672,21728
#define CMD1_TRAY_CTL	674,21765
#define CMD2_TRAY_CTL	675,21792
#define CMDT_TRAY_CTL	676,21819
#define CMDL_TRAY_CTL	677,21855
#define CMDV_TRAY_CTL	678,21882
#define CMD1_MULTISESS	680,21919
#define CMDL_MULTISESS	681,21947
#define CMDV_MULTISESS	682,21975
#define CMD1_SUBCHANINF	684,22014
#define CMD2_SUBCHANINF	685,22043
#define CMD1_ABORT	687,22073
#define CMD2_ABORT	688,22097
#define CMDT_ABORT	689,22121
#define CMD2_x02	691,22146
#define CMD2_SETSPEED	693,22169
#define CMD0_PATH_CHECK	695,22197
#define CMD1_PATH_CHECK	696,22226
#define CMD2_PATH_CHECK	697,22256
#define CMDT_PATH_CHECK	698,22286
#define CMDL_PATH_CHECK	699,22316
#define CMDV_PATH_CHECK	700,22356
#define CMD0_SEEK	702,22397
#define CMD1_SEEK	703,22420
#define CMD2_SEEK	704,22448
#define CMDT_SEEK	705,22471
#define CMDL_SEEK	706,22499
#define CMDV_SEEK	707,22527
#define CMD0_READ	709,22556
#define CMD1_READ	710,22579
#define CMD2_READ	711,22602
#define CMDT_READ	712,22625
#define CMDL_READ	713,22653
#define CMDV_READ	714,22681
#define CMD0_READ_XA	716,22710
#define CMD2_READ_XA	717,22736
#define CMD2_READ_XA2	718,22762
#define CMDL_READ_XA	719,22789
#define CMDV_READ_XA	720,22839
#define CMD0_READ_HEAD	722,22874
#define CMD0_SPINUP	724,22903
#define CMD1_SPINUP	725,22928
#define CMD2_SPINUP	726,22953
#define CMDL_SPINUP	727,22987
#define CMDV_SPINUP	728,23019
#define CMD0_SPINDOWN	730,23052
#define CMD1_SPINDOWN	731,23095
#define CMD2_SPINDOWN	732,23122
#define CMDL_SPINDOWN	733,23158
#define CMDV_SPINDOWN	734,23185
#define CMD0_DIAG	736,23222
#define CMD0_READ_UPC	738,23246
#define CMD1_READ_UPC	739,23273
#define CMD2_READ_UPC	740,23300
#define CMDL_READ_UPC	741,23328
#define CMDV_READ_UPC	742,23364
#define CMD0_READ_ISRC	744,23392
#define CMD0_PLAY	746,23421
#define CMD1_PLAY	747,23444
#define CMD2_PLAY	748,23468
#define CMDL_PLAY	749,23492
#define CMDV_PLAY	750,23520
#define CMD0_PLAY_MSF	752,23549
#define CMD1_PLAY_MSF	753,23576
#define CMD2_PLAY_MSF	754,23603
#define CMDT_PLAY_MSF	755,23630
#define CMDL_PLAY_MSF	756,23666
#define CMD0_PLAY_TI	758,23695
#define CMD1_PLAY_TI	759,23721
#define CMD0_STATUS	761,23748
#define CMD1_STATUS	762,23773
#define CMD2_STATUS	763,23798
#define CMDT_STATUS	764,23823
#define CMDL_STATUS	765,23855
#define CMDV_STATUS	766,23887
#define CMD2_SEEK_LEADIN 767,23919
#define CMD0_READ_ERR	769,23950
#define CMD1_READ_ERR	770,23977
#define CMD2_READ_ERR	771,24013
#define CMDT_READ_ERR	772,24040
#define CMDL_READ_ERR	773,24099
#define CMDV_READ_ERR	774,24135
#define CMD0_READ_VER	776,24172
#define CMD1_READ_VER	777,24199
#define CMD2_READ_VER	778,24235
#define CMDT_READ_VER	779,24262
#define CMDL_READ_VER	780,24314
#define CMDV_READ_VER	781,24350
#define CMD0_SETMODE	783,24387
#define CMD1_SETMODE	784,24413
#define CMD2_SETMODE	785,24439
#define CMDT_SETMODE	786,24465
#define CMDL_SETMODE	787,24499
#define CMD0_GETMODE	789,24534
#define CMD1_GETMODE	790,24560
#define CMD2_GETMODE	791,24586
#define CMDT_GETMODE	792,24612
#define CMDL_GETMODE	793,24646
#define CMD0_SET_XA	795,24681
#define CMD0_GET_XA	797,24707
#define CMD0_CAPACITY	799,24733
#define CMD1_CAPACITY	800,24760
#define CMD2_CAPACITY	801,24787
#define CMDL_CAPACITY	802,24814
#define CMD0_READSUBQ	804,24891
#define CMD1_READSUBQ	805,24918
#define CMD2_READSUBQ	806,24945
#define CMDT_READSUBQ	807,24972
#define CMDL_READSUBQ	808,25008
#define CMDV_READSUBQ	809,25044
#define CMD0_DISKCODE	811,25081
#define CMD0_DISKINFO	813,25109
#define CMD1_DISKINFO	814,25136
#define CMD2_DISKINFO	815,25172
#define CMDT_DISKINFO	816,25199
#define CMDL_DISKINFO	817,25235
#define CMDV_DISKINFO	818,25271
#define CMD0_READTOC	820,25308
#define CMD1_READTOC	821,25334
#define CMD2_READTOC	822,25368
#define CMDL_READTOC	823,25395
#define CMDV_READTOC	824,25429
#define CMD0_PAU_RES	826,25464
#define CMD1_PAU_RES	827,25490
#define CMD2_PAU_RES	828,25516
#define CMDT_PAUSE	829,25542
#define CMDL_PAU_RES	830,25574
#define CMDV_PAUSE	831,25608
#define CMD0_PACKET	833,25641
#define CMD1_PACKET	834,25666
#define CMD2_PACKET	835,25698
#define CMDL_PACKET	836,25724
#define CMDV_PACKET	837,25756

drivers/cdrom/sjcd.h,1607
#define __SJCD_H__30,1222
#define SJCD_BASE_ADDR 36,1356
#define SJCD_INTR_NR 42,1486
#define SJCD_DMA_NR 48,1630
#define SJCD_STATUS_AVAILABLE(SJCD_STATUS_AVAILABLE53,1730
#define SJCD_DATA_AVAILABLE(SJCD_DATA_AVAILABLE54,1781
#define SJCDPORT(SJCDPORT60,1973
#define SJCD_STATUS_PORT 61,2023
#define SJCD_S_DATA_PORT 62,2065
#define SJCD_COMMAND_PORT 63,2107
#define SJCD_D_DATA_PORT 64,2149
#define SST_NOT_READY 70,2299
#define SST_MEDIA_CHANGED 71,2372
#define SST_DOOR_OPENED 72,2434
#define SCMD_EJECT_TRAY 76,2510
#define SCMD_LOCK_TRAY 77,2581
#define SCMD_UNLOCK_TRAY 78,2645
#define SCMD_CLOSE_TRAY 79,2711
#define SCMD_RESET 81,2771
#define SCMD_GET_STATUS 82,2828
#define SCMD_GET_VERSION 83,2861
#define SCMD_DATA_READ 85,2895
#define SCMD_SEEK 86,2975
#define SCMD_PLAY 87,3008
#define SCMD_GET_QINFO 89,3042
#define SCMD_SET_MODE 91,3076
#define SCMD_MODE_PLAY 92,3109
#define SCMD_MODE_COOKED 93,3142
#define SCMD_MODE_RAW 94,3185
#define SCMD_MODE_x20_BIT 95,3218
#define SCMD_SET_VOLUME 97,3282
#define SCMD_PAUSE 98,3315
#define SCMD_STOP 99,3348
#define SCMD_GET_DISK_INFO 101,3382
#define SCMD_GET_1_TRACK 106,3474
#define SCMD_GET_L_TRACK 107,3548
#define SCMD_GET_D_SIZE 108,3621
#define S_READ_DATA(S_READ_DATA113,3773
#define SJCD_MAX_TRACKS	119,3995
struct msf msf121,4025
struct sjcd_hw_disk_info sjcd_hw_disk_info127,4113
struct sjcd_hw_qinfo sjcd_hw_qinfo137,4298
struct sjcd_play_msf sjcd_play_msf145,4437
struct sjcd_disk_info sjcd_disk_info150,4504
struct sjcd_toc sjcd_toc157,4643
struct sjcd_stat sjcd_stat167,4842

drivers/cdrom/sonycd535.h,3193
#define SONYCD535_H2,20
#define SONY535_REQUEST_DRIVE_STATUS_1	7,103
#define SONY535_REQUEST_SENSE	8,150
#define SONY535_REQUEST_DRIVE_STATUS_2	9,189
#define SONY535_REQUEST_ERROR_STATUS	10,236
#define SONY535_REQUEST_AUDIO_STATUS	11,281
#define SONY535_INQUIRY	12,326
#define SONY535_SET_INACTIVITY_TIME	14,361
#define SONY535_SEEK_AND_READ_N_BLOCKS_1	16,406
#define SONY535_SEEK_AND_READ_N_BLOCKS_2	17,454
#define SONY535_PLAY_AUDIO	18,502
#define SONY535_REQUEST_DISC_CAPACITY	20,539
#define SONY535_REQUEST_TOC_DATA	21,585
#define SONY535_REQUEST_SUB_Q_DATA	22,626
#define SONY535_REQUEST_ISRC	23,669
#define SONY535_REQUEST_UPC_EAN	24,707
#define SONY535_SET_DRIVE_MODE	26,749
#define SONY535_REQUEST_DRIVE_MODE	27,789
#define SONY535_SET_RETRY_COUNT	28,832
#define SONY535_DIAGNOSTIC_1	30,874
#define SONY535_DIAGNOSTIC_4	31,912
#define SONY535_DIAGNOSTIC_5	32,950
#define SONY535_EJECT_CADDY	34,989
#define SONY535_DISABLE_EJECT_BUTTON	35,1026
#define SONY535_ENABLE_EJECT_BUTTON	36,1071
#define SONY535_HOLD	38,1116
#define SONY535_AUDIO_PAUSE_ON_OFF	39,1147
#define SONY535_SET_VOLUME	40,1190
#define SONY535_STOP	42,1227
#define SONY535_SPIN_UP	43,1258
#define SONY535_SPIN_DOWN	44,1292
#define SONY535_CLEAR_PARAMETERS	46,1328
#define SONY535_CLEAR_ENDING_ADDRESS	47,1369
#define SONY535_DATA_NOT_READY_BIT	52,1443
#define SONY535_RESULT_NOT_READY_BIT	53,1485
#define SONY535_STATUS1_COMMAND_ERROR	58,1556
#define SONY535_STATUS1_DATA_ERROR	59,1601
#define SONY535_STATUS1_SEEK_ERROR	60,1643
#define SONY535_STATUS1_DISC_TYPE_ERROR	61,1685
#define SONY535_STATUS1_NOT_SPINNING	62,1732
#define SONY535_STATUS1_EJECT_BUTTON_PRESSED	63,1777
#define SONY535_STATUS1_CADDY_NOT_INSERTED	64,1829
#define SONY535_STATUS1_BYTE_TWO_FOLLOWS	65,1879
#define SONY535_CDD_LOADING_ERROR	70,1953
#define SONY535_CDD_NO_DISC	71,1994
#define SONY535_CDD_UNLOADING_ERROR	72,2030
#define SONY535_CDD_CADDY_NOT_INSERTED	73,2073
#define SONY535_ATN_RESET_OCCURRED	74,2119
#define SONY535_ATN_DISC_CHANGED	75,2161
#define SONY535_ATN_RESET_AND_DISC_CHANGED	76,2201
#define SONY535_ATN_EJECT_IN_PROGRESS	77,2250
#define SONY535_ATN_BUSY	78,2295
#define SONY535_AUDIO_DRIVE_MODE	83,2362
#define SONY535_CDROM_DRIVE_MODE	84,2400
#define SONY535_PLAY_OP_PLAYBACK	86,2442
#define SONY535_PLAY_OP_ENTER_HOLD	87,2480
#define SONY535_PLAY_OP_SET_AUDIO_ENDING_ADDR	88,2520
#define SONY535_PLAY_OP_SCAN_FORWARD	89,2570
#define SONY535_PLAY_OP_SCAN_BACKWARD	90,2612
#define SONY_BLOCK_NUMBER(SONY_BLOCK_NUMBER95,2708
#define SONY_BLOCK_NUMBER_MSF(SONY_BLOCK_NUMBER_MSF96,2765
#define TIME_OUT	101,2893
#define NO_CDROM	102,2917
#define BAD_STATUS	103,2941
#define CD_BUSY	104,2967
#define NOT_DATA_CD	105,2991
#define NO_ROOM	106,3018
#define LOG_START_OFFSET 108,3043
#define SONY_JIFFIES_TIMEOUT	110,3121
#define SONY_READY_RETRIES 113,3233
#define SONY535_FAST_POLLS	116,3448
typedef unsigned char Byte;Byte120,3658
struct s535_sony_drive_configs535_sony_drive_config126,3783
struct s535_sony_subcodes535_sony_subcode134,3963
struct s535_sony_disc_capacitys535_sony_disc_capacity144,4180
struct s535_sony_tocs535_sony_toc154,4454

drivers/isdn/icn/icn.c,1141
*revision 212,6609
icn_free_queue(223,6820
icn_shiftout(251,7568
icn_disable_ram(268,7878
icn_enable_ram(277,7998
icn_map_channel(286,8153
icn_lock_channel(310,8756
icn_release_channel(340,9356
icn_trymaplock_channel(359,9685
icn_maprelease_channel(391,10383
icn_pollbchan_receive(413,10917
icn_pollbchan_send(464,12352
icn_pollbchan(547,14375
typedef struct icn_stat icn_stat573,15047
} icn_stat;icn_stat577,15116
static icn_stat icn_stat_table[579,15147
icn_parse_status(613,16743
icn_putmsg(731,19522
icn_polldchan(748,19925
icn_sendbuf(854,22737
icn_check_loader(896,23716
#define SLEEP(SLEEP938,24642
#define SLEEP(SLEEP948,24848
icn_loadboot(952,24886
icn_loadproto(1058,27709
icn_readstatus(1162,30342
icn_writecmd(1182,30827
icn_stopcard(1252,32284
icn_stopallcards(1273,32707
icn_disable_cards(1288,32952
icn_command(1313,33456
icn_findcard(1625,41952
if_command(1641,42168
if_writecmd(1654,42429
if_readstatus(1669,42771
if_sendbuf(1684,43113
icn_initcard(1703,43562
icn_addcard(1750,44978
#define icn_init 1790,45853
icn_setup(1793,45893
icn_init(1816,46219
cleanup_module(1843,46776

drivers/isdn/icn/icn.h,2429
#define icn_h125,3910
#define ICN_IOCTL_SETMMIO 127,3925
#define ICN_IOCTL_GETMMIO 128,3955
#define ICN_IOCTL_SETPORT 129,3985
#define ICN_IOCTL_GETPORT 130,4015
#define ICN_IOCTL_LOADBOOT 131,4045
#define ICN_IOCTL_LOADPROTO 132,4075
#define ICN_IOCTL_LEASEDCFG 133,4105
#define ICN_IOCTL_GETDOUBLE 134,4135
#define ICN_IOCTL_DEBUGVAR 135,4165
#define ICN_IOCTL_ADDCARD 136,4195
typedef struct icn_cdef icn_cdef139,4260
} icn_cdef;icn_cdef143,4327
#define OUTB_P(OUTB_P172,4963
#define OUTB_P 174,5059
#define ICN_BASEADDR 178,5137
#define ICN_PORTLEN 179,5164
#define ICN_MEMADDR 180,5191
#define ICN_FLAGS_B1ACTIVE 182,5221
#define ICN_FLAGS_B2ACTIVE 183,5299
#define ICN_FLAGS_RUNNING 184,5377
#define ICN_FLAGS_RBTIMER 185,5455
#define ICN_BOOT_TIMEOUT1 187,5534
#define ICN_CHANLOCK_DELAY 188,5612
#define ICN_TIMER_BCREAD 190,5694
#define ICN_TIMER_DCREAD 191,5774
#define ICN_CODE_STAGE1 193,5853
#define ICN_CODE_STAGE2 194,5931
#define ICN_MAX_SQUEUE 196,6010
#define ICN_FRAGSIZE 197,6088
#define ICN_BCH 198,6166
#define SHM_DCTL_OFFSET 202,6301
#define SHM_CCTL_OFFSET 203,6379
#define SHM_CBUF_OFFSET 204,6457
#define SHM_DBUF_OFFSET 205,6535
} frag_buf;frag_buf216,6945
} icn_shmem;icn_shmem247,8031
typedef struct icn_card icn_card252,8076
} icn_card;icn_card285,10068
typedef struct icn_dev icn_dev290,10108
} icn_dev;icn_dev297,10517
typedef icn_dev *icn_devptr;icn_devptr299,10529
static icn_card *cards 303,10578
static u_char chan2bank[304,10619
static icn_dev dev;307,10708
static int portbase 313,10878
static int membase 314,10914
static char *icn_id 315,10948
static char *icn_id2 316,10976
#define ICN_CFG 335,11523
#define ICN_MAPRAM 336,11555
#define ICN_RUN 337,11589
#define ICN_BANK 338,11623
#define sbfree 341,11712
#define sbnext 345,11860
#define sbuf_n 349,12018
#define sbuf_d 350,12062
#define sbuf_l 351,12131
#define sbuf_f 352,12202
#define rbavl 355,12332
#define rbnext 359,12467
#define rbuf_n 363,12624
#define rbuf_d 364,12668
#define rbuf_l 365,12740
#define rbuf_f 366,12814
#define cmd_o 369,12932
#define cmd_i 370,12979
#define cmd_free 373,13069
#define msg_o 378,13238
#define msg_i 379,13285
#define msg_avail 382,13375
#define CID 386,13504
#define MIN(MIN388,13538
#define MAX(MAX389,13567
#define check_shmem 395,13787
#define release_shmem 396,13822
#define request_shmem 397,13859

drivers/isdn/isdn_cards.c,25
isdn_cards_init(69,1889

drivers/isdn/isdn_cards.h,0

drivers/isdn/isdn_common.c,1762
isdn_dev *dev 270,9118
static char *isdn_revision 272,9151
extern char *isdn_net_revision;274,9202
extern char *isdn_tty_revision;275,9234
extern char *isdn_ppp_revision;277,9289
static char *isdn_ppp_revision 279,9327
extern char *isdn_audio_revision;282,9404
static char *isdn_audio_revision 284,9444
extern char *isdn_v110_revision;286,9498
isdn_MOD_INC_USE_COUNT(291,9605
isdn_MOD_DEC_USE_COUNT(297,9664
isdn_dumppkt(304,9790
isdn_free_queue(316,10023
isdn_dc2minor(330,10259
static int isdn_timer_cnt1 339,10421
static int isdn_timer_cnt2 340,10453
static int isdn_timer_cnt3 341,10485
static int isdn_timer_cnt4 342,10517
isdn_timer_funct(345,10562
isdn_timer_ctrl(396,11719
isdn_receive_skb_callback(423,12305
isdn_command(466,13342
isdn_all_eaz(496,14211
isdn_status_callback(510,14407
isdn_getnum(763,20764
#define DLE 772,20912
isdn_readbchan(788,21647
isdn_minor2drv(886,23814
isdn_minor2chan(892,23895
#define INF_DV 897,23958
isdn_statstr(900,24042
isdn_info_update(954,25401
isdn_read(966,25589
isdn_lseek(1047,27537
isdn_write(1053,27629
isdn_poll(1101,28863
isdn_set_allcfg(1141,30018
isdn_get_allcfg(1205,31405
isdn_ioctl(1274,33055
#define name 1292,33388
#define bname 1293,33414
#define iocts 1294,33441
#define phone 1295,33468
#define cfg 1296,33495
isdn_open(1719,44646
isdn_close(1779,45993
static struct file_operations isdn_fops 1831,47119
isdn_map_eaz2msn(1847,47463
#define L2V 1865,47798
isdn_get_free_channel(1868,47889
isdn_free_channel(1931,49689
isdn_unexclusive_channel(1963,50387
isdn_writebuf_stub(1985,50783
isdn_writebuf_skb_stub(2012,51397
register_isdn(2062,52570
#define isdn_init 2183,55848
isdn_getrev(2187,55900
isdn_init(2205,56156
cleanup_module(2281,58152

drivers/isdn/isdn_common.h,0

drivers/isdn/isdn_net.c,1554
#define __NO_VERSION__246,8903
char *isdn_net_revision 275,9653
isdn_net_unreachable(282,9761
isdn_net_reset(299,10142
isdn_net_open(322,10704
isdn_net_bind_channel(359,11516
isdn_net_unbind_channel(376,11864
unsigned long last_jiffies 426,13357
isdn_net_autohup(429,13397
isdn_net_stat_callback(486,15207
isdn_net_checkwild(670,20364
isdn_net_dial(690,21049
isdn_net_hangup(923,27392
} ip_ports;ip_ports959,28393
isdn_net_log_skb(962,28418
isdn_net_send_skb(1055,30811
isdn_net_xmit(1091,31661
isdn_net_adjust_hdr(1147,33315
isdn_net_start_xmit(1165,33756
isdn_net_close(1289,37200
isdn_net_get_stats(1327,38085
isdn_net_type_trans(1343,38720
isdn_net_slarp_send(1387,39852
isdn_net_slarp_in(1426,41013
isdn_net_slarp_out(1459,41806
isdn_net_receive(1481,42264
isdn_net_rcv_skb(1613,45708
my_eth_header(1629,45989
isdn_net_header(1674,47056
isdn_net_rebuild_header(1728,48485
isdn_net_init(1762,49244
isdn_net_Star(1833,51056
isdn_net_wildmat(1855,51606
isdn_net_swapbind(1897,52509
isdn_net_swap_usage(1920,52924
isdn_net_find_icall(1950,53879
isdn_net_findif(2230,62684
isdn_net_force_dial_lp(2248,63013
isdn_net_force_dial(2292,64099
isdn_net_new(2305,64336
isdn_net_newslave(2395,67206
isdn_net_setcfg(2428,67990
isdn_net_getcfg(2648,74080
isdn_net_addphone(2700,75482
isdn_net_getphones(2723,76100
isdn_net_delphone(2756,76707
isdn_net_rmallphone(2794,77408
isdn_net_force_hangup(2821,77793
isdn_net_realrm(2845,78257
isdn_net_rm(2915,80064
isdn_net_rmall(2939,80518
dev_purge_queues(2967,81049

drivers/isdn/isdn_net.h,568
#define ISDN_WAITCHARGE 52,1885
#define ISDN_HAVECHARGE 53,1964
#define ISDN_CHARGEHUP 54,2043
#define ISDN_INHUP 55,2122
#define ISDN_MANCHARGE 56,2201
typedef struct cisco_hdr cisco_hdr62,2327
} cisco_hdr;cisco_hdr66,2465
typedef struct cisco_slarp cisco_slarp68,2479
} cisco_slarp;cisco_slarp83,2999
#define CISCO_ADDR_UNICAST 85,3015
#define CISCO_ADDR_BROADCAST 86,3050
#define CISCO_TYPE_INET 87,3085
#define CISCO_TYPE_SLARP 88,3122
#define CISCO_SLARP_REPLY 89,3159
#define CISCO_SLARP_REQUEST 90,3191
#define CISCO_SLARP_KEEPALIVE 91,3223

drivers/isdn/isdn_ppp.c,1608
#define __NO_VERSION__162,5559
#define PPP_IPX 172,5769
char *isdn_ppp_revision 202,7093
static struct ippp_struct *ippp_table[204,7141
static struct isdn_ppp_compressor *ipc_head 205,7199
isdn_ppp_frame_log(213,7346
isdn_ppp_free(235,7820
isdn_ppp_bind(291,9186
isdn_ppp_wakeup_daemon(355,10793
isdn_ppp_closewait(372,11217
isdn_ppp_get_slot(392,11521
isdn_ppp_open(407,11687
isdn_ppp_release(461,13122
get_arg(505,14126
set_arg(518,14331
isdn_ppp_ioctl(534,14564
isdn_ppp_poll(690,18569
isdn_ppp_fill_rq(733,19452
isdn_ppp_read(792,20605
isdn_ppp_write(835,21297
isdn_ppp_init(900,22882
isdn_ppp_cleanup(929,23688
static int isdn_ppp_strip_proto(940,23841
void isdn_ppp_receive(957,24180
isdn_ppp_push_higher(1145,29775
static unsigned char *isdn_ppp_skb_push(1250,32664
isdn_ppp_xmit(1272,33172
isdn_ppp_free_sqqueue(1477,38732
isdn_ppp_free_mpqueue(1493,38951
isdn_ppp_bundle(1507,39156
isdn_ppp_mask_queue(1555,40305
isdn_ppp_fill_mpqueue(1565,40457
isdn_ppp_cleanup_sqqueue(1700,43326
isdn_ppp_cleanup_mpqueue(1724,44018
isdn_ppp_timer_timeout(1772,45416
isdn_ppp_dev_ioctl_stats(1821,46453
isdn_ppp_dev_ioctl(1861,47713
isdn_ppp_if_get_unit(1892,48368
isdn_ppp_dial_slave(1919,48736
isdn_ppp_hangup_slave(1950,49270
static struct sk_buff *isdn_ppp_decompress(1983,49801
static struct sk_buff *isdn_ppp_compress(2034,50912
static void isdn_ppp_receive_ccp(2093,52044
int isdn_ppp_register_compressor(2103,52359
int isdn_ppp_unregister_compressor(2114,52543
static int isdn_ppp_set_compressor(2126,52780
static struct symbol_table isdn_ppp_syms 2143,53055

drivers/isdn/isdn_ppp.h,183
#define IPPP_OPEN	87,3350
#define IPPP_CONNECT	88,3373
#define IPPP_CLOSEWAIT	89,3399
#define IPPP_NOBLOCK	90,3427
#define IPPP_ASSIGNED	91,3453
#define IPPP_MAX_HEADER 93,3481

drivers/isdn/isdn_tty.c,3804
#define __NO_VERSION__219,7685
#define VBUF 227,7880
#define VBUFX 228,7899
#define FIX_FILE_TRANSFER231,7931
#define MODEM_PARANOIA_CHECK247,8528
#define MODEM_DO_RESTART248,8557
static char *isdn_ttyname_ttyI 250,8583
static char *isdn_ttyname_cui 251,8624
static int bit2si[252,8663
static int si2bit[254,8712
char *isdn_tty_revision 257,8762
#define DLE 259,8810
#define ETX 260,8827
#define DC4 261,8844
#define REG_RINGATA 266,8924
#define REG_RINGCNT 267,8948
#define REG_ESC 268,8972
#define REG_CR 269,8996
#define REG_LF 270,9020
#define REG_BS 271,9044
#define REG_RESP 273,9069
#define BIT_RESP 274,9093
#define REG_RESPNUM 275,9117
#define BIT_RESPNUM 276,9141
#define REG_ECHO 277,9165
#define BIT_ECHO 278,9189
#define REG_DCD 279,9213
#define BIT_DCD 280,9237
#define REG_CTS 281,9261
#define BIT_CTS 282,9285
#define REG_DTRR 283,9309
#define BIT_DTRR 284,9333
#define REG_DSR 285,9357
#define BIT_DSR 286,9381
#define REG_CPPP 287,9405
#define BIT_CPPP 288,9429
#define REG_DELXMT 290,9454
#define BIT_DELXMT 291,9478
#define REG_T70 292,9502
#define BIT_T70 293,9526
#define BIT_T70_EXT 294,9550
#define REG_DTRHUP 295,9574
#define BIT_DTRHUP 296,9598
#define REG_RESPXT 297,9622
#define BIT_RESPXT 298,9646
#define REG_CIDONCE 299,9670
#define BIT_CIDONCE 300,9694
#define REG_RUNG 301,9718
#define BIT_RUNG 302,9742
#define REG_L2PROT 304,9767
#define REG_L3PROT 305,9791
#define REG_PSIZE 306,9815
#define REG_WSIZE 307,9839
#define REG_SI1 308,9863
#define REG_SI2 309,9887
#define REG_SI1I 310,9911
#define REG_PLAN 311,9935
#define REG_SCREEN 312,9959
isdn_tty_try_read(324,10370
isdn_tty_readmodem(374,11601
isdn_tty_rcv_skb(429,12817
isdn_tty_cleanup_xmit(537,15517
isdn_tty_tint(556,15917
isdn_tty_countDLE(589,16695
isdn_tty_handleDLEdown(603,16949
isdn_tty_end_vrx(670,18348
static int voice_cf[686,18567
isdn_tty_senddown(697,18991
isdn_tty_modem_do_ncarrier(820,22010
isdn_tty_modem_ncarrier(832,22348
isdn_tty_dial(846,22715
isdn_tty_modem_hup(921,24710
isdn_tty_paranoia_check(982,26140
isdn_tty_change_speed(1004,26738
isdn_tty_startup(1062,27920
isdn_tty_shutdown(1097,28722
isdn_tty_write(1137,30029
isdn_tty_write_room(1236,32601
isdn_tty_chars_in_buffer(1250,32927
isdn_tty_flush_buffer(1262,33196
isdn_tty_flush_chars(1288,33766
isdn_tty_throttle(1307,34347
isdn_tty_unthrottle(1319,34621
isdn_tty_get_lsr_info(1351,35600
isdn_tty_get_modem_info(1368,35893
isdn_tty_set_modem_info(1391,36462
isdn_tty_ioctl(1460,38198
isdn_tty_set_termios(1545,40679
isdn_tty_block_til_ready(1568,41259
isdn_tty_open(1699,44908
isdn_tty_close(1755,46396
isdn_tty_hangup(1855,49306
isdn_tty_reset_profile(1871,49721
isdn_tty_modem_reset_vpar(1899,50333
isdn_tty_modem_reset_regs(1909,50682
modem_write_profile(1924,51051
isdn_tty_modem_init(1933,51232
isdn_tty_find_icall(2034,54462
#define TTY_IS_ACTIVE(TTY_IS_ACTIVE2114,57003
isdn_tty_stat_callback(2118,57110
#define cmdchar(cmdchar2261,60941
isdn_tty_at_cout(2268,61134
isdn_tty_on_hook(2313,61930
isdn_tty_off_hook(2324,62135
#define PLUSWAIT1 2329,62207
#define PLUSWAIT2 2330,62254
isdn_tty_check_esc(2344,62658
isdn_tty_modem_result(2389,63684
isdn_tty_show_profile(2550,67970
isdn_tty_get_msnstr(2562,68199
isdn_tty_getdial(2573,68395
#define PARSE_ERROR 2590,68739
#define PARSE_ERROR1 2591,68803
isdn_tty_report(2594,68883
isdn_tty_cmd_ATand(2666,70782
isdn_tty_check_ats(2825,74569
isdn_tty_cmd_ATS(2861,75295
isdn_tty_cmd_ATA(2927,76584
isdn_tty_cmd_PLUSF(2971,77708
isdn_tty_cmd_PLUSV(3133,81983
isdn_tty_parse_at(3364,86774
#define my_toupper(my_toupper3531,90151
isdn_tty_edit_at(3543,90426
isdn_tty_modem_escape(3613,91953
isdn_tty_modem_ring(3642,92661
isdn_tty_modem_xmit(3662,93008

drivers/isdn/isdn_tty.h,0

drivers/isdn/avmb1/b1capi.c,2641
static char *revision 79,2223
int showcapimsgs 83,2338
int loaddebug 84,2381
struct msgidqueue msgidqueue92,2597
typedef struct avmb1_ncci avmb1_ncci97,2661
} avmb1_ncci;avmb1_ncci106,2903
typedef struct avmb1_appl avmb1_appl108,2918
} avmb1_appl;avmb1_appl116,3129
static struct capi_version driver_version 120,3213
static char driver_serial[121,3274
static char capi_manufakturer[122,3327
#define APPL(APPL124,3378
#define	VALID_APPLID(VALID_APPLID125,3421
#define APPL_IS_FREE(APPL_IS_FREE126,3501
#define APPL_MARK_FREE(APPL_MARK_FREE127,3551
#define APPL_MARK_USED(APPL_MARK_USED128,3631
#define NCCI2CTRL(NCCI2CTRL130,3714
#define VALID_CARD(VALID_CARD132,3766
#define CARD(CARD133,3825
#define CARDNR(CARDNR134,3861
static avmb1_appl applications[136,3901
static avmb1_card cards[137,3947
static int ncards 138,3987
static struct sk_buff_head recv_queue;139,4010
static struct capi_interface_user *capi_users 140,4049
static long notify_up_set 141,4100
static long notify_down_set 142,4131
static struct tq_struct tq_state_notify;144,4165
static struct tq_struct tq_recv_notify;145,4206
static char *cardtype2str(149,4315
static inline int capi_cmd_valid(160,4543
static inline int capi_subcmd_valid(183,4987
static inline void mq_init(197,5220
static inline int mq_enqueue(210,5522
static inline int mq_dequeue(226,5841
void avmb1_handle_new_ncci(243,6200
void avmb1_handle_free_ncci(270,6978
static avmb1_ncci *find_ncci(311,8065
static void recv_handler(326,8316
void avmb1_handle_capimsg(358,9299
void avmb1_interrupt(375,9707
static void notify_up(399,10170
static void notify_down(412,10473
static void notify_handler(422,10723
void avmb1_card_ready(436,11085
static void avmb1_card_down(504,13371
int avmb1_registercard(532,14100
int avmb1_addcard(569,14991
int avmb1_detectcard(574,15099
int avmb1_probecard(604,15886
int avmb1_unregistercard(615,16185
int avmb1_resetcard(633,16570
static int capi_installed(658,17102
static __u16 capi_register(668,17255
static __u16 capi_release(703,18090
static __u16 capi_put_message(729,18724
static __u16 capi_get_message(760,19683
static __u16 capi_set_signal(772,19957
static __u16 capi_get_manufacturer(783,20214
static __u16 capi_get_version(796,20568
static __u16 capi_get_serial(810,20900
static __u16 capi_get_profile(825,21286
static int capi_manufacturer(839,21643
struct capi_interface avmb1_interface 1005,25476
struct capi_interface *attach_capi_interface(1024,25930
int detach_capi_interface(1042,26301
#define avmb1_init 1077,27165
int avmb1_init(1080,27204
void cleanup_module(1111,27781

drivers/isdn/avmb1/b1lli.c,2013
#define	SEND_POLL	62,1586
#define SEND_INIT	65,1660
#define SEND_REGISTER	70,1813
#define SEND_RELEASE	79,2092
#define SEND_MESSAGE	83,2192
#define SEND_DATA_B3_REQ	87,2297
#define SEND_CONFIG	93,2449
#define RECEIVE_POLL	100,2591
#define RECEIVE_INIT	103,2660
#define RECEIVE_MESSAGE	113,3025
#define RECEIVE_DATA_B3_IND	118,3162
#define RECEIVE_START	123,3317
#define RECEIVE_STOP	126,3378
#define RECEIVE_NEW_NCCI	129,3438
#define RECEIVE_FREE_NCCI	133,3543
#define RECEIVE_RELEASE	136,3622
#define WRITE_REGISTER	140,3707
#define READ_REGISTER	141,3736
#define B1_READ	147,3789
#define B1_WRITE	148,3812
#define B1_INSTAT	149,3835
#define B1_OUTSTAT	150,3859
#define B1_RESET	151,3884
#define B1_ANALYSE	152,3907
#define B1_IDENT	153,3932
#define B1_IRQ_MASTER	154,3975
#define B1_STAT0(B1_STAT0156,4024
#define B1_STAT1(B1_STAT1157,4112
static inline unsigned char b1outp(160,4156
static inline int B1_rx_full(168,4336
static inline unsigned char B1_get_byte(173,4428
static inline unsigned int B1_get_word(183,4738
static inline int B1_tx_empty(193,4970
static inline void B1_put_byte(198,5064
static inline void B1_put_word(204,5199
static inline unsigned int B1_get_slice(212,5425
static inline void B1_put_slice(223,5627
static void b1_wr_reg(231,5798
static inline unsigned int b1_rd_reg(240,6016
static inline void b1_set_test_bit(249,6237
static inline int b1_get_test_bit(256,6399
static int irq_table[262,6569
int B1_valid_irq(281,6833
unsigned char B1_assign_irq(294,7079
unsigned char B1_enable_irq(307,7406
unsigned char B1_disable_irq(312,7499
void B1_reset(317,7593
int B1_detect(329,7833
extern int loaddebug;376,8841
int B1_load_t4file(378,8864
int B1_load_config(417,9704
int B1_loaded(473,10901
static inline void parse_version(508,11754
void B1_send_init(522,12130
void B1_send_register(536,12428
void B1_send_release(553,12815
extern int showcapimsgs;565,13017
void B1_send_message(567,13043
void B1_handle_interrupt(622,14525

drivers/isdn/avmb1/b1pci.c,186
#define PCI_VENDOR_ID_AVM	40,1046
#define PCI_DEVICE_ID_AVM_B1	44,1116
static char *revision 47,1159
#define b1pci_init 64,1654
int b1pci_init(67,1693
void cleanup_module(113,2719

drivers/isdn/avmb1/capi.c,544
int capi_major 84,2420
static struct capidev capidevs[90,2564
struct capi_interface *capifuncs;91,2615
static void capi_signal(95,2724
static long long capi_llseek(116,3287
static ssize_t capi_read(122,3395
static ssize_t capi_write(175,4588
capi_poll(226,5764
static int capi_ioctl(247,6307
static int capi_open(400,9938
capi_release(428,10396
static struct file_operations capi_fops 457,10970
#define	 capi_init	477,11325
static struct capi_interface_user cuser 480,11364
int capi_init(485,11427
void cleanup_module(503,11851

drivers/isdn/avmb1/capicmd.h,2639
#define __CAPICMD_H__21,426
#define CAPI_ALERT	24,479
#define CAPI_CONNECT	25,508
#define CAPI_CONNECT_ACTIVE	26,539
#define CAPI_CONNECT_B3_ACTIVE	27,576
#define CAPI_CONNECT_B3 28,616
#define CAPI_CONNECT_B3_T90_ACTIVE 29,650
#define CAPI_DATA_B3	30,691
#define CAPI_DISCONNECT_B3	31,722
#define CAPI_DISCONNECT 32,758
#define CAPI_FACILITY	33,792
#define CAPI_INFO	34,824
#define CAPI_LISTEN	35,852
#define CAPI_MANUFACTURER	36,882
#define CAPI_RESET_B3	37,917
#define CAPI_SELECT_B_PROTOCOL	38,949
#define CAPI_REQ 42,1024
#define CAPI_CONF 43,1049
#define CAPI_IND 44,1074
#define CAPI_RESP 45,1099
#define CAPICMD(CAPICMD49,1165
#define CAPI_DISCONNECT_REQ	51,1216
#define CAPI_DISCONNECT_CONF	52,1279
#define CAPI_DISCONNECT_IND	53,1344
#define CAPI_DISCONNECT_RESP	54,1407
#define CAPI_ALERT_REQ	56,1473
#define CAPI_ALERT_CONF	57,1527
#define CAPI_CONNECT_REQ	59,1584
#define CAPI_CONNECT_CONF	60,1641
#define CAPI_CONNECT_IND	61,1700
#define CAPI_CONNECT_RESP	62,1757
#define CAPI_CONNECT_ACTIVE_REQ	64,1817
#define CAPI_CONNECT_ACTIVE_CONF	65,1888
#define CAPI_CONNECT_ACTIVE_IND	66,1960
#define CAPI_CONNECT_ACTIVE_RESP	67,2031
#define CAPI_SELECT_B_PROTOCOL_REQ	69,2104
#define CAPI_SELECT_B_PROTOCOL_CONF	70,2180
#define CAPI_CONNECT_B3_ACTIVE_REQ	72,2259
#define CAPI_CONNECT_B3_ACTIVE_CONF	73,2335
#define CAPI_CONNECT_B3_ACTIVE_IND	74,2413
#define CAPI_CONNECT_B3_ACTIVE_RESP	75,2489
#define CAPI_CONNECT_B3_REQ	77,2568
#define CAPI_CONNECT_B3_CONF	78,2631
#define CAPI_CONNECT_B3_IND	79,2696
#define CAPI_CONNECT_B3_RESP	80,2759
#define CAPI_CONNECT_B3_T90_ACTIVE_IND	83,2826
#define CAPI_CONNECT_B3_T90_ACTIVE_RESP	84,2910
#define CAPI_DATA_B3_REQ	86,2997
#define CAPI_DATA_B3_CONF	87,3054
#define CAPI_DATA_B3_IND	88,3113
#define CAPI_DATA_B3_RESP	89,3170
#define CAPI_DISCONNECT_B3_REQ	91,3230
#define CAPI_DISCONNECT_B3_CONF	92,3299
#define CAPI_DISCONNECT_B3_IND	93,3370
#define CAPI_DISCONNECT_B3_RESP	94,3439
#define CAPI_RESET_B3_REQ	96,3511
#define CAPI_RESET_B3_CONF	97,3570
#define CAPI_RESET_B3_IND	98,3631
#define CAPI_RESET_B3_RESP	99,3690
#define CAPI_LISTEN_REQ	101,3752
#define CAPI_LISTEN_CONF	102,3808
#define CAPI_MANUFACTURER_REQ	104,3866
#define CAPI_MANUFACTURER_CONF	105,3933
#define CAPI_MANUFACTURER_IND	106,4002
#define CAPI_MANUFACTURER_RESP	107,4069
#define CAPI_FACILITY_REQ	109,4139
#define CAPI_FACILITY_CONF	110,4198
#define CAPI_FACILITY_IND	111,4259
#define CAPI_FACILITY_RESP	112,4318
#define CAPI_INFO_REQ	114,4380
#define CAPI_INFO_CONF	115,4432
#define CAPI_INFO_IND	116,4486
#define CAPI_INFO_RESP	117,4538

drivers/isdn/avmb1/capidev.h,61
struct capidev capidev20,402
#define CAPI_MAXMINOR	29,552

drivers/isdn/avmb1/capidrv.c,2876
static char *revision 82,2381
int debugmode 83,2426
struct capidrv_contr capidrv_contr91,2611
struct capidrv_data capidrv_data168,3952
typedef struct capidrv_plci capidrv_plci;capidrv_plci174,4040
typedef struct capidrv_ncci capidrv_ncci;capidrv_ncci175,4082
typedef struct capidrv_contr capidrv_contr;capidrv_contr176,4124
typedef struct capidrv_data capidrv_data;capidrv_data177,4168
typedef struct capidrv_bchan capidrv_bchan;capidrv_bchan178,4210
static capidrv_data global;182,4330
static struct capi_interface *capifuncs;183,4358
static inline __u32 b1prot(190,4575
static inline __u32 b2prot(205,4821
static inline __u32 b3prot(219,5055
static inline __u16 si2cip(232,5277
static inline __u8 cip2si1(263,5954
static inline __u8 cip2si2(276,6242
static inline capidrv_contr *findcontrbydriverid(292,6602
static capidrv_contr *findcontrbynumber(304,6810
static capidrv_plci *new_plci(319,7084
static capidrv_plci *find_plci_by_plci(340,7512
static capidrv_plci *find_plci_by_msgid(349,7698
static capidrv_plci *find_plci_by_ncci(358,7888
static void free_plci(367,8085
static inline capidrv_ncci *new_ncci(387,8613
static inline capidrv_ncci *find_ncci(413,9139
static inline capidrv_ncci *find_ncci_by_msgid(427,9412
static void free_ncci(442,9721
static int capidrv_add_ack(456,10005
static int capidrv_del_ack(475,10474
static void send_message(494,10880
struct listenstatechange listenstatechange507,11248
static struct listenstatechange listentable[513,11322
static void listen_change_state(526,11901
static void p0(546,12448
struct plcistatechange plcistatechange560,12777
static struct plcistatechange plcitable[567,12914
static void plci_change_state(612,15305
static _cmsg cmsg;633,15944
static void n0(635,15964
struct nccistatechange nccistatechange660,16569
static struct nccistatechange nccitable[667,16706
static void ncci_change_state(700,18298
static inline int new_bchan(727,19101
static void handle_controller(741,19383
static void handle_incoming_call(837,22334
static void handle_plci(950,25673
static void handle_ncci(1116,30437
static void handle_data(1284,35006
static _cmsg s_cmsg;1308,35742
static void capidrv_signal(1310,35764
#define PUTBYTE_TO_STATUS(PUTBYTE_TO_STATUS1336,36475
static void handle_dtrace_data(1343,36673
static _cmsg cmdcmsg;1390,37890
static int capidrv_ioctl(1392,37913
static int capidrv_command(1402,38119
static int if_command(1640,44987
static _cmsg sendcmsg;1653,45265
static int if_sendbuf(1655,45289
static int if_readstat(1725,47369
static void enable_dchannel_trace(1749,47939
static int capidrv_addcontr(1801,49641
static int capidrv_delcontr(1886,52075
static void lower_callback(1926,52874
static struct capi_interface_user cuser 1938,53117
#define capidrv_init 1944,53207
int capidrv_init(1947,53248
void cleanup_module(1998,54332

drivers/isdn/avmb1/capidrv.h,1985
#define __CAPIDRV_H__20,445
#define ST_LISTEN_NONE	25,499
#define ST_LISTEN_WAIT_CONF	26,536
#define ST_LISTEN_ACTIVE	27,579
#define ST_LISTEN_ACTIVE_WAIT_CONF	28,617
#define EV_LISTEN_REQ	31,668
#define EV_LISTEN_CONF_ERROR	33,735
#define EV_LISTEN_CONF_EMPTY	35,808
#define EV_LISTEN_CONF_OK	37,881
#define ST_PLCI_NONE	43,985
#define ST_PLCI_OUTGOING 44,1020
#define ST_PLCI_ALLOCATED	45,1061
#define ST_PLCI_ACTIVE	46,1100
#define ST_PLCI_INCOMING	47,1139
#define ST_PLCI_FACILITY_IND	48,1177
#define ST_PLCI_ACCEPTING	49,1219
#define ST_PLCI_DISCONNECTING	50,1258
#define ST_PLCI_DISCONNECTED	51,1301
#define EV_PLCI_CONNECT_REQ	53,1344
#define EV_PLCI_CONNECT_CONF_ERROR	54,1394
#define EV_PLCI_CONNECT_CONF_OK	55,1450
#define EV_PLCI_FACILITY_IND_UP	56,1504
#define EV_PLCI_CONNECT_IND	57,1556
#define EV_PLCI_CONNECT_ACTIVE_IND	58,1604
#define EV_PLCI_CONNECT_REJECT	59,1660
#define EV_PLCI_DISCONNECT_REQ	61,1731
#define EV_PLCI_DISCONNECT_IND	66,1864
#define EV_PLCI_FACILITY_IND_DOWN	72,2017
#define EV_PLCI_DISCONNECT_RESP	78,2175
#define EV_PLCI_CONNECT_RESP	79,2228
#define ST_NCCI_PREVIOUS	84,2312
#define ST_NCCI_NONE	85,2342
#define ST_NCCI_OUTGOING	86,2378
#define ST_NCCI_INCOMING	87,2419
#define ST_NCCI_ALLOCATED	88,2458
#define ST_NCCI_ACTIVE	89,2498
#define ST_NCCI_RESETING	90,2538
#define ST_NCCI_DISCONNECTING	91,2577
#define ST_NCCI_DISCONNECTED	92,2621
#define EV_NCCI_CONNECT_B3_REQ	94,2665
#define EV_NCCI_CONNECT_B3_IND	95,2719
#define EV_NCCI_CONNECT_B3_CONF_OK	96,2771
#define EV_NCCI_CONNECT_B3_CONF_ERROR	97,2828
#define EV_NCCI_CONNECT_B3_REJECT	98,2888
#define EV_NCCI_CONNECT_B3_RESP	99,2942
#define EV_NCCI_CONNECT_B3_ACTIVE_IND	100,2995
#define EV_NCCI_RESET_B3_REQ	101,3055
#define EV_NCCI_RESET_B3_IND	102,3107
#define EV_NCCI_DISCONNECT_B3_IND	103,3159
#define EV_NCCI_DISCONNECT_B3_CONF_ERROR	104,3214
#define EV_NCCI_DISCONNECT_B3_REQ	105,3280
#define EV_NCCI_DISCONNECT_B3_RESP	109,3400

drivers/isdn/avmb1/capiutil.c,1483
char *capi_info2str(57,1661
char *capi_info2str(62,1722
} _cdef;_cdef258,9585
#define _CBYTE	260,9595
#define _CWORD	261,9619
#define _CDWORD 262,9643
#define _CSTRUCT 263,9668
#define _CMSTRUCT 264,9693
#define _CEND	265,9718
static _cdef cdef[267,9742
static unsigned char *cpars[367,12361
#define byteTLcpy(byteTLcpy452,16269
#define wordTLcpy(wordTLcpy453,16326
#define dwordTLcpy(dwordTLcpy454,16385
#define structTLcpy(structTLcpy455,16430
#define structTLcpyovl(structTLcpyovl456,16475
#define byteTRcpy(byteTRcpy458,16522
#define wordTRcpy(wordTRcpy459,16579
#define dwordTRcpy(dwordTRcpy460,16638
#define structTRcpy(structTRcpy461,16683
#define structTRcpyovl(structTRcpyovl462,16728
static unsigned command_2_index(465,16835
#define TYP 478,17125
#define OFF 479,17168
static void jumpcstruct(481,17227
static void pars_2_message(498,17529
unsigned capi_cmsg2message(557,18929
static void message_2_pars(576,19401
unsigned capi_message2cmsg(620,20369
unsigned capi_cmsg_header(640,20874
static char *mnames[655,21287
char *capi_cmd2str(738,22372
static char *pnames[747,22587
static char buf[800,23915
static char *p 801,23938
static void bufprint(806,24040
static void printstructlen(815,24163
static void printstruct(835,24492
#define NAME 849,24731
static void protocol_message_2_pars(851,24774
char *capi_message2str(913,26369
char *capi_cmsg2str(937,26887
int init_module(963,27449
void cleanup_module(968,27487

drivers/isdn/avmb1/capiutil.h,2057
#define __CAPIUTIL_H__27,661
#define	CAPIMSG_LEN(CAPIMSG_LEN31,709
#define	CAPIMSG_APPID(CAPIMSG_APPID32,754
#define	CAPIMSG_COMMAND(CAPIMSG_COMMAND33,800
#define	CAPIMSG_SUBCOMMAND(CAPIMSG_SUBCOMMAND34,834
#define	CAPIMSG_MSGID(CAPIMSG_MSGID35,871
#define CAPIMSG_CONTROLLER(CAPIMSG_CONTROLLER36,917
#define CAPIMSG_CONTROL(CAPIMSG_CONTROL37,961
#define CAPIMSG_NCCI(CAPIMSG_NCCI38,1029
#define CAPIMSG_DATA(CAPIMSG_DATA39,1073
#define CAPIMSG_DATALEN(CAPIMSG_DATALEN40,1141
#define	CAPIMSG_SETAPPID(CAPIMSG_SETAPPID42,1190
#define	CAPIMSG_SETDATA(CAPIMSG_SETDATA48,1347
typedef __u8 *_cstruct;_cstruct58,1643
} _cmstruct;_cmstruct63,1712
} _cmsg;_cmsg140,3334
static inline void capi_cmsg_answer(179,4391
static inline void capi_fill_CONNECT_B3_REQ(186,4550
static inline void capi_fill_FACILITY_REQ(194,4777
static inline void capi_fill_INFO_REQ(204,5137
static inline void capi_fill_LISTEN_REQ(220,5717
static inline void capi_fill_ALERT_REQ(236,6212
static inline void capi_fill_CONNECT_REQ(250,6714
static inline void capi_fill_DATA_B3_REQ(293,8095
static inline void capi_fill_DISCONNECT_REQ(308,8464
static inline void capi_fill_DISCONNECT_B3_REQ(323,8962
static inline void capi_fill_MANUFACTURER_REQ(332,9199
static inline void capi_fill_RESET_B3_REQ(347,9595
static inline void capi_fill_SELECT_B_PROTOCOL_REQ(356,9817
static inline void capi_fill_CONNECT_RESP(375,10407
static inline void capi_fill_CONNECT_ACTIVE_RESP(409,11534
static inline void capi_fill_CONNECT_B3_ACTIVE_RESP(416,11721
static inline void capi_fill_CONNECT_B3_RESP(423,11914
static inline void capi_fill_CONNECT_B3_T90_ACTIVE_RESP(433,12192
static inline void capi_fill_DATA_B3_RESP(440,12386
static inline void capi_fill_DISCONNECT_B3_RESP(449,12623
static inline void capi_fill_DISCONNECT_RESP(456,12808
static inline void capi_fill_FACILITY_RESP(463,12994
static inline void capi_fill_INFO_RESP(472,13252
static inline void capi_fill_MANUFACTURER_RESP(479,13433
static inline void capi_fill_RESET_B3_RESP(494,13835

drivers/isdn/avmb1/compat.h,79
#define __COMPAT_H__32,938
#define LinuxVersionCode(LinuxVersionCode38,1039

drivers/isdn/isdn_audio.c,1180
#define __NO_VERSION__58,1929
char *isdn_audio_revision 64,2052
static short isdn_audio_ulaw_to_s16[71,2162
static short isdn_audio_alaw_to_s16[108,4315
static char isdn_audio_alaw_to_ulaw[145,6459
static char isdn_audio_ulaw_to_alaw[182,8091
#define NCOEFF 218,9704
#define DTMF_TRESH 219,9785
#define SILENCE_TRESH 220,9866
#define H2_TRESH 221,9947
#define AMP_BITS 222,10028
#define LOGRP 223,10109
#define HIGRP 224,10137
} dtmf_t;dtmf_t230,10333
static int cos2pik[235,10424
static dtmf_t dtmf_tones[241,10575
static char dtmf_matrix[253,10923
isdn_audio_tlookup(263,11122
isdn_audio_tlookup(276,11417
isdn_audio_ulaw2alaw(284,11540
isdn_audio_alaw2ulaw(290,11668
#define ZEROTRAP 303,11955
#define BIAS 305,12045
#define CLIP 306,12125
isdn_audio_linear2ulaw(309,12166
static int Mx[356,13644
static int bitmask[363,13823
isdn_audio_get_bits(369,13915
isdn_audio_put_bits(382,14190
isdn_audio_adpcm_init(396,14502
isdn_audio_dtmf_init(411,14742
isdn_audio_adpcm2xlaw(428,14967
isdn_audio_2adpcm_flush(463,15640
isdn_audio_xlaw2adpcm(473,15811
isdn_audio_goertzel(525,16848
isdn_audio_eval_dtmf(560,17611
isdn_audio_calc_dtmf(638,19660

drivers/isdn/isdn_audio.h,192
#define DTMF_NPOINTS 39,1343
typedef struct adpcm_state adpcm_state40,1420
} adpcm_state;adpcm_state46,1500
typedef struct dtmf_state dtmf_state48,1516
} dtmf_state;dtmf_state52,1590

drivers/isdn/pcbit/callbacks.c,345
#define __NO_VERSION__14,295
ushort last_ref_num 38,698
void cb_out_1(45,753
void cb_out_2(87,1672
void cb_out_3(133,2823
void cb_in_1(150,3133
void cb_in_2(198,4237
void cb_in_3(224,4838
void cb_disc_1(250,5422
void cb_disc_2(279,6108
void cb_disc_3(303,6708
void cb_notdone(314,6970
void cb_selp_1(322,7108
void cb_open(344,7641

drivers/isdn/pcbit/drv.c,808
#define __NO_VERSION__22,421
extern ushort last_ref_num;47,829
static char* pcbit_devname[51,899
int pcbit_init_dev(76,1510
void pcbit_terminate(201,3875
int pcbit_command(223,4291
static void pcbit_block_timer(303,6020
int pcbit_xmit(332,6563
int pcbit_writecmd(392,7738
void pcbit_l3_receive(485,9346
static char statbuf[742,15443
static int stat_st 743,15477
static int stat_end 744,15501
memcpy_to_COND(748,15549
int pcbit_stat(756,15678
static void pcbit_logstat(802,16584
extern char * isdn_state_table[821,16964
void pcbit_state_change(825,17044
static void set_running_timeout(842,17424
static int set_protocol_running(854,17651
static int pcbit_ioctl(917,18985
static void pcbit_clear_msn(1034,21473
static void pcbit_set_msn(1048,21672
static int pcbit_check_msn(1114,22811

drivers/isdn/pcbit/callbacks.h,27
#define CALLBACKS_H16,317

drivers/isdn/pcbit/module.c,219
static int mem[25,499
static int irq[26,540
static int num_boards;28,582
struct pcbit_dev * dev_pcbit[29,605
#define pcbit_init 40,957
int pcbit_init(43,996
void cleanup_module(94,1910
void pcbit_setup(105,2089

drivers/isdn/pcbit/capi.c,698
#define __NO_VERSION__31,812
int capi_conn_req(61,1239
int capi_conn_resp(141,3560
int capi_conn_active_req(158,3963
int capi_conn_active_resp(186,4796
int capi_select_proto_req(204,5129
int capi_activate_transp_req(270,6721
int capi_tdata_req(292,7282
int capi_tdata_resp(321,7827
int capi_disc_req(338,8215
int capi_disc_resp(362,8827
int capi_decode_conn_ind(381,9141
int capi_decode_conn_conf(491,11600
int capi_decode_conn_actv_ind(526,12474
int capi_decode_conn_actv_conf(564,13279
int capi_decode_sel_proto_conf(578,13576
int capi_decode_actv_trans_conf(591,13852
int capi_decode_disc_ind(606,14219
int capi_decode_disc_conf(629,14642
int capi_decode_debug_188(640,14866

drivers/isdn/pcbit/capi.h,159
#define CAPI_H15,330
#define REQ_CAUSE 18,347
#define REQ_DISPLAY 19,378
#define REQ_USER_TO_USER 20,409
#define AppInfoMask 22,442
capi_channel(70,2276

drivers/isdn/pcbit/edss1.c,443
#define __NO_VERSION__20,442
extern struct pcbit_dev * dev_pcbit[49,1046
char * isdn_state_table[51,1101
struct CauseValue CauseValue84,1735
} cvlist[87,1781
static struct isdn_event_desc isdn_event_desc159,4861
} isdn_event_table 162,4929
char * strisdnevent(182,5785
static struct fsm_timer_entry fsm_timers[197,6013
static struct fsm_entry fsm_table[207,6206
static void pcbit_fsm_timer(260,7993
void pcbit_fsm_event(281,8454

drivers/isdn/pcbit/layer2.c,421
#define __NO_VERSION__24,523
#define INCLUDE_INLINE_FUNCS28,562
pcbit_sched_delivery(89,1661
pcbit_l2_write(101,1815
pcbit_tx_update(149,2795
pcbit_transmit(169,3117
pcbit_deliver(312,5731
pcbit_receive(353,6435
pcbit_fake_conf(512,9743
pcbit_firmware_bug(527,10000
pcbit_irq_handler(544,10255
pcbit_l2_active_conf(605,11505
pcbit_l2_err_recover(631,11965
pcbit_l2_error(684,13092
pcbit_recv_ack(712,13673

drivers/isdn/pcbit/edss1.h,1322
#define EDSS1_H15,314
#define ST_NULL 19,350
#define ST_CALL_INIT 20,373
#define ST_OVER_SEND 21,420
#define ST_CALL_PROC 22,496
#define ST_CALL_DELV 23,544
#define ST_CALL_PRES 24,567
#define ST_CALL_RECV 25,632
#define ST_CONN_REQ 26,678
#define ST_INCM_PROC 27,741
#define ST_ACTIVE 28,764
#define ST_DISC_REQ 29,788
#define ST_DISC_IND 30,812
#define ST_SUSP_REQ 31,836
#define ST_RESM_REQ 32,860
#define ST_RELS_REQ 33,884
#define ST_OVER_RECV 34,908
#define ST_ACTIVE_SELP 36,933
#define ST_ACTIVE_ACTV 37,994
#define MAX_STATE 39,1056
#define EV_NULL 41,1090
#define EV_USR_SETUP_REQ 42,1122
#define EV_USR_SETUP_RESP 43,1154
#define EV_USR_PROCED_REQ 44,1186
#define EV_USR_RELEASE_REQ 45,1218
#define EV_USR_REJECT_REQ 46,1250
#define EV_NET_SETUP 48,1283
#define EV_NET_CALL_PROC 49,1316
#define EV_NET_SETUP_ACK 50,1349
#define EV_NET_CONN 51,1382
#define EV_NET_CONN_ACK 52,1415
#define EV_NET_SELP_RESP 54,1449
#define EV_NET_ACTV_RESP 55,1482
#define EV_NET_DISC 57,1516
#define EV_NET_RELEASE 58,1549
#define EV_NET_RELEASE_COMP 59,1582
#define EV_TIMER 61,1616
#define EV_ERROR 62,1649
#define CAUSE_NORMAL 69,1734
#define CAUSE_NOCHAN 70,1771
struct callb_data callb_data72,1808
struct fsm_entry fsm_entry83,1966
struct fsm_timer_entry fsm_timer_entry90,2134

drivers/isdn/pcbit/layer2.h,1988
#define LAYER2_H15,330
#define BANK1 19,376
#define BANK2 20,416
#define BANK3 21,456
#define BANK4 22,494
#define BANKLEN 24,530
#define LOAD_ZONE_START 26,555
#define LOAD_ZONE_END 27,587
#define LOAD_RETRY 29,620
#define PREHDR_LEN 34,686
#define FRAME_HDR_LEN 36,743
#define MSG_CONN_REQ	38,772
#define MSG_CONN_CONF	39,805
#define MSG_CONN_IND	40,839
#define MSG_CONN_RESP	41,872
#define MSG_CONN_ACTV_REQ	43,907
#define MSG_CONN_ACTV_CONF	44,944
#define MSG_CONN_ACTV_IND	45,982
#define MSG_CONN_ACTV_RESP	46,1019
#define MSG_DISC_REQ	48,1058
#define MSG_DISC_CONF	49,1091
#define MSG_DISC_IND	50,1125
#define MSG_DISC_RESP	51,1158
#define MSG_TDATA_REQ	53,1193
#define MSG_TDATA_CONF	54,1227
#define MSG_TDATA_IND	55,1262
#define MSG_TDATA_RESP	56,1296
#define MSG_SELP_REQ	58,1332
#define MSG_SELP_CONF	59,1365
#define MSG_ACT_TRANSP_REQ 61,1400
#define MSG_ACT_TRANSP_CONF 62,1443
#define MSG_STPROT_REQ	64,1487
#define MSG_STPROT_CONF	65,1522
#define MSG_PING188_REQ	67,1559
#define MSG_PING188_CONF 68,1595
#define MSG_WATCH188	70,1639
#define MSG_API_ON 72,1680
#define MSG_POOL_PCBIT 73,1723
#define MSG_POOL_PCBIT_CONF 74,1766
#define MSG_INFO_IND 76,1810
#define MSG_INFO_RESP 77,1853
#define MSG_DEBUG_188 79,1897
struct msg_fmt msg_fmt87,1986
#define MAX_QUEUED 103,2216
#define SCHED_READ 105,2238
#define SCHED_WRITE 106,2265
#define SET_RUN_TIMEOUT 108,2293
struct frame_buf frame_buf111,2345
#define MIN(MIN121,2567
extern struct pcbit_dev * dev_pcbit[128,2824
static __inline__ void log_state(131,2892
static __inline__ struct pcbit_dev * chan2dev(141,3291
static __inline__ struct pcbit_dev * finddev(155,3630
static __inline__ void pcbit_writeb(172,3908
static __inline__ void pcbit_writew(179,4100
static __inline__ void memcpy_topcbit(201,4594
static __inline__ unsigned char pcbit_readb(224,5094
static __inline__ unsigned short pcbit_readw(235,5327
static __inline__ void memcpy_frompcbit(259,5840

drivers/isdn/pcbit/pcbit.h,1424
#define PCBIT_H15,323
#define MAX_PCBIT_CARDS 17,340
#define BLOCK_TIMER20,368
struct pcbit_chan pcbit_chan24,408
struct msn_entry msn_entry40,946
struct pcbit_dev pcbit_dev45,1007
#define STATS_TIMER 100,2000
#define ERRTIME 101,2028
#define MAXBUFSIZE 104,2067
#define MRU 105,2092
#define STATBUF_LEN 107,2118
struct pcbit_ioctl pcbit_ioctl116,2231
#define PCBIT_IOCTL_GETSTAT 128,2369
#define PCBIT_IOCTL_LWMODE 129,2426
#define PCBIT_IOCTL_STRLOAD 130,2487
#define PCBIT_IOCTL_ENDLOAD 131,2546
#define PCBIT_IOCTL_SETBYTE 132,2603
#define PCBIT_IOCTL_GETBYTE 133,2655
#define PCBIT_IOCTL_RUNNING 134,2707
#define PCBIT_IOCTL_WATCH188 135,2771
#define PCBIT_IOCTL_PING188 136,2828
#define PCBIT_IOCTL_FWMODE 137,2880
#define PCBIT_IOCTL_STOP 138,2943
#define PCBIT_IOCTL_APION 139,3000
#define PCBIT_GETSTAT 143,3078
#define PCBIT_LWMODE 144,3137
#define PCBIT_STRLOAD 145,3196
#define PCBIT_ENDLOAD 146,3255
#define PCBIT_SETBYTE 147,3314
#define PCBIT_GETBYTE 148,3373
#define PCBIT_RUNNING 149,3432
#define PCBIT_WATCH188 150,3491
#define PCBIT_PING188 151,3550
#define PCBIT_FWMODE 152,3609
#define PCBIT_STOP 153,3668
#define PCBIT_APION 154,3727
#define MAXSUPERLINE 156,3787
#define L2_DOWN 160,3822
#define L2_LOADING 161,3844
#define L2_LWMODE 162,3866
#define L2_FWMODE 163,3888
#define L2_STARTING 164,3910
#define L2_RUNNING 165,3932
#define L2_ERROR 166,3954

drivers/isdn/hisax/avm_a1.c,730
#define __NO_VERSION__53,1215
extern const char *CardType[59,1314
const char *avm_revision 60,1345
#define	 AVM_A1_STAT_ISAC	62,1393
#define	 AVM_A1_STAT_HSCX	63,1424
#define	 AVM_A1_STAT_TIMER	64,1455
#define byteout(byteout66,1488
#define bytein(bytein67,1529
readreg(70,1582
writereg(76,1673
read_fifo(83,1777
write_fifo(89,1871
ReadISAC(97,1996
WriteISAC(103,2107
ReadISACfifo(109,2232
WriteISACfifo(115,2358
ReadHSCX(121,2488
WriteHSCX(127,2615
#define READHSCX(READHSCX136,2791
#define WRITEHSCX(WRITEHSCX137,2855
#define READHSCXFIFO(READHSCXFIFO138,2933
#define WRITEHSCXFIFO(WRITEHSCXFIFO139,3017
avm_a1_interrupt(144,3139
release_ioregs(190,4303
AVM_card_msg(208,4776
__initfunc(231,5232

drivers/isdn/hisax/isdnl1.c,2298
const char *l1_revision 82,2097
#define __NO_VERSION__84,2145
#define kstat_irqs(kstat_irqs90,2313
#define HISAX_STATUS_BUFSIZE 155,3482
#define ISDN_CTRL_DEBUG 156,3516
#define INCLUDE_INLINE_FUNCS157,3542
const char *CardType[160,3626
extern struct IsdnCard cards[169,4054
extern int nrcards;170,4086
extern char *HiSax_id;171,4106
extern struct IsdnBuffers *tracebuf;172,4129
#define TIMER3_VALUE 174,4167
struct Fsm l1fsm 177,4198
	ST_L1_F2,181,4251
	ST_L1_F3,182,4262
	ST_L1_F4,183,4273
	ST_L1_F5,184,4284
	ST_L1_F6,185,4295
	ST_L1_F7,186,4306
	ST_L1_F8,187,4317
#define L1_STATE_COUNT 190,4332
static char *strL1State[192,4369
	EV_PH_ACTIVATE,204,4501
	EV_RESET_IND,205,4518
	EV_DEACT_CNF,206,4533
	EV_DEACT_IND,207,4548
	EV_POWER_UP,208,4563
	EV_RSYNC_IND,209,4577
	EV_INFO2_IND,210,4593
	EV_INFO4_IND,211,4608
	EV_TIMER_DEACT,212,4623
	EV_TIMER_ACT,213,4640
	EV_TIMER3,214,4655
#define L1_EVENT_COUNT 217,4671
static char *strL1Event[219,4711
*hisax_findcard(238,5008
HiSax_readstatus(250,5186
HiSax_putstatus(275,5740
#define KDEBUG_DEF307,6365
static int DbgLineNr=310,6408
HiSax_putstatus(313,6453
ll_run(325,6652
ll_stop(340,6869
ll_unload(351,7042
debugl1(367,7346
l1m_debug(377,7543
L1activated(385,7659
L1deactivated(400,7935
DChannel_proc_xmt(415,8238
DChannel_proc_rcv(432,8539
BChannel_proc_xmt(504,10436
BChannel_proc_rcv(519,10830
BChannel_bh(529,11004
HiSax_addlist(540,11226
HiSax_rmlist(548,11344
init_bcstate(568,11646
closecard(585,11979
HISAX_INITFUNC(622,12704
HISAX_INITFUNC(666,13771
HISAX_INITFUNC(895,18935
HISAX_INITFUNC(904,19078
HiSax_closehardware(951,19911
HiSax_reportcard(975,20302
l2cmd(1024,21882
static char tmp[1055,22304
l2frames(1058,22333
Logl2Frame(1088,22852
l1_reset(1107,23265
l1_deact_cnf(1113,23364
l1_deact_req(1124,23635
l1_power_up(1137,23971
l1_go_F5(1153,24434
l1_go_F8(1159,24533
l1_info2_ind(1165,24632
l1_info4_ind(1175,24852
l1_timer3(1193,25417
l1_timer_act(1206,25794
l1_timer_deact(1217,26071
l1_activate(1229,26392
static struct FsmNode L1FnList[1237,26584
static struct FsmNode L1FnList[] HISAX_INITDATA 1237,26584
#define L1_FN_COUNT 1283,28319
HISAX_INITFUNC(1285,28382
void Isdnl1Free(1294,28598
dch_manl1(1300,28655
setstack_HiSax(1368,30285

drivers/isdn/hisax/niccy.c,975
#define __NO_VERSION__19,371
extern const char *CardType[27,519
const char *niccy_revision 28,550
#define byteout(byteout30,600
#define bytein(bytein31,641
#define ISAC_PCI_DATA	33,673
#define HSCX_PCI_DATA	34,697
#define ISAC_PCI_ADDR	35,721
#define HSCX_PCI_ADDR	36,745
#define ISAC_PNP	37,769
#define HSCX_PNP	38,788
#define NICCY_PNP	41,824
#define NICCY_PCI	42,844
#define PCI_VENDOR_DR_NEUHAUS	45,881
#define PCI_NICCY_ID	46,918
readreg(49,969
readfifo(63,1191
writereg(73,1400
writefifo(85,1600
ReadISAC(95,1832
WriteISAC(101,1968
ReadISACfifo(107,2118
WriteISACfifo(113,2267
ReadHSCX(119,2420
WriteHSCX(126,2589
#define READHSCX(READHSCX132,2760
#define WRITEHSCX(WRITEHSCX134,2867
#define READHSCXFIFO(READHSCXFIFO137,2989
#define WRITEHSCXFIFO(WRITEHSCXFIFO140,3111
niccy_interrupt(146,3270
release_io_niccy(192,4617
niccy_reset(203,4842
niccy_card_msg(209,4925
static 	int pci_index __initdata 233,5398
__initfunc(235,5437

drivers/isdn/hisax/callc.c,4622
#define __NO_VERSION__61,1637
#define MOD_USE_COUNT 65,1694
const char *lli_revision 68,1774
extern struct IsdnCard cards[70,1823
extern int nrcards;71,1855
static struct Fsm callcfsm 78,2071
static struct Fsm lcfsm 80,2126
static int chancount 83,2179
#define ALERT_REJECT 86,2282
#define DEFAULT_B_DELAY	97,2785
#define  FLG_START_D	101,2862
#define  FLG_ESTAB_D	102,2885
#define  FLG_CALL_SEND	103,2908
#define  FLG_CALL_REC 104,2933
#define  FLG_CALL_ALERT	105,2959
#define  FLG_START_B	106,2985
#define  FLG_CONNECT_B	107,3008
#define  FLG_LL_DCONN	108,3033
#define  FLG_LL_BCONN	109,3057
#define  FLG_DISC_SEND	110,3081
#define  FLG_DISC_REC	111,3106
#define  FLG_REL_REC	112,3131
#define  FLG_DO_ALERT	113,3155
#define  FLG_DO_HANGUP	114,3180
#define  FLG_DO_CONNECT	115,3206
#define  FLG_DO_ESTAB	116,3233
#define	DREL_TIMER_VALUE 121,3345
hisax_findcard(128,3454
link_debug(140,3659
	ST_NULL,152,3907
	ST_OUT_WAIT_D,153,3936
	ST_IN_WAIT_D,154,4005
	ST_OUT_DIAL,155,4073
	ST_IN_WAIT_LL,156,4136
	ST_IN_ALERT_SEND,157,4206
	ST_IN_WAIT_CONN_ACK,158,4269
	ST_WAIT_BCONN,159,4341
	ST_ACTIVE,160,4426
	ST_WAIT_BRELEASE,161,4484
	ST_WAIT_BREL_DISC,162,4567
	ST_WAIT_DCOMMAND,163,4645
	ST_WAIT_DRELEASE,164,4723
	ST_WAIT_D_REL_CNF,165,4785
	ST_WAIT_DSHUTDOWN,166,4853
#define STATE_COUNT 169,4915
static char *strState[171,4959
	EV_DIAL,191,5285
	EV_SETUP_CNF,192,5305
	EV_ACCEPTB,193,5330
	EV_DISCONNECT_IND,194,5353
	EV_RELEASE_CNF,195,5382
	EV_DLEST,196,5409
	EV_DLRL,197,5430
	EV_SETUP_IND,198,5450
	EV_RELEASE_IND,199,5475
	EV_ACCEPTD,200,5502
	EV_SETUP_CMPL_IND,201,5525
	EV_BC_EST,202,5554
	EV_WRITEBUF,203,5576
	EV_ESTABLISH,204,5600
	EV_HANGUP,205,5625
	EV_BC_REL,206,5647
	EV_CINF,207,5669
	EV_SUSPEND,208,5689
	EV_RESUME,209,5712
	EV_SHUTDOWN_D,210,5734
	EV_NOSETUP_RSP,211,5760
	EV_SETUP_ERR,212,5787
	EV_CONNECT_ERR,213,5812
	EV_RELEASE_ERR,214,5839
#define EVENT_COUNT 217,5870
static char *strEvent[219,5911
	ST_LC_NULL,248,6341
	ST_LC_ACTIVATE_WAIT,249,6354
	ST_LC_DELAY,250,6376
	ST_LC_ESTABLISH_WAIT,251,6390
	ST_LC_CONNECTED,252,6413
	ST_LC_FLUSH_WAIT,253,6431
	ST_LC_RELEASE_WAIT,254,6450
#define LC_STATE_COUNT 257,6475
static char *strLcState[259,6522
	EV_LC_ESTABLISH,271,6707
	EV_LC_PH_ACTIVATE,272,6725
	EV_LC_PH_DEACTIVATE,273,6745
	EV_LC_DL_ESTABLISH,274,6767
	EV_LC_TIMER,275,6788
	EV_LC_DL_RELEASE,276,6802
	EV_LC_RELEASE,277,6821
#define LC_EVENT_COUNT 280,6841
static char *strLcEvent[282,6883
#define LC_D 293,7061
#define LC_B 294,7077
lli_deliver_cause(297,7113
lli_d_established(316,7601
lli_d_released(354,8701
lli_prep_dialout(365,8883
lli_do_dialout(400,9787
lli_init_bchan_out(416,10241
lli_go_active(435,10758
lli_start_dchan(456,11307
lli_deliver_call(477,11927
lli_establish_d(548,14331
lli_do_action(562,14725
lli_send_dconnect(601,16341
lli_init_bchan_in(610,16564
lli_cancel_call(646,17496
lli_shutdown_d(668,18160
lli_timeout_d(692,18737
lli_go_null(716,19405
lli_disconn_bchan(727,19671
lli_send_d_disc(738,19953
lli_released_bchan(782,21316
lli_release_bchan(803,21823
lli_received_d_rel(815,22154
lli_received_d_relcnf(857,23515
lli_received_d_disc(898,24832
lli_charge_info(935,25988
lli_no_dchan(950,26316
lli_no_dchan_ready(967,26721
lli_no_dchan_in(981,27029
lli_no_setup_rsp(999,27494
lli_setup_err(1016,27914
lli_connect_err(1035,28429
lli_got_dlrl(1054,28946
static struct FsmNode fnlist[1111,30646
static struct FsmNode fnlist[] HISAX_INITDATA 1111,30646
#define FNCOUNT 1203,35123
lc_activate_l1(1206,35192
lc_activated_from_l1(1218,35558
lc_l1_activated(1231,35819
lc_start_l2(1246,36235
lc_connected(1263,36629
lc_release_l2(1273,36845
lc_l2_released(1288,37202
lc_release_l1(1301,37538
lc_l1_deactivated(1312,37800
static struct FsmNode LcFnList[1321,38020
static struct FsmNode LcFnList[] HISAX_INITDATA 1321,38020
#define LC_FN_COUNT 1350,39380
HISAX_INITFUNC(1352,39443
CallcFree(1369,39837
release_b_st(1376,39909
dc_l1man(1396,40366
dc_l2man(1413,40737
bc_l1man(1428,41062
bc_l2man(1444,41425
*selectfreechannel(1459,41753
is_activ(1479,42069
ll_handler(1499,42386
init_d_st(1575,44193
callc_debug(1609,45091
lc_debug(1620,45332
dlc_debug(1631,45565
lccall_d(1642,45799
lccall_b(1670,46272
init_chan(1685,46535
CallcNewChan(1746,48442
release_d_st(1761,48808
CallcFreeChan(1775,49030
lldata_handler(1811,50173
lltrans_handler(1832,50612
ll_writewakeup(1860,51328
init_b_st(1873,51585
channel_report(1939,53429
distr_debug(1944,53484
HiSax_command(1966,54178
HiSax_writebuf_skb(2165,59989

drivers/isdn/hisax/rawhdlc.c,474
__u16 fcstab[142,5856
#define HDLC_ZERO_SEARCH 178,7961
#define HDLC_FLAG_SEARCH 179,7988
#define HDLC_FLAG_FOUND 180,8015
#define HDLC_FRAME_FOUND 181,8042
#define HDLC_NULL 182,8069
#define HDLC_PART 183,8089
#define HDLC_FULL 184,8109
#define HDLC_FLAG_VALUE	186,8130
#define MAKE_RAW_BYTE 189,8161
int make_raw_hdlc_data(240,9963
void init_hdlc_state(290,10858
int read_raw_hdlc_data(304,11198
char buffer[513,15846
char obuffer[514,15865
main(516,15886

drivers/isdn/hisax/config.c,2507
#define DEFAULT_CARD 98,2842
#define DEFAULT_CFG 99,2879
#define DEFAULT_CARD 108,3081
#define DEFAULT_CFG 109,3116
#define DEFAULT_CARD 114,3222
#define DEFAULT_CFG 115,3259
#define DEFAULT_CARD 120,3365
#define DEFAULT_CFG 121,3402
#define DEFAULT_CARD 127,3521
#define DEFAULT_CFG 128,3564
#define DEFAULT_CARD 134,3675
#define DEFAULT_CFG 135,3717
#define DEFAULT_CARD 141,3824
#define DEFAULT_CFG 142,3864
#define DEFAULT_CARD 148,3973
#define DEFAULT_CFG 149,4013
#define DEFAULT_CARD 155,4124
#define DEFAULT_CFG 156,4166
#define DEFAULT_CARD 164,4356
#define DEFAULT_CFG 165,4398
#define DEFAULT_CARD 171,4503
#define DEFAULT_CFG 172,4539
#define DEFAULT_CARD 178,4648
#define DEFAULT_CFG 179,4687
#define DEFAULT_CARD 185,4792
#define DEFAULT_CFG 186,4832
#define DEFAULT_CARD 192,4941
#define DEFAULT_CFG 193,4981
#define DEFAULT_CARD 199,5088
#define DEFAULT_CFG 200,5125
#define DEFAULT_CARD 206,5230
#define DEFAULT_CFG 207,5268
#define DEFAULT_PROTO 211,5333
#define DEFAULT_PROTO_NAME 212,5371
#define DEFAULT_PROTO 216,5458
#define DEFAULT_PROTO_NAME 218,5522
#define DEFAULT_PROTO 222,5608
#define DEFAULT_PROTO_NAME 224,5671
#define DEFAULT_PROTO 227,5733
#define DEFAULT_PROTO_NAME 228,5774
#define FIRST_CARD 234,5883
#define EMPTY_CARD	241,5973
struct IsdnCard cards[243,6032
static char HiSaxID[263,6272
static char HiSaxID[96] HISAX_INITDATA 263,6272
char *HiSax_id HISAX_INITDATA 267,6524
static int type[270,6606
static int type[] HISAX_INITDATA 270,6606
static int protocol[272,6691
static int protocol[] HISAX_INITDATA 272,6691
static int io[274,6780
static int io[] HISAX_INITDATA 274,6780
#define IO0_IO1278,6903
#define IO0_IO1282,6967
static int io0[285,7005
static int io0[] HISAX_INITDATA 285,7005
static int io1[287,7089
static int io1[] HISAX_INITDATA 287,7089
static int irq[290,7180
static int irq[] HISAX_INITDATA 290,7180
static int mem[292,7264
static int mem[] HISAX_INITDATA 292,7264
static char *id HISAX_INITDATA 294,7348
int nrcards;310,7701
extern char *l1_revision;312,7715
extern char *l2_revision;313,7741
extern char *l3_revision;314,7767
extern char *lli_revision;315,7793
extern char *tei_revision;316,7820
HISAX_INITFUNC(318,7848
HISAX_INITFUNC(333,8057
HiSax_mod_dec_use_count(356,8667
HiSax_mod_inc_use_count(362,8727
#define HiSax_init 368,8796
__initfunc(370,8833
__initfunc(416,9451
cleanup_module(540,12197
int elsa_init_pcmcia(547,12317
int sedl_init_pcmcia(594,13339

drivers/isdn/hisax/elsa.c,2694
#define __NO_VERSION__45,1039
extern const char *CardType[56,1251
const char *Elsa_revision 58,1283
const char *Elsa_Types[59,1331
const char *ITACVer[63,1460
#define byteout(byteout67,1543
#define bytein(bytein68,1584
#define ELSA_ISAC	70,1616
#define ELSA_ISAC_PCM	71,1636
#define ELSA_ITAC	72,1660
#define ELSA_HSCX	73,1680
#define ELSA_ALE	74,1700
#define ELSA_ALE_PCM	75,1719
#define ELSA_CONTROL	76,1742
#define ELSA_CONFIG	77,1765
#define ELSA_START_TIMER 78,1787
#define ELSA_TRIG_IRQ	79,1814
#define ELSA_PC 81,1839
#define ELSA_PCC8 82,1862
#define ELSA_PCC16 83,1885
#define ELSA_PCF 84,1908
#define ELSA_PCFPRO 85,1931
#define ELSA_PCMCIA 86,1954
#define ELSA_QS1000 87,1977
#define ELSA_QS3000 88,2000
#define ELSA_QS1000PCI 89,2023
#define PCI_VENDOR_ELSA	92,2065
#define PCI_QS1000_ID	93,2096
#define ITAC_SYS	97,2175
#define ITAC_ISEN	98,2197
#define ITAC_RFIE	99,2220
#define ITAC_XFIE	100,2243
#define ITAC_SCIE	101,2266
#define ITAC_STIE	102,2289
#define ELSA_TIMER_RUN 110,2648
#define ELSA_TIMER_RUN_PCC8 111,2713
#define ELSA_IRQ_IDX 112,2783
#define ELSA_IRQ_IDX_PCC8 113,2846
#define ELSA_IRQ_IDX_PC 114,2907
#define ELSA_LINE_LED 117,3000
#define ELSA_STAT_LED 118,3056
#define ELSA_ISDN_RESET 119,3113
#define ELSA_ENA_TIMER_INT 120,3173
#define ELSA_HW_RELEASE 123,3271
#define ELSA_S0_POWER_BAD 124,3336
#define ELSA_TIMER_AKTIV 127,3424
#define ELSA_BAD_PWR 128,3451
#define ELSA_ASSIGN 129,3478
readreg(132,3527
readfifo(146,3749
writereg(156,3958
writefifo(168,4158
ReadISAC(178,4390
WriteISAC(184,4519
ReadISACfifo(190,4662
WriteISACfifo(196,4804
ReadISAC_IPAC(202,4950
WriteISAC_IPAC(208,5089
ReadISACfifo_IPAC(214,5242
WriteISACfifo_IPAC(220,5392
ReadHSCX(226,5546
WriteHSCX(233,5708
readitac(240,5893
writeitac(254,6131
TimerRun(266,6346
#define READHSCX(READHSCX281,6687
#define WRITEHSCX(WRITEHSCX283,6787
#define READHSCXFIFO(READHSCXFIFO286,6902
#define WRITEHSCXFIFO(WRITEHSCXFIFO289,7017
elsa_interrupt(295,7169
elsa_interrupt_ipac(349,8695
release_io_elsa(405,10111
reset_elsa(426,10626
const u_char ARCOFI_VERSION[464,11810
const u_char ARCOFI_COP_5[465,11854
const u_char ARCOFI_COP_6[466,11919
const u_char ARCOFI_COP_7[467,11992
const u_char ARCOFI_COP_8[468,12056
const u_char ARCOFI_COP_9[469,12150
const u_char ARCOFI_XOP_0[470,12245
const u_char ARCOFI_XOP_1[471,12305
const u_char ARCOFI_XOP_F[472,12365
const u_char ARCOFI_SOP_F[473,12425
init_arcofi(476,12525
check_arcofi(487,12804
elsa_led_handler(581,15263
Elsa_card_msg(614,16093
probe_elsa_adr(718,18743
probe_elsa(768,20065
static 	int pci_index __initdata 781,20325
setup_elsa(784,20368

drivers/isdn/hisax/fsm.c,280
#define __NO_VERSION__33,791
#define FSM_TIMER_DEBUG 36,834
HISAX_INITFUNC(38,861
FsmFree(59,1511
FsmEvent(65,1579
FsmChangeState(97,2383
FsmExpireTimer(110,2602
FsmInitTimer(123,2839
FsmDelTimer(139,3159
FsmAddTimer(152,3392
FsmRestartTimer(178,3978
jiftime(200,4441

drivers/isdn/hisax/hisax.h,8505
#define PH_ACTIVATE_REQ	76,1815
#define PH_ACTIVATE_CNF	77,1846
#define PH_ACTIVATE_IND	78,1877
#define PH_DEACTIVATE_REQ 79,1908
#define PH_DEACTIVATE_CNF 80,1941
#define PH_DEACTIVATE_IND 81,1974
#define PH_DEACT_REQ	82,2007
#define PH_DEACT_CNF	83,2035
#define PH_DEACT_IND	84,2063
#define PH_DEACT_ACK	85,2091
#define PH_TESTLOOP_REQ	86,2119
#define PH_PAUSE_CNF	87,2150
#define PH_PAUSE_IND	88,2178
#define PH_PULL_REQ	89,2206
#define PH_PULL_CNF	90,2233
#define	PH_PULL_IND	91,2260
#define PH_DATA_REQ	92,2287
#define PH_DATA_IND	93,2314
#define PH_INFO3_REQ	95,2342
#define PH_INFO2_IND	96,2370
#define PH_ENABLE_REQ	97,2398
#define PH_RSYNC_IND	98,2427
#define PH_RESET_REQ	99,2455
#define PH_RESET_IND	100,2483
#define PH_POWERUP_CNF	101,2511
#define PH_ACTIV_REQ	102,2541
#define PH_I4_P8_IND	103,2569
#define PH_I4_P10_IND	104,2597
#define MDL_ASSIGN_REQ	106,2627
#define MDL_ASSIGN_IND	107,2657
#define MDL_REMOVE_REQ	108,2687
#define MDL_ERROR_REQ	109,2717
#define MDL_ERROR_IND	110,2746
#define CARD_AUX_IND	111,2775
#define DL_UNIT_DATA	113,2804
#define CC_ESTABLISH	114,2827
#define DL_ESTABLISH	115,2850
#define DL_DATA	116,2873
#define CC_CONNECT	118,2893
#define DL_RELEASE	119,2915
#define DL_FLUSH	120,2937
#define CC_REJECT	122,2958
#define CC_SETUP_REQ	124,2980
#define CC_SETUP_CNF	125,3004
#define CC_SETUP_IND	126,3028
#define CC_SETUP_RSP	127,3052
#define CC_SETUP_COMPLETE_IND	128,3076
#define CC_DISCONNECT_REQ	130,3110
#define CC_DISCONNECT_IND	131,3139
#define CC_RELEASE_CNF	133,3169
#define CC_RELEASE_IND	134,3195
#define CC_RELEASE_REQ	135,3221
#define CC_REJECT_REQ	137,3248
#define CC_PROCEEDING_IND	139,3274
#define CC_DLRL	141,3304
#define CC_DLEST	142,3324
#define CC_ALERTING_REQ	144,3345
#define CC_ALERTING_IND	145,3372
#define DL_STOP	147,3400
#define DL_START	148,3420
#define MDL_INFO_SETUP	150,3441
#define MDL_INFO_CONN	151,3467
#define MDL_INFO_REL	152,3492
#define MDL_NOTEIPROC	153,3516
#define LC_ESTABLISH	155,3542
#define LC_RELEASE	156,3566
#define CC_INFO_CHARGE	158,3589
#define CC_MORE_INFO	160,3616
#define CC_IGNORE	161,3640
#define CC_RESTART	162,3661
#define CC_T303	165,3685
#define CC_T304	166,3705
#define CC_T305	167,3725
#define CC_T308_1	168,3745
#define CC_T308_2	169,3766
#define CC_T310	170,3787
#define CC_T313	171,3807
#define CC_T318	172,3827
#define CC_T319	173,3847
#define CC_NOSETUP_RSP_ERR	175,3868
#define CC_SETUP_ERR	176,3898
#define CC_CONNECT_ERR	177,3923
#define CC_RELEASE_ERR	178,3950
#define CARD_RESET	180,3978
#define CARD_SETIRQ	181,4004
#define CARD_INIT	182,4031
#define CARD_RELEASE	183,4056
#define CARD_TEST	184,4084
#define MAX_DFRAME_LEN	188,4129
#define HSCX_BUFMAX	189,4156
#define MAX_DATA_SIZE	190,4181
#define MAX_DATA_MEM	191,4221
#define RAW_BUFMAX	192,4261
#define MAX_HEADER_LEN	193,4306
#define MAX_WINDOW	194,4331
#define MAX_MON_FRAME	195,4352
#define I4L_IRQ_FLAG 198,4418
struct Fsm Fsm204,4469
struct FsmInst FsmInst210,4565
struct FsmNode FsmNode219,4707
struct FsmTimer FsmTimer224,4797
struct L3Timer L3Timer231,4887
#define FLG_L1_ACTIVATING	237,4967
#define FLG_L1_ACTIVATED	238,4995
#define FLG_L1_DEACTTIMER	239,5022
#define FLG_L1_ACTTIMER	240,5050
#define FLG_L1_T3RUN	241,5077
#define FLG_L1_PULL_REQ	242,5101
struct Layer1 Layer1244,5129
#define GROUP_TEI	257,5426
#define TEI_SAPI	258,5448
#define CTRL_SAPI	259,5468
#define PACKET_NOACK	260,5488
#define FLG_LAPB	264,5534
#define FLG_LAPD	265,5553
#define FLG_ORIG	266,5572
#define FLG_MOD128	267,5591
#define FLG_PEND_REL	268,5612
#define FLG_L3_INIT	269,5635
#define FLG_T200_RUN	270,5658
#define FLG_ACK_PEND	271,5682
#define FLG_REJEXC	272,5705
#define FLG_OWN_BUSY	273,5726
#define FLG_PEER_BUSY	274,5749
#define FLG_DCHAN_BUSY	275,5774
struct Layer2 Layer2277,5801
struct Layer3 Layer3301,6331
struct LLInterface LLInterface310,6524
struct Management Management318,6707
struct Param Param329,6952
struct PStack PStack341,7181
struct l3_process l3_process351,7365
struct hscx_hw hscx_hw363,7550
struct hfcB_hw hfcB_hw370,7751
struct tiger_hw tiger_hw377,7868
struct foreign_hw foreign_hw400,8229
#define BC_FLG_INIT	413,8513
#define BC_FLG_ACTIV	414,8535
#define BC_FLG_BUSY	415,8558
#define BC_FLG_NOFRAME	416,8580
#define BC_FLG_HALF	417,8605
#define BC_FLG_EMPTY	418,8627
#define L1_MODE_NULL	420,8651
#define L1_MODE_TRANS	421,8674
#define L1_MODE_HDLC	422,8698
struct BCState BCState424,8722
struct LcFsm LcFsm445,9237
struct Channel Channel458,9471
struct elsa_hw elsa_hw477,9925
struct teles3_hw teles3_hw493,10212
struct teles0_hw teles0_hw501,10353
struct avm_hw avm_hw506,10423
struct ix1_hw ix1_hw515,10584
struct diva_hw diva_hw523,10715
struct asus_hw asus_hw535,10931
struct hfc_hw hfc_hw545,11073
struct sedl_hw sedl_hw555,11244
struct spt_hw spt_hw564,11396
struct mic_hw mic_hw571,11507
struct njet_hw njet_hw578,11609
struct hfcD_hw hfcD_hw590,11835
#define HW_IOM1	611,12249
#define HW_IPAC	612,12268
#define FLG_TWO_DCHAN	613,12287
#define FLG_L1_DBUSY	614,12311
#define FLG_DBUSY_TIMER 615,12334
#define FLG_LOCK_ATOMIC 616,12360
#define HW_MON0_RX_END	617,12386
#define HW_MON1_RX_END	618,12411
#define HW_MON0_TX_END	619,12436
#define HW_MON1_TX_END	620,12462
struct IsdnCardState IsdnCardState622,12489
#define  MON0_RX	686,14157
#define  MON1_RX	687,14176
#define  MON0_TX	688,14195
#define  MON1_TX	689,14214
#define  ISDN_CTYPE_16_0	691,14234
#define  ISDN_CTYPE_8_0	692,14261
#define  ISDN_CTYPE_16_3	693,14288
#define  ISDN_CTYPE_PNP	694,14315
#define  ISDN_CTYPE_A1	695,14342
#define  ISDN_CTYPE_ELSA	696,14368
#define  ISDN_CTYPE_ELSA_PNP	697,14395
#define  ISDN_CTYPE_TELESPCMCIA	698,14426
#define  ISDN_CTYPE_IX1MICROR2	699,14460
#define  ISDN_CTYPE_ELSA_PCMCIA	700,14493
#define  ISDN_CTYPE_DIEHLDIVA	701,14528
#define  ISDN_CTYPE_ASUSCOM	702,14561
#define  ISDN_CTYPE_TELEINT	703,14592
#define  ISDN_CTYPE_TELES3C	704,14623
#define  ISDN_CTYPE_SEDLBAUER	705,14654
#define  ISDN_CTYPE_SPORTSTER	706,14687
#define  ISDN_CTYPE_MIC	707,14720
#define  ISDN_CTYPE_ELSA_PCI	708,14748
#define  ISDN_CTYPE_COMPAQ_ISA	709,14780
#define  ISDN_CTYPE_NETJET	710,14814
#define  ISDN_CTYPE_TELESPCI	711,14844
#define  ISDN_CTYPE_SEDLBAUER_PCMCIA	712,14876
#define  ISDN_CTYPE_AMD7930	713,14916
#define  ISDN_CTYPE_NICCY	714,14947
#define  ISDN_CTYPE_DBRI	715,14976
#define  ISDN_CTYPE_COUNT	717,15005
#define HISAX_INITFUNC(HISAX_INITFUNC723,15087
#define HISAX_INITDATA 724,15143
#define  CARD_TELES0 727,15203
#define ISDN_CHIP_ISAC 729,15292
#define  CARD_TELES0 732,15330
#define  CARD_TELES3 736,15387
#define ISDN_CHIP_ISAC 739,15546
#define  CARD_TELES3 742,15584
#define  CARD_AVM_A1 746,15643
#define ISDN_CHIP_ISAC 748,15708
#define  CARD_AVM_A1 751,15746
#define  CARD_ELSA 755,15803
#define ISDN_CHIP_ISAC 758,15961
#define HISAX_INITFUNC(HISAX_INITFUNC761,16015
#define HISAX_INITDATA763,16081
#define  CARD_ELSA 765,16110
#define	CARD_IX1MICROR2 770,16172
#define ISDN_CHIP_ISAC 772,16248
#define CARD_IX1MICROR2 775,16286
#define CARD_DIEHLDIVA 779,16351
#define ISDN_CHIP_ISAC 781,16425
#define CARD_DIEHLDIVA 784,16463
#define CARD_ASUSCOM 788,16525
#define ISDN_CHIP_ISAC 790,16595
#define CARD_ASUSCOM 793,16633
#define CARD_TELEINT 797,16693
#define ISDN_CHIP_ISAC 799,16763
#define CARD_TELEINT 802,16801
#define CARD_SEDLBAUER 806,16863
#define ISDN_CHIP_ISAC 808,16974
#define CARD_SEDLBAUER 811,17012
#define CARD_SPORTSTER 815,17076
#define ISDN_CHIP_ISAC 817,17150
#define CARD_SPORTSTER 820,17188
#define CARD_MIC 824,17246
#define ISDN_CHIP_ISAC 826,17308
#define CARD_MIC 829,17346
#define CARD_NETJET 833,17401
#define ISDN_CHIP_ISAC 835,17469
#define CARD_NETJET 838,17507
#define  CARD_TELES3C 842,17565
#define  CARD_TELES3C 844,17618
#define CARD_AMD7930 848,17680
#define CARD_AMD7930 850,17733
#define	CARD_NICCY 854,17790
#define ISDN_CHIP_ISAC 856,17856
#define CARD_NICCY 859,17894
#define CARD_DBRI 863,17949
#define CARD_DBRI 865,17996
#define  SUPORTED_CARDS 869,18025
#define TEI_PER_CARD 875,18308
#define TEI_PER_CARD 879,18377
#define TEI_PER_CARD 884,18453
#define HISAX_EURO_SENDCOMPLETE 885,18476
#define HISAX_DE_AOC 891,18612
#define TEI_FIXED 903,18752
#define LAYER2_WATCHING904,18772
struct IsdnCard IsdnCard907,18804
#define HZDELAY(HZDELAY959,20828

drivers/isdn/hisax/isdnl1.h,588
#define L2FRAME_DEBUG26,488
#define	L1_DEB_WARN	30,530
#define	L1_DEB_INTSTAT	31,556
#define	L1_DEB_ISAC	32,585
#define	L1_DEB_ISAC_FIFO	33,611
#define	L1_DEB_HSCX	34,641
#define	L1_DEB_HSCX_FIFO	35,667
#define	L1_DEB_LAPD	36,697
#define	L1_DEB_IPAC	37,730
#define	L1_DEB_RECEIVE_FRAME 38,763
#define D_RCVBUFREADY	40,802
#define D_XMTBUFREADY	41,826
#define D_L1STATECHANGE	42,850
#define D_CLEARBUSY	43,876
#define D_RX_MON0	44,898
#define D_RX_MON1	45,918
#define D_TX_MON0	46,938
#define D_TX_MON1	47,958
#define B_RCVBUFREADY 49,979
#define B_XMTBUFREADY 50,1003

drivers/isdn/hisax/isdnl2.c,2537
#define __NO_VERSION__40,1034
const char *l2_revision 44,1097
struct Fsm l2fsm 49,1204
	ST_L2_1,53,1257
	ST_L2_2,54,1267
	ST_L2_3,55,1277
	ST_L2_4,56,1287
	ST_L2_5,57,1297
	ST_L2_6,58,1307
	ST_L2_7,59,1317
	ST_L2_8,60,1327
#define L2_STATE_COUNT 63,1341
static char *strL2State[65,1377
	EV_L2_UI,78,1514
	EV_L2_SABMX,79,1525
	EV_L2_DISC,80,1539
	EV_L2_DM,81,1552
	EV_L2_UA,82,1563
	EV_L2_FRMR,83,1574
	EV_L2_SUPER,84,1587
	EV_L2_I,85,1601
	EV_L2_DL_DATA,86,1611
	EV_L2_ACK_PULL,87,1627
	EV_L2_DL_UNIT_DATA,88,1644
	EV_L2_DL_ESTABLISH,89,1665
	EV_L2_DL_RELEASE,90,1686
	EV_L2_MDL_ASSIGN,91,1705
	EV_L2_MDL_REMOVE,92,1724
	EV_L2_MDL_ERROR,93,1743
	EV_L2_MDL_NOTEIPROC,94,1761
	EV_L1_DEACTIVATE,95,1783
	EV_L2_T200,96,1802
	EV_L2_T203,97,1815
#define L2_EVENT_COUNT 100,1832
static char *strL2Event[102,1871
InitWin(129,2314
ReleaseWin(138,2427
cansend(154,2708
discard_i_queue(165,2934
discard_ui_queue(175,3082
clear_exception(185,3232
l2headersize(194,3466
l2addrsize(201,3630
sethdraddr(207,3725
enqueue_ui(228,4099
enqueue_super(235,4207
IsUI(242,4320
IsUA(248,4399
IsDM(254,4478
IsDISC(260,4557
IsRR(266,4640
IsSABMX(275,4760
IsREJ(283,4878
IsFRMR(289,4981
IsRNR(295,5064
legalnr(301,5167
setva(313,5459
send_uframe(332,5941
get_PollFlag(349,6309
FreeSkb(355,6432
get_PollFlagFree(362,6502
establishlink(372,6647
l2_mdl_error(388,7059
l2_dl_establish(413,7639
l2_send_ui(424,7870
l2_put_ui(439,8154
l2_got_ui(454,8476
l2_establish(468,8796
l2_dl_release(480,9048
l2_got_SABMX(501,9579
l2_got_disconn(561,11007
l2_got_ua(609,12095
l2_got_dm(675,13721
enquiry_cr(716,14740
enquiry_response(739,15289
transmit_enquiry(749,15501
nrerrorrecovery(762,15824
invoke_retransmission(771,15981
l2_got_st7_super(797,16558
l2_feed_iqueue(876,18752
l2_got_iframe(890,19166
l2_got_tei(999,22091
l2_no_tei(1015,22415
l2_st5_tout_200(1021,22514
l2_st6_tout_200(1043,23186
l2_st78_tout_200(1063,23738
l2_st7_tout_203(1086,24246
l2_pull_iqueue(1101,24587
l2_got_st8_super(1160,26134
l2_got_FRMR(1232,27892
l2_tei_remove(1267,28862
l2_persistant_da(1283,29247
static struct FsmNode L2FnList[1310,29870
static struct FsmNode L2FnList[] HISAX_INITDATA 1310,29870
#define L2_FN_COUNT 1393,33167
isdnl2_l1l2(1396,33242
isdnl2_l3l2(1451,34842
isdnl2_manl2(1468,35193
releasestack_isdnl2(1499,35933
l2m_debug(1509,36120
setstack_isdnl2(1520,36345
setstack_transl2(1544,36898
releasestack_transl2(1549,36944
HISAX_INITFUNC(1553,36989
Isdnl2Free(1564,37210

drivers/isdn/hisax/isdnl2.h,279
#define RR 3,16
#define RNR 4,36
#define REJ 5,56
#define SABME 6,76
#define SABM 7,96
#define DM 8,116
#define UI 9,136
#define DISC 10,156
#define UA 11,176
#define FRMR 12,196
#define XID 13,216
#define CMD 15,237
#define RSP 16,254
#define LC_FLUSH_WAIT 18,272

drivers/isdn/hisax/isdnl3.c,484
#define __NO_VERSION__45,1191
const char *l3_revision 50,1280
findie(53,1336
getcallref(91,1977
static int OrigCallRef 105,2199
newcallref(108,2232
l3_debug(118,2349
newl3state(128,2520
L3ExpireTimer(141,2757
L3InitTimer(147,2850
L3DelTimer(156,3014
L3AddTimer(162,3073
StopAllL3Timer(177,3375
l3_alloc_skb(183,3460
no_l3_proto(196,3709
*getl3proc(219,4147
*new_l3_process(232,4335
release_l3_process(260,4853
setstack_isdnl3(284,5232
releasestack_isdnl3(324,6157

drivers/isdn/hisax/isdnl3.h,239
#define SBIT(SBIT22,414
#define ALL_STATES 23,445
#define	PROTO_DIS_EURO	25,477
#define L3_DEB_WARN	27,506
#define	L3_DEB_PROTERR	28,531
#define	L3_DEB_STATE	29,559
#define	L3_DEB_CHARGE	30,585
struct stateentry stateentry32,613

drivers/isdn/hisax/ix1_micro.c,857
#define __NO_VERSION__77,2173
extern const char *CardType[83,2272
const char *ix1_revision 84,2303
#define byteout(byteout86,2351
#define bytein(bytein87,2392
#define SPECIAL_PORT_OFFSET 89,2424
#define ISAC_COMMAND_OFFSET 91,2455
#define ISAC_DATA_OFFSET 92,2485
#define HSCX_COMMAND_OFFSET 93,2512
#define HSCX_DATA_OFFSET 94,2542
#define TIMEOUT 96,2570
readreg(99,2611
readfifo(113,2833
writereg(123,3042
writefifo(135,3242
ReadISAC(145,3474
WriteISAC(151,3606
ReadISACfifo(157,3752
WriteISACfifo(163,3897
ReadHSCX(169,4046
WriteHSCX(176,4211
#define READHSCX(READHSCX182,4378
#define WRITEHSCX(WRITEHSCX184,4481
#define READHSCXFIFO(READHSCXFIFO187,4599
#define WRITEHSCXFIFO(WRITEHSCXFIFO190,4717
ix1micro_interrupt(196,4872
release_io_ix1micro(242,6180
ix1_reset(249,6309
ix1_card_msg(267,6644
__initfunc(292,7120

drivers/isdn/hisax/l3dss1.c,1751
#define __NO_VERSION__46,1180
const char *dss1_revision 53,1337
#define EXT_BEARER_CAPS 55,1386
#define	MsgHead(MsgHead57,1413
l3dss1_parse_facility(66,1552
    #define FOO1(FOO1161,3782
l3dss1_check_messagetype_validity(240,5786
l3dss1_message(277,6564
l3dss1_release_req(290,6798
l3dss1_release_cmpl(299,6996
u_char *EncodeASyncParams(323,7458
u_char EncodeSyncParams(364,8455
static u_char DecodeASyncParams(386,9089
static u_char DecodeSyncParams(428,10122
static u_char DecodeSI2(458,10872
l3dss1_setup_req(482,11634
l3dss1_call_proc(644,15737
l3dss1_setup_ack(664,16313
l3dss1_disconnect(684,16884
l3dss1_connect(706,17311
l3dss1_alerting(718,17563
l3dss1_msg_without_setup(729,17792
l3dss1_setup(765,18826
l3dss1_reset(918,22756
l3dss1_setup_rsp(924,22856
l3dss1_connect_ack(934,23056
l3dss1_disconnect_req(945,23284
l3dss1_reject_req(975,23830
l3dss1_release(1004,24377
l3dss1_alert_req(1035,24993
l3dss1_status_enq(1043,25129
l3dss1_status_req(1071,25630
l3dss1_release_ind(1101,26322
l3dss1_t303(1126,26850
l3dss1_t304(1140,27132
l3dss1_t305(1150,27336
l3dss1_t310(1179,27874
l3dss1_t313(1188,28077
l3dss1_t308_1(1197,28282
l3dss1_t308_2(1206,28479
l3dss1_restart(1214,28649
l3dss1_status(1222,28813
l3dss1_facility(1269,29910
l3dss1_global_restart(1287,30187
static struct stateentry downstatelist[1342,31407
static int downsllen 1380,32274
static struct stateentry datastatelist[1383,32349
static int datasllen 1430,34118
static struct stateentry globalmes_list[1432,34193
static int globalm_len 1442,34438
static struct stateentry globalcmd_list[1445,34522
static int globalc_len 1453,34672
global_handler(1458,34787
dss1up(1487,35455
dss1down(1612,38917
setstack_dss1(1657,39881

drivers/isdn/hisax/l3_1tr6.c,1019
#define __NO_VERSION__34,773
const char *l3_1tr6_revision 41,931
#define MsgHead(MsgHead43,983
l3_1TR6_message(50,1108
l31tr6_check_messagetype_validity(63,1357
l3_1tr6_setup_req(122,2630
l3_1tr6_setup(211,4663
l3_1tr6_setup_ack(270,6146
l3_1tr6_call_sent(288,6611
l3_1tr6_alert(306,7081
l3_1tr6_info(317,7308
l3_1tr6_info_s2(346,8045
l3_1tr6_connect(354,8173
l3_1tr6_rel(366,8426
l3_1tr6_rel_ack(394,8993
l3_1tr6_disc(407,9253
l3_1tr6_connect_ack(458,10434
l3_1tr6_alert_req(470,10689
l3_1tr6_setup_rsp(477,10838
l3_1tr6_reset(511,11613
l3_1tr6_disconnect_req(517,11714
l3_1tr6_release_req(553,12441
l3_1tr6_t303(562,12654
l3_1tr6_t304(576,12938
l3_1tr6_t305(585,13143
l3_1tr6_t310(621,13858
l3_1tr6_t313(630,14063
l3_1tr6_t308_1(639,14270
l3_1tr6_t308_2(648,14482
static struct stateentry downstl[655,14659
static int downstl_len 690,15453
static struct stateentry datastln1[693,15524
static int datastln1_len 724,16315
up1tr6(728,16402
down1tr6(812,18445
setstack_1tr6(856,19325

drivers/isdn/hisax/l3_1tr6.h,3877
#define l3_1tr614,287
#define PROTO_DIS_N0 16,304
#define PROTO_DIS_N1 17,330
#define MT_N0_REG_IND 22,378
#define MT_N0_CANC_IND 23,405
#define MT_N0_FAC_STA 24,433
#define MT_N0_STA_ACK 25,460
#define MT_N0_STA_REJ 26,487
#define MT_N0_FAC_INF 27,514
#define MT_N0_INF_ACK 28,541
#define MT_N0_INF_REJ 29,568
#define MT_N0_CLOSE 30,595
#define MT_N0_CLO_ACK 31,622
#define MT_N1_ESC 37,672
#define MT_N1_ALERT 38,695
#define MT_N1_CALL_SENT 39,720
#define MT_N1_CONN 40,749
#define MT_N1_CONN_ACK 41,773
#define MT_N1_SETUP 42,801
#define MT_N1_SETUP_ACK 43,826
#define MT_N1_RES 44,855
#define MT_N1_RES_ACK 45,878
#define MT_N1_RES_REJ 46,905
#define MT_N1_SUSP 47,932
#define MT_N1_SUSP_ACK 48,956
#define MT_N1_SUSP_REJ 49,984
#define MT_N1_USER_INFO 50,1012
#define MT_N1_DET 51,1041
#define MT_N1_DISC 52,1064
#define MT_N1_REL 53,1088
#define MT_N1_REL_ACK 54,1111
#define MT_N1_CANC_ACK 55,1138
#define MT_N1_CANC_REJ 56,1166
#define MT_N1_CON_CON 57,1194
#define MT_N1_FAC 58,1221
#define MT_N1_FAC_ACK 59,1244
#define MT_N1_FAC_CAN 60,1271
#define MT_N1_FAC_REG 61,1298
#define MT_N1_FAC_REJ 62,1325
#define MT_N1_INFO 63,1352
#define MT_N1_REG_ACK 64,1376
#define MT_N1_REG_REJ 65,1403
#define MT_N1_STAT 66,1430
#define WE_Shift_F0 72,1477
#define WE_Shift_F6 73,1502
#define WE_Shift_OF0 74,1527
#define WE_Shift_OF6 75,1553
#define WE0_cause 77,1580
#define WE0_connAddr 78,1603
#define WE0_callID 79,1629
#define WE0_chanID 80,1653
#define WE0_netSpecFac 81,1677
#define WE0_display 82,1705
#define WE0_keypad 83,1730
#define WE0_origAddr 84,1754
#define WE0_destAddr 85,1780
#define WE0_userInfo 86,1806
#define WE0_moreData 88,1833
#define WE0_congestLevel 89,1859
#define WE6_serviceInd 91,1890
#define WE6_chargingInfo 92,1918
#define WE6_date 93,1948
#define WE6_facSelect 94,1970
#define WE6_facStatus 95,1997
#define WE6_statusCalled 96,2024
#define WE6_addTransAttr 97,2054
#define FAC_Sperre 102,2104
#define FAC_Sperre_All 103,2128
#define FAC_Sperre_Fern 104,2156
#define FAC_Sperre_Intl 105,2185
#define FAC_Sperre_Interk 106,2214
#define FAC_Forward1 108,2246
#define FAC_Forward2 109,2272
#define FAC_Konferenz 110,2298
#define FAC_GrabBchan 111,2325
#define FAC_Reactivate 112,2352
#define FAC_Konferenz3 113,2380
#define FAC_Dienstwechsel1 114,2408
#define FAC_Dienstwechsel2 115,2440
#define FAC_NummernIdent 116,2472
#define FAC_GBG 117,2502
#define FAC_DisplayUebergeben 118,2523
#define FAC_DisplayUmgeleitet 119,2558
#define FAC_Unterdruecke 120,2593
#define FAC_Deactivate 121,2623
#define FAC_Activate 122,2651
#define FAC_SPV 123,2677
#define FAC_Rueckwechsel 124,2698
#define FAC_Umleitung 125,2728
#define CAUSE_InvCRef 130,2778
#define CAUSE_BearerNotImpl 131,2805
#define CAUSE_CIDunknown 132,2838
#define CAUSE_CIDinUse 133,2868
#define CAUSE_NoChans 134,2896
#define CAUSE_FacNotImpl 135,2923
#define CAUSE_FacNotSubscr 136,2953
#define CAUSE_OutgoingBarred 137,2985
#define CAUSE_UserAccessBusy 138,3019
#define CAUSE_NegativeGBG 139,3053
#define CAUSE_UnknownGBG 140,3084
#define CAUSE_NoSPVknown 141,3114
#define CAUSE_DestNotObtain 142,3144
#define CAUSE_NumberChanged 143,3177
#define CAUSE_OutOfOrder 144,3210
#define CAUSE_NoUserResponse 145,3240
#define CAUSE_UserBusy 146,3274
#define CAUSE_IncomingBarred 147,3302
#define CAUSE_CallRejected 148,3336
#define CAUSE_NetworkCongestion 149,3368
#define CAUSE_RemoteUser 150,3405
#define CAUSE_LocalProcErr 151,3435
#define CAUSE_RemoteProcErr 152,3467
#define CAUSE_RemoteUserSuspend 153,3500
#define CAUSE_RemoteUserResumed 154,3537
#define CAUSE_UserInfoDiscarded 155,3574
#define T303	157,3612
#define T304	158,3630
#define T305	159,3649
#define T308	160,3667
#define T310	161,3685
#define T313	162,3705
#define T318	163,3723
#define T319	164,3741

drivers/isdn/hisax/q931.c,1050
#define __NO_VERSION__39,848
iecpy(44,917
struct MessageType MessageType60,1147
} mtlist[63,1194
#define MTSIZE 145,1975
struct MessageType mt_n0[148,2040
int mt_n0_len 162,2458
struct MessageType mt_n1[165,2528
int mt_n1_len 199,3566
static struct MessageType fac_1tr6[201,3629
int fac_1tr6_len 223,4361
prbits(228,4443
skipext(245,4665
struct CauseValue CauseValue259,4904
} cvlist[263,4966
#define CVSIZE 468,8724
prcause(472,8792
struct MessageType cause_1tr6[516,9660
int cause_1tr6_len 546,10884
prcause_1tr6(549,10968
prchident(584,11687
prcalled(596,11866
prcalling(613,12151
prbearer(640,12561
general(686,13529
prcharge(713,13971
prtext(730,14289
display(745,14532
prfacility(774,14971
struct InformationElement InformationElement804,15503
} ielist[808,15587
#define IESIZE 912,17103
static struct InformationElement we_0[914,17168
static int we_0_len 928,17652
static struct InformationElement we_6[930,17727
static int we_6_len 940,18113
QuickHex(943,18192
LogFrame(967,18555
dlogframe(987,18919

drivers/isdn/hisax/tei.c,1222
#define __NO_VERSION__48,1214
const char *tei_revision 53,1303
#define ID_REQUEST	55,1351
#define ID_ASSIGNED	56,1372
#define ID_DENIED	57,1394
#define ID_CHK_REQ	58,1414
#define ID_CHK_RES	59,1435
#define ID_REMOVE	60,1456
#define ID_VERIFY	61,1476
#define TEI_ENTITY_ID	63,1497
struct Fsm teifsm 66,1531
	ST_TEI_NOP,72,1655
	ST_TEI_IDREQ,73,1668
	ST_TEI_IDVERIFY,74,1683
#define TEI_STATE_COUNT 77,1705
static char *strTeiState[79,1750
	EV_IDREQ,87,1844
	EV_ASSIGN,88,1855
	EV_DENIED,89,1867
	EV_CHKREQ,90,1879
	EV_REMOVE,91,1891
	EV_VERIFY,92,1903
	EV_T202,93,1915
#define TEI_EVENT_COUNT 96,1929
static char *strTeiEvent[98,1966
random_ri(110,2109
findtei(119,2227
put_tei_msg(135,2456
tei_id_request(158,2951
tei_id_assign(181,3555
tei_id_denied(211,4465
tei_id_chk_req(227,4842
tei_id_remove(247,5362
tei_id_verify(270,5978
tei_id_req_tout(286,6403
tei_id_ver_tout(312,7118
tei_l1l2(337,7837
tei_l2tei(391,9452
tei_debug(415,9952
setstack_tei(426,10161
init_tei(442,10552
release_tei(448,10612
static struct FsmNode TeiFnList[458,10755
static struct FsmNode TeiFnList[] HISAX_INITDATA 458,10755
#define TEI_FN_COUNT 472,11245
HISAX_INITFUNC(474,11310
TeiFree(485,11539

drivers/isdn/hisax/teles0.c,756
#define __NO_VERSION__43,1010
extern const char *CardType[49,1109
const char *teles0_revision 51,1141
#define byteout(byteout53,1192
#define bytein(bytein54,1233
readisac(57,1286
writeisac(63,1405
readhscx(70,1541
writehscx(77,1698
read_fifo_isac(84,1870
write_fifo_isac(93,2069
read_fifo_hscx(102,2269
write_fifo_hscx(111,2495
ReadISAC(122,2735
WriteISAC(128,2853
ReadISACfifo(134,2985
WriteISACfifo(140,3118
ReadHSCX(146,3255
WriteHSCX(152,3389
#define READHSCX(READHSCX161,3572
#define WRITEHSCX(WRITEHSCX162,3643
#define READHSCXFIFO(READHSCXFIFO163,3728
#define WRITEHSCXFIFO(WRITEHSCXFIFO164,3819
teles0_interrupt(169,3948
release_io_teles0(217,5167
reset_teles0(224,5299
Teles_card_msg(276,6186
__initfunc(300,6662

drivers/isdn/hisax/teles3.c,708
#define __NO_VERSION__65,1779
extern const char *CardType[71,1878
const char *teles3_revision 72,1909
#define byteout(byteout74,1960
#define bytein(bytein75,2001
readreg(78,2054
writereg(84,2145
read_fifo(91,2249
write_fifo(97,2343
ReadISAC(105,2468
WriteISAC(111,2582
ReadISACfifo(117,2710
WriteISACfifo(123,2839
ReadHSCX(129,2972
WriteHSCX(135,3102
#define READHSCX(READHSCX144,3281
#define WRITEHSCX(WRITEHSCX145,3348
#define READHSCXFIFO(READHSCXFIFO146,3429
#define WRITEHSCXFIFO(WRITEHSCXFIFO147,3516
teles3_interrupt(152,3641
#define MAXCOUNT 154,3707
release_ioregs(203,4971
release_io_teles3(214,5224
reset_teles3(231,5594
Teles_card_msg(295,6876
__initfunc(319,7352

drivers/isdn/hisax/amd7930.c,775
#define __NO_VERSION__100,4970
static const char *amd7930_revision 108,5139
#define RCV_BUFSIZE	110,5198
#define RCV_BUFBLKS	111,5265
Bchan_xmt_bh(117,5444
Bchan_xmit_callback(137,5861
Bchan_fill_fifo(158,6665
Bchan_mode(195,7629
Bchan_l2l1(217,8291
Bchan_recv_callback(258,9572
Bchan_rcv_bh(277,10023
Bchan_close(368,12650
Bchan_open(387,13018
Bchan_init(412,13623
Bchan_manl1(446,14616
setstack_amd7930(464,15059
amd7930_drecv_callback(478,15297
amd7930_dxmit_callback(515,16233
amd7930_Dchan_l2l1(543,16942
setDstack_amd7930(612,18849
manl1_msg(625,19146
amd7930_new_ph(636,19322
amd7930_liu_callback(656,19681
amd7930_l1cmd(677,20072
static void init_amd7930(711,20702
release_amd7930(724,21035
amd7930_card_msg(729,21093
__initfunc(750,21490

drivers/isdn/hisax/arcofi.c,50
#define __NO_VERSION__15,248
send_arcofi(21,333

drivers/isdn/hisax/arcofi.h,27
#define ARCOFI_USE	15,248

drivers/isdn/hisax/asuscom.c,812
#define __NO_VERSION__17,357
extern const char *CardType[23,456
const char *Asuscom_revision 25,488
#define byteout(byteout27,540
#define bytein(bytein28,581
#define ASUS_ISAC	30,613
#define ASUS_HSCX	31,633
#define ASUS_ADR	32,653
#define ASUS_CTRL_U7	33,672
#define ASUS_CTRL_POTS	34,695
#define ASUS_RESET 37,744
readreg(40,821
readfifo(54,1043
writereg(64,1252
writefifo(76,1452
ReadISAC(86,1684
WriteISAC(92,1813
ReadISACfifo(98,1956
WriteISACfifo(104,2098
ReadHSCX(110,2244
WriteHSCX(117,2406
#define READHSCX(READHSCX127,2617
#define WRITEHSCX(WRITEHSCX129,2717
#define READHSCXFIFO(READHSCXFIFO132,2832
#define WRITEHSCXFIFO(WRITEHSCXFIFO135,2947
asuscom_interrupt(141,3099
release_io_asuscom(187,4387
reset_asuscom(196,4542
Asus_card_msg(212,4883
__initfunc(236,5361

drivers/isdn/hisax/diva.c,1546
#define __NO_VERSION__29,630
extern const char *CardType[38,804
const char *Diva_revision 40,836
#define byteout(byteout42,885
#define bytein(bytein43,926
#define DIVA_HSCX_DATA	45,958
#define DIVA_HSCX_ADR	46,984
#define DIVA_ISA_ISAC_DATA	47,1009
#define DIVA_ISA_ISAC_ADR	48,1038
#define DIVA_ISA_CTRL	49,1066
#define DIVA_PCI_ISAC_DATA	51,1092
#define DIVA_PCI_ISAC_ADR	52,1121
#define DIVA_PCI_CTRL	53,1151
#define DIVA_ISA	56,1196
#define DIVA_PCI	57,1215
#define PCI_VENDOR_EICON_DIEHL	60,1251
#define PCI_DIVA20PRO_ID	61,1289
#define PCI_DIVA20_ID	62,1321
#define PCI_DIVA20PRO_U_ID	63,1351
#define PCI_DIVA20_U_ID	64,1385
#define DIVA_IRQ_STAT	67,1436
#define DIVA_EEPROM_SDA	68,1463
#define DIVA_IRQ_REQ	70,1511
#define DIVA_RESET	71,1537
#define DIVA_EEPROM_CLK	72,1561
#define DIVA_PCI_LED_A	73,1590
#define DIVA_PCI_LED_B	74,1618
#define DIVA_ISA_LED_A	75,1646
#define DIVA_ISA_LED_B	76,1674
#define DIVA_IRQ_CLR	77,1702
readreg(80,1750
readfifo(94,1972
writereg(104,2181
writefifo(116,2381
ReadISAC(126,2612
WriteISAC(132,2745
ReadISACfifo(138,2893
WriteISACfifo(144,3040
ReadHSCX(150,3190
WriteHSCX(157,3355
#define READHSCX(READHSCX167,3570
#define WRITEHSCX(WRITEHSCX169,3675
#define READHSCXFIFO(READHSCXFIFO172,3825
#define WRITEHSCXFIFO(WRITEHSCXFIFO175,3947
diva_interrupt(181,4106
release_io_diva(219,5195
reset_diva(235,5497
#define DIVA_ASSIGN 256,6133
diva_led_handler(259,6168
Diva_card_msg(292,7075
static 	int pci_index __initdata 346,8168
__initfunc(348,8207

drivers/isdn/hisax/hfc_2bds0.c,954
#define __NO_VERSION__18,378
#define byteout(byteout28,538
#define bytein(bytein29,579
dummyf(32,623
ReadReg(38,764
WriteReg(61,1244
readreghfcd(81,1703
writereghfcd(87,1814
set_cs_func(93,1933
WaitForBusy(104,2175
WaitNoBusy(118,2421
SelFiFo(136,2729
GetFreeFifoBytes_B(173,3530
GetFreeFifoBytes_D(187,3845
ReadZReg(201,4150
hfc_sched_event(213,4380
*hfc_empty_fifo(221,4548
hfc_fill_fifo(311,6766
hfc_send_data(404,9307
main_rec_2bds0(419,9626
mode_2bs0(489,11280
hfc_l2l1(540,12478
close_2bs0(582,13521
open_hfcstate(603,13964
hfc_manl1(620,14324
setstack_2b(638,14763
manl1_msg(651,15020
hfcd_bh(662,15196
sched_event_D(707,16119
int receive_dmsg(715,16285
hfc_fill_dfifo(834,19176
struct BCState *Sel_BCS(917,21104
hfc2bds0_interrupt(928,21364
HFCD_l2l1(1086,25525
hfcd_l1cmd(1160,27636
setstack_hfcd(1220,29165
hfc_dbusy_timer(1226,29267
__initfunc(1244,29627
__initfunc(1259,29913
release2bds0(1284,30661

drivers/isdn/hisax/hfc_2bds0.h,2588
#define HFCD_CIRM 16,255
#define HFCD_CTMT	17,280
#define HFCD_INT_M1 18,303
#define HFCD_INT_M2 19,330
#define HFCD_INT_S1 20,357
#define HFCD_STAT 21,384
#define HFCD_STAT_DISB 22,409
#define HFCD_STATES 23,438
#define HFCD_SCTRL 24,465
#define HFCD_TEST 25,491
#define HFCD_SQ 26,516
#define HFCD_CLKDEL 27,539
#define HFCD_MST_MODE	28,566
#define HFCD_CONN 29,593
#define HFCD_FIFO	31,619
#define HFCD_Z1	32,642
#define HFCD_Z2	33,664
#define HFCD_Z_LOW	34,686
#define HFCD_Z_HIGH	35,710
#define HFCD_F1_INC	36,735
#define HFCD_FIFO_IN	37,760
#define HFCD_F1	38,786
#define HFCD_F2	39,808
#define HFCD_F2_INC	40,830
#define HFCD_FIFO_OUT	41,855
#define HFCD_REC	42,882
#define HFCD_SEND	43,904
#define HFCB_FIFO	45,928
#define HFCB_Z1	46,951
#define HFCB_Z2	47,973
#define HFCB_Z_LOW	48,995
#define HFCB_Z_HIGH	49,1019
#define HFCB_F1_INC	50,1044
#define HFCB_FIFO_IN	51,1069
#define HFCB_F1	52,1095
#define HFCB_F2	53,1117
#define HFCB_F2_INC	54,1139
#define HFCB_FIFO_OUT	55,1164
#define HFCB_REC	56,1191
#define HFCB_SEND	57,1213
#define HFCB_B1	58,1236
#define HFCB_B2	59,1258
#define HFCB_CHANNEL(HFCB_CHANNEL60,1280
#define HFCD_STATUS	62,1331
#define HFCD_DATA	63,1353
#define HFCD_DATA_NODEB	64,1373
#define HFCD_BUSY	67,1420
#define HFCD_BUSY_NBUSY	68,1443
#define HFCD_TIMER_ELAP	69,1472
#define HFCD_STATINT	70,1501
#define HFCD_FRAMEINT	71,1527
#define HFCD_ANYINT	72,1554
#define HFCD_CLTIMER 75,1599
#define HFCD_TIM25 76,1625
#define HFCD_TIM50 77,1650
#define HFCD_TIM400 78,1675
#define HFCD_TIM800 79,1700
#define HFCD_AUTO_TIMER 80,1725
#define HFCD_TRANSB2 81,1754
#define HFCD_TRANSB1 82,1780
#define HFCD_RESET 85,1826
#define HFCD_MEM8K	86,1852
#define HFCD_INTA	87,1876
#define HFCD_INTB	88,1899
#define HFCD_INTC	89,1922
#define HFCD_INTD	90,1945
#define HFCD_INTE	91,1968
#define HFCD_INTF	92,1991
#define HFCD_INTS_B1TRANS	95,2035
#define HFCD_INTS_B2TRANS	96,2066
#define HFCD_INTS_DTRANS	97,2097
#define HFCD_INTS_B1REC	98,2127
#define HFCD_INTS_B2REC	99,2157
#define HFCD_INTS_DREC	100,2187
#define HFCD_INTS_L1STATE	101,2216
#define HFCD_INTS_TIMER	102,2247
#define HFCD_IRQ_ENABLE	105,2291
#define HFCD_LOAD_STATE	108,2335
#define HFCD_ACTIVATE	109,2365
#define HFCD_DO_ACTION	110,2393
#define HFCD_MASTER	113,2443
#define SCTRL_B1_ENA	116,2487
#define SCTRL_B2_ENA	117,2514
#define SCTRL_LOW_PRIO	118,2541
#define SCTRL_SQ_ENA	119,2570
#define SCTRL_TEST	120,2597
#define SCTRL_NONE_CAP	121,2622
#define SCTRL_PWR_DOWN	122,2651
#define HFCD_AUTO_AWAKE	125,2697

drivers/isdn/hisax/hfc_2bs0.c,438
#define __NO_VERSION__24,536
WaitForBusy(32,686
WaitNoBusy(55,1124
GetFreeFifoBytes(71,1379
ReadZReg(85,1679
hfc_sched_event(97,1959
hfc_clear_fifo(105,2117
hfc_empty_fifo(175,4113
hfc_fill_fifo(257,6575
main_irq_hfc(338,8949
mode_hfc(416,10859
hfc_l2l1(465,11935
close_hfcstate(507,12970
open_hfcstate(529,13452
hfc_manl1(546,13812
setstack_hfc(564,14249
__initfunc(576,14495
__initfunc(590,14772
releasehfc(605,15133

drivers/isdn/hisax/hscx.c,339
#define __NO_VERSION__30,630
static char *HSCXVer[36,740
static char *HSCXVer[] HISAX_INITDATA 36,740
HISAX_INITFUNC(40,888
modehscx(56,1273
hscx_sched_event(110,2834
hscx_l2l1(118,2993
close_hscxstate(160,4048
open_hscxstate(185,4593
hscx_manl1(208,5140
setstack_hscx(226,5579
HISAX_INITFUNC(238,5829
HISAX_INITFUNC(271,6745

drivers/isdn/hisax/hfc_2bs0.h,977
#define HFC_CTMT	15,282
#define HFC_CIRM 16,304
#define HFC_CIP	17,328
#define HFC_Z1	18,350
#define HFC_Z2	19,371
#define HFC_Z_LOW	20,392
#define HFC_Z_HIGH	21,415
#define HFC_F1_INC	22,439
#define HFC_FIFO_IN	23,463
#define HFC_F1	24,488
#define HFC_F2	25,509
#define HFC_F2_INC	26,530
#define HFC_FIFO_OUT	27,554
#define HFC_B1 28,580
#define HFC_B2	29,609
#define HFC_REC	30,630
#define HFC_SEND	31,652
#define HFC_CHANNEL(HFC_CHANNEL32,674
#define HFC_STATUS	34,722
#define HFC_DATA	35,743
#define HFC_DATA_NODEB	36,762
#define HFC_BUSY	39,808
#define HFC_TIMINT	40,830
#define HFC_EXTINT	41,854
#define HFC_CLTIMER 44,898
#define HFC_TIM50MS 45,923
#define HFC_TIMIRQE 46,948
#define HFC_TRANSB2 47,973
#define HFC_TRANSB1 48,998
#define HFC_RESET 51,1043
#define HFC_MEM8K	52,1068
#define HFC_INTA	53,1091
#define HFC_INTB	54,1113
#define HFC_INTC	55,1135
#define HFC_INTD	56,1157
#define HFC_INTE	57,1179
#define HFC_INTF	58,1201

drivers/isdn/hisax/hscx.h,546
#define HSCX_ISTA 20,362
#define HSCX_CCR1 21,385
#define HSCX_CCR2 22,408
#define HSCX_TSAR 23,431
#define HSCX_TSAX 24,454
#define HSCX_XCCR 25,477
#define HSCX_RCCR 26,500
#define HSCX_MODE 27,523
#define HSCX_CMDR 28,546
#define HSCX_EXIR 29,569
#define HSCX_XAD1 30,592
#define HSCX_XAD2 31,615
#define HSCX_RAH2 32,638
#define HSCX_RSTA 33,661
#define HSCX_TIMR 34,684
#define HSCX_STAR 35,707
#define HSCX_RBCL 36,730
#define HSCX_XBCH 37,753
#define HSCX_VSTR 38,776
#define HSCX_RLCR 39,799
#define HSCX_MASK 40,822

drivers/isdn/hisax/hscx_irq.c,161
waitforCEC(35,860
waitforXFW(49,1091
WriteHSCXCMDR(62,1332
hscx_empty_fifo(76,1541
hscx_fill_fifo(111,2425
hscx_interrupt(157,3499
hscx_int_main(247,5994

drivers/isdn/hisax/ipac.h,365
#define IPAC_CONF	22,359
#define IPAC_MASK	23,382
#define IPAC_ISTA	24,405
#define IPAC_ID	25,428
#define IPAC_ACFG	26,450
#define IPAC_AOE	27,473
#define IPAC_ARX	28,495
#define IPAC_PITA1	29,517
#define IPAC_PITA2	30,541
#define IPAC_POTA1	31,565
#define IPAC_POTA2	32,589
#define IPAC_PCFG	33,613
#define IPAC_SCFG	34,636
#define IPAC_TIMR2	35,659

drivers/isdn/hisax/isac.c,524
#define __NO_VERSION__47,1163
#define DBUSY_TIMER_VALUE 53,1273
#define ARCOFI_USE 54,1302
static char *ISACVer[56,1324
static char *ISACVer[] HISAX_INITDATA 56,1324
ISACVersion(61,1426
ph_command(70,1610
manl1_msg(81,1850
isac_new_ph(92,2026
isac_bh(127,2754
isac_empty_fifo(160,3705
isac_fill_fifo(197,4518
isac_sched_event(244,5515
isac_interrupt(252,5682
ISAC_l2l1(473,11383
isac_l1cmd(539,13150
setstack_isac(593,14311
dbusy_timer_handler(599,14413
HISAX_INITFUNC(616,14765
HISAX_INITFUNC(648,15724

drivers/isdn/hisax/isac.h,1222
#define ISAC_MASK 24,451
#define ISAC_ISTA 25,474
#define ISAC_STAR 26,497
#define ISAC_CMDR 27,520
#define ISAC_EXIR 28,543
#define ISAC_RBCH 29,566
#define ISAC_ADF2 30,589
#define ISAC_SPCR 31,612
#define ISAC_ADF1 32,635
#define ISAC_CIR0 33,658
#define ISAC_CIX0 34,681
#define ISAC_STCR 35,704
#define ISAC_MODE 36,727
#define ISAC_RSTA 37,750
#define ISAC_RBCL 38,773
#define ISAC_TIMR 39,796
#define ISAC_SQXR 40,819
#define ISAC_MOSR 41,842
#define ISAC_MOCR 42,865
#define ISAC_MOR0 43,888
#define ISAC_MOX0 44,911
#define ISAC_MOR1 45,934
#define ISAC_MOX1 46,957
#define ISAC_CMD_TIM	48,981
#define ISAC_CMD_RS	49,1006
#define ISAC_CMD_SCZ	50,1030
#define ISAC_CMD_SSZ	51,1055
#define ISAC_CMD_AR8	52,1080
#define ISAC_CMD_AR10	53,1105
#define ISAC_CMD_ARL	54,1131
#define ISAC_CMD_DUI	55,1156
#define ISAC_IND_RS	57,1182
#define ISAC_IND_PU	58,1206
#define ISAC_IND_DR	59,1230
#define ISAC_IND_SD	60,1254
#define ISAC_IND_DIS	61,1278
#define ISAC_IND_EI	62,1303
#define ISAC_IND_RSY	63,1327
#define ISAC_IND_ARD	64,1352
#define ISAC_IND_TI	65,1377
#define ISAC_IND_ATI	66,1401
#define ISAC_IND_AI8	67,1426
#define ISAC_IND_AI10	68,1451
#define ISAC_IND_DID	69,1477

drivers/isdn/hisax/l3dss1.h,1209
#define T303	24,489
#define T304	25,507
#define T305	26,526
#define T308	27,545
#define T310	28,563
#define T313	29,582
#define T318	30,600
#define T319	31,618
#define MT_ALERTING 37,662
#define MT_CALL_PROCEEDING 38,698
#define MT_CONNECT 39,734
#define MT_CONNECT_ACKNOWLEDGE 40,770
#define MT_PROGRESS 41,806
#define MT_SETUP 42,842
#define MT_SETUP_ACKNOWLEDGE 43,878
#define MT_RESUME 44,914
#define MT_RESUME_ACKNOWLEDGE 45,950
#define MT_RESUME_REJECT 46,986
#define MT_SUSPEND 47,1022
#define MT_SUSPEND_ACKNOWLEDGE 48,1058
#define MT_SUSPEND_REJECT 49,1094
#define MT_USER_INFORMATION 50,1130
#define MT_DISCONNECT 51,1166
#define MT_RELEASE 52,1202
#define MT_RELEASE_COMPLETE 53,1238
#define MT_RESTART 54,1274
#define MT_RESTART_ACKNOWLEDGE 55,1310
#define MT_SEGMENT 56,1346
#define MT_CONGESTION_CONTROL 57,1382
#define MT_INFORMATION 58,1418
#define MT_FACILITY 59,1454
#define MT_NOTIFY 60,1490
#define MT_STATUS 61,1526
#define MT_STATUS_ENQUIRY 62,1562
#define MT_INVALID 64,1599
#define IE_CAUSE 66,1636
#define IE_BEARER 67,1672
#define IE_FACILITY 68,1708
#define IE_CALL_STATE 69,1744
#define IE_CHANNEL_ID 70,1780
#define IE_RESTART_IND 71,1816

drivers/isdn/hisax/lmgr.c,106
#define __NO_VERSION__18,294
error_handling_dchan(22,349
hisax_manager(35,538
setstack_manager(55,981

drivers/isdn/hisax/mic.c,714
#define __NO_VERSION__32,589
extern const char *CardType[38,688
const char *mic_revision 40,720
#define byteout(byteout42,768
#define bytein(bytein43,809
#define MIC_ISAC	45,841
#define MIC_HSCX	46,860
#define MIC_ADR	47,879
#define MIC_RESET 50,922
readreg(53,996
readfifo(68,1219
writereg(78,1428
writefifo(90,1628
ReadISAC(100,1860
WriteISAC(106,1987
ReadISACfifo(112,2128
WriteISACfifo(118,2268
ReadHSCX(124,2412
WriteHSCX(131,2572
#define READHSCX(READHSCX141,2781
#define WRITEHSCX(WRITEHSCX143,2879
#define READHSCXFIFO(READHSCXFIFO146,2992
#define WRITEHSCXFIFO(WRITEHSCXFIFO149,3105
mic_interrupt(155,3255
release_io_mic(201,4514
mic_card_msg(210,4662
__initfunc(234,5150

drivers/isdn/hisax/netjet.c,2075
#define __NO_VERSION__21,480
#define fcstab 30,682
extern __u16 ppp_crc16_table[32,742
extern const char *CardType[34,798
const char *NETjet_revision 36,830
#define byteout(byteout38,881
#define bytein(bytein39,922
#define PCI_VENDOR_TRAVERSE_TECH 42,970
#define PCI_NETJET_ID	43,1010
#define NETJET_CTRL	45,1040
#define NETJET_DMACTRL	46,1065
#define NETJET_AUXCTRL	47,1093
#define NETJET_AUXDATA	48,1121
#define NETJET_IRQMASK0 49,1149
#define NETJET_IRQMASK1 50,1178
#define NETJET_IRQSTAT0 51,1207
#define NETJET_IRQSTAT1 52,1236
#define NETJET_DMA_READ_START	53,1265
#define NETJET_DMA_READ_IRQ	54,1300
#define NETJET_DMA_READ_END	55,1333
#define NETJET_DMA_READ_ADR	56,1366
#define NETJET_DMA_WRITE_START	57,1399
#define NETJET_DMA_WRITE_IRQ	58,1435
#define NETJET_DMA_WRITE_END	59,1469
#define NETJET_DMA_WRITE_ADR	60,1503
#define NETJET_PULSE_CNT	61,1537
#define NETJET_ISAC_OFF	63,1568
#define NETJET_ISACIRQ	64,1597
#define NETJET_DMA_SIZE 66,1626
#define HDLC_ZERO_SEARCH 68,1655
#define HDLC_FLAG_SEARCH 69,1682
#define HDLC_FLAG_FOUND 70,1709
#define HDLC_FRAME_FOUND 71,1736
#define HDLC_NULL 72,1763
#define HDLC_PART 73,1783
#define HDLC_FULL 74,1803
#define HDLC_FLAG_VALUE	76,1824
ReadISAC(81,1895
WriteISAC(97,2221
ReadISACfifo(111,2537
WriteISACfifo(119,2728
void fill_mem(126,2908
mode_tiger(146,3248
static u_char dummyrr(212,5195
static void dummywr(217,5282
static void printframe(221,5369
#define MAKE_RAW_BYTE 242,5734
static void make_raw_data(269,6214
static void got_frame(323,7375
static void read_raw(342,7868
static void read_tiger(508,11907
static void fill_dma(525,12370
static void write_raw(592,14095
static void write_tiger(688,16975
tiger_l2l1(703,17385
close_tigerstate(743,18327
open_tigerstate(772,18982
tiger_manl1(799,19688
setstack_tiger(817,20131
__initfunc(830,20387
releasetiger(887,22672
netjet_interrupt(906,23077
reset_netjet(965,24827
release_io_netjet(988,25583
NETjet_card_msg(998,25801
static 	int pci_index __initdata 1023,26249
__initfunc(1025,26288

drivers/isdn/hisax/rawhdlc.h,62
struct hdlc_state hdlc_state10,204
#define RAWHDLC_H25,605

drivers/isdn/hisax/sedlbauer.c,1108
#define __NO_VERSION__38,1012
extern const char *CardType[44,1111
const char *Sedlbauer_revision 46,1143
const char *Sedlbauer_Types[48,1197
#define SEDL_SPEED_CARD 51,1282
#define SEDL_SPEED_WIN 52,1308
#define SEDL_SPEED_STAR 53,1334
#define byteout(byteout55,1361
#define bytein(bytein56,1402
#define SEDL_RESET_ON	58,1434
#define SEDL_RESET_OFF	59,1458
#define SEDL_ISAC	60,1483
#define SEDL_HSCX	61,1503
#define SEDL_ADR	62,1523
#define SEDL_PCMCIA_RESET	64,1543
#define SEDL_PCMCIA_ISAC	65,1571
#define SEDL_PCMCIA_HSCX	66,1598
#define SEDL_PCMCIA_ADR	67,1625
#define SEDL_RESET 69,1653
readreg(72,1728
readfifo(86,1950
writereg(96,2159
writefifo(108,2359
ReadISAC(118,2591
WriteISAC(124,2720
ReadISACfifo(130,2863
WriteISACfifo(136,3005
ReadHSCX(142,3151
WriteHSCX(149,3313
#define READHSCX(READHSCX159,3524
#define WRITEHSCX(WRITEHSCX161,3624
#define READHSCXFIFO(READHSCXFIFO164,3739
#define WRITEHSCXFIFO(WRITEHSCXFIFO167,3854
sedlbauer_interrupt(173,4006
release_io_sedlbauer(227,5604
reset_sedlbauer(236,5761
Sedl_card_msg(254,6174
__initfunc(278,6658

drivers/isdn/hisax/sportster.c,865
#define __NO_VERSION__26,613
extern const char *CardType[32,712
const char *sportster_revision 33,743
#define byteout(byteout35,797
#define bytein(bytein36,838
#define	 SPORTSTER_ISAC	38,870
#define	 SPORTSTER_HSCXA	39,902
#define	 SPORTSTER_HSCXB	40,934
#define	 SPORTSTER_RES_IRQ	41,966
#define	 SPORTSTER_RESET	42,1000
#define	 SPORTSTER_INTE	43,1030
calc_off(46,1079
read_fifo(52,1201
write_fifo(58,1295
ReadISAC(66,1420
WriteISAC(72,1540
ReadISACfifo(78,1674
WriteISACfifo(84,1796
ReadHSCX(90,1922
WriteHSCX(96,2058
#define READHSCX(READHSCX105,2243
#define WRITEHSCX(WRITEHSCX106,2316
#define READHSCXFIFO(READHSCXFIFO107,2403
#define WRITEHSCXFIFO(WRITEHSCXFIFO108,2483
sportster_interrupt(113,2601
release_io_sportster(147,3385
reset_sportster(159,3600
Sportster_card_msg(177,4095
__initfunc(203,4710
__initfunc(229,5196

drivers/isdn/hisax/teleint.c,513
#define __NO_VERSION__27,528
extern const char *CardType[33,631
const char *TeleInt_revision 35,663
#define byteout(byteout37,715
#define bytein(bytein38,756
readreg(41,809
readfifo(64,1259
writereg(82,1633
writefifo(104,2079
ReadISAC(124,2534
WriteISAC(131,2692
ReadISACfifo(138,2864
WriteISACfifo(145,3030
ReadHFC(152,3200
WriteHFC(171,3605
TeleInt_interrupt(185,3956
TeleInt_Timer(213,4650
release_io_TeleInt(230,4926
reset_TeleInt(239,5096
TeleInt_card_msg(258,5575
__initfunc(283,6099

drivers/isdn/hisax/teles3c.c,243
#define __NO_VERSION__16,257
extern const char *CardType[21,343
const char *teles163c_revision 23,375
t163c_interrupt(26,441
t163c_Timer(53,1100
release_io_t163c(63,1306
reset_t163c(72,1479
t163c_card_msg(110,3039
__initfunc(149,3946

drivers/isdn/hisax/foreign.c,901
#define __NO_VERSION__37,1173
static const char *foreign_revision 45,1325
#define RCV_BUFSIZE	47,1384
#define RCV_BUFBLKS	48,1451
Bchan_xmt_bh(54,1630
Bchan_xmit_callback(74,2047
Bchan_fill_fifo(95,2851
Bchan_mode(131,3991
Bchan_l2l1(153,4652
Bchan_recv_done(201,6222
Bchan_recv_callback(254,7727
Bchan_rcv_bh(298,8821
Bchan_close(351,10211
Bchan_open(371,10624
Bchan_init(411,11649
Bchan_manl1(445,12642
setstack_foreign(463,13085
foreign_drecv_callback(477,13323
foreign_dxmit_callback(513,14263
foreign_Dchan_l2l1(540,14969
setDstack_foreign(609,16971
manl1_msg(622,17305
foreign_l1cmd(633,17474
foreign_new_ph(665,18078
foreign_liu_callback(685,18437
static void init_foreign(704,18835
foreign_card_msg(717,19174
extern struct foreign_interface amd7930_foreign_interface;740,19680
extern struct foreign_interface dbri_foreign_interface;744,19761
__initfunc(747,19825

drivers/isdn/hisax/foreign.h,186
struct foreign_interface foreign_interface165,7227
extern struct foreign_interface amd7930_foreign_interface;192,8371
extern struct foreign_interface dbri_foreign_interface;193,8430

drivers/isdn/sc/card.h,209
#define CARD_H32,1189
#define CHECKRESET_TIME	44,1391
#define CHECKSTAT_TIME	49,1488
#define SAR_TIMEOUT	55,1650
#define IS_VALID_CARD(IS_VALID_CARD60,1743
} bchan;bchan76,2275
} board;board108,3607

drivers/isdn/sc/init.c,429
board *adapter[5,63
int cinst;6,90
static char devname[8,102
const char version[9,133
const char *boardname[11,166
static unsigned int io[14,282
static unsigned char irq[15,320
static unsigned long ram[16,360
static int do_reset 17,400
static int sup_irq[19,426
#define MAX_IRQS	20,487
int irq_supported(30,781
#define init_sc 45,1028
int init_sc(56,1175
void cleanup_module(414,9827
int identify_board(468,10970

drivers/isdn/sc/command.c,672
#define __NO_VERSION__29,1109
extern int cinst;52,1910
extern board *adapter[53,1928
static char *commands[70,2574
static char *l3protos[92,3137
static char *l2protos[93,3190
int get_card_from_id(100,3370
int command(115,3538
int loopback(187,5308
int startproc(236,6304
int loadproc(258,6677
int dial(267,6769
int answer(297,7411
int hangup(318,7888
int setl2(341,8383
int getl2(375,9267
int setl3(392,9677
int getl3(410,10093
int acceptb(424,10454
int clreaz(443,10891
int seteaz(457,11242
int geteaz(472,11647
int setsil(486,12011
int getsil(500,12380
int lock(515,12740
int unlock(521,12787
int reset(527,12836
void flushreadfifo 559,13568

drivers/isdn/sc/debug.c,264
#define NULL	30,1133
#define REQUEST_IRQ(REQUEST_IRQ32,1151
#define FREE_IRQ(FREE_IRQ33,1205
int dbg_level 37,1286
static char dbg_funcname[38,1305
void dbg_endfunc(40,1337
void dbg_func(48,1467
inline char *strcpy(55,1596
inline void pullphone(68,1762

drivers/isdn/sc/debug.h,78
	#define REQUEST_IRQ(REQUEST_IRQ32,1204
	#define FREE_IRQ(FREE_IRQ33,1259

drivers/isdn/sc/event.c,146
#define __NO_VERSION__29,1107
extern int cinst;35,1214
extern board *adapter[36,1232
static char *events[39,1271
int indicate_status(56,1658

drivers/isdn/sc/ioctl.c,137
#define __NO_VERSION__1,0
extern board *adapter[16,440
static char *ChannelStates[19,472
int sc_ioctl(27,680
int GetStatus(343,8677

drivers/isdn/sc/hardware.h,1899
#define HARDWARE_H6,79
#define MAX_CARDS	14,204
#define SIGNATURE	25,521
#define SIG_OFFSET	26,578
#define TRACE_OFFSET	27,649
#define BUFFER_OFFSET	28,723
#define IOBASE_MIN	31,807
#define IOBASE_MAX	32,863
#define IOBASE_OFFSET	33,920
#define FIFORD_OFFSET	35,1007
#define FIFOWR_OFFSET	36,1033
#define FIFOSTAT_OFFSET	37,1061
#define RESET_OFFSET	38,1092
#define PG0_OFFSET	39,1120
#define PG1_OFFSET	40,1194
#define PG2_OFFSET	41,1268
#define PG3_OFFSET	42,1342
#define FIFO_READ	44,1417
#define FIFO_WRITE	45,1463
#define LO_ADDR_PTR	46,1510
#define HI_ADDR_PTR	47,1569
#define NOT_USED_1	48,1629
#define FIFO_STATUS	49,1650
#define NOT_USED_2	50,1700
#define MEM_OFFSET	51,1721
#define SFT_RESET	52,1742
#define EXP_BASE	53,1785
#define EXP_PAGE0	54,1836
#define EXP_PAGE1	55,1890
#define EXP_PAGE2	56,1944
#define EXP_PAGE3	57,1998
#define IRQ_SELECT	58,2052
#define MAX_IO_REGS	59,2104
#define RF_HAS_DATA	62,2188
#define RF_QUART_FULL	63,2234
#define RF_HALF_FULL	64,2286
#define RF_NOT_FULL	65,2334
#define WF_HAS_DATA	66,2380
#define WF_QUART_FULL	67,2426
#define WF_HALF_FULL	68,2478
#define WF_NOT_FULL	69,2526
#define SRAM_MIN	72,2601
#define SRAM_MAX	73,2671
#define SRAM_PAGESIZE	74,2742
#define BUFFER_SIZE	77,2841
#define BUFFER_BASE	78,2904
#define BUFFERS_MAX	80,3003
#define HDLC_PROTO	82,3092
#define BRI_BOARD	84,3149
#define POTS_BOARD	85,3169
#define PRI_BOARD	86,3190
#define BRI_CHANNELS	91,3274
#define BRI_BASEPG_VAL	92,3325
#define BRI_MAGIC	93,3353
#define BRI_MEMSIZE	94,3399
#define BRI_PARTNO	95,3455
#define BRI_FEATURES	96,3483
#define PRI_CHANNELS	100,3613
#define PRI_BASEPG_VAL	101,3665
#define PRI_MAGIC	102,3693
#define PRI_MEMSIZE	103,3739
#define PRI_PARTNO	104,3793
#define PRI_FEATURES	105,3821
#define milliseconds(milliseconds112,3980
#define IS_VALID_CHANNEL(IS_VALID_CHANNEL115,4080

drivers/isdn/sc/includes.h,0

drivers/isdn/sc/interrupt.c,151
#define __NO_VERSION__29,1110
extern int cinst;43,1567
extern board *adapter[44,1585
int get_card_from_irq(46,1611
void interrupt_handler(60,1762

drivers/isdn/sc/message.c,210
#define __NO_VERSION__31,1180
extern board *adapter[37,1287
extern unsigned int cinst;38,1312
void dump_messages(50,1586
int receivemessage(94,2701
int sendmessage(150,4087
int send_and_receive(236,6216

drivers/isdn/sc/message.h,3946
#define MESSAGE_H37,1293
#define MAX_MESSAGES	39,1312
#define MSG_DATA_LEN	41,1387
#define MSG_LEN	42,1450
#define CMPID	43,1495
#define CEPID	44,1545
#define IS_CM_MESSAGE(IS_CM_MESSAGE49,1661
#define IS_CE_MESSAGE(IS_CE_MESSAGE57,1871
#define cmReqType1	67,2090
#define cmReqType2	68,2113
#define cmRspType0	69,2136
#define cmRspType1	70,2159
#define cmRspType2	71,2182
#define cmRspType5	72,2205
#define cmReqClass0	75,2251
#define cmRspClass0	76,2275
#define cmReqHWConfig	79,2320
#define cmReqMsgLpbk	80,2359
#define cmReqVersion	81,2397
#define cmReqLoadProc	82,2435
#define cmReqStartProc	83,2474
#define cmReqReadMem	84,2514
#define cmRspHWConfig	85,2552
#define	cmRspMsgLpbk	86,2589
#define cmRspVersion	87,2624
#define cmRspLoadProc	88,2659
#define cmRspStartProc	89,2696
#define	cmRspReadMem	90,2735
#define cmRspMiscEngineUp	91,2770
#define cmRspInvalid	92,2812
#define ceReqTypePhy	100,2922
#define ceReqTypeLnk	101,2946
#define ceReqTypeCall	102,2970
#define ceReqTypeStat	103,2995
#define ceRspTypeErr	104,3020
#define	ceRspTypePhy	105,3044
#define ceRspTypeLnk	106,3079
#define ceRspTypeCall	107,3114
#define ceRspTypeStat	108,3151
#define ceReqClass0	111,3211
#define ceReqClass1	112,3234
#define ceReqClass2	113,3257
#define ceReqClass3	114,3280
#define ceRspClass0	115,3303
#define ceRspClass1	116,3336
#define ceRspClass2	117,3369
#define ceRspClass3	118,3402
#define ceReqPhyProcInfo	121,3505
#define ceReqPhyConnect	122,3546
#define ceReqPhyDisconnect	123,3587
#define ceReqPhySetParams	124,3630
#define ceReqPhyGetParams	125,3676
#define ceReqPhyStatus	126,3722
#define ceReqPhyAcfaStatus	127,3762
#define ceReqPhyChCallState	128,3809
#define ceReqPhyChServState	129,3857
#define ceReqPhyRLoopBack	130,3905
#define ceRspPhyProcInfo	131,3947
#define	ceRspPhyConnect	132,3989
#define ceRspPhyDisconnect	133,4030
#define ceRspPhySetParams	134,4076
#define ceRspPhyGetParams	135,4120
#define ceRspPhyStatus	136,4164
#define ceRspPhyAcfaStatus	137,4203
#define ceRspPhyChCallState	138,4249
#define ceRspPhyChServState	139,4297
#define ceRspPhyRLoopBack	140,4345
#define ceReqLnkSetParam	141,4389
#define ceReqLnkGetParam	142,4430
#define ceReqLnkGetStats	143,4471
#define ceReqLnkWrite	144,4512
#define ceReqLnkRead	145,4551
#define ceReqLnkFlush	146,4589
#define ceReqLnkWrBufTrc	147,4628
#define ceReqLnkRdBufTrc	148,4669
#define ceRspLnkSetParam	149,4710
#define ceRspLnkGetParam	150,4752
#define ceRspLnkGetStats	151,4794
#define ceRspLnkWrite	152,4836
#define ceRspLnkRead	153,4873
#define ceRspLnkFlush	154,4908
#define ceRspLnkWrBufTrc	155,4945
#define ceRspLnkRdBufTrc	156,4987
#define ceReqCallSetSwitchType	157,5029
#define ceReqCallGetSwitchType	158,5076
#define ceReqCallSetFrameFormat	159,5123
#define ceReqCallGetFrameFormat	160,5171
#define ceReqCallSetCallType	161,5219
#define ceReqCallGetCallType	162,5264
#define ceReqCallSetSPID	163,5309
#define ceReqCallGetSPID	164,5355
#define ceReqCallSetMyNumber	165,5401
#define ceReqCallGetMyNumber	166,5451
#define	ceRspCallSetSwitchType	167,5503
#define ceRspCallGetSwitchType	168,5557
#define ceRspCallSetFrameFormat	169,5611
#define ceRspCallGetFrameFormat	170,5667
#define ceRspCallSetCallType	171,5723
#define ceRspCallGetCallType	172,5773
#define ceRspCallSetSPID	173,5823
#define ceRspCallGetSPID	174,5865
#define ceRspCallSetMyNumber	175,5907
#define ceRspCallGetMyNumber	176,5957
#define ceRspStatAcfaStatus	177,6007
#define ceRspStat178,6037
#define ceRspErrError	179,6055
#define CALLTYPE_64K	184,6116
#define CALLTYPE_56K	185,6140
#define CALLTYPE_SPEECH	186,6164
#define CALLTYPE_31KHZ	187,6191
} LLData;LLData197,6467
} HWConfig_pl;HWConfig_pl212,6707
struct message message217,6743
typedef struct message ReqMessage;ReqMessage237,7241
typedef struct message RspMessage;RspMessage238,7298
} DualPortMemory;DualPortMemory254,7846

drivers/isdn/sc/packet.c,191
#define __NO_VERSION__29,1107
extern board *adapter[35,1214
extern unsigned int cinst;36,1239
int sndpkt(45,1628
void rcvpkt(111,3836
int setup_buffers(159,5388
int print_skb(215,7489

drivers/isdn/sc/scioc.h,899
#define SCIOCLOAD	5,31
#define SCIOCRESET	6,83
#define SCIOCDEBUG	7,132
#define SCIOCREV	8,178
#define SCIOCSTART	9,229
#define SCIOCGETSWITCH	10,278
#define SCIOCSETSWITCH	11,328
#define SCIOCGETSPID	12,378
#define SCIOCSETSPID	13,427
#define SCIOCGETDN	14,477
#define SCIOCSETDN	15,522
#define SCIOCTRACE	16,568
#define SCIOCSTAT	17,616
#define SCIOCGETSPEED	18,661
#define SCIOCSETSPEED	19,712
#define SCIOCLOOPTST	20,763
} scs_ioctl;scs_ioctl27,902
#define SCIOC_SPIDSIZE	30,938
#define SCIOC_DNSIZE	31,965
#define SCIOC_REVSIZE	32,1002
#define SCIOC_SRECSIZE	33,1040
} ChLinkStats;ChLinkStats40,1179
} BRIStat;BRIStat48,1300
typedef BRIStat POTStat;POTStat50,1312
} PRIStat;PRIStat58,1449
typedef char PRIInfo;PRIInfo60,1461
typedef char BRIInfo;BRIInfo61,1483
typedef char POTInfo;POTInfo62,1505
} ACFAStat;ACFAStat73,1661
} boardInfo;boardInfo101,2131

drivers/isdn/sc/shmem.c,179
#define __NO_VERSION__31,1176
extern board *adapter[39,1317
extern int cinst;40,1342
void *memcpy_toshmem(45,1371
void *memcpy_fromshmem(87,2466
void *memset_shmem(129,3557

drivers/isdn/sc/timer.c,170
#define __NO_VERSION__29,1107
extern board *adapter[35,1214
void setup_ports(47,1573
void check_reset(66,2127
void check_phystat(112,3449
void trace_timer(163,5308

drivers/isdn/act2000/act2000_isa.c,465
#define __NO_VERSION__43,1525
static act2000_card *irq2card_map[48,1613
static int isa_irqs[53,1707
#define ISA_NRIRQS 57,1768
isa_delay(60,1831
isa_reset(75,2103
isa_detect(101,2801
isa_interrupt(115,3089
isa_select_irq(143,3881
isa_enable_irq(175,4379
isa_config_irq(187,4631
isa_config_port(235,6238
isa_release(254,6806
isa_writeb(272,7304
isa_readb(289,7704
isa_receive(306,8100
isa_send(369,10185
isa_getid(439,11845
isa_download(477,12837

drivers/isdn/act2000/act2000.h,2411
#define act2000_h44,1492
#define ACT2000_IOCTL_SETPORT 53,1613
#define ACT2000_IOCTL_GETPORT 54,1648
#define ACT2000_IOCTL_SETIRQ 55,1683
#define ACT2000_IOCTL_GETIRQ 56,1718
#define ACT2000_IOCTL_SETBUS 57,1753
#define ACT2000_IOCTL_GETBUS 58,1788
#define ACT2000_IOCTL_SETPROTO 59,1823
#define ACT2000_IOCTL_GETPROTO 60,1858
#define ACT2000_IOCTL_SETMSN 61,1893
#define ACT2000_IOCTL_GETMSN 62,1928
#define ACT2000_IOCTL_LOADBOOT 63,1963
#define ACT2000_IOCTL_ADDCARD 64,1998
#define ACT2000_IOCTL_TEST 66,2034
#define ACT2000_IOCTL_DEBUGVAR 67,2069
#define ACT2000_BUS_ISA 69,2105
#define ACT2000_BUS_MCA 70,2140
#define ACT2000_BUS_PCMCIA 71,2175
typedef struct act2000_cdef act2000_cdef74,2245
} act2000_cdef;act2000_cdef79,2341
typedef struct act2000_ddef act2000_ddef82,2396
} act2000_ddef;act2000_ddef85,2532
typedef struct act2000_fwid act2000_fwid87,2549
} act2000_fwid;act2000_fwid91,2653
#define ACT2000_PORTLEN 122,3337
#define ACT2000_FLAGS_RUNNING 124,3371
#define ACT2000_FLAGS_PVALID 125,3433
#define ACT2000_FLAGS_IVALID 126,3495
#define ACT2000_FLAGS_LOADED 127,3557
#define ACT2000_BCH 129,3620
#define ACT2000_STATE_NULL 132,3706
#define ACT2000_STATE_ICALL 133,3739
#define ACT2000_STATE_OCALL 134,3772
#define ACT2000_STATE_IWAIT 135,3805
#define ACT2000_STATE_OWAIT 136,3838
#define ACT2000_STATE_IBWAIT 137,3871
#define ACT2000_STATE_OBWAIT 138,3904
#define ACT2000_STATE_BWAIT 139,3937
#define ACT2000_STATE_BHWAIT 140,3970
#define ACT2000_STATE_BHWAIT2 141,4003
#define ACT2000_STATE_DHWAIT 142,4036
#define ACT2000_STATE_DHWAIT2 143,4069
#define ACT2000_STATE_BSETUP 144,4102
#define ACT2000_STATE_ACTIVE 145,4135
#define ACT2000_MAX_QUEUED 147,4169
#define ACT2000_LOCK_TX 149,4221
#define ACT2000_LOCK_RX 150,4247
typedef struct act2000_chan act2000_chan152,4274
} act2000_chan;act2000_chan161,4756
typedef struct msn_entry msn_entry163,4773
} msn_entry;msn_entry167,4866
typedef struct irq_data_isa irq_data_isa169,4880
} irq_data_isa;irq_data_isa176,5066
typedef union irq_data irq_data178,5083
} irq_data;irq_data180,5127
typedef struct act2000_card act2000_card185,5171
} act2000_card;act2000_card214,7118
extern act2000_card *cards;216,7135
extern __inline__ void act2000_schedule_tx(218,7164
extern __inline__ void act2000_schedule_rx(224,7313
extern __inline__ void act2000_schedule_poll(230,7462

drivers/isdn/act2000/act2000_isa.h,1766
#define act2000_isa_h29,1073
#define ISA_POLL_LOOP 31,1096
} ISA_INT_T;ISA_INT_T37,1349
#define        ISA_COR 45,1826
#define        ISA_COR_PERR 46,1900
#define        ISA_COR_WS 47,1974
#define        ISA_COR_IRQOFF 48,2048
#define        ISA_COR_IRQ07 49,2122
#define        ISA_COR_IRQ05 50,2196
#define        ISA_COR_IRQ03 51,2270
#define        ISA_COR_IRQ10 52,2344
#define        ISA_COR_IRQ11 53,2418
#define        ISA_COR_IRQ12 54,2492
#define        ISA_COR_IRQ15 55,2566
#define        ISA_COR_IRQPULSE 56,2640
#define        ISA_COR_RESET 57,2714
#define        ISA_ISR 65,3251
#define        ISA_ISR_ERR 66,3325
#define        ISA_ISR_OUT 67,3399
#define        ISA_ISR_INP 68,3473
#define        ISA_ISR_SERIAL 69,3547
#define        ISA_ISR_ERRSIG 70,3621
#define        ISA_ISR_ERR_MASK 71,3695
#define        ISA_ISR_OUT_MASK 72,3772
#define        ISA_ISR_INP_MASK 73,3849
#define        ISA_SER_ID 76,4004
#define        ISA_EPR 84,4541
#define        ISA_EPR_OUT 85,4615
#define        ISA_EPR_IN 86,4689
#define        ISA_EPR_CLK 87,4763
#define        ISA_EPR_CS 88,4837
#define        ISA_EPR_HOLD 89,4911
#define        ISA_EER 94,5217
#define        ISA_SDI 99,5523
#define        ISA_SDO 104,5829
#define        ISA_SIS 112,6367
#define        ISA_SIS_READY 113,6441
#define        ISA_SIS_INT 114,6515
#define        ISA_SOS 122,7052
#define        ISA_SOS_READY 123,7126
#define        ISA_SOS_INT 124,7200
#define        ISA_REGION 126,7275
#define ISA_PORT_COR 130,7384
#define ISA_PORT_ISR 131,7426
#define ISA_PORT_EPR 132,7468
#define ISA_PORT_EER 133,7510
#define ISA_PORT_SDI 134,7552
#define ISA_PORT_SDO 135,7594
#define ISA_PORT_SIS 136,7636
#define ISA_PORT_SOS 137,7678

drivers/isdn/act2000/capi.c,1284
#define __NO_VERSION__50,1724
static actcapi_msgdsc valid_msg[54,1787
#define num_valid_msg 120,4070
#define num_valid_imsg 121,4135
actcapi_chkhdr(131,4357
#define ACTCAPI_MKHDR(ACTCAPI_MKHDR147,4675
#define ACTCAPI_CHKSKB 159,4992
#define ACTCAPI_QUEUE_TX 164,5098
actcapi_listen_req(171,5231
actcapi_connect_req(194,5808
actcapi_connect_b3_req(221,6581
actcapi_manufacturer_req_net(240,7007
actcapi_manufacturer_req_v42(267,7851
actcapi_manufacturer_req_errh(289,8332
actcapi_manufacturer_req_msn(310,8749
actcapi_select_b2_protocol_req(340,9426
actcapi_select_b3_protocol_req(375,10509
actcapi_listen_b3_req(396,11070
actcapi_disconnect_req(408,11297
actcapi_disconnect_b3_req(421,11553
actcapi_connect_resp(438,11998
actcapi_connect_active_resp(456,12403
actcapi_connect_b3_resp(470,12722
actcapi_connect_b3_active_resp(490,13275
actcapi_info_resp(503,13561
actcapi_disconnect_b3_resp(515,13780
actcapi_disconnect_resp(529,14058
new_plci(542,14310
find_plci(554,14505
find_ncci(564,14664
find_dialing(574,14823
actcapi_data_b3_ind(585,15053
handle_ack(626,16179
actcapi_dispatch(669,17388
actcapi_debug_caddr(980,27133
actcapi_debug_ncpi(995,27460
actcapi_debug_dlpd(1015,28108
static void dump_skb(1031,28621
actcapi_debug_msg(1050,28957

drivers/isdn/act2000/capi.h,1229
#define CAPI_H41,1437
typedef struct actcapi_msgcmd actcapi_msgcmd44,1490
} actcapi_msgcmd;actcapi_msgcmd47,1547
typedef struct actcapi_msghdr actcapi_msghdr50,1592
} actcapi_msghdr;actcapi_msghdr55,1694
typedef struct actcapi_msgdsc actcapi_msgdsc58,1760
} actcapi_msgdsc;actcapi_msgdsc61,1833
typedef struct actcapi_addr actcapi_addr64,1870
} actcapi_addr;actcapi_addr68,2119
typedef  union actcapi_infonr actcapi_infonr71,2165
} actcapi_infonr;actcapi_infonr79,2665
typedef union  actcapi_infoel actcapi_infoel82,2708
} actcapi_infoel;actcapi_infoel100,3869
typedef struct actcapi_msn actcapi_msn103,3924
} actcapi_msn;actcapi_msn107,4077
typedef struct actcapi_dlpd actcapi_dlpd109,4093
} actcapi_dlpd;actcapi_dlpd117,4634
typedef struct actcapi_ncpd actcapi_ncpd119,4651
} actcapi_ncpd;actcapi_ncpd128,5023
#define actcapi_ncpi 129,5039
#define MAKE_NCCI(MAKE_NCCI139,5239
#define EVAL_NCCI(EVAL_NCCI142,5347
#define MAKE_PLCI(MAKE_PLCI156,5676
#define EVAL_PLCI(EVAL_PLCI159,5756
typedef struct actcapi_msg actcapi_msg164,5864
} actcapi_msg;actcapi_msg370,10444
actcapi_nextsmsg(373,10493
#define DEBUG_MSG386,10699
#define actcapi_debug_msg(actcapi_debug_msg404,11539

drivers/isdn/act2000/module.c,932
static unsigned short isa_ports[53,1725
#define ISA_NRPORTS 58,1894
act2000_card *cards 60,1958
static int   act_bus 63,2041
static int   act_port 64,2069
static int   act_irq 65,2120
static char *act_id 66,2171
find_channel(83,2860
act2000_clear_msn(95,3112
act2000_find_msn(118,3591
act2000_find_eaz(141,3960
act2000_set_msn(160,4304
act2000_transmit(231,5766
act2000_receive(246,6054
act2000_poll(261,6343
act2000_command(276,6668
act2000_sendbuf(483,12501
act2000_readstatus(537,14122
act2000_putmsg(556,14749
act2000_logstat(573,15259
act2000_findcard(590,15612
if_command(606,15917
if_writecmd(619,16248
if_readstatus(634,16666
if_sendbuf(649,17120
act2000_alloccard(669,17633
act2000_registercard(725,19515
unregister_card(750,20174
act2000_addcard(772,20621
#define DRIVERNAME 883,23595
#define act2000_init 886,23659
act2000_init(890,23704
cleanup_module(904,24055
act2000_setup(925,24521

drivers/isdn/isdn_x25iface.c,598
#define MY_DEVNAME(MY_DEVNAME31,1118
typedef struct isdn_x25iface_proto_data isdn_x25iface_proto_data34,1192
} ix25_pdata_t;ix25_pdata_t41,1490
static struct concap_proto_ops ix25_pops 57,2074
static void illegal_state_warn(69,2377
static int pdata_is_bad(76,2610
struct concap_proto * isdn_x25iface_proto_new(86,2866
int isdn_x25iface_proto_close(107,3485
void isdn_x25iface_proto_del(137,4198
int isdn_x25iface_proto_restart(166,4983
int isdn_x25iface_receive(197,5865
int isdn_x25iface_connect_ind(219,6524
int isdn_x25iface_disconn_ind(251,7427
int isdn_x25iface_xmit(283,8373

drivers/isdn/isdn_concap.c,291
int isdn_concap_dl_data_req(47,1608
int isdn_concap_dl_connect_req(61,2049
int isdn_concap_dl_disconn_req(74,2391
struct concap_device_ops isdn_concap_reliable_dl_dops 82,2584
struct concap_device_ops isdn_concap_demand_dial_dops 88,2732
struct concap_proto * isdn_concap_new(101,3193

drivers/isdn/isdn_concap.h,135
extern struct concap_device_ops isdn_concap_reliable_dl_dops;3,63
extern struct concap_device_ops isdn_concap_demand_dial_dops;4,125

drivers/isdn/isdn_v110.c,724
char *isdn_v110_revision 39,1275
#define V110_38400 41,1323
#define V110_19200 42,1346
#define V110_9600 43,1369
static unsigned char V110_OnMatrix_9600[48,1518
static unsigned char V110_OffMatrix_9600[54,1808
static unsigned char V110_OnMatrix_19200[60,2099
static unsigned char V110_OffMatrix_19200[64,2268
static unsigned char V110_OnMatrix_38400[68,2438
static unsigned char V110_OffMatrix_38400[71,2546
FlipBits(82,2959
isdn_v110_open(106,3399
isdn_v110_close(152,4410
ValidHeaderBytes(175,5061
SyncHeader(187,5323
DecodeMatrix(213,6102
isdn_v110_decode(286,8942
EncodeMatrix(356,10955
isdn_v110_sync(444,13552
isdn_v110_idle(464,13989
isdn_v110_encode(481,14387
isdn_v110_stat_callback(549,16079

drivers/isdn/isdn_v110.h,30
#define _isdn_v110_h_27,1012

drivers/isdn/isdn_x25iface.h,223
#define _LINUX_ISDN_X25IFACE_H4,96
#define ISDN_X25IFACE_MAGIC 6,128
#   define IX25DEBUG(IX25DEBUG9,258
#   define IX25DEBUG(IX25DEBUG11,331
extern struct concap_proto_ops * isdn_x25iface_concap_proto_ops_pt;19,479

drivers/isdn/isdnloop/isdnloop.c,1385
*revision 45,1546
isdnloop_free_queue(57,1747
isdnloop_bchan_send(76,2201
isdnloop_pollbchan(117,3275
isdnloop_parse_setup(147,4123
typedef struct isdnloop_stat isdnloop_stat172,4724
} isdnloop_stat;isdnloop_stat176,4798
static isdnloop_stat isdnloop_stat_table[178,4834
isdnloop_parse_status(212,6392
isdnloop_putmsg(306,8678
isdnloop_polldchan(336,9586
isdnloop_sendbuf(429,11998
isdnloop_readstatus(471,12984
isdnloop_fake(501,13713
static isdnloop_stat isdnloop_cmd_table[517,14127
isdnloop_fake_err(550,15364
static u_char ctable_eu[559,15523
static u_char ctable_1t[561,15577
isdnloop_unicause(576,15982
isdnloop_atimeout(602,16514
isdnloop_atimeout0(625,17027
isdnloop_atimeout1(635,17202
isdnloop_start_ctimer(649,17478
isdnloop_kill_ctimer(674,18043
static u_char si2bit[684,18205
static u_char bit2si[686,18262
isdnloop_try_call(704,18754
isdnloop_vstphone(778,20354
isdnloop_parse_cmd(812,21054
isdnloop_writecmd(998,25482
isdnloop_stopcard(1045,26397
isdnloop_stopallcards(1069,26892
isdnloop_start(1091,27327
isdnloop_command(1152,28880
isdnloop_findcard(1407,35890
if_command(1423,36121
if_writecmd(1435,36365
if_readstatus(1450,36732
if_sendbuf(1465,37099
isdnloop_initcard(1486,37642
isdnloop_addcard(1536,39182
#define isdnloop_init 1555,39505
isdnloop_setup(1558,39550
isdnloop_init(1570,39690
cleanup_module(1590,40050

drivers/isdn/isdnloop/isdnloop.h,960
#define isdnloop_h33,1177
#define ISDNLOOP_IOCTL_DEBUGVAR 35,1197
#define ISDNLOOP_IOCTL_ADDCARD 36,1232
#define ISDNLOOP_IOCTL_LEASEDCFG 37,1267
#define ISDNLOOP_IOCTL_STARTUP 38,1302
typedef struct isdnloop_cdef isdnloop_cdef41,1372
} isdnloop_cdef;isdnloop_cdef43,1418
typedef struct isdnloop_sdef isdnloop_sdef46,1471
} isdnloop_sdef;isdnloop_sdef49,1532
#define ISDNLOOP_FLAGS_B1ACTIVE 75,2087
#define ISDNLOOP_FLAGS_B2ACTIVE 76,2157
#define ISDNLOOP_FLAGS_RUNNING 77,2227
#define ISDNLOOP_FLAGS_RBTIMER 78,2297
#define ISDNLOOP_TIMER_BCREAD 79,2367
#define ISDNLOOP_TIMER_DCREAD 80,2435
#define ISDNLOOP_TIMER_ALERTWAIT 81,2508
#define ISDNLOOP_MAX_SQUEUE 82,2585
#define ISDNLOOP_BCH 83,2655
typedef struct isdnloop_card isdnloop_card88,2755
} isdnloop_card;isdnloop_card120,4585
static isdnloop_card *cards 126,4648
static char *isdnloop_id 127,4699
#define CID 139,4947
#define MIN(MIN140,4980
#define MAX(MAX141,5009

drivers/sbus/dvma.c,123
struct Linux_SBus_DMA *dma_chain;17,352
dump_dma_regs(21,474
__initfunc(31,764
__initfunc(77,1783
__initfunc(135,3303

drivers/sbus/sbus.c,236
struct linux_sbus *SBus_chain;25,562
static struct linux_prom_irqs irqs[26,593
static struct linux_prom_irqs irqs[PROMINTR_MAX] __initdata 26,593
static char lbuf[28,667
__initfunc(44,1116
__initfunc(211,6739
__initfunc(241,7629

drivers/sbus/char/sunkbd.c,7957
#define SIZE(SIZE46,1013
#define KBD_MAJOR 53,1227
#define KBD_REPORT_ERR55,1249
#define KBD_REPORT_UNKN56,1272
#define KBD_DEFMODE 59,1317
#define KBD_DEFLEDS 67,1540
#define KBD_DEFLOCK 71,1590
struct l1a_kbd_state l1a_state 80,1800
void kbd_reset_setup(83,1902
struct wait_queue * keypress_wait 88,1969
int keyboard_wait_for_keypress(91,2019
static unsigned char k_down[104,2339
static unsigned long key_down[106,2412
int kbd_redirected 109,2498
static int dead_key_next 111,2523
/*static*/ int shift_state 118,2767
static int npadch 120,2806
static unsigned char diacr 121,2868
static char rep 122,2900
struct kbd_struct kbd_table[123,2959
static struct tty_struct **ttytab;124,3005
static struct kbd_struct * kbd 125,3040
static struct tty_struct * tty 126,3084
static int compose_led_on 127,3123
static int kbd_delay_ticks 128,3154
static int kbd_rate_ticks 129,3191
typedef void (*k_hand)k_hand133,3265
typedef void (k_handfn)k_handfn134,3324
	do_self,137,3401
	do_self, do_fn,137,3401
	do_self, do_fn, do_spec,137,3401
	do_self, do_fn, do_spec, do_pad,137,3401
	do_self, do_fn, do_spec, do_pad, do_dead,137,3401
	do_self, do_fn, do_spec, do_pad, do_dead, do_cons,137,3401
	do_self, do_fn, do_spec, do_pad, do_dead, do_cons, do_cur,137,3401
	do_self, do_fn, do_spec, do_pad, do_dead, do_cons, do_cur, do_shift,137,3401
	do_meta,138,3471
	do_meta, do_ascii,138,3471
	do_meta, do_ascii, do_lock,138,3471
	do_meta, do_ascii, do_lock, do_lowercase,138,3471
	do_meta, do_ascii, do_lock, do_lowercase, do_ignore;138,3471
static k_hand key_handler[140,3526
typedef void (*void_fnp)void_fnp146,3721
typedef void (void_fn)void_fn147,3753
static void_fn do_null,149,3784
static void_fn do_null, enter,149,3784
static void_fn do_null, enter, show_ptregs,149,3784
static void_fn do_null, enter, show_ptregs, send_intr,149,3784
static void_fn do_null, enter, show_ptregs, send_intr, lastcons,149,3784
static void_fn do_null, enter, show_ptregs, send_intr, lastcons, caps_toggle,149,3784
	num,150,3862
	num, hold,150,3862
	num, hold, scroll_forw,150,3862
	num, hold, scroll_forw, scroll_back,150,3862
	num, hold, scroll_forw, scroll_back, boot_it,150,3862
	num, hold, scroll_forw, scroll_back, boot_it, caps_on,150,3862
	num, hold, scroll_forw, scroll_back, boot_it, caps_on, compose,150,3862
	SAK,151,3927
	SAK, decr_console,151,3927
	SAK, decr_console, incr_console,151,3927
	SAK, decr_console, incr_console, spawn_console,151,3927
	SAK, decr_console, incr_console, spawn_console, bare_num;151,3927
static void_fnp spec_fn_table[153,3987
const int max_vals[163,4309
const int NR_TYPES 170,4490
static struct pt_regs * pt_regs;177,4681
unsigned char sun_sysrq_xlate[180,4741
volatile unsigned char sunkbd_layout;191,5217
volatile unsigned char sunkbd_type;192,5255
#define SUNKBD_TYPE2 193,5291
#define SUNKBD_TYPE3 194,5324
#define SUNKBD_TYPE4 195,5357
#define SUNKBD_LOUT_TYP4 197,5391
#define SUNKBD_LOUT_TYP5_MASK 198,5425
volatile int kbd_reset_pending;200,5463
volatile int kbd_layout_pending;201,5495
#define SKBDCMD_RESET 204,5544
#define SKBDCMD_GLAYOUT 205,5576
#define SKBDCMD_BELLON 206,5608
#define SKBDCMD_BELLOFF 207,5640
#define SKBDCMD_SETLED 208,5672
#define SKBDCMD_NOCLICK 209,5704
#define SKBDCMD_CLICK 210,5736
static unsigned char sunkbd_clickp;212,5769
#define LED_NLOCK 218,5964
#define LED_CMPOSE 219,6013
#define LED_SCRLCK 220,6061
#define LED_CLOCK 221,6113
#define SKBD_RESET 224,6195
#define SKBD_ALLUP 225,6228
#define SKBD_LYOUT 226,6261
#define SUNKBD_UBIT 237,6663
#define SUNKBD_KMASK 238,6723
#define KEY_LSHIFT 240,6791
#define KEY_RSHIFT 241,6820
#define KEY_CONTROL 242,6849
#define KEY_NILL 243,6878
#define KEY_CAPSLOCK 244,6907
#define KEY_ALT 245,6936
#define KEY_L1 246,6965
static void nop_kbd_put_char(262,7497
static inline void send_cmd(265,7611
static inline unsigned char vcleds_to_sunkbd(275,7906
#define E0_KPENTER 300,8523
#define E0_RCTRL 301,8545
#define E0_KPSLASH 302,8567
#define E0_PRSCR 303,8589
#define E0_RALT 304,8611
#define E0_BREAK 305,8634
#define E0_HOME 306,8680
#define E0_UP 307,8703
#define E0_PGUP 308,8726
#define E0_LEFT 309,8749
#define E0_RIGHT 310,8772
#define E0_END 311,8795
#define E0_DOWN 312,8818
#define E0_PGDN 313,8841
#define E0_INS 314,8864
#define E0_DEL 315,8887
#define E1_PAUSE 317,8911
#define SC_LIM 326,9292
#define FOCUS_PF1 328,9311
#define FOCUS_PF2 329,9361
#define FOCUS_PF3 330,9382
#define FOCUS_PF4 331,9403
#define FOCUS_PF5 332,9424
#define FOCUS_PF6 333,9445
#define FOCUS_PF7 334,9466
#define FOCUS_PF8 335,9487
#define FOCUS_PF9 336,9508
#define FOCUS_PF10 337,9530
#define FOCUS_PF11 338,9553
#define FOCUS_PF12 339,9576
#define JAP_86 341,9600
#define RGN1 348,9835
#define RGN2 349,9852
#define RGN3 350,9869
#define RGN4 351,9886
static unsigned char high_keys[353,9904
#define E0_MACRO 363,10381
#define E0_F13 365,10416
#define E0_F14 366,10439
#define E0_HELP 367,10462
#define E0_DO 368,10485
#define E0_F17 369,10508
#define E0_KPMINPLUS 370,10531
#define E0_OK	375,10675
#define E0_MSLW	382,10899
#define E0_MSRW	383,10919
#define E0_MSTM	384,10939
static unsigned char e0_keys[386,10960
static unsigned char norepeat_keys[408,12121
int sun_setkeycode(420,12698
int sun_getkeycode(431,12964
auto_repeat_timer 443,13293
static unsigned char last_keycode;446,13394
keyboard_timer 449,13442
void sunkbd_inchar(467,13873
static void put_queue(618,17531
static void puts_queue(627,17669
static void applkey(640,17843
static void enter(649,18000
static void caps_toggle(656,18093
static void caps_on(663,18183
static void show_ptregs(670,18269
static void hold(676,18340
static void num(692,18640
static void bare_num(706,18961
static void lastcons(712,19038
static void decr_console(718,19142
static void incr_console(731,19335
static void send_intr(744,19524
static void scroll_forw(752,19645
static void scroll_back(757,19697
static void boot_it(762,19748
static void compose(773,19933
int spawnpid,780,20018
int spawnpid, spawnsig;780,20018
static void spawn_console(782,20043
static void SAK(789,20163
static void do_ignore(807,20571
static void do_null(811,20633
static void do_spec(816,20687
static void do_lowercase(825,20841
static void do_self(830,20969
#define A_GRAVE 850,21275
#define A_ACUTE 851,21296
#define A_CFLEX 852,21318
#define A_TILDE 853,21339
#define A_DIAER 854,21360
#define A_CEDIL 855,21381
static unsigned char ret_diacr[856,21402
static void do_dead(862,21626
unsigned char handle_diacr(880,21974
static void do_cons(898,22262
static void do_fn(905,22367
static void do_pad(916,22598
static void do_cur(973,23862
static void do_shift(982,24042
void sun_compute_shiftstate(1020,24953
static void do_meta(1045,25491
static void do_ascii(1057,25686
static void do_lock(1077,26055
static unsigned char ledstate 1090,26398
static unsigned char sunkbd_ledstate 1091,26452
static unsigned char ledioctl;1092,26513
unsigned char sun_getledstate(1094,26545
void sun_setledstate(1098,26607
static struct ledptr ledptr1107,26806
} ledptrs[1111,26903
void register_leds(1113,26918
static inline unsigned char getleds(1125,27238
static void kbd_bh(1168,28439
static void sunkbd_kd_nosound(1184,28798
static void sunkbd_kd_mksound(1195,29131
__initfunc(1220,29624
#define KBD_QSIZE 1259,30534
static Firm_event kbd_queue 1260,30555
static int kbd_head,1261,30596
static int kbd_head, kbd_tail;1261,30596
char kbd_opened;1262,30627
static int kbd_active 1263,30644
static struct wait_queue *kbd_wait;1264,30671
static struct fasync_struct *kb_fasync;1265,30707
push_kbd 1268,30753
kbd_read 1286,31150
static int kbd_fasync 1333,32565
static unsigned int kbd_poll 1343,32739
kbd_ioctl 1352,32919
kbd_open 1463,35453
kbd_close 1476,35625
file_operations kbd_fops 1492,35863
__initfunc(1510,36228

drivers/sbus/char/sunserial.c,937
int serial_console;21,464
__initfunc(23,485
__initfunc(28,559
static void nop_rs_change_mouse_baud(34,662
static int nop_rs_read_proc(39,758
struct sunserial_operations rs_ops 46,923
int rs_init(53,1034
__initfunc(66,1201
__initfunc(72,1280
void rs_change_mouse_baud(77,1374
int rs_read_proc(82,1451
int register_serial(88,1611
void unregister_serial(93,1675
static void nop_compute_shiftstate 98,1714
static void nop_setledstate 103,1805
static unsigned char nop_getledstate 108,1930
static int nop_setkeycode 114,2034
static int nop_getkeycode 120,2172
struct sunkbd_operations kbd_ops 126,2288
int kbd_init(135,2427
void compute_shiftstate 148,2597
void setledstate 153,2664
unsigned char getledstate 158,2771
int setkeycode 163,2840
int getkeycode 168,2953
sunserial_setinitfunc(174,3040
sunserial_console_termios(188,3367
sunkbd_setinitfunc(296,5706
sunkbd_install_keymaps(311,6057
__initfunc(355,7255

drivers/sbus/char/zs.c,3837
static int num_serial 49,1099
#define NUM_SERIAL 50,1171
#define NUM_CHANNELS 51,1201
#define KEYBOARD_LINE 53,1240
#define MOUSE_LINE 54,1266
#define ZSDELAY(ZSDELAY62,1526
#define ZSDELAY_LONG(ZSDELAY_LONG63,1555
#define ZS_WSYNC(ZS_WSYNC64,1590
#define ZSDELAY(ZSDELAY66,1638
#define ZSDELAY_LONG(ZSDELAY_LONG67,1656
#define ZS_WSYNC(ZS_WSYNC68,1679
struct sun_zslayout **zs_chips;72,1778
struct sun_zschannel **zs_channels;73,1810
struct sun_zschannel *zs_mousechan;74,1846
struct sun_zschannel *zs_kbdchan;75,1882
struct sun_zschannel *zs_kgdbchan;76,1916
int *zs_nodes;77,1951
struct sun_serial *zs_soft;79,1967
struct sun_serial *zs_chain;80,1995
int zilog_irq;81,2051
struct tty_struct *zs_ttys;83,2067
static struct console zs_console;87,2148
static unsigned char kgdb_regs[96,2352
static unsigned char zscons_regs[110,2920
#define ZS_CLOCK 126,3575
static struct tty_driver serial_driver,130,3672
static struct tty_driver serial_driver, callout_driver;130,3672
static int serial_refcount;131,3728
#define SERIAL_TYPE_NORMAL	134,3790
#define SERIAL_TYPE_CALLOUT	135,3819
#define WAKEUP_CHARS 138,3922
#define SERIAL_DO_RESTART140,3948
#define RS_STROBE_TIME 149,4143
#define RS_ISR_PASS_LIMIT 150,4169
#define _INLINE_ 152,4200
static struct tty_struct **serial_table;159,4328
static struct termios **serial_termios;160,4369
static struct termios **serial_termios_locked;161,4409
#define MIN(MIN164,4469
static unsigned char tmp_buf[176,4995
static struct semaphore tmp_buf_sem 177,5054
static inline int serial_paranoia_check(179,5100
static int baud_table[203,5706
static inline unsigned char read_zsreg(213,6125
static inline void write_zsreg(225,6347
static inline void load_zsregs(234,6540
#define ZS_PUT_CHAR_MAX_DELAY	280,7863
static inline void zs_put_char(282,7911
static inline void zs_rtsdtr(299,8322
static inline void kgdb_chaninit(315,8661
static void zs_stop(340,9316
static void zs_start(356,9696
void batten_down_hatches(375,10221
static _INLINE_ void zs_sched_event(426,11770
static _INLINE_ void receive_chars(438,12037
static _INLINE_ void transmit_chars(518,13910
static _INLINE_ void status_handle(552,14682
static _INLINE_ void special_receive(591,15673
void zs_interrupt(628,16435
static void do_serial_bh(710,18893
static void do_softint(715,18958
static void do_serial_hangup(741,19640
static void zs_timer(764,20173
static int startup(771,20258
static void shutdown(863,22326
static void change_speed(893,22963
static void kbd_put_char(1005,25550
void mouse_put_char(1018,25759
void putDebugChar(1034,26058
char getDebugChar(1044,26236
static void zs_flush_chars(1053,26380
static int zs_write(1087,27389
static int zs_write_room(1144,28868
static int zs_chars_in_buffer(1157,29159
static void zs_flush_buffer(1166,29390
static void zs_throttle(1189,30089
static void zs_unthrottle(1212,30607
static int get_serial_info(1245,31345
static int set_serial_info(1266,31881
static int get_lsr_info(1324,33664
static int get_modem_info(1336,33878
static int set_modem_info(1354,34334
static void send_break(1390,35106
static int zs_ioctl(1402,35404
static void zs_set_termios(1470,37332
static void zs_close(1496,38104
void zs_hangup(1599,41122
static int block_til_ready(1628,41831
int zs_open(1770,45500
static void show_serial_version(1845,47344
__initfunc(1865,47919
__initfunc(1974,51117
void zs_change_mouse_baud(2104,54636
__initfunc(2116,54978
static inline void zs_prepare(2215,57868
__initfunc(2269,59348
__initfunc(2543,68509
zs_console_putchar(2571,69363
static void zs_fair_output(2590,69769
zs_console_write(2626,70480
zs_console_wait_key(2645,70891
static kdev_t zs_console_device(2651,70975
__initfunc(2656,71076
static struct console zs_console 2724,72528
__initfunc(2738,72705

drivers/sbus/char/sunkeymap.c,467
u_short plain_map[8,207
u_short shift_map[27,1282
u_short altgr_map[46,2357
u_short ctrl_map[65,3432
u_short shift_ctrl_map[84,4506
u_short alt_map[103,5586
u_short ctrl_alt_map[122,6659
ushort *key_maps[141,7737
unsigned int keymap_count 148,7884
char func_buf[156,8129
char *funcbufptr 187,9002
int funcbufsize 188,9031
int funcbufleft 189,9067
char *func_table[191,9115
struct kbdiacr accent_table[225,9621
unsigned int accent_table_size 262,11074

drivers/sbus/char/sunmouse.c,961
#define STREAM_SIZE 59,1966
#define EV_SIZE 60,1993
#define BUTTON_LEFT 61,2049
#define BUTTON_MIDDLE 62,2073
#define BUTTON_RIGHT 63,2097
struct sun_mouse sun_mouse65,2122
static struct sun_mouse sunmouse;88,2896
#define gen_events 89,2930
#define bstate 90,2985
#define pstate 91,3022
push_event 98,3129
queue_empty 109,3317
get_from_queue 115,3401
push_char 125,3573
static int mouse_bogon_bytes 143,3982
static int mouse_baud_changing 144,4016
static int mouse_baud 145,4092
void sun_mouse_change_baud(148,4231
void mouse_baud_detection(161,4452
sun_mouse_inbyte(196,5153
sun_mouse_open(320,7745
static int sun_mouse_fasync 332,8019
sun_mouse_close(343,8216
sun_mouse_write(353,8393
sun_mouse_read(360,8533
static unsigned int sun_mouse_poll(421,10219
sun_mouse_ioctl 429,10405
struct file_operations sun_mouse_fops 468,11340
static struct miscdevice sun_mouse_mouse 483,11558
__initfunc(487,11653
sun_mouse_zsinit(504,12009

drivers/sbus/char/sunserial.h,308
#define _SPARC_SUNSERIAL_H 8,218
struct initfunc initfunc16,375
struct sunserial_operations sunserial_operations21,443
struct sunkbd_operations sunkbd_operations28,640
extern struct sunserial_operations rs_ops;37,919
extern struct sunkbd_operations kbd_ops;38,962
extern int serial_console;43,1138

drivers/sbus/char/rtc.c,386
static int rtc_busy 27,734
void get_rtc_time(30,827
void set_rtc_time(52,1356
static long long rtc_lseek(73,1842
static int rtc_ioctl(78,1940
static int rtc_open(108,2450
static int rtc_release(120,2596
static struct file_operations rtc_fops 127,2710
static struct miscdevice rtc_dev 140,2944
EXPORT_NO_SYMBOLS;142,3013
int init_module(145,3047
void cleanup_module(162,3278

drivers/sbus/char/envctrl.c,1373
#define ENVCTRL_MINOR	20,468
#define PCF8584_ADDRESS	26,520
#define CONTROL_PIN	28,550
#define CONTROL_ES0	29,575
#define CONTROL_ES1	30,600
#define CONTROL_ES2	31,625
#define CONTROL_ENI	32,650
#define CONTROL_STA	33,675
#define CONTROL_STO	34,700
#define CONTROL_ACK	35,725
#define STATUS_PIN	37,751
#define STATUS_STS	38,775
#define STATUS_BER	39,799
#define STATUS_LRB	40,823
#define STATUS_AD0	41,847
#define STATUS_AAB	42,871
#define STATUS_LAB	43,895
#define STATUS_BB	44,919
#define BUS_CLK_90	49,972
#define BUS_CLK_45	50,996
#define BUS_CLK_11	51,1020
#define BUS_CLK_1_5	52,1044
#define CLK_3	54,1070
#define CLK_4_43	55,1090
#define CLK_6	56,1112
#define CLK_8	57,1132
#define CLK_12	58,1152
#define I2C_WRITE	61,1175
#define I2C_READ	62,1198
struct pcf8584_regpcf8584_reg64,1221
static struct pcf8584_reg *i2c;70,1313
struct i2c_addr_map i2c_addr_map74,1369
static struct i2c_addr_map devmap[80,1450
#define NR_DEVMAP 85,1578
PUT_DATA(89,1663
GET_DATA(101,1863
i2c_read(113,2058
i2c_write(175,3143
__initfunc(211,3769
envctrl_llseek(237,4298
envctrl_read(243,4394
envctrl_write(251,4582
envctrl_ioctl(259,4774
envctrl_open(284,5255
envctrl_release(292,5380
static struct file_operations envctrl_fops 298,5472
static struct miscdevice envctrl_dev 311,5700
int init_module(318,5802
void cleanup_module(376,7094

drivers/sbus/char/flash.c,331
} flash;30,696
#define FLASH_MINOR	32,706
flash_mmap(35,742
flash_llseek(79,1771
flash_read(100,2144
flash_open(116,2448
flash_release(126,2616
static struct file_operations flash_fops 133,2723
static struct miscdevice flash_dev 148,3011
EXPORT_NO_SYMBOLS;150,3088
int init_module(153,3122
void cleanup_module(245,5634

drivers/sbus/char/openprom.c,762
#define PROMLIB_INTERNAL32,1337
typedef struct openprom_private_dataopenprom_private_data49,1732
} DATA;DATA53,1885
static int options_node 56,1958
static int copyin(65,2296
static int getstrings(89,2813
static int copyout(123,3497
static int openprom_sunos_ioctl(132,3676
static int intree(266,6635
static int goodnode(275,6859
static int copyin_string(286,7144
static int openprom_bsd_ioctl(309,7452
static int openprom_ioctl(472,10656
static long long openprom_lseek(529,12022
static int openprom_open(534,12126
static int openprom_release(551,12436
static struct file_operations openprom_fops 558,12586
static struct miscdevice openprom_dev 571,12876
EXPORT_NO_SYMBOLS;575,12970
int init_module(578,13004
void cleanup_module(607,13589

drivers/sbus/char/pcikbd.c,3940
#define	PCI_KB_NAME	34,858
#define PCI_MS_NAME	35,887
#define PCI_KB_NAME	37,923
#define PCI_MS_NAME	38,954
static int pcikbd_mrcoffee 45,1055
#define pcikbd_mrcoffee 47,1093
static unsigned long pcikbd_iobase 50,1127
static unsigned int pcikbd_irq 51,1167
static volatile unsigned char reply_expected 54,1261
static volatile unsigned char acknowledge 55,1311
static volatile unsigned char resend 56,1358
unsigned char pckbd_read_mask 58,1401
static __inline__ unsigned char pcikbd_inb(69,1746
static __inline__ void pcikbd_outb(74,1833
static __inline__ unsigned char pcikbd_inb(81,1937
static __inline__ void pcikbd_outb(86,2046
static inline void kb_wait(93,2173
#define E0_KPENTER 113,2664
#define E0_RCTRL 114,2686
#define E0_KPSLASH 115,2708
#define E0_PRSCR 116,2730
#define E0_RALT 117,2752
#define E0_BREAK 118,2775
#define E0_HOME 119,2821
#define E0_UP 120,2844
#define E0_PGUP 121,2867
#define E0_LEFT 122,2890
#define E0_RIGHT 123,2913
#define E0_END 124,2936
#define E0_DOWN 125,2959
#define E0_PGDN 126,2982
#define E0_INS 127,3005
#define E0_DEL 128,3028
#define E1_PAUSE 130,3052
#define SC_LIM 139,3433
#define FOCUS_PF1 141,3452
#define FOCUS_PF2 142,3502
#define FOCUS_PF3 143,3523
#define FOCUS_PF4 144,3544
#define FOCUS_PF5 145,3565
#define FOCUS_PF6 146,3586
#define FOCUS_PF7 147,3607
#define FOCUS_PF8 148,3628
#define FOCUS_PF9 149,3649
#define FOCUS_PF10 150,3671
#define FOCUS_PF11 151,3694
#define FOCUS_PF12 152,3717
#define JAP_86 154,3741
#define RGN1 161,3976
#define RGN2 162,3993
#define RGN3 163,4010
#define RGN4 164,4027
static unsigned char high_keys[166,4045
#define E0_MACRO 176,4522
#define E0_F13 178,4557
#define E0_F14 179,4580
#define E0_HELP 180,4603
#define E0_DO 181,4626
#define E0_F17 182,4649
#define E0_KPMINPLUS 183,4672
#define E0_OK	188,4816
#define E0_MSLW	195,5040
#define E0_MSRW	196,5060
#define E0_MSTM	197,5080
static unsigned char e0_keys[199,5101
unsigned char pcikbd_sysrq_xlate[221,6163
static unsigned int prev_scancode 231,6592
int pcikbd_setkeycode(233,6632
int pcikbd_getkeycode(244,6896
int do_acknowledge(252,7085
int pcikbd_pretranslate(272,7415
int pcikbd_translate(285,7641
char pcikbd_unexpected_up(319,8365
pcikbd_interrupt(328,8504
static int send_data(347,9019
void pcikbd_leds(368,9393
__initfunc(375,9521
__initfunc(392,9926
static unsigned long pcibeep_iobase 404,10166
static void pcikbd_kd_nosound(407,10277
static void pcikbd_kd_mksound(418,10608
static void nop_kd_mksound(438,11036
__initfunc(444,11170
__initfunc(487,12486
static unsigned long pcimouse_iobase 591,15172
static unsigned int pcimouse_irq;592,15214
#define AUX_BUF_SIZE	594,15249
struct aux_queue aux_queue596,15276
static struct aux_queue *queue;604,15437
static int aux_ready 605,15469
static int aux_count 606,15495
static int aux_present 607,15521
static __inline__ unsigned char pcimouse_inb(611,15571
static __inline__ void pcimouse_outb(616,15660
static __inline__ unsigned char pcimouse_inb(623,15766
static __inline__ void pcimouse_outb(628,15877
static unsigned int get_from_queue(639,16036
static inline int queue_empty(653,16283
static int aux_fasync(658,16360
#define AUX_INTS_OFF	672,16563
#define AUX_INTS_ON	675,16665
#define MAX_RETRIES	678,16762
static int poll_aux_status(684,16853
static void aux_write_dev(704,17328
__initfunc(717,17635
static void aux_write_cmd(731,17918
static struct semaphore aux_sema4 750,18628
static inline void aux_start_atomic(752,18672
static inline void aux_end_atomic(758,18764
void pcimouse_interrupt(769,18957
static int aux_release(789,19493
static int aux_open(814,19958
static ssize_t aux_write(848,20667
static ssize_t aux_read(887,21369
static unsigned int aux_poll(922,22165
struct file_operations psaux_fops 930,22337
static struct miscdevice psaux_mouse 945,22560
__initfunc(949,22643
__initfunc(1030,24771

drivers/sbus/char/sab82532.c,3167
static struct tty_driver serial_driver,39,883
static struct tty_driver serial_driver, callout_driver;39,883
static int sab82532_refcount;40,939
#define WAKEUP_CHARS 43,1040
#define SERIAL_PARANOIA_CHECK45,1066
#define SERIAL_DO_RESTART46,1096
#define BASE_BAUD 68,1649
static struct sab82532 *sab82532_chain 70,1686
static struct tty_struct *sab82532_table[71,1730
static struct termios *sab82532_termios[72,1782
static struct termios *sab82532_termios_locked[73,1833
extern int serial_console;76,1921
static struct console sab82532_console;77,1948
#define MIN(MIN82,2048
static char *sab82532_version[85,2097
static char serial_version[91,2308
static unsigned char *tmp_buf 102,2821
static struct semaphore tmp_buf_sem 103,2856
static inline int serial_paranoia_check(105,2902
struct ebrg_struct ebrg_struct136,3672
static struct ebrg_struct ebrg_table[142,3724
#define NR_EBRG_VALUES	170,4320
#define SAB82532_MAX_TEC_DELAY	172,4392
static __inline__ void sab82532_tec_wait(174,4440
static __inline__ void sab82532_start_tx(181,4620
static void sab82532_stop(221,5565
static void sab82532_start(235,5920
static void batten_down_hatches(250,6307
static inline void sab82532_sched_event(313,8199
static inline void receive_chars(320,8367
static inline void transmit_chars(406,10364
static inline void check_status(456,11594
static void sab82532_interrupt(569,14332
static void do_serial_bh(647,16769
static void do_softint(652,16834
static void do_serial_hangup(678,17516
sab82532_init_line(691,17717
static int startup(752,19262
static void shutdown(829,20915
static void change_speed(901,22832
#define RELEVANT_IFLAG(RELEVANT_IFLAG985,24729
static void sab82532_put_char(1022,25744
static void sab82532_flush_chars(1045,26261
static int sab82532_write(1064,26755
static int sab82532_write_room(1119,28081
static int sab82532_chars_in_buffer(1132,28380
static void sab82532_flush_buffer(1141,28623
static void sab82532_send_xchar(1160,29152
static void sab82532_throttle(1182,29765
static void sab82532_unthrottle(1203,30275
static int get_serial_info(1235,31018
static int set_serial_info(1259,31636
static int get_lsr_info(1276,32196
static int get_modem_info(1285,32393
static int set_modem_info(1299,32920
static void sab82532_break(1350,34060
static int sab82532_ioctl(1373,34601
static void sab82532_set_termios(1484,37944
static void sab82532_close(1545,39826
static void sab82532_wait_until_sent(1646,42701
static void sab82532_hangup(1691,44108
static int block_til_ready(1715,44707
static int sab82532_open(1854,48523
line_info(1964,50847
int sab82532_read_proc(2037,52553
__initfunc(2069,53415
__initfunc(2130,54825
__initfunc(2137,54963
__initfunc(2152,55324
__initfunc(2280,59434
int init_module(2332,60602
void cleanup_module(2340,60695
sab82532_console_putchar(2377,61677
sab82532_console_write(2388,61873
sab82532_console_wait_key(2409,62253
sab82532_console_device(2416,62357
sab82532_console_setup(2422,62461
static struct console sab82532_console 2551,65603
__initfunc(2565,65810
static int serial_log_device 2584,66161
dprint_init(2587,66208
dprintf(2597,66395

drivers/sbus/char/su.c,2796
#define SERIAL_PARANOIA_CHECK14,384
#define CONFIG_SERIAL_NOPAUSE_IO	15,414
#define SERIAL_DO_RESTART16,469
#define RS_ISR_PASS_LIMIT 26,672
#define IRQ_4M(IRQ_4M32,788
#define DBG_CNT(DBG_CNT35,870
#define DBG_CNT(DBG_CNT42,1094
#define BAUD_BASE	87,2080
extern int serial_console;90,2143
static struct console sercons;91,2170
struct su_struct su_struct100,2420
static char *serial_name 148,3566
static char serial_version[149,3615
static struct tty_driver serial_driver,153,3687
static struct tty_driver serial_driver, callout_driver;153,3687
static int serial_refcount;154,3743
#define WAKEUP_CHARS 157,3842
static struct serial_uart_config uart_config[167,4139
#define NR_PORTS	182,4544
static struct su_struct su_table[184,4564
static struct tty_struct *serial_table[185,4608
static struct termios *serial_termios[186,4658
static struct termios *serial_termios_locked[187,4707
#define MIN(MIN190,4776
static unsigned char *tmp_buf;202,5303
static struct semaphore tmp_buf_sem 203,5334
static inline int serial_paranoia_check(205,5380
unsigned int su_inb(229,5915
su_outb(235,6039
unsigned int su_inb(243,6165
su_outb(249,6329
#define serial_in(serial_in265,6942
#define serial_inp(serial_inp266,6990
#define serial_out(serial_out267,7039
#define serial_outp(serial_outp268,7098
static void su_stop(278,7459
static void su_start(294,7823
su_sched_event(336,9220
receive_kbd_ms_chars(344,9387
receive_serial_chars(379,10514
transmit_chars(467,12699
check_modem_status(511,13654
su_kbd_ms_interrupt(583,15491
su_serial_interrupt(613,16108
static void do_serial_bh(671,17691
static void do_softint(676,17756
startup(703,18555
shutdown(864,22287
su_get_baud_rate(924,23848
change_speed(951,24410
#define RELEVANT_IFLAG(RELEVANT_IFLAG1058,27303
su_put_char(1108,28867
static void su_put_char_kbd(1131,29362
su_change_mouse_baud(1150,29662
su_flush_chars(1183,30215
su_write(1202,30652
su_write_room(1273,32288
su_chars_in_buffer(1287,32577
su_flush_buffer(1297,32811
su_send_xchar(1318,33386
su_throttle(1345,34061
su_unthrottle(1371,34639
get_lsr_info(1415,35891
get_modem_info(1430,36211
set_modem_info(1454,36918
su_break(1515,38282
su_ioctl(1536,38774
su_set_termios(1633,41654
su_close(1698,43595
su_wait_until_sent(1800,46523
su_hangup(1856,48137
block_til_ready(1878,48679
su_open(2019,52484
line_info(2114,54541
int su_read_proc(2179,56119
__initfunc(2216,57055
autoconfig(2236,57698
__initfunc(2415,62372
__initfunc(2510,65428
__initfunc(2544,66120
#define BOTH_EMPTY 2702,70003
wait_for_xmitr(2708,70137
serial_console_write(2725,70454
serial_console_wait_key(2768,71225
serial_console_device(2799,71749
__initfunc(2810,72040
static struct console sercons 2916,74048
__initfunc(2933,74266

drivers/sbus/char/bpp.c,4156
#define BPP_PROBE_CODE 42,921
#define BPP_DELAY 43,949
static const unsigned  BPP_MAJOR 45,972
static const char* dev_name 46,1017
static const unsigned char DEFAULT_ECP 52,1203
static const unsigned char DEFAULT_NIBBLE 53,1250
static const unsigned long TIME_PSetup 59,1366
static const unsigned long TIME_PResponse 60,1410
static const unsigned long TIME_IDLE_LIMIT 61,1457
# define BPP_NO 66,1559
enum IEEE_Mode IEEE_Mode68,1578
enum IEEE_Mode { COMPATIBILITY,68,1578
enum IEEE_Mode { COMPATIBILITY, NIBBLE,68,1578
enum IEEE_Mode { COMPATIBILITY, NIBBLE, ECP,68,1578
enum IEEE_Mode { COMPATIBILITY, NIBBLE, ECP, ECP_RLE,68,1578
enum IEEE_Mode { COMPATIBILITY, NIBBLE, ECP, ECP_RLE, EPP 68,1578
struct inst inst70,1640
static struct inst instances[88,2292
const unsigned short base_addrs[92,2354
#define bpp_outb_p(bpp_outb_p99,2593
#define bpp_inb(bpp_inb100,2648
#define bpp_inb_p(bpp_inb_p101,2681
static void set_pins(109,2941
static unsigned short get_pins(123,3358
struct bpp_regs bpp_regs150,4086
#define P_DEV_ID_MASK 167,4786
#define P_DEV_ID_ZEBRA 168,4836
#define P_DEV_ID_L64854 169,4871
#define P_NA_LOADED 170,4950
#define P_A_LOADED 171,5029
#define P_DMA_ON 172,5080
#define P_EN_NEXT 173,5151
#define P_TCI_DIS 174,5202
#define P_DIAG 175,5283
#define P_BURST_SIZE 177,5444
#define P_BURST_8 178,5511
#define P_BURST_4 179,5546
#define P_BURST_1 180,5581
#define P_TC 181,5649
#define P_EN_CNT 183,5787
#define P_EN_DMA 184,5838
#define P_WRITE 185,5889
#define P_RESET 186,5969
#define P_SLAVE_ERR 187,6020
#define P_INVALIDATE 188,6089
#define P_INT_EN 189,6152
#define P_DRAINING 190,6232
#define P_ERR_PEND 191,6312
#define P_INT_PEND 192,6363
#define P_HCR_TEST 195,6465
#define P_HCR_DSW 196,6541
#define P_HCR_DDS 197,6612
#define P_OCR_MEM_CLR 200,6704
#define P_OCR_DATA_SRC 201,6735
#define P_OCR_DS_DSEL 202,6796
#define P_OCR_BUSY_DSEL 203,6860
#define P_OCR_ACK_DSEL 204,6926
#define P_OCR_EN_DIAG 205,6987
#define P_OCR_BUSY_OP 206,7018
#define P_OCR_ACK_OP 207,7075
#define P_OCR_SRST 208,7131
#define P_OCR_IDLE 209,7213
#define P_OCR_V_ILCK 210,7294
#define P_OCR_EN_VER 211,7364
#define P_TCR_DIR 214,7461
#define P_TCR_BUSY 215,7490
#define P_TCR_ACK 216,7519
#define P_TCR_DS 217,7548
#define P_OR_V3 220,7609
#define P_OR_V2 221,7669
#define P_OR_V1 222,7729
#define P_OR_INIT 223,7789
#define P_OR_AFXN 224,7818
#define P_OR_SLCT_IN 225,7870
#define P_IR_PE 228,7911
#define P_IR_SLCT 229,7940
#define P_IR_ERR 230,7969
#define P_DS_IRQ 233,8011
#define P_ACK_IRQ 234,8058
#define P_BUSY_IRQ 235,8105
#define P_PE_IRQ 236,8152
#define P_SLCT_IRQ 237,8199
#define P_ERR_IRQ 238,8246
#define P_DS_IRQ_EN 239,8293
#define P_ACK_IRQ_EN 240,8362
#define P_BUSY_IRP 241,8431
#define P_BUSY_IRQ_EN 242,8493
#define P_PE_IRP 243,8540
#define P_PE_IRQ_EN 244,8602
#define P_SLCT_IRP 245,8649
#define P_SLCT_IRQ_EN 246,8711
#define P_ERR_IRP 247,8758
#define P_ERR_IRQ_EN 248,8820
volatile struct bpp_regs *base_addrs[250,8868
static inline void bpp_outb_p(252,8915
#define bpp_inb_p(bpp_inb_p256,9017
static inline __u8 bpp_inb(258,9057
static void set_pins(263,9146
static unsigned short get_pins(284,9864
static inline void bpp_snap(308,10725
static void bpp_wake_up(317,10948
static void snooze(320,11033
static int wait_for(328,11316
static int negotiate(369,12631
static int terminate(413,14035
static int bpp_open(455,15182
static int bpp_release(473,15735
static long read_nibble(483,15971
static long read_ecp(535,17797
static ssize_t bpp_read(628,20821
static long write_compat(690,22466
static long write_ecp(727,23369
static ssize_t bpp_write(779,24790
static int bpp_ioctl(803,25417
static struct file_operations bpp_fops 854,26614
#define collectLptPorts(collectLptPorts874,26990
static void probeLptPort(876,27021
static inline void freeLptPort(935,29057
static volatile struct bpp_regs *map_bpp(944,29176
static int collectLptPorts(968,29970
static void probeLptPort(990,30402
static inline void freeLptPort(1044,31980
int init_module(1052,32119
void cleanup_module(1077,32475

drivers/sbus/char/vfc_dev.c,1069
#define VFC_MAJOR 35,943
#define VFC_IOCTL_DEBUG38,973
struct vfc_dev **vfc_dev_lst;44,1051
static char vfcstr[45,1081
static unsigned char saa9051_init_array[46,1109
void vfc_lock_device(52,1254
void vfc_unlock_device(56,1331
void vfc_captstat_reset(61,1409
void vfc_memptr_reset(72,1716
int vfc_csr_init(83,2022
int vfc_saa9051_init(105,2503
int init_vfc_hw(116,2743
int init_vfc_devstruct(129,3003
int init_vfc_device(139,3189
struct vfc_dev *vfc_get_dev_ptr(165,4062
static int vfc_open(170,4145
static void vfc_release(191,4572
static int vfc_debug(202,4792
int vfc_capture_start(270,6243
int vfc_capture_poll(292,6808
static int vfc_set_control_ioctl(308,7109
int vfc_port_change_ioctl(358,8170
int vfc_set_video_ioctl(423,10131
int vfc_get_video_ioctl(470,11487
static int vfc_ioctl(505,12397
static int vfc_mmap(563,13787
static int vfc_lseek(589,14462
static struct file_operations vfc_fops 595,14580
static int vfc_probe(608,14856
int init_module(664,16019
static void deinit_vfc_device(673,16114
void cleanup_module(680,16260

drivers/sbus/char/vfc.h,2424
#define _LINUX_VFC_H_2,22
struct vfc_regs vfc_regs18,654
#define VFC_SAA9051_NR 33,1207
#define VFC_SAA9051_ADDR 34,1235
#define VFC_SAA9051_PONRES 48,1786
#define VFC_SAA9051_HLOCK 49,1820
#define VFC_SAA9051_FD 50,1853
#define VFC_SAA9051_CD 51,1883
#define VFC_SAA9051_CS 52,1913
#define VFC_SAA9051_IDEL 57,1986
#define VFC_SAA9051_HSY_START 58,2016
#define VFC_SAA9051_HSY_STOP 59,2050
#define VFC_SAA9051_HC_START 60,2083
#define VFC_SAA9051_HC_STOP 61,2116
#define VFC_SAA9051_HS_START 62,2148
#define VFC_SAA9051_HORIZ_PEAK 63,2181
#define VFC_SAA9051_HUE 64,2216
#define VFC_SAA9051_C1 65,2244
#define VFC_SAA9051_C2 66,2271
#define VFC_SAA9051_C3 67,2298
#define VFC_SAA9051_SECAM_DELAY 68,2327
#define VFC_SAA9051_AP1 73,2416
#define VFC_SAA9051_AP2 74,2447
#define VFC_SAA9051_COR1 75,2478
#define VFC_SAA9051_COR2 76,2510
#define VFC_SAA9051_BP1 77,2542
#define VFC_SAA9051_BP2 78,2573
#define VFC_SAA9051_PF 79,2604
#define VFC_SAA9051_BY 80,2634
#define VFC_SAA9051_CCFR0 85,2715
#define VFC_SAA9051_CCFR1 86,2748
#define VFC_SAA9051_YPN 87,2781
#define VFC_SAA9051_ALT 88,2812
#define VFC_SAA9051_CO 89,2843
#define VFC_SAA9051_VTR 90,2873
#define VFC_SAA9051_FS 91,2904
#define VFC_SAA9051_HPLL 92,2934
#define VFC_SAA9051_SS0 97,3014
#define VFC_SAA9051_SS1 98,3045
#define VFC_SAA9051_AFCC 99,3076
#define VFC_SAA9051_CI 100,3108
#define VFC_SAA9051_SA9D4 101,3138
#define VFC_SAA9051_OEC 102,3192
#define VFC_SAA9051_OEY 103,3223
#define VFC_SAA9051_VNL 104,3254
#define VFC_SAA9051_YDL0 109,3336
#define VFC_SAA9051_YDL1 110,3368
#define VFC_SAA9051_YDL2 111,3400
#define VFC_SAA9051_SS2 112,3432
#define VFC_SAA9051_SS3 113,3463
#define VFC_SAA9051_YC 114,3494
#define VFC_SAA9051_CT 115,3524
#define VFC_SAA9051_SYC 116,3554
#define VFC_SAA9051_SA(VFC_SAA9051_SA119,3587
#define vfc_update_saa9051(vfc_update_saa9051120,3649
struct vfc_dev vfc_dev125,3783
extern struct vfc_dev **vfc_dev_lst;138,4093
#define VFC_CONTROL_DIAGMODE 153,4647
#define VFC_CONTROL_MEMPTR 154,4688
#define VFC_CONTROL_CAPTURE 155,4729
#define VFC_CONTROL_CAPTRESET 156,4770
#define VFC_STATUS_CAPTURE 158,4812
#define VFC_IOCTL_DEBUG_PRINTK(VFC_IOCTL_DEBUG_PRINTK161,4877
#define VFC_IOCTL_DEBUG_PRINTK(VFC_IOCTL_DEBUG_PRINTK163,4926
#define VFC_I2C_DEBUG_PRINTK(VFC_I2C_DEBUG_PRINTK167,4989
#define VFC_I2C_DEBUG_PRINTK(VFC_I2C_DEBUG_PRINTK169,5036

drivers/sbus/char/vfc_i2c.c,544
#define VFC_I2C_DEBUG35,964
#define VFC_I2C_READ 41,1033
#define VFC_I2C_WRITE 42,1060
int vfc_pcf8584_init(53,1375
void vfc_i2c_delay_wakeup(73,1977
void vfc_i2c_delay_no_busy(80,2175
void inline vfc_i2c_delay(93,2587
int vfc_init_i2c_bus(98,2674
int vfc_i2c_reset_bus(105,2811
int vfc_i2c_wait_for_bus(120,3249
int vfc_i2c_wait_for_pin(131,3432
#define SHIFT(SHIFT146,3697
int vfc_i2c_xmit_addr(147,3726
int vfc_i2c_xmit_byte(195,4976
int vfc_i2c_recv_byte(215,5365
int vfc_i2c_recvbuf(235,5817
int vfc_i2c_sendbuf(271,6574

drivers/sbus/char/vfc_i2c.h,718
#define _LINUX_VFC_I2C_H_2,26
#define PIN 5,72
#define ESO 6,98
#define ES1 7,124
#define ES2 8,150
#define ENI 9,176
#define STA 10,202
#define STO 11,228
#define ACK 12,254
#define STS 15,299
#define BER 16,325
#define LRB 17,351
#define AAS 18,377
#define LAB 19,403
#define BB 20,429
#define SEND_I2C_START 22,456
#define SEND_I2C_STOP 23,497
#define CLEAR_I2C_BUS 24,537
#define NEGATIVE_ACK 25,577
#define SELECT(SELECT27,614
#define S0 28,636
#define S0_OWN 29,665
#define S2 30,686
#define S3 31,709
#define ENABLE_SERIAL 33,733
#define DISABLE_SERIAL 34,767
#define RESET 35,796
#define XMIT_LAST_BYTE 37,817
#define VFC_I2C_ACK_CHECK 38,844
#define VFC_I2C_NO_ACK_CHECK 39,874

drivers/sbus/char/pcikbd.h,2013
#define __PCIKBD_H13,373
#define KBD_REPORT_ERR	19,427
#define KBD_REPORT_UNKN	20,481
#define KBD_REPORT_TIMEOUTS	21,539
#define KBD_INIT_TIMEOUT 23,600
#define KBC_TIMEOUT 24,673
#define KBD_TIMEOUT 25,750
extern unsigned char pckbd_read_mask;31,870
extern unsigned char aux_device_present;32,908
extern unsigned long pcikbd_iobase;34,950
extern unsigned int pcikbd_irq;35,986
#define KBD_STATUS_REG	43,1124
#define KBD_CNTL_REG	44,1153
#define KBD_DATA_REG	45,1190
#define KBD_CCMD_READ_MODE	51,1258
#define KBD_CCMD_WRITE_MODE	52,1311
#define KBD_CCMD_GET_VERSION	53,1366
#define KBD_CCMD_MOUSE_DISABLE	54,1429
#define KBD_CCMD_MOUSE_ENABLE	55,1495
#define KBD_CCMD_TEST_MOUSE	56,1559
#define KBD_CCMD_SELF_TEST	57,1619
#define KBD_CCMD_KBD_TEST	58,1678
#define KBD_CCMD_KBD_DISABLE	59,1739
#define KBD_CCMD_KBD_ENABLE	60,1806
#define KBD_CCMD_WRITE_MOUSE	61,1871
#define KBD_CMD_SET_LEDS	67,1979
#define KBD_CMD_SET_RATE	68,2033
#define KBD_CMD_ENABLE	69,2088
#define KBD_CMD_DISABLE	70,2139
#define KBD_CMD_RESET	71,2192
#define KBD_REPLY_POR	77,2261
#define KBD_REPLY_ACK	78,2310
#define KBD_REPLY_RESEND	79,2356
#define KBD_STAT_OBF 85,2458
#define KBD_STAT_IBF 86,2520
#define KBD_STAT_SELFTEST	87,2581
#define KBD_STAT_CMD	88,2639
#define KBD_STAT_UNLOCKED	89,2712
#define KBD_STAT_MOUSE_OBF	90,2773
#define KBD_STAT_GTO 91,2836
#define KBD_STAT_PERR 92,2899
#define AUX_STAT_OBF 94,2948
#define KBD_MODE_KBD_INT	100,3047
#define KBD_MODE_MOUSE_INT	101,3111
#define KBD_MODE_SYS 102,3175
#define KBD_MODE_NO_KEYLOCK	103,3229
#define KBD_MODE_DISABLE_KBD	104,3315
#define KBD_MODE_DISABLE_MOUSE	105,3382
#define KBD_MODE_KCC 106,3448
#define KBD_MODE_RFU	107,3516
#define AUX_SET_RES	113,3570
#define AUX_SET_SCALE11	114,3617
#define AUX_SET_SCALE21	115,3669
#define AUX_GET_SCALE	116,3721
#define AUX_SET_STREAM	117,3774
#define AUX_SET_SAMPLE	118,3825
#define AUX_ENABLE_DEV	119,3876
#define AUX_DISABLE_DEV	120,3929
#define AUX_RESET	121,3984

drivers/sbus/char/sunkbd.h,549
#define _SPARC_SUNKBD_H 8,193
#define SUNKBD_RESET	13,293
#define SUNKBD_L1	14,320
#define SUNKBD_UP	15,344
#define SUNKBD_A	16,368
struct l1a_kbd_state l1a_kbd_state18,392
extern struct l1a_kbd_state l1a_state;23,446
extern ushort *sun_key_maps[38,949
extern unsigned int sun_keymap_count;39,994
extern char sun_func_buf[41,1033
extern char *sun_func_table[42,1061
extern int sun_funcbufsize;43,1103
extern int sun_funcbufleft;44,1131
extern struct kbdiacr sun_accent_table[46,1160
extern unsigned int sun_accent_table_size;47,1211

drivers/sbus/char/sunmouse.h,33
#define _SPARC_SUNMOUSE_H 8,193

drivers/sbus/char/zs.h,5561
#define _SPARC_SERIAL_H8,253
struct sun_zschannel sun_zschannel11,301
struct sun_zslayout sun_zslayout21,529
#define NUM_ZSREGS 26,619
struct serial_struct serial_struct28,645
#define ZILOG_CLOSING_WAIT_INF	49,1115
#define ZILOG_CLOSING_WAIT_NONE	50,1148
#define ZILOG_HUP_NOTIFY 55,1258
#define ZILOG_FOURPORT 57,1359
#define ZILOG_SAK	58,1436
#define ZILOG_SPLIT_TERMIOS 59,1502
#define ZILOG_SPD_MASK	61,1580
#define ZILOG_SPD_HI	62,1610
#define ZILOG_SPD_CUST	63,1675
#define ZILOG_SKIP_TEST	65,1740
#define ZILOG_AUTO_IRQ 66,1817
#define ZILOG_SESSION_LOCKOUT 67,1896
#define ZILOG_PGRP_LOCKOUT 68,1975
#define ZILOG_CALLOUT_NOHUP 69,2051
#define ZILOG_FLAGS	71,2127
#define ZILOG_USR_MASK 72,2187
#define ZILOG_INITIALIZED	76,2344
#define ZILOG_CALLOUT_ACTIVE	77,2415
#define ZILOG_NORMAL_ACTIVE	78,2487
#define ZILOG_BOOT_AUTOCONF	79,2556
#define ZILOG_CLOSING	80,2630
#define ZILOG_CTS_FLOW	81,2693
#define ZILOG_CHECK_CD	82,2754
struct sun_serial sun_serial96,3076
#define SERIAL_MAGIC 159,4897
#define SERIAL_XMIT_SIZE 164,4996
#define RS_EVENT_WRITE_WAKEUP	170,5143
#define BRG_TO_BPS(BRG_TO_BPS177,5283
#define BPS_TO_BRG(BPS_TO_BRG178,5340
#define	FLAG	182,5440
#define	R0	185,5482
#define	R1	186,5519
#define	R2	187,5532
#define	R3	188,5545
#define	R4	189,5558
#define	R5	190,5571
#define	R6	191,5584
#define	R7	192,5597
#define	R8	193,5610
#define	R9	194,5623
#define	R10	195,5636
#define	R11	196,5651
#define	R12	197,5666
#define	R13	198,5681
#define	R14	199,5696
#define	R15	200,5711
#define	NULLCODE	202,5727
#define	POINT_HIGH	203,5762
#define	RES_EXT_INT	204,5822
#define	SEND_ABORT	205,5882
#define	RES_RxINT_FC	206,5923
#define	RES_Tx_P	207,5986
#define	ERR_RES	208,6034
#define	RES_H_IUS	209,6074
#define	RES_Rx_CRC	211,6122
#define	RES_Tx_CRC	212,6173
#define	RES_EOM_L	213,6224
#define	EXT_INT_ENAB	217,6294
#define	TxINT_ENAB	218,6340
#define	PAR_SPEC	219,6383
#define	RxINT_DISAB	221,6439
#define	RxINT_FCERR	222,6482
#define	INT_ALL_Rx	223,6552
#define	INT_ERR_Rx	224,6616
#define RxINT_MASK	225,6664
#define	WT_RDY_RT	227,6689
#define	WT_FN_RDYFN	228,6736
#define	WT_RDY_ENAB	229,6784
#define	RxENAB 235,6902
#define	SYNC_L_INH	236,6939
#define	ADD_SM	237,6996
#define	RxCRC_ENAB	238,7049
#define	ENT_HM	239,7092
#define	AUTO_ENAB	240,7135
#define	Rx5	241,7177
#define	Rx7	242,7220
#define	Rx6	243,7264
#define	Rx8	244,7308
#define RxN_MASK	245,7352
#define	PAR_ENAB	249,7399
#define	PAR_EVEN	250,7440
#define	SYNC_ENAB	252,7485
#define	SB1	253,7529
#define	SB15	254,7568
#define	SB2	255,7611
#define	MONSYNC	257,7652
#define	BISYNC	258,7698
#define	SDLC	259,7747
#define	EXTSYNC	260,7803
#define	X1CLK	262,7851
#define	X16CLK	263,7890
#define	X32CLK	264,7932
#define	X64CLK	265,7974
#define	TxCRC_ENAB	269,8041
#define	RTS	270,8084
#define	SDLC_CRC	271,8111
#define	TxENAB	272,8150
#define	SND_BRK	273,8186
#define	Tx5	274,8225
#define	Tx7	275,8278
#define	Tx6	276,8322
#define	Tx8	277,8366
#define TxN_MASK	278,8410
#define	DTR	279,8432
#define	VIS	288,8667
#define	NV	289,8710
#define	DLC	290,8739
#define	MIE	291,8779
#define	STATHI	292,8823
#define	NORESET	293,8861
#define	CHRB	294,8909
#define	CHRA	295,8949
#define	FHWRES	296,8989
#define	BIT6	299,9081
#define	LOOPMODE 300,9118
#define	ABUNDER	301,9158
#define	MARKIDLE 302,9215
#define	GAOP	303,9258
#define	NRZ	304,9300
#define	NRZI	305,9329
#define	FM1	306,9363
#define	FM0	307,9407
#define	CRCPS	308,9451
#define	TRxCXT	311,9537
#define	TRxCTC	312,9579
#define	TRxCBR	313,9624
#define	TRxCDP	314,9674
#define	TRxCOI	315,9716
#define	TCRTxCP	316,9748
#define	TCTRxCP	317,9798
#define	TCBR	318,9848
#define	TCDPLL	319,9909
#define	RCRTxCP	320,9964
#define	RCTRxCP	321,10013
#define	RCBR	322,10065
#define	RCDPLL	323,10125
#define	RTxCX	324,10179
#define	BRENAB 331,10417
#define	BRSRC	332,10468
#define	DTRREQ	333,10517
#define	AUTOECHO 334,10561
#define	LOOPBAK	335,10596
#define	SEARCH	336,10638
#define	RMC	337,10682
#define	DISDPLL	338,10725
#define	SSBR	339,10765
#define	SSRTxC	340,10820
#define	SFMM	341,10869
#define	SNRZI	342,10905
#define	ZCIE	345,11005
#define	DCDIE	346,11040
#define	SYNCIE	347,11069
#define	CTSIE	348,11108
#define	TxUIE	349,11140
#define	BRKIE	350,11184
#define	Rx_CH_AV	354,11248
#define	ZCOUNT	355,11298
#define	Tx_BUF_EMP	356,11335
#define	DCD	357,11380
#define	SYNC	358,11407
#define	CTS	359,11442
#define	TxEOM	360,11470
#define	BRK_ABRT	361,11508
#define	ALL_SNT	364,11571
#define	RES3	366,11656
#define	RES4	367,11684
#define	RES5	368,11712
#define	RES6	369,11740
#define	RES7	370,11768
#define	RES8	371,11796
#define	RES18	372,11824
#define	RES28	373,11853
#define	PAR_ERR	375,11920
#define	Rx_OVR	376,11961
#define	CRC_ERR	377,12005
#define	END_FR	378,12051
#define CHB_Tx_EMPTY	381,12157
#define CHB_EXT_STAT	382,12183
#define CHB_Rx_AVAIL	383,12209
#define CHB_SPECIAL	384,12235
#define CHA_Tx_EMPTY	385,12260
#define CHA_EXT_STAT	386,12286
#define CHA_Rx_AVAIL	387,12312
#define CHA_SPECIAL	388,12338
#define STATUS_MASK	389,12363
#define	CHBEXT	392,12450
#define	CHBTxIP	393,12498
#define	CHBRxIP	394,12541
#define	CHAEXT	395,12584
#define	CHATxIP	396,12632
#define	CHARxIP	397,12676
#define	ONLOOP	402,12811
#define	LOOPSEND 403,12843
#define	CLK2MIS	404,12885
#define	CLK1MIS	405,12932
#define ZS_CLEARERR(ZS_CLEARERR414,13176
#define ZS_CLEARSTAT(ZS_CLEARSTAT417,13275
#define ZS_CLEARFIFO(ZS_CLEARFIFO420,13378

drivers/sbus/char/sunkbdmap.c,439
#define func_buf	12,231
#define func_table	13,263
#define funcbufsize	14,299
#define funcbufleft	15,337
#define funcbufptr	16,375
#define accent_table	17,411
#define accent_table_size	18,451
#define key_maps	20,501
#define keymap_count	21,533
#define plain_map	23,574
#define shift_map	24,608
#define ctrl_map	25,642
#define alt_map	26,674
#define altgr_map	27,705
#define shift_ctrl_map	28,739
#define ctrl_alt_map	29,783

drivers/sbus/audio/amd7930.h,7008
#define _AMD7930_H_14,399
struct amd7930amd793020,535
#define ir 23,603
#define dcrb 28,885
#define bbrb 30,1003
#define bcrb 32,1122
struct amd7930_map amd7930_map38,1301
#define AMR_IR_DTTHRSH	57,1623
#define AMR_IR_DRTHRSH	58,1684
#define AMR_IR_DSRI	59,1745
#define AMR_IR_DERI	60,1802
#define AMR_IR_BBUF	61,1851
#define AMR_IR_LSRI	62,1904
#define AMR_IR_DSR2I	63,1948
#define AMR_IR_MLTFRMI	64,2006
#define	AMR_INIT	74,2415
#define		AM_INIT_ACTIVE	75,2439
#define		AM_INIT_DATAONLY	76,2470
#define		AM_INIT_POWERDOWN	77,2502
#define		AM_INIT_DISABLE_INTS	78,2535
#define AMR_INIT2	79,2571
#define		AM_INIT2_ENABLE_POWERDOWN	80,2596
#define		AM_INIT2_ENABLE_MULTIFRAME	81,2636
#define	AMR_LIU_LSR	84,2704
#define		AM_LIU_LSR_STATE	85,2731
#define		AM_LIU_LSR_F3	86,2763
#define		AM_LIU_LSR_F7	87,2793
#define		AM_LIU_LSR_F8	88,2823
#define		AM_LIU_LSR_HSW	89,2853
#define		AM_LIU_LSR_HSW_CHG	90,2884
#define	AMR_LIU_LPR	91,2918
#define	AMR_LIU_LMR1	92,2945
#define		AM_LIU_LMR1_B1_ENABL	93,2973
#define		AM_LIU_LMR1_B2_ENABL	94,3009
#define		AM_LIU_LMR1_F_DISABL	95,3045
#define		AM_LIU_LMR1_FA_DISABL	96,3081
#define		AM_LIU_LMR1_REQ_ACTIV	97,3118
#define		AM_LIU_LMR1_F8_F3	98,3155
#define		AM_LIU_LMR1_LIU_ENABL	99,3188
#define	AMR_LIU_LMR2	100,3225
#define		AM_LIU_LMR2_DECHO	101,3253
#define		AM_LIU_LMR2_DLOOP	102,3286
#define		AM_LIU_LMR2_DBACKOFF	103,3319
#define		AM_LIU_LMR2_EN_F3_INT	104,3355
#define		AM_LIU_LMR2_EN_F8_INT	105,3392
#define		AM_LIU_LMR2_EN_HSW_INT	106,3429
#define		AM_LIU_LMR2_EN_F7_INT	107,3467
#define	AMR_LIU_2_4	108,3504
#define	AMR_LIU_MF	109,3531
#define	AMR_LIU_MFSB	110,3557
#define	AMR_LIU_MFQB	111,3585
#define	AMR_MUX_MCR1	114,3632
#define	AMR_MUX_MCR2	115,3660
#define	AMR_MUX_MCR3	116,3688
#define		AM_MUX_CHANNEL_B1	117,3716
#define		AM_MUX_CHANNEL_B2	118,3749
#define		AM_MUX_CHANNEL_Ba	119,3782
#define		AM_MUX_CHANNEL_Bb	120,3815
#define		AM_MUX_CHANNEL_Bc	121,3848
#define		AM_MUX_CHANNEL_Bd	122,3881
#define		AM_MUX_CHANNEL_Be	123,3914
#define		AM_MUX_CHANNEL_Bf	124,3947
#define	AMR_MUX_MCR4	125,3980
#define		AM_MUX_MCR4_ENABLE_INTS	126,4008
#define		AM_MUX_MCR4_REVERSE_Bb	127,4047
#define		AM_MUX_MCR4_REVERSE_Bc	128,4085
#define	AMR_MUX_1_4	129,4123
#define	AMR_MAP_X	132,4178
#define	AMR_MAP_R	133,4203
#define	AMR_MAP_GX	134,4228
#define	AMR_MAP_GR	135,4254
#define	AMR_MAP_GER	136,4280
#define	AMR_MAP_STGR	137,4307
#define	AMR_MAP_FTGR_1_2	138,4335
#define	AMR_MAP_ATGR_1_2	139,4366
#define	AMR_MAP_MMR1	140,4397
#define		AM_MAP_MMR1_ALAW	141,4425
#define		AM_MAP_MMR1_GX	142,4457
#define		AM_MAP_MMR1_GR	143,4488
#define		AM_MAP_MMR1_GER	144,4519
#define		AM_MAP_MMR1_X	145,4551
#define		AM_MAP_MMR1_R	146,4581
#define		AM_MAP_MMR1_STG	147,4611
#define		AM_MAP_MMR1_LOOPBACK	148,4643
#define	AMR_MAP_MMR2	149,4679
#define		AM_MAP_MMR2_AINB	150,4707
#define		AM_MAP_MMR2_LS	151,4739
#define		AM_MAP_MMR2_ENABLE_DTMF	152,4770
#define		AM_MAP_MMR2_ENABLE_TONEGEN	153,4809
#define		AM_MAP_MMR2_ENABLE_TONERING	154,4850
#define		AM_MAP_MMR2_DISABLE_HIGHPASS	155,4892
#define		AM_MAP_MMR2_DISABLE_AUTOZERO	156,4935
#define	AMR_MAP_1_10	157,4978
#define	AMR_MAP_MMR3	158,5006
#define	AMR_MAP_STRA	159,5034
#define	AMR_MAP_STRF	160,5062
#define	AMR_MAP_PEAKX	161,5090
#define	AMR_MAP_PEAKR	162,5119
#define	AMR_MAP_15_16	163,5148
#define	AMR_DLC_FRAR_1_2_3	166,5205
#define	AMR_DLC_SRAR_1_2_3	167,5238
#define	AMR_DLC_TAR	168,5271
#define	AMR_DLC_DRLR	169,5298
#define	AMR_DLC_DTCR	170,5326
#define	AMR_DLC_DMR1	171,5354
#define		AMR_DLC_DMR1_DTTHRSH_INT	172,5382
#define		AMR_DLC_DMR1_DRTHRSH_INT	173,5421
#define		AMR_DLC_DMR1_TAR_ENABL	174,5460
#define		AMR_DLC_DMR1_EORP_INT	175,5498
#define		AMR_DLC_DMR1_EN_ADDR1	176,5535
#define		AMR_DLC_DMR1_EN_ADDR2	177,5572
#define		AMR_DLC_DMR1_EN_ADDR3	178,5609
#define		AMR_DLC_DMR1_EN_ADDR4	179,5646
#define		AMR_DLC_DMR1_EN_ADDRS	180,5683
#define	AMR_DLC_DMR2	181,5720
#define		AMR_DLC_DMR2_RABRT_INT	182,5748
#define		AMR_DLC_DMR2_RESID_INT	183,5786
#define		AMR_DLC_DMR2_COLL_INT	184,5824
#define		AMR_DLC_DMR2_FCS_INT	185,5861
#define		AMR_DLC_DMR2_OVFL_INT	186,5897
#define		AMR_DLC_DMR2_UNFL_INT	187,5934
#define		AMR_DLC_DMR2_OVRN_INT	188,5971
#define		AMR_DLC_DMR2_UNRN_INT	189,6008
#define	AMR_DLC_1_7	190,6045
#define	AMR_DLC_DRCR	191,6072
#define	AMR_DLC_RNGR1	192,6100
#define	AMR_DLC_RNGR2	193,6129
#define	AMR_DLC_FRAR4	194,6158
#define	AMR_DLC_SRAR4	195,6187
#define	AMR_DLC_DMR3	196,6216
#define		AMR_DLC_DMR3_VA_INT	197,6244
#define		AMR_DLC_DMR3_EOTP_INT	198,6279
#define		AMR_DLC_DMR3_LBRP_INT	199,6316
#define		AMR_DLC_DMR3_RBA_INT	200,6353
#define		AMR_DLC_DMR3_LBT_INT	201,6389
#define		AMR_DLC_DMR3_TBE_INT	202,6425
#define		AMR_DLC_DMR3_RPLOST_INT	203,6461
#define		AMR_DLC_DMR3_KEEP_FCS	204,6500
#define	AMR_DLC_DMR4	205,6537
#define		AMR_DLC_DMR4_RCV_1	206,6565
#define		AMR_DLC_DMR4_RCV_2	207,6599
#define		AMR_DLC_DMR4_RCV_4	208,6633
#define		AMR_DLC_DMR4_RCV_8	209,6667
#define		AMR_DLC_DMR4_RCV_16	210,6701
#define		AMR_DLC_DMR4_RCV_24	211,6736
#define		AMR_DLC_DMR4_RCV_30	212,6771
#define		AMR_DLC_DMR4_XMT_1	213,6806
#define		AMR_DLC_DMR4_XMT_2	214,6840
#define		AMR_DLC_DMR4_XMT_4	215,6874
#define		AMR_DLC_DMR4_XMT_8	216,6908
#define		AMR_DLC_DMR4_XMT_10	217,6942
#define		AMR_DLC_DMR4_XMT_14	218,6977
#define		AMR_DLC_DMR4_IDLE_MARK	219,7012
#define		AMR_DLC_DMR4_IDLE_FLAG	220,7050
#define		AMR_DLC_DMR4_ADDR_BOTH	221,7088
#define		AMR_DLC_DMR4_ADDR_1ST	222,7126
#define		AMR_DLC_DMR4_ADDR_2ND	223,7163
#define		AMR_DLC_DMR4_CR_ENABLE	224,7200
#define	AMR_DLC_12_15	225,7238
#define	AMR_DLC_ASR	226,7267
#define	AMR_DLC_EFCR	227,7294
#define		AMR_DLC_EFCR_EXTEND_FIFO	228,7322
#define		AMR_DLC_EFCR_SEC_PKT_INT	229,7361
#define AMR_DSR1_VADDR	231,7401
#define AMR_DSR1_EORP	232,7431
#define AMR_DSR1_PKT_IP	233,7460
#define AMR_DSR1_DECHO_ON	234,7491
#define AMR_DSR1_DLOOP_ON	235,7523
#define AMR_DSR1_DBACK_OFF	236,7555
#define AMR_DSR1_EOTP	237,7588
#define AMR_DSR1_CXMT_ABRT	238,7617
#define AMR_DSR2_LBRP	240,7651
#define AMR_DSR2_RBA	241,7680
#define AMR_DSR2_RPLOST	242,7708
#define AMR_DSR2_LAST_BYTE	243,7739
#define AMR_DSR2_TBE	244,7772
#define AMR_DSR2_MARK_IDLE	245,7800
#define AMR_DSR2_FLAG_IDLE	246,7833
#define AMR_DSR2_SECOND_PKT	247,7866
#define AMR_DER_RABRT	249,7901
#define AMR_DER_RFRAME	250,7930
#define AMR_DER_COLLISION	251,7960
#define AMR_DER_FCS	252,7992
#define AMR_DER_OVFL	253,8019
#define AMR_DER_UNFL	254,8047
#define AMR_DER_OVRN	255,8075
#define AMR_DER_UNRN	256,8103
#define	AMR_PP_PPCR1	259,8154
#define	AMR_PP_PPSR	260,8182
#define	AMR_PP_PPIER	261,8209
#define	AMR_PP_MTDR	262,8237
#define	AMR_PP_MRDR	263,8264
#define	AMR_PP_CITDR0	264,8291
#define	AMR_PP_CIRDR0	265,8320
#define	AMR_PP_CITDR1	266,8349
#define	AMR_PP_CIRDR1	267,8378
#define	AMR_PP_PPCR2	268,8407
#define	AMR_PP_PPCR3	269,8435
#define AMD7930_RATE 272,8509

drivers/sbus/audio/amd7930.c,3693
#define MAX_DRIVERS 111,5240
static struct sparcaudio_driver drivers[113,5263
static int num_drivers;114,5317
#define CHANNEL_AVAILABLE	121,5543
#define CHANNEL_INUSE_AUDIO_IN	122,5574
#define CHANNEL_INUSE_AUDIO_OUT	123,5610
#define CHANNEL_INUSE_ISDN_B1	124,5647
#define CHANNEL_INUSE_ISDN_B2	125,5682
#define CHANNEL_INUSE	126,5717
struct amd7930_channel amd7930_channel128,5746
struct amd7930_info amd7930_info152,6447
#define amd7930_out16(amd7930_out16186,7254
static __const__ __u16 gx_coeff[195,7606
static __const__ __u16 ger_coeff[230,9731
#define NR_GER_COEFFS 253,10234
static __inline__ void amd7930_enable_ints(256,10344
static __inline__ void amd7930_disable_ints(272,10655
static __inline__ void amd7930_idle(288,11002
static void amd7930_write_map(304,11316
static void amd7930_update_map(335,11979
inline void debug_info(371,13106
#define debug_info(debug_info389,13503
static void fill_D_xmit_fifo(394,13540
static void transceive_Dchannel(409,13940
#define D_XMIT_ERRORS 413,14015
#define D_RECV_ERRORS 414,14072
long amd7930_xmit_idles=483,15621
static void transceive_Bchannel(485,15649
static void amd7930_interrupt(529,16915
static int amd7930_open(565,17845
static void amd7930_release(572,17981
static void request_Baudio(579,18157
static void release_Baudio(610,18990
static void amd7930_start_output(628,19412
static void amd7930_stop_output(646,19909
static void amd7930_start_input(658,20195
static void amd7930_stop_input(675,20635
static void amd7930_sunaudio_getdev(688,20920
static int amd7930_sunaudio_getdev_sunos(696,21222
static int amd7930_get_formats(701,21322
static int amd7930_get_output_ports(706,21430
static int amd7930_get_input_ports(711,21550
static int amd7930_set_output_volume(716,21654
static int amd7930_get_output_volume(725,21860
static int amd7930_set_input_volume(732,22021
static int amd7930_get_input_volume(741,22226
static int amd7930_set_monitor_volume(748,22386
static int amd7930_get_monitor_volume(757,22593
static int amd7930_get_output_balance(765,22827
static int amd7930_get_input_balance(770,22928
static int amd7930_get_output_channels(775,23028
static int amd7930_set_output_channels(780,23136
static int amd7930_get_input_channels(786,23293
amd7930_set_input_channels(792,23411
static int amd7930_get_output_precision(797,23543
amd7930_set_output_precision(803,23665
static int amd7930_get_input_precision(808,23801
amd7930_set_input_precision(814,23921
static int amd7930_get_output_port(819,24055
static int amd7930_set_output_port(827,24285
static int amd7930_get_input_port(845,24717
static int amd7930_get_encoding(850,24813
amd7930_set_encoding(859,25063
static int amd7930_get_output_rate(878,25499
amd7930_set_output_rate(884,25604
static int amd7930_get_input_rate(889,25723
amd7930_set_input_rate(895,25826
static int amd7930_get_output_muted(900,25944
static void amd7930_loopback(905,26032
static int amd7930_ioctl(917,26331
static int amd7930_get_irqnum(1076,33498
static int amd7930_get_liu_state(1089,33688
static void amd7930_liu_init(1102,33887
static void amd7930_liu_activate(1137,34757
static void amd7930_liu_deactivate(1169,35484
static void amd7930_dxmit(1190,35811
static void amd7930_drecv(1235,36891
static int amd7930_bopen(1281,38011
static void amd7930_bclose(1338,39454
static void amd7930_bxmit(1373,40242
static void amd7930_brecv(1400,40866
struct foreign_interface amd7930_foreign_interface 1428,41532
static struct sparcaudio_operations amd7930_ops 1449,41974
static int amd7930_attach(1509,44059
static void amd7930_detach(1594,46660
int init_module(1609,47051
void cleanup_module(1644,47886

drivers/sbus/audio/audio.c,1831
#define __AUDIO_ERROR40,1145
#define dprintk(dprintk43,1209
#define dprintk(dprintk45,1243
#define eprintk(eprintk48,1290
#define eprintk(eprintk50,1324
#define tprintk(tprintk53,1371
#define tprintk(tprintk55,1405
static struct sparcaudio_driver *drivers[64,1763
#define COPY_IN(COPY_IN69,1964
#define COPY_OUT(COPY_OUT70,2090
#define copy_to_user 71,2216
#define copy_from_user 72,2249
#define signal_pending(signal_pending73,2286
#define COPY_IN(COPY_IN79,2403
#define COPY_OUT(COPY_OUT80,2455
#define sparcaudio_release_ret 81,2508
#define sparcaudioctl_release_ret 82,2558
#define sparcaudio_select 83,2614
int register_sparcaudio_driver(87,2665
int unregister_sparcaudio_driver(228,7107
void sparcaudio_output_done(258,7772
void sparcaudio_input_done(328,10099
static int sparcaudio_select(381,11606
static unsigned int sparcaudio_poll(410,12453
static int sparcaudio_lseek(431,13189
static int sparcaudio_read(441,13470
static void sparcaudio_sync_output(508,15364
static int sparcaudio_write(524,15846
#define MONO_DEVICES 628,19268
static int sparcaudio_mixer_ioctl(630,19328
__sparcaudio_if_set_do(819,25612
__sparcaudio_if_setc_do(833,26008
static int sparcaudio_ioctl(852,26584
static int sparcaudioctl_release_ret(1860,58129
static void sparcaudioctl_release(1868,58341
static struct file_operations sparcaudioctl_fops 1874,58471
static int sparcaudio_open(1889,58886
static int sparcaudio_release_ret(1992,61596
static void sparcaudio_release(2047,63071
static struct file_operations sparcaudio_fops 2053,63195
static struct symbol_table sparcaudio_syms 2069,63637
int init_module(2085,64063
void cleanup_module(2117,64698
lis_add_to_elist(2130,64938
lis_del_from_elist(2186,66530
lis_free_elist(2212,67234
lis_get_elist_ent(2229,67539
kill_procs(2244,67854

drivers/sbus/audio/cs4231.c,4411
#define EB4231_SUPPORT37,1058
#define __CS4231_ERROR46,1201
#define eprintk(eprintk48,1246
#define eprintk(eprintk50,1280
#define tprintk(tprintk53,1328
#define tprintk(tprintk55,1362
#define dprintk(dprintk58,1410
#define dprintk(dprintk60,1444
#define MAX_DRIVERS 63,1471
static struct sparcaudio_driver drivers[64,1493
static int num_drivers;65,1547
#define CHIP_READY 81,2408
static __inline__ void cs4231_enable_interrupts(84,2517
static __inline__ void cs4231_disable_interrupts(103,3015
static __inline__ void cs4231_enable_play(121,3476
static __inline__ void cs4231_disable_play(135,3820
static __inline__ void cs4231_enable_rec(148,4164
static __inline__ void cs4231_disable_rec(161,4503
cs4231_rate_to_bits(175,4857
cs4231_encoding_to_bits(230,5847
cs4231_set_output_encoding(262,6487
static int cs4231_get_output_encoding(285,7136
cs4231_set_input_encoding(292,7351
static int cs4231_get_input_encoding(315,7996
cs4231_set_output_rate(322,8212
static int cs4231_get_output_rate(345,8844
cs4231_set_input_rate(352,9058
static int cs4231_get_input_rate(375,9696
cs4231_set_input_channels(383,9973
static int cs4231_get_input_channels(409,10610
cs4231_set_output_channels(417,10888
static int cs4231_get_output_channels(443,11529
static int cs4231_get_input_precision(449,11733
static int cs4231_get_output_precision(455,11940
static int cs4231_set_input_precision(461,12146
static int cs4231_set_output_precision(470,12420
cs4231_ready(481,12763
static int cs4231_output_muted(499,13191
static int cs4231_get_output_muted(519,13860
static int cs4231_get_formats(525,14052
static int cs4231_get_output_ports(531,14229
static int cs4231_get_input_ports(536,14365
static int cs4231_set_output_port(549,14831
static int cs4231_get_output_port(587,15881
static int cs4231_set_input_port(594,16105
static int cs4231_get_input_port(642,17936
static int cs4231_set_monitor_volume(649,18163
static int cs4231_get_monitor_volume(678,19108
static int cs4231_get_output_error(685,19320
static int cs4231_get_input_error(692,19528
static int eb4231_get_output_samples(700,19759
static int eb4231_get_input_samples(712,20235
static int cs4231_get_output_samples(725,20721
static int cs4231_get_input_samples(737,21190
static int cs4231_get_output_pause(749,21662
static int cs4231_get_input_pause(756,21870
static int cs4231_set_input_volume(765,22180
static int cs4231_get_input_volume(775,22464
static int cs4231_set_output_volume(782,22673
static int cs4231_get_output_volume(791,22926
static int cs4231_set_input_balance(799,23156
static int cs4231_get_input_balance(810,23524
static int cs4231_set_output_balance(817,23737
static int cs4231_get_output_balance(828,24096
static int cs4231_record_gain(836,24335
static int cs4231_play_gain(874,25628
static void cs4231_chip_reset(920,27343
cs4231_length_to_samplecount(1017,30253
static void eb4231_getsamplecount(1035,30635
static void cs4231_getsamplecount(1064,31635
static int cs4231_open(1092,32604
static void cs4231_release(1124,33496
static void cs4231_playintr(1183,35433
static void eb4231_playintr(1229,37028
static void cs4231_recclear(1284,38789
static int cs4231_recintr(1299,39099
static int eb4231_recintr(1350,40854
static void eb4231_start_output(1413,42895
static void cs4231_start_output(1450,43937
static void eb4231_stop_output(1484,44860
static void cs4231_stop_output(1505,45527
static void cs4231_pollinput(1526,46304
static void cs4231_start_input(1537,46590
static void cs4231_stop_input(1569,47449
static int cs4231_set_output_pause(1593,48291
static int cs4231_set_output_error(1605,48592
static int cs4231_set_input_error(1616,48865
static int cs4231_set_output_samples(1627,49141
static int cs4231_set_input_samples(1638,49420
static int cs4231_set_input_pause(1649,49702
static void cs4231_audio_getdev(1661,49997
static int cs4231_audio_getdev_sunos(1681,50872
static void cs4231_loopback(1686,50972
static int cs4231_ioctl(1694,51213
void eb4231_cinterrupt(1715,51726
void eb4231_pinterrupt(1777,53509
void cs4231_interrupt(1823,54682
static struct sparcaudio_operations cs4231_ops 1888,56540
static struct sparcaudio_operations eb4231_ops 1948,58248
static int cs4231_attach(2009,59993
static int eb4231_attach(2126,63456
int init_module(2256,67675
static void cs4231_detach(2303,68785
void cleanup_module(2323,69521

drivers/sbus/audio/cs4215.h,1250
#define _CS4215_H_9,161
struct cs4215 cs421511,181
#define CS4215_CLB	27,483
#define CS4215_OLB	28,533
#define CS4215_MLB	30,627
#define CS4215_RSRVD_1 31,693
#define CS4215_DFR_LINEAR16	35,766
#define CS4215_DFR_ULAW	36,796
#define CS4215_DFR_ALAW	37,823
#define CS4215_DFR_LINEAR8	38,850
#define CS4215_DFR_STEREO	39,879
} CS4215_FREQ[44,995
#define CS4215_HPF	63,1537
#define CS4215_12_MASK	65,1599
#define CS4215_XEN	68,1721
#define CS4215_XCLK	69,1777
#define CS4215_BSEL_64	70,1840
#define CS4215_BSEL_128	71,1903
#define CS4215_BSEL_256	72,1934
#define CS4215_MCK_MAST 73,1965
#define CS4215_MCK_XTL1 74,2015
#define CS4215_MCK_XTL2 75,2076
#define CS4215_MCK_CLK1 76,2138
#define CS4215_MCK_CLK2 77,2193
#define CS4215_DAD	80,2281
#define CS4215_ENL	81,2355
#define CS4215_VERSION_MASK 89,2576
#define CS4215_LO(CS4215_LO101,2797
#define CS4215_LE	102,2865
#define CS4215_HE	103,2912
#define CS4215_RO(CS4215_RO106,2996
#define CS4215_SE	107,3065
#define CS4215_ADI	108,3112
#define CS4215_LG(CS4215_LG111,3216
#define CS4215_IS	112,3276
#define CS4215_OVR	113,3342
#define CS4215_PIO0	114,3406
#define CS4215_PIO1	115,3454
#define CS4215_RG(CS4215_RG118,3515
#define CS4215_MA(CS4215_MA119,3576

drivers/sbus/audio/cs4231.h,4262
#define _CS4231_H_9,186
struct cs4231_regs cs4231_regs15,312
struct cs4231_chip cs4231_chip38,1379
#define CS_STATUS_NEED_INIT 68,2291
#define CS_STATUS_INIT_ON_CLOSE 69,2324
#define CS_STATUS_REV_A 70,2361
#define CS_STATUS_INTS_ON 71,2390
#define CS_STATUS_IS_ULTRA 72,2421
#define CS_STATUS_IS_EBUS 73,2453
#define CS_TIMEOUT 75,2485
#define GAIN_SET(GAIN_SET77,2518
#define RECGAIN_SET(RECGAIN_SET78,2575
#define IAR_AUTOCAL_BEGIN 83,2839
#define IAR_NOT_READY 84,2889
#define IAR_AUTOCAL_END 86,2941
#define MIC_ENABLE(MIC_ENABLE93,3191
#define LINE_ENABLE(LINE_ENABLE94,3245
#define CDROM_ENABLE(CDROM_ENABLE95,3290
#define OUTPUTLOOP_ENABLE(OUTPUTLOOP_ENABLE96,3344
#define INPUTCR_AUX1 97,3398
#define OUTCR_MUTE 106,3640
#define OUTCR_UNMUTE 107,3677
#define CHANGE_DFR(CHANGE_DFR110,3756
#define CHANGE_ENCODING(CHANGE_ENCODING111,3819
#define DEFAULT_DATA_FMAT 112,3883
#define CS4231_DFR_5512 113,3939
#define CS4231_DFR_6615 114,3984
#define CS4231_DFR_8000 115,4029
#define CS4231_DFR_9600 116,4074
#define CS4231_DFR_11025 117,4119
#define CS4231_DFR_16000 118,4164
#define CS4231_DFR_18900 119,4209
#define CS4231_DFR_22050 120,4254
#define CS4231_DFR_27429 121,4299
#define CS4231_DFR_32000 122,4344
#define CS4231_DFR_33075 123,4389
#define CS4231_DFR_37800 124,4434
#define CS4231_DFR_44100 125,4479
#define CS4231_DFR_48000 126,4524
#define CS4231_DFR_LINEAR8 127,4569
#define CS4231_DFR_ULAW 128,4614
#define CS4231_DFR_LINEARLE 129,4659
#define CS4231_DFR_ALAW 130,4704
#define CS4231_DFR_ADPCM 131,4749
#define CS4231_DFR_LINEARBE 132,4814
#define CS4231_STEREO_ON(CS4231_STEREO_ON133,4879
#define CS4231_MONO_ON(CS4231_MONO_ON134,4932
#define PEN_ENABLE 137,5024
#define PEN_DISABLE 138,5085
#define CEN_ENABLE 139,5125
#define CEN_DISABLE 140,5185
#define SDC_ENABLE 141,5225
#define ACAL_CONV 142,5302
#define ACAL_DISABLE 143,5373
#define ACAL_DAC 144,5414
#define ACAL_FULL 145,5478
#define PPIO 146,5558
#define CPIO 147,5637
#define ICR_AUTOCAL_INIT 148,5715
#define INTR_ON 151,5785
#define INTR_OFF 152,5822
#define PINCR_LINE_MUTE 153,5859
#define PINCR_HDPH_MUTE 154,5896
#define DRQ_STAT 157,5965
#define AUTOCAL_IN_PROGRESS 158,6002
#define MISC_IR_MODE2 161,6069
#define LOOPB_ON 164,6135
#define LOOPB_OFF 165,6172
#define DAC_ZERO 176,6444
#define PLAY_MCE 177,6481
#define CAPTURE_MCE 178,6518
#define TIMER_ENABLE 179,6555
#define OLB_ENABLE 180,6592
#define HPF_ON 183,6703
#define XTALE_ON 184,6763
#define APAR_OFF 185,6827
#define ACF 196,7054
#define CS_PU 199,7108
#define CS_PO 200,7160
#define CS_CU 201,7211
#define CS_CO 202,7263
#define CS_PI 203,7314
#define CS_CI 204,7352
#define CS_TI 205,7390
#define CS4231A 208,7448
#define CS4231CDE 209,7477
#define CHANGE_MONO_GAIN(CHANGE_MONO_GAIN212,7535
#define MONO_IOCR_BYPASS 213,7591
#define MONO_IOCR_MUTE 214,7626
#define MONO_IOCR_INMUTE 215,7660
#define APC_INT_PENDING 229,7901
#define APC_PLAY_INT 230,7958
#define APC_CAPT_INT 231,8016
#define APC_GENL_INT 232,8073
#define APC_XINT_ENA 233,8130
#define APC_XINT_PLAY 234,8193
#define APC_XINT_CAPT 235,8250
#define APC_XINT_GENL 236,8306
#define APC_XINT_EMPT 237,8360
#define APC_XINT_PEMP 238,8420
#define APC_XINT_PNVA 239,8475
#define APC_XINT_PENA 240,8533
#define APC_XINT_COVF 241,8599
#define APC_XINT_CNVA 242,8664
#define APC_XINT_CEMP 243,8721
#define APC_XINT_CENA 244,8789
#define APC_PPAUSE 245,8855
#define APC_CPAUSE 246,8913
#define APC_CDC_RESET 247,8974
#define APC_PDMA_READY 248,9025
#define APC_CDMA_READY 249,9079
#define APC_CHIP_RESET 250,9136
#define APC_INIT_SETUP 252,9191
#define APC_PLAY_SETUP 254,9361
#define APC_CAPT_SETUP 256,9512
#define EB2_PLAY_SETUP 262,9751
#define EB2_CAPT_SETUP 263,9861
#define CS4231_MIN_ATEN 265,9988
#define CS4231_MAX_ATEN 266,10020
#define CS4231_MAX_DEV_ATEN 267,10053
#define CS4231_MON_MIN_ATEN 269,10087
#define CS4231_MON_MAX_ATEN 270,10127
#define CS4231_DEFAULT_PLAYGAIN 272,10169
#define CS4231_DEFAULT_RECGAIN 273,10211
#define CS4231_MIN_GAIN 275,10254
#define CS4231_MAX_GAIN 276,10286
#define CS4231_PRECISION 278,10320
#define CS4231_CHANNELS 279,10387
#define CS4231_RATE 281,10454

drivers/sbus/audio/dbri.c,4142
#define DBRI_DEBUG72,2881
#define dprintk(dprintk76,2920
#define D_GEN	77,2970
#define D_INT	78,2991
#define D_CMD	79,3012
#define D_MM	80,3033
#define D_USR	81,3053
static int dbri_debug 84,3135
static char *cmds[87,3193
#define dumpcmd 93,3361
#define DBRI_CMD(DBRI_CMD95,3448
#define dprintk(dprintk99,3525
#define dumpcmd100,3547
#define DBRI_CMD(DBRI_CMD101,3563
#define MAX_DRIVERS	107,3663
static struct sparcaudio_driver drivers[109,3733
static int num_drivers 110,3787
static int dbri_locked 151,5627
static volatile int * dbri_cmdlock(153,5686
static void dbri_cmdsend(162,5911
static void dbri_reset(183,6665
static void dbri_detach(196,6964
static void dbri_initialize(206,7206
static __u32 reverse_bytes(252,8469
static void transmission_complete_intr(290,9852
static void reception_complete_intr(325,10963
static void dbri_intr(356,11933
static void reset_pipe(449,14728
static void setup_pipe(473,15342
enum master_or_slave master_or_slave491,15818
enum master_or_slave { CHImaster,491,15818
enum master_or_slave { CHImaster, CHIslave 491,15818
static void reset_chi(493,15865
enum in_or_out in_or_out556,18077
enum in_or_out { PIPEinput,556,18077
enum in_or_out { PIPEinput, PIPEoutput 556,18077
static void link_time_slot(558,18120
static void xmit_fixed(603,19649
static void recv_fixed(650,21187
static void xmit_on_pipe(671,21783
static void recv_on_pipe(773,25005
static void mmcodec_default(854,27547
static void mmcodec_init_data(882,28357
static void mmcodec_setctrl(924,29858
static int mmcodec_init(998,32546
static int dbri_open(1050,33713
static void dbri_release(1060,33916
static int dbri_ioctl(1066,34064
static void dbri_audio_output_callback(1073,34259
static void dbri_start_output(1080,34431
static void dbri_stop_output(1089,34733
static void dbri_start_input(1096,34878
static void dbri_stop_input(1101,35006
static void dbri_audio_getdev(1105,35070
static int dbri_set_output_volume(1110,35190
static int dbri_get_output_volume(1115,35290
static int dbri_set_input_volume(1120,35378
static int dbri_get_input_volume(1125,35477
static int dbri_set_monitor_volume(1130,35564
static int dbri_get_monitor_volume(1135,35665
static int dbri_set_output_balance(1140,35754
static int dbri_get_output_balance(1145,35856
static int dbri_set_input_balance(1150,35945
static int dbri_get_input_balance(1155,36046
static int dbri_set_output_channels(1160,36134
static int dbri_get_output_channels(1165,36234
static int dbri_set_input_channels(1170,36324
static int dbri_get_input_channels(1175,36423
static int dbri_set_output_precision(1180,36512
static int dbri_get_output_precision(1185,36613
static int dbri_set_input_precision(1190,36704
static int dbri_get_input_precision(1195,36804
static int dbri_set_output_port(1200,36894
static int dbri_get_output_port(1205,36990
static int dbri_set_input_port(1210,37076
static int dbri_get_input_port(1215,37171
static int dbri_set_output_encoding(1220,37256
static int dbri_get_output_encoding(1225,37355
static int dbri_set_input_encoding(1230,37445
static int dbri_get_input_encoding(1235,37543
static int dbri_set_output_rate(1240,37632
static int dbri_get_output_rate(1245,37728
static int dbri_set_input_rate(1250,37814
static int dbri_get_input_rate(1255,37909
static int dbri_sunaudio_getdev_sunos(1260,37994
static int dbri_get_output_ports(1265,38086
static int dbri_get_input_ports(1270,38173
static int dbri_set_output_muted(1275,38259
static int dbri_get_output_muted(1280,38356
static struct sparcaudio_operations dbri_ops 1287,38445
void dbri_isdn_init(1341,39759
int dbri_get_irqnum(1368,40799
int dbri_get_liu_state(1382,41094
void dbri_liu_init(1397,41359
void dbri_liu_activate(1415,41782
void dbri_liu_deactivate(1439,42323
void dbri_dxmit(1453,42587
void dbri_drecv(1468,42982
int dbri_bopen(1484,43411
void dbri_bclose(1518,44369
void dbri_bxmit(1532,44644
void dbri_brecv(1549,45131
struct foreign_interface dbri_foreign_interface 1567,45713
static int dbri_attach(1589,46305
int init_module(1671,48691
void cleanup_module(1703,49376

drivers/sbus/audio/dbri.h,6133
#define _DBRI_H_8,139
struct dbri_regs dbri_regs12,183
#define DBRI_NO_CMDS	22,539
#define DBRI_NO_INTS	23,563
#define DBRI_INT_BLK	24,586
#define DBRI_NO_DESCS	25,610
#define DBRI_MM_ONB	27,636
#define DBRI_MM_SB	28,658
struct dbri_mem dbri_mem30,680
struct dbri_dma dbri_dma43,942
struct dbri_pipe dbri_pipe49,1150
struct dbri_desc dbri_desc58,1499
struct dbri dbri71,1913
#define D_P	100,2731
#define D_G	101,2796
#define D_S	102,2847
#define D_E	103,2899
#define D_X	104,2950
#define D_T	105,2997
#define D_N	106,3061
#define D_C	107,3125
#define D_F	108,3190
#define D_D	109,3244
#define D_H	110,3290
#define D_R	111,3334
#define D_LITTLE_END	115,3440
#define D_BIG_END	116,3485
#define D_MRR	117,3527
#define D_MLE	118,3593
#define D_LBG	119,3660
#define D_MBE	120,3722
#define D_IR	121,3781
#define D_ENPIO3	125,3901
#define D_ENPIO2	126,3944
#define D_ENPIO1	127,3987
#define D_ENPIO0	128,4030
#define D_ENPIO	129,4073
#define D_PIO3	130,4123
#define D_PIO2	131,4186
#define D_PIO1	132,4237
#define D_PIO0	133,4282
#define D_WAIT	137,4368
#define D_PAUSE	138,4409
#define D_JUMP	139,4453
#define D_IIQ	140,4497
#define D_REX	141,4549
#define D_SDP	142,4613
#define D_CDP	143,4654
#define D_DTS	144,4720
#define D_SSP	145,4762
#define D_CHI	146,4807
#define D_NT	147,4852
#define D_TE	148,4887
#define D_CDEC	149,4922
#define D_TEST	150,4960
#define D_CDM	151,4997
#define D_PIPE(D_PIPE156,5084
#define D_SDP_2SAME	160,5194
#define D_SDP_CHANGE	161,5263
#define D_SDP_EVERY	162,5317
#define D_SDP_EOL	163,5370
#define D_SDP_IDLE	164,5423
#define D_SDP_MEM	167,5505
#define D_SDP_HDLC	168,5552
#define D_SDP_HDLC_D	169,5579
#define D_SDP_SER	170,5638
#define D_SDP_FIXED	171,5687
#define D_SDP_MODE(D_SDP_MODE172,5732
#define D_SDP_TO_SER	174,5769
#define D_SDP_FROM_SER	175,5814
#define D_SDP_MSB	176,5861
#define D_SDP_LSB	177,5915
#define D_SDP_P	178,5969
#define D_SDP_A	179,6014
#define D_SDP_C	180,6050
#define D_DTS_VI	183,6110
#define D_DTS_VO	184,6174
#define D_DTS_INS	185,6239
#define D_DTS_DEL	186,6288
#define D_DTS_PRVIN(D_DTS_PRVIN187,6337
#define D_DTS_PRVOUT(D_DTS_PRVOUT188,6393
#define D_TS_LEN(D_TS_LEN191,6483
#define D_TS_CYCLE(D_TS_CYCLE192,6552
#define D_TS_DI(D_TS_DI193,6615
#define D_TS_1CHANNEL	194,6660
#define D_TS_MONITOR	195,6725
#define D_TS_NONCONTIG	196,6773
#define D_TS_ANCHOR	197,6830
#define D_TS_MON(D_TS_MON198,6885
#define D_TS_NEXT(D_TS_NEXT199,6943
#define D_CHI_CHICM(D_CHI_CHICM202,7065
#define D_CHI_IR	203,7115
#define D_CHI_EN	204,7173
#define D_CHI_OD	205,7227
#define D_CHI_FE	206,7276
#define D_CHI_FD	207,7341
#define D_CHI_BPF(D_CHI_BPF208,7384
#define D_NT_FBIT	211,7478
#define D_NT_NBF	212,7520
#define D_NT_IRM_IMM	213,7589
#define D_NT_IRM_EN	214,7659
#define D_NT_ISNT	215,7725
#define D_NT_FT	216,7784
#define D_NT_EZ	217,7828
#define D_NT_IFA	218,7881
#define D_NT_ACT	219,7937
#define D_NT_MFE	220,7986
#define D_NT_RLB(D_NT_RLB221,8034
#define D_NT_LLB(D_NT_LLB222,8083
#define D_NT_FACT	223,8131
#define D_NT_ABV	224,8179
#define D_CDEC_CK(D_CDEC_CK227,8255
#define D_CDEC_FED(D_CDEC_FED228,8305
#define D_CDEC_RED(D_CDEC_RED229,8368
#define D_TEST_RAM(D_TEST_RAM232,8441
#define D_TEST_SIZE(D_TEST_SIZE233,8491
#define D_TEST_ROMONOFF	234,8530
#define D_TEST_PROC	235,8597
#define D_TEST_SER	236,8647
#define D_TEST_RAMREAD	237,8699
#define D_TEST_RAMWRITE	238,8763
#define D_TEST_RAMBIST	239,8830
#define D_TEST_MCBIST	240,8886
#define D_TEST_DUMP	241,8953
#define D_CDM_THI	244,9013
#define D_CDM_RHI	245,9071
#define D_CDM_RCE	246,9128
#define D_CDM_XCE	247,9191
#define D_CDM_XEN	248,9260
#define D_CDM_REN	249,9315
#define D_INTR_BRDY	252,9391
#define D_INTR_MINT	253,9447
#define D_INTR_IBEG	254,9501
#define D_INTR_IEND	255,9569
#define D_INTR_EOL	256,9637
#define D_INTR_CMDI	257,9676
#define D_INTR_XCMP	258,9726
#define D_INTR_SBRI	259,9785
#define D_INTR_FXDT	260,9836
#define D_INTR_CHIL	261,9883
#define D_INTR_COLL	262,9950
#define D_INTR_DBYT	263,10013
#define D_INTR_RBYT	264,10064
#define D_INTR_LINT	265,10116
#define D_INTR_UNDR	266,10160
#define D_INTR_TE	268,10203
#define D_INTR_NT	269,10224
#define D_INTR_CHI	270,10245
#define D_INTR_CMD	271,10267
#define D_INTR_GETCHAN(D_INTR_GETCHAN273,10290
#define D_INTR_GETCODE(D_INTR_GETCODE274,10335
#define D_INTR_GETCMD(D_INTR_GETCMD275,10379
#define D_INTR_GETVAL(D_INTR_GETVAL276,10422
#define D_INTR_GETRVAL(D_INTR_GETRVAL277,10462
#define D_P_0	279,10505
#define D_P_1	280,10546
#define D_P_2	281,10588
#define D_P_3	282,10630
#define D_P_4	283,10671
#define D_P_5	284,10708
#define D_P_6	285,10748
#define D_P_7	286,10771
#define D_P_8	287,10794
#define D_P_9	288,10817
#define D_P_10	289,10840
#define D_P_11	290,10865
#define D_P_12	291,10890
#define D_P_13	292,10915
#define D_P_14	293,10940
#define D_P_15	294,10965
#define D_P_16	295,10990
#define D_P_17	296,11031
#define D_P_18	297,11065
#define D_P_19	298,11102
#define D_P_20	299,11139
#define D_P_21	300,11176
#define D_P_22	301,11201
#define D_P_23	302,11226
#define D_P_24	303,11251
#define D_P_25	304,11276
#define D_P_26	305,11301
#define D_P_27	306,11326
#define D_P_28	307,11351
#define D_P_29	308,11376
#define D_P_30	309,11401
#define D_P_31	310,11426
#define DBRI_TD_F	314,11487
#define DBRI_TD_D	315,11532
#define DBRI_TD_CNT(DBRI_TD_CNT316,11582
#define DBRI_TD_B	317,11657
#define DBRI_TD_M	318,11705
#define DBRI_TD_I	319,11754
#define DBRI_TD_FCNT(DBRI_TD_FCNT320,11811
#define DBRI_TD_UNR	321,11856
#define DBRI_TD_ABT	322,11926
#define DBRI_TD_TBC	323,11980
#define DBRI_TD_STATUS(DBRI_TD_STATUS324,12038
#define DBRI_RD_F	327,12142
#define DBRI_RD_C	328,12187
#define DBRI_RD_B	329,12236
#define DBRI_RD_M	330,12284
#define DBRI_RD_BCNT(DBRI_RD_BCNT331,12333
#define DBRI_RD_CRC	332,12379
#define DBRI_RD_BBC	333,12430
#define DBRI_RD_ABT	334,12484
#define DBRI_RD_OVRN	335,12538
#define DBRI_RD_STATUS(DBRI_RD_STATUS336,12591
#define DBRI_RD_CNT(DBRI_RD_CNT337,12659

drivers/sbus/audio/dmy.c,2812
#define MAX_DRIVERS 31,733
static struct sparcaudio_driver drivers[32,755
static int num_drivers;33,809
dummy_set_output_encoding(43,1221
dummy_set_input_encoding(54,1482
static int dummy_get_output_encoding(64,1733
static int dummy_get_input_encoding(70,1924
dummy_set_output_rate(77,2127
dummy_set_input_rate(88,2387
static int dummy_get_output_rate(98,2637
static int dummy_get_input_rate(104,2827
dummy_set_output_channels(112,3082
dummy_set_input_channels(128,3439
static int dummy_get_input_channels(142,3733
static int dummy_get_output_channels(148,3925
static int dummy_get_output_precision(154,4116
static int dummy_get_input_precision(160,4309
static int dummy_set_output_precision(166,4503
static int dummy_set_input_precision(173,4755
static int dummy_output_muted(181,5032
static int dummy_get_output_muted(191,5306
static int dummy_get_formats(197,5493
static int dummy_get_output_ports(203,5661
static int dummy_get_input_ports(208,5792
static int dummy_set_output_port(214,5924
static int dummy_set_input_port(221,6137
static int dummy_get_output_port(228,6351
static int dummy_get_input_port(234,6534
static int dummy_get_output_error(240,6718
static int dummy_get_input_error(246,6908
static int dummy_get_output_samples(252,7099
static int dummy_get_output_pause(258,7288
static int dummy_set_output_volume(264,7478
static int dummy_get_output_volume(271,7711
static int dummy_set_output_balance(277,7896
static int dummy_get_output_balance(286,8227
static int dummy_play_gain(293,8446
static int dummy_get_input_samples(325,9763
static int dummy_get_input_pause(331,9953
static int dummy_set_monitor_volume(337,10144
static int dummy_get_monitor_volume(342,10239
static int dummy_set_input_volume(347,10323
static int dummy_get_input_volume(354,10559
static int dummy_set_input_balance(360,10745
static int dummy_get_input_balance(369,11081
static int dummy_record_gain(375,11276
static void dummy_chip_reset(408,12641
static int dummy_open(427,13433
static void dummy_release(453,14264
static void dummy_output_done_task(467,14719
static void dummy_start_output(477,15023
static void dummy_start_input(497,15621
static void dummy_stop_output(504,15870
static void dummy_stop_input(510,16049
static int dummy_set_output_pause(516,16229
static int dummy_set_input_pause(527,16494
static int dummy_set_input_error(537,16757
static int dummy_set_output_error(542,16849
static int dummy_set_output_samples(551,17110
static int dummy_set_input_samples(560,17377
static void dummy_audio_getdev(570,17709
static int dummy_audio_getdev_sunos(579,18037
static struct sparcaudio_operations dummy_ops 584,18124
int init_module(645,19826
static int dummy_attach(661,20219
static void dummy_detach(703,21306
void cleanup_module(709,21430

drivers/sbus/audio/dummy.h,487
#define _DUMMY_H_8,123
#define DUMMY_OUTFILE 13,194
struct dummy_chip dummy_chip17,272
#define DUMMY_MIN_ATEN 23,381
#define DUMMY_MAX_ATEN 24,412
#define DUMMY_MAX_DEV_ATEN 25,444
#define DUMMY_MON_MIN_ATEN 27,477
#define DUMMY_MON_MAX_ATEN 28,516
#define DUMMY_DEFAULT_PLAYGAIN 30,557
#define DUMMY_DEFAULT_RECGAIN 31,598
#define DUMMY_MIN_GAIN 33,640
#define DUMMY_MAX_GAIN 34,671
#define DUMMY_PRECISION 36,704
#define DUMMY_CHANNELS 37,770
#define DUMMY_RATE 39,836

drivers/ap1000/am79c830.h,5795
typedef int	formac_reg;formac_reg12,301
struct formac formac14,326
#define st1u	17,440
#define st1l	18,488
#define C1_SOFTWARE_RESET	88,4141
#define C1_IRMEMWI	89,4169
#define C1_IRMEMWO	90,4191
#define C1_IDLE_LISTEN	91,4213
#define C1_CLAIM_LISTEN	92,4239
#define C1_BEACON_LISTEN	93,4266
#define C1_LOAD_TVX	94,4293
#define C1_SEND_NR_TOKEN	95,4316
#define C1_SEND_R_TOKEN	96,4346
#define C1_ENTER_SI_MODE	97,4376
#define C1_EXIT_SI_MODE	98,4406
#define C1_CLR_SYNCQ_LOCK	99,4436
#define C1_CLR_ASYNCQ0_LOCK	100,4467
#define C1_CLR_ASYNCQ1_LOCK	101,4500
#define C1_CLR_ASYNCQ2_LOCK	102,4533
#define C1_CLR_RECVQ_LOCK	103,4566
#define C1_CLR_ALL_LOCKS	104,4597
#define C2_XMIT_SYNCQ	107,4653
#define C2_XMIT_ASYNCQ0	108,4678
#define C2_XMIT_ASYNCQ1	109,4705
#define C2_XMIT_ASYNCQ2	110,4732
#define C2_ABORT_XMIT	111,4759
#define C2_RESET_XMITQS	112,4787
#define C2_SET_TAG	113,4817
#define C2_EN_RECV_FRAME	114,4842
#define S1_XMIT_ABORT	117,4937
#define S1_XABORT_ASYNC2	118,4971
#define S1_XABORT_ASYNC1	119,5007
#define S1_XABORT_ASYNC0	120,5043
#define S1_XABORT_SYNC	121,5079
#define S1_XBUF_FULL_SYNC	122,5114
#define S1_XBUF_FULL_ASYNC	123,5151
#define S1_XDONE_SYNC	124,5189
#define S1_END_CHAIN_ASYNC2	125,5223
#define S1_END_CHAIN_ASYNC1	126,5262
#define S1_END_CHAIN_ASYNC0	127,5301
#define S1_END_CHAIN_SYNC	128,5340
#define S1_END_FRAME_ASYNC2	129,5377
#define S1_END_FRAME_ASYNC1	130,5416
#define S1_END_FRAME_ASYNC0	131,5455
#define S1_END_FRAME_SYNC	132,5494
#define S1_BUF_UNDERRUN_ASYNC2	133,5531
#define S1_BUF_UNDERRUN_ASYNC1	134,5573
#define S1_BUF_UNDERRUN_ASYNC0	135,5615
#define S1_BUF_UNDERRUN_SYNC	136,5657
#define S1_PAR_ERROR_ASYNC2	137,5697
#define S1_PAR_ERROR_ASYNC1	138,5736
#define S1_PAR_ERROR_ASYNC0	139,5775
#define S1_PAR_ERROR_SYNC	140,5814
#define S1_XINSTR_FULL_ASYNC2	141,5851
#define S1_XINSTR_FULL_ASYNC1	142,5892
#define S1_XINSTR_FULL_ASYNC0	143,5933
#define S1_XINSTR_FULL_SYNC	144,5974
#define S1_QUEUE_LOCK_ASYNC2	145,6013
#define S1_QUEUE_LOCK_ASYNC1	146,6053
#define S1_QUEUE_LOCK_ASYNC0	147,6093
#define S1_QUEUE_LOCK_SYNC	148,6133
#define S2_RECV_COMPLETE	151,6236
#define S2_RECV_BUF_EMPTY	152,6272
#define S2_RECV_ABORT	153,6309
#define S2_RECV_BUF_FULL	154,6343
#define S2_RECV_FIFO_OVF	155,6379
#define S2_RECV_FRAME	156,6415
#define S2_RECV_FRCT_OVF	157,6449
#define S2_NP_SIMULT_LOAD	158,6485
#define S2_ERR_SPECIAL_FR	159,6522
#define S2_CLAIM_STATE	160,6559
#define S2_MY_CLAIM	161,6594
#define S2_HIGHER_CLAIM	162,6626
#define S2_LOWER_CLAIM	163,6662
#define S2_BEACON_STATE	164,6697
#define S2_MY_BEACON	165,6733
#define S2_OTHER_BEACON	166,6766
#define S2_RING_OP	167,6802
#define S2_MULTIPLE_DA	168,6833
#define S2_TOKEN_ERR	169,6868
#define S2_TOKEN_ISSUED	170,6901
#define S2_TVX_EXP	171,6937
#define S2_TRT_EXP	172,6968
#define S2_MISSED_FRAME	173,6999
#define S2_ADDRESS_DET	174,7035
#define S2_PHY_INVALID	175,7070
#define S2_LOST_CTR_OVF	176,7105
#define S2_ERR_CTR_OVF	177,7141
#define S2_FRAME_CTR_OVF	178,7176
#define S2_SHORT_IFG	179,7212
#define S2_DUPL_CLAIM	180,7245
#define S2_TRT_EXP_RECOV	181,7279
#define M1_SINGLE_FRAME	184,7337
#define M1_MODE	185,7369
#define M1_MODE_INITIALIZE	186,7394
#define M1_MODE_MEMORY	187,7428
#define M1_MODE_ONLINE_SP	188,7459
#define M1_MODE_ONLINE	189,7492
#define M1_MODE_INT_LOOP	190,7523
#define M1_MODE_EXT_LOOP	191,7555
#define M1_SHORT_ADRS	192,7587
#define M1_ADDET	193,7617
#define M1_ADDET_NORM	194,7642
#define M1_ADDET_METOO	195,7672
#define M1_ADDET_NSA_NOTME	196,7703
#define M1_ADDET_NSA	197,7737
#define M1_ADDET_DISABLE_RECV	198,7766
#define M1_ADDET_LIM_PROMISC	199,7803
#define M1_ADDET_PROMISC	200,7839
#define M1_SELECT_RA	201,7871
#define M1_DISABLE_CARRY	202,7900
#define M1_EXT_GRP	203,7932
#define M1_EXT_GRP_MYGRP	204,7959
#define M1_EXT_GRP_SOFT	205,7991
#define M1_EXT_GRP_UPPER24	206,8023
#define M1_EXT_GRP_UPPER16	207,8057
#define M1_LOCK_XMIT_QS	208,8091
#define M1_FULL_DUPLEX	209,8123
#define M1_XMTINH_PIN	210,8154
#define M2_TAGMODE	213,8206
#define M2_STRIP_FCS	214,8233
#define M2_CHECK_PARITY	215,8262
#define M2_EVEN_PARITY	216,8294
#define M2_LSB_FIRST	217,8325
#define M2_RCV_BYTE_BDRY_MASK	218,8354
#define M2_RCV_BYTE_BDRY	219,8391
#define M2_ENABLE_HSREQ	220,8423
#define M2_ENABLE_NPDMA	221,8455
#define M2_SYNC_NPDMA	222,8487
#define M2_SYMBOL_CTRL	223,8517
#define M2_RECV_BAD_FRAMES	224,8548
#define M2_AFULL_MASK	225,8582
#define M2_AFULL	226,8612
#define SM_REV_MASK	229,8659
#define SM_REV	230,8687
#define SM_SEND_IMM_MODE	231,8711
#define SM_TOKEN_MODE	232,8743
#define SM_TOKEN_MODE_NR	233,8773
#define SM_TOKEN_MODE_ENTER_R	234,8805
#define SM_TOKEN_MODE_ENTER_NR	235,8842
#define SM_TOKEN_MODE_R	236,8880
#define SM_RCV_STATE	237,8912
#define SM_XMIT_STATE	238,8941
#define SM_MDR_PENDING	239,8971
#define SM_MDR_TAG	240,9002
#define TD_MORE	243,9064
#define TD_MAGIC	244,9093
#define TD_BYTE_BDRY_MASK	245,9122
#define TD_BYTE_BDRY_1	246,9159
#define TD_XMIT_DONE	247,9194
#define TD_NO_FCS	248,9227
#define TD_XMIT_ABORT	249,9257
#define TD_BYTE_BDRY_LG	250,9291
#define PT_MAGIC	253,9373
#define RS_VALID	256,9437
#define RS_ABORTED	257,9466
#define RS_SRC_ROUTE	258,9497
#define RS_E_INDIC	259,9530
#define RS_A_INDIC	260,9561
#define RS_C_INDIC	261,9592
#define RS_ERROR	262,9623
#define RS_ADDR_MATCH	263,9652
#define RS_FRAME_TYPE	264,9686
#define RS_FT_SMT	265,9720
#define RS_FT_LLC	266,9750
#define RS_FT_IMPL	267,9780
#define RS_FT_MAC	268,9811
#define RS_FT_LLC_SYNC	269,9841
#define RS_FT_IMPL_SYNC	270,9876
#define RS_BYTE_BDRY_MASK	271,9912
#define RS_BYTE_BDRY	272,9949
#define RS_BYTE_BDRY_LG	273,9982
#define RS_LENGTH	275,10011

drivers/ap1000/apfddi.c,1381
volatile struct formac *mac;50,1126
volatile struct plc *plc;51,1155
volatile int *csr0;52,1181
volatile int *csr1;53,1201
volatile int *buffer_mem;54,1221
volatile int *fifo;55,1247
#define APFDDI_DEBUG 57,1268
#define APFDDI_IRQ 59,1292
#define T(T61,1317
struct plc_info plc_info 63,1355
struct mac_info mac_info 77,1717
u_char fddi_bitrev[89,2057
static u_char apfddi_saddr[125,3805
struct device *apfddi_device 127,3878
struct net_device_stats *apfddi_stats 128,3915
volatile struct apfddi_queue *apfddi_queue_top 130,3962
void map_regs(132,4018
int ring_op;144,4430
void apfddi_startup(146,4444
void apfddi_off(195,5390
void apfddi_sleep(201,5456
void apfddi_poll(207,5519
void set_cf_join(215,5631
void set_ring_op(231,5896
void rmt_event(243,6120
static int apfddi_hard_header(267,6850
static int apfddi_rebuild_header(369,9271
static int apfddi_set_mac_address(402,10160
static void apfddi_set_multicast_list(410,10314
static int apfddi_do_ioctl(417,10447
static int apfddi_set_config(425,10603
int apfddi_open(436,10806
int apfddi_stop(476,11581
int apfddi_init(487,11732
static void apfddi_interrupt(535,13161
static char *flagbits[553,13525
void dump_packet(557,13614
static void apfddi_print_frame(593,14515
static int apfddi_xmit(628,15494
void print_mbuf(684,16425
static struct net_device_stats *apfddi_get_stats(695,16703

drivers/ap1000/am79c864.h,3556
typedef int	plc_reg;plc_reg12,293
struct plc plc14,315
#define CA_NOISE_TIMER	45,941
#define CA_TNE_16BIT	46,972
#define CA_TPC_16BIT	47,1001
#define CA_REQ_SCRUB	48,1030
#define CA_VSYM_INTR_MODE	49,1059
#define CA_MINI_INTR_MODE	50,1092
#define CA_LOOPBACK	51,1125
#define CA_FOT_OFF	52,1153
#define CA_EB_LOOP	53,1180
#define CA_LM_LOOP	54,1207
#define CA_BYPASS	55,1234
#define CA_REM_LOOP	56,1260
#define CA_RF_DISABLE	57,1288
#define CA_RUN_BIST	58,1318
#define CB_CONFIG_CTRL	61,1368
#define CB_MATCH_LS	62,1399
#define CB_MATCH_LS_ANY	63,1427
#define CB_MATCH_LS_QLS	64,1459
#define CB_MATCH_LS_MLS	65,1491
#define CB_MATCH_LS_HLS	66,1523
#define CB_MATCH_LS_ILS	67,1555
#define CB_MAINT_LS	68,1587
#define CB_MAINT_LS_QLS	69,1615
#define CB_MAINT_LS_ILS	70,1647
#define CB_MAINT_LS_HLS	71,1679
#define CB_MAINT_LS_MLS	72,1711
#define CB_MAINT_LS_PDR	73,1743
#define CB_CLASS_S	74,1775
#define CB_PC_LCT	75,1802
#define CB_PC_LCT_NONE	76,1828
#define CB_PC_LCT_PDR	77,1859
#define CB_PC_LCT_IDLE	78,1889
#define CB_PC_LCT_LOOP	79,1920
#define CB_PC_JOIN	80,1951
#define CB_LONG_LCT	81,1978
#define CB_PC_MAINT	82,2006
#define CB_PCM_CTRL	83,2034
#define CB_PC_START	84,2062
#define CB_PC_TRACE	85,2090
#define CB_PC_STOP	86,2118
#define SA_SIG_DETECT	89,2169
#define SA_PREV_LS	90,2199
#define SA_PREV_LS_QLS	91,2226
#define SA_PREV_LS_MLS	92,2257
#define SA_PREV_LS_HLS	93,2288
#define SA_PREV_LS_ILS	94,2319
#define SA_LINE_ST	95,2350
#define SA_LINE_ST_NLS	96,2377
#define SA_LINE_ST_ALS	97,2408
#define SA_LINE_ST_ILS4	98,2439
#define SA_LINE_ST_QLS	99,2471
#define SA_LINE_ST_MLS	100,2502
#define SA_LINE_ST_HLS	101,2533
#define SA_LINE_ST_ILS	102,2564
#define SA_LSM_STATE	103,2595
#define SA_UNKN_LINE_ST	104,2624
#define SA_SYM_PAIR_CTR	105,2656
#define SB_RF_STATE	108,2712
#define SB_RF_STATE_REPEAT	109,2740
#define SB_RF_STATE_IDLE	110,2774
#define SB_RF_STATE_HALT1	111,2806
#define SB_RF_STATE_HALT2	112,2839
#define SB_PCI_STATE	113,2872
#define SB_PCI_STATE_REMOVED	114,2901
#define SB_PCI_STATE_INS_SCR	115,2937
#define SB_PCI_STATE_REM_SCR	116,2973
#define SB_PCI_STATE_INSERTED	117,3009
#define SB_PCI_SCRUB	118,3046
#define SB_PCM_STATE	119,3075
#define SB_PCM_STATE_OFF	120,3104
#define SB_PCM_STATE_BREAK	121,3136
#define SB_PCM_STATE_TRACE	122,3170
#define SB_PCM_STATE_CONNECT	123,3204
#define SB_PCM_STATE_NEXT	124,3240
#define SB_PCM_STATE_SIGNAL	125,3273
#define SB_PCM_STATE_JOIN	126,3308
#define SB_PCM_STATE_VERIFY	127,3341
#define SB_PCM_STATE_ACTIVE	128,3376
#define SB_PCM_STATE_MAIN	129,3411
#define SB_PCM_SIGNALING	130,3444
#define SB_LSF	131,3476
#define SB_RCF	132,3500
#define SB_TCF	133,3524
#define SB_BREAK_REASON	134,3548
#define SB_BREAK_REASON_NONE	135,3580
#define SB_BREAK_REASON_START	136,3616
#define SB_BREAK_REASON_T_OUT	137,3653
#define SB_BREAK_REASON_NS_MAX	138,3690
#define SB_BREAK_REASON_QLS	139,3728
#define SB_BREAK_REASON_ILS	140,3763
#define SB_BREAK_REASON_HLS	141,3798
#define IE_NP_ERROR	144,3873
#define IE_SIGNAL_OFF	145,3901
#define IE_LE_CTR	146,3931
#define IE_MINI_CTR	147,3957
#define IE_VSYM_CTR	148,3985
#define IE_PHY_INVALID	149,4013
#define IE_EBUF_ERR	150,4044
#define IE_TNE_EXP	151,4072
#define IE_TPC_EXP	152,4099
#define IE_PCM_ENABLED	153,4126
#define IE_PCM_BREAK	154,4157
#define IE_SELF_TEST	155,4186
#define IE_TRACE_PROP	156,4215
#define IE_PCM_CODE	157,4245
#define IE_LS_MATCH	158,4273
#define IE_PARITY_ERR	159,4301
#define BIST_CORRECT	162,4371

drivers/ap1000/ap.c,737
#define AP_DEBUG 30,692
#define MAJOR_NR 32,712
#define AP_DRIVER 33,743
#define NUM_APDEVS 36,787
#define MAX_REQUESTS 37,808
static struct wait_queue * busy_wait 39,832
static int ap_blocksizes[41,878
static int ap_length[42,916
static int ap_fds[43,950
#define SECTOR_BLOCK_SHIFT 45,982
#define AP_BLOCK_SHIFT 46,1011
#define AP_BLOCK_SIZE 47,1053
static volatile int request_count 49,1096
static void ap_release(51,1136
static void ap_request(56,1226
void ap_complete(154,3217
char *ap_buffer(169,3528
static int ap_open(177,3661
static int ap_ioctl(211,4299
void ap_open_reply(232,4720
static struct file_operations ap_fops 247,5029
int ap_init(262,5551
int init_module(293,6140
void cleanup_module(302,6345

drivers/ap1000/apfddi.h,2051
#define BUFFER_MEM	8,225
#define CSR0	9,252
#define CSR1	10,274
#define PLC	11,296
#define FORMAC	12,317
#define FIFO	13,341
#define BUFFER_SIZE	16,392
#define CS0_INT_REQ	19,458
#define CS0_MAC_IRQ	20,525
#define CS0_PHY_IRQ	21,590
#define CS0_LED2	22,652
#define CS0_DO_IRQ	23,697
#define CS0_INT_ENABLE	24,748
#define CS0_DMA_ENABLE	25,811
#define CS0_DMA_RECV	26,868
#define CS0_LED1	27,937
#define CS0_LED0	28,982
#define CS0_HREQ	29,1033
#define CS0_HREQ_WSPEC	30,1087
#define CS0_HREQ_RECV	31,1145
#define CS0_HREQ_WS	32,1200
#define CS0_HREQ_WA0	33,1258
#define CS0_HREQ_WA1	34,1313
#define CS0_HREQ_WA2	35,1368
#define CS1_THIS_QAF	38,1443
#define CS1_FIFO_TAG	39,1501
#define CS1_BUF_RD_TAG	40,1564
#define CS1_BUF_WR_TAG	41,1635
#define CS1_TAGMODE	42,1695
#define CS1_RESET_MAC	43,1745
#define CS1_RESET_FIFO	44,1802
#define CS1_CLEAR_QAF	45,1850
#define CS1_FIFO_LEVEL	46,1915
#define FDDI_SMT	51,2014
#define FDDI_SMT_NSA	52,2037
#define FDDI_FC_LLC	53,2064
#define FDDI_FC_LLC_MASK	54,2090
#define LLC_UI	59,2162
#define LLC_UI_P	60,2182
#define LLC_DISC	61,2204
#define	LLC_DISC_P	62,2226
#define LLC_UA	63,2250
#define LLC_UA_P	64,2271
#define LLC_TEST	65,2293
#define LLC_TEST_P	66,2315
#define LLC_FRMR	67,2339
#define	LLC_FRMR_P	68,2361
#define LLC_DM	69,2385
#define	LLC_DM_P	70,2406
#define LLC_XID	71,2428
#define LLC_XID_P	72,2450
#define LLC_SABME	73,2473
#define LLC_SABME_P	74,2496
#define	LLC_RR	79,2557
#define	LLC_RNR	80,2578
#define	LLC_REJ	81,2600
#define	LLC_INFO	86,2658
#define LLC_X25_LSAP	91,2728
#define LLC_SNAP_LSAP	92,2754
#define LLC_ISO_LSAP	93,2781
struct fddi_header fddi_header98,2852
struct llc_header llc_header107,3062
#define FDDI_HDRLEN	115,3203
#define LLC_SNAPLEN	116,3259
#define FDDI_HARDHDR_LEN 117,3313
#define FDDIMTU	119,3369
} LoopbackType;LoopbackType129,3522
#define FIFO_TAG	132,3589
#define MAX_FRAME_LEN	134,3612
extern struct device *apfddi_device;140,3717
extern struct net_device_stats *apfddi_stats;141,3754

drivers/ap1000/apfddi-reg.h,224
extern volatile struct formac *mac;9,254
extern volatile struct plc *plc;10,290
extern volatile int *csr0;11,323
extern volatile int *csr1;12,350
extern volatile int *buffer_mem;13,377
extern volatile int *fifo;14,410

drivers/ap1000/bif.c,606
#define BIF_DEBUG 41,999
static int seq 43,1033
#define BIF_MTU 46,1061
static struct device *bif_device 48,1084
static struct net_device_stats *bif_stats 49,1122
static int bif_hard_header(58,1435
static int bif_rebuild_header(74,1777
static int bif_set_mac_address(86,2074
static void bif_set_multicast_list(92,2199
static int bif_do_ioctl(97,2269
static int bif_set_config(103,2396
int bif_init(112,2566
int bif_open(153,3725
static void dump_packet(162,3860
static int bif_xmit(193,4661
int bif_rx(229,5366
int bif_stop(264,6034
static struct net_device_stats *bif_get_stats(277,6189

drivers/ap1000/ddv.c,2563
#define __KERNEL_SYSCALLS__24,562
#define MAJOR_NR 33,784
#define DDV_DEBUG 39,887
#define AIR_DISK 40,907
#define SECTOR_SIZE 42,927
#define PARTN_BITS 45,989
#define NUM_DDVDEVS 46,1010
#define PARDISK_BASE 48,1047
#define STRIPE_SHIFT 50,1154
#define STRIPE_SECTORS 51,1179
#define MAX_BNUM 53,1256
#define MAX_REQUEST 54,1276
#define REQUEST_LOW 55,1313
#define REQUEST_HIGH 56,1336
#define SECTOR_BLOCK_SHIFT 61,1473
#define SECTOR_MASK 63,1503
#define DDV_READ_AHEAD 66,1578
static int have_ddv_board 68,1605
static unsigned num_options 69,1636
static unsigned this_option 70,1669
static char *ddv_opcodep 84,2194
static struct request *next_request 85,2227
static struct wait_queue * busy_wait 87,2272
static int ddv_blocksizes[89,2318
int ddv_sect_length[90,2373
int ddv_blk_length[91,2424
static struct remote_request *rem_queue 94,2550
static struct remote_request *rem_queue_end;95,2598
static struct wait_queue *ddv_daemon_wait 96,2643
static int opiu_kernel_loaded 98,2694
} ddv_stats;103,2853
static struct hd_struct partition_tables[105,2867
static struct gendisk ddv_gendisk 107,2923
struct ddv_geometry ddv_geometry126,3430
static struct ddv_geometry ddv_geometry;133,3552
struct remote_request remote_request136,3595
static void ddv_set_optadr(148,3921
extern struct RequestTable *RTable;159,4161
extern struct OPrintBufArray *PrintBufs;160,4197
extern struct OAlignBufArray *AlignBufs;161,4238
extern struct DiskInfo *DiskInfo;162,4279
static void ddv_release(164,4314
static unsigned in_request 176,4511
static unsigned req_queued 177,4543
static void ddv_end_request(179,4576
static int request_ok(223,5692
static void complete_request(256,6467
static int completion_pointer 265,6598
static void check_completion(267,6634
static struct request *get_request_queue(296,7239
static void ddv_rem_complete(343,8038
static int ddv_daemon(362,8414
static void ddv_rem_queue(441,10261
static inline unsigned pardisk_num(472,10798
static inline int contiguous(489,11120
static void ddv_request1(501,11468
static void ddv_request(623,14390
static void check_printbufs(631,14459
static void ddv_interrupt(656,15162
static int ddv_open(669,15398
static void ddv_open_reply(685,15742
static void ddv_load_opiu(699,16049
static int ddv_revalidate(769,17744
static int ddv_ioctl(819,18941
static struct file_operations ddv_fops 878,20507
static void ddv_status(893,20991
int ddv_init(922,21863
static void ddv_geninit(951,22434
int init_module(989,23113
void cleanup_module(1000,23380

drivers/ap1000/ddv_util.c,359
#define __NO_VERSION__8,225
#define GENDISK_STRUCT 17,415
struct RequestTable *RTable=19,451
struct OPrintBufArray *PrintBufs=20,485
struct OAlignBufArray *AlignBufs=21,524
struct DiskInfo *DiskInfo=22,563
extern int ddv_length[24,596
int ddv_mlist_available(26,622
int ddv_get_mlist(37,802
void ddv_load_kernel(60,1266
int ddv_restart_cpu(84,1913

drivers/ap1000/mac.c,1497
#define MAC_DEBUG 33,784
#define IDLE 36,832
#define XMITTING	37,858
#define RECVING	38,877
#define DMA_XMIT_THRESHOLD 44,994
#define DMA_RECV_THRESHOLD 45,1024
#define RECV_THRESHOLD 51,1159
#define DMA_RESET_MASKS 53,1193
#define DMA_INTR_REQS 56,1305
typedef unsigned int	mac_status_t;mac_status_t61,1446
static volatile struct mac_queue *mac_queue_top 63,1482
static volatile struct mac_queue *mac_queue_bottom 64,1538
struct formac_state formac_state66,1598
#define SPFRAMES_SIZE	90,2238
#define RECV_BUF_START	91,2302
#define RECV_BUF_END	92,2339
#define RECV_BUF_SIZE	93,2385
#define XMIT_BUF_START	94,2439
#define XMIT_BUF_END	95,2475
#define S2_RMT_EVENTS	97,2509
struct mac_info *this_mac_info;102,2747
struct formac_state this_mac_state;103,2779
mac_init(106,2820
mac_inited(168,4798
void mac_make_spframes(245,7421
void mac_reset(291,9160
void mac_claim(319,9958
void mac_disable(324,10020
void mac_stats(337,10288
void mac_sleep(352,10774
void mac_poll(358,10900
mac_xmit_alloc(491,14494
mac_queue_frame(505,14847
mac_xalloc(526,15406
mac_recv_frame(553,16034
mac_discard_frame(609,17540
mac_xmit_space(619,17695
mac_recv_level(637,18123
int mac_xmit_done(650,18332
int mac_queue_append 660,18485
#define CHECK_IF_CHECKSUM_REQUIRED(CHECK_IF_CHECKSUM_REQUIRED693,19192
void mac_process(705,19561
#define DMA_IN(DMA_IN1048,29003
#define DMA_OUT(DMA_OUT1049,29053
void mac_dma_complete(1054,29147
static void mac_print_state(1168,31887

drivers/ap1000/mac.h,328
struct mac_info mac_info12,277
struct mac_buf mac_buf25,575
struct dma_chan dma_chan55,1322
#define ROUND4(ROUND468,1795
#define ROUND8(ROUND869,1830
#define ROUND16(ROUND1670,1865
#define ROUNDLINE(ROUNDLINE71,1903
#define NWORDS(NWORDS73,1936
#define NLINES(NLINES74,1971
struct mac_queue mac_queue79,2077

drivers/ap1000/plc.c,454
} PlcPhase;PlcPhase30,735
struct plc_state plc_state32,752
struct plc_info *this_plc_info;41,903
struct plc_state this_plc_state;42,935
void plc_init(44,969
plc_inited(74,1727
void plc_sleep(110,2782
void pc_start(114,2808
void pc_restart(155,3773
void pc_stop(176,4300
void plc_poll(188,4537
void pcm_pseudo_code(232,5658
void pcm_lct_done(344,8362
void pcm_dump_rtcodes(358,8723
void pcm_enabled(374,9077
void pcm_trace_prop(389,9518

drivers/ap1000/plc.h,33
struct plc_info plc_info12,278

drivers/ap1000/ringbuf.c,391
#define _APLIB_13,342
#define RBUF_RESERVED 34,842
#define RBUF_RESERVED_ORDER 35,866
} reserved_ringbuf[40,957
void ap_ringbuf_init(43,994
void exit_ringbuf(73,1778
static int cap_map(110,2600
#define MAP_QUEUE(MAP_QUEUE210,4802
ringbuf_ioctl(254,6003
static struct file_operations proc_ringbuf_operations 295,6909
struct inode_operations proc_ringbuf_inode_operations 309,7207

drivers/ap1000/smt-types.h,1504
typedef unsigned int Counter;Counter16,307
} CurrentPath;CurrentPath25,478
typedef char Flag;Flag27,494
typedef unsigned char LongAddressType[LongAddressType29,514
} PortType;PortType37,624
typedef unsigned short ResourceId;ResourceId39,637
typedef int Time;Time41,673
#define FDDI_TIME_UNIT	42,717
#define SECS_TO_FDDI_TIME(SECS_TO_FDDI_TIME43,767
typedef int TimerTwosComplement;TimerTwosComplement45,830
} ECMState;ECMState59,1019
} DupAddressTest;DupAddressTest68,1114
typedef unsigned short DupCondition;DupCondition70,1133
#define DC_MYDUP	71,1170
#define DC_UNADUP	72,1189
typedef unsigned short FS_Functions;FS_Functions74,1210
#define FSF_FS_REPEATING	75,1247
#define FSF_FS_SETTING	76,1274
#define FSF_FS_CLEARING	77,1300
typedef unsigned char NACondition;NACondition79,1328
#define NAC_UNACHANGE	80,1363
#define NAC_DNACHANGE	81,1387
} RMTState;RMTState92,1567
typedef unsigned char ShortAddressType[ShortAddressType94,1580
typedef unsigned short TraceStatus;TraceStatus99,1651
#define TS_TRACEINITIATED	100,1687
#define TS_TRACEPROPAGATED	101,1715
#define TS_TRACETERMINATED	102,1744
#define TS_TRACETIMEOUT	103,1773
} ActionType;ActionType114,1914
typedef unsigned char ConnectionPolicies;ConnectionPolicies116,1929
#define PC_MAC_LCT	117,1971
#define PC_MAC_LOOP	118,1992
} ConnectState;ConnectState125,2096
} LineState;LineState135,2211
} PCMState;PCMState148,2380
} PC_Withhold;PC_Withhold155,2486
} PMDClass;PMDClass166,2678

drivers/pnp/parport_probe.c,340
static inline int read_nibble(27,600
static void read_terminate(36,771
static long read_polled(49,1282
int parport_probe(94,2511
} classes[128,3228
static char *strdup(145,3664
static void parse_data(153,3805
static void pretty_print(225,5950
void parport_probe_one(236,6216
int init_module(275,7174
void cleanup_module(284,7346

drivers/video/amifb.c,10666
#define DEBUG71,1995
#define CONFIG_FB_AMIGA_OCS 74,2110
#  define IS_OCS 78,2242
#  define IS_OCS 80,2330
#  define CONFIG_FB_AMIGA_OCS_ONLY82,2374
#  define IS_OCS 83,2409
#  define IS_ECS 87,2472
#  define IS_ECS 89,2560
#  define CONFIG_FB_AMIGA_ECS_ONLY91,2604
#  define IS_ECS 92,2639
#  define IS_AGA 96,2702
#  define IS_AGA 98,2790
#  define CONFIG_FB_AMIGA_AGA_ONLY100,2834
#  define IS_AGA 101,2869
#  define DPRINTK(DPRINTK105,2911
#  define DPRINTK(DPRINTK107,3003
#define CUSTOM_OFS(CUSTOM_OFS379,15244
#define BPC0_HIRES	385,15356
#define BPC0_BPU2	386,15384
#define BPC0_BPU1	387,15438
#define BPC0_BPU0	388,15465
#define BPC0_HAM	389,15492
#define BPC0_DPF	390,15533
#define BPC0_COLOR	391,15582
#define BPC0_GAUD	392,15634
#define BPC0_UHRES	393,15688
#define BPC0_SHRES	394,15741
#define BPC0_BYPASS	395,15793
#define BPC0_BPU3	396,15845
#define BPC0_LPEN	397,15882
#define BPC0_LACE	398,15932
#define BPC0_ERSY	399,15975
#define BPC0_ECSENA	400,16024
#define BPC2_ZDBPSEL2	406,16124
#define BPC2_ZDBPSEL1	407,16194
#define BPC2_ZDBPSEL0	408,16225
#define BPC2_ZDBPEN	409,16256
#define BPC2_ZDCTEN	410,16321
#define BPC2_KILLEHB	411,16393
#define BPC2_RDRAM	412,16449
#define BPC2_SOGEN	413,16526
#define BPC2_PF2PRI	414,16586
#define BPC2_PF2P2	415,16643
#define BPC2_PF2P1	416,16702
#define BPC2_PF2P0	417,16730
#define BPC2_PF1P2	418,16758
#define BPC2_PF1P1	419,16802
#define BPC2_PF1P0	420,16830
#define BPC3_BANK2	426,16918
#define BPC3_BANK1	427,16987
#define BPC3_BANK0	428,17015
#define BPC3_PF2OF2	429,17043
#define BPC3_PF2OF1	430,17115
#define BPC3_PF2OF0	431,17144
#define BPC3_LOCT	432,17173
#define BPC3_SPRES1	433,17243
#define BPC3_SPRES0	434,17301
#define BPC3_BRDRBLNK	435,17330
#define BPC3_BRDRTRAN	436,17383
#define BPC3_ZDCLKEN	437,17440
#define BPC3_BRDRSPRT	438,17514
#define BPC3_EXTBLKEN	439,17570
#define BPC4_BPLAM7	445,17686
#define BPC4_BPLAM6	446,17746
#define BPC4_BPLAM5	447,17775
#define BPC4_BPLAM4	448,17804
#define BPC4_BPLAM3	449,17833
#define BPC4_BPLAM2	450,17862
#define BPC4_BPLAM1	451,17891
#define BPC4_BPLAM0	452,17920
#define BPC4_ESPRM7	453,17949
#define BPC4_ESPRM6	454,18019
#define BPC4_ESPRM5	455,18048
#define BPC4_ESPRM4	456,18077
#define BPC4_OSPRM7	457,18106
#define BPC4_OSPRM6	458,18175
#define BPC4_OSPRM5	459,18204
#define BPC4_OSPRM4	460,18233
#define BMC0_HARDDIS	466,18311
#define BMC0_LPENDIS	467,18371
#define BMC0_VARVBEN	468,18431
#define BMC0_LOLDIS	469,18498
#define BMC0_CSCBEN	470,18564
#define BMC0_VARVSYEN	471,18620
#define BMC0_VARHSYEN	472,18687
#define BMC0_VARBEAMEN	473,18756
#define BMC0_DUAL	474,18824
#define BMC0_PAL	475,18898
#define BMC0_VARCSYEN	476,18950
#define BMC0_BLANKEN	477,19018
#define BMC0_CSYTRUE	478,19091
#define BMC0_VSYTRUE	479,19140
#define BMC0_HSYTRUE	480,19189
#define FMODE_SSCAN2	487,19297
#define FMODE_BSCAN2	488,19354
#define FMODE_SPAGEM	489,19423
#define FMODE_SPR32	490,19476
#define FMODE_BPAGEM	491,19531
#define FMODE_BPL32	492,19586
enum { TAG_SHRES,500,19774
enum { TAG_SHRES, TAG_HIRES,500,19774
enum { TAG_SHRES, TAG_HIRES, TAG_LORES 500,19774
enum { TAG_OCS,506,19874
enum { TAG_OCS, TAG_ECS,506,19874
enum { TAG_OCS, TAG_ECS, TAG_AGA 506,19874
enum { TAG_FMODE_1,512,19968
enum { TAG_FMODE_1, TAG_FMODE_2,512,19968
enum { TAG_FMODE_1, TAG_FMODE_2, TAG_FMODE_4 512,19968
static u_long pixclock[522,20163
static u_short maxdepth[523,20233
static u_short maxfmode,524,20304
static u_short maxfmode, chipset;524,20304
#define PAL_DIWSTRT_H	534,20479
#define PAL_DIWSTRT_V	535,20531
#define PAL_HTOTAL	536,20558
#define PAL_VTOTAL	537,20584
#define NTSC_DIWSTRT_H	539,20610
#define NTSC_DIWSTRT_V	540,20664
#define NTSC_HTOTAL	541,20692
#define NTSC_VTOTAL	542,20719
#define up2(up2549,20776
#define down2(down2550,20807
#define div2(div2551,20835
#define mod2(mod2552,20861
#define up4(up4554,20889
#define down4(down4555,20920
#define mul4(mul4556,20948
#define div4(div4557,20974
#define mod4(mod4558,21000
#define up8(up8560,21028
#define down8(down8561,21059
#define div8(div8562,21087
#define mod8(mod8563,21113
#define up16(up16565,21141
#define down16(down16566,21175
#define div16(div16567,21205
#define mod16(mod16568,21231
#define up32(up32570,21260
#define down32(down32571,21294
#define div32(div32572,21324
#define mod32(mod32573,21350
#define up64(up64575,21379
#define down64(down64576,21413
#define div64(div64577,21443
#define mod64(mod64578,21469
#define upx(upx580,21498
#define downx(downx581,21536
#define modx(modx582,21568
#define DIVUL(DIVUL586,21690
#define DIVUL(DIVUL590,21901
#define min(min594,22045
#define max(max595,22087
#define highw(highw597,22130
#define loww(loww598,22174
#define arraysize(arraysize600,22215
#define VBlankOn(VBlankOn602,22262
#define VBlankOff(VBlankOff603,22316
#define VIDEOMEMSIZE_AGA_2M	613,22505
#define VIDEOMEMSIZE_AGA_1M	614,22580
#define VIDEOMEMSIZE_ECS_2M	615,22655
#define VIDEOMEMSIZE_ECS_1M	616,22730
#define VIDEOMEMSIZE_OCS	617,22805
#define SPRITEMEMSIZE	619,22878
#define DUMMYSPRITEMEMSIZE	620,22929
#define CHIPRAM_SAFETY_LIMIT	622,22961
static u_long videomemory,624,22999
static u_long videomemory, spritememory;624,22999
static u_long videomemorysize;625,23040
static u_long videomemory_phys;626,23071
static u_long min_fstrt 634,23283
#define assignchunk(assignchunk636,23315
#define CMOVE(CMOVE647,23443
#define CMOVE2(CMOVE2648,23498
#define CWAIT(CWAIT649,23557
#define CEND	650,23631
} copins;copins656,23703
static struct copdisplay copdisplay658,23714
} copdisplay;663,23813
static u_short currentcop 665,23828
static int cursorrate 671,23890
static u_short cursorstate 672,23954
static u_short cursormode 673,23987
static u_short *lofsprite,675,24031
static u_short *lofsprite, *shfsprite,675,24031
static u_short *lofsprite, *shfsprite, *dummysprite;675,24031
static struct amifb_par amifb_par681,24118
} currentpar;744,25642
static int currcon 746,25657
static struct display disp;748,25682
static struct fb_info fb_info;750,25711
extern volatile u_short amiga_audio_min_period;758,25870
static struct { u_char red, green, blue, pad; } palette[768,26205
static struct { u_char red, green, blue, pad; } palette[770,26273
static u_short ecs_palette[774,26375
static u_short do_vmode_full 781,26471
static u_short do_vmode_pan 782,26533
static short do_blank 783,26594
static u_short do_cursor 784,26654
static u_short is_blanked 791,26737
static u_short is_lace 792,26793
static char amifb_name[800,26941
static struct fb_videomode amifb_predefined[808,27023
static struct fb_videomode amifb_predefined[] __initdata 808,27023
#define NUM_TOTAL_MODES 987,32970
static int amifb_ilbm 989,33024
static int amifb_inverse 990,33089
static int amifb_usermode __initdata 991,33119
static int amifb_userdepth __initdata 992,33161
#define DEFMODE_PAL 998,33239
#define DEFMODE_NTSC 999,33294
#define DEFMODE_AMBER_PAL 1000,33351
#define DEFMODE_AMBER_NTSC 1001,33425
#define DEFMODE_AGA 1002,33501
static struct fb_var_screeninfo amifb_default;1004,33551
#define hscroll2hw(hscroll2hw1044,34547
#define diwstrt2hw(diwstrt2hw1050,34770
#define diwstop2hw(diwstop2hw1052,34870
#define diwhigh2hw(diwhigh2hw1054,34970
#define ddfstrt2hw(ddfstrt2hw1061,35251
#define ddfstop2hw(ddfstop2hw1062,35293
#define hsstrt2hw(hsstrt2hw1066,35408
#define hsstop2hw(hsstop2hw1067,35449
#define htotal2hw(htotal2hw1068,35490
#define vsstrt2hw(vsstrt2hw1069,35533
#define vsstop2hw(vsstop2hw1070,35574
#define vtotal2hw(vtotal2hw1071,35615
#define hcenter2hw(hcenter2hw1072,35658
#define hbstrt2hw(hbstrt2hw1076,35755
#define hbstop2hw(hbstop2hw1077,35831
#define vbstrt2hw(vbstrt2hw1078,35907
#define vbstop2hw(vbstop2hw1079,35948
#define rgb2hw8_high(rgb2hw8_high1083,36004
#define rgb2hw8_low(rgb2hw8_low1085,36104
#define rgb2hw4(rgb2hw41087,36203
#define rgb2hw2(rgb2hw21089,36298
#define spr2hw_pos(spr2hw_pos1094,36436
#define spr2hw_ctl(spr2hw_ctl1096,36524
#define get_vbpos(get_vbpos1102,36790
#define COPINITSIZE 1108,36914
	cip_bplcon01111,36962
#define COPLISTSIZE 1119,37101
	cop_wait,1122,37149
	cop_wait, cop_bplcon0,1122,37149
	cop_spr0ptrh,1123,37173
	cop_spr0ptrh, cop_spr0ptrl,1123,37173
	cop_diwstrt,1124,37202
	cop_diwstrt, cop_diwstop,1124,37202
	cop_diwhigh,1125,37229
static u_short bplpixmode[1132,37299
static u_short sprpixmode[1138,37411
static u_short bplfetchmode[1148,37598
static u_short sprfetchmode[1154,37715
extern unsigned short ami_intena_vals[1253,41388
static struct fb_ops amifb_ops 1256,41431
__initfunc(1263,41609
static int amifb_open(1384,44882
static int amifb_release(1394,45030
static int amifb_get_fix(1405,45173
static int amifb_get_var(1425,45516
static int amifb_set_var(1444,45832
static int amifb_pan_display(1531,48157
static int amifb_get_cmap(1561,49040
static int amifb_set_cmap(1578,49509
static int amifb_ioctl(1600,50032
static int amifb_get_fix_cursorinfo(1688,52269
static int amifb_get_var_cursorinfo(1693,52392
static int amifb_set_var_cursorinfo(1698,52535
static int amifb_get_cursorstate(1703,52678
static int amifb_set_cursorstate(1708,52796
__initfunc(1718,52944
static int amifbcon_switch(1930,58944
static int amifbcon_updatevar(1947,59330
static void amifbcon_blank(1957,59476
static void do_install_cmap(1966,59604
static int flash_cursor(1977,59902
static void amifb_interrupt(1996,60180
__initfunc(2056,61332
__initfunc(2073,61615
__initfunc(2093,62102
__initfunc(2110,62404
static int ami_encode_fix(2136,62928
static int ami_decode_var(2180,63995
static int ami_encode_var(2562,74204
static void ami_get_par(2657,76897
static void ami_set_var(2666,77001
static void ami_set_par(2676,77189
static void ami_pan_var(2693,77477
static int ami_update_par(2713,77829
static int ami_getcolreg(2779,79729
static int ami_setcolreg(2820,80564
static void ami_update_display(2883,82261
static void ami_init_display(2898,82591
static void ami_do_blank(2954,84201
static int ami_get_fix_cursorinfo(3037,86659
static int ami_get_var_cursorinfo(3048,86946
static int ami_set_var_cursorinfo(3123,88904
static int ami_get_cursorstate(3242,92126
static int ami_set_cursorstate(3252,92350
static void ami_set_sprite(3264,92633
__initfunc(3317,94292
static void ami_reinit_copper(3347,95054
static void ami_build_copper(3359,95323
static void ami_rebuild_copper(3436,97890
int init_module(3521,100327
void cleanup_module(3527,100380

drivers/video/atafb.c,6191
#define ATAFB_TT45,2152
#define ATAFB_STE46,2169
#define ATAFB_EXT47,2187
#define ATAFB_FALCON48,2205
#define SWITCH_ACIA 82,2915
#define SWITCH_SND6 83,2976
#define SWITCH_SND7 84,3001
#define SWITCH_NONE 85,3026
#define arraysize(arraysize88,3053
#define up(up90,3102
static int default_par=93,3150
static unsigned long default_mem_req=95,3211
static int hwscroll=97,3252
static int use_hwscroll 99,3277
static int sttt_xres=101,3307
static int sttt_xres_virtual=102,3357
static int ovsc_offset=103,3413
static struct atafb_par atafb_par105,3455
} current_par;138,4146
static int DontCalcRes 143,4367
#define HHT 146,4417
#define HBB 147,4443
#define HBE 148,4469
#define HDB 149,4495
#define HDE 150,4521
#define HSS 151,4547
#define VFT 152,4573
#define VBB 153,4599
#define VBE 154,4625
#define VDB 155,4651
#define VDE 156,4677
#define VSS 157,4703
#define VCO_CLOCK25	158,4729
#define VCO_CSYPOS	159,4755
#define VCO_VSYPOS	160,4780
#define VCO_HSYPOS	161,4805
#define VCO_SHORTOFFS	162,4830
#define VMO_DOUBLE	163,4858
#define VMO_INTER	164,4883
#define VMO_PREMASK	165,4907
static struct fb_info fb_info;168,4941
static void *screen_base;170,4973
static void *real_screen_base;171,5028
static int screen_len;173,5086
static int current_par_valid=175,5110
static int currcon=177,5144
static int mono_moni=179,5167
static struct display disp;181,5192
static unsigned			external_xres;187,5270
static unsigned			external_xres_virtual;188,5303
static unsigned			external_yres;189,5344
static unsigned			external_depth;194,5503
static int				external_pmode;195,5537
static void *external_addr 196,5567
static unsigned long	external_len;197,5599
static unsigned long	external_vgaiobase 198,5634
static unsigned int		external_bitspercol 199,5679
enum cardtype cardtype207,5837
enum cardtype { IS_VGA,207,5837
enum cardtype { IS_VGA, IS_MV300 207,5837
static enum cardtype external_card_type 208,5873
static int MV300_reg_1bit[214,6040
static int MV300_reg_4bit[215,6076
static int MV300_reg_8bit[217,6164
static int *MV300_reg 235,7386
static struct { unsigned char red,green,blue,pad; } ext_color[242,7577
static int inverse=246,7670
extern int fontheight_8x8;248,7693
extern int fontwidth_8x8;249,7720
extern unsigned char fontdata_8x8[250,7746
extern int fontheight_8x16;252,7784
extern int fontwidth_8x16;253,7812
extern unsigned char fontdata_8x16[254,7839
static struct fb_hwswitch fb_hwswitch315,10509
} *fbhw;335,11335
static char *autodetect_names[337,11345
static char *stlow_names[338,11401
static char *stmid_names[339,11447
static char *sthigh_names[340,11505
static char *ttlow_names[341,11565
static char *ttmid_names[342,11611
static char *tthigh_names[343,11668
static char *vga2_names[344,11727
static char *vga4_names[345,11771
static char *vga16_names[346,11815
static char *vga256_names[347,11873
static char *falh2_names[348,11921
static char *falh16_names[349,11967
static char **fb_var_names[351,12016
static struct fb_var_screeninfo atafb_predefined[373,12550
static int num_atafb_predefined=431,14543
get_video_mode(435,14617
static int tt_encode_fix(460,15029
static int tt_decode_var(488,15687
static int tt_encode_var(569,17547
static void tt_get_par(665,19743
static void tt_set_par(676,20053
static int tt_getcolreg(686,20325
static int tt_setcolreg(714,20858
static int tt_detect(731,21337
static int mon_type;761,22104
static int f030_bus_width;762,22157
#define F_MON_SM	763,22229
#define F_MON_SC	764,22248
#define F_MON_VGA	765,22267
#define F_MON_TV	766,22287
static struct pixel_clock pixel_clock768,22307
f25 776,22651
static int vdl_prescale[781,22859
static long h_syncs[784,22983
static u16 fbcon_cfb16_cmap[787,23070
static inline int hxx_prescale(790,23111
static int falcon_encode_fix(796,23251
static int falcon_decode_var(827,24063
static int falcon_encode_var(1309,38443
static int f_change_mode 1473,43155
static struct falcon_hw f_new_mode;1474,43185
static int f_pan_display 1475,43221
static void falcon_get_par(1477,43252
static void falcon_set_par(1514,44270
static void falcon_vbl_switcher(1537,44894
static int falcon_pan_display(1597,46551
static int falcon_getcolreg(1628,47420
static int falcon_setcolreg(1648,47902
static int falcon_blank(1672,48579
static int falcon_detect(1711,49458
static int stste_encode_fix(1756,50584
static int stste_decode_var(1788,51268
static int stste_encode_var(1846,52650
static void stste_get_par(1924,54357
static void stste_set_par(1936,54704
static int stste_getcolreg(1946,54979
static int stste_setcolreg(1982,55732
static int stste_detect(2005,56295
static void stste_set_screen_base(2027,56856
#define LINE_DELAY 2055,57781
#define SYNC_DELAY 2056,57823
static void st_ovsc_switch(2059,57941
static int ext_encode_fix(2102,59101
static int ext_decode_var(2152,60424
static int ext_encode_var(2168,60806
static void ext_get_par(2210,61760
static void ext_set_par(2215,61849
#define OUTB(OUTB2219,61903
#define INB(INB2221,61993
#define DACDelay 2223,62074
static int ext_getcolreg(2229,62179
static int ext_setcolreg(2243,62514
static int ext_detect(2280,63304
static void set_screen_base(2298,63709
static int pan_display(2309,64007
static struct fb_hwswitch tt_switch 2328,64559
static struct fb_hwswitch falcon_switch 2336,64776
static struct fb_hwswitch st_switch 2344,65041
static struct fb_hwswitch ext_switch 2352,65285
static void atafb_get_par(2360,65474
static void atafb_set_par(2370,65608
fb_update_var(2387,65974
do_fb_set_var(2400,66283
do_install_cmap(2417,66682
static int atafb_open(2433,67026
static int atafb_release(2443,67174
atafb_get_fix(2451,67280
atafb_get_var(2463,67576
atafb_set_disp(2476,67812
atafb_set_var(2549,69411
atafb_get_cmap(2581,70395
atafb_set_cmap(2595,70838
atafb_pan_display(2612,71310
atafb_ioctl(2636,71934
static struct fb_ops atafb_ops 2659,72498
check_default_par(2666,72688
atafb_switch(2707,73795
atafb_blank(2728,74236
__initfunc(2748,74646
static char * strtoke(2875,78287
__initfunc(2895,78635
int init_module(3149,85579
void cleanup_module(3155,85632

drivers/video/cyberfb.c,4222
#define DPRINTK(DPRINTK104,3307
#define DPRINTK(DPRINTK107,3426
#define arraysize(arraysize110,3464
#define wb_64(wb_64112,3514
struct cyberfb_par cyberfb_par114,3591
static struct cyberfb_par current_par;122,3712
static int current_par_valid 124,3752
static int currcon 125,3786
static struct display disp;127,3811
static struct fb_info fb_info;128,3839
static struct fb_hwswitch fb_hwswitch135,3916
} *fbhw;151,4477
static char cyberfb_name[158,4518
static unsigned char Cyber_colour_table 165,4605
static unsigned long CyberMem;166,4655
static unsigned long CyberSize;167,4686
static volatile char *CyberRegs;168,4718
static unsigned long CyberMem_phys;169,4751
static unsigned long CyberRegs_phys;170,4787
static unsigned long cv64_mem;172,4865
static unsigned long cv64_fbmem;173,4896
static volatile char *cv64_regs;174,4929
static unsigned long cv64_size;175,4962
static int cvision_custom_mode 177,5000
static int hbs,178,5036
static int hbs, hbe,178,5036
static int hbs, hbe, hss,178,5036
static int hbs, hbe, hss, hse,178,5036
static int hbs, hbe, hss, hse, ht,178,5036
static int hbs, hbe, hss, hse, ht, vbs,178,5036
static int hbs, hbe, hss, hse, ht, vbs, vbe,178,5036
static int hbs, hbe, hss, hse, ht, vbs, vbe, vss,178,5036
static int hbs, hbe, hss, hse, ht, vbs, vbe, vss, vse,178,5036
static int hbs, hbe, hss, hse, ht, vbs, vbe, vss, vse, vt;178,5036
static struct fb_videomode cyberfb_predefined[185,5138
static struct fb_videomode cyberfb_predefined[] __initdata 185,5138
#define NUM_TOTAL_MODES 249,7514
static int Cyberfb_inverse 251,7572
#define CYBER8_DEFMODE 257,7636
#define CYBER16_DEFMODE 258,7667
static struct fb_var_screeninfo cyberfb_default;260,7699
static struct display_switch fbcon_cyber8;299,8987
static int Cyber_init(360,10967
static int Cyber_encode_fix(427,12612
static int Cyber_decode_var(463,13521
static int Cyber_encode_var(506,14802
static int Cyber_setcolreg(552,15962
static int Cyber_getcolreg(585,16608
void Cyber_blank(614,17283
static void Cyber_WaitQueue 647,17970
static void Cyber_WaitBlit 662,18296
static void Cyber_BitBLT 677,18592
static void Cyber_RectFill 721,19818
static void Cyber_MoveCursor 748,20690
static struct fb_hwswitch Cyber_switch 770,21354
static void cyberfb_get_par(783,21648
static void cyberfb_set_par(795,21852
static void cyber_set_video(804,21997
static int do_fb_set_var(816,22241
static void do_install_cmap(838,22723
static int cyberfb_open(861,23237
static int cyberfb_release(871,23387
static int cyberfb_get_fix(882,23532
static int cyberfb_get_var(903,23937
static void cyberfb_set_disp(923,24337
static int cyberfb_set_var(972,25450
static int cyberfb_get_cmap(1011,26546
static int cyberfb_set_cmap(1035,27194
static int cyberfb_pan_display(1066,27940
static int cyberfb_ioctl(1077,28126
static struct fb_ops cyberfb_ops 1084,28273
__initfunc(1091,28471
__initfunc(1128,29377
static int Cyberfb_switch(1201,31405
static int Cyberfb_updatevar(1226,32009
static void Cyberfb_blank(1237,32148
__initfunc(1249,32306
static void fbcon_cyber8_bmove(1273,32827
static void fbcon_cyber8_clear(1284,33198
static void fbcon_cyber8_putc(1301,33619
static void fbcon_cyber8_putcs(1310,33825
static void fbcon_cyber8_revc(1320,34080
static struct display_switch fbcon_cyber8 1328,34239
int init_module(1337,34487
void cleanup_module(1343,34542
#define MAXPIXELCLOCK 1360,34875
long cv64_memclk 1363,34949
long cv64_memclk 1365,34984
static unsigned char clocks[1370,35046
unsigned char cvconscolors[1436,38190
inline void __cv_delay 1459,38765
inline void GfxBusyWait 1470,38930
inline void GfxFifoWait 1483,39187
inline unsigned char RAttr 1495,39408
inline unsigned char RSeq 1504,39621
inline unsigned char RCrt 1511,39799
inline unsigned char RGfx 1518,39982
inline void cv64_write_port 1528,40188
inline void cvscreen 1559,40849
inline void gfx_on_off 1575,41219
static unsigned short cv64_compute_clock(1601,41924
static int cv_has_4mb 1643,42868
static void cv64_board_init 1688,43667
static void cv64_load_video_mode 1952,52645
void cvision_bitblt 2339,62625
void cvision_clear 2378,63662
static void cv64_dump 2398,64272

drivers/video/atyfb.c,5311
#define GUI_RESERVE	93,2215
#define eieio(eieio97,2268
#define FAIL(FAIL101,2373
struct crtc crtc108,2518
struct pll_gx pll_gx124,2823
struct pll_ct pll_ct129,2863
struct atyfb_par atyfb_par146,3174
struct aty_cmap_regs aty_cmap_regs155,3301
struct pci_mmap_map pci_mmap_map163,3396
#define DEFAULT_CURSOR_BLINK_RATE	171,3552
#define CURSOR_DRAW_DELAY	172,3591
struct aty_cursor aty_cursor174,3623
struct fb_info_aty fb_info_aty190,3882
#define Gx 206,4371
#define Rev 208,4415
static struct display_switch fbcon_aty8;281,6400
static struct display_switch fbcon_aty16;289,6710
static struct display_switch fbcon_aty24;297,7026
static struct display_switch fbcon_aty32;305,7342
static int currcon 389,10724
static struct fb_ops atyfb_ops 391,10749
static char atyfb_name[401,10986
static char fontname[402,11029
static char fontname[40] __initdata 402,11029
static char curblink __initdata 403,11074
static char noaccel __initdata 404,11111
static u32 default_vram __initdata 405,11147
static int default_pll __initdata 406,11187
static int default_mclk __initdata 407,11226
static const u32 ref_clk_per 409,11267
static int default_vmode __initdata 412,11350
static int default_cmode __initdata 413,11401
static unsigned int mach64_count __initdata 417,11480
static unsigned long phys_vmembase[418,11529
static unsigned long phys_vmembase[FB_MAX] __initdata 418,11529
static unsigned long phys_size[419,11593
static unsigned long phys_size[FB_MAX] __initdata 419,11593
static unsigned long phys_guiregbase[420,11653
static unsigned long phys_guiregbase[FB_MAX] __initdata 420,11653
static struct aty_features aty_features424,11728
} aty_features[428,11814
} aty_features[] __initdata 428,11814
static const char *aty_gx_ram[461,13085
static const char *aty_gx_ram[8] __initdata 461,13085
static const char *aty_ct_ram[465,13204
static const char *aty_ct_ram[8] __initdata 465,13204
static inline u32 aty_ld_le32(470,13323
static inline void aty_st_le32(489,13849
static inline u8 aty_ld_8(507,14381
static inline void aty_st_8(513,14538
static inline void wait_for_fifo(532,15054
static inline void wait_for_idle(538,15223
static void reset_engine(545,15402
static void init_engine(559,15892
static void aty_st_514(669,19685
static void aty_st_pll(682,20043
static u8 aty_ld_pll(694,20419
static int read_aty_sense(714,20773
static u8 cursor_pixel_map[756,22081
static u8 cursor_color_map[757,22124
static u8 cursor_bits_lookup[759,22170
static u8 cursor_mask_lookup[765,22308
aty_set_cursor_color(772,22458
aty_set_cursor_shape(799,22994
aty_set_cursor(832,23633
aty_cursor_timer_handler(882,24666
atyfb_cursor(904,25117
__initfunc(944,25780
atyfb_set_font(996,26943
static void aty_set_crtc(1037,27811
static int aty_var_to_crtc(1049,28317
static void aty_set_dac_514(1172,32240
static int aty_crtc_to_var(1209,33231
static void aty_set_pll_gx(1349,37215
static int aty_var_to_pll_18818(1369,37899
static int aty_var_to_pll_514(1423,40111
static int aty_pll_gx_to_var(1455,41136
static void aty_set_pll_ct(1473,41488
static int aty_dsp_gt(1497,42380
static int aty_var_to_pll_ct(1566,44276
static int aty_pll_ct_to_var(1683,47170
static void atyfb_set_par(1703,47774
static int atyfb_decode_var(1804,50530
static int atyfb_encode_var(1840,51357
static void set_off_pitch(1866,51927
static int atyfb_open(1883,52351
static int atyfb_release(1903,52673
static int encode_fix(1923,53037
struct fb_var_screeninfo default_var 1976,54785
static int atyfb_get_fix(1989,55117
static int atyfb_get_var(2008,55521
static void atyfb_set_disp(2021,55801
static int atyfb_set_var(2066,56888
static int atyfb_pan_display(2136,59032
static int atyfb_get_cmap(2159,59690
static int atyfb_set_cmap(2177,60212
static int atyfb_ioctl(2195,60726
static int atyfb_mmap(2222,61429
} atyfb_save;2347,64461
static void atyfb_save_palette(2349,64476
static void atyfb_palette(2385,65629
__initfunc(2419,66354
__initfunc(2726,75337
__initfunc(3053,83894
__initfunc(3137,85874
__initfunc(3208,87717
__initfunc(3237,88521
static int atyfbcon_switch(3257,88906
static void atyfbcon_blank(3294,89863
static int atyfb_getcolreg(3336,90735
static int atyfb_setcolreg(3357,91423
static void do_install_cmap(3415,93026
static inline void draw_rect(3432,93412
static inline void aty_rectcopy(3442,93725
static inline void aty_rectfill(3482,94743
static int atyfbcon_updatevar(3508,95480
static void fbcon_aty_bmove(3553,96671
static void fbcon_aty_clear(3574,97174
static void fbcon_aty8_putc(3599,97748
static void fbcon_aty8_putcs(3614,98124
static void fbcon_aty8_clear_margins(3630,98547
static struct display_switch fbcon_aty8 3645,98939
static void fbcon_aty16_putc(3653,99225
static void fbcon_aty16_putcs(3668,99604
static void fbcon_aty16_clear_margins(3684,100031
static struct display_switch fbcon_aty16 3699,100426
static void fbcon_aty24_putc(3707,100718
static void fbcon_aty24_putcs(3722,101097
static void fbcon_aty24_clear_margins(3738,101524
static struct display_switch fbcon_aty24 3753,101919
static void fbcon_aty32_putc(3761,102211
static void fbcon_aty32_putcs(3776,102590
static void fbcon_aty32_clear_margins(3792,103017
static struct display_switch fbcon_aty32 3807,103412

drivers/video/fbcmap.c,712
static void memcpy_fs(19,435
static u16 red2[34,737
static u16 green2[37,781
static u16 blue2[40,827
static u16 red4[44,873
static u16 green4[47,933
static u16 blue4[50,995
static u16 red8[54,1057
static u16 green8[57,1149
static u16 blue8[60,1243
static u16 red16[64,1337
static u16 green16[68,1498
static u16 blue16[72,1661
static struct fb_cmap default_2_colors 77,1824
static struct fb_cmap default_8_colors 80,1906
static struct fb_cmap default_4_colors 83,1988
static struct fb_cmap default_16_colors 86,2070
int fb_alloc_cmap(95,2203
void fb_copy_cmap(135,3061
int fb_get_cmap(162,3794
int fb_set_cmap(208,4721
struct fb_cmap *fb_default_cmap(256,5684
void fb_invert_cmaps(272,5950

drivers/video/fbcon-afb.c,318
static u8 expand_table[26,557
void fbcon_afb_setup(161,7344
void fbcon_afb_bmove(170,7548
void fbcon_afb_clear(220,8917
void fbcon_afb_putc(246,9456
void fbcon_afb_putcs(283,10235
void fbcon_afb_revc(378,12558
struct display_switch fbcon_afb 413,13222
int init_module(420,13416
void cleanup_module(425,13457

drivers/video/fbcon-cfb16.c,399
static u32 tab_cfb16[26,573
void fbcon_cfb16_setup(36,806
void fbcon_cfb16_bmove(42,953
static inline void rectfill(82,2058
void fbcon_cfb16_clear(103,2410
void fbcon_cfb16_putc(121,2922
void fbcon_cfb16_putcs(171,4579
void fbcon_cfb16_revc(229,6482
void fbcon_cfb16_clear_margins(252,7149
struct display_switch fbcon_cfb16 277,7896
int init_module(285,8170
void cleanup_module(290,8211

drivers/video/fbcon-cfb8.c,397
static u32 nibbletab_cfb8[26,558
void fbcon_cfb8_setup(42,1084
void fbcon_cfb8_bmove(48,1227
static inline void rectfill(84,2321
void fbcon_cfb8_clear(93,2497
void fbcon_cfb8_putc(111,2955
void fbcon_cfb8_putcs(157,4358
void fbcon_cfb8_revc(216,6110
void fbcon_cfb8_clear_margins(233,6677
struct display_switch fbcon_cfb8 258,7389
int init_module(266,7655
void cleanup_module(271,7696

drivers/video/S3triofb.c,2372
#define mem_in8(mem_in853,1325
#define mem_in16(mem_in1654,1378
#define mem_in32(mem_in3255,1434
#define mem_out8(mem_out857,1491
#define mem_out16(mem_out1658,1550
#define mem_out32(mem_out3259,1612
#define IO_OUT16VAL(IO_OUT16VAL61,1675
#define arraysize(arraysize63,1727
static int currcon 65,1774
static struct display disp;66,1798
static struct fb_info fb_info;67,1826
static struct { u_char red, green, blue, pad; } palette[68,1857
static char s3trio_name[69,1919
static char *s3trio_base;70,1960
static struct fb_fix_screeninfo fb_fix;72,1987
static struct fb_var_screeninfo fb_var 73,2027
static struct display_switch fbcon_trio8;115,3379
static struct fb_ops s3trio_ops 143,4276
static int s3trio_open(153,4530
static int s3trio_release(163,4695
static int s3trio_get_fix(174,4855
static int s3trio_get_var(186,5075
static int s3trio_set_var(198,5295
static int s3trio_pan_display(223,6093
static int s3trio_get_cmap(249,6721
static int s3trio_set_cmap(266,7215
static int s3trio_ioctl(285,7706
__initfunc(291,7852
__initfunc(301,8103
#define EC01_ENH_ENB 304,8148
#define EC01_LAW_ENB 305,8179
#define EC01_MMIO_ENB 306,8210
#define EC00_RESET 308,8242
#define EC00_ENABLE 309,8273
#define MF_MULT_MISC 310,8304
#define SRC_FOREGROUND 311,8335
#define SRC_BACKGROUND 312,8366
#define MIX_SRC 313,8397
#define MF_T_CLIP 314,8436
#define MF_L_CLIP 315,8467
#define MF_B_CLIP 316,8498
#define MF_R_CLIP 317,8529
#define MF_PIX_CONTROL 318,8560
#define MFA_SRC_FOREGR_MIX 319,8591
#define MF_PIX_CONTROL 320,8630
__initfunc(344,9388
__initfunc(405,11186
static int s3triofbcon_switch(622,18104
static int s3triofbcon_updatevar(638,18486
static void s3triofbcon_blank(648,18630
static int s3triofbcon_setcmap(662,18943
static int s3trio_getcolreg(674,19201
static int s3trio_setcolreg(691,19682
static void do_install_cmap(713,20265
void s3triofb_setup(724,20577
static void Trio_WaitQueue(730,20646
static void Trio_WaitBlit(741,20818
static void Trio_BitBLT(752,20979
static void Trio_RectFill(793,21726
static void Trio_MoveCursor(813,22123
static void fbcon_trio8_bmove(836,22793
static void fbcon_trio8_clear(845,23118
static void fbcon_trio8_putc(860,23487
static void fbcon_trio8_putcs(867,23655
static void fbcon_trio8_revc(874,23862
static struct display_switch fbcon_trio8 880,23984

drivers/video/fbcon-ilbm.c,284
void fbcon_ilbm_setup(33,829
void fbcon_ilbm_bmove(44,1088
void fbcon_ilbm_clear(75,2039
void fbcon_ilbm_putc(97,2525
void fbcon_ilbm_putcs(147,3702
void fbcon_ilbm_revc(231,5693
struct display_switch fbcon_ilbm 261,6325
int init_module(268,6526
void cleanup_module(273,6567

drivers/video/fbcon-iplan2p2.c,864
#define	INC_2P(INC_2P32,764
#define	DEC_2P(DEC_2P33,834
static const u8 color_2p[40,1107
#define	COLOR_2P(COLOR_2P41,1188
static inline void movepw(44,1263
static __inline__ void memclear_2p_col(63,1792
static __inline__ void memset_even_2p(81,2280
static __inline__ void memmove_2p_col 92,2484
static const u16 two2byte[107,2749
static __inline__ u16 expand2w(111,2820
static const u32 two2word[121,2973
static __inline__ u32 expand2l(129,3148
static __inline__ u16 dup2w(137,3267
void fbcon_iplan2p2_setup(147,3365
void fbcon_iplan2p2_bmove(153,3481
void fbcon_iplan2p2_clear(261,6906
void fbcon_iplan2p2_putc(318,8428
void fbcon_iplan2p2_putcs(347,9203
void fbcon_iplan2p2_revc(383,10152
void fbcon_iplan2p2_clear_margins(408,10739
struct display_switch fbcon_iplan2p2 437,11494
int init_module(445,11751
void cleanup_module(450,11792

drivers/video/fbcon-iplan2p4.c,797
#define	INC_4P(INC_4P32,766
#define	DEC_4P(DEC_4P33,836
static inline void movepl(36,946
static __inline__ void memclear_4p_col(59,1612
static __inline__ void memset_even_4p(79,2199
static __inline__ void memmove_4p_col 93,2476
static const u32 four2byte[110,2772
static __inline__ u32 expand4l(117,3016
static const u32 two2word[127,3174
static __inline__ void expand4dl(135,3351
static __inline__ u32 dup4l(144,3528
void fbcon_iplan2p4_setup(155,3647
void fbcon_iplan2p4_bmove(161,3763
void fbcon_iplan2p4_clear(272,7183
void fbcon_iplan2p4_putc(328,8705
void fbcon_iplan2p4_putcs(357,9459
void fbcon_iplan2p4_revc(400,10648
void fbcon_iplan2p4_clear_margins(428,11278
struct display_switch fbcon_iplan2p4 457,12049
int init_module(465,12306
void cleanup_module(470,12347

drivers/video/fbcon-iplan2p8.c,801
#define	INC_8P(INC_8P37,1021
#define	DEC_8P(DEC_8P38,1092
static inline void movepl2(41,1223
static __inline__ void memclear_8p_col(73,2233
static __inline__ void memset_even_8p(98,3087
static __inline__ void memmove_8p_col 114,3415
static const u32 four2long[137,3792
static __inline__ void expand8dl(145,4037
static const u32 two2word[156,4258
static inline void expand8ql(165,4433
static __inline__ u32 dup4l(176,4692
void fbcon_iplan2p8_setup(187,4811
void fbcon_iplan2p8_bmove(193,4924
void fbcon_iplan2p8_clear(304,8387
void fbcon_iplan2p8_putc(360,9998
void fbcon_iplan2p8_putcs(389,10844
void fbcon_iplan2p8_revc(434,12127
void fbcon_iplan2p8_clear_margins(464,12889
struct display_switch fbcon_iplan2p8 494,13713
int init_module(502,13970
void cleanup_module(507,14011

drivers/video/fbcon-mfb.c,315
void fbcon_mfb_setup(26,537
void fbcon_mfb_bmove(35,710
void fbcon_mfb_clear(64,1623
void fbcon_mfb_putc(86,2226
void fbcon_mfb_putcs(111,2783
void fbcon_mfb_revc(141,3493
void fbcon_mfb_clear_margins(151,3722
struct display_switch fbcon_mfb 178,4389
int init_module(186,4606
void cleanup_module(191,4647

drivers/video/cgsixfb.c,3796
#define CG6_ROM_OFFSET 34,960
#define CG6_BROOKTREE_OFFSET 35,993
#define CG6_DHC_OFFSET 36,1031
#define CG6_ALT_OFFSET 37,1069
#define CG6_FHC_OFFSET 38,1107
#define CG6_THC_OFFSET 39,1145
#define CG6_FBC_OFFSET 40,1183
#define CG6_TEC_OFFSET 41,1221
#define CG6_RAM_OFFSET 42,1259
#define CG6_FHC_FBID_SHIFT 45,1320
#define CG6_FHC_FBID_MASK 46,1360
#define CG6_FHC_REV_SHIFT 47,1401
#define CG6_FHC_REV_MASK 48,1441
#define CG6_FHC_FROP_DISABLE 49,1481
#define CG6_FHC_ROW_DISABLE 50,1528
#define CG6_FHC_SRC_DISABLE 51,1575
#define CG6_FHC_DST_DISABLE 52,1622
#define CG6_FHC_RESET 53,1669
#define CG6_FHC_LITTLE_ENDIAN 54,1716
#define CG6_FHC_RES_MASK 55,1763
#define CG6_FHC_1024 56,1810
#define CG6_FHC_1152 57,1857
#define CG6_FHC_1280 58,1904
#define CG6_FHC_1600 59,1951
#define CG6_FHC_CPU_MASK 60,1998
#define CG6_FHC_CPU_SPARC 61,2044
#define CG6_FHC_CPU_68020 62,2090
#define CG6_FHC_CPU_386 63,2136
#define CG6_FHC_TEST	64,2182
#define CG6_FHC_TEST_X_SHIFT	65,2218
#define CG6_FHC_TEST_X_MASK	66,2254
#define CG6_FHC_TEST_Y_SHIFT	67,2290
#define CG6_FHC_TEST_Y_MASK	68,2326
#define CG6_FBC_BLIT_IGNORE	71,2390
#define CG6_FBC_BLIT_NOSRC	72,2430
#define CG6_FBC_BLIT_SRC	73,2469
#define CG6_FBC_BLIT_ILLEGAL	74,2506
#define CG6_FBC_BLIT_MASK	75,2547
#define CG6_FBC_VBLANK	77,2586
#define CG6_FBC_MODE_IGNORE	79,2623
#define CG6_FBC_MODE_COLOR8	80,2663
#define CG6_FBC_MODE_COLOR1	81,2703
#define CG6_FBC_MODE_HRMONO	82,2743
#define CG6_FBC_MODE_MASK	83,2783
#define CG6_FBC_DRAW_IGNORE	85,2822
#define CG6_FBC_DRAW_RENDER	86,2862
#define CG6_FBC_DRAW_PICK	87,2902
#define CG6_FBC_DRAW_ILLEGAL	88,2940
#define CG6_FBC_DRAW_MASK	89,2981
#define CG6_FBC_BWRITE0_IGNORE	91,3020
#define CG6_FBC_BWRITE0_ENABLE	92,3063
#define CG6_FBC_BWRITE0_DISABLE	93,3106
#define CG6_FBC_BWRITE0_ILLEGAL	94,3150
#define CG6_FBC_BWRITE0_MASK	95,3194
#define CG6_FBC_BWRITE1_IGNORE	97,3236
#define CG6_FBC_BWRITE1_ENABLE	98,3279
#define CG6_FBC_BWRITE1_DISABLE	99,3322
#define CG6_FBC_BWRITE1_ILLEGAL	100,3366
#define CG6_FBC_BWRITE1_MASK	101,3410
#define CG6_FBC_BREAD_IGNORE	103,3452
#define CG6_FBC_BREAD_0	104,3493
#define CG6_FBC_BREAD_1	105,3530
#define CG6_FBC_BREAD_ILLEGAL	106,3567
#define CG6_FBC_BREAD_MASK	107,3609
#define CG6_FBC_BDISP_IGNORE	109,3649
#define CG6_FBC_BDISP_0	110,3690
#define CG6_FBC_BDISP_1	111,3727
#define CG6_FBC_BDISP_ILLEGAL	112,3764
#define CG6_FBC_BDISP_MASK	113,3806
#define CG6_FBC_INDEX_MOD	115,3846
#define CG6_FBC_INDEX_MASK	116,3884
#define CG6_THC_MISC_REV_SHIFT 119,3946
#define CG6_THC_MISC_REV_MASK 120,3986
#define CG6_THC_MISC_RESET 121,4026
#define CG6_THC_MISC_VIDEO 122,4073
#define CG6_THC_MISC_SYNC 123,4120
#define CG6_THC_MISC_VSYNC 124,4166
#define CG6_THC_MISC_SYNC_ENAB 125,4212
#define CG6_THC_MISC_CURS_RES 126,4258
#define CG6_THC_MISC_INT_ENAB 127,4304
#define CG6_THC_MISC_INT 128,4350
#define CG6_THC_MISC_INIT 129,4396
struct cg6_tec cg6_tec132,4470
struct cg6_thc cg6_thc138,4564
struct cg6_fbc cg6_fbc153,5039
static struct sbus_mmap_map cg6_mmap_map[211,6470
static void cg6_setup(223,6920
static void cg6_clear(229,7044
static void cg6_fill(267,8015
static void cg6_putc(295,8594
static void cg6_putcs(344,9742
static void cg6_revc(448,12978
static void cg6_loadcmap 453,13068
static void cg6_restore_palette 466,13429
static struct display_switch cg6_dispsw __initdata 476,13649
static void cg6_setcursormap 481,13855
static void cg6_setcurshape 496,14238
static void cg6_setcursor 508,14505
static void cg6_blank 522,14846
static void cg6_unblank 527,14950
static void cg6_reset 532,15055
static void cg6_margins 586,16581
static char idstring[591,16776
static char idstring[60] __initdata 591,16776
__initfunc(593,16822

drivers/video/fbcon.c,3714
#define INCLUDE_LINUX_LOGO_DATA94,2497
#  define DPRINTK(DPRINTK102,2682
#  define DPRINTK(DPRINTK104,2774
#define LOGO_H	107,2814
#define LOGO_W	108,2834
#define LOGO_LINE	109,2854
struct display fb_display[111,2884
static int logo_lines;112,2928
static int logo_shown 113,2951
extern int fbcon_softback_size;115,3005
static unsigned long softback_buf,116,3037
static unsigned long softback_buf, softback_curr;116,3037
static unsigned long softback_in;117,3087
static unsigned long softback_top,118,3121
static unsigned long softback_top, softback_end;118,3121
static int softback_lines;119,3170
#define REFCOUNT(REFCOUNT121,3198
#define FNTSIZE(FNTSIZE122,3239
#define FNTCHARCNT(FNTCHARCNT123,3279
#define FNTSUM(FNTSUM124,3322
#define FONT_EXTRA_WORDS 125,3361
#define CM_SOFTBACK	127,3389
#define advance_row(advance_row129,3414
static int cursor_drawn 142,3858
#define CURSOR_DRAW_DELAY	144,3888
#define ARM_CURSOR_BLINK_RATE	147,3966
#define AMIGA_CURSOR_BLINK_RATE	148,4002
#define ATARI_CURSOR_BLINK_RATE	149,4040
#define MAC_CURSOR_BLINK_RATE	150,4078
#define DEFAULT_CURSOR_BLINK_RATE	151,4114
static int vbl_cursor_cnt 153,4154
static int cursor_on 154,4185
static int cursor_blink_rate;155,4211
static inline void cursor_undrawn(157,4242
#define divides(divides164,4334
static int vbl_detected 217,6396
static void fbcon_vbl_detect(219,6426
static struct timer_list cursor_timer 227,6590
static void cursor_timer_handler(231,6680
struct display_switch fbcon_dummy;244,6972
static const char *fbcon_startup(248,7095
static void fbcon_init(337,9381
static void fbcon_deinit(368,10499
static int fbcon_changevar(379,10696
static __inline__ void updatescrollmode(387,10811
static void fbcon_font_widths(405,11346
#define fontwidthvalid(fontwidthvalid419,11653
static void fbcon_setup(421,11726
static __inline__ int real_y(653,19072
static void fbcon_clear(662,19229
static void fbcon_putc(697,20118
static void fbcon_putcs(721,20656
static void fbcon_cursor(745,21269
static void fbcon_vbl_handler(797,22557
static int scrollback_phys_max 813,22913
static int scrollback_max 814,22949
static int scrollback_current 815,22980
static __inline__ void ywrap_up(817,23016
static __inline__ void ywrap_down(834,23517
static __inline__ void ypan_up(851,23979
static __inline__ void ypan_down(873,24662
static void fbcon_redraw_softback(894,25284
static void fbcon_redraw(983,27563
void fbcon_redraw_bmove(1037,28792
static inline void fbcon_softback_note(1085,29922
static int fbcon_scroll(1105,30545
static void fbcon_bmove(1253,35017
static void fbcon_bmove_rec(1281,35934
static int fbcon_switch(1313,36949
static int fbcon_blank(1374,38665
static void fbcon_free_font(1425,40054
static inline int fbcon_get_font(1434,40281
static int fbcon_do_set_font(1491,41635
static inline int fbcon_copy_font(1609,45040
static inline int fbcon_set_font(1626,45556
static inline int fbcon_set_def_font(1712,47733
static int fbcon_font_op(1732,48285
static u16 palette_red[1750,48708
static u16 palette_green[1751,48736
static u16 palette_blue[1752,48766
static struct fb_cmap palette_cmap 1754,48796
static int fbcon_set_palette(1758,48898
static u16 *fbcon_screen_pos(1784,49637
static unsigned long fbcon_getxy(1800,50117
static void fbcon_invert_region(1836,51252
static int fbcon_scrolldelta(1857,51795
static int fbcon_set_origin(1938,54102
static inline unsigned safe_shift(1945,54264
__initfunc(1950,54352
#define MAP_X(MAP_X2163,60933
#define MAP_X(MAP_X2165,61007
#define	BIT(BIT2168,61082
struct consw fb_con 2236,62930
static void fbcon_dummy_op(2264,63650
struct display_switch fbcon_dummy 2266,63687

drivers/video/fbgen.c,403
static int currcon 21,480
int fbgen_get_fix(31,646
int fbgen_get_var(54,1195
int fbgen_set_var(73,1625
int fbgen_get_cmap(111,2804
int fbgen_set_cmap(134,3439
int fbgen_pan_display(160,4187
int fbgen_ioctl(196,5120
int fbgen_do_set_var(210,5400
void fbgen_set_disp(228,5886
void fbgen_install_cmap(271,7104
int fbgen_update_var(289,7575
int fbgen_switch(307,7957
void fbgen_blank(328,8477

drivers/video/g364fb.c,2069
#define G364_MEM_BASE 42,1009
#define G364_PORT_BASE 43,1044
#define ID_REG 44,1079
#define BOOT_REG 45,1125
#define TIMING_REG 46,1154
#define DISPLAY_REG 47,1219
#define VDISPLAY_REG 48,1251
#define MASK_REG 49,1284
#define CTLA_REG 50,1313
#define CURS_TOGGLE 51,1342
#define BIT_PER_PIX	52,1372
#define DELAY_SAMPLE 53,1434
#define PORT_INTER	54,1467
#define PIX_PIPE_DEL	55,1495
#define PIX_PIPE_DEL2	56,1559
#define TR_CYCLE_TOG	57,1629
#define VRAM_ADR_INC	58,1659
#define BLANK_OFF	59,1723
#define FORCE_BLANK	60,1750
#define BLK_FUN_SWTCH	61,1779
#define BLANK_IO	62,1810
#define BLANK_LEVEL	63,1836
#define A_VID_FORM	64,1865
#define D_SYNC_FORM	65,1893
#define FRAME_FLY_PAT	66,1922
#define OP_MODE	67,1953
#define INTL_STAND	68,1979
#define SCRN_FORM	69,2007
#define ENABLE_VTG	70,2034
#define TOP_REG 71,2063
#define CURS_PAL_REG 72,2091
#define CHKSUM_REG 73,2143
#define CURS_POS_REG 74,2202
#define CLR_PAL_REG 75,2235
#define CURS_PAT_REG 76,2285
#define MON_ID_REG 77,2336
#define RESET_REG 78,2381
#define arraysize(arraysize80,2431
static int currcon 82,2478
static struct display disp;83,2502
static struct fb_info fb_info;84,2530
static struct { u_char red, green, blue, pad; } palette[85,2561
static struct fb_fix_screeninfo fb_fix 87,2624
static struct fb_var_screeninfo fb_var 88,2689
static struct fb_ops g364fb_ops 131,4197
void fbcon_g364fb_cursor(137,4390
static struct display_switch fbcon_g364cfb8 153,4755
static int g364fb_open(163,5040
static int g364fb_release(172,5444
static int g364fb_get_fix(182,5643
static int g364fb_get_var(193,5850
static int g364fb_set_var(204,6057
static int g364fb_pan_display(243,7110
static int g364fb_get_cmap(256,7405
static int g364fb_set_cmap(272,7884
static int g364fb_ioctl(290,8377
__initfunc(300,8550
static int g364fbcon_switch(423,12506
static int g364fbcon_updatevar(439,12914
static void g364fbcon_blank(453,13198
static int g364fb_getcolreg(465,13492
static int g364fb_setcolreg(480,13941
static void do_install_cmap(501,14394

drivers/video/font_8x16.c,119
#define FONTDATAMAX 9,271
static unsigned char fontdata_8x16[11,297
struct fbcon_font_desc font_vga_8x16 4624,95765

drivers/video/font_8x8.c,117
#define FONTDATAMAX 9,271
static unsigned char fontdata_8x8[11,297
struct fbcon_font_desc font_vga_8x8 2576,50708

drivers/video/fonts.c,207
#define NO_FONTS21,515
static struct fbcon_font_desc *fbcon_fonts[23,533
#define num_fonts 58,1289
struct fbcon_font_desc *fbcon_find_font(68,1459
struct fbcon_font_desc *fbcon_get_default_font(83,1732

drivers/video/offb.c,1262
static int currcon 43,1041
struct fb_info_offb fb_info_offb45,1066
#define mach_eieio(mach_eieio64,1487
#define mach_eieio(mach_eieio66,1522
static int ofonly 69,1567
struct fb_info *console_fb_info 100,2711
struct vc_mode display_info;101,2751
extern boot_infos_t *boot_infos;104,2817
static struct fb_ops offb_ops 131,3687
static int offb_open(141,3921
static int offb_release(151,4084
static int offb_get_fix(162,4242
static int offb_get_var(176,4543
static int offb_set_var(190,4844
static int offb_pan_display(232,6041
static int offb_get_cmap(245,6259
static int offb_set_cmap(264,6782
static int offb_ioctl(286,7399
__initfunc(323,8425
__initfunc(394,10593
__initfunc(447,11737
__initfunc(492,13042
void offb_setup(710,19350
static int offbcon_switch(720,19488
static int offbcon_updatevar(736,19865
static void offbcon_blank(746,20005
static int offb_getcolreg(772,20526
static int offb_setcolreg(794,21250
static void do_install_cmap(839,22241
int console_getmode(859,22676
int console_setmode(865,22763
static u16 palette_red[906,23688
static u16 palette_green[907,23716
static u16 palette_blue[908,23795
static struct fb_cmap palette_cmap 910,23825
int console_setcmap(914,23926
int console_powermode(940,24591

drivers/video/promcon.c,859
static short pw 27,667
static short px,28,706
static short px, py;28,706
static unsigned long promcon_uni_pagedir[29,727
extern u8 promfont_unicount[31,773
extern u16 promfont_unitable[32,804
#define PROMCON_COLOR 34,837
#define inverted(inverted37,880
#define inverted(inverted39,943
promcon_puts(43,1019
promcon_start(49,1106
promcon_end(77,1779
__initfunc(106,2489
__initfunc(130,3048
promcon_init(160,3624
promcon_deinit(185,4242
promcon_switch(195,4507
promcon_repaint_line(201,4584
promcon_putcs(229,5036
promcon_putc(319,6568
promcon_clear(331,6750
promcon_bmove(400,8077
promcon_cursor(430,8847
promcon_font_op(452,9223
promcon_blank(458,9330
promcon_scroll(470,9525
static u8 promcon_build_attr(551,11000
static int promcon_dummy(561,11229
#define DUMMY 566,11283
struct consw prom_con 568,11321
__initfunc(593,11916

drivers/video/retz3fb.c,2098
#define DEBUG 48,1228
#define PAT_MEM_SIZE 56,1349
#define PAT_MEM_OFF 57,1375
#define arraysize(arraysize59,1426
struct retz3fb_par retz3fb_par61,1476
struct display_data display_data87,2004
struct retz3_fb_info retz3_fb_info102,2548
static char fontname[118,2903
static char fontname[40] __initdata 118,2903
#define retz3info(retz3info120,2949
#define fbinfo(fbinfo121,3006
static char retz3fb_name[128,3088
static struct fb_videomode retz3fb_predefined[172,4407
static struct fb_videomode retz3fb_predefined[] __initdata 172,4407
#define NUM_TOTAL_MODES 256,7108
static struct fb_var_screeninfo retz3fb_default;258,7166
static int z3fb_inverse 260,7216
static int z3fb_mode __initdata 261,7245
static struct display_switch fbcon_retz3_8;304,8539
static unsigned short find_fq(351,10100
static int retz3_set_video(395,10737
static int retz3_encode_fix(789,21826
static int retz3_decode_var(825,22657
static int retz3_encode_var(862,23530
static int retz3_setcolreg(908,24543
static int retz3_getcolreg(942,25277
static void retz3_bitblt 962,25795
static void retz3_MoveCursor 1068,28178
static void retz3fb_get_par(1079,28365
static void retz3fb_set_par(1090,28604
static int do_fb_set_var(1099,28793
static void do_install_cmap(1123,29340
static int retz3fb_open(1141,29750
static int retz3fb_release(1151,29899
static int retz3fb_get_fix(1162,30043
static int retz3fb_get_var(1180,30410
static void retz3fb_set_disp(1196,30700
static int retz3fb_set_var(1253,31893
static int retz3fb_get_cmap(1338,34115
static int retz3fb_set_cmap(1358,34648
static int retz3fb_pan_display(1384,35318
static int retz3fb_ioctl(1395,35490
static struct fb_ops retz3fb_ops 1403,35696
__initfunc(1410,35894
__initfunc(1435,36371
static int z3fb_switch(1518,38600
static int z3fb_updatevar(1542,39223
static void z3fb_blank(1552,39330
__initfunc(1579,39940
int init_module(1593,40194
void cleanup_module(1599,40249
static void fbcon_retz3_8_bmove(1616,40493
static void fbcon_retz3_8_clear(1636,40966
static struct display_switch fbcon_retz3_8 1660,41510

drivers/video/retz3fb.h,6681
#define reg_w(reg_w19,423
#define reg_r(reg_r20,474
#define seq_w(seq_w25,557
#define crt_w(crt_w31,711
#define gfx_w(gfx_w37,870
#define attr_w(attr_w43,1030
#define pll_w(pll_w49,1174
#define VIDEO_MEM_OFFSET	58,1361
#define ACM_OFFSET	59,1397
#define ACM_PRIMARY_OFFSET	64,1464
#define ACM_SECONDARY_OFFSET	65,1496
#define ACM_MODE_CONTROL	66,1530
#define ACM_CURSOR_POSITION	67,1560
#define ACM_START_STATUS	68,1593
#define ACM_CONTROL	69,1623
#define ACM_RASTEROP_ROTATION	70,1649
#define ACM_BITMAP_DIMENSION	71,1684
#define ACM_DESTINATION	72,1718
#define ACM_SOURCE	73,1748
#define ACM_PATTERN	74,1773
#define ACM_FOREGROUND	75,1799
#define ACM_BACKGROUND	76,1828
#define VDAC_ADDRESS	81,1888
#define VDAC_ADDRESS_W	82,1917
#define VDAC_ADDRESS_R	83,1948
#define VDAC_STATE	84,1979
#define VDAC_DATA	85,2006
#define VDAC_MASK	86,2032
#define SEQ_IDX	91,2079
#define SEQ_DATA	92,2126
#define SEQ_RESET	93,2151
#define SEQ_CLOCKING_MODE	94,2175
#define SEQ_MAP_MASK	95,2206
#define SEQ_CHAR_MAP_SELECT	96,2233
#define SEQ_MEMORY_MODE	97,2266
#define SEQ_EXTENDED_ENABLE	98,2296
#define SEQ_UNKNOWN1 99,2350
#define SEQ_UNKNOWN2 100,2385
#define SEQ_CHIP_ID	101,2420
#define SEQ_UNKNOWN3 102,2446
#define SEQ_CURSOR_COLOR1	103,2481
#define SEQ_CURSOR_COLOR0	104,2512
#define SEQ_CURSOR_CONTROL	105,2543
#define SEQ_CURSOR_X_LOC_HI	106,2575
#define SEQ_CURSOR_X_LOC_LO	107,2608
#define SEQ_CURSOR_Y_LOC_HI	108,2641
#define SEQ_CURSOR_Y_LOC_LO	109,2674
#define SEQ_CURSOR_X_INDEX	110,2707
#define SEQ_CURSOR_Y_INDEX	111,2739
#define SEQ_CURSOR_STORE_HI	112,2771
#define SEQ_CURSOR_STORE_LO	113,2804
#define SEQ_CURSOR_ST_OFF_HI	114,2837
#define SEQ_CURSOR_ST_OFF_LO	115,2871
#define SEQ_CURSOR_PIXELMASK	116,2905
#define SEQ_PRIM_HOST_OFF_HI	117,2939
#define SEQ_PRIM_HOST_OFF_LO	118,2973
#define SEQ_LINEAR_0	119,3007
#define SEQ_LINEAR_1	120,3034
#define SEQ_SEC_HOST_OFF_HI	121,3061
#define SEQ_SEC_HOST_OFF_LO	122,3094
#define SEQ_EXTENDED_MEM_ENA	123,3127
#define SEQ_EXT_CLOCK_MODE	124,3161
#define SEQ_EXT_VIDEO_ADDR	125,3193
#define SEQ_EXT_PIXEL_CNTL	126,3225
#define SEQ_BUS_WIDTH_FEEDB	127,3257
#define SEQ_PERF_SELECT	128,3290
#define SEQ_COLOR_EXP_WFG	129,3320
#define SEQ_COLOR_EXP_WBG	130,3351
#define SEQ_EXT_RW_CONTROL	131,3382
#define SEQ_MISC_FEATURE_SEL	132,3414
#define SEQ_COLOR_KEY_CNTL	133,3448
#define SEQ_COLOR_KEY_MATCH0	134,3480
#define SEQ_COLOR_KEY_MATCH1 135,3514
#define SEQ_COLOR_KEY_MATCH2 136,3549
#define SEQ_UNKNOWN6 137,3584
#define SEQ_CRC_CONTROL	138,3619
#define SEQ_CRC_DATA_LOW	139,3649
#define SEQ_CRC_DATA_HIGH	140,3679
#define SEQ_MEMORY_MAP_CNTL	141,3710
#define SEQ_ACM_APERTURE_1	142,3743
#define SEQ_ACM_APERTURE_2	143,3775
#define SEQ_ACM_APERTURE_3	144,3807
#define SEQ_BIOS_UTILITY_0	145,3839
#define SEQ_BIOS_UTILITY_1	146,3871
#define GFX_IDX	151,3934
#define GFX_DATA	152,3959
#define GFX_SET_RESET	153,3984
#define GFX_ENABLE_SET_RESET	154,4012
#define GFX_COLOR_COMPARE	155,4046
#define GFX_DATA_ROTATE	156,4077
#define GFX_READ_MAP_SELECT	157,4107
#define GFX_GRAPHICS_MODE	158,4140
#define GFX_MISC	159,4171
#define GFX_COLOR_XCARE	160,4194
#define GFX_BITMASK	161,4224
#define CRT_IDX	166,4276
#define CRT_DATA	167,4301
#define CRT_HOR_TOTAL	168,4326
#define CRT_HOR_DISP_ENA_END	169,4354
#define CRT_START_HOR_BLANK	170,4388
#define CRT_END_HOR_BLANK	171,4421
#define CRT_START_HOR_RETR	172,4452
#define CRT_END_HOR_RETR	173,4484
#define CRT_VER_TOTAL	174,4514
#define CRT_OVERFLOW	175,4542
#define CRT_PRESET_ROW_SCAN	176,4569
#define CRT_MAX_SCAN_LINE	177,4602
#define CRT_CURSOR_START	178,4633
#define CRT_CURSOR_END	179,4663
#define CRT_START_ADDR_HIGH	180,4692
#define CRT_START_ADDR_LOW	181,4725
#define CRT_CURSOR_LOC_HIGH	182,4757
#define CRT_CURSOR_LOC_LOW	183,4790
#define CRT_START_VER_RETR	184,4822
#define CRT_END_VER_RETR	185,4854
#define CRT_VER_DISP_ENA_END	186,4884
#define CRT_OFFSET	187,4918
#define CRT_UNDERLINE_LOC	188,4943
#define CRT_START_VER_BLANK	189,4974
#define CRT_END_VER_BLANK	190,5007
#define CRT_MODE_CONTROL	191,5038
#define CRT_LINE_COMPARE	192,5068
#define CRT_UNKNOWN1 193,5098
#define CRT_UNKNOWN2 194,5133
#define CRT_UNKNOWN3 195,5168
#define CRT_UNKNOWN4 196,5203
#define CRT_UNKNOWN5 197,5238
#define CRT_UNKNOWN6 198,5273
#define CRT_UNKNOWN7 199,5308
#define CRT_UNKNOWN8 200,5343
#define CRT_UNKNOWN9	201,5378
#define CRT_UNKNOWN10	202,5405
#define CRT_UNKNOWN11 203,5433
#define CRT_UNKNOWN12 204,5466
#define CRT_UNKNOWN13 205,5499
#define CRT_UNKNOWN14 206,5532
#define CRT_UNKNOWN15 207,5565
#define CRT_UNKNOWN16 208,5598
#define CRT_UNKNOWN17 209,5631
#define CRT_UNKNOWN18 210,5664
#define CRT_UNKNOWN19 211,5697
#define CRT_UNKNOWN20 212,5730
#define CRT_UNKNOWN21 213,5763
#define CRT_UNKNOWN22 214,5796
#define CRT_UNKNOWN23 215,5829
#define CRT_EXT_HOR_TIMING1	216,5862
#define CRT_EXT_START_ADDR	217,5920
#define CRT_EXT_HOR_TIMING2	218,5952
#define CRT_EXT_VER_TIMING	219,5985
#define CRT_MONITOR_POWER	220,6017
#define GREG_STATUS0_R	225,6077
#define GREG_STATUS1_R	226,6108
#define GREG_MISC_OUTPUT_R	227,6139
#define GREG_MISC_OUTPUT_W	228,6173
#define GREG_FEATURE_CONTROL_R	229,6208
#define GREG_FEATURE_CONTROL_W	230,6246
#define GREG_POS	231,6284
#define ACT_IDX	236,6341
#define ACT_ADDRESS_R	237,6366
#define ACT_DATA	238,6396
#define ACT_ADDRESS_RESET	239,6421
#define ACT_PALETTE0	240,6454
#define ACT_PALETTE1	241,6481
#define ACT_PALETTE2	242,6508
#define ACT_PALETTE3	243,6535
#define ACT_PALETTE4	244,6562
#define ACT_PALETTE5	245,6589
#define ACT_PALETTE6	246,6616
#define ACT_PALETTE7	247,6643
#define ACT_PALETTE8	248,6670
#define ACT_PALETTE9	249,6697
#define ACT_PALETTE10	250,6724
#define ACT_PALETTE11	251,6752
#define ACT_PALETTE12	252,6780
#define ACT_PALETTE13	253,6808
#define ACT_PALETTE14	254,6836
#define ACT_PALETTE15	255,6864
#define ACT_ATTR_MODE_CNTL	256,6892
#define ACT_OVERSCAN_COLOR	257,6924
#define ACT_COLOR_PLANE_ENA	258,6956
#define ACT_HOR_PEL_PANNING	259,6989
#define ACT_COLOR_SELECT	260,7022
#define PLL_IDX	265,7067
#define PLL_DATA	266,7092
#define	Z3BLTclear	271,7147
#define Z3BLTand	272,7180
#define Z3BLTandReverse	273,7221
#define Z3BLTcopy	274,7273
#define Z3BLTandInverted	275,7307
#define	Z3BLTnoop	276,7359
#define Z3BLTxor	277,7393
#define Z3BLTor	278,7434
#define Z3BLTnor	279,7474
#define Z3BLTequiv	280,7523
#define Z3BLTinvert	281,7570
#define Z3BLTorReverse	282,7610
#define Z3BLTcopyInverted	283,7660
#define Z3BLTorInverted	284,7705
#define Z3BLTnand	285,7756
#define Z3BLTset	286,7805

drivers/video/tgafb.c,4288
#define	TGA_ROM_OFFSET	54,1358
#define	TGA_REGS_OFFSET	55,1393
#define	TGA_8PLANE_FB_OFFSET	56,1429
#define	TGA_24PLANE_FB_OFFSET	57,1469
#define	TGA_24PLUSZ_FB_OFFSET	58,1510
#define	TGA_PLANEMASK_REG	60,1552
#define	TGA_MODE_REG	61,1586
#define	TGA_RASTEROP_REG	62,1616
#define	TGA_DEEP_REG	63,1649
#define	TGA_PIXELMASK_REG	64,1679
#define	TGA_CURSOR_BASE_REG	65,1713
#define	TGA_HORIZ_REG	66,1749
#define	TGA_VERT_REG	67,1780
#define	TGA_BASE_ADDR_REG	68,1810
#define	TGA_VALID_REG	69,1844
#define	TGA_CURSOR_XY_REG	70,1875
#define	TGA_INTR_STAT_REG	71,1909
#define	TGA_RAMDAC_SETUP_REG	72,1943
#define	TGA_BLOCK_COLOR0_REG	73,1980
#define	TGA_BLOCK_COLOR1_REG	74,2017
#define	TGA_CLOCK_REG	75,2054
#define	TGA_RAMDAC_REG	76,2085
#define	TGA_CMD_STAT_REG	77,2117
#define	BT485_READ_BIT	82,2218
#define	BT485_WRITE_BIT	83,2248
#define	BT485_ADDR_PAL_WRITE	85,2280
#define	BT485_DATA_PAL	86,2315
#define	BT485_PIXEL_MASK	87,2345
#define	BT485_ADDR_PAL_READ	88,2376
#define	BT485_ADDR_CUR_WRITE	89,2410
#define	BT485_DATA_CUR	90,2445
#define	BT485_CMD_0	91,2475
#define	BT485_ADDR_CUR_READ	92,2502
#define	BT485_CMD_1	93,2536
#define	BT485_CMD_2	94,2563
#define	BT485_STATUS	95,2590
#define	BT485_CMD_3	96,2618
#define	BT485_CUR_RAM	97,2645
#define	BT485_CUR_LOW_X	98,2674
#define	BT485_CUR_HIGH_X	99,2705
#define	BT485_CUR_LOW_Y	100,2736
#define	BT485_CUR_HIGH_Y	101,2767
#define	BT463_ADDR_LO	106,2868
#define	BT463_ADDR_HI	107,2895
#define	BT463_REG_ACC	108,2922
#define	BT463_PALETTE	109,2949
#define	BT463_CUR_CLR_0	111,2977
#define	BT463_CUR_CLR_1	112,3009
#define	BT463_CMD_REG_0	114,3042
#define	BT463_CMD_REG_1	115,3074
#define	BT463_CMD_REG_2	116,3106
#define	BT463_READ_MASK_0	118,3139
#define	BT463_READ_MASK_1	119,3172
#define	BT463_READ_MASK_2	120,3205
#define	BT463_READ_MASK_3	121,3238
#define	BT463_BLINK_MASK_0	123,3272
#define	BT463_BLINK_MASK_1	124,3306
#define	BT463_BLINK_MASK_2	125,3340
#define	BT463_BLINK_MASK_3	126,3374
#define	BT463_WINDOW_TYPE_BASE	128,3409
int tga_type;131,3449
unsigned int tga_mem_base;132,3463
unsigned long tga_fb_base;133,3490
unsigned long tga_regs_base;134,3517
static unsigned int fb_offset_presets[136,3547
static unsigned int fb_offset_presets[4] __initdata 136,3547
static unsigned int deep_presets[143,3690
static unsigned int deep_presets[4] __initdata 143,3690
static unsigned int rasterop_presets[150,3800
static unsigned int rasterop_presets[4] __initdata 150,3800
static unsigned int mode_presets[157,3914
static unsigned int mode_presets[4] __initdata 157,3914
static unsigned int base_addr_presets[164,4024
static unsigned int base_addr_presets[4] __initdata 164,4024
#define TGA_WRITE_REG(TGA_WRITE_REG171,4139
#define TGA_READ_REG(TGA_READ_REG174,4212
#define BT485_WRITE(BT485_WRITE176,4262
#define BT463_LOAD_ADDR(BT463_LOAD_ADDR180,4391
#define BT463_WRITE(BT463_WRITE186,4672
unsigned char PLLbits[192,4830
unsigned char PLLbits[7] __initdata 192,4830
const unsigned long bt485_cursor_source[194,4915
const unsigned long bt485_cursor_source[64] __initdata 194,4915
const unsigned int bt463_cursor_source[211,5733
const unsigned int bt463_cursor_source[256] __initdata 211,5733
#define arraysize(arraysize243,7016
static int currcon 245,7063
static struct display disp;246,7087
static struct fb_info fb_info;247,7115
static struct { u_char red, green, blue, pad; } palette[248,7146
static u32 fbcon_cfb32_cmap[250,7231
static struct fb_fix_screeninfo fb_fix 253,7272
static struct fb_var_screeninfo fb_var 254,7334
static struct fb_ops tgafb_ops 303,8915
static int tgafb_open(313,9159
static int tgafb_release(323,9524
static int tgafb_get_fix(334,9735
static int tgafb_get_var(346,9953
static int tgafb_set_var(358,10171
static int tgafb_pan_display(397,11184
static int tgafb_get_cmap(410,11404
static int tgafb_set_cmap(426,11852
static int tgafb_ioctl(448,12372
__initfunc(459,12563
static int tgafbcon_switch(784,23046
static int tgafbcon_updatevar(800,23425
static void tgafbcon_blank(810,23578
static int tgafb_getcolreg(864,24940
static int tgafb_setcolreg(883,25555
static void tga_update_palette(919,26659
static void do_install_cmap(934,27053
hide_cursor(954,27487
set_cursor(969,27723

drivers/video/leofb.c,2252
#define LEO_OFF_LC_SS0_KRN	26,649
#define LEO_OFF_LC_SS0_USR	27,687
#define LEO_OFF_LC_SS1_KRN	28,725
#define LEO_OFF_LC_SS1_USR	29,763
#define LEO_OFF_LD_SS0	30,801
#define LEO_OFF_LD_SS1	31,836
#define LEO_OFF_LD_GBL	32,871
#define LEO_OFF_LX_KRN	33,906
#define LEO_OFF_LX_CURSOR	34,941
#define LEO_OFF_SS0	35,978
#define LEO_OFF_SS1	36,1010
#define LEO_OFF_UNK	37,1042
#define LEO_OFF_UNK2	38,1074
#define LEO_CUR_ENABLE	40,1108
#define LEO_CUR_UPDATE	41,1143
#define LEO_CUR_PROGRESS	42,1178
#define LEO_CUR_UPDATECMAP	43,1214
#define LEO_CUR_TYPE_MASK	45,1253
#define LEO_CUR_TYPE_IMAGE	46,1290
#define LEO_CUR_TYPE_CMAP	47,1328
struct leo_cursor leo_cursor49,1366
#define LEO_KRN_TYPE_CLUT0	57,1503
#define LEO_KRN_TYPE_CLUT1	58,1541
#define LEO_KRN_TYPE_CLUT2	59,1579
#define LEO_KRN_TYPE_WID	60,1617
#define LEO_KRN_TYPE_UNK	61,1653
#define LEO_KRN_TYPE_VIDEO	62,1689
#define LEO_KRN_TYPE_CLUTDATA	63,1727
#define LEO_KRN_CSR_ENABLE	64,1768
#define LEO_KRN_CSR_PROGRESS	65,1806
#define LEO_KRN_CSR_UNK	66,1846
#define LEO_KRN_CSR_UNK2	67,1882
struct leo_lx_krn leo_lx_krn69,1919
struct leo_lc_ss0_krn leo_lc_ss0_krn75,2015
struct leo_lc_ss0_usr leo_lc_ss0_usr81,2103
struct leo_lc_ss1_krn leo_lc_ss1_krn93,2311
struct leo_lc_ss1_usr leo_lc_ss1_usr97,2352
struct leo_ld_ss0 leo_ld_ss0101,2393
#define LEO_SS1_MISC_ENABLE	116,2637
#define LEO_SS1_MISC_STEREO	117,2676
struct leo_ld_ss1 leo_ld_ss1118,2715
struct leo_ld_gbl leo_ld_gbl123,2781
static struct sbus_mmap_map leo_mmap_map[127,2818
static void leo_setup(144,3538
static void leo_clear(150,3626
static void leo_fill(184,4627
static void leo_putc(209,5299
static void leo_putcs(255,6452
static void leo_revc(354,9808
static int leo_wait 359,9898
static void leo_loadcmap 369,10174
static void leo_restore_palette 386,10736
static struct display_switch leo_dispsw __initdata 391,10856
static void leo_setcursormap 396,11062
static void leo_setcurshape 411,11620
static void leo_setcursor 434,12208
static void leo_blank 447,12564
static void leo_unblank 453,12720
__initfunc(460,12934
static void leo_margins 482,13510
static char idstring[487,13699
static char idstring[40] __initdata 487,13699
__initfunc(489,13745

drivers/video/vesafb.c,1577
#define dac_reg	35,783
#define dac_val	36,807
char *video_base;45,947
int   video_size;46,965
char *video_vbase;47,983
int  video_bpp;50,1034
int  video_width;51,1050
int  video_height;52,1068
int  video_height_virtual;53,1087
int  video_type 54,1114
int  video_visual;55,1155
int  video_linelength;56,1174
int  video_cmap_len;57,1197
static struct fb_var_screeninfo vesafb_defined 61,1296
static struct display disp;80,1746
static struct fb_info fb_info;81,1774
static struct { u_short blue, green, red, pad; } palette[82,1805
} fbcon_cmap;93,2030
static int             inverse 95,2045
static int             currcon 96,2083
static int             pmi_setpal 98,2122
static int             ypan 99,2195
static int             ywrap 100,2234
static unsigned short  *pmi_base 101,2273
static struct display_switch vesafb_sw;105,2397
static int vesafb_open(113,2566
static int vesafb_release(122,2714
static int vesafb_pan_display(128,2809
static int vesafb_update_var(155,3597
static int vesafb_get_fix(164,3821
static int vesafb_get_var(181,4274
static void vesafb_set_disp(191,4495
static int vesafb_set_var(254,5851
static int vesa_getcolreg(296,6997
static void vesa_setpalette(317,7447
static int vesa_setcolreg(346,8326
static void do_install_cmap(414,9848
static int vesafb_get_cmap(425,10123
static int vesafb_set_cmap(438,10540
static int vesafb_ioctl(455,10985
static struct fb_ops vesafb_ops 462,11157
void vesafb_setup(474,11350
static int vesafb_switch(503,12025
static void vesafb_blank(519,12408
__initfunc(524,12492

drivers/video/vfb.c,1241
#define arraysize(arraysize35,855
#define VIDEOMEMSIZE	45,1092
static u_long videomemory,47,1139
static u_long videomemory, videomemorysize 47,1139
static int currcon 49,1233
static struct display disp;50,1257
static struct fb_info fb_info;51,1285
static struct { u_char red, green, blue, pad; } palette[52,1316
} fbcon_cmap;63,1540
static char vfb_name[64,1554
static struct fb_var_screeninfo vfb_default 66,1596
static int vfb_enable 74,1838
static struct fb_ops vfb_ops 126,3648
static int vfb_open(136,3872
static int vfb_release(146,4235
static int vfb_get_fix(157,4444
static int vfb_get_var(175,4767
static int vfb_set_var(191,5054
static int vfb_pan_display(335,8646
static int vfb_get_cmap(363,9407
static int vfb_set_cmap(380,9890
static int vfb_ioctl(402,10436
__initfunc(409,10584
__initfunc(432,10970
static int vfbcon_switch(462,11685
static int vfbcon_updatevar(478,12060
static void vfbcon_blank(488,12199
static u_long get_line_length(493,12280
static void vfb_encode_fix(503,12473
static void set_color_bitfields(533,13212
static int vfb_getcolreg(590,14594
static int vfb_setcolreg(609,15207
static void do_install_cmap(624,15538
int init_module(637,15854
void cleanup_module(643,15911

drivers/video/vgacon.c,2424
#define BLANK 55,1523
#define CAN_LOAD_EGA_FONTS	57,1545
#define CAN_LOAD_PALETTE	58,1616
#define dac_reg	67,1928
#define dac_val	68,1951
#define attrib_port	69,1974
#define seq_port_reg	70,2000
#define seq_port_val	71,2027
#define gr_port_reg	72,2054
#define gr_port_val	73,2080
#define video_misc_rd	74,2106
#define video_misc_wr	75,2134
static unsigned long vgacon_uni_pagedir[95,3066
static unsigned long   vga_vram_base;99,3156
static unsigned long   vga_vram_end;100,3222
static u16             vga_video_port_reg;101,3286
static u16             vga_video_port_val;102,3362
static unsigned int    vga_video_num_columns;103,3437
static unsigned int    vga_video_num_lines;104,3512
static int	       vga_can_do_color 105,3583
static unsigned int    vga_default_font_height;106,3651
static unsigned char   vga_video_type;107,3735
static unsigned char   vga_hardscroll_enabled;108,3791
static unsigned char   vga_hardscroll_user_enable 109,3838
static unsigned char   vga_font_is_default 110,3893
static int	       vga_vesa_blanked;111,3941
static int	       vga_palette_blanked;112,3977
static int	       vga_is_gfx;113,4016
static int	       vga_512_chars;114,4046
static int	       vga_video_font_height;115,4079
static unsigned int    vga_rolled_over 116,4120
void no_scroll(119,4166
static inline void write_vga(136,4801
__initfunc(153,5204
static void vgacon_init(298,8559
static inline void vga_set_mem_top(317,9136
static void vgacon_deinit(322,9251
static u8 vgacon_build_attr(334,9567
static void vgacon_invert_region(359,10153
static void vgacon_set_cursor_size(373,10468
static void vgacon_cursor(402,11213
static int vgacon_switch(446,12423
static void vga_set_palette(460,12866
static int vgacon_set_palette(472,13145
} vga_state;498,14167
static void vga_vesa_blank(500,14181
static void vga_vesa_unblank(572,16944
static void vga_pal_blank(603,18214
static int vgacon_blank(615,18383
#define colourmap 667,19712
#define blackwmap 670,19851
#define cmapsz 671,19877
vgacon_do_font_op(674,19909
vgacon_adjust_height(813,23857
static int vgacon_font_op(862,25539
static int vgacon_font_op(888,26218
static int vgacon_scrolldelta(895,26321
static int vgacon_set_origin(923,27066
static void vgacon_save_screen(934,27395
static int vgacon_scroll(951,27858
static int vgacon_dummy(1001,29283
#define DUMMY 1006,29342
struct consw vga_con 1008,29379

drivers/video/macfb.c,2325
#define arraysize(arraysize32,701
static struct fb_var_screeninfo macfb_defined=34,751
#define NUM_TOTAL_MODES	53,1290
#define NUM_PREDEF_MODES	54,1317
static struct display disp;56,1345
static struct fb_info fb_info;57,1373
static int inverse 59,1405
struct macfb_parmacfb_par61,1430
static int currcon 66,1468
static int current_par_valid 67,1492
struct macfb_par current_par;68,1526
static int mac_xres,70,1557
static int mac_xres,mac_yres,70,1557
static int mac_xres,mac_yres,mac_depth,70,1557
static int mac_xres,mac_yres,mac_depth, mac_xbytes,70,1557
static int mac_xres,mac_yres,mac_depth, mac_xbytes, mac_vxres;70,1557
static unsigned long mac_videobase;71,1620
static unsigned long mac_videosize;72,1656
static int macfb_open(78,1744
static int macfb_release(87,1891
static void macfb_encode_var(93,1985
static void macfb_get_par(125,2662
static void macfb_set_par(130,2735
static int fb_update_var(135,2811
static int do_fb_set_var(140,2883
extern int console_loglevel;149,3046
static void macfb_encode_fix(151,3076
static int macfb_get_fix(174,3618
static int macfb_get_var(183,3800
static void macfb_set_disp(197,4037
static int macfb_set_var(248,5084
static short red256[267,5396
static short red256[256], green256[267,5396
static short red256[256], green256[256], blue256[267,5396
static short red16[269,5452
static short green16[272,5595
static short blue16[275,5740
static short red4[279,5885
static short green4[281,5939
static short blue4[283,5995
static short red2[286,6051
static short green2[288,6091
static short blue2[290,6133
struct fb_cmap default_256_colors 293,6175
struct fb_cmap default_16_colors 294,6256
struct fb_cmap default_4_colors 295,6333
struct fb_cmap default_2_colors 296,6406
static int mac_set_cmap256(298,6480
static struct fb_cmap * mac_get_default_cmap(344,7480
static void memcpy_fs(355,7698
static void copy_cmap(370,8000
static int macfb_get_cmap(392,8652
static int macfb_set_cmap(414,9320
static int macfb_pan_display(434,9885
static int macfb_ioctl(442,10064
static struct fb_ops macfb_ops 450,10278
void macfb_setup(462,10461
static int macfb_switch(483,10909
static void macfb_blank(492,11091
static int nubus_video_card(502,11284
static struct nubus_device_specifier nb_video=510,11522
__initfunc(515,11599

drivers/video/fbcon-cfb2.c,323
static u_char nibbletab_cfb2[34,836
void fbcon_cfb2_setup(51,1149
void fbcon_cfb2_bmove(57,1261
void fbcon_cfb2_clear(92,2181
void fbcon_cfb2_putc(124,2889
void fbcon_cfb2_putcs(150,3543
void fbcon_cfb2_revc(180,4313
struct display_switch fbcon_cfb2 196,4630
int init_module(203,4831
void cleanup_module(208,4872

drivers/video/creatorfb.c,3896
#define	FFB_SFB8R_VOFF	24,570
#define	FFB_SFB8G_VOFF	25,605
#define	FFB_SFB8B_VOFF	26,640
#define	FFB_SFB8X_VOFF	27,675
#define	FFB_SFB32_VOFF	28,710
#define	FFB_SFB64_VOFF	29,745
#define	FFB_FBC_REGS_VOFF	30,780
#define	FFB_BM_FBC_REGS_VOFF	31,817
#define	FFB_DFB8R_VOFF	32,857
#define	FFB_DFB8G_VOFF	33,892
#define	FFB_DFB8B_VOFF	34,927
#define	FFB_DFB8X_VOFF	35,962
#define	FFB_DFB24_VOFF	36,997
#define	FFB_DFB32_VOFF	37,1032
#define	FFB_DFB422A_VOFF	38,1067
#define	FFB_DFB422AD_VOFF	39,1133
#define	FFB_DFB24B_VOFF	40,1208
#define	FFB_DFB422B_VOFF	41,1276
#define	FFB_DFB422BD_VOFF	42,1342
#define	FFB_SFB16Z_VOFF	43,1417
#define	FFB_SFB8Z_VOFF	44,1479
#define	FFB_SFB422_VOFF	45,1539
#define	FFB_SFB422D_VOFF	46,1607
#define	FFB_FBC_KREGS_VOFF	47,1681
#define	FFB_DAC_VOFF	48,1719
#define	FFB_PROM_VOFF	49,1752
#define	FFB_EXP_VOFF	50,1786
#define	FFB_SFB8R_POFF	52,1820
#define	FFB_SFB8G_POFF	53,1855
#define	FFB_SFB8B_POFF	54,1890
#define	FFB_SFB8X_POFF	55,1925
#define	FFB_SFB32_POFF	56,1960
#define	FFB_SFB64_POFF	57,1995
#define	FFB_FBC_REGS_POFF	58,2030
#define	FFB_BM_FBC_REGS_POFF	59,2067
#define	FFB_DFB8R_POFF	60,2107
#define	FFB_DFB8G_POFF	61,2142
#define	FFB_DFB8B_POFF	62,2177
#define	FFB_DFB8X_POFF	63,2212
#define	FFB_DFB24_POFF	64,2247
#define	FFB_DFB32_POFF	65,2282
#define	FFB_FBC_KREGS_POFF	66,2317
#define	FFB_DAC_POFF	67,2355
#define	FFB_PROM_POFF	68,2388
#define	FFB_EXP_POFF	69,2422
#define FFB_DRAWOP_DOT	72,2478
#define FFB_DRAWOP_AADOT	73,2507
#define FFB_DRAWOP_BRLINECAP	74,2537
#define FFB_DRAWOP_BRLINEOPEN	75,2571
#define FFB_DRAWOP_DDLINE	76,2606
#define FFB_DRAWOP_AALINE	77,2637
#define FFB_DRAWOP_TRIANGLE	78,2668
#define FFB_DRAWOP_POLYGON	79,2701
#define FFB_DRAWOP_RECTANGLE	80,2733
#define FFB_DRAWOP_FASTFILL	81,2767
#define FFB_DRAWOP_BCOPY	82,2800
#define FFB_DRAWOP_VSCROLL	83,2830
#define FFB_PPC_FW_DISABLE	87,2909
#define FFB_PPC_FW_ENABLE	88,2945
#define FFB_PPC_ACE_DISABLE	90,3001
#define FFB_PPC_ACE_AUX_SUB	91,3038
#define FFB_PPC_ACE_AUX_ADD	92,3075
#define FFB_PPC_DCE_DISABLE	94,3128
#define FFB_PPC_DCE_ENABLE	95,3165
#define FFB_PPC_ABE_DISABLE	97,3219
#define FFB_PPC_ABE_ENABLE	98,3256
#define FFB_PPC_VCE_DISABLE	100,3308
#define FFB_PPC_VCE_2D	101,3345
#define FFB_PPC_VCE_3D	102,3378
#define FFB_PPC_APE_DISABLE	104,3430
#define FFB_PPC_APE_ENABLE	105,3467
#define FFB_PPC_TBE_OPAQUE	107,3532
#define FFB_PPC_TBE_TRANSPARENT	108,3568
#define FFB_PPC_ZS_VAR	110,3624
#define FFB_PPC_ZS_CONST	111,3657
#define FFB_PPC_YS_VAR	113,3706
#define FFB_PPC_YS_CONST	114,3739
#define FFB_PPC_XS_WID	116,3788
#define FFB_PPC_XS_VAR	117,3821
#define FFB_PPC_XS_CONST	118,3854
#define FFB_PPC_CS_VAR	120,3913
#define FFB_PPC_CS_CONST	121,3946
#define FFB_ROP_NEW 123,3981
#define FFB_UCSR_FIFO_MASK 125,4024
#define FFB_UCSR_FB_BUSY 126,4066
#define FFB_UCSR_RP_BUSY 127,4108
#define FFB_UCSR_ALL_BUSY 128,4150
#define FFB_UCSR_READ_ERR 129,4217
#define FFB_UCSR_FIFO_OVFL 130,4259
#define FFB_UCSR_ALL_ERRORS 131,4301
struct ffb_fbc ffb_fbc133,4372
static __inline__ void FFBFifo(271,7118
static __inline__ void FFBWait(284,7409
struct ffb_dac ffb_dac296,7650
static struct sbus_mmap_map ffb_mmap_map[303,7755
static void ffb_setup(325,8722
static void ffb_clear(331,8810
static void ffb_fill(361,9688
static void ffb_putc(383,10178
static void ffb_putcs(427,11367
static void ffb_revc(525,14691
static void ffb_loadcmap 530,14781
static struct display_switch ffb_dispsw __initdata 549,15369
static void ffb_margins 554,15575
static inline void ffb_curs_enable 564,15938
static void ffb_setcursormap 575,16178
static void ffb_setcurshape 586,16494
static void ffb_setcursor 607,16962
static void ffb_switch_from_graph 620,17380
static char idstring[638,17889
static char idstring[60] __initdata 638,17889
__initfunc(640,17935

drivers/video/fbcon-cfb4.c,320
static u16 nibbletab_cfb4[34,867
void fbcon_cfb4_setup(51,1266
void fbcon_cfb4_bmove(57,1378
void fbcon_cfb4_clear(92,2298
void fbcon_cfb4_putc(126,3057
void fbcon_cfb4_putcs(152,3678
void fbcon_cfb4_revc(184,4486
struct display_switch fbcon_cfb4 200,4807
int init_module(207,5008
void cleanup_module(212,5049

drivers/video/dnfb.c,2123
#define AP_IOBASE 32,703
#define AP_STATUS 33,780
#define AP_WRITE_ENABLE 34,849
#define AP_DEVICE_ID 35,923
#define AP_ROP_1 36,994
#define AP_DIAG_MEM_REQ 37,1073
#define AP_CONTROL_0 38,1157
#define AP_CONTROL_1 39,1235
#define AP_CONTROL_3A 40,1313
#define AP_CONTROL_2 41,1391
#define FRAME_BUFFER_START 44,1470
#define FRAME_BUFFER_LEN 45,1507
#define VECTOR_MODE 48,1554
#define DBLT_MODE 49,1595
#define NORMAL_MODE 50,1636
#define SHIFT_BITS 51,1677
#define AD_BLT 55,1773
#define NORMAL 56,1814
#define INVERSE 57,1889
#define PIX_BLT 58,1972
#define AD_HIBIT 60,2014
#define ROP_EN 62,2060
#define DST_EQ_SRC 63,2105
#define nRESET_SYNC 64,2150
#define SYNC_ENAB 65,2195
#define BLANK_DISP 67,2241
#define ENAB_DISP 68,2286
#define NORM_CREG1 70,2332
#define S_DATA_1s 78,2492
#define S_DATA_PIX 79,2579
#define S_DATA_PLN 80,2680
#       define RESET_CREG 84,2811
#define ROP(ROP88,2957
#define DEST_ZERO 89,3033
#define SRC_AND_DEST 90,3069
#define SRC_AND_nDEST 91,3097
#define SRC 92,3125
#define nSRC_AND_DEST 93,3169
#define DEST 94,3197
#define SRC_XOR_DEST 95,3233
#define SRC_OR_DEST 96,3261
#define SRC_NOR_DEST 97,3297
#define SRC_XNOR_DEST 98,3325
#define nDEST 99,3353
#define SRC_OR_nDEST 100,3389
#define nSRC 101,3417
#define nSRC_OR_DEST 102,3453
#define SRC_NAND_DEST 103,3481
#define DEST_ONE 104,3509
#define SWAP(SWAP106,3546
#define outb(outb109,3595
#define outw(outw110,3630
static struct display disp[140,4759
static struct fb_info fb_info;141,4804
static struct fb_ops dnfb_ops 142,4835
static int currcon=147,5001
static char dnfb_name[149,5024
static int dnfb_open(151,5059
static int dnfb_release(161,5241
static int dnfb_get_fix(167,5348
static int dnfb_get_var(186,5801
static int dnfb_set_var(214,6336
static int dnfb_get_cmap(256,7162
static int dnfb_set_cmap(264,7314
static int dnfb_pan_display(273,7467
static int dnfb_ioctl(282,7624
static void dnfb_set_disp(289,7792
void dnfb_init(313,8379
static int dnfbcon_switch(344,9248
static int dnfbcon_updatevar(352,9339
static void dnfbcon_blank(357,9415

drivers/video/dummycon.c,233
#define DUMMY_COLUMNS	22,473
#define DUMMY_ROWS	23,511
#define DUMMY_COLUMNS	25,553
#define DUMMY_ROWS	26,578
__initfunc(29,608
static void dummycon_init(34,694
static int dummycon_dummy(44,933
struct consw dummy_con 55,1092

drivers/video/newport_con.c,1072
struct newport_regs *npregs;29,744
int newport_num_lines;30,773
int newport_num_columns;31,796
int topscan;32,821
extern unsigned char vga_font[34,835
#define BMASK(BMASK36,869
#define RENDER(RENDER38,897
#define TESTVAL 49,1597
#define XSTI_TO_FXSTART(XSTI_TO_FXSTART50,1624
static inline void newport_render_background(52,1679
static inline void newport_init_cmap(64,2142
static inline void newport_clear_screen(78,2418
static inline void newport_clear_lines(90,2840
void newport_reset 97,3057
__initfunc(125,3850
static void newport_init(151,4370
static void newport_clear(158,4535
static void newport_putc(172,4974
static void newport_putcs(199,5765
static void newport_cursor(206,5947
static int newport_switch(229,6636
static int newport_blank(235,6741
static int newport_font_op(251,7173
static int newport_set_palette(256,7272
static int newport_scrolldelta(261,7370
static int newport_scroll(267,7525
static void newport_bmove(343,9564
static int newport_dummy(368,10449
#define DUMMY 373,10512
struct consw newport_con 375,10550

drivers/video/fbcon-cfb24.c,493
void fbcon_cfb24_setup(26,573
void fbcon_cfb24_bmove(32,719
#define convert4to3(convert4to374,1872
#define convert4to3(convert4to381,2083
static inline void store4pixels(91,2314
static inline void rectfill(96,2454
void fbcon_cfb24_clear(114,2795
void fbcon_cfb24_putc(132,3308
void fbcon_cfb24_putcs(181,4887
void fbcon_cfb24_revc(234,6699
void fbcon_cfb24_clear_margins(258,7503
struct display_switch fbcon_cfb24 283,8250
int init_module(291,8524
void cleanup_module(296,8565

drivers/video/sbusfb.c,1466
#define DEFAULT_CURSOR_BLINK_RATE 47,1387
#define CURSOR_SHAPE	49,1437
#define CURSOR_BLINK	50,1462
static int currcon;59,1610
static int defx_margin 60,1630
static char fontname[61,1677
static char fontname[40] __initdata 61,1677
static int curblink __initdata 62,1722
} def_margins 67,1828
static struct fb_ops sbusfb_ops 119,3688
static int sbusfb_open(129,3949
static int sbusfb_release(144,4217
static unsigned long sbusfb_mmapsize(165,4634
static int sbusfb_mmap(172,4819
#define POFF_MASK	233,6660
#define POFF_MASK	235,6702
static void sbusfb_clear_margin(270,7581
static void sbusfb_disp_setup(327,9460
static int sbusfb_get_fix(340,9679
static int sbusfb_get_var(353,9959
static int sbusfb_set_var(366,10239
static int sbusfb_pan_display(378,10484
static int sbus_hw_scursor 391,10706
static unsigned char hw_cursor_cmap[457,12584
sbusfb_cursor_timer_handler(460,12651
static void sbusfb_cursor(475,13026
static int sbusfb_get_cmap(520,14421
static int sbusfb_set_cmap(536,14895
static int sbusfb_ioctl(559,15536
__initfunc(721,20686
static int sbusfbcon_switch(755,21459
static int sbusfbcon_updatevar(790,22618
static void sbusfbcon_blank(800,22754
static int sbusfb_getcolreg(815,23125
static int sbusfb_setcolreg(836,23812
static void do_install_cmap(853,24192
static int sbusfb_set_font(868,24611
void sbusfb_palette(910,25722
__initfunc(938,26329
static inline int known_card(1109,30676
__initfunc(1129,31214

drivers/video/fbcon-cfb32.c,369
void fbcon_cfb32_setup(26,574
void fbcon_cfb32_bmove(32,721
static inline void rectfill(72,1826
void fbcon_cfb32_clear(95,2209
void fbcon_cfb32_putc(113,2722
void fbcon_cfb32_putcs(157,4323
void fbcon_cfb32_revc(205,6138
void fbcon_cfb32_clear_margins(233,7113
struct display_switch fbcon_cfb32 258,7860
int init_module(266,8134
void cleanup_module(271,8175

drivers/video/tcxfb.c,1263
#define TCX_THC_MISC_REV_SHIFT 30,735
#define TCX_THC_MISC_REV_MASK 31,775
#define TCX_THC_MISC_VSYNC_DIS 32,815
#define TCX_THC_MISC_HSYNC_DIS 33,862
#define TCX_THC_MISC_RESET 34,909
#define TCX_THC_MISC_VIDEO 35,956
#define TCX_THC_MISC_SYNC 36,1003
#define TCX_THC_MISC_VSYNC 37,1049
#define TCX_THC_MISC_SYNC_ENAB 38,1095
#define TCX_THC_MISC_CURS_RES 39,1141
#define TCX_THC_MISC_INT_ENAB 40,1187
#define TCX_THC_MISC_INT 41,1233
#define TCX_THC_MISC_INIT 42,1279
#define TCX_THC_REV_REV_SHIFT 43,1321
#define TCX_THC_REV_REV_MASK 44,1361
#define TCX_THC_REV_MINREV_SHIFT 45,1401
#define TCX_THC_REV_MINREV_MASK 46,1441
struct tcx_tec tcx_tec49,1513
struct tcx_thc tcx_thc55,1607
static struct sbus_mmap_map tcx_mmap_map[71,2093
static void tcx_set_control_plane 88,2673
static void tcx_switch_from_graph 98,2921
static void tcx_loadcmap 105,3100
static void tcx_restore_palette 119,3476
static void tcx_setcursormap 129,3696
static void tcx_setcurshape 146,4142
static void tcx_setcursor 158,4408
static void tcx_blank 172,4749
static void tcx_unblank 180,5004
static void tcx_reset 187,5215
static void tcx_margins 202,5580
static char idstring[207,5775
static char idstring[60] __initdata 207,5775
__initfunc(209,5821

drivers/video/fbcon-mac.c,455
void fbcon_mac_setup(34,954
#define PIXEL_BLACK_MAC 47,1164
#define PIXEL_WHITE_MAC 48,1199
#define PIXEL_INVERT_MAC 49,1234
void fbcon_mac_bmove(51,1270
void fbcon_mac_clear(189,4377
void fbcon_mac_putc(267,6041
void fbcon_mac_putcs(298,6756
void fbcon_mac_revc(310,6991
static void plot_pixel_mac(328,7351
static int get_pixel_mac(453,10242
struct display_switch fbcon_mac 498,11371
int init_module(505,11572
void cleanup_module(510,11613

drivers/video/aty.h,24280
#define REGMACH64_H19,559
#define CRTC_H_TOTAL_DISP	23,647
#define CRTC_H_SYNC_STRT_WID	24,704
#define CRTC_H_SYNC_STRT	25,764
#define CRTC_H_SYNC_DLY	26,796
#define CRTC_H_SYNC_WID	27,828
#define CRTC_V_TOTAL_DISP	29,861
#define CRTC_V_TOTAL	30,918
#define CRTC_V_DISP	31,947
#define CRTC_V_SYNC_STRT_WID	32,975
#define CRTC_V_SYNC_STRT	33,1035
#define CRTC_V_SYNC_WID	34,1067
#define CRTC_VLINE_CRNT_VLINE	36,1100
#define CRTC_OFF_PITCH	37,1161
#define CRTC_OFFSET	38,1216
#define CRTC_PITCH	39,1244
#define CRTC_INT_CNTL	41,1272
#define CRTC_GEN_CNTL	42,1326
#define CRTC_PIX_WIDTH	43,1380
#define CRTC_FIFO	44,1411
#define CRTC_EXT_DISP	45,1437
#define DSP_CONFIG	47,1468
#define DSP_ON_OFF	48,1519
#define TIMER_CONFIG	49,1570
#define MEM_BUF_CNTL	50,1623
#define MEM_ADDR_CONFIG	51,1676
#define CRT_TRAP	53,1733
#define I2C_CNTL_0	55,1783
#define OVR_CLR	57,1835
#define OVR_WID_LEFT_RIGHT	58,1884
#define OVR_WID_TOP_BOTTOM	59,1942
#define VGA_DSP_CONFIG	61,2001
#define VGA_DSP_ON_OFF	62,2056
#define CUR_CLR0	64,2112
#define CUR_CLR1	65,2161
#define CUR_OFFSET	66,2210
#define CUR_HORZ_VERT_POSN	67,2261
#define CUR_HORZ_VERT_OFF	68,2319
#define GP_IO	70,2377
#define HW_DEBUG	72,2425
#define SCRATCH_REG0	74,2475
#define SCRATCH_REG1	75,2528
#define CLOCK_CNTL	77,2582
#define CLOCK_SEL_CNTL	78,2633
#define CONFIG_STAT1	80,2689
#define CONFIG_STAT2	81,2742
#define BUS_CNTL	83,2796
#define EXT_MEM_CNTL	85,2846
#define MEM_CNTL	86,2899
#define MEM_VGA_WP_SEL	88,2949
#define MEM_VGA_RP_SEL	89,3004
#define DAC_REGS	91,3060
#define DAC_W_INDEX	92,3109
#define DAC_DATA	93,3161
#define DAC_MASK	94,3210
#define DAC_R_INDEX	95,3259
#define DAC_CNTL	96,3311
#define EXT_DAC_REGS	98,3361
#define GEN_TEST_CNTL	100,3415
#define CUSTOM_MACRO_CNTL	102,3470
#define CONFIG_CNTL	104,3528
#define CONFIG_CHIP_ID	105,3593
#define CONFIG_STAT0	106,3648
#define CRC_SIG	107,3701
#define DST_OFF_PITCH	112,3787
#define DST_X	113,3841
#define DST_Y	114,3888
#define DST_Y_X	115,3935
#define DST_WIDTH	116,3984
#define DST_HEIGHT	117,4034
#define DST_HEIGHT_WIDTH	118,4085
#define DST_X_WIDTH	119,4141
#define DST_BRES_LNTH	120,4193
#define DST_BRES_ERR	121,4247
#define DST_BRES_INC	122,4300
#define DST_BRES_DEC	123,4353
#define DST_CNTL	124,4406
#define DST_Y_X__ALIAS__	125,4455
#define TRAIL_BRES_ERR	126,4511
#define TRAIL_BRES_INC	127,4566
#define TRAIL_BRES_DEC	128,4621
#define LEAD_BRES_LNTH	129,4676
#define Z_OFF_PITCH	130,4731
#define Z_CNTL	131,4783
#define ALPHA_TST_CNTL	132,4831
#define SECONDARY_STW_EXP	133,4886
#define SECONDARY_S_X_INC	134,4943
#define SECONDARY_S_Y_INC	135,5000
#define SECONDARY_S_START	136,5057
#define SECONDARY_W_X_INC	137,5114
#define SECONDARY_W_Y_INC	138,5171
#define SECONDARY_W_START	139,5228
#define SECONDARY_T_X_INC	140,5285
#define SECONDARY_T_Y_INC	141,5342
#define SECONDARY_T_START	142,5399
#define SRC_OFF_PITCH	144,5457
#define SRC_X	145,5511
#define SRC_Y	146,5558
#define SRC_Y_X	147,5605
#define SRC_WIDTH1	148,5654
#define SRC_HEIGHT1	149,5705
#define SRC_HEIGHT1_WIDTH1	150,5757
#define SRC_X_START	151,5815
#define SRC_Y_START	152,5867
#define SRC_Y_X_START	153,5919
#define SRC_WIDTH2	154,5973
#define SRC_HEIGHT2	155,6024
#define SRC_HEIGHT2_WIDTH2	156,6076
#define SRC_CNTL	157,6134
#define SCALE_OFF	159,6184
#define SECONDARY_SCALE_OFF	160,6234
#define TEX_0_OFF	162,6294
#define TEX_1_OFF	163,6344
#define TEX_2_OFF	164,6394
#define TEX_3_OFF	165,6444
#define TEX_4_OFF	166,6494
#define TEX_5_OFF	167,6544
#define TEX_6_OFF	168,6594
#define TEX_7_OFF	169,6644
#define SCALE_WIDTH	171,6695
#define SCALE_HEIGHT	172,6747
#define TEX_8_OFF	174,6801
#define TEX_9_OFF	175,6851
#define TEX_10_OFF	176,6901
#define S_Y_INC	177,6952
#define SCALE_PITCH	179,7002
#define SCALE_X_INC	180,7054
#define RED_X_INC	182,7107
#define GREEN_X_INC	183,7157
#define SCALE_Y_INC	185,7210
#define SCALE_VACC	186,7262
#define SCALE_3D_CNTL	187,7313
#define HOST_DATA0	189,7368
#define HOST_DATA1	190,7419
#define HOST_DATA2	191,7470
#define HOST_DATA3	192,7521
#define HOST_DATA4	193,7572
#define HOST_DATA5	194,7623
#define HOST_DATA6	195,7674
#define HOST_DATA7	196,7725
#define HOST_DATA8	197,7776
#define HOST_DATA9	198,7827
#define HOST_DATAA	199,7878
#define HOST_DATAB	200,7929
#define HOST_DATAC	201,7980
#define HOST_DATAD	202,8031
#define HOST_DATAE	203,8082
#define HOST_DATAF	204,8133
#define HOST_CNTL	205,8184
#define BM_HOSTDATA	207,8235
#define BM_ADDR	208,8287
#define BM_DATA	209,8336
#define BM_GUI_TABLE_CMD	210,8385
#define PAT_REG0	212,8442
#define PAT_REG1	213,8491
#define PAT_CNTL	214,8540
#define SC_LEFT	216,8590
#define SC_RIGHT	217,8639
#define SC_LEFT_RIGHT	218,8688
#define SC_TOP	219,8742
#define SC_BOTTOM	220,8790
#define SC_TOP_BOTTOM	221,8840
#define DP_BKGD_CLR	223,8895
#define DP_FOG_CLR	224,8947
#define DP_FRGD_CLR	225,8998
#define DP_WRITE_MASK	226,9050
#define DP_CHAIN_MASK	227,9104
#define DP_PIX_WIDTH	228,9158
#define DP_MIX	229,9211
#define DP_SRC	230,9259
#define DP_FRGD_CLR_MIX	231,9307
#define DP_FRGD_BLGD_CLR	232,9363
#define DST_X_Y	234,9420
#define DST_WIDTH_HEIGHT	235,9469
#define USR_DST_PICTH	236,9525
#define DP_SET_GUI_ENGINE2	237,9579
#define DP_SET_GUI_ENGINE	238,9637
#define CLR_CMP_CLR	240,9695
#define CLR_CMP_MASK	241,9747
#define CLR_CMP_CNTL	242,9800
#define FIFO_STAT	244,9854
#define CONTEXT_MASK	246,9905
#define CONTEXT_LOAD_CNTL	247,9958
#define GUI_TRAJ_CNTL	249,10016
#define GUI_STAT	250,10070
#define TEX_PALETTE_INDEX	252,10120
#define STW_EXP	253,10177
#define LOG_MAX_INC	254,10226
#define S_X_INC	255,10278
#define S_Y_INC__ALIAS__	256,10327
#define SCALE_PITCH__ALIAS__	258,10384
#define S_START	260,10445
#define W_X_INC	261,10494
#define W_Y_INC	262,10543
#define W_START	263,10592
#define T_X_INC	264,10641
#define T_Y_INC	265,10690
#define SECONDARY_SCALE_PITCH	267,10740
#define T_START	269,10802
#define TEX_SIZE_PITCH	270,10851
#define TEX_CNTL	271,10906
#define SECONDARY_TEX_OFFSET	272,10955
#define TEX_PALETTE	273,11015
#define SCALE_PITCH_BOTH	275,11068
#define SECONDARY_SCALE_OFF_ACC	276,11124
#define SCALE_OFF_ACC	277,11187
#define SCALE_DST_Y_X	278,11241
#define COMPOSITE_SHADOW_ID	280,11296
#define SECONDARY_SCALE_X_INC	282,11356
#define SPECULAR_RED_X_INC	284,11418
#define SPECULAR_RED_Y_INC	285,11476
#define SPECULAR_RED_START	286,11534
#define SECONDARY_SCALE_HACC	288,11593
#define SPECULAR_GREEN_X_INC	290,11654
#define SPECULAR_GREEN_Y_INC	291,11714
#define SPECULAR_GREEN_START	292,11774
#define SPECULAR_BLUE_X_INC	293,11834
#define SPECULAR_BLUE_Y_INC	294,11893
#define SPECULAR_BLUE_START	295,11952
#define SCALE_X_INC__ALIAS__	297,12012
#define RED_X_INC__ALIAS__	299,12073
#define RED_Y_INC	300,12131
#define RED_START	301,12181
#define SCALE_HACC	303,12232
#define SCALE_Y_INC__ALIAS__	304,12283
#define GREEN_X_INC__ALIAS__	306,12344
#define GREEN_Y_INC	307,12404
#define SECONDARY_SCALE_Y_INC	309,12457
#define SECONDARY_SCALE_VACC	310,12518
#define GREEN_START	312,12579
#define BLUE_X_INC	313,12631
#define BLUE_Y_INC	314,12682
#define BLUE_START	315,12733
#define Z_X_INC	316,12784
#define Z_Y_INC	317,12833
#define Z_START	318,12882
#define ALPHA_X_INC	319,12931
#define FOG_X_INC	320,12983
#define ALPHA_Y_INC	321,13033
#define FOG_Y_INC	322,13085
#define ALPHA_START	323,13135
#define FOG_START	324,13187
#define OVERLAY_Y_X_START	326,13238
#define OVERLAY_Y_X_END	327,13296
#define OVERLAY_VIDEO_KEY_CLR	328,13353
#define OVERLAY_VIDEO_KEY_MSK	329,13415
#define OVERLAY_GRAPHICS_KEY_CLR	330,13477
#define OVERLAY_GRAPHICS_KEY_MSK	331,13541
#define OVERLAY_KEY_CNTL	332,13605
#define OVERLAY_SCALE_INC	334,13663
#define OVERLAY_SCALE_CNTL	335,13720
#define SCALER_HEIGHT_WIDTH	336,13778
#define SCALER_TEST	337,13837
#define SCALER_BUF0_OFFSET	338,13889
#define SCALER_BUF1_OFFSET	339,13947
#define SCALE_BUF_PITCH	340,14005
#define CAPTURE_START_END	342,14062
#define CAPTURE_X_WIDTH	343,14119
#define VIDEO_FORMAT	344,14175
#define VBI_START_END	345,14228
#define CAPTURE_CONFIG	346,14282
#define TRIG_CNTL	347,14337
#define OVERLAY_EXCLUSIVE_HORZ	349,14388
#define OVERLAY_EXCLUSIVE_VERT	350,14450
#define VAL_WIDTH	352,14513
#define CAPTURE_DEBUG	353,14563
#define VIDEO_SYNC_TEST	354,14617
#define SNAPSHOT_VH_COUNTS	356,14674
#define SNAPSHOT_F_COUNT	357,14732
#define N_VIF_COUNT	358,14788
#define SNAPSHOT_VIF_COUNT	359,14840
#define CAPTURE_BUF0_OFFSET	361,14899
#define CAPTURE_BUF1_OFFSET	362,14958
#define CAPTURE_BUF_PITCH	363,15017
#define MPP_CONFIG	365,15075
#define MPP_STROBE_SEQ	366,15126
#define MPP_ADDR	367,15181
#define MPP_DATA	368,15230
#define TVO_CNTL	369,15279
#define CRT_HORZ_VERT_LOAD	371,15329
#define AGP_BASE	373,15388
#define AGP_CNTL	374,15437
#define SCALER_COLOUR_CNTL	376,15487
#define SCALER_H_COEFF0	377,15545
#define SCALER_H_COEFF1	378,15601
#define SCALER_H_COEFF2	379,15657
#define SCALER_H_COEFF3	380,15713
#define SCALER_H_COEFF4	381,15769
#define GUI_CNTL	383,15826
#define BM_FRAME_BUF_OFFSET	385,15876
#define BM_SYSTEM_MEM_ADDR	386,15935
#define BM_COMMAND	387,15993
#define BM_STATUS	388,16044
#define BM_GUI_TABLE	389,16094
#define BM_SYSTEM_TABLE	390,16147
#define SCALER_BUF0_OFFSET_U	392,16204
#define SCALER_BUF0_OFFSET_V	393,16264
#define SCALER_BUF1_OFFSET_U	394,16324
#define SCALER_BUF1_OFFSET_V	395,16384
#define VERTEX_1_S	397,16445
#define VERTEX_1_T	398,16496
#define VERTEX_1_W	399,16547
#define VERTEX_1_SPEC_ARGB	400,16598
#define VERTEX_1_Z	401,16656
#define VERTEX_1_ARGB	402,16707
#define VERTEX_1_X_Y	403,16761
#define ONE_OVER_AREA	404,16814
#define VERTEX_2_S	405,16868
#define VERTEX_2_T	406,16919
#define VERTEX_2_W	407,16970
#define VERTEX_2_SPEC_ARGB	408,17021
#define VERTEX_2_Z	409,17079
#define VERTEX_2_ARGB	410,17130
#define VERTEX_2_X_Y	411,17184
#define ONE_OVER_AREA	412,17237
#define VERTEX_3_S	413,17291
#define VERTEX_3_T	414,17342
#define VERTEX_3_W	415,17393
#define VERTEX_3_SPEC_ARGB	416,17444
#define VERTEX_3_Z	417,17502
#define VERTEX_3_ARGB	418,17553
#define VERTEX_3_X_Y	419,17607
#define ONE_OVER_AREA	420,17660
#define VERTEX_1_S	421,17714
#define VERTEX_1_T	422,17765
#define VERTEX_1_W	423,17816
#define VERTEX_2_S	424,17867
#define VERTEX_2_T	425,17918
#define VERTEX_2_W	426,17969
#define VERTEX_3_SECONDARY_S	427,18020
#define VERTEX_3_S	428,18080
#define VERTEX_3_SECONDARY_T	429,18131
#define VERTEX_3_T	430,18191
#define VERTEX_3_SECONDARY_W	431,18242
#define VERTEX_3_W	432,18302
#define VERTEX_1_SPEC_ARGB	433,18353
#define VERTEX_2_SPEC_ARGB	434,18411
#define VERTEX_3_SPEC_ARGB	435,18469
#define VERTEX_1_Z	436,18527
#define VERTEX_2_Z	437,18578
#define VERTEX_3_Z	438,18629
#define VERTEX_1_ARGB	439,18680
#define VERTEX_2_ARGB	440,18734
#define VERTEX_3_ARGB	441,18788
#define VERTEX_1_X_Y	442,18842
#define VERTEX_2_X_Y	443,18895
#define VERTEX_3_X_Y	444,18948
#define ONE_OVER_AREA_UC	445,19001
#define SETUP_CNTL	446,19057
#define VERTEX_1_SECONDARY_S	447,19108
#define VERTEX_1_SECONDARY_T	448,19168
#define VERTEX_1_SECONDARY_W	449,19228
#define VERTEX_2_SECONDARY_S	450,19288
#define VERTEX_2_SECONDARY_T	451,19348
#define VERTEX_2_SECONDARY_W	452,19408
#define CRTC_H_SYNC_NEG	457,19520
#define CRTC_V_SYNC_NEG	458,19556
#define CRTC_DBL_SCAN_EN	460,19593
#define CRTC_INTERLACE_EN	461,19629
#define CRTC_HSYNC_DIS	462,19666
#define CRTC_VSYNC_DIS	463,19701
#define CRTC_CSYNC_EN	464,19736
#define CRTC_PIX_BY_2_EN	465,19770
#define CRTC_DISPLAY_DIS	466,19827
#define CRTC_VGA_XOVERSCAN	467,19863
#define CRTC_PIX_WIDTH_MASK	469,19902
#define CRTC_PIX_WIDTH_4BPP	470,19941
#define CRTC_PIX_WIDTH_8BPP	471,19980
#define CRTC_PIX_WIDTH_15BPP	472,20019
#define CRTC_PIX_WIDTH_16BPP	473,20059
#define CRTC_PIX_WIDTH_24BPP	474,20099
#define CRTC_PIX_WIDTH_32BPP	475,20139
#define CRTC_BYTE_PIX_ORDER	477,20180
#define CRTC_PIX_ORDER_MSN_LSN	478,20219
#define CRTC_PIX_ORDER_LSN_MSN	479,20261
#define CRTC_FIFO_LWM	481,20304
#define VGA_128KAP_PAGING	483,20339
#define VFC_SYNC_TRISTATE	484,20376
#define CRTC_LOCK_REGS	485,20413
#define CRTC_SYNC_TRISTATE	486,20448
#define CRTC_EXT_DISP_EN	488,20487
#define CRTC_ENABLE	489,20523
#define CRTC_DISP_REQ_ENB	490,20555
#define VGA_ATI_LINEAR	491,20592
#define CRTC_VSYNC_FALL_EDGE	492,20627
#define VGA_TEXT_132	493,20667
#define VGA_XCRT_CNT_EN	494,20700
#define VGA_CUR_B_TEST	495,20736
#define CRTC_CRNT_VLINE	497,20772
#define CRTC_VBLANK	498,20808
#define DAC_EXT_SEL_RS2	503,20868
#define DAC_EXT_SEL_RS3	504,20898
#define DAC_8BIT_EN	505,20928
#define DAC_PIX_DLY_MASK	506,20960
#define DAC_PIX_DLY_0NS	507,20996
#define DAC_PIX_DLY_2NS	508,21032
#define DAC_PIX_DLY_4NS	509,21068
#define DAC_BLANK_ADJ_MASK	510,21104
#define DAC_BLANK_ADJ_0	511,21142
#define DAC_BLANK_ADJ_1	512,21178
#define DAC_BLANK_ADJ_2	513,21214
#define MIX_NOT_DST	518,21278
#define MIX_0	519,21306
#define MIX_1	520,21329
#define MIX_DST	521,21352
#define MIX_NOT_SRC	522,21377
#define MIX_XOR	523,21405
#define MIX_XNOR	524,21430
#define MIX_SRC	525,21455
#define MIX_NAND	526,21480
#define MIX_NOT_SRC_OR_DST	527,21505
#define MIX_SRC_OR_NOT_DST	528,21539
#define MIX_OR	529,21573
#define MIX_AND	530,21597
#define MIX_SRC_AND_NOT_DST	531,21622
#define MIX_NOT_SRC_AND_DST	532,21657
#define MIX_NOR	533,21692
#define ENGINE_MIN_X	536,21750
#define ENGINE_MIN_Y	537,21774
#define ENGINE_MAX_X	538,21798
#define ENGINE_MAX_Y	539,21825
#define BUS_FIFO_ERR_ACK	544,21959
#define BUS_HOST_ERR_ACK	545,21995
#define GEN_OVR_OUTPUT_EN	548,22071
#define HWCURSOR_ENABLE	549,22102
#define GUI_ENGINE_ENABLE	550,22132
#define BLOCK_WRITE_ENABLE	551,22164
#define DSP_XCLKS_PER_QW	554,22234
#define DSP_LOOP_LATENCY	555,22270
#define DSP_PRECISION	556,22306
#define DSP_OFF	559,22377
#define DSP_ON	560,22406
#define CLOCK_SEL	563,22471
#define CLOCK_DIV	564,22495
#define CLOCK_DIV1	565,22519
#define CLOCK_DIV2	566,22544
#define CLOCK_DIV4	567,22569
#define CLOCK_STROBE	568,22594
#define PLL_WR_EN	569,22621
#define MPLL_CNTL	572,22666
#define VPLL_CNTL	573,22690
#define PLL_REF_DIV	574,22714
#define PLL_GEN_CNTL	575,22740
#define MCLK_FB_DIV	576,22767
#define PLL_VCLK_CNTL	577,22793
#define VCLK_POST_DIV	578,22821
#define VCLK0_FB_DIV	579,22849
#define VCLK1_FB_DIV	580,22876
#define VCLK2_FB_DIV	581,22903
#define VCLK3_FB_DIV	582,22930
#define PLL_EXT_CNTL	583,22957
#define DLL_CNTL	584,22984
#define VFC_CNTL	585,23007
#define PLL_TEST_CTRL	586,23030
#define PLL_TEST_COUNT	587,23058
#define PLL_PC_GAIN	590,23118
#define PLL_VC_GAIN	591,23144
#define PLL_DUTY_CYC	592,23170
#define PLL_OVERRIDE	593,23197
#define PLL_MCLK_RST	594,23224
#define OSC_EN	595,23251
#define EXT_CLK_EN	596,23273
#define MCLK_SRC_SEL	597,23298
#define EXT_CLK_CNTL	598,23325
#define VCLK_SRC_SEL	599,23352
#define PLL_VCLK_RST	600,23379
#define VCLK_INVERT	601,23406
#define VCLK0_POST	602,23432
#define VCLK1_POST	603,23457
#define VCLK2_POST	604,23482
#define VCLK3_POST	605,23507
#define APERTURE_4M_ENABLE	608,23570
#define APERTURE_8M_ENABLE	609,23599
#define VGA_APERTURE_ENABLE	610,23628
#define CFG_BUS_TYPE	613,23706
#define CFG_MEM_TYPE	614,23739
#define CFG_INIT_DAC_TYPE	615,23772
#define CFG_MEM_TYPE_xT	618,23861
#define ISA	620,23898
#define EISA	621,23914
#define LOCAL_BUS	622,23931
#define PCI	623,23952
#define DRAMx4	626,23999
#define VRAMx16	627,24018
#define VRAMx16ssr	628,24038
#define DRAMx16	629,24060
#define GraphicsDRAMx16	630,24080
#define EnhancedVRAMx16	631,24107
#define EnhancedVRAMx16ssr	632,24134
#define DRAM	635,24202
#define EDO	636,24219
#define PSEUDO_EDO	637,24235
#define SDRAM	638,24257
#define SGRAM	639,24275
#define WRAM	640,24293
#define DAC_INTERNAL	642,24311
#define DAC_IBMRGB514	643,24338
#define DAC_ATI68875	644,24366
#define DAC_TVP3026_A	645,24393
#define DAC_BT476	646,24421
#define DAC_BT481	647,24445
#define DAC_ATT20C491	648,24469
#define DAC_SC15026	649,24497
#define DAC_MU9C1880	650,24523
#define DAC_IMSG174	651,24550
#define DAC_ATI68860_B	652,24576
#define DAC_ATI68860_C	653,24605
#define DAC_TVP3026_B	654,24634
#define DAC_STG1700	655,24662
#define DAC_ATT498	656,24688
#define DAC_STG1702	657,24713
#define DAC_SC15021	658,24739
#define DAC_ATT21C498	659,24765
#define DAC_STG1703	660,24793
#define DAC_CH8398	661,24819
#define DAC_ATT20C408	662,24844
#define CLK_ATI18818_0	664,24873
#define CLK_ATI18818_1	665,24899
#define CLK_STG1703	666,24925
#define CLK_CH8398	667,24948
#define CLK_INTERNAL	668,24970
#define CLK_ATT20C408	669,24994
#define CLK_IBMRGB514	670,25019
#define MEM_SIZE_ALIAS	673,25079
#define MEM_SIZE_512K	674,25114
#define MEM_SIZE_1M	675,25148
#define MEM_SIZE_2M	676,25180
#define MEM_SIZE_4M	677,25212
#define MEM_SIZE_6M	678,25244
#define MEM_SIZE_8M	679,25276
#define MEM_SIZE_ALIAS_GTB	680,25308
#define MEM_SIZE_2M_GTB	681,25346
#define MEM_SIZE_4M_GTB	682,25382
#define MEM_SIZE_6M_GTB	683,25418
#define MEM_SIZE_8M_GTB	684,25454
#define MEM_BNDRY	685,25490
#define MEM_BNDRY_0K	686,25520
#define MEM_BNDRY_256K	687,25553
#define MEM_BNDRY_512K	688,25588
#define MEM_BNDRY_1M	689,25623
#define MEM_BNDRY_EN	690,25656
#define PCI_ATI_VENDOR_ID	693,25714
#define CFG_CHIP_TYPE	697,25789
#define CFG_CHIP_CLASS	698,25823
#define CFG_CHIP_REV	699,25858
#define CFG_CHIP_MAJOR	700,25891
#define CFG_CHIP_FND_ID	701,25926
#define CFG_CHIP_MINOR	702,25962
#define GX_CHIP_ID	708,26062
#define CX_CHIP_ID	709,26114
#define GX_PCI_ID	711,26167
#define CX_PCI_ID	712,26220
#define CT_CHIP_ID	715,26296
#define ET_CHIP_ID	716,26348
#define VT_CHIP_ID	719,26440
#define VU_CHIP_ID	720,26492
#define VV_CHIP_ID	721,26546
#define LB_CHIP_ID	724,26650
#define LD_CHIP_ID	725,26699
#define LG_CHIP_ID	726,26743
#define LI_CHIP_ID	727,26787
#define LP_CHIP_ID	728,26831
#define LT_CHIP_ID	729,26875
#define GT_CHIP_ID	730,26915
#define GU_CHIP_ID	731,26957
#define GV_CHIP_ID	732,27007
#define GW_CHIP_ID	733,27053
#define GZ_CHIP_ID	734,27099
#define GB_CHIP_ID	735,27145
#define GD_CHIP_ID	736,27206
#define GI_CHIP_ID	737,27265
#define GP_CHIP_ID	738,27323
#define GQ_CHIP_ID	739,27386
#define MACH64_ASIC_NEC_VT_A3	743,27488
#define MACH64_ASIC_NEC_VT_A4	744,27524
#define MACH64_ASIC_SGS_VT_A4	745,27560
#define MACH64_ASIC_SGS_VT_B1S1	746,27596
#define MACH64_ASIC_SGS_GT_B1S1	747,27634
#define MACH64_ASIC_SGS_GT_B1S2	748,27672
#define MACH64_ASIC_UMC_GT_B2U1	749,27710
#define MACH64_ASIC_UMC_GT_B2U2	750,27748
#define MACH64_ASIC_UMC_VT_B2U3	751,27786
#define MACH64_ASIC_UMC_GT_B2U3	752,27824
#define MACH64_ASIC_UMC_R3B_D_P_A1	753,27862
#define MACH64_ASIC_UMC_R3B_D_P_A2	754,27902
#define MACH64_ASIC_UMC_R3B_D_P_A3	755,27942
#define MACH64_ASIC_UMC_R3B_D_P_A4	756,27982
#define MACH64_FND_SGS	759,28046
#define MACH64_FND_NEC	760,28072
#define MACH64_FND_UMC	761,28098
#define MACH64_UNKNOWN	764,28149
#define MACH64_GX	765,28175
#define MACH64_CX	766,28196
#define MACH64_CT	767,28217
#define MACH64_ET	768,28238
#define MACH64_VT	769,28259
#define MACH64_GT	770,28280
#define DST_X_RIGHT_TO_LEFT	773,28336
#define DST_X_LEFT_TO_RIGHT	774,28366
#define DST_Y_BOTTOM_TO_TOP	775,28396
#define DST_Y_TOP_TO_BOTTOM	776,28426
#define DST_X_MAJOR	777,28456
#define DST_Y_MAJOR	778,28479
#define DST_X_TILE	779,28502
#define DST_Y_TILE	780,28524
#define DST_LAST_PEL	781,28549
#define DST_POLYGON_ENABLE	782,28576
#define DST_24_ROTATION_ENABLE	783,28608
#define SRC_PATTERN_ENABLE	786,28679
#define SRC_ROTATION_ENABLE	787,28709
#define SRC_LINEAR_ENABLE	788,28740
#define SRC_BYTE_ALIGN	789,28769
#define SRC_LINE_X_RIGHT_TO_LEFT	790,28796
#define SRC_LINE_X_LEFT_TO_RIGHT	791,28831
#define HOST_BYTE_ALIGN	794,28905
#define PAT_MONO_8x8_ENABLE	797,28972
#define PAT_CLR_4x2_ENABLE	798,29011
#define PAT_CLR_8x1_ENABLE	799,29049
#define DP_CHAIN_4BPP	802,29127
#define DP_CHAIN_7BPP	803,29157
#define DP_CHAIN_8BPP	804,29187
#define DP_CHAIN_8BPP_RGB	805,29217
#define DP_CHAIN_15BPP	806,29250
#define DP_CHAIN_16BPP	807,29281
#define DP_CHAIN_24BPP	808,29312
#define DP_CHAIN_32BPP	809,29343
#define DST_1BPP	812,29413
#define DST_4BPP	813,29433
#define DST_8BPP	814,29453
#define DST_15BPP	815,29473
#define DST_16BPP	816,29494
#define DST_32BPP	817,29515
#define SRC_1BPP	818,29536
#define SRC_4BPP	819,29556
#define SRC_8BPP	820,29580
#define SRC_15BPP	821,29604
#define SRC_16BPP	822,29629
#define SRC_32BPP	823,29654
#define HOST_1BPP	824,29679
#define HOST_4BPP	825,29700
#define HOST_8BPP	826,29727
#define HOST_15BPP	827,29754
#define HOST_16BPP	828,29782
#define HOST_32BPP	829,29810
#define BYTE_ORDER_MSB_TO_LSB	830,29838
#define BYTE_ORDER_LSB_TO_MSB	831,29870
#define BKGD_MIX_NOT_D	834,29943
#define BKGD_MIX_ZERO	835,29970
#define BKGD_MIX_ONE	836,29996
#define BKGD_MIX_D	837,30021
#define BKGD_MIX_NOT_S	838,30044
#define BKGD_MIX_D_XOR_S	839,30071
#define BKGD_MIX_NOT_D_XOR_S	840,30099
#define BKGD_MIX_S	841,30131
#define BKGD_MIX_NOT_D_OR_NOT_S	842,30154
#define BKGD_MIX_D_OR_NOT_S	843,30189
#define BKGD_MIX_NOT_D_OR_S	844,30220
#define BKGD_MIX_D_OR_S	845,30252
#define BKGD_MIX_D_AND_S	846,30281
#define BKGD_MIX_NOT_D_AND_S	847,30310
#define BKGD_MIX_D_AND_NOT_S	848,30343
#define BKGD_MIX_NOT_D_AND_NOT_S	849,30376
#define BKGD_MIX_D_PLUS_S_DIV2	850,30412
#define FRGD_MIX_NOT_D	851,30449
#define FRGD_MIX_ZERO	852,30476
#define FRGD_MIX_ONE	853,30508
#define FRGD_MIX_D	854,30539
#define FRGD_MIX_NOT_S	855,30568
#define FRGD_MIX_D_XOR_S	856,30601
#define FRGD_MIX_NOT_D_XOR_S	857,30635
#define FRGD_MIX_S	858,30673
#define FRGD_MIX_NOT_D_OR_NOT_S	859,30702
#define FRGD_MIX_D_OR_NOT_S	860,30743
#define FRGD_MIX_NOT_D_OR_S	861,30780
#define FRGD_MIX_D_OR_S	862,30817
#define FRGD_MIX_D_AND_S	863,30851
#define FRGD_MIX_NOT_D_AND_S	864,30885
#define FRGD_MIX_D_AND_NOT_S	865,30923
#define FRGD_MIX_NOT_D_AND_NOT_S	866,30961
#define FRGD_MIX_D_PLUS_S_DIV2	867,31002
#define BKGD_SRC_BKGD_CLR	870,31076
#define BKGD_SRC_FRGD_CLR	871,31104
#define BKGD_SRC_HOST	872,31132
#define BKGD_SRC_BLIT	873,31157
#define BKGD_SRC_PATTERN	874,31182
#define FRGD_SRC_BKGD_CLR	875,31209
#define FRGD_SRC_FRGD_CLR	876,31237
#define FRGD_SRC_HOST	877,31269
#define FRGD_SRC_BLIT	878,31298
#define FRGD_SRC_PATTERN	879,31327
#define MONO_SRC_ONE	880,31358
#define MONO_SRC_PATTERN	881,31382
#define MONO_SRC_HOST	882,31415
#define MONO_SRC_BLIT	883,31446
#define COMPARE_FALSE	886,31516
#define COMPARE_TRUE	887,31541
#define COMPARE_NOT_EQUAL	888,31565
#define COMPARE_EQUAL	889,31593
#define COMPARE_DESTINATION	890,31618
#define COMPARE_SOURCE	891,31648
#define FIFO_ERR	894,31718
#define CONTEXT_NO_LOAD	897,31782
#define CONTEXT_LOAD	898,31810
#define CONTEXT_LOAD_AND_DO_FILL	899,31841
#define CONTEXT_LOAD_AND_DO_LINE	900,31882
#define CONTEXT_EXECUTE	901,31923
#define CONTEXT_CMD_DISABLE	902,31951
#define ENGINE_IDLE	905,32026
#define ENGINE_BUSY	906,32049
#define SCISSOR_LEFT_FLAG	907,32072
#define SCISSOR_RIGHT_FLAG	908,32103
#define SCISSOR_TOP_FLAG	909,32135
#define SCISSOR_BOTTOM_FLAG	910,32165
#define sioATIEXT	913,32232
#define bioATIEXT	914,32257
#define ATI2E	916,32283
#define ATI32	917,32304
#define ATI36	918,32325
#define VGAGRA	921,32387
#define GRA06	922,32410
#define VGASEQ	925,32464
#define SEQ02	926,32487
#define SEQ04	927,32508
#define MACH64_MAX_X	929,32530
#define MACH64_MAX_Y	930,32565
#define INC_X	932,32601
#define INC_Y	933,32624
#define RGB16_555	935,32648
#define RGB16_565	936,32674
#define RGB16_655	937,32700
#define RGB16_664	938,32726
#define POLY_TEXT_TYPE	940,32753
#define IMAGE_TEXT_TYPE	941,32784
#define TEXT_TYPE_8_BIT	942,32816
#define TEXT_TYPE_16_BIT	943,32848
#define POLY_TEXT_TYPE_8	944,32880
#define IMAGE_TEXT_TYPE_8	945,32940
#define POLY_TEXT_TYPE_16	946,33002
#define IMAGE_TEXT_TYPE_16	947,33064
#define MACH64_NUM_CLOCKS	949,33129
#define MACH64_NUM_FREQS	950,33158

drivers/video/fbcon-vga.c,476
static inline void vga_writew(29,650
static inline u16 vga_readw(38,818
static inline void vga_memsetw(47,979
static inline void vga_memmovew(57,1138
static inline u16 fbcon_vga_attr(79,1488
void fbcon_vga_setup(93,1915
void fbcon_vga_bmove(99,2018
void fbcon_vga_clear(128,2912
void fbcon_vga_putc(141,3334
void fbcon_vga_putcs(151,3608
void fbcon_vga_revc(166,4058
struct display_switch fbcon_vga 179,4364
int init_module(186,4558
void cleanup_module(191,4599

drivers/video/imsttfb.c,8516
#define eieio(eieio51,1428
	S1SA	56,1534
	S2SA	57,1557
	SP	58,1580
	DSA	59,1601
	CNT	60,1623
	DP_OCTL	61,1645
	CLR	62,1671
	BI	63,1693
	MBC	64,1714
	BLTCTL	65,1736
	HES	68,1801
	HEB	69,1823
	HSB	70,1845
	HT	71,1867
	VES	72,1888
	VEB	73,1910
	VSB	74,1932
	VT	75,1954
	HCIV	76,1975
	VCIV	77,1998
	TCDR	78,2021
	VIL	79,2044
	STGCTL	80,2066
	SSR	83,2134
	HRIR	84,2156
	SPR	85,2179
	CMR	86,2201
	SRGCTL	87,2223
	RRCIV	90,2288
	RRSC	91,2312
	RRCR	92,2335
	GIOE	95,2383
	GIO	96,2406
	SCR	97,2428
	SSTATUS	98,2450
	PRC	99,2476
	DVID	103,2527
	DVID	= 0x00000000L,103,2527
	SC	104,2548
	SC	= 0x00000004L,104,2548
	CCR	105,2567
	CCR	= 0x00000008L,105,2567
	OG	106,2587
	OG	= 0x0000000CL,106,2587
	BARM	107,2606
	BARM	= 0x00000010L,107,2606
	BARER	108,2627
	BARER	= 0x00000030L,108,2627
	PADDRW	114,2705
	PADDRW	= 0x00,114,2705
	PDATA	115,2721
	PDATA	= 0x04,115,2721
	PPMASK	116,2736
	PPMASK	= 0x08,116,2736
	PADDRR	117,2752
	PADDRR	= 0x0c,117,2752
	PIDXLO	118,2768
	PIDXLO	= 0x10,118,2768
	PIDXHI	119,2785
	PIDXHI	= 0x14,119,2785
	PIDXDATA=120,2802
	PIDXDATA= 0x18,120,2802
	PIDXCTL	121,2819
	PIDXCTL	= 0x1c121,2819
	CLKCTL	126,2886
	CLKCTL		= 0x02,126,2886
	SYNCCTL	127,2944
	SYNCCTL		= 0x03,127,2944
	HSYNCPOS	128,2988
	HSYNCPOS	= 0x04,128,2988
	PWRMNGMT	129,3044
	PWRMNGMT	= 0x05,129,3044
	DACOP	130,3092
	DACOP		= 0x06,130,3092
	PALETCTL	131,3135
	PALETCTL	= 0x07,131,3135
	SYSCLKCTL	132,3182
	SYSCLKCTL	= 0x08,132,3182
	PIXFMT	133,3235
	PIXFMT		= 0x0a,133,3235
	BPP8	134,3290
	BPP8		= 0x0b,134,3290
	BPP16	135,3335
	BPP16		= 0x0c,135,3335
	BPP24	136,3401
	BPP24		= 0x0d,136,3401
	BPP32	137,3448
	BPP32		= 0x0e,137,3448
	PIXCTL1	138,3495
	PIXCTL1		= 0x10,138,3495
	PIXCTL2	139,3546
	PIXCTL2		= 0x11,139,3546
	SYSCLKN	140,3597
	SYSCLKN		= 0x15,140,3597
	SYSCLKM	141,3670
	SYSCLKM		= 0x16,141,3670
	SYSCLKP	142,3737
	SYSCLKP		= 0x17,142,3737
	SYSCLKC	143,3779
	SYSCLKC		= 0x18,143,3779
	PIXM0	148,3960
	PIXM0		= 0x20,148,3960
	PIXN0	149,3995
	PIXN0		= 0x21,149,3995
	PIXP0	150,4030
	PIXP0		= 0x22,150,4030
	PIXC0	151,4065
	PIXC0		= 0x23,151,4065
	CURSCTL	152,4100
	CURSCTL		= 0x30,152,4100
	CURSXLO	153,4146
	CURSXLO		= 0x31,153,4146
	CURSXHI	154,4203
	CURSXHI		= 0x32,154,4203
	CURSYLO	155,4261
	CURSYLO		= 0x33,155,4261
	CURSYHI	156,4318
	CURSYHI		= 0x34,156,4318
	CURSHOTX	157,4376
	CURSHOTX	= 0x35,157,4376
	CURSHOTY	158,4421
	CURSHOTY	= 0x36,158,4421
	CURSACCTL	159,4466
	CURSACCTL	= 0x37,159,4466
	CURSACATTR	160,4525
	CURSACATTR	= 0x38,160,4525
	CURS1R	161,4580
	CURS1R		= 0x40,161,4580
	CURS1G	162,4619
	CURS1G		= 0x41,162,4619
	CURS1B	163,4660
	CURS1B		= 0x42,163,4660
	CURS2R	164,4700
	CURS2R		= 0x43,164,4700
	CURS2G	165,4739
	CURS2G		= 0x44,165,4739
	CURS2B	166,4780
	CURS2B		= 0x45,166,4780
	CURS3R	167,4820
	CURS3R		= 0x46,167,4820
	CURS3G	168,4859
	CURS3G		= 0x47,168,4859
	CURS3B	169,4900
	CURS3B		= 0x48,169,4900
	BORDR	170,4940
	BORDR		= 0x60,170,4940
	BORDG	171,4982
	BORDG		= 0x61,171,4982
	BORDB	172,5026
	BORDB		= 0x62,172,5026
	MISCTL1	173,5069
	MISCTL1		= 0x70,173,5069
	MISCTL2	174,5124
	MISCTL2		= 0x71,174,5124
	MISCTL3	175,5179
	MISCTL3		= 0x72,175,5179
	KEYCTL	176,5234
	KEYCTL		= 0x78	176,5234
	TVPADDRW 181,5341
	TVPADDRW = 0x00,181,5341
	TVPPDATA 182,5406
	TVPPDATA = 0x04,182,5406
	TVPPMASK 183,5455
	TVPPMASK = 0x08,183,5455
	TVPPADRR 184,5498
	TVPPADRR = 0x0c,184,5498
	TVPCADRW 185,5556
	TVPCADRW = 0x10,185,5556
	TVPCDATA 186,5619
	TVPCDATA = 0x14,186,5619
	TVPCADRR 188,5695
	TVPCADRR = 0x1c,188,5695
	TVPDCCTL 190,5779
	TVPDCCTL = 0x24,190,5779
	TVPIDATA 191,5828
	TVPIDATA = 0x28,191,5828
	TVPCRDAT 192,5866
	TVPCRDAT = 0x2c,192,5866
	TVPCXPOL 193,5909
	TVPCXPOL = 0x30,193,5909
	TVPCXPOH 194,5958
	TVPCXPOH = 0x34,194,5958
	TVPCYPOL 195,6007
	TVPCYPOL = 0x38,195,6007
	TVPCYPOH 196,6056
	TVPCYPOH = 0x3c,196,6056
	TVPIRREV 201,6160
	TVPIRREV = 0x01,201,6160
	TVPIRICC 202,6206
	TVPIRICC = 0x06,202,6206
	TVPIRBRC 203,6262
	TVPIRBRC = 0x07,203,6262
	TVPIRLAC 204,6314
	TVPIRLAC = 0x0f,204,6314
	TVPIRTCC 205,6361
	TVPIRTCC = 0x18,205,6361
	TVPIRMXC 206,6413
	TVPIRMXC = 0x19,206,6413
	TVPIRCLS 207,6463
	TVPIRCLS = 0x1a,207,6463
	TVPIRPPG 208,6511
	TVPIRPPG = 0x1c,208,6511
	TVPIRGEC 209,6556
	TVPIRGEC = 0x1d,209,6556
	TVPIRMIC 210,6605
	TVPIRMIC = 0x1e,210,6605
	TVPIRPLA 211,6658
	TVPIRPLA = 0x2c,211,6658
	TVPIRPPD 212,6694
	TVPIRPPD = 0x2d,212,6694
	TVPIRMPD 213,6739
	TVPIRMPD = 0x2e,213,6739
	TVPIRLPD 214,6785
	TVPIRLPD = 0x2f,214,6785
	TVPIRCKL 215,6829
	TVPIRCKL = 0x30,215,6829
	TVPIRCKH 216,6875
	TVPIRCKH = 0x31,216,6875
	TVPIRCRL 217,6922
	TVPIRCRL = 0x32,217,6922
	TVPIRCRH 218,6964
	TVPIRCRH = 0x33,218,6964
	TVPIRCGL 219,7007
	TVPIRCGL = 0x34,219,7007
	TVPIRCGH 220,7051
	TVPIRCGH = 0x35,220,7051
	TVPIRCBL 221,7096
	TVPIRCBL = 0x36,221,7096
	TVPIRCBH 222,7139
	TVPIRCBH = 0x37,222,7139
	TVPIRCKC 223,7183
	TVPIRCKC = 0x38,223,7183
	TVPIRMLC 224,7234
	TVPIRMLC = 0x39,224,7234
	TVPIRSEN 225,7289
	TVPIRSEN = 0x3a,225,7289
	TVPIRTMD 226,7333
	TVPIRTMD = 0x3b,226,7333
	TVPIRRML 227,7372
	TVPIRRML = 0x3c,227,7372
	TVPIRRMM 228,7419
	TVPIRRMM = 0x3d,228,7419
	TVPIRRMS 229,7466
	TVPIRRMS = 0x3e,229,7466
	TVPIRDID 230,7511
	TVPIRDID = 0x3f,230,7511
	TVPIRRES 231,7559
	TVPIRRES = 0xff	231,7559
struct initvalues initvalues234,7607
static struct initvalues ibm_initregs[238,7650
static struct initvalues ibm_initregs[] __initdata 238,7650
static struct initvalues tvp_initregs[285,8659
static struct initvalues tvp_initregs[] __initdata 285,8659
struct imstt_regvals imstt_regvals318,9348
struct imstt_cursor imstt_cursor327,9630
struct fb_info_imstt fb_info_imstt336,9763
	IBM 365,10325
	TVP 366,10335
#define USE_NV_MODES	369,10348
#define INIT_BPP	370,10372
#define INIT_XRES	371,10392
#define INIT_YRES	372,10415
#define CURSOR_BLINK_RATE	373,10438
#define CURSOR_DRAW_DELAY	374,10467
static int currcon 376,10496
static char fontname[377,10520
static char fontname[40] __initdata 377,10520
static char curblink __initdata 378,10565
static char noaccel __initdata 379,10602
static signed char init_vmode __initdata 381,10662
static struct fb_info_imstt *fb_info_imstt_p[384,10758
static struct imstt_regvals tvp_reg_init_2 387,10849
static struct imstt_regvals tvp_reg_init_6 394,11042
static struct imstt_regvals tvp_reg_init_12 401,11235
static struct imstt_regvals tvp_reg_init_13 408,11425
static struct imstt_regvals tvp_reg_init_17 415,11619
static struct imstt_regvals tvp_reg_init_18 422,11814
static struct imstt_regvals tvp_reg_init_19 429,12009
static struct imstt_regvals tvp_reg_init_20 436,12204
getclkMHz 444,12412
setclkMHz 456,12638
compute_imstt_regvals_ibm 488,13194
compute_imstt_regvals_tvp 540,14358
compute_imstt_regvals 575,14956
set_imstt_regvals_ibm 584,15176
set_imstt_regvals_tvp 604,15802
set_imstt_regvals 675,17637
set_offset 765,19865
set_555 773,20110
set_565 786,20415
imstt_set_cursor 799,20713
imsttfbcon_cursor 838,21913
imsttfbcon_set_font 871,22551
imstt_cursor_timer_handler 951,25009
__initfunc(970,25383
imsttfbcon_bmove 994,25917
imsttfbcon_clear 1052,27277
imsttfbcon_revc 1088,28247
static struct display_switch fbcon_imstt8 1116,29031
static struct display_switch fbcon_imstt16 1123,29339
static struct display_switch fbcon_imstt24 1130,29652
static struct display_switch fbcon_imstt32 1137,29965
extern struct vc_mode display_info;1147,30313
extern struct fb_info *console_fb_info;1148,30349
set_display_info 1151,30402
imsttfb_getcolreg 1187,31072
imsttfb_setcolreg 1203,31510
do_install_cmap 1256,32700
imsttfb_open 1267,33006
imsttfb_release 1274,33099
imsttfb_get_fix 1281,33195
imsttfb_get_var 1295,33592
set_dispsw 1303,33729
set_disp 1384,35902
imsttfb_set_var 1429,37283
imsttfb_pan_display 1498,39232
imsttfb_get_cmap 1516,39700
imsttfb_set_cmap 1531,40173
#define FBIMSTT_SETREG	1548,40660
#define FBIMSTT_GETREG	1549,40693
#define FBIMSTT_SETCMAPREG	1550,40726
#define FBIMSTT_GETCMAPREG	1551,40762
#define FBIMSTT_SETIDXREG	1552,40798
#define FBIMSTT_GETIDXREG	1553,40833
imsttfb_ioctl 1556,40880
static struct fb_ops imsttfb_ops 1609,42634
imsttfbcon_switch 1622,42848
imsttfbcon_updatevar 1661,43895
imsttfbcon_blank 1679,44225
__initfunc(1731,45772
__initfunc(1871,50047
__initfunc(1915,51154
__initfunc(1972,52610
init_module 2028,53778
cleanup_module 2045,53962

drivers/video/skeletonfb.c,1003
struct xxxfb_info xxxfb_info33,749
struct xxxfb_par xxxfb_par51,1190
static struct xxxfb_info fb_info;66,1558
static struct xxxfb_par current_par;67,1592
static int current_par_valid 68,1629
static struct display disp;69,1663
static struct fb_var_screeninfo default_var;71,1692
static int currcon 73,1738
static int inverse 74,1762
static void xxx_detect(80,1870
static int xxx_encode_fix(94,2139
static int xxx_decode_var(106,2410
static int xxx_encode_var(127,3053
static void xxx_get_par(139,3334
static void xxx_set_par(152,3551
static int xxx_getcolreg(163,3757
static int xxx_setcolreg(177,4119
static int xxx_pan_display(213,5154
static int xxx_blank(226,5506
static void xxx_set_disp(243,6130
struct fbgen_hwswitch xxx_switch 286,7470
__initfunc(300,7763
void xxxfb_cleanup(332,8794
__initfunc(348,9042
static int xxxfb_open(361,9289
static int xxxfb_release(368,9444
static struct fb_ops xxxfb_ops 380,9708
int init_module(394,10026
void cleanup_module(400,10085

drivers/video/hpfb.c,1533
#define arraysize(arraysize30,683
static struct display disp;32,733
static struct fb_info fb_info;33,761
unsigned long fb_start,35,793
unsigned long fb_start, fb_size 35,793
unsigned long fb_regs;36,860
unsigned char fb_bitmask;37,883
#define TC_WEN	39,910
#define TC_REN	40,933
#define TC_FBEN	41,956
#define TC_NBLANK	42,980
#define BUSY	45,1025
#define WMRR	46,1046
#define SOURCE_X	47,1067
#define SOURCE_Y	48,1091
#define DEST_X	49,1115
#define DEST_Y	50,1138
#define WHEIGHT	51,1161
#define WWIDTH	52,1185
#define WMOVE	53,1208
static struct fb_var_screeninfo hpfb_defined 55,1231
struct hpfb_parhpfb_par74,1711
static int currcon 78,1733
struct hpfb_par current_par;79,1757
static void hpfb_encode_var(81,1787
static void hpfb_get_par(113,2446
static int fb_update_var(118,2517
static int do_fb_set_var(123,2589
static int hpfb_get_cmap(132,2749
static int hpfb_set_cmap(143,2983
static int hpfb_get_var(162,3488
static int hpfb_set_var(176,3721
static void hpfb_encode_fix(186,3887
static int hpfb_get_fix(205,4330
static void topcat_blit(214,4508
static int hpfb_ioctl(227,4885
static int hpfb_switch(234,5056
static void hpfb_blank(243,5237
static int hpfb_open(248,5319
static void hpfb_set_disp(257,5465
static int hpfb_release(283,6069
static struct fb_ops hpfb_ops 289,6162
#define TOPCAT_FBOMSB	301,6323
#define TOPCAT_FBOLSB	302,6350
__initfunc(304,6378
#define topcat_sid_ok(topcat_sid_ok380,8145
__initfunc(387,8340
#define INTFBADDR 399,8781
__initfunc(427,9387

drivers/video/bwtwofb.c,1410
#define BWTWO_REGISTER_OFFSET 35,888
struct bw2_regs bw2_regs37,928
#define BWTWO_SR_RES_MASK	58,1455
#define BWTWO_SR_1600_1280	59,1486
#define BWTWO_SR_1152_900_76_A	60,1518
#define BWTWO_SR_1152_900_76_B	61,1554
#define BWTWO_SR_ID_MASK	62,1590
#define BWTWO_SR_ID_MONO	63,1620
#define BWTWO_SR_ID_MONO_ECL	64,1650
#define BWTWO_SR_ID_MSYNC	65,1684
#define BWTWO_SR_ID_NOCONN	66,1715
#define BWTWO_CTL_ENABLE_INTS 69,1781
#define BWTWO_CTL_ENABLE_VIDEO 70,1818
#define BWTWO_CTL_ENABLE_TIMING 71,1855
#define BWTWO_CTL_ENABLE_CURCMP 72,1892
#define BWTWO_CTL_XTAL_MASK 73,1929
#define BWTWO_CTL_DIVISOR_MASK 74,1966
#define BWTWO_STAT_PENDING_INT 77,2036
#define BWTWO_STAT_MSENSE_MASK 78,2073
#define BWTWO_STAT_ID_MASK 79,2110
static struct sbus_mmap_map bw2_mmap_map[81,2148
static void bw2_blank 86,2257
static void bw2_unblank 91,2365
static void bw2_margins 96,2474
static u8 bw2regs_1600[101,2676
static u8 bw2regs_1600[] __initdata 101,2676
static u8 bw2regs_ecl[108,2882
static u8 bw2regs_ecl[] __initdata 108,2882
static u8 bw2regs_analog[115,3087
static u8 bw2regs_analog[] __initdata 115,3087
static u8 bw2regs_76hz[122,3295
static u8 bw2regs_76hz[] __initdata 122,3295
static u8 bw2regs_66hz[129,3501
static u8 bw2regs_66hz[] __initdata 129,3501
static char idstring[136,3707
static char idstring[60] __initdata 136,3707
char __init *bwtwofb_init(138,3753

drivers/video/cgfourteenfb.c,2506
#define CG14_MCR_INTENABLE_SHIFT	30,724
#define CG14_MCR_INTENABLE_MASK	31,759
#define CG14_MCR_VIDENABLE_SHIFT	32,797
#define CG14_MCR_VIDENABLE_MASK	33,832
#define CG14_MCR_PIXMODE_SHIFT	34,870
#define CG14_MCR_PIXMODE_MASK	35,904
#define CG14_MCR_TMR_SHIFT	36,940
#define CG14_MCR_TMR_MASK	37,970
#define CG14_MCR_TMENABLE_SHIFT	38,1002
#define CG14_MCR_TMENABLE_MASK	39,1037
#define CG14_MCR_RESET_SHIFT	40,1074
#define CG14_MCR_RESET_MASK	41,1106
#define CG14_REV_REVISION_SHIFT	42,1140
#define CG14_REV_REVISION_MASK	43,1175
#define CG14_REV_IMPL_SHIFT	44,1212
#define CG14_REV_IMPL_MASK	45,1243
#define CG14_VBR_FRAMEBASE_SHIFT	46,1276
#define CG14_VBR_FRAMEBASE_MASK	47,1312
#define CG14_VMCR1_SETUP_SHIFT	48,1356
#define CG14_VMCR1_SETUP_MASK	49,1390
#define CG14_VMCR1_VCONFIG_SHIFT	50,1432
#define CG14_VMCR1_VCONFIG_MASK	51,1467
#define CG14_VMCR2_REFRESH_SHIFT	52,1511
#define CG14_VMCR2_REFRESH_MASK	53,1546
#define CG14_VMCR2_TESTROWCNT_SHIFT	54,1590
#define CG14_VMCR2_TESTROWCNT_MASK	55,1628
#define CG14_VMCR2_FBCONFIG_SHIFT	56,1674
#define CG14_VMCR2_FBCONFIG_MASK	57,1710
#define CG14_VCR_REFRESHREQ_SHIFT	58,1754
#define CG14_VCR_REFRESHREQ_MASK	59,1790
#define CG14_VCR1_REFRESHENA_SHIFT	60,1834
#define CG14_VCR1_REFRESHENA_MASK	61,1872
#define CG14_VCA_CAD_SHIFT	62,1917
#define CG14_VCA_CAD_MASK	63,1947
#define CG14_VCA_VERS_SHIFT	64,1985
#define CG14_VCA_VERS_MASK	65,2017
#define CG14_VCA_RAMSPEED_SHIFT	66,2056
#define CG14_VCA_RAMSPEED_MASK	67,2092
#define CG14_VCA_8MB_SHIFT	68,2135
#define CG14_VCA_8MB_MASK	69,2166
#define CG14_MCR_PIXMODE_8	71,2205
#define CG14_MCR_PIXMODE_16	72,2235
#define CG14_MCR_PIXMODE_32	73,2266
struct cg14_regs{cg14_regs75,2298
#define CG14_CCR_ENABLE	110,3566
#define CG14_CCR_SELECT 111,3595
struct cg14_cursor cg14_cursor113,3646
struct cg14_dac cg14_dac127,4090
struct cg14_xlut{cg14_xlut137,4318
struct cg14_clut cg14_clut155,4970
static struct sbus_mmap_map cg14_mmap_map[162,5153
static struct sbus_mmap_map cg14_mmap_map[] __initdata 162,5153
static void cg14_loadcmap 182,5985
static void cg14_margins 193,6298
static void cg14_setcursormap 198,6494
static void cg14_setcurshape 207,6784
static void cg14_setcursor 219,7043
static void cg14_switch_from_graph 230,7355
static void cg14_reset 241,7629
static int cg14_ioctl 248,7783
__initfunc(291,8969
__initfunc(296,9062
static char idstring[301,9151
static char idstring[60] __initdata 301,9151
__initfunc(303,9197

drivers/video/cgthreefb.c,1437
#define CG3_CR_ENABLE_INTS 30,750
#define CG3_CR_ENABLE_VIDEO 31,787
#define CG3_CR_ENABLE_TIMING 32,824
#define CG3_CR_ENABLE_CURCMP 33,861
#define CG3_CR_XTAL_MASK 34,898
#define CG3_CR_DIVISOR_MASK 35,935
#define CG3_SR_PENDING_INT 38,1005
#define CG3_SR_RES_MASK 39,1042
#define CG3_SR_1152_900_76_A 40,1079
#define CG3_SR_1152_900_76_B 41,1116
#define CG3_SR_ID_MASK 42,1153
#define CG3_SR_ID_COLOR 43,1190
#define CG3_SR_ID_MONO 44,1227
#define CG3_SR_ID_MONO_ECL 45,1264
enum cg3_type cg3_type47,1302
	CG3_AT_66HZ 48,1318
	CG3_AT_76HZ,49,1336
	CG3_RDI50,1350
struct cg3_regs cg3_regs53,1363
#define CG3_REGS_OFFSET	74,1900
#define CG3_RAM_OFFSET	75,1938
static struct sbus_mmap_map cg3_mmap_map[77,1976
#define D4M3(D4M385,2242
#define D4M4(D4M486,2304
static void cg3_loadcmap 88,2367
static void cg3_blank 102,2746
static void cg3_unblank 107,2851
static void cg3_margins 112,2957
static u8 cg3regvals_66hz[117,3152
static u8 cg3regvals_66hz[] __initdata 117,3152
static u8 cg3regvals_76hz[124,3385
static u8 cg3regvals_76hz[] __initdata 124,3385
static u8 cg3regvals_rdi[131,3618
static u8 cg3regvals_rdi[] __initdata 131,3618
static u8 *cg3_regvals[138,3849
static u8 *cg3_regvals[] __initdata 138,3849
static u_char cg3_dacvals[142,3943
static u_char cg3_dacvals[] __initdata 142,3943
static char idstring[146,4029
static char idstring[60] __initdata 146,4029
__initfunc(148,4075

drivers/video/chipsfb.c,1814
static int currcon 46,1207
struct fb_info_chips fb_info_chips48,1232
#define write_ind(write_ind73,1780
#define read_ind(read_ind76,1904
#define write_xr(write_xr81,2053
#define read_xr(read_xr82,2114
#define write_fr(write_fr84,2200
#define read_fr(read_fr85,2261
#define write_cr(write_cr87,2341
#define read_cr(read_cr88,2402
#define write_gr(write_gr90,2486
#define read_gr(read_gr91,2547
#define write_sr(write_sr93,2632
#define read_sr(read_sr94,2693
#define write_ar(write_ar96,2797
#define read_ar(read_ar99,2907
static struct fb_info_chips *all_chips;103,3016
static struct notifier_block chips_sleep_notifier 107,3154
static struct fb_ops chipsfb_ops 135,4152
static int chips_open(155,4746
static int chips_release(161,4836
static int chips_get_fix(167,4929
static int chips_get_var(176,5113
static int chips_set_var(185,5297
static int chips_pan_display(206,5972
static int chips_get_cmap(214,6150
static int chips_set_cmap(228,6618
static int chips_ioctl(245,7116
static int chipsfbcon_switch(251,7264
static int chipsfb_updatevar(271,7796
static void chipsfb_blank(276,7872
static int chipsfb_getcolreg(298,8429
static int chipsfb_setcolreg(312,8863
static void do_install_cmap(339,9522
static void chips_set_bitdepth(351,9857
struct chips_init_reg chips_init_reg418,11621
#define N_ELTS(N_ELTS423,11691
static struct chips_init_reg chips_init_sr[425,11737
static struct chips_init_reg chips_init_gr[432,11857
static struct chips_init_reg chips_init_ar[438,11960
static struct chips_init_reg chips_init_cr[444,12063
static struct chips_init_reg chips_init_fr[475,12591
static struct chips_init_reg chips_init_xr[503,13122
__initfunc(528,13606
__initfunc(547,14361
__initfunc(648,17454
__initfunc(659,17635
chips_sleep_notify(707,18943

drivers/video/clgenfb.c,2385
#define CLGEN_VERSION 30,607
#define DEBUG 32,663
#define arraysize(arraysize34,684
#define BT_NONE 37,752
#define BT_SD64 38,774
#define BT_PICCOLO 39,796
#define BT_PICASSO 40,818
#define BT_SPECTRUM 41,840
#define BT_PICASSO4 42,862
#define MAX_NUM_BOARDS 44,885
#define TRUE 46,911
#define FALSE 47,927
struct clgenfb_parclgenfb_par49,945
struct clgenfb_infoclgenfb_info80,1558
static struct display disp;111,2155
static struct clgenfb_info boards[113,2184
static struct clgenfb_info *fb_info=114,2253
static struct fb_videomode clgenfb_predefined[120,2365
static struct fb_videomode clgenfb_predefined[] __initdata 120,2365
#define NUM_TOTAL_MODES 151,3195
static struct fb_var_screeninfo clgenfb_default;152,3252
static char clgenfb_name[158,3334
static struct fb_ops clgenfb_ops 173,3969
static struct fbgen_hwswitch clgen_hwswitch 211,5453
static struct display_switch fbcon_clgen_8 234,6014
static int opencount 292,8139
int clgenfb_open(295,8246
int clgenfb_release(303,8462
int clgenfb_ioctl(311,8680
static void clgen_detect(325,9208
static int clgen_encode_fix(331,9310
static int clgen_decode_var(360,10206
static int clgen_encode_var(577,16880
static void clgen_get_par(585,17081
static void clgen_set_par(598,17543
static int clgen_getcolreg(986,30072
static int clgen_setcolreg(1006,30568
static int clgen_pan_display(1026,31146
static int clgen_blank(1087,32852
static void init_vgachip(1108,33486
static void switch_monitor(1348,41456
static void clgen_set_disp(1375,42179
static void fbcon_clgen8_bmove(1426,43309
static void fbcon_clgen8_clear(1445,43854
__initfunc(1470,44613
void clgenfb_cleanup(1615,49506
static char *strtoke(1634,49936
__initfunc(1658,50596
int init_module(1671,50793
void cleanup_module(1678,50885
void WGen(1695,51509
unsigned char RGen(1711,51893
void WSeq(1727,52260
unsigned char RSeq(1734,52440
void WCrt(1741,52613
unsigned char RCrt(1748,52796
void WGfx(1755,52967
unsigned char RGfx(1762,53148
void WAttr(1769,53324
void AttrOn(1787,54039
unsigned char RAttr(1803,54489
void WHDR(1820,55017
unsigned char RHDR(1856,55977
void WSFR(1870,56203
void WSFR2(1877,56367
void WClut(1886,56616
void RClut(1911,57255
void clgen_WaitBLT(1940,57971
void clgen_BitBLT 1953,58256
void clgen_RectFill 2045,60653
#define abs(abs2101,62494
static void bestclock(2102,62530

drivers/video/controlfb.c,2014
struct fb_par_control fb_par_control60,1657
#define DIRTY(DIRTY67,1763
static inline int PAR_EQUAL(68,1799
static inline int VAR_MATCH(74,2033
struct fb_info_control fb_info_control81,2242
static int currcon 143,4435
static int par_set 144,4459
static char fontname[145,4483
static char fontname[40] __initdata 145,4483
static int default_vmode 146,4528
static int default_cmode 147,4568
static struct fb_ops controlfb_ops 172,5565
static int control_open(194,5955
static int control_release(200,6047
int init_module(207,6156
void cleanup_module(220,6351
static int control_get_fix(227,6455
static int control_get_var(245,6897
static int control_set_var(262,7331
static int control_pan_display(308,8541
static int control_get_cmap(323,9022
static int control_set_cmap(337,9493
static int control_ioctl(355,9945
static int controlfb_switch(365,10203
static int controlfb_updatevar(387,10794
static void controlfb_blank(400,11141
static int controlfb_getcolreg(432,12224
static int controlfb_setcolreg(446,12664
static void do_install_cmap(486,13590
extern struct vc_mode display_info;501,13973
extern struct fb_info *console_fb_info;502,14009
static inline int control_vram_reqd(505,14086
static void set_control_clock(512,14323
__initfunc(526,14580
#define STORE_D2(STORE_D2576,16159
static void control_set_hardware(582,16370
__initfunc(663,18701
__initfunc(674,18883
static int read_control_sense(734,20776
static int control_var_to_par(764,21914
static int control_var_to_par(861,25019
static void control_par_to_var(887,25859
static void control_par_to_fix(996,29312
static void control_par_to_display(1025,30211
static void control_cfb16_revc(1051,31039
static void control_cfb32_revc(1074,31793
static struct display_switch control_cfb16 1102,32885
static struct display_switch control_cfb32 1108,33155
static void control_set_dispsw(1115,33426
static void control_init_info(1141,33952
__initfunc(1155,34392
static int controlfb_pan_display(1204,35418

drivers/video/macmodes.c,1302
struct mac_mode mac_mode17,394
static const struct mac_mode mac_mode_1 36,683
static const struct mac_mode mac_mode_2 46,903
static const struct mac_mode mac_mode_3 56,1127
static const struct mac_mode mac_mode_4 66,1350
static const struct mac_mode mac_mode_5 75,1587
static const struct mac_mode mac_mode_6 83,1792
static const struct mac_mode mac_mode_7 92,1993
static const struct mac_mode mac_mode_8 102,2229
static const struct mac_mode mac_mode_9 111,2465
static const struct mac_mode mac_mode_10 119,2713
static const struct mac_mode mac_mode_11 127,2962
static const struct mac_mode mac_mode_12 135,3212
static const struct mac_mode mac_mode_13 143,3449
static const struct mac_mode mac_mode_14 151,3658
static const struct mac_mode mac_mode_15 159,3870
static const struct mac_mode mac_mode_16 167,4082
static const struct mac_mode mac_mode_17 175,4335
static const struct mac_mode mac_mode_18 183,4587
static const struct mac_mode mac_mode_19 191,4841
static const struct mac_mode mac_mode_20 199,5054
static const struct mac_mode *mac_modes[206,5245
static const struct mac_mode *mac_modes_inv[229,6125
static struct mon_map mon_map247,6741
} monitor_map[250,6795
int mac_vmode_to_var(278,7994
int mac_var_to_vmode(348,9683
int mac_map_monitor_sense(383,10538

drivers/video/platinumfb.c,1423
static char fontname[52,1344
static char fontname[40] __initdata 52,1344
static int currcon 54,1390
static int default_vmode 56,1415
static int default_cmode 57,1455
struct fb_par_platinum fb_par_platinum59,1496
struct fb_info_platinum fb_info_platinum66,1603
static struct fb_ops platinumfb_ops 166,4646
static int platinum_open(182,4879
static int platinum_release(188,4972
static int platinum_get_fix(194,5068
static int platinum_get_var(209,5425
static int platinum_set_var(222,5714
static int platinum_pan_display(308,8021
static int platinum_get_cmap(322,8402
static int platinum_set_cmap(336,8877
static int platinum_ioctl(354,9328
static int platinum_switch(361,9533
static int platinum_updatevar(378,9947
static void platinum_blank(384,10086
static int platinum_getcolreg(414,11087
static int platinum_setcolreg(429,11547
static void do_install_cmap(465,12535
static inline int platinum_vram_reqd(479,12886
#define STORE_D2(STORE_D2485,13076
static void set_platinum_clock(490,13173
static void platinum_set_par(517,13887
__initfunc(584,16197
__initfunc(654,18285
#define invalidate_cache(invalidate_cache666,18489
#define invalidate_cache(invalidate_cache670,18607
__initfunc(673,18646
static int read_platinum_sense(761,21298
static int platinum_var_to_par(788,22274
static int platinum_par_to_var(824,23681
static int platinum_encode_fix(831,23895
__initfunc(857,24669

drivers/video/platinumfb.h,1611
struct cmap_regs cmap_regs25,761
struct preg preg39,1001
struct platinum_regs platinum_regs44,1103
struct platinum_regvals platinum_regvals59,1600
#define DIV2	69,1797
#define DIV4	70,1815
#define DIV8	71,1833
#define DIV16	72,1851
static struct platinum_regvals platinum_reg_init_20 75,1898
static struct platinum_regvals platinum_reg_init_19 87,2256
static struct platinum_regvals platinum_reg_init_18 99,2614
static struct platinum_regvals platinum_reg_init_17 111,2978
static struct platinum_regvals platinum_reg_init_16 123,3343
static struct platinum_regvals platinum_reg_init_15 135,3707
static struct platinum_regvals platinum_reg_init_14 147,4077
static struct platinum_regvals platinum_reg_init_13 159,4453
static struct platinum_regvals platinum_reg_init_12 171,4878
static struct platinum_regvals platinum_reg_init_11 183,5248
static struct platinum_regvals platinum_reg_init_10 195,5621
static struct platinum_regvals platinum_reg_init_9 207,6033
static struct platinum_regvals platinum_reg_init_8 219,6417
static struct platinum_regvals platinum_reg_init_7 231,6792
static struct platinum_regvals platinum_reg_init_6 243,7157
static struct platinum_regvals platinum_reg_init_5 255,7523
static struct platinum_regvals platinum_reg_init_4 267,7905
static struct platinum_regvals platinum_reg_init_3 279,8287
static struct platinum_regvals platinum_reg_init_2 291,8653
static struct platinum_regvals platinum_reg_init_1 303,9036
static struct platinum_regvals *platinum_reg_init[314,9379
struct vmode_attr vmode_attr337,9918
struct vmode_attr vmode_attrs[344,9993

drivers/video/valkyriefb.c,1656
static int can_soft_blank 71,2029
static int default_vmode 73,2061
static int default_cmode 74,2101
static char fontname[75,2141
static char fontname[40] __initdata 75,2141
static int currcon 77,2187
static int switching 78,2211
struct fb_par_valkyrie fb_par_valkyrie80,2238
struct fb_info_valkyrie fb_info_valkyrie87,2345
static struct fb_ops valkyriefb_ops 153,4865
static int valkyrie_open(175,5415
static int valkyrie_release(181,5508
static int valkyrie_get_fix(187,5604
static int valkyrie_get_var(196,5797
static int valkyrie_set_var(206,6029
#define DIRTY(DIRTY230,6754
static int valkyrie_pan_display(261,7622
static int valkyrie_get_cmap(269,7803
static int valkyrie_set_cmap(286,8286
static int valkyrie_ioctl(307,8762
static int valkyriefb_switch(313,8913
static int valkyriefb_updatevar(338,9664
static void valkyriefb_blank(343,9743
static int valkyriefb_getcolreg(385,11084
static int valkyriefb_setcolreg(399,11514
static void do_install_cmap(432,12284
extern struct vc_mode display_info;448,12674
extern struct fb_info *console_fb_info;449,12710
static int valkyrie_vram_reqd(452,12787
static void set_valkyrie_clock(461,13052
__initfunc(474,13309
static void valkyrie_set_par(540,15286
__initfunc(587,16738
__initfunc(598,16925
static int read_valkyrie_sense(632,17766
static int valkyrie_var_to_par(660,18704
static int valkyrie_par_to_var(758,22303
static void valkyrie_init_fix(763,22454
static void valkyrie_par_to_fix(779,22866
static void valkyrie_init_display(795,23339
static void valkyrie_par_to_display(803,23562
static void __init valkyrie_init_info(833,24512
__initfunc(851,25004

drivers/video/valkyriefb.h,711
struct cmap_regs cmap_regs40,1329
struct vpreg vpreg50,1482
struct valkyrie_regs valkyrie_regs56,1558
struct valkyrie_regvals valkyrie_regvals73,1916
static struct valkyrie_regvals valkyrie_reg_init_17 91,2501
static struct valkyrie_regvals valkyrie_reg_init_15 107,3153
static struct valkyrie_regvals valkyrie_reg_init_14 118,3481
static struct valkyrie_regvals valkyrie_reg_init_13 126,3690
static struct valkyrie_regvals valkyrie_reg_init_11 134,3896
static struct valkyrie_regvals valkyrie_reg_init_10 142,4103
static struct valkyrie_regvals valkyrie_reg_init_6 150,4312
static struct valkyrie_regvals valkyrie_reg_init_5 158,4519
static struct valkyrie_regvals *valkyrie_reg_init[165,4678

drivers/video/virgefb.c,4510
#define DPRINTK(DPRINTK44,1027
#define DPRINTK(DPRINTK46,1117
#define arraysize(arraysize49,1155
#define vgawb_3d(vgawb_3d52,1211
#define vgaww_3d(vgaww_3d62,1578
#define vgawl_3d(vgawl_3d64,1685
#define vgawb_3d(vgawb_3d71,1901
#define vgaww_3d(vgaww_3d73,2000
#define vgawl_3d(vgawl_3d75,2099
#define wb_3d(wb_3d82,2293
#define ww_3d(ww_3d84,2389
#define wl_3d(wl_3d86,2485
#define rl_3d(rl_3d89,2582
struct virgefb_par virgefb_par92,2669
static struct virgefb_par current_par;99,2746
static int current_par_valid 101,2786
static int currcon 102,2820
static struct display disp;104,2845
static struct fb_info fb_info;105,2873
} fbcon_cmap;111,2969
static struct fb_hwswitch fb_hwswitch117,3030
} *fbhw;133,3652
static int blit_maybe_busy 135,3662
static char virgefb_name[141,3727
#define VIRGE8_WIDTH 148,3819
#define VIRGE8_HEIGHT 149,3845
#define VIRGE8_PIXCLOCK 150,3871
#define VIRGE16_WIDTH 153,3939
#define VIRGE16_HEIGHT 154,3965
#define VIRGE16_PIXCLOCK 156,3999
static unsigned int CyberKey 159,4062
static unsigned char Cyber_colour_table 160,4096
static unsigned long CyberMem;161,4146
static unsigned long CyberSize;162,4177
static volatile char *CyberRegs;163,4209
static volatile unsigned long CyberVGARegs;164,4242
static unsigned long CyberMem_phys;165,4342
static unsigned long CyberRegs_phys;166,4378
static unsigned long Cyber_register_base;167,4415
static unsigned long Cyber_vcode_switch_base;168,4457
static unsigned char cv3d_on_zorro2;169,4503
#define CYBMEM_OFFSET_8 171,4542
#define CYBMEM_OFFSET_16 172,4613
static struct fb_videomode virgefb_predefined[178,4719
static struct fb_videomode virgefb_predefined[] __initdata 178,4719
#define NUM_TOTAL_MODES 267,8310
static int Cyberfb_inverse 270,8369
static int Cyberfb_Cyber8 272,8407
static int Cyberfb_Cyber16 273,8473
#define VIRGE8_DEFMODE 280,8580
#define VIRGE16_DEFMODE 281,8611
static struct fb_var_screeninfo virgefb_default;283,8643
static struct display_switch fbcon_virge8;325,9943
static struct display_switch fbcon_virge16;329,10017
static int Cyber_init(372,11425
static int Cyber_encode_fix(427,12663
static int Cyber_decode_var(469,13675
static int Cyber_encode_var(500,14293
static int Cyber_setcolreg(574,15966
static int Cyber_getcolreg(614,16994
void Cyber_blank(640,17545
#define Cyber3D_WaitQueue(Cyber3D_WaitQueue670,18008
static inline void Cyber3D_WaitBusy(672,18112
#define S3V_BITBLT	683,18278
#define S3V_RECTFILL	684,18309
#define S3V_AUTOEXE	685,18342
#define S3V_HWCLIP	686,18367
#define S3V_DRAW	687,18391
#define S3V_DST_8BPP	688,18413
#define S3V_DST_16BPP	689,18439
#define S3V_DST_24BPP	690,18466
#define S3V_MONO_PAT	691,18493
#define S3V_BLT_COPY	693,18521
#define S3V_BLT_CLEAR	694,18553
#define S3V_BLT_SET	695,18586
static void Cyber3D_BitBLT(701,18659
static void Cyber3D_RectFill(750,19644
static void Cyber_MoveCursor 776,20255
static struct fb_hwswitch Cyber_switch 786,20454
static void virgefb_get_par(799,20750
static void virgefb_set_par(812,20916
static void virge_set_video(819,21020
static int do_fb_set_var(832,21283
static void do_install_cmap(850,21678
static int virgefb_open(866,22028
static int virgefb_release(876,22178
static int virgefb_get_fix(887,22323
static int virgefb_get_var(905,22678
static void virgefb_set_disp(926,23040
static int virgefb_set_var(988,24499
static int virgefb_get_cmap(1023,25505
static int virgefb_set_cmap(1041,25983
static int virgefb_pan_display(1065,26581
static int virgefb_ioctl(1076,26761
static struct fb_ops virgefb_ops 1083,26908
__initfunc(1090,27106
__initfunc(1124,28020
static int Cyberfb_switch(1203,30331
static int Cyberfb_updatevar(1225,30882
static void Cyberfb_blank(1235,30993
__initfunc(1245,31110
static void fbcon_virge8_bmove(1266,31516
static void fbcon_virge8_clear(1275,31877
static void fbcon_virge8_putc(1287,32275
static void fbcon_virge8_putcs(1295,32486
static void fbcon_virge8_revc(1303,32727
static void fbcon_virge8_clear_margins(1310,32870
static struct display_switch fbcon_virge8 1318,33095
static void fbcon_virge16_bmove(1326,33394
static void fbcon_virge16_clear(1335,33796
static void fbcon_virge16_putc(1347,34240
static void fbcon_virge16_putcs(1355,34453
static void fbcon_virge16_revc(1363,34696
static void fbcon_virge16_clear_margins(1370,34841
static struct display_switch fbcon_virge16 1378,35068
int init_module(1386,35366
void cleanup_module(1392,35421

drivers/video/acornfb.c,781
#define MAX_VIDC20_PALETTE	29,579
#define MAX_VIDC_PALETTE	30,610
struct acornfb_par acornfb_par32,639
static int currcon 63,1238
static struct display disp;64,1262
static struct fb_info fb_info;65,1290
static struct acornfb_par current_par;66,1321
acornfb_open(69,1372
acornfb_release(76,1464
acornfb_encode_var(83,1560
acornfb_get_fix(121,2476
acornfb_get_var(146,3124
acornfb_set_var(156,3326
acornfb_set_disp(162,3432
acornfb_vidc20_getcolreg(229,4851
acornfb_vidc20_setcolreg(248,5347
acornfb_get_cmap(268,5865
acornfb_set_cmap(284,6266
acornfb_pan_display(304,6695
acornfb_ioctl(314,6870
static struct fb_ops acornfb_ops 320,7024
acornfb_setup(333,7232
acornfb_update_var(338,7288
acornfb_switch(355,7640
acornfb_blank(363,7762
__initfunc(367,7814

drivers/video/mdacon.c,2564
static unsigned long	mda_vram_base;48,1210
static unsigned long	mda_vram_len;49,1274
static unsigned int	mda_num_columns;50,1337
static unsigned int	mda_num_lines;51,1403
static unsigned int	mda_index_port;53,1467
static unsigned int	mda_value_port;54,1531
static unsigned int	mda_mode_port;55,1594
static unsigned int	mda_status_port;56,1654
static unsigned int	mda_gfx_port;57,1720
static int	mda_origin_loc=61,1814
static int	mda_cursor_loc=62,1844
static int	mda_cursor_size_from=63,1874
static int	mda_cursor_size_to=64,1910
static enum { TYPE_MDA,66,1945
static enum { TYPE_MDA, TYPE_HERC,66,1945
static enum { TYPE_MDA, TYPE_HERC, TYPE_HERCPLUS,66,1945
static enum { TYPE_MDA, TYPE_HERC, TYPE_HERCPLUS, TYPE_HERCCOLOR 66,1945
static enum { TYPE_MDA, TYPE_HERC, TYPE_HERCPLUS, TYPE_HERCCOLOR } mda_type;66,1945
static char *mda_type_name;67,2022
static int	mda_first_vc 71,2078
static int	mda_last_vc 72,2108
static struct vc_data	*mda_display_fg 74,2139
#define MDA_CURSOR_BLINKING	85,2316
#define MDA_CURSOR_OFF	86,2349
#define MDA_CURSOR_SLOWBLINK	87,2378
#define MDA_MODE_GRAPHICS	89,2413
#define MDA_MODE_VIDEO_EN	90,2444
#define MDA_MODE_BLINK_EN	91,2475
#define MDA_MODE_GFX_PAGE1	92,2506
#define MDA_STATUS_HSYNC	94,2539
#define MDA_STATUS_VSYNC	95,2569
#define MDA_STATUS_VIDEO	96,2599
#define MDA_CONFIG_COL132	98,2630
#define MDA_GFX_MODE_EN	99,2661
#define MDA_GFX_PAGE_EN	100,2691
static void write_mda_b(107,2793
static void write_mda_w(119,2995
static int test_mda_b(131,3272
static inline void mda_set_origin(147,3539
static inline void mda_set_cursor(157,3709
static inline void mda_set_cursor_size(167,3880
__initfunc(185,4267
static int mda_detect(202,4587
static void mda_initialize(284,6365
static const char *mdacon_startup(313,7283
static void mdacon_init(348,7934
static void mdacon_deinit(368,8356
static inline u16 mda_convert_attr(378,8521
static u8 mdacon_build_attr(395,8958
static void mdacon_invert_region(412,9335
#define MDA_ADDR(MDA_ADDR419,9486
static void mdacon_putc(421,9562
static void mdacon_putcs(426,9683
static void mdacon_clear(436,9912
static void mdacon_bmove(453,10344
static int mdacon_switch(485,11080
static int mdacon_set_palette(490,11163
static int mdacon_blank(495,11256
static int mdacon_font_op(506,11470
static int mdacon_scrolldelta(511,11565
static void mdacon_cursor(516,11641
static int mdacon_scroll(536,12209
struct consw mda_con 570,12910
void mda_console_init(592,13584
int init_module(605,13789
void cleanup_module(612,13849

drivers/video/font_sun8x16.c,118
#define FONTDATAMAX 3,25
static unsigned char fontdata_sun8x16[5,51
struct fbcon_font_desc font_sun_8x16 264,22382

drivers/video/controlfb.h,1058
struct cmap_regs cmap_regs23,683
#define PAD(PAD37,921
struct preg preg39,948
struct control_regs control_regs44,1018
struct control_regints control_regints76,2151
struct control_regvals control_regvals109,3295
static struct control_regvals control_reg_init_20 120,3604
static struct control_regvals control_reg_init_19 131,3926
static struct control_regvals control_reg_init_18 142,4250
static struct control_regvals control_reg_init_17 153,4576
static struct control_regvals control_reg_init_15 164,4905
static struct control_regvals control_reg_init_14 175,5232
static struct control_regvals control_reg_init_13 186,5558
static struct control_regvals control_reg_init_12 196,5880
static struct control_regvals control_reg_init_11 206,6202
static struct control_regvals control_reg_init_10 216,6524
static struct control_regvals control_reg_init_7 226,6858
static struct control_regvals control_reg_init_6 236,7202
static struct control_regvals control_reg_init_5 246,7514
static struct control_regvals *control_reg_init[255,7784

drivers/video/fbmem.c,1075
} fb_drivers[101,3087
} fb_drivers[] __initdata 101,3087
#define NUM_FB_DRIVERS	187,5120
static void (*pref_init_funcs[189,5185
static int num_pref_init_funcs __initdata 190,5231
#define GET_INODE(GET_INODE193,5280
#define GET_FB_VAR_IDX(GET_FB_VAR_IDX194,5340
struct fb_info *registered_fb[196,5413
int num_registered_fb 197,5452
int fbcon_softback_size 198,5479
char con2fb_map[200,5513
static int first_fb_vc 202,5548
static int last_fb_vc 203,5576
static int fbcon_is_default 204,5619
static inline int PROC_CONSOLE(206,5653
static int fbmem_read_proc(221,5957
fb_read(237,6372
fb_write(261,7024
static int set_all_vcs(285,7678
static void set_con2fb_map(301,8145
static void try_to_load(342,9598
fb_ioctl(352,9749
fb_mmap(439,12480
fb_open(507,14520
fb_release(522,14845
static struct file_operations fb_fops 531,15033
register_framebuffer(546,15327
unregister_framebuffer(580,16020
static struct proc_dir_entry *proc_fbmem;595,16306
__initfunc(597,16349
int fbmon_valid_timings(621,16825
int fbmon_dpms(647,17524
__initfunc(657,17656

drivers/video/iga.h,434
#define _IGA1682_H 8,171
struct iga1682_infoiga1682_info10,193
#define DAC_W_INDEX 15,248
#define DAC_DATA 16,295
#define IGA_EXT_CNTRL 17,342
#define   IGA_IDX_EXT_BUS_CNTL 18,388
#define     MEM_SIZE_ALIAS 19,433
#define     MEM_SIZE_1M 20,477
#define     MEM_SIZE_2M 21,521
#define     MEM_SIZE_4M 22,565
#define     MEM_SIZE_RESERVED 23,609
#define   IGA_IDX_OVERSCAN_COLOR 24,653
#define   IGA_IDX_EXT_MEM_2 25,698

drivers/video/font_acorn_8x8.c,91
static unsigned char acorndata_8x8[7,115
struct fbcon_font_desc font_acorn_8x8 266,15866

drivers/video/igafb.c,1359
static char igafb_name[67,1938
static char fontname[68,1979
static char fontname[40] __initdata 68,1979
struct pci_mmap_map pci_mmap_map70,2025
struct fb_info_iga fb_info_iga78,2181
struct fb_var_screeninfo default_var 110,2851
struct fb_var_screeninfo default_var_1024x768 __initdata 119,3141
struct fb_var_screeninfo default_var_1152x900 __initdata 127,3477
struct fb_var_screeninfo default_var_1280x1024 __initdata 135,3813
static inline unsigned char pci_inb 146,4209
static inline void pci_outb 151,4362
static inline unsigned int iga_inb(156,4519
static inline void iga_outb(162,4701
static void iga_blank_border(175,5047
static int igafb_open(192,5317
static int igafb_release(201,5499
static int igafb_update_var(207,5607
static int igafb_get_fix(212,5689
static int igafb_get_var(234,6419
static int igafb_set_var(244,6710
static int igafb_mmap(252,6931
static int iga_getcolreg(325,8643
static int iga_setcolreg(345,9246
static void do_install_cmap(394,10566
static int igafb_get_cmap(408,11026
static int igafb_set_cmap(423,11632
static int igafb_pan_display(442,12303
static int igafb_ioctl(449,12477
static struct fb_ops igafb_ops 458,12664
static void igafb_set_disp(475,12936
static int igafb_switch(536,14656
static void igafb_blank(556,15214
__initfunc(562,15305
__initfunc(627,17220
__initfunc(760,21463

drivers/video/font_sun12x22.c,122
#define FONTDATAMAX 3,25
static unsigned char fontdata_sun12x22[5,52
struct fbcon_font_desc font_sun_12x22 6209,186351

drivers/video/clgenfb.h,3488
#define POS102	7,210
#define VSSM	8,255
#define VSSM2	9,296
#define MISC_W	10,340
#define MISC_R	11,404
#define FC_W	12,467
#define FC_R	13,532
#define FEAT	14,588
#define STAT	15,637
#define M_3C6	16,697
#define M_3C7_W	17,734
#define M_3C7_R	18,796
#define M_3C8	19,845
#define M_3C9	20,896
#define SEQRX	23,968
#define SEQR0	24,1010
#define SEQR1 25,1040
#define SEQR2	26,1082
#define SEQR3	27,1141
#define SEQR4	28,1186
#define SEQR6	30,1283
#define SEQR7	31,1329
#define SEQR8	32,1377
#define SEQR9	33,1416
#define SEQRA	34,1471
#define SEQRB	35,1526
#define SEQRC	36,1566
#define SEQRD	37,1606
#define SEQRE	38,1646
#define SEQRF	39,1686
#define SEQR10	40,1723
#define SEQR11	41,1776
#define SEQR12	42,1829
#define SEQR13	43,1882
#define SEQR14	44,1947
#define SEQR15	45,2025
#define SEQR16	46,2103
#define SEQR17	47,2173
#define SEQR18	48,2260
#define SEQR19	49,2330
#define SEQR1A	50,2408
#define SEQR1B	51,2487
#define SEQR1C	52,2553
#define SEQR1D	53,2619
#define SEQR1E	54,2685
#define SEQR1F	55,2751
#define CRTX	58,2851
#define	CRT0	59,2887
#define CRT1	60,2927
#define CRT2	61,2973
#define CRT3	62,3022
#define CRT4	63,3069
#define CRT5	64,3114
#define CRT6 65,3157
#define CRT7	66,3196
#define CRT8	67,3228
#define CRT9	68,3276
#define CRTA	69,3321
#define CRTB	70,3362
#define CRTC	71,3401
#define CRTD	72,3450
#define CRTE	73,3498
#define CRTF	74,3547
#define CRT10	75,3595
#define CRT11	76,3640
#define CRT12	77,3683
#define CRT13	78,3729
#define CRT14	79,3761
#define CRT15 80,3805
#define CRT16	81,3856
#define CRT17	82,3903
#define CRT18	83,3941
#define CRT22	84,3979
#define CRT24	85,4035
#define CRT26	86,4097
#define CRT19	88,4219
#define CRT1A	89,4258
#define CRT1B	90,4301
#define CRT1C	91,4352
#define CRT1D	92,4410
#define CRT25	93,4469
#define CRT27	94,4515
#define CRT51	95,4552
#define GRX	98,4645
#define GR0	99,4695
#define GR1	100,4762
#define GR2	101,4834
#define GR3	102,4870
#define GR4	103,4904
#define GR5	104,4942
#define GR6	105,4969
#define GR7	106,5005
#define GR8	107,5048
#define GR9	109,5140
#define GRA	110,5180
#define GRB	111,5220
#define GRC	112,5278
#define GRD	113,5335
#define GRE	114,5397
#define GRF	115,5458
#define GR10	116,5517
#define GR11	117,5589
#define GR12	118,5661
#define GR13	119,5718
#define GR14	120,5775
#define GR15	121,5832
#define GR20	123,5954
#define GR21	124,5992
#define GR22	125,6031
#define GR23	126,6070
#define GR24	127,6110
#define GR25	128,6160
#define GR26	129,6211
#define GR27	130,6256
#define GR28	131,6302
#define GR29	132,6352
#define GR2A 133,6402
#define GR2C	134,6456
#define GR2D	135,6501
#define GR2E	136,6546
#define GR2F	137,6592
#define GR30	138,6650
#define GR31	139,6683
#define GR32	140,6724
#define GR33	141,6769
#define GR34	142,6824
#define GR35	143,6877
#define GR38	144,6931
#define GR39	145,6989
#define ARX	148,7090
#define AR0 149,7141
#define AR1 150,7207
#define AR2 151,7273
#define AR3 152,7339
#define AR4 153,7405
#define AR5 154,7471
#define AR6 155,7537
#define AR7 156,7603
#define AR8 157,7669
#define AR9 158,7735
#define ARA 159,7801
#define ARB 160,7868
#define ARC 161,7935
#define ARD 162,8002
#define ARE 163,8069
#define ARF 164,8136
#define AR10	165,8203
#define AR11	166,8262
#define AR12	167,8319
#define AR13	168,8374
#define AR14	169,8421
#define AR33	170,8467
#define AR34	171,8529
#define HDR	174,8591

drivers/video/font_6x11.c,119
#define FONTDATAMAX 9,271
static unsigned char fontdata_6x11[11,301
struct fbcon_font_desc font_vga_6x11 3344,67994

drivers/video/font_pearl_8x8.c,125
#define FONTDATAMAX 14,516
static unsigned char fontdata_pearl8x8[16,542
struct fbcon_font_desc font_pearl_8x8 2580,55565

drivers/video/pm2fb.c,3315
#define PM2FB_MASTER_DEBUG51,1632
#define DPRINTK(DPRINTK53,1685
#define DPRINTK(DPRINTK55,1760
#define PICOS2KHZ(PICOS2KHZ58,1793
#define KHZ2PICOS(KHZ2PICOS59,1833
#define MMAP(MMAP65,2001
#define UNMAP(UNMAP66,2051
#define DEFW(DEFW72,2203
#define DEFR(DEFR73,2225
#define DEFRW(DEFRW74,2247
#define MIN(MIN77,2282
#define MAX(MAX81,2337
struct pm2fb_par pm2fb_par84,2380
#define OPTF_OLD_MEM	102,3042
#define OPTF_YPAN	103,3072
#define OPTF_VIRTUAL	104,3099
} pm2fb_options 109,3202
} user_mode[115,3347
} user_mode[] __initdata 115,3347
struct pm2pci_par pm2pci_par180,5641
static const char permedia2_name[188,5748
static struct pm2fb_info pm2fb_info190,5799
} fb_info;236,7099
} board_table[267,8166
#define PACKPP(PACKPP280,8460
} pp_table[284,8555
static struct fbgen_hwswitch pm2fb_hwswitch=324,10468
static struct fb_ops pm2fb_ops=334,10815
inline static u32 RD32(344,11219
inline static void WR32(349,11303
inline static u32 pm2_RD(354,11392
inline static void pm2_WR(359,11492
inline static u32 pm2_RDAC_RD(364,11596
inline static void pm2_RDAC_WR(371,11762
#define WAIT_FIFO(WAIT_FIFO380,11974
inline static void WAIT_FIFO(382,12003
static u32 partprod(389,12125
static u32 to3264(398,12320
static u32 from3264(418,12616
static void mnp(438,12914
static void wait_pm2(466,13393
static void set_memclock(477,13613
static void set_pixclock(496,14110
static void clear_palette(515,14606
static void set_color(529,14896
static void set_aperture(542,15227
static void set_screen(567,15748
static void pm2fb_pp_copy(625,17440
static void pm2fb_block_op(653,18300
static void pm2fb_reset(683,19213
__initfunc(744,21297
static int cvppc_PCI_init(772,22169
static int cvppc_detect(808,23278
static void cvppc_init(819,23576
static int pm2pci_detect(836,23974
static void pm2pci_init(907,26044
static int pm2fb_blank(923,26525
static int pm2fb_pan_display(955,27246
static void pm2fb_pp_bmove(968,27631
static void pm2fb_bmove(988,28097
static void pm2fb_clear8(1009,28589
static void pm2fb_clear_margins8(1024,28952
static struct display_switch pm2_cfb8 1042,29434
static void pm2fb_clear16(1051,29756
static void pm2fb_clear_margins16(1065,30135
static struct display_switch pm2_cfb16 1082,30635
static void pm2fb_clear24(1094,31028
static void pm2fb_clear_margins24(1115,31606
static struct display_switch pm2_cfb24 1140,32283
static void pm2fb_clear32(1149,32610
static void pm2fb_clear_margins32(1162,32978
static struct display_switch pm2_cfb32 1178,33467
static void pm2fb_detect(1190,33952
static int pm2fb_encode_fix(1192,33987
static void pm2fb_display_var(1216,34741
#define pm2fb_decode_var 1246,35936
static int pm2fb_decode_var(1249,35994
static int pm2fb_decode_var(1333,38514
static int pm2fb_encode_var(1343,38737
static void set_user_mode(1418,40783
static void pm2fb_get_par(1431,41203
static void pm2fb_set_par(1443,41497
static int pm2fb_getcolreg(1461,41937
static int pm2fb_setcolreg(1475,42408
static void pm2fb_set_disp(1528,43644
static int pm2fb_open(1568,44437
static int pm2fb_release(1574,44528
void pm2fb_cleanup(1584,44807
__initfunc(1594,45047
__initfunc(1627,46171
__initfunc(1637,46433
__initfunc(1643,46611
int init_module(1668,47352
void cleanup_module(1673,47395

drivers/video/matroxfb.c,29285
#define FBCON_HAS_VGATEXT124,3703
#define DEBUG128,3753
#define DBG(DBG129,3767
#define DBG_HEAVY(DBG_HEAVY132,3843
#define DBG_HEAVY(DBG_HEAVY134,3904
#define DBG_LOOP(DBG_LOOP138,4003
#define DBG_LOOP(DBG_LOOP140,4062
#define DBG_REG(DBG_REG144,4157
#define DBG_REG(DBG_REG146,4214
#define DBG(DBG151,4308
#define DBG_HEAVY(DBG_HEAVY152,4334
#define DBG_REG(DBG_REG153,4371
#define DBG_LOOP(DBG_LOOP154,4404
#define ioremap_nocache(ioremap_nocache160,4510
#define READx_WORKS165,4612
#define MEMCPYTOIO_WORKS166,4632
#define READx_FAILS168,4663
#define MEMCPYTOIO_MEMCPY174,5036
#define MEMCPYTOIO_WRITEL176,5068
#define MAP_BUSTOVIRT185,5263
#define MAP_ISAMEMBASE190,5470
#define MAP_IOREMAP192,5499
#define dprintk(dprintk197,5547
#define dprintk(dprintk199,5585
#define PCI_SS_VENDOR_ID_SIEMENS_NIXDORF	203,5656
#define PCI_SS_VENDOR_ID_MATROX	206,5743
#define PCI_DEVICE_ID_MATROX_G200_PCI	209,5842
#define PCI_DEVICE_ID_MATROX_G200_AGP	212,5932
#define PCI_DEVICE_ID_MATROX_G100	215,6018
#define PCI_DEVICE_ID_MATROX_G100_AGP	218,6104
#define PCI_SS_ID_MATROX_GENERIC	222,6202
#define PCI_SS_ID_MATROX_PRODUCTIVA_G100_AGP	223,6243
#define PCI_SS_ID_MATROX_MYSTIQUE_G200_AGP	224,6295
#define PCI_SS_ID_MATROX_MILLENIUM_G200_AGP	225,6345
#define PCI_SS_ID_MATROX_MARVEL_G200_AGP	226,6396
#define PCI_SS_ID_MATROX_MGA_G100_PCI	227,6444
#define PCI_SS_ID_MATROX_MGA_G100_AGP	228,6490
#define PCI_SS_ID_SIEMENS_MGA_G100_AGP	229,6536
#define PCI_SS_ID_SIEMENS_MGA_G200_AGP	230,6592
#define MX_VISUAL_TRUECOLOR	233,6656
#define MX_VISUAL_DIRECTCOLOR	234,6706
#define MX_VISUAL_PSEUDOCOLOR	235,6756
#define CNVT_TOHW(CNVT_TOHW237,6809
#define NEED_DAC1064 242,7023
} vaddr_t;vaddr_t247,7089
static inline unsigned int mga_readb(250,7120
static inline unsigned int mga_readw(254,7225
static inline u_int32_t mga_readl(258,7330
static inline void mga_writeb(262,7432
static inline void mga_writew(266,7547
static inline void mga_writel(270,7663
static inline unsigned int mga_readb(274,7784
static inline unsigned int mga_readw(278,7905
static inline u_int32_t mga_readl(282,8027
static inline void mga_writeb(286,8146
static inline void mga_writew(290,8277
static inline void mga_writel(294,8410
static inline void mga_memcpy_toio(299,8550
#define srcd 303,8742
static inline void vaddr_add(331,9245
static inline void* vaddr_va(335,9332
#define MGA_IOREMAP_NORMAL	339,9396
#define MGA_IOREMAP_NOCACHE	340,9425
#define MGA_IOREMAP_FB	342,9456
#define MGA_IOREMAP_MMIO	343,9500
static inline int mga_ioremap(344,9545
static inline void mga_iounmap(364,10102
struct matroxfb_parmatroxfb_par370,10196
struct my_timming my_timming383,10537
#define MATROX_2MB_WITH_4MB_ADDON400,10862
struct matrox_pll_features matrox_pll_features402,10897
struct matrox_DAC1064_features matrox_DAC1064_features412,11121
struct matrox_accel_features matrox_accel_features417,11206
struct matrox_hw_state matrox_hw_state422,11293
struct matrox_accel_data matrox_accel_data437,11668
#define ACCESS_FBINFO2(ACCESS_FBINFO2446,11845
#define ACCESS_FBINFO(ACCESS_FBINFO447,11887
#define MINFO 449,11937
#define WPMINFO 451,11958
#define CPMINFO	452,12004
#define PMINFO 453,12056
static inline struct matrox_fb_info* mxinfo(455,12080
#define PMXINFO(PMXINFO459,12192
#define MINFO_FROM_DISP(MINFO_FROM_DISP460,12222
struct matrox_fb_info global_mxinfo;464,12298
struct display global_disp;465,12335
#define ACCESS_FBINFO(ACCESS_FBINFO467,12364
#define ACCESS_FBINFO2(ACCESS_FBINFO2468,12407
#define MINFO 470,12458
#define WPMINFO472,12490
#define CPMINFO473,12506
#define PMINFO474,12522
static inline struct matrox_fb_info* mxinfo(477,12544
#define PMXINFO(PMXINFO482,12643
#define MINFO_FROM_DISP(MINFO_FROM_DISP483,12662
struct matrox_switch matrox_switch487,12698
struct matrox_fb_info matrox_fb_info494,13001
#define curr_ydstorg(curr_ydstorg618,15513
#define PCI_OPTION_REG	620,15577
#define PCI_MGA_INDEX	621,15605
#define PCI_MGA_DATA	622,15632
#define M_DWGCTL	624,15659
#define M_MACCESS	625,15683
#define M_CTLWTST	626,15708
#define M_PLNWT	628,15734
#define M_BCOL	630,15759
#define M_FCOL	631,15782
#define M_SGN	633,15806
#define M_LEN	634,15828
#define M_AR0	635,15850
#define M_AR1	636,15872
#define M_AR2	637,15894
#define M_AR3	638,15916
#define M_AR4	639,15938
#define M_AR5	640,15960
#define M_AR6	641,15982
#define M_CXBNDRY	643,16005
#define M_FXBNDRY	644,16030
#define M_YDSTLEN	645,16055
#define M_PITCH	646,16080
#define M_YDST	647,16104
#define M_YDSTORG	648,16127
#define M_YTOP	649,16152
#define M_YBOT	650,16175
#define M_CACHEFLUSH	653,16219
#define M_EXEC	655,16248
#define M_DWG_TRAP	657,16272
#define M_DWG_BITBLT	658,16296
#define M_DWG_ILOAD	659,16322
#define M_DWG_LINEAR	661,16348
#define M_DWG_SOLID	662,16376
#define M_DWG_ARZERO	663,16403
#define M_DWG_SGNZERO	664,16431
#define M_DWG_SHIFTZERO	665,16460
#define M_DWG_REPLACE	667,16492
#define M_DWG_REPLACE2	668,16525
#define M_DWG_XOR	669,16571
#define M_DWG_BFCOL	671,16601
#define M_DWG_BMONOWF	672,16632
#define M_DWG_TRANSC	674,16666
#define M_FIFOSTATUS	676,16699
#define M_STATUS	677,16727
#define M_IEN	679,16752
#define M_VCOUNT	681,16775
#define M_RESET	683,16800
#define M_OPMODE	685,16825
#define     M_OPMODE_DMA_GEN_WRITE	686,16849
#define     M_OPMODE_DMA_BLIT	687,16889
#define     M_OPMODE_DMA_VECTOR_WRITE	688,16925
#define     M_OPMODE_DMA_LE	689,16968
#define     M_OPMODE_DMA_BE_8BPP	690,17045
#define     M_OPMODE_DMA_BE_16BPP	691,17085
#define     M_OPMODE_DMA_BE_32BPP	692,17126
#define     M_OPMODE_DIR_LE	693,17167
#define     M_OPMODE_DIR_BE_8BPP	694,17245
#define     M_OPMODE_DIR_BE_16BPP	695,17287
#define     M_OPMODE_DIR_BE_32BPP	696,17330
#define M_ATTR_INDEX	698,17374
#define M_ATTR_DATA	699,17402
#define M_MISC_REG	701,17430
#define M_3C2_RD	702,17456
#define M_SEQ_INDEX	704,17481
#define M_SEQ_DATA	705,17508
#define M_MISC_REG_READ	707,17535
#define M_GRAPHICS_INDEX 709,17567
#define M_GRAPHICS_DATA	710,17599
#define M_CRTC_INDEX	712,17631
#define M_ATTR_RESET	714,17660
#define M_3DA_WR	715,17688
#define M_EXTVGA_INDEX	717,17713
#define M_EXTVGA_DATA	718,17743
#define M_RAMDAC_BASE	720,17773
#define M_DAC_REG	723,17850
#define M_DAC_VAL	724,17886
#define M_PALETTE_MASK	725,17922
#define M_X_INDEX	727,17964
#define M_X_DATAREG	728,17987
#define TVP3026_INDEX	731,18047
#define TVP3026_PALWRADD	732,18075
#define TVP3026_PALDATA	733,18105
#define TVP3026_PIXRDMSK	734,18135
#define TVP3026_PALRDADD	735,18165
#define TVP3026_CURCOLWRADD	736,18195
#define     TVP3026_CLOVERSCAN	737,18228
#define     TVP3026_CLCOLOR0	738,18265
#define     TVP3026_CLCOLOR1	739,18300
#define     TVP3026_CLCOLOR2	740,18335
#define TVP3026_CURCOLDATA	741,18370
#define TVP3026_CURCOLRDADD	742,18402
#define TVP3026_CURCTRL	743,18435
#define TVP3026_X_DATAREG	744,18465
#define TVP3026_CURRAMDATA	745,18496
#define TVP3026_CURPOSXL	746,18528
#define TVP3026_CURPOSXH	747,18558
#define TVP3026_CURPOSYL	748,18588
#define TVP3026_CURPOSYH	749,18618
#define TVP3026_XSILICONREV	751,18649
#define TVP3026_XCURCTRL	752,18682
#define     TVP3026_XCURCTRL_DIS	753,18712
#define     TVP3026_XCURCTRL_3COLOR	754,18807
#define     TVP3026_XCURCTRL_XGA	755,18875
#define     TVP3026_XCURCTRL_XWIN	756,18949
#define     TVP3026_XCURCTRL_BLANK2048	757,19025
#define     TVP3026_XCURCTRL_BLANK4096	758,19069
#define     TVP3026_XCURCTRL_INTERLACED	759,19113
#define     TVP3026_XCURCTRL_ODD	760,19158
#define     TVP3026_XCURCTRL_EVEN	761,19223
#define     TVP3026_XCURCTRL_INDIRECT	762,19289
#define     TVP3026_XCURCTRL_DIRECT	763,19332
#define TVP3026_XLATCHCTRL	764,19373
#define     TVP3026_XLATCHCTRL_1_1	765,19405
#define     TVP3026_XLATCHCTRL_2_1	766,19445
#define     TVP3026_XLATCHCTRL_4_1	767,19485
#define     TVP3026_XLATCHCTRL_8_1	768,19525
#define     TVP3026_XLATCHCTRL_16_1	769,19565
#define     TVP3026A_XLATCHCTRL_4_3	770,19606
#define     TVP3026A_XLATCHCTRL_8_3	771,19698
#define     TVP3026B_XLATCHCTRL_4_3	772,19739
#define     TVP3026B_XLATCHCTRL_8_3	773,19780
#define TVP3026_XTRUECOLORCTRL	774,19872
#define     TVP3026_XTRUECOLORCTRL_VRAM_SHIFT_ACCEL	775,19908
#define     TVP3026_XTRUECOLORCTRL_VRAM_SHIFT_TVP	776,19965
#define     TVP3026_XTRUECOLORCTRL_PSEUDOCOLOR	777,20020
#define     TVP3026_XTRUECOLORCTRL_TRUECOLOR	778,20073
#define     TVP3026_XTRUECOLORCTRL_DIRECTCOLOR	779,20140
#define     TVP3026_XTRUECOLORCTRL_24_ALTERNATE	780,20193
#define     TVP3026_XTRUECOLORCTRL_RGB_888	781,20280
#define	    TVP3026_XTRUECOLORCTRL_BGR_888	782,20356
#define     TVP3026_XTRUECOLORCTRL_ORGB_8888	783,20405
#define     TVP3026_XTRUECOLORCTRL_BGRO_8888	784,20456
#define     TVP3026_XTRUECOLORCTRL_RGB_565	785,20507
#define     TVP3026_XTRUECOLORCTRL_ORGB_1555	786,20556
#define     TVP3026_XTRUECOLORCTRL_RGB_664	787,20607
#define     TVP3026_XTRUECOLORCTRL_RGBO_4444	788,20656
#define TVP3026_XMUXCTRL	789,20707
#define     TVP3026_XMUXCTRL_MEMORY_8BIT	790,20737
#define     TVP3026_XMUXCTRL_MEMORY_16BIT	791,20793
#define     TVP3026_XMUXCTRL_MEMORY_32BIT	792,20850
#define     TVP3026_XMUXCTRL_MEMORY_64BIT	793,20923
#define     TVP3026_XMUXCTRL_PIXEL_4BIT	794,21004
#define     TVP3026_XMUXCTRL_PIXEL_4BIT_SWAPPED	795,21073
#define     TVP3026_XMUXCTRL_PIXEL_8BIT	796,21149
#define     TVP3026_XMUXCTRL_PIXEL_16BIT	797,21197
#define     TVP3026_XMUXCTRL_PIXEL_32BIT	798,21245
#define     TVP3026_XMUXCTRL_VGA	799,21293
#define TVP3026_XCLKCTRL	800,21363
#define     TVP3026_XCLKCTRL_DIV1	801,21393
#define     TVP3026_XCLKCTRL_DIV2	802,21432
#define     TVP3026_XCLKCTRL_DIV4	803,21471
#define     TVP3026_XCLKCTRL_DIV8	804,21510
#define     TVP3026_XCLKCTRL_DIV16	805,21549
#define     TVP3026_XCLKCTRL_DIV32	806,21589
#define     TVP3026_XCLKCTRL_DIV64	807,21629
#define     TVP3026_XCLKCTRL_CLKSTOPPED	808,21669
#define     TVP3026_XCLKCTRL_SRC_CLK0	809,21714
#define     TVP3026_XCLKCTRL_SRC_CLK1 810,21757
#define     TVP3026_XCLKCTRL_SRC_CLK2	811,21802
#define     TVP3026_XCLKCTRL_SRC_NCLK2	812,21869
#define     TVP3026_XCLKCTRL_SRC_ECLK2	813,21942
#define     TVP3026_XCLKCTRL_SRC_PLL	814,22024
#define     TVP3026_XCLKCTRL_SRC_DIS	815,22066
#define     TVP3026_XCLKCTRL_SRC_CLK0VGA 816,22148
#define TVP3026_XPALETTEPAGE	817,22194
#define TVP3026_XGENCTRL	818,22228
#define     TVP3026_XGENCTRL_HSYNC_POS	819,22258
#define     TVP3026_XGENCTRL_HSYNC_NEG	820,22302
#define     TVP3026_XGENCTRL_VSYNC_POS	821,22346
#define     TVP3026_XGENCTRL_VSYNC_NEG	822,22390
#define     TVP3026_XGENCTRL_LITTLE_ENDIAN 823,22434
#define     TVP3026_XGENCTRL_BIG_ENDIAN 824,22482
#define     TVP3026_XGENCTRL_BLACK_0IRE	825,22530
#define     TVP3026_XGENCTRL_BLACK_75IRE	826,22576
#define     TVP3026_XGENCTRL_NO_SYNC_ON_GREEN	827,22622
#define     TVP3026_XGENCTRL_SYNC_ON_GREEN	828,22673
#define     TVP3026_XGENCTRL_OVERSCAN_DIS	829,22721
#define     TVP3026_XGENCTRL_OVERSCAN_EN	830,22768
#define TVP3026_XMISCCTRL	831,22814
#define     TVP3026_XMISCCTRL_DAC_PUP	832,22845
#define     TVP3026_XMISCCTRL_DAC_PDOWN	833,22888
#define     TVP3026_XMISCCTRL_DAC_EXT	834,22933
#define     TVP3026_XMISCCTRL_DAC_6BIT	835,23005
#define     TVP3026_XMISCCTRL_DAC_8BIT	836,23049
#define     TVP3026_XMISCCTRL_PSEL_DIS	837,23093
#define     TVP3026_XMISCCTRL_PSEL_EN	838,23137
#define     TVP3026_XMISCCTRL_PSEL_LOW	839,23180
#define     TVP3026_XMISCCTRL_PSEL_HIGH 840,23260
#define TVP3026_XGENIOCTRL	841,23354
#define TVP3026_XGENIODATA	842,23386
#define TVP3026_XPLLADDR	843,23418
#define     TVP3026_XPLLADDR_X(TVP3026_XPLLADDR_X844,23448
#define     TVP3026_XPLLDATA_N	845,23530
#define     TVP3026_XPLLDATA_M	846,23567
#define     TVP3026_XPLLDATA_P	847,23604
#define     TVP3026_XPLLDATA_STAT	848,23641
#define TVP3026_XPIXPLLDATA	849,23680
#define TVP3026_XMEMPLLDATA	850,23713
#define TVP3026_XLOOPPLLDATA	851,23746
#define TVP3026_XCOLKEYOVRMIN	852,23780
#define TVP3026_XCOLKEYOVRMAX	853,23815
#define TVP3026_XCOLKEYREDMIN	854,23850
#define TVP3026_XCOLKEYREDMAX	855,23885
#define TVP3026_XCOLKEYGREENMIN	856,23920
#define TVP3026_XCOLKEYGREENMAX	857,23957
#define TVP3026_XCOLKEYBLUEMIN	858,23994
#define TVP3026_XCOLKEYBLUEMAX	859,24030
#define TVP3026_XCOLKEYCTRL	860,24066
#define     TVP3026_XCOLKEYCTRL_OVR_EN	861,24099
#define     TVP3026_XCOLKEYCTRL_RED_EN	862,24143
#define     TVP3026_XCOLKEYCTRL_GREEN_EN 863,24187
#define     TVP3026_XCOLKEYCTRL_BLUE_EN	864,24233
#define     TVP3026_XCOLKEYCTRL_NEGATE	865,24278
#define     TVP3026_XCOLKEYCTRL_ZOOM1	866,24322
#define     TVP3026_XCOLKEYCTRL_ZOOM2	867,24365
#define     TVP3026_XCOLKEYCTRL_ZOOM4	868,24408
#define     TVP3026_XCOLKEYCTRL_ZOOM8	869,24451
#define     TVP3026_XCOLKEYCTRL_ZOOM16	870,24494
#define     TVP3026_XCOLKEYCTRL_ZOOM32	871,24538
#define TVP3026_XMEMPLLCTRL	872,24582
#define     TVP3026_XMEMPLLCTRL_DIV(TVP3026_XMEMPLLCTRL_DIV873,24615
#define     TVP3026_XMEMPLLCTRL_STROBEMKC4	874,24743
#define     TVP3026_XMEMPLLCTRL_MCLK_DOTCLOCK	875,24791
#define     TVP3026_XMEMPLLCTRL_MCLK_MCLKPLL	876,24853
#define     TVP3026_XMEMPLLCTRL_RCLK_PIXPLL	877,24914
#define     TVP3026_XMEMPLLCTRL_RCLK_LOOPPLL	878,24963
#define     TVP3026_XMEMPLLCTRL_RCLK_DOTDIVN	879,25013
#define TVP3026_XSENSETEST	880,25112
#define TVP3026_XTESTMODEDATA	881,25144
#define TVP3026_XCRCREML	882,25179
#define TVP3026_XCRCREMH	883,25209
#define TVP3026_XCRCBITSEL	884,25239
#define TVP3026_XID	885,25271
#define DAC1064_OPT_SCLK_PCI	891,25327
#define DAC1064_OPT_SCLK_PLL	892,25361
#define DAC1064_OPT_SCLK_EXT	893,25395
#define DAC1064_OPT_SCLK_MASK	894,25429
#define DAC1064_OPT_GDIV1	895,25464
#define DAC1064_OPT_GDIV3	896,25530
#define DAC1064_OPT_MDIV1	897,25561
#define DAC1064_OPT_MDIV2	898,25592
#define DAC1064_OPT_RESERVED	899,25623
#define M1064_INDEX	901,25658
#define M1064_PALWRADD	902,25683
#define M1064_PALDATA	903,25711
#define M1064_PIXRDMSK	904,25738
#define M1064_PALRDADD	905,25766
#define M1064_X_DATAREG	906,25794
#define M1064_CURPOSXL	907,25823
#define M1064_CURPOSXH	908,25882
#define M1064_CURPOSYL	909,25910
#define M1064_CURPOSYH	910,25938
#define M1064_XCURADDL	912,25967
#define M1064_XCURADDH	913,25996
#define M1064_XCURCTRL	914,26025
#define     M1064_XCURCTRL_DIS	915,26054
#define     M1064_XCURCTRL_3COLOR	916,26148
#define     M1064_XCURCTRL_XGA	917,26214
#define     M1064_XCURCTRL_XWIN	918,26287
#define M1064_XCURCOL0RED	919,26362
#define M1064_XCURCOL0GREEN	920,26393
#define M1064_XCURCOL0BLUE	921,26426
#define M1064_XCURCOL1RED	922,26458
#define M1064_XCURCOL1GREEN	923,26489
#define M1064_XCURCOL1BLUE	924,26522
#define M1064_XCURCOL2RED	925,26554
#define M1064_XCURCOL2GREEN	926,26585
#define M1064_XCURCOL2BLUE	927,26618
#define DAC1064_XVREFCTRL	928,26650
#define      DAC1064_XVREFCTRL_INTERNAL	929,26681
#define      DAC1064_XVREFCTRL_EXTERNAL	930,26727
#define      DAC1064_XVREFCTRL_G100_DEFAULT	931,26773
#define M1064_XMULCTRL	932,26822
#define      M1064_XMULCTRL_DEPTH_8BPP	933,26851
#define      M1064_XMULCTRL_DEPTH_15BPP_1BPP	934,26918
#define      M1064_XMULCTRL_DEPTH_16BPP	935,27007
#define      M1064_XMULCTRL_DEPTH_24BPP	936,27076
#define      M1064_XMULCTRL_DEPTH_24BPP_8BPP	937,27145
#define      M1064_XMULCTRL_2G8V16	938,27241
#define      M1064_XMULCTRL_G16V16	939,27335
#define      M1064_XMULCTRL_DEPTH_32BPP	940,27434
#define      M1064_XMULCTRL_GRAPHICS_PALETIZED	941,27518
#define      M1064_XMULCTRL_VIDEO_PALETIZED	942,27570
#define M1064_XPIXCLKCTRL	943,27619
#define      M1064_XPIXCLKCTRL_SRC_PCI	944,27650
#define      M1064_XPIXCLKCTRL_SRC_PLL	945,27695
#define      M1064_XPIXCLKCTRL_SRC_EXT	946,27740
#define      M1064_XPIXCLKCTRL_SRC_MASK	947,27785
#define      M1064_XPIXCLKCTRL_EN	948,27831
#define      M1064_XPIXCLKCTRL_DIS	949,27871
#define      M1064_XPIXCLKCTRL_PLL_DOWN	950,27912
#define      M1064_XPIXCLKCTRL_PLL_UP	951,27958
#define M1064_XGENCTRL	952,28002
#define      M1064_XGENCTRL_VS_0	953,28031
#define      M1064_XGENCTRL_VS_1	954,28070
#define      M1064_XGENCTRL_ALPHA_DIS	955,28109
#define      M1064_XGENCTRL_ALPHA_EN	956,28153
#define      M1064_XGENCTRL_BLACK_0IRE	957,28196
#define      M1064_XGENCTRL_BLACK_75IRE	958,28241
#define      M1064_XGENCTRL_SYNC_ON_GREEN	959,28287
#define      M1064_XGENCTRL_NO_SYNC_ON_GREEN	960,28334
#define      M1064_XGENCTRL_SYNC_ON_GREEN_MASK	961,28384
#define M1064_XMISCCTRL	962,28436
#define      M1064_XMISCCTRL_DAC_DIS	963,28466
#define      M1064_XMISCCTRL_DAC_EN	964,28509
#define      M1064_XMISCCTRL_MFC_VGA	965,28551
#define      M1064_XMISCCTRL_MFC_MAFC	966,28594
#define      M1064_XMISCCTRL_MFC_DIS	967,28638
#define      M1064_XMISCCTRL_DAC_6BIT	968,28681
#define      M1064_XMISCCTRL_DAC_8BIT	969,28725
#define      M1064_XMISCCTRL_LUT_DIS	970,28769
#define      M1064_XMISCCTRL_LUT_EN	971,28812
#define M1064_XGENIOCTRL	972,28854
#define M1064_XGENIODATA	973,28884
#define DAC1064_XSYSPLLM	974,28914
#define DAC1064_XSYSPLLN	975,28944
#define DAC1064_XSYSPLLP	976,28974
#define DAC1064_XSYSPLLSTAT	977,29004
#define M1064_XZOOMCTRL	978,29037
#define      M1064_XZOOMCTRL_1	979,29067
#define      M1064_XZOOMCTRL_2	980,29105
#define      M1064_XZOOMCTRL_4	981,29143
#define M1064_XSENSETEST	982,29181
#define      M1064_XSENSETEST_BCOMP	983,29211
#define      M1064_XSENSETEST_GCOMP	984,29253
#define      M1064_XSENSETEST_RCOMP	985,29295
#define      M1064_XSENSETEST_PDOWN	986,29337
#define      M1064_XSENSETEST_PUP	987,29379
#define M1064_XCRCREML	988,29419
#define M1064_XCRCREMH	989,29448
#define M1064_XCRCBITSEL	990,29477
#define M1064_XCOLKEYMASKL	991,29507
#define M1064_XCOLKEYMASKH	992,29539
#define M1064_XCOLKEYL	993,29571
#define M1064_XCOLKEYH	994,29600
#define M1064_XPIXPLLAM	995,29629
#define M1064_XPIXPLLAN	996,29659
#define M1064_XPIXPLLAP	997,29689
#define M1064_XPIXPLLBM	998,29719
#define M1064_XPIXPLLBN	999,29749
#define M1064_XPIXPLLBP	1000,29779
#define M1064_XPIXPLLCM	1001,29809
#define M1064_XPIXPLLCN	1002,29839
#define M1064_XPIXPLLCP	1003,29869
#define M1064_XPIXPLLSTAT	1004,29899
#define MX_OPTION_BSWAP	1009,29962
#define M_OPMODE_4BPP	1011,29999
#define M_OPMODE_8BPP	1012,30077
#define M_OPMODE_16BPP	1013,30155
#define M_OPMODE_24BPP	1014,30234
#define M_OPMODE_32BPP	1015,30313
#define MX_OPTION_BSWAP	1018,30418
#define M_OPMODE_4BPP	1020,30455
#define M_OPMODE_8BPP	1021,30544
#define M_OPMODE_16BPP	1022,30634
#define M_OPMODE_24BPP	1023,30725
#define M_OPMODE_32BPP	1024,30830
#define mga_inb(mga_inb1030,31002
#define mga_inl(mga_inl1031,31069
#define mga_outb(mga_outb1032,31136
#define mga_outw(mga_outw1033,31216
#define mga_outl(mga_outl1034,31296
#define mga_readr(mga_readr1035,31376
#define mga_setr(mga_setr1037,31471
#define mga_setr(mga_setr1039,31545
#define mga_fifo(mga_fifo1043,31672
#define mga_fifo(mga_fifo1045,31740
#define WaitTillIdle(WaitTillIdle1048,31819
#define isInterleave(isInterleave1052,31938
#define isMillenium(isMillenium1053,31979
#define isMilleniumII(isMilleniumII1054,32018
#define isInterleave(isInterleave1056,32066
#define isMillenium(isMillenium1057,32095
#define isMilleniumII(isMilleniumII1058,32123
static void matrox_cfbX_init(1061,32160
static void matrox_cfbX_bmove(1115,33708
static void matrox_cfb4_bmove(1154,34779
static void matroxfb_accel_clear(1204,36140
static void matrox_cfbX_clear(1217,36506
static void matrox_cfb4_clear(1226,36802
static void matrox_cfb8_clear(1288,38279
static void matrox_cfb16_clear(1301,38588
static void matrox_cfb32_clear(1312,38940
static void matrox_cfbX_fastputc(1322,39221
static void matrox_cfbX_putc(1343,39945
static void matrox_cfb8_putc(1420,41943
static void matrox_cfb16_putc(1437,42332
static void matrox_cfb32_putc(1452,42777
static void matrox_cfbX_fastputcs(1464,43123
static void matrox_cfbX_putcs(1488,43941
static void matrox_cfb8_putcs(1583,46346
static void matrox_cfb16_putcs(1600,46796
static void matrox_cfb32_putcs(1615,47302
static void matrox_cfb4_revc(1628,47731
static void matrox_cfb8_revc(1653,48289
static void matrox_cfbX_revc(1670,48706
static void matrox_cfbX_clear_margins(1686,49116
static void outDAC(1720,50231
static int inDAC(1726,50385
#define outTi3026 1732,50528
#define inTi3026 1733,50553
#define outDAC1064 1734,50576
#define inDAC1064 1735,50602
static void matroxfb_createcursorshape(1737,50627
#define POS3026_XCURCTRL	1776,51375
static void matroxfb_ti3026_flashcursor(1778,51404
#define minfo 1779,51465
static void matroxfb_ti3026_createcursor(1788,51818
static void matroxfb_ti3026_cursor(1841,53751
static int matroxfb_ti3026_setfont(1885,55420
static void matroxfb_DAC1064_flashcursor(1897,55639
#define minfo 1898,55701
static void matroxfb_DAC1064_createcursor(1907,56049
static void matroxfb_DAC1064_cursor(1953,57203
static int matroxfb_DAC1064_setfont(1994,58687
#define FNTCHARCNT(FNTCHARCNT2002,58873
static int matroxfb_fastfont_tryset(2005,58924
static void matrox_text_setup(2110,61296
static void matrox_text_bmove(2117,61534
static void matrox_text_clear(2153,62605
static void matrox_text_putc(2172,63186
static void matrox_text_putcs(2185,63614
static void matrox_text_revc(2203,64183
static int matrox_text_loadfont(2213,64498
static void matrox_text_createcursor(2243,65167
static void matrox_text_cursor(2253,65448
static void matrox_text_round(2278,66228
static int matrox_text_setfont(2307,66973
#define matrox_cfb16_revc 2322,67351
#define matrox_cfb24_revc 2323,67394
#define matrox_cfb32_revc 2324,67437
#define matrox_cfb24_clear 2326,67481
#define matrox_cfb24_putc 2327,67527
#define matrox_cfb24_putcs 2328,67571
static struct display_switch matroxfb_text 2331,67643
static struct display_switch matroxfb_cfb4 2340,67923
static struct display_switch matroxfb_cfb8 2350,68233
static struct display_switch matroxfb_cfb16 2359,68508
static struct display_switch matroxfb_cfb24 2368,68786
static struct display_switch matroxfb_cfb32 2377,69154
static struct pci_dev* pci_find(2385,69409
static void initMatrox(2393,69531
static struct fb_var_screeninfo vesafb_defined __initdata 2500,71905
static void matrox_pan_var(2523,72476
static int matroxfb_open(2549,73420
static int matroxfb_release(2560,73599
static int matroxfb_pan_display(2568,73728
#define minfo 2570,73826
static int matroxfb_updatevar(2594,74564
#define minfo 2596,74627
static int matroxfb_get_final_bppShift(2604,74774
static int matroxfb_test_and_set_rounding(2620,75065
static int matroxfb_pitch_adjust(2648,75560
static const unsigned char DACseq[2677,76241
#define POS3026_XLATCHCTRL	2690,76759
#define POS3026_XTRUECOLORCTRL	2691,76788
#define POS3026_XMUXCTRL	2692,76821
#define POS3026_XCLKCTRL	2693,76848
#define POS3026_XGENCTRL	2694,76875
#define POS3026_XMISCCTRL	2695,76902
#define POS3026_XMEMPLLCTRL	2696,76930
#define POS3026_XCURCTRL	2697,76961
static const unsigned char MGADACbpp32[2699,76990
static int PLL_calcclock(2713,77686
static void DAC1064_calcclock(2774,79805
static int Ti3026_calcclock(2795,80260
static int Ti3026_setpclk(2808,80594
static void var2my(2882,82673
static int vgaHWinit(2903,83415
static const unsigned char MGA1064_DAC_regs[3101,88070
#define POS1064_XCURADDL	3112,88620
#define POS1064_XCURADDH	3113,88649
#define POS1064_XVREFCTRL	3114,88678
#define POS1064_XMULCTRL	3115,88708
#define POS1064_XGENCTRL	3116,88737
#define POS1064_XMISCCTRL	3117,88766
static const unsigned char MGA1064_DAC[3119,88797
static void DAC1064_setpclk(3132,89451
__initfunc(3143,89727
static int DAC1064_init_1(3204,91950
static int DAC1064_init_2(3246,93673
static void DAC1064_restore_1(3288,94704
static void DAC1064_restore_2(3303,95214
static int MGA1064_init(3352,96601
static int MGAG100_init(3373,97173
static int Ti3026_init(3395,97788
static int matroxfb_get_cmap_len(3476,101634
static int matroxfb_decode_var(3512,102697
__initfunc(3687,107695
__initfunc(3786,110884
__initfunc(3803,111430
__initfunc(3827,112090
__initfunc(3844,112879
__initfunc(3876,114024
static int x7AF4 3890,114418
static int def50 3893,114556
__initfunc(3896,114682
__initfunc(3940,116258
__initfunc(3949,116513
__initfunc(4039,119840
static void vgaHWrestore(4084,121345
static int matrox_setcolreg(4130,122622
static void do_install_cmap(4214,124817
static void MGA1064_restore(4226,125147
static void MGAG100_restore(4243,125657
static void Ti3026_restore(4258,126117
static int matroxfb_get_fix(4354,129096
#define minfo 4360,129238
static int matroxfb_get_var(4386,130000
#define minfo 4389,130096
static int matroxfb_set_var(4400,130281
#define minfo 4403,130377
static int matrox_getcolreg(4555,135705
#define minfo 4562,135880
static int matroxfb_get_cmap(4579,136314
#define minfo 4582,136416
static int matroxfb_set_cmap(4599,136922
#define minfo 4604,137116
static int matroxfb_ioctl(4624,137563
static struct fb_ops matroxfb_ops 4634,137755
static int matroxfb_switch(4647,137988
#define minfo 4649,138048
static void matroxfb_blank(4694,139507
#define minfo 4696,139569
#define RSResolution(RSResolution4716,140112
#define RS640x400	4717,140149
#define RS640x480	4718,140169
#define RS800x600	4719,140189
#define RS1024x768	4720,140209
#define RS1280x1024	4721,140230
#define RS1600x1200	4722,140252
#define RS768x576	4723,140274
#define RS960x720	4724,140294
#define RS1152x864	4725,140314
#define RS1408x1056	4726,140335
#define RS640x350	4727,140358
#define RS1056x344	4728,140379
#define RS1056x400	4729,140421
#define RS1056x480	4730,140463
static struct { int xres, yres, left, right, upper, lower, hslen, vslen, vfreq; } timmings[4732,140517
static struct { int xres, yres, left, right, upper, lower, hslen, vslen, vfreq; } timmings[] __initdata 4732,140517
#define RSDepth(RSDepth4749,141272
#define RS8bpp	4750,141311
#define RS15bpp	4751,141331
#define RS16bpp	4752,141352
#define RS32bpp	4753,141373
#define RS4bpp	4754,141394
#define RS24bpp	4755,141414
#define RSText	4756,141435
#define RSText8	4757,141455
static struct { struct fb_bitfield red, green, blue, transp; int bits_per_pixel; } colors[4759,141486
static struct { struct fb_bitfield red, green, blue, transp; int bits_per_pixel; } colors[] __initdata 4759,141486
#define RSCreate(RSCreate4770,142141
static struct { unsigned int vesa; unsigned int info; } *RSptr,4771,142182
static struct { unsigned int vesa; unsigned int info; } *RSptr, vesamap[4771,142182
static struct { unsigned int vesa; unsigned int info; } *RSptr, vesamap[] __initdata 4771,142182
static unsigned int mem 4848,145369
static int option_precise_width 4849,145425
static int inv24 4850,145530
static int cross4MB 4851,145575
static int disabled 4852,145626
static int noaccel 4853,145676
static int nopan 4854,145725
static int no_pci_retry 4855,145770
static int novga 4856,145826
static int nobios 4857,145871
static int noinit 4858,145918
static int inverse 4859,145963
static int hwcursor 4860,146012
static int blink 4861,146064
static int sgram 4862,146111
static int mtrr 4863,146156
static int grayscale 4864,146201
static unsigned int fastfont 4865,146253
static int dev 4866,146317
static unsigned int vesa 4867,146365
static int depth 4868,146425
static unsigned int xres 4869,146477
static unsigned int yres 4870,146534
static unsigned int upper 4871,146591
static unsigned int lower 4872,146650
static unsigned int vslen 4873,146709
static unsigned int left 4874,146768
static unsigned int right 4875,146825
static unsigned int hslen 4876,146884
static unsigned int pixclock 4877,146943
static int sync 4878,147007
static unsigned int fv 4879,147057
static unsigned int fh 4880,147110
static unsigned int maxclk 4881,147164
static char fontname[4882,147225
__initfunc(4885,147294
__initfunc(4999,151118
__initfunc(5072,153082
__initfunc(5125,155006
static struct matrox_switch matrox_millenium 5136,155215
static struct matrox_switch matrox_mystique 5142,155369
static struct matrox_switch matrox_G100 5148,155520
struct video_board video_board5153,155638
static struct video_board vbMillenium __initdata	5159,155760
static struct video_board vbMillenium2 __initdata	5160,155869
static struct video_board vbMillenium2A __initdata	5161,155979
static struct video_board vbMystique __initdata	5164,156167
static struct video_board vbG100 __initdata	5167,156344
static struct video_board vbG200 __initdata	5168,156443
#define DEVF_VIDEO64BIT	5171,156550
#define	DEVF_SWAPS	5172,156579
#define DEVF_MILLENIUM	5173,156603
#define	DEVF_MILLENIUM2	5174,156631
#define DEVF_CROSS4MB	5175,156660
#define DEVF_TEXT4B	5176,156687
static struct board board5177,156712
		} dev_list[5183,156871
		} dev_list[] __initdata 5183,156871
__initfunc(5311,160627
static struct matrox_fb_info* fb_list 5653,172904
__initfunc(5655,172951
__initfunc(5746,175508
__initfunc(5757,175700
__initfunc(5842,180273
void cleanup_module(5874,180859

drivers/video/cyberfb.h,10407
#define S3_BITBLT 28,787
#define S3_TWOPOINTLINE 29,818
#define S3_FILLEDRECT 30,849
#define S3_FIFO_EMPTY 32,881
#define S3_HDW_BUSY 33,910
#define S3_READ_SEL 37,985
#define S3_MULT_MISC 38,1032
#define S3_ERR_TERM 39,1079
#define S3_FRGD_COLOR 40,1111
#define S3_BKGD_COLOR 41,1143
#define S3_PIXEL_CNTL 42,1175
#define S3_FRGD_MIX 43,1222
#define S3_BKGD_MIX 44,1254
#define S3_CUR_Y 45,1286
#define S3_CUR_X 46,1318
#define S3_DESTY_AXSTP 47,1350
#define S3_DESTX_DIASTP 48,1382
#define S3_MIN_AXIS_PCNT 49,1414
#define S3_MAJ_AXIS_PCNT 50,1461
#define S3_CMD 51,1493
#define S3_GP_STAT 52,1525
#define S3_ADVFUNC_CNTL 53,1557
#define S3_WRT_MASK 54,1589
#define S3_RD_MASK 55,1621
#define S3_ALT_CURXY 58,1717
#define S3_ALT_CURXY2 59,1749
#define S3_ALT_STEP 60,1781
#define S3_ALT_STEP2 61,1813
#define S3_ALT_ERR 62,1845
#define S3_ALT_CMD 63,1877
#define S3_ALT_MIX 64,1909
#define S3_ALT_PCNT 65,1941
#define S3_ALT_PAT 66,1973
#define S3_NOTCUR 69,2026
#define S3_LOGICALZERO 70,2060
#define S3_LOGICALONE 71,2094
#define S3_LEAVEASIS 72,2128
#define S3_NOTNEW 73,2162
#define S3_CURXORNEW 74,2196
#define S3_NOT_CURXORNEW 75,2230
#define S3_NEW 76,2264
#define S3_NOTCURORNOTNEW 77,2298
#define S3_CURORNOTNEW 78,2332
#define S3_NOTCURORNEW 79,2366
#define S3_CURORNEW 80,2400
#define S3_CURANDNEW 81,2434
#define S3_NOTCURANDNEW 82,2468
#define S3_CURANDNOTNEW 83,2502
#define S3_NOTCURANDNOTNEW 84,2536
#define S3_CRTC_ADR 86,2571
#define S3_CRTC_DATA 87,2601
#define S3_REG_LOCK2 89,2632
#define S3_HGC_MODE 90,2658
#define S3_HWGC_ORGX_H 92,2685
#define S3_HWGC_ORGX_L 93,2713
#define S3_HWGC_ORGY_H 94,2741
#define S3_HWGC_ORGY_L 95,2769
#define S3_HWGC_DX 96,2797
#define S3_HWGC_DY 97,2825
#define S3_LAW_CTL 99,2854
#define min(min104,2945
#define max(max108,3017
#define	GRFBBOPclear	113,3156
#define GRFBBOPand	114,3190
#define GRFBBOPandReverse	115,3232
#define GRFBBOPcopy	116,3284
#define GRFBBOPandInverted	117,3319
#define	GRFBBOPnoop	118,3372
#define GRFBBOPxor	119,3407
#define GRFBBOPor	120,3449
#define GRFBBOPnor	121,3489
#define GRFBBOPequiv	122,3539
#define GRFBBOPinvert	123,3587
#define GRFBBOPorReverse	124,3628
#define GRFBBOPcopyInverted	125,3678
#define GRFBBOPorInverted	126,3724
#define GRFBBOPnand	127,3775
#define GRFBBOPset	128,3825
#define vgar(vgar132,3883
#define vgaw(vgaw135,3963
#define vgar16(vgar16139,4071
#define vgaw16(vgaw16142,4184
#define vgar32(vgar32146,4305
#define vgaw32(vgaw32149,4417
#define GREG_MISC_OUTPUT_R	165,4917
#define GREG_MISC_OUTPUT_W	166,4951
#define GREG_FEATURE_CONTROL_R	167,4986
#define GREG_FEATURE_CONTROL_W	168,5024
#define GREG_INPUT_STATUS0_R	169,5062
#define GREG_INPUT_STATUS1_R	170,5098
#define SREG_OPTION_SELECT	173,5158
#define SREG_VIDEO_SUBS_ENABLE	174,5192
#define ACT_ADDRESS	177,5259
#define ACT_ADDRESS_R	178,5287
#define ACT_ADDRESS_W	179,5317
#define ACT_ADDRESS_RESET	180,5347
#define ACT_ID_PALETTE0	181,5380
#define ACT_ID_PALETTE1	182,5410
#define ACT_ID_PALETTE2	183,5440
#define ACT_ID_PALETTE3	184,5470
#define ACT_ID_PALETTE4	185,5500
#define ACT_ID_PALETTE5	186,5530
#define ACT_ID_PALETTE6	187,5560
#define ACT_ID_PALETTE7	188,5590
#define ACT_ID_PALETTE8	189,5620
#define ACT_ID_PALETTE9	190,5650
#define ACT_ID_PALETTE10	191,5680
#define ACT_ID_PALETTE11	192,5710
#define ACT_ID_PALETTE12	193,5740
#define ACT_ID_PALETTE13	194,5770
#define ACT_ID_PALETTE14	195,5800
#define ACT_ID_PALETTE15	196,5830
#define ACT_ID_ATTR_MODE_CNTL	197,5860
#define ACT_ID_OVERSCAN_COLOR	198,5895
#define ACT_ID_COLOR_PLANE_ENA	199,5930
#define ACT_ID_HOR_PEL_PANNING	200,5966
#define ACT_ID_COLOR_SELECT	201,6002
#define GCT_ADDRESS	204,6063
#define GCT_ADDRESS_R	205,6091
#define GCT_ADDRESS_W	206,6121
#define GCT_ID_SET_RESET	207,6151
#define GCT_ID_ENABLE_SET_RESET	208,6181
#define GCT_ID_COLOR_COMPARE	209,6218
#define GCT_ID_DATA_ROTATE	210,6252
#define GCT_ID_READ_MAP_SELECT	211,6284
#define GCT_ID_GRAPHICS_MODE	212,6320
#define GCT_ID_MISC	213,6354
#define GCT_ID_COLOR_XCARE	214,6380
#define GCT_ID_BITMASK	215,6412
#define SEQ_ADDRESS	218,6459
#define SEQ_ADDRESS_R	219,6487
#define SEQ_ADDRESS_W	220,6517
#define SEQ_ID_RESET	221,6547
#define SEQ_ID_CLOCKING_MODE	222,6574
#define SEQ_ID_MAP_MASK	223,6608
#define SEQ_ID_CHAR_MAP_SELECT	224,6638
#define SEQ_ID_MEMORY_MODE	225,6674
#define SEQ_ID_UNKNOWN1	226,6706
#define SEQ_ID_UNKNOWN2	227,6736
#define SEQ_ID_UNKNOWN3	228,6766
#define SEQ_ID_UNLOCK_EXT	230,6816
#define SEQ_ID_EXT_SEQ_REG9	231,6847
#define SEQ_ID_BUS_REQ_CNTL	232,6880
#define SEQ_ID_EXT_MISC_SEQ	233,6913
#define SEQ_ID_UNKNOWN4	234,6946
#define SEQ_ID_EXT_SEQ	235,6976
#define SEQ_ID_UNKNOWN5	236,7005
#define SEQ_ID_UNKNOWN6	237,7035
#define SEQ_ID_MCLK_LO	238,7065
#define SEQ_ID_MCLK_HI	239,7094
#define SEQ_ID_DCLK_LO	240,7123
#define SEQ_ID_DCLK_HI	241,7152
#define SEQ_ID_CLKSYN_CNTL_1	242,7181
#define SEQ_ID_CLKSYN_CNTL_2	243,7215
#define SEQ_ID_CLKSYN_TEST_HI	244,7249
#define SEQ_ID_CLKSYN_TEST_LO	245,7321
#define SEQ_ID_RAMDAC_CNTL	246,7393
#define SEQ_ID_MORE_MAGIC	247,7425
#define CRT_ADDRESS	250,7479
#define CRT_ADDRESS_R	251,7507
#define CRT_ADDRESS_W	252,7537
#define CRT_ID_HOR_TOTAL	253,7567
#define CRT_ID_HOR_DISP_ENA_END	254,7597
#define CRT_ID_START_HOR_BLANK	255,7634
#define CRT_ID_END_HOR_BLANK	256,7670
#define CRT_ID_START_HOR_RETR	257,7704
#define CRT_ID_END_HOR_RETR	258,7739
#define CRT_ID_VER_TOTAL	259,7772
#define CRT_ID_OVERFLOW	260,7802
#define CRT_ID_PRESET_ROW_SCAN	261,7832
#define CRT_ID_MAX_SCAN_LINE	262,7868
#define CRT_ID_CURSOR_START	263,7902
#define CRT_ID_CURSOR_END	264,7935
#define CRT_ID_START_ADDR_HIGH	265,7966
#define CRT_ID_START_ADDR_LOW	266,8002
#define CRT_ID_CURSOR_LOC_HIGH	267,8037
#define CRT_ID_CURSOR_LOC_LOW	268,8073
#define CRT_ID_START_VER_RETR	269,8108
#define CRT_ID_END_VER_RETR	270,8143
#define CRT_ID_VER_DISP_ENA_END	271,8176
#define CRT_ID_SCREEN_OFFSET	272,8213
#define CRT_ID_UNDERLINE_LOC	273,8247
#define CRT_ID_START_VER_BLANK	274,8281
#define CRT_ID_END_VER_BLANK	275,8317
#define CRT_ID_MODE_CONTROL	276,8351
#define CRT_ID_LINE_COMPARE	277,8384
#define CRT_ID_GD_LATCH_RBACK	278,8417
#define CRT_ID_ACT_TOGGLE_RBACK	279,8452
#define CRT_ID_ACT_INDEX_RBACK	280,8489
#define CRT_ID_DEVICE_HIGH	282,8563
#define CRT_ID_DEVICE_LOW	283,8595
#define CRT_ID_REVISION 284,8626
#define CRT_ID_CHIP_ID_REV	285,8656
#define CRT_ID_MEMORY_CONF	286,8688
#define CRT_ID_BACKWAD_COMP_1	287,8720
#define CRT_ID_BACKWAD_COMP_2	288,8755
#define CRT_ID_BACKWAD_COMP_3	289,8790
#define CRT_ID_REGISTER_LOCK	290,8825
#define CRT_ID_CONFIG_1 291,8859
#define CRT_ID_CONFIG_2 292,8889
#define CRT_ID_REGISTER_LOCK_1	293,8919
#define CRT_ID_REGISTER_LOCK_2	294,8955
#define CRT_ID_MISC_1	295,8991
#define CRT_ID_DISPLAY_FIFO	296,9019
#define CRT_ID_LACE_RETR_START	297,9052
#define CRT_ID_SYSTEM_CONFIG	299,9135
#define CRT_ID_BIOS_FLAG	300,9169
#define CRT_ID_LACE_CONTROL	301,9199
#define CRT_ID_EXT_MODE 302,9232
#define CRT_ID_HWGC_MODE	303,9262
#define CRT_ID_HWGC_ORIGIN_X_HI	304,9330
#define CRT_ID_HWGC_ORIGIN_X_LO	305,9367
#define CRT_ID_HWGC_ORIGIN_Y_HI	306,9404
#define CRT_ID_HWGC_ORIGIN_Y_LO	307,9441
#define CRT_ID_HWGC_FG_STACK	308,9478
#define CRT_ID_HWGC_BG_STACK	309,9512
#define CRT_ID_HWGC_START_AD_HI	310,9546
#define CRT_ID_HWGC_START_AD_LO	311,9583
#define CRT_ID_HWGC_DSTART_X	312,9620
#define CRT_ID_HWGC_DSTART_Y	313,9654
#define CRT_ID_EXT_SYS_CNTL_1	315,9737
#define CRT_ID_EXT_SYS_CNTL_2	316,9772
#define CRT_ID_EXT_BIOS_FLAG_1	317,9807
#define CRT_ID_EXT_MEM_CNTL_1	318,9843
#define CRT_ID_EXT_MEM_CNTL_2	319,9878
#define CRT_ID_EXT_DAC_CNTL	320,9913
#define CRT_ID_EX_SYNC_1	321,9946
#define CRT_ID_EX_SYNC_2	322,9976
#define CRT_ID_LAW_CNTL	323,10006
#define CRT_ID_LAW_POS_HI	324,10070
#define CRT_ID_LAW_POS_LO	325,10101
#define CRT_ID_GOUT_PORT	326,10132
#define CRT_ID_EXT_HOR_OVF	327,10162
#define CRT_ID_EXT_VER_OVF	328,10194
#define CRT_ID_EXT_MEM_CNTL_3	329,10226
#define CRT_ID_EX_SYNC_3	330,10261
#define CRT_ID_EXT_MISC_CNTL	331,10291
#define CRT_ID_EXT_MISC_CNTL_1	332,10325
#define CRT_ID_EXT_MISC_CNTL_2	333,10361
#define CRT_ID_CONFIG_3 334,10397
#define CRT_ID_EXT_SYS_CNTL_3	335,10427
#define CRT_ID_EXT_SYS_CNTL_4	336,10462
#define CRT_ID_EXT_BIOS_FLAG_3	337,10497
#define CRT_ID_EXT_BIOS_FLAG_4	338,10533
#define ECR_SUBSYSTEM_STAT	341,10605
#define ECR_SUBSYSTEM_CNTL	342,10639
#define ECR_ADV_FUNC_CNTL	343,10673
#define ECR_CURRENT_Y_POS	344,10706
#define ECR_CURRENT_Y_POS2	345,10739
#define ECR_CURRENT_X_POS	346,10791
#define ECR_CURRENT_X_POS2	347,10824
#define ECR_DEST_Y__AX_STEP	348,10876
#define ECR_DEST_Y2__AX_STEP2	349,10911
#define ECR_DEST_X__DIA_STEP	350,10966
#define ECR_DEST_X2__DIA_STEP2	351,11002
#define ECR_ERR_TERM	352,11058
#define ECR_ERR_TERM2	353,11087
#define ECR_MAJ_AXIS_PIX_CNT	354,11135
#define ECR_MAJ_AXIS_PIX_CNT2	355,11171
#define ECR_GP_STAT	356,11226
#define ECR_DRAW_CMD	357,11284
#define ECR_DRAW_CMD2	358,11313
#define ECR_SHORT_STROKE	359,11361
#define ECR_BKGD_COLOR	360,11393
#define ECR_FRGD_COLOR	361,11448
#define ECR_BITPLANE_WRITE_MASK	362,11503
#define ECR_BITPLANE_READ_MASK	363,11542
#define ECR_COLOR_COMPARE	364,11580
#define ECR_BKGD_MIX	365,11613
#define ECR_FRGD_MIX	366,11642
#define ECR_READ_REG_DATA	367,11671
#define ECR_ID_MIN_AXIS_PIX_CNT	368,11704
#define ECR_ID_SCISSORS_TOP	369,11741
#define ECR_ID_SCISSORS_LEFT	370,11774
#define ECR_ID_SCISSORS_BUTTOM	371,11808
#define ECR_ID_SCISSORS_RIGHT	372,11844
#define ECR_ID_PIX_CNTL	373,11879
#define ECR_ID_MULT_CNTL_MISC_2	374,11909
#define ECR_ID_MULT_CNTL_MISC	375,11946
#define ECR_ID_READ_SEL	376,11981
#define ECR_PIX_TRANS	377,12011
#define ECR_PIX_TRANS_EXT	378,12041
#define ECR_PATTERN_Y	379,12074
#define ECR_PATTERN_X	380,12122
#define PASS_ADDRESS	384,12191
#define PASS_ADDRESS_W	385,12221
#define VDAC_ADDRESS	388,12270
#define VDAC_ADDRESS_W	389,12299
#define VDAC_ADDRESS_R	390,12330
#define VDAC_STATE	391,12361
#define VDAC_DATA	392,12388
#define VDAC_MASK	393,12414
#define WGfx(WGfx396,12442
#define WSeq(WSeq399,12548
#define WCrt(WCrt402,12654
#define WAttr(WAttr405,12760
#define SetTextPlane(SetTextPlane413,12936

drivers/video/cvisionppc.h,567
#define CVISIONPPC_H15,579
struct cvppc_par cvppc_par21,644
#define CSPPC_PCI_BRIDGE	27,740
#define CSPPC_BRIDGE_ENDIAN	28,777
#define CSPPC_BRIDGE_INT	29,813
#define	CVPPC_PCI_CONFIG	31,847
#define CVPPC_ROM_ADDRESS	32,884
#define CVPPC_REGS_REGION	33,922
#define CVPPC_FB_APERTURE_ONE	34,960
#define CVPPC_FB_APERTURE_TWO	35,1002
#define CVPPC_FB_SIZE	36,1044
#define CVPPC_MEM_CONFIG_OLD	37,1079
#define CVPPC_MEM_CONFIG_NEW	38,1142
#define CVPPC_MEMCLOCK	39,1201
#define CSPPCF_BRIDGE_BIG_ENDIAN	42,1273
#define CSPPCF_BRIDGE_ACTIVE_INT2	45,1335

drivers/video/pm2fb.h,5588
#define PM2FB_H13,524
#define PM2_REFERENCE_CLOCK	15,541
#define PM2_MAX_PIXCLOCK	16,590
#define PM2_REGS_SIZE	17,637
#define PM2TAG(PM2TAG19,669
#define PM2R_RESET_STATUS	25,920
#define PM2R_IN_FIFO_SPACE	26,956
#define PM2R_OUT_FIFO_WORDS	27,993
#define PM2R_APERTURE_ONE	28,1031
#define PM2R_APERTURE_TWO	29,1067
#define PM2R_FIFO_DISCON	30,1103
#define PM2R_CHIP_CONFIG	31,1138
#define PM2R_REBOOT	33,1174
#define PM2R_MEM_CONTROL	34,1205
#define PM2R_BOOT_ADDRESS	35,1240
#define PM2R_MEM_CONFIG	36,1276
#define PM2R_BYPASS_WRITE_MASK	37,1311
#define PM2R_FRAMEBUFFER_WRITE_MASK	38,1352
#define PM2R_OUT_FIFO	40,1398
#define PM2R_SCREEN_BASE	42,1432
#define PM2R_SCREEN_STRIDE	43,1467
#define PM2R_H_TOTAL	44,1504
#define PM2R_HG_END	45,1536
#define PM2R_HB_END	46,1567
#define PM2R_HS_START	47,1598
#define PM2R_HS_END	48,1631
#define PM2R_V_TOTAL	49,1662
#define PM2R_VB_END	50,1694
#define PM2R_VS_START	51,1725
#define PM2R_VS_END	52,1758
#define PM2R_VIDEO_CONTROL	53,1789
#define PM2R_LINE_COUNT	54,1826
#define PM2R_FIFO_CONTROL	55,1861
#define PM2R_RD_PALETTE_WRITE_ADDRESS	57,1898
#define PM2R_RD_PALETTE_DATA	58,1945
#define PM2R_RD_PALETTE_READ_ADDRESS	59,1984
#define PM2R_RD_INDEXED_DATA	60,2030
#define PM2R_START_X_DOM	62,2070
#define PM2R_D_X_DOM	63,2105
#define PM2R_START_X_SUB	64,2137
#define PM2R_D_X_SUB	65,2172
#define PM2R_START_Y	66,2204
#define PM2R_D_Y	67,2236
#define PM2R_COUNT	68,2264
#define PM2R_RENDER	69,2294
#define PM2R_RECTANGLE_ORIGIN	70,2325
#define PM2R_RECTANGLE_SIZE	71,2365
#define PM2R_PACKED_DATA_LIMITS	72,2403
#define PM2R_SCISSOR_MODE	73,2445
#define PM2R_SCREEN_SIZE	74,2481
#define PM2R_AREA_STIPPLE_MODE	75,2516
#define PM2R_WINDOW_ORIGIN	76,2557
#define PM2R_TEXTURE_ADDRESS_MODE	77,2594
#define PM2R_TEXTURE_MAP_FORMAT	78,2637
#define PM2R_TEXTURE_DATA_FORMAT	79,2679
#define PM2R_TEXTURE_READ_MODE	80,2721
#define PM2R_TEXEL_LUT_MODE	81,2762
#define PM2R_TEXTURE_COLOR_MODE	82,2800
#define PM2R_FOG_MODE	83,2842
#define PM2R_COLOR_DDA_MODE	84,2875
#define PM2R_ALPHA_BLEND_MODE	85,2913
#define PM2R_DITHER_MODE	86,2953
#define PM2R_FB_SOFT_WRITE_MASK	87,2988
#define PM2R_LOGICAL_OP_MODE	88,3030
#define PM2R_LB_READ_MODE	89,3069
#define PM2R_LB_READ_FORMAT	90,3105
#define PM2R_LB_SOURCE_OFFSET	91,3143
#define PM2R_LB_WINDOW_BASE	92,3183
#define PM2R_LB_WRITE_FORMAT	93,3221
#define PM2R_STENCIL_MODE	94,3260
#define PM2R_DEPTH_MODE	95,3296
#define PM2R_FB_READ_MODE	96,3331
#define PM2R_FB_SOURCE_OFFSET	97,3367
#define PM2R_FB_PIXEL_OFFSET	98,3407
#define PM2R_FB_WINDOW_BASE	99,3446
#define PM2R_FB_WRITE_MODE	100,3484
#define PM2R_FB_HARD_WRITE_MASK	101,3521
#define PM2R_FB_BLOCK_COLOR	102,3563
#define PM2R_FB_READ_PIXEL	103,3601
#define PM2R_FILTER_MODE	104,3638
#define PM2R_SYNC	105,3673
#define PM2R_YUV_MODE	106,3702
#define PM2R_STATISTICS_MODE	107,3735
#define PM2R_FB_SOURCE_DELTA	108,3774
#define PM2R_CONFIG	109,3813
#define PM2I_RD_CURSOR_CONTROL	112,3886
#define PM2I_RD_COLOR_MODE	113,3925
#define PM2I_RD_MODE_CONTROL	114,3960
#define PM2I_RD_MISC_CONTROL	115,3997
#define PM2I_RD_PIXEL_CLOCK_A1	116,4034
#define PM2I_RD_PIXEL_CLOCK_A2	117,4073
#define PM2I_RD_PIXEL_CLOCK_A3	118,4112
#define PM2I_RD_PIXEL_CLOCK_STATUS	119,4151
#define PM2I_RD_MEMORY_CLOCK_1	120,4193
#define PM2I_RD_MEMORY_CLOCK_2	121,4232
#define PM2I_RD_MEMORY_CLOCK_3	122,4271
#define PM2I_RD_MEMORY_CLOCK_STATUS	123,4310
#define PM2I_RD_COLOR_KEY_CONTROL	124,4353
#define PM2I_RD_OVERLAY_KEY	125,4394
#define PM2I_RD_RED_KEY	126,4430
#define PM2I_RD_GREEN_KEY	127,4463
#define PM2I_RD_BLUE_KEY	128,4497
#define PM2F_RENDER_AREASTIPPLE	131,4554
#define PM2F_RENDER_FASTFILL	132,4597
#define PM2F_RENDER_PRIMITIVE_MASK	133,4637
#define PM2F_RENDER_LINE	134,4682
#define PM2F_RENDER_TRAPEZOID	135,4712
#define PM2F_RENDER_POINT	136,4753
#define PM2F_RENDER_RECTANGLE	137,4790
#define PM2F_SYNCHRONIZATION	138,4831
#define PM2F_PLL_LOCKED	139,4872
#define PM2F_BEING_RESET	140,4905
#define PM2F_DATATYPE_COLOR	141,4942
#define PM2F_VGA_ENABLE	142,4980
#define PM2F_VGA_FIXED	143,5013
#define PM2F_FB_WRITE_ENABLE	144,5045
#define PM2F_FB_READ_SOURCE_ENABLE	145,5082
#define PM2F_RD_PALETTE_WIDTH_8	146,5126
#define PM2F_PART_PROD_MASK	147,5166
#define PM2F_SCREEN_SCISSOR_ENABLE	148,5204
#define PM2F_DATA_64_ENABLE	149,5246
#define PM2F_BLANK_LOW	150,5288
#define PM2F_HSYNC_MASK	151,5320
#define PM2F_VSYNC_MASK	152,5353
#define PM2F_HSYNC_ACT_HIGH	153,5386
#define PM2F_HSYNC_FORCED_LOW	154,5422
#define PM2F_HSYNC_ACT_LOW	155,5460
#define PM2F_VSYNC_ACT_HIGH	156,5495
#define PM2F_VSYNC_FORCED_LOW	157,5531
#define PM2F_VSYNC_ACT_LOW	158,5569
#define PM2F_LINE_DOUBLE	159,5604
#define PM2F_VIDEO_ENABLE	160,5637
#define PM2F_RD_GUI_ACTIVE	161,5671
#define PM2F_RD_COLOR_MODE_RGB	162,5706
#define PM2F_RD_TRUECOLOR	163,5745
#define PM2F_NO_ALPHA_BUFFER	164,5779
#define PM2F_TEXTEL_SIZE_16	165,5816
#define PM2F_TEXTEL_SIZE_32	166,5858
#define PM2F_TEXTEL_SIZE_4	167,5900
#define PM2F_TEXTEL_SIZE_24	168,5941
#define PM2F_INCREASE_X	169,5983
#define PM2F_INCREASE_Y	170,6020
#define PM2F_CONFIG_FB_WRITE_ENABLE	171,6057
#define PM2F_CONFIG_FB_PACKED_DATA	172,6103
#define PM2F_CONFIG_FB_READ_DEST_ENABLE	173,6148
#define PM2F_CONFIG_FB_READ_SOURCE_ENABLE	174,6198
#define PM2F_COLOR_KEY_TEST_OFF	175,6249
#define PM2F_MEM_CONFIG_RAM_MASK	176,6292
#define PM2F_MEM_BANKS_1	177,6336
#define PM2F_MEM_BANKS_2	178,6367
#define PM2F_MEM_BANKS_3	179,6404
#define PM2F_MEM_BANKS_4	180,6441

drivers/video/fm2fb.c,1656
#define FRAMEMASTER_SIZE	125,4136
#define FRAMEMASTER_REG	126,4170
#define FRAMEMASTER_NOLACE	128,4205
#define FRAMEMASTER_ENABLE	129,4234
#define FRAMEMASTER_COMPL	130,4263
#define FRAMEMASTER_ROM	131,4291
struct FrameMaster_fb_parFrameMaster_fb_par134,4320
static unsigned long fm2fb_mem_phys;142,4399
static void *fm2fb_mem;143,4436
static unsigned long fm2fb_reg_phys;144,4460
static volatile unsigned char *fm2fb_reg;145,4497
#define arraysize(arraysize147,4540
static int currcon 149,4587
static struct display disp;150,4611
static struct fb_info fb_info;151,4639
static struct { u_char red, green, blue, pad; } palette[152,4670
static u32 fbcon_cfb32_cmap[154,4754
static struct fb_fix_screeninfo fb_fix;157,4795
static struct fb_var_screeninfo fb_var;158,4835
static int fm2fb_mode __initdata 160,4876
#define FM2FB_MODE_PAL	162,4916
#define FM2FB_MODE_NTSC	163,4941
static struct fb_var_screeninfo fb_var_modes[165,4968
static struct fb_var_screeninfo fb_var_modes[] __initdata 165,4968
static struct fb_ops fm2fb_ops 225,6997
static int fm2fb_open(235,7241
static int fm2fb_release(245,7606
static int fm2fb_get_fix(256,7817
static int fm2fb_get_var(268,8035
static int fm2fb_set_var(280,8253
static int fm2fb_pan_display(319,9266
static int fm2fb_get_cmap(332,9486
static int fm2fb_set_cmap(348,9934
static int fm2fb_ioctl(366,10397
__initfunc(377,10588
__initfunc(469,13482
static int fm2fbcon_switch(486,13842
static int fm2fbcon_updatevar(502,14221
static void fm2fbcon_blank(512,14362
static int fm2fb_getcolreg(526,14682
static int fm2fb_setcolreg(545,15296
static void do_install_cmap(564,15724

drivers/video/q40fb.c,847
#define Q40_PHYS_SCREEN_ADDR 21,434
static unsigned long q40_screen_addr;22,474
static u16 fbcon_cmap_cfb16[24,513
static struct display disp[52,1633
static struct fb_info fb_info;53,1678
static struct fb_ops q40fb_ops 54,1709
static int currcon=59,1885
static char q40fb_name[61,1908
static int q40fb_open(63,1941
static int q40fb_release(73,2124
static int q40fb_get_fix(79,2232
static int q40fb_get_var(101,2726
static int q40fb_set_var(139,3558
static int q40_getcolreg(181,4398
static int q40_setcolreg(200,4945
static int q40fb_get_cmap(222,5457
static int q40fb_set_cmap(241,5968
static int q40fb_pan_display(265,6515
static int q40fb_ioctl(274,6673
static void q40fb_set_disp(281,6842
void q40fb_init(313,7568
static int q40con_switch(347,8442
static int q40con_updatevar(355,8532
static void q40con_blank(360,8607

drivers/video/sgivwfb.c,1652
#define INCLUDE_TIMING_TABLE_DATA33,832
#define DBE_REG_BASE 34,866
struct sgivwfb_par sgivwfb_par37,914
u_long                sgivwfb_mem_phys;51,1208
u_long                sgivwfb_mem_size;52,1248
static volatile char  *fbmem;54,1289
static asregs         *regs;55,1319
static struct fb_info fb_info;56,1348
static struct { u_char red, green, blue, pad; } palette[57,1379
static char           sgivwfb_name[58,1441
static u32            cmap_fifo;59,1499
static int            ypan 60,1532
static int            ywrap 61,1570
static int currcon 64,1641
static struct display disp;65,1665
} fbcon_cmap;74,1803
static struct sgivwfb_par par_current 76,1818
static struct fb_ops sgivwfb_ops 112,3230
static unsigned long get_line_length(147,4325
static unsigned long bytes_per_pixel(152,4441
static void dbe_TurnOffDma(182,4987
static void activate_par(246,6763
static void sgivwfb_encode_fix(498,14721
static int sgivwfb_getcolreg(527,15552
static int sgivwfb_setcolreg(546,16081
static void do_install_cmap(567,16635
static int sgivwfb_open(583,17052
static int sgivwfb_release(592,17207
static int sgivwfb_get_fix(601,17350
static int sgivwfb_get_var(617,17697
static int sgivwfb_set_var(631,17994
static int sgivwfb_pan_display(833,23936
static int sgivwfb_get_cmap(863,24701
static int sgivwfb_set_cmap(879,25180
static int sgivwfb_ioctl(899,25721
static int sgivwfb_mmap(905,25867
__initfunc(921,26476
__initfunc(940,26833
static int sgivwfbcon_switch(992,28226
static int sgivwfbcon_updatevar(1007,28587
static void sgivwfbcon_blank(1016,28717
int init_module(1022,28816
void cleanup_module(1028,28873

drivers/video/sgivwfb.h,6190
#define __SGIVWFB_H__13,379
#define DBE_GETREG(DBE_GETREG15,402
#define DBE_SETREG(DBE_SETREG16,469
#define DBE_IGETREG(DBE_IGETREG17,533
#define DBE_ISETREG(DBE_ISETREG18,607
#define MASK(MASK20,681
#define GET(GET21,756
#define SET(SET22,828
#define GET_DBE_FIELD(GET_DBE_FIELD24,932
#define SET_DBE_FIELD(SET_DBE_FIELD25,1039
#define DBE_REG_PHYS	29,1211
#define DBE_REG_SIZE 30,1243
} asregs;asregs124,5347
#define DBE_CTRLSTAT_CHIPID_MSB 128,5386
#define DBE_CTRLSTAT_CHIPID_LSB 129,5424
#define DBE_CTRLSTAT_SENSE_N_MSB 130,5462
#define DBE_CTRLSTAT_SENSE_N_LSB 131,5500
#define DBE_CTRLSTAT_PCLKSEL_MSB 132,5538
#define DBE_CTRLSTAT_PCLKSEL_LSB 133,5577
#define DBE_DOTCLK_M_MSB 135,5617
#define DBE_DOTCLK_M_LSB 136,5655
#define DBE_DOTCLK_N_MSB 137,5693
#define DBE_DOTCLK_N_LSB 138,5732
#define DBE_DOTCLK_P_MSB 139,5770
#define DBE_DOTCLK_P_LSB 140,5809
#define DBE_DOTCLK_RUN_MSB 141,5848
#define DBE_DOTCLK_RUN_LSB 142,5887
#define DBE_VT_XY_VT_FREEZE_MSB 144,5927
#define DBE_VT_XY_VT_FREEZE_LSB 145,5966
#define DBE_VT_VSYNC_VT_VSYNC_ON_MSB 147,6006
#define DBE_VT_VSYNC_VT_VSYNC_ON_LSB 148,6053
#define DBE_VT_VSYNC_VT_VSYNC_OFF_MSB 149,6100
#define DBE_VT_VSYNC_VT_VSYNC_OFF_LSB 150,6147
#define DBE_VT_HSYNC_VT_HSYNC_ON_MSB 152,6194
#define DBE_VT_HSYNC_VT_HSYNC_ON_LSB 153,6241
#define DBE_VT_HSYNC_VT_HSYNC_OFF_MSB 154,6288
#define DBE_VT_HSYNC_VT_HSYNC_OFF_LSB 155,6335
#define DBE_VT_VBLANK_VT_VBLANK_ON_MSB 157,6382
#define DBE_VT_VBLANK_VT_VBLANK_ON_LSB 158,6431
#define DBE_VT_VBLANK_VT_VBLANK_OFF_MSB 159,6480
#define DBE_VT_VBLANK_VT_VBLANK_OFF_LSB 160,6529
#define DBE_VT_HBLANK_VT_HBLANK_ON_MSB 162,6578
#define DBE_VT_HBLANK_VT_HBLANK_ON_LSB 163,6627
#define DBE_VT_HBLANK_VT_HBLANK_OFF_MSB 164,6676
#define DBE_VT_HBLANK_VT_HBLANK_OFF_LSB 165,6725
#define DBE_VT_VCMAP_VT_VCMAP_ON_MSB 167,6774
#define DBE_VT_VCMAP_VT_VCMAP_ON_LSB 168,6821
#define DBE_VT_VCMAP_VT_VCMAP_OFF_MSB 169,6868
#define DBE_VT_VCMAP_VT_VCMAP_OFF_LSB 170,6915
#define DBE_VT_HCMAP_VT_HCMAP_ON_MSB 172,6962
#define DBE_VT_HCMAP_VT_HCMAP_ON_LSB 173,7009
#define DBE_VT_HCMAP_VT_HCMAP_OFF_MSB 174,7056
#define DBE_VT_HCMAP_VT_HCMAP_OFF_LSB 175,7103
#define DBE_VT_XYMAX_VT_MAXX_MSB 177,7150
#define DBE_VT_XYMAX_VT_MAXX_LSB 178,7189
#define DBE_VT_XYMAX_VT_MAXY_MSB 179,7227
#define DBE_VT_XYMAX_VT_MAXY_LSB 180,7266
#define DBE_VT_HPIXEN_VT_HPIXEN_ON_MSB 182,7306
#define DBE_VT_HPIXEN_VT_HPIXEN_ON_LSB 183,7353
#define DBE_VT_HPIXEN_VT_HPIXEN_OFF_MSB 184,7400
#define DBE_VT_HPIXEN_VT_HPIXEN_OFF_LSB 185,7447
#define DBE_VT_VPIXEN_VT_VPIXEN_ON_MSB 187,7494
#define DBE_VT_VPIXEN_VT_VPIXEN_ON_LSB 188,7541
#define DBE_VT_VPIXEN_VT_VPIXEN_OFF_MSB 189,7588
#define DBE_VT_VPIXEN_VT_VPIXEN_OFF_LSB 190,7635
#define DBE_OVR_CONTROL_OVR_DMA_ENABLE_MSB 192,7682
#define DBE_OVR_CONTROL_OVR_DMA_ENABLE_LSB 193,7728
#define DBE_OVR_INHWCTRL_OVR_DMA_ENABLE_MSB 195,7775
#define DBE_OVR_INHWCTRL_OVR_DMA_ENABLE_LSB 196,7821
#define DBE_OVR_WIDTH_TILE_OVR_FIFO_RESET_MSB 198,7868
#define DBE_OVR_WIDTH_TILE_OVR_FIFO_RESET_LSB 199,7923
#define DBE_FRM_CONTROL_FRM_DMA_ENABLE_MSB 201,7979
#define DBE_FRM_CONTROL_FRM_DMA_ENABLE_LSB 202,8025
#define DBE_FRM_CONTROL_FRM_TILE_PTR_MSB 203,8071
#define DBE_FRM_CONTROL_FRM_TILE_PTR_LSB 204,8118
#define DBE_FRM_CONTROL_FRM_LINEAR_MSB 205,8164
#define DBE_FRM_CONTROL_FRM_LINEAR_LSB 206,8210
#define DBE_FRM_INHWCTRL_FRM_DMA_ENABLE_MSB 208,8257
#define DBE_FRM_INHWCTRL_FRM_DMA_ENABLE_LSB 209,8303
#define DBE_FRM_SIZE_TILE_FRM_WIDTH_TILE_MSB 211,8350
#define DBE_FRM_SIZE_TILE_FRM_WIDTH_TILE_LSB 212,8405
#define DBE_FRM_SIZE_TILE_FRM_RHS_MSB 213,8459
#define DBE_FRM_SIZE_TILE_FRM_RHS_LSB 214,8505
#define DBE_FRM_SIZE_TILE_FRM_DEPTH_MSB 215,8551
#define DBE_FRM_SIZE_TILE_FRM_DEPTH_LSB 216,8598
#define DBE_FRM_SIZE_TILE_FRM_FIFO_RESET_MSB 217,8645
#define DBE_FRM_SIZE_TILE_FRM_FIFO_RESET_LSB 218,8700
#define DBE_FRM_SIZE_PIXEL_FB_HEIGHT_PIX_MSB 220,8756
#define DBE_FRM_SIZE_PIXEL_FB_HEIGHT_PIX_LSB 221,8811
#define DBE_DID_CONTROL_DID_DMA_ENABLE_MSB 223,8867
#define DBE_DID_CONTROL_DID_DMA_ENABLE_LSB 224,8913
#define DBE_DID_INHWCTRL_DID_DMA_ENABLE_MSB 225,8959
#define DBE_DID_INHWCTRL_DID_DMA_ENABLE_LSB 226,9005
#define DBE_DID_START_XY_DID_STARTY_MSB 228,9052
#define DBE_DID_START_XY_DID_STARTY_LSB 229,9099
#define DBE_DID_START_XY_DID_STARTX_MSB 230,9146
#define DBE_DID_START_XY_DID_STARTX_LSB 231,9193
#define DBE_CRS_START_XY_CRS_STARTY_MSB 233,9240
#define DBE_CRS_START_XY_CRS_STARTY_LSB 234,9287
#define DBE_CRS_START_XY_CRS_STARTX_MSB 235,9334
#define DBE_CRS_START_XY_CRS_STARTX_LSB 236,9381
#define DBE_WID_TYP_MSB 238,9428
#define DBE_WID_TYP_LSB 239,9458
#define DBE_WID_BUF_MSB 240,9488
#define DBE_WID_BUF_LSB 241,9518
#define DBE_VC_START_XY_VC_STARTY_MSB 243,9549
#define DBE_VC_START_XY_VC_STARTY_LSB 244,9596
#define DBE_VC_START_XY_VC_STARTX_MSB 245,9643
#define DBE_VC_START_XY_VC_STARTX_LSB 246,9690
#define DBE_FRM_DEPTH_8 250,9754
#define DBE_FRM_DEPTH_16 251,9784
#define DBE_FRM_DEPTH_32 252,9814
#define DBE_CMODE_I8 254,9845
#define DBE_CMODE_I12 255,9875
#define DBE_CMODE_RG3B2 256,9905
#define DBE_CMODE_RGB4 257,9935
#define DBE_CMODE_ARGB5 258,9965
#define DBE_CMODE_RGB8 259,9995
#define DBE_CMODE_RGBA5 260,10025
#define DBE_CMODE_RGB10 261,10055
#define DBE_BMODE_BOTH 263,10086
#define DBE_CRS_MAGIC 265,10117
#define DBE_CONFIG_VDAC_ENABLE 269,10195
#define DBE_CONFIG_VDAC_GSYNC 270,10243
#define DBE_CONFIG_VDAC_PBLANK 271,10291
#define DBE_CONFIG_FPENABLE 272,10339
#define DBE_CONFIG_LENDIAN 273,10387
#define DBE_CONFIG_TILEHIST 274,10435
#define DBE_CONFIG_EXT_ADDR 275,10483
#define DBE_CONFIG_FBDEV 277,10532
} dbe_timing_t;dbe_timing_t321,11491
typedef struct dbe_timing_infodbe_timing_info329,11555
} dbe_timing_info_t;dbe_timing_info_t350,12457
#define DBE_VOF_UNKNOWNMON 354,12519
#define DBE_VOF_STEREO 355,12551
#define DBE_VOF_DO_GENSYNC 356,12583
#define DBE_VOF_SYNC_ON_GREEN 357,12651
#define DBE_VOF_FLATPANEL 358,12712
#define DBE_VOF_MAGICKEY 359,12776
struct dbe_timing_info dbeVTimings[366,12899
#define DBE_VT_SIZE 657,24073

drivers/misc/parport_init.c,419
static int io[22,522
static int io[PARPORT_MAX+1] __initdata 22,522
static int irq[23,593
static int irq[PARPORT_MAX] __initdata 23,593
static int dma[24,685
static int dma[PARPORT_MAX] __initdata 24,685
static int parport_setup_ptr __initdata 29,865
__initfunc(31,911
int init_module(99,2466
void cleanup_module(105,2563
__initfunc(112,2626
void inc_parport_count(151,3572
void dec_parport_count(158,3647

drivers/misc/parport_arc.c,386
#define DATA_LATCH 31,1013
static unsigned char data_copy;34,1116
static void arc_interrupt(36,1149
static void arc_write_data(41,1285
static unsigned char arc_read_data(47,1400
static void arc_inc_use_count(52,1478
static void arc_dec_use_count(59,1560
static void arc_fill_inode(66,1642
static struct parport_operations parport_arc_ops 76,1785
int parport_arc_init(127,2668

drivers/misc/parport_pc.c,2339
#define PARPORT_PC_MAX_PORTS 54,1585
static void parport_pc_interrupt(56,1618
void parport_pc_write_epp(61,1761
unsigned char parport_pc_read_epp(66,1855
void parport_pc_write_epp_addr(71,1943
unsigned char parport_pc_read_epp_addr(76,2042
int parport_pc_check_epp_timeout(81,2135
unsigned char parport_pc_read_configb(89,2282
void parport_pc_write_data(94,2374
unsigned char parport_pc_read_data(99,2466
void parport_pc_write_control(104,2552
unsigned char parport_pc_read_control(109,2650
unsigned char parport_pc_frob_control(114,2742
void parport_pc_write_status(121,2947
unsigned char parport_pc_read_status(126,3043
void parport_pc_write_econtrol(131,3133
unsigned char parport_pc_read_econtrol(136,3233
unsigned char parport_pc_frob_econtrol(141,3327
void parport_pc_change_mode(148,3535
void parport_pc_write_fifo(153,3607
unsigned char parport_pc_read_fifo(158,3703
void parport_pc_disable_irq(163,3793
void parport_pc_enable_irq(168,3883
void parport_pc_release_resources(173,3975
int parport_pc_claim_resources(182,4196
void parport_pc_init_state(195,4533
void parport_pc_save_state(201,4630
void parport_pc_restore_state(208,4830
size_t parport_pc_epp_read_block(215,5033
size_t parport_pc_epp_write_block(226,5268
int parport_pc_ecp_read_block(237,5520
int parport_pc_ecp_write_block(242,5689
void parport_pc_inc_use_count(247,5859
void parport_pc_dec_use_count(254,5941
static void parport_pc_fill_inode(261,6023
struct parport_operations parport_pc_ops 271,6173
int parport_pc_epp_clear_timeout(325,7203
static int parport_SPP_supported(346,7709
static int parport_ECR_present(379,8709
static int parport_ECP_supported(412,9501
static int parport_EPP_supported(447,10573
static int parport_ECPEPP_supported(468,11137
static int parport_PS2_supported(504,12393
static int parport_ECPPS2_supported(524,12900
static int programmable_irq_support(544,13333
static int irq_probe_ECP(561,13743
static int irq_probe_EPP(588,14394
static int irq_probe_SPP(629,15261
static int parport_irq_probe(677,16509
static int probe_one_port(708,17202
#define printmode(printmode751,18515
int parport_pc_init(785,19347
static int io[804,19828
static int dma[805,19906
static int irqval[806,20000
static const char *irq[807,20102
int init_module(812,20358
void cleanup_module(823,20635

drivers/misc/parport_ieee1284.c,81
int parport_wait_peripheral(22,785
int parport_ieee1284_nibble_mode_ok(48,1566

drivers/misc/parport_share.c,504
#define PARPORT_DEFAULT_TIMESLICE	38,866
static struct parport *portlist 40,908
spinlock_t parportlist_lock 41,971
struct parport *parport_enumerate(46,1132
struct parport *parport_register_port(59,1412
void parport_unregister_port(141,3322
void parport_quiesce(174,4167
struct pardevice *parport_register_device(193,4551
void parport_unregister_device(287,6913
int parport_claim(332,7779
int parport_claim_or_block(430,10461
void parport_release(469,11488
void parport_parse_irqs(520,12922

drivers/misc/parport_procfs.c,729
struct proc_dir_entry *base 33,804
static int irq_write_proc(35,841
static int irq_read_proc(116,2405
static int devices_read_proc(137,2814
static int hardware_read_proc(160,3244
#define printmode(printmode185,3880
static int autoprobe_read_proc 202,4195
static inline void destroy_proc_entry(231,4937
static void destroy_proc_tree(239,5110
static struct proc_dir_entry *new_proc_entry(253,5556
static void parport_modcount(297,6563
int parport_proc_init(307,6712
void parport_proc_cleanup(320,6976
int parport_proc_register(329,7104
int parport_proc_unregister(385,8513
int parport_proc_register(393,8608
int parport_proc_unregister(398,8670
int parport_proc_init(403,8733
void parport_proc_cleanup(408,8777

drivers/misc/parport_ax.c,1859
#define DATA	40,909
#define STATUS	41,928
#define CONTROL	42,949
#define EPPADDR	43,971
#define EPPDATA	44,993
#define CFIFO	46,1016
#define DFIFO	47,1037
#define TFIFO	48,1058
#define CONFIGA	49,1079
#define CONFIGB	50,1102
#define ECONTROL	51,1125
static void parport_ax_interrupt(53,1149
parport_ax_write_epp(59,1297
parport_ax_read_epp(65,1402
parport_ax_write_epp_addr(71,1483
parport_ax_read_epp_addr(77,1593
parport_ax_check_epp_timeout(85,1734
parport_ax_read_configb(94,1891
parport_ax_write_data(100,1976
parport_ax_read_data(106,2079
parport_ax_write_control(112,2158
parport_ax_read_control(118,2267
parport_ax_frob_control(124,2361
parport_ax_write_status(132,2561
parport_ax_read_status(138,2668
parport_ax_write_econtrol(144,2751
parport_ax_read_econtrol(150,2862
parport_ax_frob_econtrol(156,2958
parport_ax_change_mode(164,3160
parport_ax_write_fifo(170,3263
parport_ax_read_fifo(176,3367
parport_ax_disable_irq(182,3447
parport_ax_enable_irq(193,3681
parport_ax_release_resources(204,3911
parport_ax_claim_resources(218,4254
parport_ax_init_state(239,4775
parport_ax_save_state(246,4872
parport_ax_restore_state(253,5035
parport_ax_epp_read_block(260,5203
parport_ax_epp_write_block(266,5309
parport_ax_ecp_read_block(272,5413
parport_ax_ecp_write_block(280,5586
parport_ax_inc_use_count(288,5763
parport_ax_dec_use_count(296,5845
static void parport_ax_fill_inode(303,5922
static struct parport_operations parport_ax_ops 313,6072
int parport_ax_epp_clear_timeout(370,7135
static int parport_ECR_present(399,8010
static int parport_ECP_supported(429,8768
static int parport_PS2_supported(468,10219
static int parport_ECPPS2_supported(486,10676
#define printmode(printmode502,11005
init_one_port(511,11151
EXPORT_NO_SYMBOLS;600,13372
int init_module(603,13406
cleanup_module(623,13746

drivers/macintosh/adb.c,699
enum adb_hw adb_hardware 27,545
static struct adb_handler adb_handler33,733
} adb_handler[37,864
static int adb_nodev(41,900
static void printADBreply(47,950
static int adb_scan_bus(59,1192
void adb_init(149,3737
adb_request(168,4151
adb_register(197,5009
adb_input(221,5619
adb_try_handler_change(240,6072
adb_get_infos(264,6674
#define ADB_MAJOR	277,6926
struct adbdev_state adbdev_state281,7012
static void adb_write_done(289,7154
static int adb_open(318,7829
static int adb_release(337,8273
static long long adb_lseek(357,8741
static ssize_t adb_read(362,8836
static ssize_t adb_write(421,10043
static struct file_operations adb_fops 486,11348
void adbdev_init(499,11574

drivers/macintosh/nvram.c,272
#define NVRAM_SIZE	14,273
static long long nvram_llseek(18,314
static ssize_t read_nvram(34,581
static ssize_t write_nvram(51,963
static int nvram_open(71,1381
struct file_operations nvram_fops 76,1459
static struct miscdevice nvram_dev 90,1739
__initfunc(96,1819

drivers/macintosh/macserial.c,3325
#define NUM_SERIAL	51,1188
#define NUM_CHANNELS	52,1249
#define RECOVERY_DELAY	57,1471
struct mac_zschannel zs_channels[59,1503
struct mac_serial zs_soft[61,1552
int zs_channels_found;62,1593
struct mac_serial *zs_chain;63,1616
struct tty_struct zs_ttys[65,1673
static int is_powerbook;67,1715
static struct console sercons;70,1770
struct mac_zschannel *zs_kgdbchan;74,1828
static unsigned char scc_inittab[75,1863
#define ZS_CLOCK 86,2257
static struct tty_driver serial_driver,90,2365
static struct tty_driver serial_driver, callout_driver;90,2365
static int serial_refcount;91,2421
#define SERIAL_TYPE_NORMAL	94,2483
#define SERIAL_TYPE_CALLOUT	95,2512
#define WAKEUP_CHARS 98,2613
#define RS_STROBE_TIME 111,2842
#define RS_ISR_PASS_LIMIT 112,2868
#define _INLINE_ 114,2899
static struct tty_struct *serial_table[122,3208
static struct termios *serial_termios[123,3262
static struct termios *serial_termios_locked[124,3315
#define MIN(MIN127,3388
static unsigned char tmp_buf[139,3915
static struct semaphore tmp_buf_sem 140,3974
static inline int serial_paranoia_check(144,4036
static inline unsigned char read_zsreg(168,4617
static inline void write_zsreg(188,5028
static inline unsigned char read_zsdata(204,5378
static inline void write_zsdata(213,5537
static inline void load_zsregs(221,5681
static inline void zs_rtsdtr(244,6420
static inline int get_zsbaud(255,6664
static inline void rs_recv_clear(275,7363
static _INLINE_ void rs_sched_event(296,8056
static _INLINE_ void receive_chars(304,8231
static void transmit_chars(359,9510
static _INLINE_ void status_handle(388,10208
static void rs_interrupt(440,11442
#define CHAN_IRQMASK 452,11891
static void rs_stop(495,12991
static void rs_start(518,13498
static void do_serial_bh(555,14644
static void do_softint(560,14709
static void rs_timer(577,15106
static int startup(581,15138
static int setup_scc(618,15866
static void shutdown(689,17574
static void set_scc_power(735,18643
static void change_speed(833,21578
static void rs_flush_chars(988,25127
static int rs_write(1006,25544
static int rs_write_room(1050,26675
static int rs_chars_in_buffer(1063,26970
static void rs_flush_buffer(1072,27205
static void rs_throttle(1095,27908
static void rs_unthrottle(1132,28897
static int get_serial_info(1173,29850
static int set_serial_info(1193,30369
static int get_lsr_info(1249,32089
static int get_modem_info(1260,32284
static int set_modem_info(1277,32696
static void rs_break(1312,33431
static int rs_ioctl(1331,33882
static void rs_set_termios(1395,35594
static void rs_close(1420,36240
static void rs_wait_until_sent(1528,39342
static void rs_hangup(1574,40758
static int block_til_ready(1595,41303
static int rs_open(1727,44830
static void show_serial_version(1810,46676
probe_sccs(1817,46863
int macserial_init(1867,48288
int register_serial(2035,53179
void unregister_serial(2040,53243
static void serial_console_write(2058,53594
static int serial_console_wait_key(2066,53737
static kdev_t serial_console_device(2071,53808
__initfunc(2082,54113
static struct console sercons 2156,55177
__initfunc 2173,55395
void putDebugChar(2183,55635
char getDebugChar(2191,55811
void kgdb_interruptible(2199,55982
static inline void kgdb_chaninit(2220,56486
__initfunc(2242,57174

drivers/macintosh/mac_keyb.c,2322
#define KEYB_KEYREG	31,639
#define KEYB_LEDREG	32,699
#define MOUSE_DATAREG	33,763
static u_short macplain_map[35,836
static u_short macplain_map[NR_KEYS] __initdata 35,836
static u_short macshift_map[54,1932
static u_short macshift_map[NR_KEYS] __initdata 54,1932
static u_short macaltgr_map[73,3028
static u_short macaltgr_map[NR_KEYS] __initdata 73,3028
static u_short macctrl_map[92,4124
static u_short macctrl_map[NR_KEYS] __initdata 92,4124
static u_short macshift_ctrl_map[111,5219
static u_short macshift_ctrl_map[NR_KEYS] __initdata 111,5219
static u_short macalt_map[130,6320
static u_short macalt_map[NR_KEYS] __initdata 130,6320
static u_short macctrl_alt_map[149,7414
static u_short macctrl_alt_map[NR_KEYS] __initdata 149,7414
static struct timer_list repeat_timer 170,8553
static int last_keycode;171,8627
int adb_emulate_buttons 187,9135
int adb_button2_keycode 188,9164
int adb_button3_keycode 189,9220
extern int console_loglevel;192,9283
extern struct kbd_struct kbd_table[194,9313
extern struct wait_queue * keypress_wait;195,9351
static struct adb_ids keyboard_ids;199,9439
static struct adb_ids mouse_ids;200,9475
static struct adb_ids buttons_ids;201,9508
#define ADBMOUSE_STANDARD_100	204,9565
#define ADBMOUSE_STANDARD_200	205,9637
#define ADBMOUSE_EXTENDED	206,9709
#define ADBMOUSE_TRACKBALL	207,9776
#define ADBMOUSE_TRACKPAD 208,9833
#define ADBMOUSE_TURBOMOUSE5 209,9912
static int adb_mouse_kinds[211,9994
static unsigned char dont_repeat[214,10085
int mackbd_setkeycode(227,10595
int mackbd_getkeycode(232,10684
int mackbd_pretranslate(237,10751
int mackbd_translate(242,10830
int mackbd_unexpected_up(259,11219
keyboard_input(265,11298
input_keycode(277,11651
kbd_repeat(356,13630
static void mac_put_queue(366,13772
mouse_input(381,14086
extern int backlight_level;499,18137
buttons_input(502,18178
static unsigned char mac_ledmap[557,19338
static struct adb_request led_request;568,19607
static int leds_pending[569,19646
static int pending_devs[570,19675
static int pending_led_start=571,19704
static int pending_led_end=572,19736
static void real_mackbd_leds(574,19767
void mackbd_leds(591,20221
static void leds_done(599,20362
__initfunc(614,20723
init_trackpad(699,23887
init_trackball(751,25078
init_turbomouse(785,25806

drivers/macintosh/via-pmu.c,2937
#define PMU_MINOR	37,1065
static volatile unsigned char *via;39,1088
#define RS	42,1172
#define B	43,1220
#define A	44,1252
#define DIRB	45,1285
#define DIRA	46,1341
#define T1CL	47,1397
#define T1CH	48,1456
#define T1LL	49,1514
#define T1LH	50,1569
#define T2CL	51,1625
#define T2CH	52,1684
#define SR	53,1742
#define ACR	54,1784
#define PCR	55,1839
#define IFR	56,1895
#define IER	57,1947
#define ANH	58,2001
#define TACK	61,2103
#define TREQ	62,2158
#define SR_CTRL	65,2229
#define SR_EXT	66,2286
#define SR_OUT	67,2338
#define IER_SET	70,2408
#define IER_CLR	71,2453
#define SR_INT	72,2497
#define CB1_INT	73,2551
static enum pmu_state pmu_state75,2605
	idle,76,2629
	sending,77,2636
	intack,78,2646
	reading,79,2655
	reading_intr,80,2665
} pmu_state;81,2680
static struct adb_request *current_req;83,2694
static struct adb_request *last_req;84,2734
static struct adb_request *req_awaiting_reply;85,2771
static unsigned char interrupt_data[86,2818
static unsigned char *reply_ptr;87,2859
static int data_index;88,2892
static int data_len;89,2915
static int adb_int_pending;90,2936
static int pmu_adb_flags;91,2964
static int adb_dev_map 92,2990
static struct adb_request bright_req_1,93,3018
static struct adb_request bright_req_1, bright_req_2,93,3018
static struct adb_request bright_req_1, bright_req_2, bright_req_3;93,3018
static struct device_node *vias;94,3086
static int pmu_kind 95,3119
int asleep;97,3155
struct notifier_block *sleep_notifier_list;98,3167
static s8 pmu_data_len[122,4070
static s8 pmu_data_len[256][2] __openfirmwaredata 122,4070
find_via_pmu(160,6500
via_pmu_init(216,7944
init_pmu(245,8552
pmu_get_model(282,9297
pmu_adb_send_request(289,9392
pmu_adb_autopoll(314,9898
pmu_reset_bus(334,10282
pmu_request(377,11090
pmu_send_request(409,11870
pmu_queue_request(455,12892
send_byte(494,13529
recv_byte(502,13676
pmu_start(510,13812
pmu_poll(535,14305
via_pmu_interrupt(546,14478
pmu_sr_intr(582,15292
pmu_done(678,17206
pmu_handle_data(687,17391
int backlight_level 730,18348
int backlight_enabled 731,18374
#define LEVEL_TO_BRIGHT(LEVEL_TO_BRIGHT733,18402
pmu_enable_backlight(736,18491
pmu_set_brightness(779,19605
pmu_enable_irled(806,20386
set_volume(820,20650
pmu_restart(825,20697
pmu_shutdown(844,21025
static struct pci_save pci_save870,21511
} *pbook_pci_saves;874,21577
static int n_pbook_pci_saves;875,21597
pbook_pci_save(878,21662
pbook_pci_restore(905,22286
#define IRQ_ENABLE	940,23123
#define MEM_CTRL	941,23171
int __openfirmware powerbook_sleep(943,23218
static int __openfirmware pmu_open(1042,25764
static ssize_t __openfirmware pmu_read(1047,25855
static ssize_t __openfirmware pmu_write(1053,25971
static int /*__openfirmware*/ pmu_ioctl(1060,26163
static struct file_operations pmu_device_fops 1084,26750
static struct miscdevice pmu_device 1097,26989
void pmu_device_init(1101,27069

drivers/macintosh/via-cuda.c,1417
static volatile unsigned char *via;25,667
#define RS	28,751
#define B	29,799
#define A	30,831
#define DIRB	31,864
#define DIRA	32,920
#define T1CL	33,976
#define T1CH	34,1035
#define T1LL	35,1093
#define T1LH	36,1148
#define T2CL	37,1204
#define T2CH	38,1263
#define SR	39,1321
#define ACR	40,1363
#define PCR	41,1418
#define IFR	42,1474
#define IER	43,1526
#define ANH	44,1580
#define TREQ	47,1681
#define TACK	48,1732
#define TIP	49,1788
#define SR_CTRL	52,1862
#define SR_EXT	53,1919
#define SR_OUT	54,1971
#define IER_SET	57,2041
#define IER_CLR	58,2086
#define SR_INT	59,2130
static enum cuda_state cuda_state61,2185
    idle,62,2210
    sent_first_byte,63,2220
    sending,64,2241
    reading,65,2254
    read_done,66,2267
    awaiting_reply67,2282
} cuda_state;68,2301
static struct adb_request *current_req;70,2316
static struct adb_request *last_req;71,2356
static unsigned char cuda_rbuf[72,2393
static unsigned char *reply_ptr;73,2429
static int reading_reply;74,2462
static int data_index;75,2488
static struct device_node *vias;76,2511
find_via_cuda(89,2909
via_cuda_init(128,3850
#define WAIT_FOR(WAIT_FOR148,4397
init_via(160,4641
cuda_adb_send_request(200,5844
cuda_adb_autopoll(221,6243
cuda_reset_bus(233,6487
cuda_request(245,6702
cuda_send_request(262,7064
cuda_start(295,7640
cuda_poll(320,8192
via_interrupt(331,8346
cuda_input(459,11572

drivers/macintosh/macserial.h,5260
#define _MACSERIAL_H10,297
#define NUM_ZSREGS 12,319
struct serial_struct serial_struct14,345
#define ZILOG_CLOSING_WAIT_INF	35,815
#define ZILOG_CLOSING_WAIT_NONE	36,848
#define ZILOG_HUP_NOTIFY	41,958
#define ZILOG_FOURPORT 43,1063
#define ZILOG_SAK	44,1141
#define ZILOG_SPLIT_TERMIOS	45,1208
#define ZILOG_SPD_MASK	47,1286
#define ZILOG_SPD_HI	48,1317
#define ZILOG_SPD_VHI	50,1384
#define ZILOG_SPD_CUST	51,1453
#define ZILOG_SKIP_TEST	53,1519
#define ZILOG_AUTO_IRQ 54,1597
#define ZILOG_SESSION_LOCKOUT	55,1677
#define ZILOG_PGRP_LOCKOUT	56,1756
#define ZILOG_CALLOUT_NOHUP	57,1829
#define ZILOG_FLAGS	59,1903
#define ZILOG_USR_MASK	60,1964
#define ZILOG_INITIALIZED	64,2123
#define ZILOG_CALLOUT_ACTIVE	65,2194
#define ZILOG_NORMAL_ACTIVE	66,2266
#define ZILOG_BOOT_AUTOCONF	67,2335
#define ZILOG_CLOSING	68,2409
#define ZILOG_CTS_FLOW	69,2472
#define ZILOG_CHECK_CD	70,2533
struct mac_zschannel mac_zschannel86,2875
struct mac_serial mac_serial94,3040
#define SERIAL_MAGIC 161,5048
#define SERIAL_XMIT_SIZE 166,5147
#define RS_EVENT_WRITE_WAKEUP	172,5294
#define BRG_TO_BPS(BRG_TO_BPS179,5434
#define BPS_TO_BRG(BPS_TO_BRG180,5491
#define	FLAG	184,5591
#define	R0	187,5633
#define	R1	188,5670
#define	R2	189,5683
#define	R3	190,5696
#define	R4	191,5709
#define	R5	192,5722
#define	R6	193,5735
#define	R7	194,5748
#define	R8	195,5761
#define	R9	196,5774
#define	R10	197,5787
#define	R11	198,5802
#define	R12	199,5817
#define	R13	200,5832
#define	R14	201,5847
#define	R15	202,5862
#define	NULLCODE	204,5878
#define	POINT_HIGH	205,5913
#define	RES_EXT_INT	206,5973
#define	SEND_ABORT	207,6033
#define	RES_RxINT_FC	208,6074
#define	RES_Tx_P	209,6137
#define	ERR_RES	210,6185
#define	RES_H_IUS	211,6225
#define	RES_Rx_CRC	213,6273
#define	RES_Tx_CRC	214,6324
#define	RES_EOM_L	215,6375
#define	EXT_INT_ENAB	219,6445
#define	TxINT_ENAB	220,6491
#define	PAR_SPEC	221,6534
#define	RxINT_DISAB	223,6590
#define	RxINT_FCERR	224,6633
#define	INT_ALL_Rx	225,6703
#define	INT_ERR_Rx	226,6767
#define	WT_RDY_RT	228,6816
#define	WT_FN_RDYFN	229,6863
#define	WT_RDY_ENAB	230,6911
#define	RxENABLE	236,7029
#define	SYNC_L_INH	237,7066
#define	ADD_SM	238,7123
#define	RxCRC_ENAB	239,7176
#define	ENT_HM	240,7219
#define	AUTO_ENAB	241,7262
#define	Rx5	242,7304
#define	Rx7	243,7347
#define	Rx6	244,7391
#define	Rx8	245,7435
#define RxNBITS_MASK	246,7479
#define	PAR_ENA	250,7530
#define	PAR_EVEN	251,7571
#define	SYNC_ENAB	253,7616
#define	SB1	254,7660
#define	SB15	255,7699
#define	SB2	256,7742
#define SB_MASK	257,7782
#define	MONSYNC	259,7804
#define	BISYNC	260,7850
#define	SDLC	261,7899
#define	EXTSYNC	262,7955
#define	X1CLK	264,8003
#define	X16CLK	265,8042
#define	X32CLK	266,8084
#define	X64CLK	267,8126
#define XCLK_MASK	268,8168
#define	TxCRC_ENAB	272,8216
#define	RTS	273,8259
#define	SDLC_CRC	274,8286
#define	TxENAB	275,8325
#define	SND_BRK	276,8361
#define	Tx5	277,8400
#define	Tx7	278,8453
#define	Tx6	279,8497
#define	Tx8	280,8541
#define TxNBITS_MASK	281,8585
#define	DTR	282,8611
#define	VIS	291,8846
#define	NV	292,8889
#define	DLC	293,8918
#define	MIE	294,8958
#define	STATHI	295,9002
#define	NORESET	296,9040
#define	CHRB	297,9088
#define	CHRA	298,9128
#define	FHWRES	299,9168
#define	BIT6	302,9260
#define	LOOPMODE 303,9297
#define	ABUNDER	304,9337
#define	MARKIDLE 305,9394
#define	GAOP	306,9437
#define	NRZ	307,9479
#define	NRZI	308,9508
#define	FM1	309,9542
#define	FM0	310,9586
#define	CRCPS	311,9630
#define	TRxCXT	314,9716
#define	TRxCTC	315,9758
#define	TRxCBR	316,9803
#define	TRxCDP	317,9853
#define	TRxCOI	318,9895
#define	TCRTxCP	319,9927
#define	TCTRxCP	320,9977
#define	TCBR	321,10027
#define	TCDPLL	322,10088
#define	RCRTxCP	323,10143
#define	RCTRxCP	324,10192
#define	RCBR	325,10244
#define	RCDPLL	326,10304
#define	RTxCX	327,10358
#define	BRENABL	334,10596
#define	BRSRC	335,10647
#define	DTRREQ	336,10696
#define	AUTOECHO 337,10740
#define	LOOPBAK	338,10775
#define	SEARCH	339,10817
#define	RMC	340,10861
#define	DISDPLL	341,10904
#define	SSBR	342,10944
#define	SSRTxC	343,10999
#define	SFMM	344,11048
#define	SNRZI	345,11084
#define	ZCIE	348,11184
#define	DCDIE	349,11219
#define	SYNCIE	350,11248
#define	CTSIE	351,11287
#define	TxUIE	352,11319
#define	BRKIE	353,11363
#define	Rx_CH_AV	357,11427
#define	ZCOUNT	358,11477
#define	Tx_BUF_EMP	359,11514
#define	DCD	360,11559
#define	SYNC_HUNT	361,11586
#define	CTS	362,11625
#define	TxEOM	363,11653
#define	BRK_ABRT	364,11691
#define	ALL_SNT	367,11754
#define	RES3	369,11839
#define	RES4	370,11867
#define	RES5	371,11895
#define	RES6	372,11923
#define	RES7	373,11951
#define	RES8	374,11979
#define	RES18	375,12007
#define	RES28	376,12036
#define	PAR_ERR	378,12103
#define	Rx_OVR	379,12144
#define	FRM_ERR	380,12188
#define	END_FR	381,12234
#define	CHBEXT	386,12402
#define	CHBTxIP	387,12450
#define	CHBRxIP	388,12493
#define	CHAEXT	389,12536
#define	CHATxIP	390,12584
#define	CHARxIP	391,12628
#define	ONLOOP	396,12763
#define	LOOPSEND 397,12795
#define	CLK2MIS	398,12837
#define	CLK1MIS	399,12884
#define ZS_CLEARERR(ZS_CLEARERR408,13128
#define ZS_CLEARFIFO(ZS_CLEARFIFO409,13195

drivers/macintosh/macio-adb.c,740
struct preg preg19,394
struct adb_regs adb_regs24,445
#define DFB	38,723
#define TAG	39,758
#define HMB	42,832
#define APD	43,871
#define NRE	46,940
#define DLE	47,979
#define TAR	50,1045
#define DTB	51,1090
#define CRE	52,1123
#define ADB_RST	53,1170
#define APE	56,1238
static volatile struct adb_regs *adb;58,1276
static struct adb_request *current_req,59,1314
static struct adb_request *current_req, *last_req;59,1314
static unsigned char adb_rbuf[60,1365
void macio_adb_init(71,1701
static int macio_adb_autopoll(115,2803
static int macio_reset_bus(123,2970
static int macio_adb_send_request(138,3269
static void macio_adb_interrupt(166,3731
static void completed(212,4883
static void macio_adb_poll(224,5107

drivers/macintosh/mediabay.c,630
#define __KERNEL_SYSCALLS__11,367
struct media_bay_hw media_bay_hw33,818
struct media_bay_info media_bay_info40,926
#define MAX_BAYS	57,1253
static volatile struct media_bay_info media_bays[59,1273
int media_bay_count 60,1333
#define MB_CONTENTS(MB_CONTENTS62,1359
#define MB_IDE_READY(MB_IDE_READY67,1564
#define MB_STABLE_COUNT	75,1824
#define MB_RESET_COUNT	81,1969
#define MB_IDE_WAIT	87,2145
media_bay_init(105,2774
media_bay_intr(169,4152
check_media_bay(179,4292
check_media_bay_by_base(197,4659
media_bay_set_ide_infos(216,4995
media_bay_task(243,5684
poll_media_bay(299,7238
set_media_bay(314,7574

drivers/sgi/char/cons_newport.c,1199
#define BMASK(BMASK47,1002
#define RENDER(RENDER49,1030
#define REVERSE_RENDER(REVERSE_RENDER60,1738
extern int default_red[71,2502
extern int default_red[16], default_grn[71,2502
extern int default_red[16], default_grn[16], default_blu[71,2502
extern unsigned char video_type;72,2564
static int cursor_pos 74,2598
struct newport_regs *npregs;75,2626
#define TESTVAL 77,2656
#define XSTI_TO_FXSTART(XSTI_TO_FXSTART78,2683
newport_disable_video(81,2757
newport_enable_video(90,2956
newport_disable_cursor(99,3151
newport_enable_cursor(109,3357
newport_init_cmap(119,3560
newport_init_cursor(135,3835
newport_clear_screen(169,4639
newport_render_version(183,5013
newport_render_logo(200,5345
newport_render_background(233,6096
newport_set_origin(246,6487
newport_hide_cursor(253,6586
newport_set_cursor(274,6981
newport_get_scrmem(337,8762
newport_set_scrmem(347,9072
newport_set_get_cmap(362,9514
newport_blitc(412,10610
newport_memsetw(443,11447
newport_memcpyw(483,12206
struct console_ops newport_console 516,12921
struct ng1_info newport_board_info 529,13224
newport_reset 546,13622
struct graphics_ops newport_graphic_ops 566,13942
newport_probe 577,14353

drivers/sgi/char/sgiserial.c,3332
#define NUM_SERIAL 33,744
#define NUM_CHANNELS 34,794
extern struct wait_queue * keypress_wait;36,833
struct sgi_zslayout *zs_chips[38,876
struct sgi_zschannel *zs_channels[39,928
struct sgi_zschannel *zs_conschan;40,989
struct sgi_zschannel *zs_kgdbchan;41,1024
int zs_nodes[42,1059
struct sgi_serial zs_soft[44,1095
struct sgi_serial *zs_chain;45,1136
static int zilog_irq 46,1192
struct tty_struct zs_ttys[48,1220
static int zs_cons_chanout 52,1324
static int zs_cons_chanin 53,1356
struct sgi_serial *zs_consinfo 54,1387
static struct console sgi_console_driver 56,1424
static unsigned char kgdb_regs[69,1819
#define ZS_CLOCK 83,2387
struct tty_driver serial_driver,87,2484
struct tty_driver serial_driver, callout_driver;87,2484
static int serial_refcount;88,2533
#define SERIAL_TYPE_NORMAL	91,2595
#define SERIAL_TYPE_CALLOUT	92,2624
#define WAKEUP_CHARS 95,2727
#define RS_STROBE_TIME 104,2921
#define RS_ISR_PASS_LIMIT 105,2947
#define _INLINE_ 107,2978
static struct tty_struct *serial_table[111,3055
static struct termios *serial_termios[112,3109
static struct termios *serial_termios_locked[113,3162
#define MIN(MIN116,3235
static unsigned char tmp_buf[128,3761
static struct semaphore tmp_buf_sem 129,3820
static inline int serial_paranoia_check(131,3866
static int baud_table[155,4472
static inline unsigned char read_zsreg(165,4899
static inline void write_zsreg(178,5170
static inline void load_zsregs(191,5453
static inline void zs_rtsdtr(213,6182
static inline void kgdb_chaninit(227,6520
static inline int get_zsbaud(245,6924
static void rs_stop(268,7712
static void rs_start(285,8124
static void batten_down_hatches(305,8689
static inline void rs_recv_clear(330,9313
static _INLINE_ void rs_sched_event(367,10514
static _INLINE_ void receive_chars(379,10775
static _INLINE_ void transmit_chars(442,12328
static _INLINE_ void status_handle(500,13724
void rs_interrupt(550,15020
#define CHAN_A_IRQMASK 563,15498
#define CHAN_B_IRQMASK 564,15550
static void do_serial_bh(605,16813
static void do_softint(610,16878
static void do_serial_hangup(636,17560
static void rs_timer(655,17976
static int startup(662,18061
static void shutdown(756,20303
static void change_speed(786,20940
static void rs_put_char(886,23354
void putDebugChar(907,23797
char getDebugChar(924,24115
static void rs_fair_output(940,24379
static void zs_console_print(978,25155
static void rs_flush_chars(991,25425
static int rs_write(1032,26644
static int rs_write_room(1083,28058
static int rs_chars_in_buffer(1096,28353
static void rs_flush_buffer(1105,28588
static void rs_throttle(1128,29291
static void rs_unthrottle(1152,29837
static int get_serial_info(1186,30602
static int set_serial_info(1206,31121
static int get_lsr_info(1261,32800
static void send_break(1277,33125
static int rs_ioctl(1289,33423
static void rs_set_termios(1370,35641
static void rs_close(1396,36413
void rs_hangup(1498,39398
static int block_til_ready(1519,39938
int rs_open(1648,43355
static void show_serial_version(1708,44786
static inline struct sgi_zslayout *get_zs(1714,44938
rs_cons_check(1730,45229
volatile int test_done;1795,46576
int rs_init(1798,46632
int register_serial(1969,52193
void unregister_serial(1974,52257
rs_cons_hook(1986,52638
rs_kgdb_hook(2020,53671

drivers/sgi/char/gconsole.h,169
#define cmapsz 6,112
#define CHAR_HEIGHT 7,132
struct console_ops console_ops9,157
extern struct console_ops *gconsole;24,718
extern unsigned char vga_font[30,881

drivers/sgi/char/newport.h,9614
#define _SGI_NEWPORT_H9,228
typedef volatile unsigned long npireg_t;npireg_t12,253
union npfloat npfloat14,295
typedef union npfloat npfreg_t;npfreg_t19,353
union np_dcb np_dcb21,386
struct newport_rexregs newport_rexregs27,530
#define DM1_PLANES 30,608
#define    DM1_NOPLANES 31,646
#define    DM1_RGBPLANES 32,684
#define    DM1_RGBAPLANES 33,722
#define    DM1_OLAYPLANES 34,760
#define    DM1_PUPPLANES 35,798
#define    DM1_CIDPLANES 36,836
#define NPORT_DMODE1_DDMASK 38,876
#define NPORT_DMODE1_DD4 39,920
#define NPORT_DMODE1_DD8 40,964
#define NPORT_DMODE1_DD12 41,1008
#define NPORT_DMODE1_DD24 42,1052
#define NPORT_DMODE1_DSRC 43,1096
#define NPORT_DMODE1_YFLIP 44,1140
#define NPORT_DMODE1_RWPCKD 45,1184
#define NPORT_DMODE1_HDMASK 46,1228
#define NPORT_DMODE1_HD4 47,1272
#define NPORT_DMODE1_HD8 48,1316
#define NPORT_DMODE1_HD12 49,1360
#define NPORT_DMODE1_HD32 50,1404
#define NPORT_DMODE1_RWDBL 51,1448
#define NPORT_DMODE1_ESWAP 52,1492
#define NPORT_DMODE1_CCMASK 53,1554
#define NPORT_DMODE1_CCLT 54,1598
#define NPORT_DMODE1_CCEQ 55,1642
#define NPORT_DMODE1_CCGT 56,1686
#define NPORT_DMODE1_RGBMD 57,1730
#define NPORT_DMODE1_DENAB 58,1774
#define NPORT_DMODE1_FCLR 59,1838
#define NPORT_DMODE1_BENAB 60,1899
#define NPORT_DMODE1_SFMASK 61,1962
#define NPORT_DMODE1_SF0 62,2006
#define NPORT_DMODE1_SF1 63,2050
#define NPORT_DMODE1_SFDC 64,2094
#define NPORT_DMODE1_SFMDC 65,2138
#define NPORT_DMODE1_SFSA 66,2182
#define NPORT_DMODE1_SFMSA 67,2226
#define NPORT_DMODE1_DFMASK 68,2270
#define NPORT_DMODE1_DF0 69,2314
#define NPORT_DMODE1_DF1 70,2358
#define NPORT_DMODE1_DFSC 71,2402
#define NPORT_DMODE1_DFMSC 72,2446
#define NPORT_DMODE1_DFSA 73,2490
#define NPORT_DMODE1_DFMSA 74,2534
#define NPORT_DMODE1_BBENAB 75,2578
#define NPORT_DMODE1_PFENAB 76,2646
#define NPORT_DMODE1_ABLEND 77,2713
#define NPORT_DMODE1_LOMASK 78,2775
#define NPORT_DMODE1_LOZERO 79,2819
#define NPORT_DMODE1_LOAND 80,2863
#define NPORT_DMODE1_LOANDR 81,2907
#define NPORT_DMODE1_LOSRC 82,2951
#define NPORT_DMODE1_LOANDI 83,2995
#define NPORT_DMODE1_LODST 84,3039
#define NPORT_DMODE1_LOXOR 85,3083
#define NPORT_DMODE1_LOOR 86,3127
#define NPORT_DMODE1_LONOR 87,3171
#define NPORT_DMODE1_LOXNOR 88,3215
#define NPORT_DMODE1_LONDST 89,3259
#define NPORT_DMODE1_LOORR 90,3303
#define NPORT_DMODE1_LONSRC 91,3347
#define NPORT_DMODE1_LOORI 92,3391
#define NPORT_DMODE1_LONAND 93,3435
#define NPORT_DMODE1_LOONE 94,3479
#define NPORT_DMODE0_OPMASK 99,3640
#define NPORT_DMODE0_NOP 100,3699
#define NPORT_DMODE0_RD 101,3759
#define NPORT_DMODE0_DRAW 102,3821
#define NPORT_DMODE0_S2S 103,3883
#define NPORT_DMODE0_AMMASK 106,4025
#define NPORT_DMODE0_SPAN 107,4090
#define NPORT_DMODE0_BLOCK 108,4159
#define NPORT_DMODE0_ILINE 109,4225
#define NPORT_DMODE0_FLINE 110,4291
#define NPORT_DMODE0_ALINE 111,4357
#define NPORT_DMODE0_TLINE 112,4423
#define NPORT_DMODE0_BLINE 113,4489
#define NPORT_DMODE0_DOSETUP 116,4606
#define NPORT_DMODE0_CHOST 117,4647
#define NPORT_DMODE0_AHOST 118,4688
#define NPORT_DMODE0_STOPX 119,4729
#define NPORT_DMODE0_STOPY 120,4770
#define NPORT_DMODE0_SK1ST 121,4811
#define NPORT_DMODE0_SKLST 122,4852
#define NPORT_DMODE0_ZPENAB 123,4893
#define NPORT_DMODE0_LISPENAB 124,4934
#define NPORT_DMODE0_LISLST 125,4975
#define NPORT_DMODE0_L32 126,5016
#define NPORT_DMODE0_ZOPQ 127,5057
#define NPORT_DMODE0_LISOPQ 128,5098
#define NPORT_DMODE0_SHADE 129,5139
#define NPORT_DMODE0_LRONLY 130,5180
#define NPORT_DMODE0_XYOFF 131,5221
#define NPORT_DMODE0_CLAMP 132,5262
#define NPORT_DMODE0_ENDPF 133,5303
#define NPORT_DMODE0_YSTR 134,5344
#define NPORT_DMODE_WMASK 195,7043
#define NPORT_DMODE_W4 196,7082
#define NPORT_DMODE_W1 197,7121
#define NPORT_DMODE_W2 198,7160
#define NPORT_DMODE_W3 199,7199
#define NPORT_DMODE_EDPACK 200,7238
#define NPORT_DMODE_ECINC 201,7277
#define NPORT_DMODE_CMASK 202,7316
#define NPORT_DMODE_AMASK 203,7355
#define NPORT_DMODE_AVC2 204,7394
#define NPORT_DMODE_ACMALL 205,7433
#define NPORT_DMODE_ACM0 206,7472
#define NPORT_DMODE_ACM1 207,7511
#define NPORT_DMODE_AXMALL 208,7550
#define NPORT_DMODE_AXM0 209,7589
#define NPORT_DMODE_AXM1 210,7628
#define NPORT_DMODE_ABT 211,7667
#define NPORT_DMODE_AVCC1 212,7706
#define NPORT_DMODE_AVAB1 213,7745
#define NPORT_DMODE_ALG3V0 214,7784
#define NPORT_DMODE_A1562 215,7823
#define NPORT_DMODE_ESACK 216,7862
#define NPORT_DMODE_EASACK 217,7901
#define NPORT_DMODE_CWMASK 218,7940
#define NPORT_DMODE_CHMASK 219,7979
#define NPORT_DMODE_CSMASK 220,8018
#define NPORT_DMODE_SENDIAN 221,8057
struct newport_cregs newport_cregs229,8171
#define NPORT_CMODE_SM0 241,8402
#define NPORT_CMODE_SM1 242,8439
#define NPORT_CMODE_SM2 243,8476
#define NPORT_CMODE_SM3 244,8513
#define NPORT_CMODE_SM4 245,8550
#define NPORT_CMODE_CMSK 246,8587
#define NPORT_CFG_G32MD 250,8673
#define NPORT_CFG_BWIDTH 251,8710
#define NPORT_CFG_ERCVR 252,8747
#define NPORT_CFG_BDMSK 253,8784
#define NPORT_CFG_GDMSK 254,8821
#define NPORT_CFG_GD0 255,8858
#define NPORT_CFG_GD1 256,8895
#define NPORT_CFG_GD2 257,8932
#define NPORT_CFG_GD3 258,8969
#define NPORT_CFG_GD4 259,9006
#define NPORT_CFG_GFAINT 260,9043
#define NPORT_CFG_TOMSK 261,9080
#define NPORT_CFG_VRMSK 262,9117
#define NPORT_CFG_FBTYP 263,9154
#define NPORT_STAT_VERS 267,9228
#define NPORT_STAT_GBUSY 268,9265
#define NPORT_STAT_BBUSY 269,9302
#define NPORT_STAT_VRINT 270,9339
#define NPORT_STAT_VIDINT 271,9376
#define NPORT_STAT_GLMSK 272,9413
#define NPORT_STAT_BLMSK 273,9450
#define NPORT_STAT_BFIRQ 274,9487
#define NPORT_STAT_GFIRQ 275,9524
struct newport_regs newport_regs281,9601
extern struct newport_regs *npregs;290,9834
} newport_ctx;newport_ctx351,11297
#define VC2_REGADDR_INDEX 354,11350
#define VC2_REGADDR_IREG 355,11392
#define VC2_REGADDR_RAM 356,11434
#define VC2_PROTOCOL 357,11476
#define VC2_VLINET_ADDR 359,11555
#define VC2_VFRAMET_ADDR 360,11592
#define VC2_CGLYPH_ADDR 361,11629
#define VC2_IREG_VENTRY 364,11711
#define VC2_IREG_CENTRY 365,11747
#define VC2_IREG_CURSX 366,11783
#define VC2_IREG_CURSY 367,11819
#define VC2_IREG_CCURSX 368,11855
#define VC2_IREG_DENTRY 369,11891
#define VC2_IREG_SLEN 370,11927
#define VC2_IREG_RADDR 371,11963
#define VC2_IREG_VFPTR 372,11999
#define VC2_IREG_VLSPTR 373,12035
#define VC2_IREG_VLIR 374,12071
#define VC2_IREG_VLCTR 375,12107
#define VC2_IREG_CTPTR 376,12143
#define VC2_IREG_WCURSY 377,12179
#define VC2_IREG_DFPTR 378,12215
#define VC2_IREG_DLTPTR 379,12251
#define VC2_IREG_CONTROL 380,12287
#define VC2_IREG_CONFIG 381,12323
extern inline void newport_vc2_set(383,12360
extern inline unsigned short newport_vc2_get(391,12652
#define VC2_CTRL_EVIRQ 403,13109
#define VC2_CTRL_EDISP 404,13143
#define VC2_CTRL_EVIDEO 405,13177
#define VC2_CTRL_EDIDS 406,13211
#define VC2_CTRL_ECURS 407,13245
#define VC2_CTRL_EGSYNC 408,13279
#define VC2_CTRL_EILACE 409,13313
#define VC2_CTRL_ECDISP 410,13347
#define VC2_CTRL_ECCURS 411,13381
#define VC2_CTRL_ECG64 412,13415
#define VC2_CTRL_GLSEL 413,13449
#define NCMAP_REGADDR_AREG 416,13528
#define NCMAP_REGADDR_ALO 417,13568
#define NCMAP_REGADDR_AHI 418,13608
#define NCMAP_REGADDR_PBUF 419,13648
#define NCMAP_REGADDR_CREG 420,13688
#define NCMAP_REGADDR_SREG 421,13728
#define NCMAP_REGADDR_RREG 422,13768
#define NCMAP_PROTOCOL 423,13808
static inline void newport_cmap_setaddr(425,13877
static inline void newport_cmap_setrgb(436,14269
#define BUSY_TIMEOUT 448,14546
static inline int newport_wait(449,14574
static inline int newport_bfwait(461,14756
#define DCB_DATAWIDTH_4 486,15306
#define DCB_DATAWIDTH_1 487,15334
#define DCB_DATAWIDTH_2 488,15362
#define DCB_DATAWIDTH_3 489,15390
#define DCB_ENDATAPACK 492,15494
#define DCB_ENCRSINC 495,15589
#define DCB_CRS_SHIFT 498,15703
#define DCB_ADDR_SHIFT 501,15781
#define DCB_VC2 502,15808
#define DCB_CMAP_ALL 503,15856
#define DCB_CMAP0 504,15904
#define DCB_CMAP1 505,15952
#define DCB_XMAP_ALL 506,16000
#define DCB_XMAP0 507,16048
#define DCB_XMAP1 508,16096
#define DCB_BT445 509,16144
#define DCB_VCC1 510,16192
#define DCB_VAB1 511,16240
#define DCB_LG3_BDVERS0 512,16288
#define DCB_LG3_ICS1562 513,16336
#define DCB_RESERVED 514,16384
#define DCB_ENSYNCACK 517,16462
#define DCB_ENASYNCACK 518,16497
#define DCB_CSWIDTH_SHIFT 520,16533
#define DCB_CSHOLD_SHIFT 521,16562
#define DCB_CSSETUP_SHIFT 522,16591
#   define XM9_CRS_CONFIG 526,16708
#       define XM9_PUPMODE 527,16766
#       define XM9_ODD_PIXEL 528,16812
#       define XM9_8_BITPLANES 529,16858
#       define XM9_SLOW_DCB 530,16904
#       define XM9_VIDEO_RGBMAP_MASK 531,16950
#       define XM9_EXPRESS_VIDEO 532,16996
#       define XM9_VIDEO_OPTION 533,17042
#   define XM9_CRS_REVISION 534,17088
#   define XM9_CRS_FIFO_AVAIL 535,17146
#       define XM9_FIFO_0_AVAIL 536,17204
#       define XM9_FIFO_1_AVAIL 537,17243
#       define XM9_FIFO_2_AVAIL 538,17282
#       define XM9_FIFO_3_AVAIL 539,17321
#       define XM9_FIFO_FULL 540,17360
#       define XM9_FIFO_EMPTY 541,17414
#   define XM9_CRS_CURS_CMAP_MSB 542,17468
#   define XM9_CRS_PUP_CMAP_MSB 543,17526
#   define XM9_CRS_MODE_REG_DATA 544,17584
#   define XM9_CRS_MODE_REG_INDEX 545,17642
#define DCB_CYCLES(DCB_CYCLES548,17702
#define W_DCB_XMAP9_PROTOCOL 553,17886
#define WSLOW_DCB_XMAP9_PROTOCOL 554,17942
#define WAYSLOW_DCB_XMAP9_PROTOCOL 555,17998
#define R_DCB_XMAP9_PROTOCOL 556,18056
xmap9FIFOWait 559,18132
xmap9SetModeReg 570,18399

drivers/sgi/char/graphics.c,635
#define enable_gconsole(enable_gconsole41,1273
#define disable_gconsole(disable_gconsole42,1299
static struct graphics_ops cards 45,1334
static int boards;46,1379
#define GRAPHICS_CARD(GRAPHICS_CARD48,1399
sgi_graphics_open 51,1435
sgi_graphics_ioctl 57,1514
sgi_graphics_close 166,4353
sgi_graphics_nopage 187,4833
static struct vm_operations_struct graphics_mmap 226,6142
sgi_graphics_mmap 240,6601
graphics_ops_post_init 261,7096
struct file_operations sgi_graphics_fops 268,7283
static struct miscdevice dev_graphics 286,7709
static struct miscdevice dev_opengl 291,7836
gfx_register 297,7998
gfx_init 304,8091

drivers/sgi/char/graphics.h,61
#define MAXCARDS 1,0
struct graphics_ops graphics_ops3,20

drivers/sgi/char/linux_logo.h,185
#define LINUX_LOGO_COLORS 12,303
unsigned char linux_logo_red[14,334
unsigned char linux_logo_green[45,1754
unsigned char linux_logo_blue[76,3176
unsigned char linux_logo[107,4597

drivers/sgi/char/newport.c,257
void newport_save 17,366
#define LOAD(LOAD22,436
#define LOADI(LOADI23,480
#define LOADC(LOADC24,527
void newport_restore 102,2068
#define STORE(STORE105,2122
#define STOREI(STOREI106,2166
#define STOREC(STOREC107,2213
newport_ioctl 166,3215

drivers/sgi/char/rrm.c,210
rrm_open_rn 16,369
rrm_close_rn 22,423
rrm_bind_proc_to_rn 28,478
typedef int (*rrm_function rrm_function33,536
} rrm_functions 38,637
#define RRM_FUNCTIONS 44,832
rrm_command 48,974
rrm_close 64,1338

drivers/sgi/char/sgicons.c,789
int aux_device_present 20,508
struct console_ops *gconsole 23,608
struct console_ops *real_gconsole 24,642
enable_gconsole 27,687
disable_gconsole 34,764
register_gconsole 43,861
__set_origin 51,955
hide_cursor 58,1052
set_cursor 66,1127
get_scrmem 73,1215
set_scrmem 80,1303
set_get_cmap 87,1411
blitc 95,1536
memsetw 102,1651
memcpyw 109,1769
con_adjust_height 116,1905
set_get_font 122,1976
void vesa_blank(156,2773
void vesa_unblank(157,2799
void set_vesa_blanking(158,2827
void vesa_powerdown(159,2879
void set_palette 160,2909
extern unsigned long video_mem_base,162,2938
extern unsigned long video_mem_base, video_screen_size,162,2938
extern unsigned long video_mem_base, video_screen_size, video_mem_term;162,2938
__initfunc(164,3011
__initfunc(181,3407

drivers/sgi/char/sgiserial.h,5270
#define _SGI_SERIAL_H6,151
struct sgi_zschannel sgi_zschannel9,197
struct sgi_zslayout sgi_zslayout26,620
#define NUM_ZSREGS 31,710
struct serial_struct serial_struct33,736
#define ZILOG_CLOSING_WAIT_INF	54,1206
#define ZILOG_CLOSING_WAIT_NONE	55,1239
#define ZILOG_HUP_NOTIFY 60,1349
#define ZILOG_FOURPORT 62,1450
#define ZILOG_SAK	63,1527
#define ZILOG_SPLIT_TERMIOS 64,1593
#define ZILOG_SPD_MASK	66,1671
#define ZILOG_SPD_HI	67,1701
#define ZILOG_SPD_VHI	69,1767
#define ZILOG_SPD_CUST	70,1835
#define ZILOG_SKIP_TEST	72,1900
#define ZILOG_AUTO_IRQ 73,1977
#define ZILOG_SESSION_LOCKOUT 74,2056
#define ZILOG_PGRP_LOCKOUT 75,2135
#define ZILOG_CALLOUT_NOHUP 76,2211
#define ZILOG_FLAGS	78,2287
#define ZILOG_USR_MASK 79,2347
#define ZILOG_INITIALIZED	83,2504
#define ZILOG_CALLOUT_ACTIVE	84,2575
#define ZILOG_NORMAL_ACTIVE	85,2647
#define ZILOG_BOOT_AUTOCONF	86,2716
#define ZILOG_CLOSING	87,2790
#define ZILOG_CTS_FLOW	88,2853
#define ZILOG_CHECK_CD	89,2914
struct sgi_serial sgi_serial103,3236
#define SERIAL_MAGIC 166,5028
#define SERIAL_XMIT_SIZE 171,5127
#define RS_EVENT_WRITE_WAKEUP	177,5274
#define BRG_TO_BPS(BRG_TO_BPS184,5414
#define BPS_TO_BRG(BPS_TO_BRG185,5471
#define	FLAG	189,5571
#define	R0	192,5613
#define	R1	193,5650
#define	R2	194,5663
#define	R3	195,5676
#define	R4	196,5689
#define	R5	197,5702
#define	R6	198,5715
#define	R7	199,5728
#define	R8	200,5741
#define	R9	201,5754
#define	R10	202,5767
#define	R11	203,5782
#define	R12	204,5797
#define	R13	205,5812
#define	R14	206,5827
#define	R15	207,5842
#define	NULLCODE	209,5858
#define	POINT_HIGH	210,5893
#define	RES_EXT_INT	211,5953
#define	SEND_ABORT	212,6013
#define	RES_RxINT_FC	213,6054
#define	RES_Tx_P	214,6117
#define	ERR_RES	215,6165
#define	RES_H_IUS	216,6205
#define	RES_Rx_CRC	218,6253
#define	RES_Tx_CRC	219,6304
#define	RES_EOM_L	220,6355
#define	EXT_INT_ENAB	224,6425
#define	TxINT_ENAB	225,6471
#define	PAR_SPEC	226,6514
#define	RxINT_DISAB	228,6570
#define	RxINT_FCERR	229,6613
#define	INT_ALL_Rx	230,6683
#define	INT_ERR_Rx	231,6747
#define	WT_RDY_RT	233,6796
#define	WT_FN_RDYFN	234,6843
#define	WT_RDY_ENAB	235,6891
#define	RxENABLE	241,7009
#define	SYNC_L_INH	242,7046
#define	ADD_SM	243,7103
#define	RxCRC_ENAB	244,7156
#define	ENT_HM	245,7199
#define	AUTO_ENAB	246,7242
#define	Rx5	247,7284
#define	Rx7	248,7327
#define	Rx6	249,7371
#define	Rx8	250,7415
#define	PAR_ENA	254,7484
#define	PAR_EVEN	255,7525
#define	SYNC_ENAB	257,7570
#define	SB1	258,7614
#define	SB15	259,7653
#define	SB2	260,7696
#define	MONSYNC	262,7737
#define	BISYNC	263,7783
#define	SDLC	264,7832
#define	EXTSYNC	265,7888
#define	X1CLK	267,7936
#define	X16CLK	268,7975
#define	X32CLK	269,8017
#define	X64CLK	270,8059
#define	TxCRC_ENAB	274,8126
#define	RTS	275,8169
#define	SDLC_CRC	276,8196
#define	TxENAB	277,8235
#define	SND_BRK	278,8271
#define	Tx5	279,8310
#define	Tx7	280,8363
#define	Tx6	281,8407
#define	Tx8	282,8451
#define	DTR	283,8495
#define	VIS	292,8730
#define	NV	293,8773
#define	DLC	294,8802
#define	MIE	295,8842
#define	STATHI	296,8886
#define	NORESET	297,8924
#define	CHRB	298,8972
#define	CHRA	299,9012
#define	FHWRES	300,9052
#define	BIT6	303,9144
#define	LOOPMODE 304,9181
#define	ABUNDER	305,9221
#define	MARKIDLE 306,9278
#define	GAOP	307,9321
#define	NRZ	308,9363
#define	NRZI	309,9392
#define	FM1	310,9426
#define	FM0	311,9470
#define	CRCPS	312,9514
#define	TRxCXT	315,9600
#define	TRxCTC	316,9642
#define	TRxCBR	317,9687
#define	TRxCDP	318,9737
#define	TRxCOI	319,9779
#define	TCRTxCP	320,9811
#define	TCTRxCP	321,9861
#define	TCBR	322,9911
#define	TCDPLL	323,9972
#define	RCRTxCP	324,10027
#define	RCTRxCP	325,10076
#define	RCBR	326,10128
#define	RCDPLL	327,10188
#define	RTxCX	328,10242
#define	BRENABL	335,10480
#define	BRSRC	336,10531
#define	DTRREQ	337,10580
#define	AUTOECHO 338,10624
#define	LOOPBAK	339,10659
#define	SEARCH	340,10701
#define	RMC	341,10745
#define	DISDPLL	342,10788
#define	SSBR	343,10828
#define	SSRTxC	344,10883
#define	SFMM	345,10932
#define	SNRZI	346,10968
#define	ZCIE	349,11068
#define	DCDIE	350,11103
#define	SYNCIE	351,11132
#define	CTSIE	352,11171
#define	TxUIE	353,11203
#define	BRKIE	354,11247
#define	Rx_CH_AV	358,11311
#define	ZCOUNT	359,11361
#define	Tx_BUF_EMP	360,11398
#define	DCD	361,11443
#define	SYNC_HUNT	362,11470
#define	CTS	363,11509
#define	TxEOM	364,11537
#define	BRK_ABRT	365,11575
#define	ALL_SNT	368,11638
#define	RES3	370,11723
#define	RES4	371,11751
#define	RES5	372,11779
#define	RES6	373,11807
#define	RES7	374,11835
#define	RES8	375,11863
#define	RES18	376,11891
#define	RES28	377,11920
#define	PAR_ERR	379,11987
#define	Rx_OVR	380,12028
#define	CRC_ERR	381,12072
#define	END_FR	382,12118
#define	CHBEXT	387,12286
#define	CHBTxIP	388,12334
#define	CHBRxIP	389,12377
#define	CHAEXT	390,12420
#define	CHATxIP	391,12468
#define	CHARxIP	392,12512
#define	ONLOOP	397,12647
#define	LOOPSEND 398,12679
#define	CLK2MIS	399,12721
#define	CLK1MIS	400,12768
extern inline void ZS_CLEARERR(409,13013
extern inline void ZS_CLEARFIFO(418,13182
#define ZS_CLEARERR(ZS_CLEARERR433,13492
#define ZS_CLEARFIFO(ZS_CLEARFIFO434,13553

drivers/sgi/char/shmiq.c,567
#define MAX_SHMIQ_DEVS 62,1987
#define MAX_SHMI_QUEUES 69,2207
} shmiq_pushed_devices 75,2332
} shmiqs 87,2723
shmiq_push_event 90,2757
shmiq_manage_file 124,3606
shmiq_forget_file 146,4097
shmiq_sioc 168,4512
shmiq_ioctl 197,5175
qcntl_ioctl 243,5958
shmiq_nopage 288,7187
static struct vm_operations_struct qcntl_mmap 294,7330
shmiq_qcntl_mmap 308,7786
shmiq_qcntl_ioctl 344,8708
shmiq_qcntl_poll 357,9002
shmiq_qcntl_open 376,9389
shmiq_qcntl_fasync 397,9747
shmiq_qcntl_close 409,9983
file_operations shmiq_fops 438,10577
shmiq_init 457,11226

drivers/sgi/char/streamable.c,980
extern struct kbd_struct kbd_table 21,456
int forward_chars;24,560
int kbd_assigned_device;27,627
int kbd_prev_mode;30,708
get_sioc 34,803
sgi_gfx_open 52,1185
sgi_gfx_close 59,1313
sgi_gfx_ioctl 66,1442
struct file_operations sgi_gfx_fops 73,1619
static struct miscdevice dev_gfx 90,1998
static idevDesc sgi_kbd_desc 95,2121
sgi_kbd_sioc 108,2574
sgi_keyb_ioctl 138,3104
kbd_forward_char 177,4107
sgi_keyb_open 188,4311
struct file_operations sgi_keyb_fops 194,4430
static struct miscdevice dev_input_keyboard 211,4803
#define MOUSE_VALUATORS 216,4951
static idevDesc sgi_mouse_desc 217,4977
static idevValuatorDesc mouse_default_valuator 229,5397
static int mouse_opened;241,5737
static idevValuatorDesc mouse_valuators 242,5762
sgi_mouse_open 245,5827
sgi_mouse_close 259,6064
sgi_mouse_sioc 266,6167
sgi_mouse_ioctl 304,6997
struct file_operations sgi_mouse_fops 335,7708
static struct miscdevice dev_input_mouse 353,8115
streamable_init 358,8225

drivers/sgi/char/usema.c,311
struct irix_usema irix_usema40,1148
sgi_usema_attach 46,1234
sgi_usemaclone_ioctl(61,1543
sgi_usemaclone_poll(136,3707
sgi_usemaclone_open(146,3922
sgi_usemaclone_release(161,4215
struct file_operations sgi_usemaclone_fops 166,4294
static struct miscdevice dev_usemaclone 183,4712
usema_init(188,4817

drivers/sgi/char/vga_font.c,29
unsigned char vga_font[3,23

drivers/fc4/soc.c,723
static char *version 20,968
#define soc_printk 56,1776
#define SOD(SOD59,1851
#define SOD(SOD61,1887
#define for_each_soc(for_each_soc64,1910
struct soc *socs 65,1965
static inline void soc_disable(67,1991
static inline void soc_enable(72,2098
static void soc_reset(81,2368
static void inline soc_solicited 105,2777
static void inline soc_request 156,4399
static void inline soc_unsolicited 172,5111
static void soc_intr(300,8766
#define TOKEN(TOKEN316,9242
static int soc_hw_enque 318,9308
static inline void soc_download_fw(474,14117
static inline void soc_init_bursts(485,14427
static inline void soc_init(502,14952
__initfunc(675,20468
EXPORT_NO_SYMBOLS;702,20934
void cleanup_module(705,20968

drivers/fc4/fc.c,1705
#define fc_printk 46,1602
#define FCD(FCD49,1671
#define FCND(FCND50,1700
#define FCD(FCD52,1749
#define FCND(FCND53,1764
static inline void *fc_dma_alloc(57,1805
static inline dma_handle fc_sync_dma_entry(62,1937
static inline void fc_sync_dma_exit(67,2075
static inline void fc_sync_dma_entry_sg(72,2211
static inline void fc_sync_dma_exit_sg(77,2383
#define FCP_CMND(FCP_CMND85,2603
#define FC_SCMND(FC_SCMND86,2655
#define SC_FCMND(SC_FCMND87,2722
static void fcp_scsi_insert_queue 92,2920
static void fcp_scsi_remove_queue 106,3220
fc_channel *fc_channels 118,3475
#define LSMAGIC	120,3508
} ls;ls131,3717
#define LSOMAGIC 133,3724
} lso;lso142,3896
#define LSEMAGIC 144,3904
} lse;lse151,4042
static void fcp_login_timeout(153,4050
static void fcp_login_done(160,4167
static void fcp_report_map_done(253,7084
void fcp_register(344,9896
static inline void fcp_scsi_receive(390,11399
void fcp_receive_solicited(467,13484
void fcp_state_change(524,14938
int fcp_initialize(535,15314
int fcp_forceoffline(664,19308
int fcp_init(714,20601
void fcp_release(738,20982
static void fcp_scsi_done 766,21587
static int fcp_scsi_queue_it(772,21697
int fcp_scsi_queuecommand(843,24086
void fcp_queue_empty(866,24741
int fcp_old_abort(879,24997
int fcp_scsi_abort(885,25089
void fcp_scsi_reset_done(921,26211
#define FCP_RESET_TIMEOUT 929,26376
int fcp_scsi_dev_reset(931,26410
int fcp_scsi_bus_reset(1006,28606
int fcp_scsi_host_reset(1012,28698
static int fcp_els_queue_it(1033,29138
static int fc_do_els(1045,29427
int fc_do_plogi(1101,30858
} prli;prli1134,31820
int fc_do_prli(1136,31829
int init_module(1155,32291
void cleanup_module(1160,32329

drivers/fc4/fc_syms.c,28
#define __NO_VERSION__5,88

drivers/fc4/fc.h,4601
#define __FC_H11,317
#define NAAID_IEEE	14,355
#define NAAID_IEEE_EXT	15,377
#define NAAID_LOCAL	16,403
#define NAAID_IP	17,426
#define NAAID_IEEE_REG	18,446
#define NAAID_IEEE_REG_EXT	19,472
#define NAAID_CCITT	20,501
#define NAAID_CCITT_GRP	21,525
} fc_wwn;fc_wwn29,659
#define R_CTL_DEVICE_DATA	34,725
#define R_CTL_EXTENDED_SVC	35,784
#define R_CTL_FC4_SVC	36,847
#define R_CTL_VIDEO	37,901
#define R_CTL_BASIC_SVC	38,950
#define R_CTL_LINK_CTL	39,1008
#define R_CTL_UNCATEGORIZED	41,1091
#define R_CTL_SOLICITED_DATA	42,1124
#define R_CTL_UNSOL_CONTROL	43,1158
#define R_CTL_SOLICITED_CONTROL	44,1191
#define R_CTL_UNSOL_DATA	45,1228
#define R_CTL_XFER_RDY	46,1258
#define R_CTL_COMMAND	47,1287
#define R_CTL_STATUS	48,1315
#define R_CTL_LS_NOP	50,1371
#define R_CTL_LS_ABTS	51,1398
#define R_CTL_LS_RMC	52,1426
#define R_CTL_LS_BA_ACC	53,1453
#define R_CTL_LS_BA_RJT	54,1483
#define R_CTL_ELS_REQ	56,1545
#define R_CTL_ELS_RSP	57,1573
#define R_CTL_ACK_1	59,1627
#define R_CTL_ACK_N	60,1653
#define R_CTL_P_RJT	61,1679
#define R_CTL_F_RJT	62,1705
#define R_CTL_P_BSY	63,1731
#define R_CTL_F_BSY_DF	64,1757
#define R_CTL_F_BSY_LC	65,1786
#define R_CTL_LCR	66,1815
#define TYPE_BASIC_LS	69,1857
#define TYPE_EXTENDED_LS	70,1885
#define TYPE_IS8802	71,1915
#define TYPE_IS8802_SNAP	72,1941
#define TYPE_SCSI_FCP	73,1971
#define TYPE_SCSI_GPP	74,1999
#define TYPE_HIPP_FP	75,2027
#define TYPE_IPI3_MASTER	76,2054
#define TYPE_IPI3_SLAVE	77,2084
#define TYPE_IPI3_PEER	78,2114
#define F_CTL_FILL_BYTES	81,2162
#define F_CTL_XCHG_REASSEMBLE	82,2196
#define F_CTL_RO_PRESENT	83,2235
#define F_CTL_ABORT_SEQ	84,2269
#define F_CTL_CONTINUE_SEQ	85,2303
#define F_CTL_INVALIDATE_XID	86,2339
#define F_CTL_XID_REASSIGNED	87,2377
#define F_CTL_SEQ_INITIATIVE	88,2415
#define F_CTL_CHAINED_SEQ	89,2453
#define F_CTL_END_CONNECT	90,2488
#define F_CTL_END_SEQ	91,2523
#define F_CTL_LAST_SEQ	92,2555
#define F_CTL_FIRST_SEQ	93,2588
#define F_CTL_SEQ_CONTEXT	94,2622
#define F_CTL_XCHG_CONTEXT	95,2657
} fc_hdr;fc_hdr104,2848
#define FILL_FCHDR_RCTL_DID(FILL_FCHDR_RCTL_DID106,2933
#define FILL_FCHDR_SID(FILL_FCHDR_SID107,3019
#define FILL_FCHDR_TYPE_FCTL(FILL_FCHDR_TYPE_FCTL108,3079
#define FILL_FCHDR_SEQ_DF_SEQ(FILL_FCHDR_SEQ_DF_SEQ109,3172
#define FILL_FCHDR_OXRX(FILL_FCHDR_OXRX110,3301
#define FS_GENERAL_MULTICAST	113,3419
#define FS_WELL_KNOWN_MULTICAST	114,3457
#define FS_HUNT_GROUP	115,3498
#define FS_MANAGEMENT_SERVER	116,3530
#define FS_TIME_SERVER	117,3568
#define FS_NAME_SERVER	118,3601
#define FS_FABRIC_CONTROLLER	119,3634
#define FS_FABRIC_F_PORT	120,3672
#define FS_BROADCAST	121,3706
} rjt_param;rjt_param130,3882
#define RJT_RETRY	133,3922
#define RJT_NONRETRY	134,3947
#define RJT_INVALID_DID	137,4002
#define RJT_INVALID_SID	138,4033
#define RJT_NPORT_NOT_AVAIL_TEMP	139,4064
#define RJT_NPORT_NOT_AVAIL_PERM	140,4102
#define RJT_CLASS_NOT_SUPPORTED	141,4140
#define RJT_DELIMITER_ERROR	142,4178
#define RJT_TYPE_NOT_SUPPORTED	143,4212
#define RJT_INVALID_LINK_CONTROL	144,4249
#define RJT_INVALID_R_CTL	145,4287
#define RJT_INVALID_F_CTL	146,4319
#define RJT_INVALID_OX_ID	147,4351
#define RJT_INVALID_RX_ID	148,4383
#define RJT_INVALID_SEQ_ID	149,4415
#define RJT_INVALID_DF_CTL	150,4448
#define RJT_INVALID_SEQ_CNT	151,4481
#define RJT_INVALID_PARAMETER	152,4515
#define RJT_EXCHANGE_ERROR	153,4551
#define RJT_PROTOCOL_ERROR	154,4584
#define RJT_INCORRECT_LENGTH	155,4617
#define RJT_UNEXPECTED_ACK	156,4652
#define RJT_UNEXPECTED_LINK_RESP	157,4685
#define RJT_LOGIN_REQUIRED	158,4723
#define RJT_EXCESSIVE_SEQUENCES	159,4756
#define RJT_CANT_ESTABLISH_EXCHANGE	160,4794
#define RJT_SECURITY_NOT_SUPPORTED	161,4835
#define RJT_FABRIC_NA	162,4875
#define RJT_VENDOR_UNIQUE	163,4904
#define SP_F_PORT_LOGIN	166,4938
#define LS_RJT	169,4998
#define LS_ACC	170,5026
#define LS_PRLI_ACC	171,5054
#define LS_PLOGI	172,5086
#define LS_FLOGI	173,5115
#define LS_LOGO	174,5144
#define LS_ABTX	175,5173
#define LS_RCS	176,5202
#define LS_RES	177,5230
#define LS_RSS	178,5258
#define LS_RSI	179,5286
#define LS_ESTS	180,5314
#define LS_ESTC	181,5343
#define LS_ADVC	182,5372
#define LS_RTV	183,5401
#define LS_RLS	184,5429
#define LS_ECHO	185,5457
#define LS_TEST	186,5486
#define LS_RRQ	187,5515
#define LS_IDENT	188,5543
#define LS_PRLI	189,5572
#define LS_DISPLAY	190,5601
#define LS_PRLO	191,5632
#define LS_PDISC	192,5661
#define LS_ADISC	193,5690
} common_svc_parm;common_svc_parm205,5894
} svc_parm;svc_parm217,6086
} logi;logi228,6258

drivers/fc4/soc.h,3764
#define __SOC_H7,158
struct soc_regs soc_regs15,282
#define SOC_CFG_EXT_RAM_BANK_MASK	23,530
#define SOC_CFG_EEPROM_BANK_MASK	24,575
#define SOC_CFG_BURST64_MASK	25,619
#define SOC_CFG_SBUS_PARITY_TEST	26,660
#define SOC_CFG_SBUS_PARITY_CHECK	27,704
#define SOC_CFG_SBUS_ENHANCED	28,749
#define SOC_CFG_BURST_MASK	29,791
#define SOC_CFG_BURST_4	31,843
#define SOC_CFG_BURST_16	32,880
#define SOC_CFG_BURST_32	33,917
#define SOC_CFG_BURST_64	34,954
#define SOC_SAE_ALIGNMENT	37,1026
#define SOC_SAE_UNSUPPORTED	38,1064
#define SOC_SAE_PARITY	39,1104
#define SOC_CMD_RSP_QALL	42,1173
#define SOC_CMD_RSP_Q0	43,1210
#define SOC_CMD_RSP_Q1	44,1246
#define SOC_CMD_RSP_Q2	45,1282
#define SOC_CMD_RSP_Q3	46,1318
#define SOC_CMD_REQ_QALL	47,1354
#define SOC_CMD_REQ_Q0	48,1391
#define SOC_CMD_REQ_Q1	49,1427
#define SOC_CMD_REQ_Q2	50,1463
#define SOC_CMD_REQ_Q3	51,1499
#define SOC_CMD_SAE	52,1535
#define SOC_CMD_INTR_PENDING	53,1568
#define SOC_CMD_NON_QUEUED	54,1609
#define SOC_CMD_IDLE	55,1648
#define SOC_CMD_SOFT_RESET	56,1682
#define SOC_IMASK_RSP_QALL	59,1752
#define SOC_IMASK_RSP_Q0	60,1791
#define SOC_IMASK_RSP_Q1	61,1828
#define SOC_IMASK_RSP_Q2	62,1865
#define SOC_IMASK_RSP_Q3	63,1902
#define SOC_IMASK_REQ_QALL	64,1939
#define SOC_IMASK_REQ_Q0	65,1978
#define SOC_IMASK_REQ_Q1	66,2015
#define SOC_IMASK_REQ_Q2	67,2052
#define SOC_IMASK_REQ_Q3	68,2089
#define SOC_IMASK_SAE	69,2126
#define SOC_IMASK_NON_QUEUED	70,2161
#define SOC_INTR(SOC_INTR72,2203
#define SOC_SETIMASK(SOC_SETIMASK76,2308
typedef u16 *xram_p;xram_p85,2520
static inline u32 xram_get_32 88,2575
static inline u32 xram_get_32low 94,2725
static inline u8 xram_get_8 99,2793
static inline void xram_copy_from 108,2937
static inline void xram_copy_to 115,3099
static inline void xram_bzero 125,3285
#define SOC_CQ_REQ_OFFSET	133,3446
#define SOC_CQ_RSP_OFFSET	134,3478
} soc_hw_cq;soc_hw_cq142,3590
#define SOC_PORT_A	144,3604
#define SOC_PORT_B	145,3651
#define SOC_FC_HDR	146,3698
#define SOC_NORSP	147,3750
#define SOC_NOINT	148,3820
#define SOC_XFERRDY	149,3888
#define SOC_IGNOREPARAM	150,3939
#define SOC_COMPLETE	151,4012
#define SOC_UNSOLICITED	152,4065
#define SOC_STATUS	154,4210
} soc_hdr;soc_hdr162,4358
} soc_data;soc_data167,4414
#define SOC_CQTYPE_OUTBOUND	169,4427
#define SOC_CQTYPE_INBOUND	170,4460
#define SOC_CQTYPE_SIMPLE	171,4492
#define SOC_CQTYPE_IO_WRITE	172,4523
#define SOC_CQTYPE_IO_READ	173,4556
#define SOC_CQTYPE_UNSOLICITED	174,4588
#define SOC_CQTYPE_DIAG	175,4624
#define SOC_CQTYPE_OFFLINE	176,4654
#define SOC_CQTYPE_RESPONSE	177,4686
#define SOC_CQTYPE_INLINE	178,4719
#define SOC_CQFLAGS_CONT	180,4751
#define SOC_CQFLAGS_FULL	181,4781
#define SOC_CQFLAGS_BADHDR	182,4811
#define SOC_CQFLAGS_BADPKT	183,4843
} soc_req;soc_req193,4998
#define SOC_OK	195,5010
#define SOC_P_RJT	196,5029
#define SOC_F_RJT	197,5050
#define SOC_P_BSY	198,5071
#define SOC_F_BSY	199,5092
#define SOC_ONLINE	200,5113
#define SOC_OFFLINE	201,5138
#define SOC_TIMEOUT	202,5164
#define SOC_OVERRUN	203,5190
#define SOC_UNKOWN_CQ_TYPE	204,5216
#define SOC_BAD_SEG_CNT	205,5248
#define SOC_MAX_XCHG_EXCEEDED	206,5278
#define SOC_BAD_XID	207,5313
#define SOC_XCHG_BUSY	208,5339
#define SOC_BAD_POOL_ID	209,5367
#define SOC_INSUFFICIENT_CQES	210,5397
#define SOC_ALLOC_FAIL	211,5432
#define SOC_BAD_SID	212,5461
#define SOC_NO_SEG_INIT	213,5487
} soc_rsp;soc_rsp225,5668
#define SOC_CQ_REQ0_SIZE	231,5770
#define SOC_CQ_REQ1_SIZE	232,5797
#define SOC_CQ_RSP0_SIZE	233,5825
#define SOC_CQ_RSP1_SIZE	234,5852
#define SOC_SOLICITED_RSP_Q	236,5880
#define SOC_UNSOLICITED_RSP_Q	237,5910
} soc_port;soc_port247,6062
} soc_cq;soc_cq256,6199
struct soc soc258,6210

drivers/fc4/fcp.h,1661
#define __FCP_H8,138
#define FCP_CNTL_WRITE	14,302
#define FCP_CNTL_READ	15,359
#define FCP_CNTL_ABORT_TSK	16,414
#define FCP_CNTL_CLR_TASK	17,473
#define FCP_CNTL_RESET	18,531
#define FCP_CNTL_CLR_ACA	19,578
#define FCP_CNTL_KILL_TASK	20,630
#define FCP_CNTL_QTYPE_MASK	21,689
#define 	FCP_CNTL_QTYPE_SIMPLE	22,755
#define 	FCP_CNTL_QTYPE_HEAD_OF_Q	23,798
#define		FCP_CNTL_QTYPE_ORDERED	24,843
#define 	FCP_CNTL_QTYPE_ACA_Q_TAG	25,887
#define 	FCP_CNTL_QTYPE_UNTAGGED	26,932
} fcp_cmd;fcp_cmd33,1064
#define	FCP_STATUS_MASK	36,1099
#define FCP_STATUS_RSP_LEN	37,1164
#define FCP_STATUS_SENSE_LEN	38,1226
#define FCP_STATUS_RESID	39,1287
} fcp_rsp;fcp_rsp49,1525
#define FCP_RSP_SCSI_BUS_ERR	54,1581
#define FCP_RSP_SCSI_PORT_ERR	55,1615
#define FCP_RSP_CARD_ERR	56,1650
#define FCP_RSP_CMD_COMPLETE	59,1704
#define FCP_RSP_CMD_INCOMPLETE	60,1740
#define FCP_RSP_CMD_DMA_ERR	61,1778
#define FCP_RSP_CMD_TRAN_ERR	62,1813
#define FCP_RSP_CMD_RESET	63,1849
#define FCP_RSP_CMD_ABORTED	64,1882
#define FCP_RSP_CMD_TIMEOUT	65,1917
#define FCP_RSP_CMD_OVERRUN	66,1952
#define FCP_RSP_ST_GOT_BUS	69,2016
#define FCP_RSP_ST_GOT_TARGET	70,2050
#define FCP_RSP_ST_SENT_CMD	71,2087
#define FCP_RSP_ST_XFRD_DATA	72,2122
#define FCP_RSP_ST_GOT_STATUS	73,2158
#define FCP_RSP_ST_GOT_SENSE	74,2195
#define FCP_RSP_STAT_DISC	77,2259
#define FCP_RSP_STAT_SYNC	78,2292
#define FCP_RSP_STAT_PERR	79,2325
#define FCP_RSP_STAT_BUS_RESET	80,2358
#define FCP_RSP_STAT_DEV_RESET	81,2396
#define FCP_RSP_STAT_ABORTED	82,2434
#define FCP_RSP_STAT_TIMEOUT	83,2470
#define FCP_RSP_STAT_NEGOTIATE	84,2506
} fcp_scsi_err;fcp_scsi_err92,2650

drivers/fc4/socal.c,825
static char *version 15,485
#define socal_printk 54,1364
#define SOD(SOD57,1447
#define SOD(SOD59,1485
#define for_each_socal(for_each_socal62,1508
struct socal *socals 63,1567
static void socal_memcpy(67,1668
static void socal_bzero(77,1846
static inline void socal_disable(87,1977
static inline void socal_enable(92,2090
static void socal_reset(101,2370
static void inline socal_solicited 125,2791
static void inline socal_request 202,5173
static void inline socal_unsolicited 218,5821
static void socal_intr(363,9763
#define TOKEN(TOKEN384,10485
static int socal_hw_enque 386,10551
static inline void socal_download_fw(551,15760
static inline void socal_init_bursts(565,16215
static inline void socal_init(602,17324
__initfunc(802,23794
EXPORT_NO_SYMBOLS;830,24276
void cleanup_module(833,24310

drivers/fc4/fc-al.h,250
#define __FC_AL_H10,233
#define	FC_AL_LISM	13,287
#define FC_AL_LIFA	14,350
#define FC_AL_LIPA	15,426
#define FC_AL_LIHA	16,508
#define FC_AL_LISA	17,584
#define FC_AL_LIRP	18,660
#define FC_AL_LILP	19,736
} fc_al_posmap;fc_al_posmap25,864

drivers/fc4/fcp_impl.h,1850
#define _FCP_SCSI_H8,208
typedef u32	dma_handle;dma_handle21,397
#define	FCP_SCSI_USE_NEW_EH_CODE	28,499
#define FC_CLASS_OUTBOUND	30,535
#define FC_CLASS_INBOUND	31,566
#define FC_CLASS_SIMPLE	32,596
#define FC_CLASS_IO_WRITE	33,626
#define FC_CLASS_IO_READ	34,657
#define FC_CLASS_UNSOLICITED	35,687
#define FC_CLASS_OFFLINE	36,721
#define PROTO_OFFLINE	38,752
#define PROTO_REPORT_AL_MAP	39,780
#define PROTO_FORCE_LIP	40,813
typedef struct fcp_cmnd fcp_cmnd44,866
} fcp_cmnd;fcp_cmnd64,1355
} fcp_posmap;fcp_posmap69,1430
typedef struct _fc_channel _fc_channel71,1445
} fc_channel;fc_channel112,2443
extern fc_channel *fc_channels;114,2458
#define FC_STATE_UNINITED	116,2491
#define FC_STATE_ONLINE	117,2519
#define FC_STATE_OFFLINE	118,2546
#define FC_STATE_RESETING	119,2573
#define FC_STATE_FPORT_OK	120,2601
#define FC_STATE_MAYBEOFFLINE	121,2629
#define FC_STATUS_OK	123,2662
#define FC_STATUS_P_RJT	124,2687
#define FC_STATUS_F_RJT	125,2715
#define FC_STATUS_P_BSY	126,2743
#define FC_STATUS_F_BSY	127,2771
#define FC_STATUS_ERR_OFFLINE	128,2799
#define FC_STATUS_TIMEOUT	129,2835
#define FC_STATUS_ERR_OVERRUN	130,2867
#define FC_STATUS_POINTTOPOINT	131,2903
#define FC_STATUS_AL	132,2940
#define FC_STATUS_UNKNOWN_CQ_TYPE	133,2968
#define FC_STATUS_BAD_SEG_CNT	134,3007
#define FC_STATUS_MAX_XCHG_EXCEEDED	135,3043
#define FC_STATUS_BAD_XID	136,3084
#define FC_STATUS_XCHG_BUSY	137,3116
#define FC_STATUS_BAD_POOL_ID	138,3150
#define FC_STATUS_INSUFFICIENT_CQES	139,3186
#define FC_STATUS_ALLOC_FAIL	140,3227
#define FC_STATUS_BAD_SID	141,3262
#define FC_STATUS_NO_SEQ_INIT	142,3294
#define FC_STATUS_TIMED_OUT	143,3330
#define FC_STATUS_BAD_RSP	144,3362
#define for_each_fc_channel(for_each_fc_channel154,3729
#define for_each_online_fc_channel(for_each_online_fc_channel157,3811

drivers/fc4/socal.h,5556
#define __SOCAL_H7,166
union socal_rq_reg socal_rq_reg15,292
struct socal_regs socal_regs19,359
#define reqpr 26,702
#define reqpw 27,726
#define respr 28,751
#define respw 29,775
#define SOCAL_CFG_EXT_RAM_BANK_MASK	33,826
#define SOCAL_CFG_EEPROM_BANK_MASK	34,873
#define SOCAL_CFG_BURST64_MASK	35,919
#define SOCAL_CFG_SBUS_PARITY_TEST	36,962
#define SOCAL_CFG_SBUS_PARITY_CHECK	37,1008
#define SOCAL_CFG_SBUS_ENHANCED	38,1055
#define SOCAL_CFG_BURST_MASK	39,1099
#define SOCAL_CFG_BURST_4	41,1153
#define SOCAL_CFG_BURST_8	42,1191
#define SOCAL_CFG_BURST_16	43,1229
#define SOCAL_CFG_BURST_32	44,1268
#define SOCAL_CFG_BURST_64	45,1307
#define SOCAL_CFG_BURST_128	46,1346
#define SOCAL_SAE_ALIGNMENT	49,1421
#define SOCAL_SAE_UNSUPPORTED	50,1461
#define SOCAL_SAE_PARITY	51,1503
#define SOCAL_CMD_RSP_QALL	54,1573
#define SOCAL_CMD_RSP_Q0	55,1612
#define SOCAL_CMD_RSP_Q1	56,1649
#define SOCAL_CMD_RSP_Q2	57,1686
#define SOCAL_CMD_RSP_Q3	58,1723
#define SOCAL_CMD_REQ_QALL	59,1760
#define SOCAL_CMD_REQ_Q0	60,1799
#define SOCAL_CMD_REQ_Q1	61,1836
#define SOCAL_CMD_REQ_Q2	62,1873
#define SOCAL_CMD_REQ_Q3	63,1910
#define SOCAL_CMD_SAE	64,1947
#define SOCAL_CMD_INTR_PENDING	65,1982
#define SOCAL_CMD_NON_QUEUED	66,2025
#define SOCAL_CMD_IDLE	67,2066
#define SOCAL_CMD_SOFT_RESET	68,2102
#define SOCAL_IMASK_RSP_QALL	71,2174
#define SOCAL_IMASK_RSP_Q0	72,2215
#define SOCAL_IMASK_RSP_Q1	73,2254
#define SOCAL_IMASK_RSP_Q2	74,2293
#define SOCAL_IMASK_RSP_Q3	75,2332
#define SOCAL_IMASK_REQ_QALL	76,2371
#define SOCAL_IMASK_REQ_Q0	77,2412
#define SOCAL_IMASK_REQ_Q1	78,2451
#define SOCAL_IMASK_REQ_Q2	79,2490
#define SOCAL_IMASK_REQ_Q3	80,2529
#define SOCAL_IMASK_SAE	81,2568
#define SOCAL_IMASK_NON_QUEUED	82,2605
#define SOCAL_INTR(SOCAL_INTR84,2649
#define SOCAL_SETIMASK(SOCAL_SETIMASK88,2760
#define SOCAL_MAX_EXCHANGES	91,2835
#define SOCAL_CQ_REQ_OFFSET	102,3089
#define SOCAL_CQ_RSP_OFFSET	103,3123
} socal_hw_cq;socal_hw_cq111,3237
#define SOCAL_PORT_A	113,3253
#define SOCAL_PORT_B	114,3302
#define SOCAL_FC_HDR	115,3351
#define SOCAL_NORSP	116,3405
#define SOCAL_NOINT	117,3477
#define SOCAL_XFERRDY	118,3547
#define SOCAL_IGNOREPARAM 119,3600
#define SOCAL_COMPLETE	120,3675
#define SOCAL_UNSOLICITED 121,3730
#define SOCAL_STATUS	123,3877
#define SOCAL_RSP_HDR	124,3938
} socal_hdr;socal_hdr132,4094
} socal_data;socal_data137,4152
#define SOCAL_CQTYPE_NOP	139,4167
#define SOCAL_CQTYPE_OUTBOUND	140,4197
#define SOCAL_CQTYPE_INBOUND	141,4232
#define SOCAL_CQTYPE_SIMPLE	142,4266
#define SOCAL_CQTYPE_IO_WRITE	143,4299
#define SOCAL_CQTYPE_IO_READ	144,4334
#define SOCAL_CQTYPE_UNSOLICITED 145,4368
#define SOCAL_CQTYPE_BYPASS_DEV	146,4406
#define SOCAL_CQTYPE_DIAG	147,4443
#define SOCAL_CQTYPE_OFFLINE	148,4474
#define SOCAL_CQTYPE_ADD_POOL	149,4508
#define SOCAL_CQTYPE_DELETE_POOL 150,4543
#define SOCAL_CQTYPE_ADD_BUFFER	151,4581
#define SOCAL_CQTYPE_ADD_POOL_BUFFER 152,4618
#define SOCAL_CQTYPE_REQUEST_ABORT 153,4660
#define SOCAL_CQTYPE_REQUEST_LIP 154,4700
#define SOCAL_CQTYPE_REPORT_MAP	155,4738
#define SOCAL_CQTYPE_RESPONSE	156,4775
#define SOCAL_CQTYPE_INLINE	157,4810
#define SOCAL_CQFLAGS_CONT	159,4844
#define SOCAL_CQFLAGS_FULL	160,4876
#define SOCAL_CQFLAGS_BADHDR	161,4908
#define SOCAL_CQFLAGS_BADPKT	162,4942
} socal_req;socal_req172,5102
#define SOCAL_OK	174,5116
#define SOCAL_P_RJT	175,5136
#define SOCAL_F_RJT	176,5159
#define SOCAL_P_BSY	177,5182
#define SOCAL_F_BSY	178,5205
#define SOCAL_ONLINE	179,5228
#define SOCAL_OFFLINE	180,5255
#define SOCAL_TIMEOUT	181,5283
#define SOCAL_OVERRUN	182,5311
#define SOCAL_ONLINE_LOOP	183,5339
#define SOCAL_OLD_PORT	184,5370
#define SOCAL_AL_PORT	185,5399
#define SOCAL_UNKOWN_CQ_TYPE	186,5427
#define SOCAL_BAD_SEG_CNT	187,5461
#define SOCAL_MAX_XCHG_EXCEEDED	188,5492
#define SOCAL_BAD_XID	189,5529
#define SOCAL_XCHG_BUSY	190,5557
#define SOCAL_BAD_POOL_ID	191,5587
#define SOCAL_INSUFFICIENT_CQES	192,5618
#define SOCAL_ALLOC_FAIL	193,5655
#define SOCAL_BAD_SID	194,5685
#define SOCAL_NO_SEG_INIT	195,5713
#define SOCAL_BAD_DID	196,5744
#define SOCAL_ABORTED	197,5772
#define SOCAL_ABORT_FAILED	198,5800
} socal_rsp;socal_rsp211,6000
} socal_cmdonly;socal_cmdonly220,6116
#define SOCAL_DIAG_NOP	222,6134
#define SOCAL_DIAG_INT_LOOP	223,6163
#define SOCAL_DIAG_EXT_LOOP	224,6196
#define SOCAL_DIAG_REM_LOOP	225,6229
#define SOCAL_DIAG_XRAM_TEST	226,6262
#define SOCAL_DIAG_SOC_TEST	227,6296
#define SOCAL_DIAG_HCB_TEST	228,6329
#define SOCAL_DIAG_SOCLB_TEST	229,6362
#define SOCAL_DIAG_SRDSLB_TEST	230,6397
#define SOCAL_DIAG_EXTOE_TEST	231,6433
} socal_diag_req;socal_diag_req241,6583
#define SOCAL_POOL_MASK_RCTL	243,6602
#define SOCAL_POOL_MASK_DID	244,6640
#define SOCAL_POOL_MASK_SID	245,6677
#define SOCAL_POOL_MASK_TYPE	246,6714
#define SOCAL_POOL_MASK_F_CTL	247,6752
#define SOCAL_POOL_MASK_SEQ_ID	248,6791
#define SOCAL_POOL_MASK_D_CTL	249,6831
#define SOCAL_POOL_MASK_SEQ_CNT	250,6870
#define SOCAL_POOL_MASK_OX_ID	251,6911
#define SOCAL_POOL_MASK_PARAM	252,6950
} socal_pool_req;socal_pool_req266,7177
#define SOCAL_CQ_REQ0_SIZE	272,7286
#define SOCAL_CQ_REQ1_SIZE	273,7315
#define SOCAL_CQ_RSP0_SIZE	274,7346
#define SOCAL_CQ_RSP1_SIZE	275,7375
#define SOCAL_CQ_RSP2_SIZE	276,7404
#define SOCAL_SOLICITED_RSP_Q	278,7434
#define SOCAL_SOLICITED_BAD_RSP_Q 279,7466
#define SOCAL_UNSOLICITED_RSP_Q	280,7502
} socal_port;socal_port290,7660
} socal_cq;socal_cq299,7802
struct socal socal301,7815

drivers/nubus/nubus.c,1295
static struct nubus_slot nubus_slots[25,513
extern __inline__ int not_useful(38,754
static unsigned long nubus_get_rom(47,895
static void nubus_rewind(63,1158
static void nubus_advance(81,1387
static unsigned long nubus_expand32(100,1651
static void nubus_move(107,1784
static void *nubus_rom_addr(115,1938
void nubus_memcpy(124,2142
void nubus_strncpy(134,2336
unsigned char *nubus_dirptr(149,2555
struct nubus_dir *nubus_openrootdir(158,2729
struct nubus_dir *nubus_opensubdir(175,3148
void nubus_closedir(186,3396
struct nubus_dirent *nubus_readdir(191,3446
static unsigned char nubus_vid_byte[220,3903
static unsigned long nubus_vid_offset[221,3944
static void nubus_irqsplat(223,3988
static int nubus_add_irqsplatter(230,4179
void nubus_video_shutup(238,4377
static struct nubus_device_specifier *nubus_device_list=283,5203
void register_nubus_device(285,5267
void unregister_nubus_device(291,5383
static struct nubus_device_specifier *find_nubus_device(299,5561
void nubus_probe_slot(317,5926
void nubus_probe_bus(483,8844
void nubus_sweep_video(500,9258
int nubus_ethernet_addr(514,9406
static int sprint_nubus_config(565,10287
int get_nubus_list(575,10547
#define MSG 579,10616
static struct proc_dir_entry proc_nubus 598,11087
void nubus_init(605,11229

drivers/acorn/scsi/acornscsi-io.S,318
acornscsi_in16lp:acornscsi_in16lp30,787
acornscsi_in8:acornscsi_in847,1159
acornscsi_in4:acornscsi_in458,1404
acornscsi_in2:acornscsi_in267,1594
acornscsi_out16lp:acornscsi_out16lp82,1998
acornscsi_out8:acornscsi_out8107,2591
acornscsi_out4:acornscsi_out4122,2943
acornscsi_out2:acornscsi_out2133,3188

drivers/acorn/scsi/acornscsi.c,3735
#define DEBUG_NO_WRITE	25,977
#define DEBUG_QUEUES	26,1002
#define DEBUG_DMA	27,1025
#define DEBUG_ABORT	28,1045
#define DEBUG_DISCON	29,1067
#define DEBUG_CONNECT	30,1091
#define DEBUG_PHASES	31,1116
#define DEBUG_WRITE	32,1140
#define DEBUG_LINK	33,1164
#define DEBUG_MESSAGES	34,1187
#define DEBUG_RESET	35,1214
#define DEBUG_ALL	36,1239
#define SDTR_SIZE	74,2569
#define SDTR_PERIOD	75,2590
#define DEFAULT_PERIOD	76,2614
#define DEBUG 85,2839
#define NO_WRITE 87,2936
#define TIMEOUT_TIME 95,3160
#define USE_DMAC105,3455
#define ACORNSCSI_LIST 109,3529
#define DBG(DBG115,3700
#define DBG(DBG120,3786
#define STRINGIFY(STRINGIFY124,3840
#define STR(STR126,3871
#define NO_WRITE_STR 127,3899
#define VER_MAJOR 153,4472
#define VER_MINOR 154,4492
#define VER_PATCH 155,4512
#define ABORT_TAG 158,4551
#define NO_IRQ 164,4666
#define INIT_DEVCON0	175,4834
#define INIT_DEVCON1	176,4893
#define DMAC_READ	177,4929
#define DMAC_WRITE	178,4962
#define INIT_SBICDMA	179,4997
#define scsi_xferred	181,5035
#define DMAC_BUFFER_SIZE	186,5108
static struct status_entry status_entry192,5210
} status[198,5342
static unsigned char status_ptr[199,5359
#define ADD_STATUS(ADD_STATUS201,5396
unsigned int sdtr_period 210,5697
unsigned int sdtr_size 211,5737
static struct proc_dir_entry proc_scsi_acornscsi 213,5776
sbic_arm_write 227,6285
#define sbic_arm_writenext(sbic_arm_writenext233,6408
int sbic_arm_read 237,6486
#define sbic_arm_readnext(sbic_arm_readnext245,6657
#define dmac_read(dmac_read249,6723
#define dmac_write(dmac_write252,6782
#define dmac_clearintr(dmac_clearintr255,6865
unsigned int dmac_address 259,6942
void acornscsi_dumpdma 267,7125
unsigned long acornscsi_sbic_xfcount 291,7815
int acornscsi_sbic_issuecmd 303,8106
acornscsi_csdelay 317,8352
void acornscsi_resetcard 332,8618
static char *acornscsi_interrupttype[401,10811
static signed char acornscsi_map[408,10974
static char *acornscsi_interruptcode[427,12102
void print_scsi_status 464,12888
void print_sbic_status 476,13146
void acornscsi_dumplog 496,13677
char acornscsi_target 537,14647
cmdtype_t acornscsi_cmdtype 553,15066
datadir_t acornscsi_datadirection 574,15623
static struct sync_xfer_tbl sync_xfer_tbl598,16536
} sync_xfer_table[601,16623
int acornscsi_getperiod 614,17013
int round_period 636,17575
unsigned char calc_sync_xfer 657,18169
intr_ret_t acornscsi_kick 674,18716
void acornscsi_done 766,21237
void acornscsi_data_updateptr 831,23151
void acornscsi_data_read 858,23920
void acornscsi_data_write 903,25118
void acornscsi_dma_stop 949,26323
void acornscsi_dma_setup 968,26876
void acornscsi_dma_cleanup 1029,28692
void acornscsi_dma_intr 1087,30206
void acornscsi_dma_xfer 1172,32748
void acornscsi_dma_adjust 1188,33178
void acornscsi_sendcommand 1234,34706
void acornscsi_sendmessage 1261,35519
void acornscsi_readstatusbyte 1340,37831
unsigned char acornscsi_readmessagebyte 1354,38268
void acornscsi_message 1376,38905
void acornscsi_buildmessages 1649,47893
int acornscsi_starttransfer 1702,49267
int acornscsi_reconnect 1734,50404
int acornscsi_reconnect_finish 1792,52001
void acornscsi_disconnect_unexpected 1852,53837
void acornscsi_abortcmd 1870,54345
intr_ret_t acornscsi_sbicintr 1895,55122
void acornscsi_intr 2355,69962
int acornscsi_queuecmd 2407,71263
void acornscsi_reportstatus 2477,73441
int acornscsi_abort 2498,73885
int acornscsi_reset 2558,75742
static struct expansion_card *ecs[2607,77016
void acornscsi_init 2615,77245
int acornscsi_detect(2625,77510
int acornscsi_release 2696,79648
char *acornscsi_info(2733,80637
int acornscsi_proc_info(2757,81140
Scsi_Host_Template driver_template 2877,84332

drivers/acorn/scsi/acornscsi.h,4985
#define ACORNSCSI_H2,20
#define NULL 15,525
#define CMD_PER_LUN 19,568
#define CAN_QUEUE 23,616
#define PROC_SCSI_AKA30 28,696
#define ACORNSCSI_3 33,770
#define OWNID	54,1416
#define OWNID_FS1	55,1434
#define OWNID_FS2	56,1460
#define OWNID_EHP	57,1486
#define OWNID_EAF	58,1512
#define CTRL	60,1539
#define CTRL_DMAMODE	61,1556
#define CTRL_DMADBAMODE	62,1585
#define CTRL_DMABURST	63,1617
#define CTRL_DMAPOLLED	64,1647
#define CTRL_HHP	65,1673
#define CTRL_EDI	66,1698
#define CTRL_IDI	67,1723
#define CTRL_HA	68,1748
#define CTRL_HSP	69,1773
#define TIMEOUT	71,1799
#define TOTSECTS	72,1819
#define TOTHEADS	73,1839
#define TOTCYLH	74,1859
#define TOTCYLL	75,1879
#define LOGADDRH	76,1899
#define LOGADDRM2	77,1919
#define LOGADDRM1	78,1940
#define LOGADDRL	79,1961
#define SECTORNUM	80,1982
#define HEADNUM	81,2004
#define CYLH	82,2025
#define CYLL	83,2043
#define TARGETLUN	84,2061
#define TARGETLUN_TLV	85,2083
#define TARGETLUN_DOK	86,2113
#define CMNDPHASE	88,2144
#define SYNCHTRANSFER	89,2166
#define SYNCHTRANSFER_OF0	90,2192
#define SYNCHTRANSFER_OF1	91,2223
#define SYNCHTRANSFER_OF2	92,2254
#define SYNCHTRANSFER_OF3	93,2285
#define SYNCHTRANSFER_OF4	94,2316
#define SYNCHTRANSFER_OF5	95,2347
#define SYNCHTRANSFER_OF6	96,2378
#define SYNCHTRANSFER_OF7	97,2409
#define SYNCHTRANSFER_OF8	98,2440
#define SYNCHTRANSFER_OF9	99,2471
#define SYNCHTRANSFER_OF10	100,2502
#define SYNCHTRANSFER_OF11	101,2534
#define SYNCHTRANSFER_OF12	102,2566
#define SYNCHTRANSFER_8DBA	103,2598
#define SYNCHTRANSFER_2DBA	104,2630
#define SYNCHTRANSFER_3DBA	105,2662
#define SYNCHTRANSFER_4DBA	106,2694
#define SYNCHTRANSFER_5DBA	107,2726
#define SYNCHTRANSFER_6DBA	108,2758
#define SYNCHTRANSFER_7DBA	109,2790
#define TRANSCNTH	111,2823
#define TRANSCNTM	112,2845
#define TRANSCNTL	113,2867
#define DESTID	114,2889
#define DESTID_SCC	115,2909
#define DESTID_DPD	116,2936
#define SOURCEID	118,2964
#define SOURCEID_ER	119,2985
#define SOURCEID_ES	120,3013
#define SOURCEID_DSP	121,3041
#define SOURCEID_SIV	122,3070
#define SSR	124,3100
#define CMND	125,3117
#define CMND_RESET	126,3135
#define CMND_ABORT	127,3160
#define CMND_ASSERTATN	128,3185
#define CMND_NEGATEACK	129,3214
#define CMND_DISCONNECT	130,3243
#define CMND_RESELECT	131,3273
#define CMND_SELWITHATN	132,3301
#define CMND_SELECT	133,3331
#define CMND_SELECTATNTRANSFER	134,3357
#define CMND_SELECTTRANSFER	135,3393
#define CMND_RESELECTRXDATA	136,3426
#define CMND_RESELECTTXDATA	137,3459
#define CMND_WAITFORSELRECV	138,3492
#define CMND_SENDSTATCMD	139,3525
#define CMND_SENDDISCONNECT	140,3555
#define CMND_SETIDI	141,3588
#define CMND_RECEIVECMD	142,3614
#define CMND_RECEIVEDTA	143,3644
#define CMND_RECEIVEMSG	144,3674
#define CMND_RECEIVEUSP	145,3704
#define CMND_SENDCMD	146,3734
#define CMND_SENDDATA	147,3761
#define CMND_SENDMSG	148,3789
#define CMND_SENDUSP	149,3816
#define CMND_TRANSLATEADDR	150,3843
#define CMND_XFERINFO	151,3875
#define CMND_SBT	152,3903
#define DATA	154,3929
#define ASR	155,3947
#define ASR_INT	156,3964
#define ASR_LCI	157,3989
#define ASR_BSY	158,4014
#define ASR_CIP	159,4039
#define ASR_PE	160,4064
#define ASR_DBR	161,4088
#define INIT	164,4135
#define INIT_8BIT	165,4155
#define CHANNEL	167,4179
#define CHANNEL_0	168,4202
#define CHANNEL_1	169,4226
#define CHANNEL_2	170,4250
#define CHANNEL_3	171,4274
#define TXCNTLO	173,4299
#define TXCNTHI	174,4322
#define TXADRLO	175,4345
#define TXADRMD	176,4368
#define TXADRHI	177,4391
#define DEVCON0	179,4415
#define DEVCON0_AKL	180,4438
#define DEVCON0_RQL	181,4466
#define DEVCON0_EXW	182,4494
#define DEVCON0_ROT	183,4522
#define DEVCON0_CMP	184,4550
#define DEVCON0_DDMA	185,4578
#define DEVCON0_AHLD	186,4607
#define DEVCON0_MTM	187,4636
#define DEVCON1	189,4665
#define DEVCON1_WEV	190,4688
#define DEVCON1_BHLD	191,4716
#define MODECON	193,4746
#define MODECON_WOED	194,4769
#define MODECON_VERIFY	195,4796
#define MODECON_READ	196,4825
#define MODECON_WRITE	197,4852
#define MODECON_AUTOINIT	198,4880
#define MODECON_ADDRDIR	199,4910
#define MODECON_DEMAND	200,4940
#define MODECON_SINGLE	201,4969
#define MODECON_BLOCK	202,4998
#define MODECON_CASCADE	203,5026
#define STATUS	205,5057
#define STATUS_TC0	206,5079
#define STATUS_RQ0	207,5106
#define TEMPLO	209,5134
#define TEMPHI	210,5156
#define REQREG	211,5178
#define MASKREG	212,5200
#define MASKREG_M0	213,5223
#define MASKREG_M1	214,5248
#define MASKREG_M2	215,5273
#define MASKREG_M3	216,5298
#define POD_SPACE(POD_SPACE220,5364
#define MASK_ON	221,5401
#define MASK_OFF	222,5464
#define min(min224,5517
#define max(max225,5558
} phase_t;phase_t245,6352
} intr_ret_t;intr_ret_t254,6594
} dmadir_t;dmadir_t262,6742
} syncxfer_t;syncxfer_t272,7066
} cmdtype_t;cmdtype_t281,7283
} datadir_t;datadir_t289,7471
typedef struct acornscsi_hostdata acornscsi_hostdata297,7566
} AS_Host;AS_Host373,10148

drivers/acorn/scsi/cumana_1.c,959
#define AUTOSENSE1,0
#define PSEUDO_DMA2,18
static const card_ids cumanascsi_cids[67,1361
static struct proc_dir_entry proc_scsi_cumana1 72,1467
void cumanascsi_setup(86,1835
#define CUMANA_ADDRESS(CUMANA_ADDRESS89,1884
#define CUMANA_IRQ(CUMANA_IRQ90,1968
static struct expansion_card *ecs[102,2315
int cumanascsi_detect(104,2355
int cumanascsi_release 158,3981
const char * cumanascsi_info 173,4290
#define CTRL(CTRL178,4385
#define STAT(STAT179,4436
#define IN(IN180,4469
#define OUT(OUT181,4500
#define CTRL(CTRL183,4543
#define STAT(STAT184,4588
#define IN(IN185,4612
#define IN2(IN2186,4634
#define OUT(OUT187,4701
#define OUT2(OUT2188,4731
#define L(L190,4797
#define H(H191,4842
static inline int NCR5380_pwrite(193,4888
static inline int NCR5380_pread(263,6579
#define CTRL(CTRL337,8230
static char cumanascsi_read(339,8278
static void cumanascsi_write(352,8546
Scsi_Host_Template driver_template 368,8869

drivers/acorn/scsi/cumana_1.h,658
#define CUMANA_NCR5380_H33,583
#define CUMANASCSI_PUBLIC_RELEASE 35,609
#define NULL 49,1077
#define CMD_PER_LUN 53,1120
#define CAN_QUEUE 57,1168
#define CUMANA_NCR5380 62,1224
#define NCR5380_implementation_fields 81,1840
#define NCR5380_local_declare(NCR5380_local_declare84,1900
#define NCR5380_setup(NCR5380_setup87,1971
#define NCR5380_read(NCR5380_read90,2035
#define NCR5380_write(NCR5380_write91,2093
#define do_NCR5380_intr 93,2168
#define NCR5380_queue_command 94,2211
#define NCR5380_abort 95,2266
#define NCR5380_reset 96,2305
#define NCR5380_proc_info 97,2344
#define BOARD_NORMAL	99,2392
#define BOARD_NCR53C400	100,2415

drivers/acorn/scsi/cumana_2.c,1517
#define CUMANASCSI2_XTALFREQ	37,900
#define CUMANASCSI2_ASYNC_PERIOD	38,933
#define CUMANASCSI2_SYNC_DEPTH	39,970
#define CUMANASCSI2_LIST	44,1062
#define CUMANASCSI2_STATUS	46,1125
#define STATUS_INT	47,1157
#define STATUS_DRQ	48,1187
#define STATUS_LATCHED	49,1217
#define CUMANASCSI2_ALATCH	51,1252
#define ALATCH_ENA_INT	52,1284
#define ALATCH_DIS_INT	53,1313
#define ALATCH_ENA_TERM	54,1342
#define ALATCH_DIS_TERM	55,1372
#define ALATCH_ENA_BIT32	56,1402
#define ALATCH_DIS_BIT32	57,1433
#define ALATCH_ENA_DMA	58,1464
#define ALATCH_DIS_DMA	59,1494
#define ALATCH_DMA_OUT	60,1524
#define ALATCH_DMA_IN	61,1554
#define CUMANASCSI2_PSEUDODMA	63,1584
#define CUMANASCSI2_FAS216_OFFSET	65,1623
#define CUMANASCSI2_FAS216_SHIFT	66,1664
#define VER_MAJOR	71,1718
#define VER_MINOR	72,1738
#define VER_PATCH	73,1758
static struct expansion_card *ecs[75,1779
int term[85,2035
static struct proc_dir_entry proc_scsi_cumanascsi_2 87,2087
cumanascsi_2_irqenable(98,2427
cumanascsi_2_irqdisable(110,2782
static const expansioncard_ops_t cumanascsi_2_ops 116,2927
cumanascsi_2_terminator_ctl(129,3280
cumanascsi_2_intr(149,3832
cumanascsi_2_invalidate(157,3987
cumanascsi_2_dma_setup(174,4581
cumanascsi_2_dma_pseudo(233,6235
cumanascsi_2_dma_stop(308,7618
cumanascsi_2_detect(323,8078
int cumanascsi_2_release(408,10771
const char *cumanascsi_2_info(432,11501
cumanascsi_2_set_proc_info(469,12501
int cumanascsi_2_proc_info 505,13652
Scsi_Host_Template driver_template 580,15692

drivers/acorn/scsi/cumana_2.h,250
#define CUMANA_2_H7,94
#define NULL 16,414
#define CAN_QUEUE	23,494
#define SCSI_ID	30,569
#define CUMANASCSI_2 39,667
#define NR_SG	62,1455
} CumanaScsi2_Info;CumanaScsi2_Info73,1765
#define CSTATUS_IRQ	75,1786
#define CSTATUS_DRQ	76,1815

drivers/acorn/scsi/ecoscsi.c,428
#define AUTOSENSE1,0
static struct proc_dir_entry proc_scsi_ecoscsi 60,1099
static char ecoscsi_read(64,1227
static void ecoscsi_write(71,1379
void ecoscsi_setup(88,1787
int ecoscsi_detect(103,2136
int ecoscsi_release 158,3939
const char * ecoscsi_info 167,4135
#define STAT(STAT172,4212
static inline int NCR5380_pwrite(174,4242
static inline int NCR5380_pread(188,4534
Scsi_Host_Template driver_template 242,5683

drivers/acorn/scsi/ecoscsi.h,654
#define ECOSCSI_NCR5380_H29,458
#define ECOSCSI_PUBLIC_RELEASE 31,485
#define NULL 45,929
#define CMD_PER_LUN 49,972
#define CAN_QUEUE 53,1020
#define ECOSCSI_NCR5380 56,1049
#define NCR5380_implementation_fields 72,1517
#define NCR5380_local_declare(NCR5380_local_declare75,1577
#define NCR5380_setup(NCR5380_setup78,1648
#define NCR5380_read(NCR5380_read81,1712
#define NCR5380_write(NCR5380_write82,1767
#define do_NCR5380_intr 84,1839
#define NCR5380_queue_command 85,1879
#define NCR5380_abort 86,1931
#define NCR5380_reset 87,1967
#define NCR5380_proc_info 88,2003
#define BOARD_NORMAL	90,2048
#define BOARD_NCR53C400	91,2071

drivers/acorn/scsi/fas216.c,2016
#define FAS216_C49,1351
#define VER_MAJOR	58,1535
#define VER_MINOR	59,1555
#define VER_PATCH	60,1575
#define SCSI2_TAG62,1596
#define SCSI2_SYNC87,2762
static struct { int stat, ssr, isr, ph; } list[96,2900
static int ptr;97,2951
static void fas216_dumpstate(99,2968
static void fas216_dumpinfo(112,3421
static void fas216_checkmagic(160,5539
#define fas216_checkmagic(fas216_checkmagic177,5968
static const char *fas216_bus_phase(180,6013
static const char *fas216_drv_phase(192,6236
static char fas216_target(211,6852
static void add_debug_list(219,6976
static void print_debug_list(229,7155
static int fas216_clockrate(253,7692
fas216_syncperiod(273,8275
fas216_set_sync(296,8921
fas216_updateptrs(312,9518
fas216_pio(352,10639
fas216_starttransfer(409,12040
fas216_stoptransfer(506,14951
fas216_disconnect_intr(540,15992
fas216_reselected_intr(589,17358
fas216_finish_reconnect(695,20244
static void fas216_message(758,22139
static void fas216_send_command(928,27060
static int fas216_busservice_selection(949,27649
static int fas216_busservice_messagesent(1000,29003
static int fas216_busservice_dataphase(1026,29777
static int fas216_busservice_reconnected(1068,30962
static int fas216_busservice_messageout(1104,31953
static void fas216_busservice_intr(1141,33026
static void fas216_funcdone_intr(1248,36513
void fas216_intr(1288,37745
static void fas216_kick(1327,39069
static void fas216_done(1501,43632
int fas216_queue_command(1579,45630
static void fas216_internal_done(1649,47535
int fas216_command(1663,47903
static void fas216_reportstatus(1699,48934
int fas216_eh_abort(1720,49358
int fas216_eh_device_reset(1730,49632
int fas216_eh_bus_reset(1740,49913
int fas216_eh_host_reset(1750,50185
int fas216_abort(1760,50472
static void fas216_reset_state(1820,52031
static void fas216_init_chip(1863,53212
int fas216_reset(1885,54070
int fas216_init(1976,56461
int fas216_release(2073,58731
int init_module(2100,59382
void cleanup_module(2105,59420

drivers/acorn/scsi/fas216.h,3476
#define FAS216_H11,252
#define NO_IRQ 14,285
#define REG_CTCL(REG_CTCL23,411
#define REG_STCL(REG_STCL24,452
#define REG_CTCM(REG_CTCM27,522
#define REG_STCM(REG_STCM28,591
#define REG_FF(REG_FF31,677
#define REG_CMD(REG_CMD34,759
#define CMD_NOP	35,827
#define CMD_FLUSHFIFO	36,850
#define CMD_RESETCHIP	37,878
#define CMD_RESETSCSI	38,906
#define CMD_TRANSFERINFO	40,935
#define CMD_INITCMDCOMPLETE	41,965
#define CMD_MSGACCEPTED	42,998
#define CMD_SETATN	43,1028
#define CMD_RSETATN	44,1053
#define CMD_SELECTWOATN	46,1080
#define CMD_SELECTATN	47,1110
#define CMD_SELECTATNSTOP	48,1138
#define CMD_ENABLESEL	49,1169
#define CMD_DISABLESEL	50,1197
#define CMD_SELECTATN3	51,1226
#define CMD_RESEL3	52,1255
#define CMD_WITHDMA	54,1281
#define REG_STAT(REG_STAT57,1337
#define STAT_IO	58,1406
#define STAT_CD	59,1451
#define STAT_MSG	60,1496
#define STAT_TRANSFERDONE	61,1542
#define STAT_TRANSFERCNTZ	62,1604
#define STAT_PARITYERROR	63,1672
#define STAT_REALBAD	64,1728
#define STAT_INT	65,1781
#define STAT_BUSMASK	67,1828
#define STAT_DATAOUT	68,1877
#define STAT_DATAIN	69,1922
#define STAT_COMMAND	70,1970
#define STAT_STATUS	71,2023
#define STAT_MESGOUT	72,2080
#define STAT_MESGIN	73,2141
#define REG_SDID(REG_SDID76,2243
#define BUSID(BUSID77,2312
#define REG_INST(REG_INST80,2390
#define INST_SELWOATN	81,2459
#define INST_SELATN	82,2514
#define INST_RESELECTED	83,2566
#define INST_FUNCDONE	84,2620
#define INST_BUSSERVICE	85,2674
#define INST_DISCONNECT	86,2729
#define INST_ILLEGALCMD	87,2783
#define INST_BUSRESET	88,2841
#define REG_STIM(REG_STIM91,2928
#define REG_IS(REG_IS94,3034
#define IS_BITS	95,3101
#define IS_SELARB	96,3124
#define IS_MSGBYTESENT	97,3173
#define IS_NOTCOMMAND	98,3232
#define IS_EARLYPHASE	99,3290
#define IS_COMPLETE	100,3346
#define IS_SOF	101,3393
#define REG_STP(REG_STP104,3474
#define REG_SOF(REG_SOF107,3576
#define REG_CFIS(REG_CFIS110,3678
#define CFIS_CF	111,3747
#define CFIS_IS	112,3797
#define REG_CNTL1(REG_CNTL1115,3861
#define CNTL1_CID	116,3931
#define CNTL1_STE	117,3977
#define CNTL1_PERE	118,4031
#define CNTL1_PTE	119,4096
#define CNTL1_DISR	120,4152
#define CNTL1_ETM	121,4215
#define REG_CLKF(REG_CLKF124,4311
#define CLKF_F37MHZ	125,4380
#define CLKF_F10MHZ	126,4431
#define CLKF_F12MHZ	127,4475
#define CLKF_F17MHZ	128,4526
#define CLKF_F22MHZ	129,4577
#define CLKF_F27MHZ	130,4628
#define CLKF_F32MHZ	131,4679
#define REG0_FTM(REG0_FTM134,4764
#define TEST_FTM	135,4834
#define TEST_FIM	136,4885
#define TEST_FHI	137,4939
#define REG_CNTL2(REG_CNTL2140,5042
#define CNTL2_PGDP	141,5113
#define CNTL2_PGRP	142,5179
#define CNTL2_ACDPE	143,5244
#define CNTL2_S2FE	144,5311
#define CNTL2_TSDR	145,5370
#define CNTL2_SBO	146,5422
#define CNTL2_ENF	147,5477
#define CNTL2_DAE	148,5530
#define REG_CNTL3(REG_CNTL3151,5633
#define CNTL3_BS8	152,5704
#define CNTL3_MDM	153,5755
#define CNTL3_LBTM	154,5808
#define CNTL3_FASTCLK	155,5869
#define CNTL3_FASTSCSI	156,5929
#define CNTL3_G2CB	157,5982
#define CNTL3_QTAG	158,6040
#define CNTL3_ADIDCHK	159,6097
#define REG_CTCH(REG_CTCH162,6198
#define REG_STCH(REG_STCH163,6268
#define REG1_ID(REG1_ID166,6369
#define REG0_DAL(REG0_DAL169,6460
} phase_t;phase_t184,7142
} fasdmadir_t;fasdmadir_t189,7258
} fasdmatype_t;fasdmatype_t197,7520
} syncneg_t;syncneg_t204,7769
#define MAGIC	206,7783
} FAS216_Info;FAS216_Info291,10630

drivers/acorn/scsi/msgqueue.c,359
static struct msgqueue_entry *mqe_alloc(22,503
static void mqe_free(38,880
void msgqueue_initialise(51,1152
void msgqueue_free(70,1509
int msgqueue_msglength(80,1776
char *msgqueue_getnextmsg(98,2230
char *msgqueue_peeknextmsg(118,2764
int msgqueue_addmsg(135,3196
void msgqueue_flush(167,3764
int init_module(187,4201
void cleanup_module(192,4239

drivers/acorn/scsi/msgqueue.h,128
#define MSGQUEUE_H7,92
struct msgqueue_entry msgqueue_entry9,112
#define NR_MESSAGES 15,206
} MsgQueue_t;MsgQueue_t21,358

drivers/acorn/scsi/oak.c,630
#define AUTOSENSE1,0
#define START_DMA_INITIATOR_RECEIVE_REG 67,1389
static const card_ids oakscsi_cids[69,1440
static struct proc_dir_entry proc_scsi_oakscsi 74,1535
#define OAK_ADDRESS(OAK_ADDRESS78,1653
#define OAK_IRQ(OAK_IRQ79,1718
static struct expansion_card *ecs[91,2051
int oakscsi_detect(93,2090
int oakscsi_release 150,3683
const char * oakscsi_info 165,3986
#define STAT(STAT169,4057
static inline int NCR5380_pwrite(172,4137
static inline int NCR5380_pread(186,4429
#define oakscsi_read(oakscsi_read226,5186
#define oakscsi_write(oakscsi_write227,5256
Scsi_Host_Template driver_template 235,5401

drivers/acorn/scsi/oak.h,648
#define OAK_NCR5380_H33,575
#define OAKSCSI_PUBLIC_RELEASE 35,598
#define NULL 49,1033
#define CMD_PER_LUN 53,1076
#define CAN_QUEUE 57,1124
#define OAK_NCR5380 60,1153
#define NCR5380_implementation_fields 77,1670
#define NCR5380_local_declare(NCR5380_local_declare80,1727
#define NCR5380_setup(NCR5380_setup83,1798
#define NCR5380_read(NCR5380_read86,1862
#define NCR5380_write(NCR5380_write87,1918
#define do_NCR5380_intr	88,1989
#define NCR5380_queue_command	89,2031
#define NCR5380_abort	90,2084
#define NCR5380_reset	91,2122
#define NCR5380_proc_info	92,2160
#define BOARD_NORMAL	94,2206
#define BOARD_NCR53C400	95,2229

drivers/acorn/scsi/powertec.c,1284
#define POWERTEC_XTALFREQ	40,1028
#define POWERTEC_ASYNC_PERIOD	41,1057
#define POWERTEC_SYNC_DEPTH	42,1091
#define POWERTECSCSI_LIST	47,1179
#define POWERTEC_FAS216_OFFSET	49,1247
#define POWERTEC_FAS216_SHIFT	50,1284
#define POWERTEC_INTR_STATUS	52,1317
#define POWERTEC_INTR_BIT	53,1352
#define POWERTEC_RESET_CONTROL	55,1384
#define POWERTEC_RESET_BIT	56,1421
#define POWERTEC_TERM_CONTROL	58,1451
#define POWERTEC_TERM_ENABLE	59,1487
#define POWERTEC_INTR_CONTROL	61,1519
#define POWERTEC_INTR_ENABLE	62,1555
#define POWERTEC_INTR_DISABLE	63,1586
#define VER_MAJOR	68,1637
#define VER_MINOR	69,1657
#define VER_PATCH	70,1677
static struct expansion_card *ecs[77,1849
int term[82,1953
static struct proc_dir_entry proc_scsi_powertec 84,2005
powertecscsi_irqenable(95,2339
powertecscsi_irqdisable(107,2700
static const expansioncard_ops_t powertecscsi_ops 113,2852
powertecscsi_terminator_ctl(126,3205
powertecscsi_intr(145,3759
powertecscsi_invalidate(153,3914
powertecscsi_dma_setup(170,4508
powertecscsi_dma_stop(218,5791
powertecscsi_detect(230,6146
int powertecscsi_release(316,8806
const char *powertecscsi_info(341,9542
powertecscsi_set_proc_info(378,10552
int powertecscsi_proc_info(414,11708
Scsi_Host_Template driver_template 489,13755

drivers/acorn/scsi/powertec.h,226
#define POWERTECSCSI_H7,97
#define NULL 16,421
#define CAN_QUEUE	23,501
#define CMD_PER_LUN	27,549
#define SCSI_ID	34,626
#define POWERTECSCSI 41,701
#define NR_SG	69,1678
} PowerTecScsi_Info;PowerTecScsi_Info81,1873

drivers/acorn/scsi/queue.c,552
#define SECTOR_SIZE 13,275
typedef struct queue_entry queue_entry26,535
} QE_t;QE_t31,665
#define QUEUE_MAGIC_FREE	33,674
#define QUEUE_MAGIC_USED	34,710
int queue_initialise 43,899
void queue_free 69,1392
int queue_add_cmd_ordered 83,1744
int queue_add_cmd_tail 136,2963
Scsi_Cmnd *queue_remove_exclude 177,3880
Scsi_Cmnd *queue_remove 231,5099
Scsi_Cmnd *queue_remove_tgtluntag 273,6037
int queue_probetgtlun 333,7357
int queue_cmdonqueue 352,7795
int queue_removecmd 370,8189
int init_module 427,9380
void cleanup_module 432,9419

drivers/acorn/scsi/queue.h,47
#define QUEUE_H7,78
} Queue_t;Queue_t14,298

drivers/acorn/scsi/eesox.c,1222
#define NO_IRQ	41,1026
#define NO_DMA	42,1045
#define EESOX_XTALFREQ	45,1085
#define EESOX_ASYNC_PERIOD	46,1112
#define EESOX_SYNC_DEPTH	47,1143
#define EESOXSCSI_LIST	52,1228
#define EESOX_FAS216_OFFSET	54,1285
#define EESOX_FAS216_SHIFT	55,1319
#define EESOX_STATUS	57,1349
#define EESOX_STAT_INTR	58,1377
#define EESOX_STAT_DMA	59,1407
#define EESOX_CONTROL	61,1437
#define EESOX_INTR_ENABLE	62,1466
#define EESOX_TERM_ENABLE	63,1497
#define EESOX_RESET	64,1528
#define EESOX_DMA_OFFSET	66,1555
#define VER_MAJOR	71,1605
#define VER_MINOR	72,1625
#define VER_PATCH	73,1645
static struct expansion_card *ecs[75,1666
int term[85,1918
static struct proc_dir_entry proc_scsi_eesox 87,1970
eesoxscsi_irqenable(98,2292
eesoxscsi_irqdisable(113,2704
static const expansioncard_ops_t eesoxscsi_ops 122,2913
eesoxscsi_terminator_ctl(135,3252
eesoxscsi_intr(157,3880
eesoxscsi_invalidate(165,4032
eesoxscsi_dma_setup(182,4620
eesoxscsi_dma_pseudo(225,5781
eesoxscsi_dma_stop(319,7983
eesoxscsi_detect(331,8329
int eesoxscsi_release(413,10815
const char *eesoxscsi_info(437,11530
eesoxscsi_set_proc_info(473,12537
int eesoxscsi_proc_info(509,13679
Scsi_Host_Template driver_template 581,15679

drivers/acorn/scsi/eesox.h,246
#define EESOXSCSI_H7,91
#define NULL 16,400
#define CAN_QUEUE	23,480
#define CMD_PER_LUN	27,528
#define SCSI_ID	34,605
#define EESOXSCSI 41,680
#define NR_SG	63,1388
struct control control65,1407
} EESOXScsi_Info;EESOXScsi_Info77,1629

drivers/acorn/block/fd1772.c,4356
#define MAJOR_NR 144,6661
#define FLOPPY_DMA 145,6691
#define	FD_MAX_UNITS	155,6988
#define FD_MAX_UNITS 159,7053
#define TRACKBUFFER 160,7076
#define DPRINT(DPRINT164,7130
#define DPRINT(DPRINT166,7163
static struct archy_disk_type archy_disk_type170,7210
} disk_type[175,7390
#define	NUM_DISK_TYPES 185,7792
#define MAX_DISK_SIZE 191,7966
static int floppy_sizes[193,7993
static int floppy_blocksizes[194,8023
static struct archy_floppy_struct archy_floppy_struct197,8098
} unit[208,8500
extern volatile int fdc1772_comendstatus;213,8732
extern volatile int fdc1772_fdc_int_done;214,8774
#define FDC1772BASE 216,8817
#define FDC1772_READ(FDC1772_READ218,8865
void FDC1772_WRITE(226,9295
#define	MAX_SECTORS	238,9624
unsigned char *DMABuffer;240,9648
#define PhysDMABuffer 243,9818
unsigned char *TrackBuffer;246,9873
#define PhysTrackBuffer 247,9930
static int BufferDrive,248,9989
static int BufferDrive, BufferSide,248,9989
static int BufferDrive, BufferSide, BufferTrack;248,9989
static int read_track;249,10038
#define SECTOR_BUFFER(SECTOR_BUFFER251,10113
#define IS_BUFFERED(IS_BUFFERED252,10171
static int SelectedDrive 261,10451
static int ReqCmd,262,10481
static int ReqCmd, ReqBlock;262,10481
static int ReqSide,263,10510
static int ReqSide, ReqTrack,263,10510
static int ReqSide, ReqTrack, ReqSector,263,10510
static int ReqSide, ReqTrack, ReqSector, ReqCnt;263,10510
static int HeadSettleFlag 264,10559
static unsigned char *ReqData,265,10590
static unsigned char *ReqData, *ReqBuffer;265,10590
static int MotorOn 266,10633
static volatile int fdc_busy 269,10713
static struct wait_queue *fdc_wait 270,10747
static unsigned int changed_floppies 273,10792
#define	CHECK_CHANGE_DELAY	274,10854
#define	FD_MOTOR_OFF_DELAY	277,10964
#define	FD_MOTOR_OFF_MAXTRY	278,10999
#define FLOPPY_TIMEOUT	280,11036
#define RECALIBRATE_ERRORS	281,11067
#define MAX_ERRORS	283,11165
#define	START_MOTOR_OFF_TIMER(START_MOTOR_OFF_TIMER287,11253
#define	START_CHECK_CHANGE_TIMER(START_CHECK_CHANGE_TIMER294,11453
#define	START_TIMEOUT(START_TIMEOUT300,11642
#define	STOP_TIMEOUT(STOP_TIMEOUT307,11843
#define ENABLE_IRQ(ENABLE_IRQ312,11942
#define DISABLE_IRQ(DISABLE_IRQ314,11991
struct tq_struct fd1772_tq 318,12078
static int Probing 325,12295
static int NeedSeek 330,12415
static struct timer_list motor_off_timer 371,13932
static struct timer_list readtrack_timer 374,14034
static struct timer_list timeout_timer 377,14139
int stdma_islocked(381,14259
static void fd_select_side(388,14332
static void fd_select_drive(403,14572
static void fd_deselect(431,15145
static void fd_motor_off_timer(451,15631
static void check_change(500,16929
static __inline__ void set_head_settle_flag(539,17804
static __inline__ int get_head_settle_flag(544,17894
static void floppy_irqconsequencehandler(558,18102
static void fd_error(584,18753
#define	SET_IRQ_HANDLER(SET_IRQ_HANDLER604,19207
static void do_fd_action(616,19747
static void fd_calibrate(665,20885
static void fd_calibrate_done(684,21323
static void fd_seek(704,21730
static void fd_seek_done(732,22412
static int MultReadInProgress 758,23001
static void fd_rwsec(762,23045
static void fd_readtrack_check(867,26272
static void fd_rwsec_done(920,27736
static void fd_times_out(1039,30844
static void finish_fdc(1061,31540
static void finish_fdc_done(1084,32096
static fd_ref[1116,32901
static fd_device[1118,32934
#define CURRENT_DEVICE 1125,33081
#define CURRENT_ERRORS 1128,33150
static void floppy_off(1132,33215
static int check_floppy_change(1148,33853
static int floppy_revalidate(1173,34412
static __inline__ void copy_buffer(1189,34755
static void setup_req_params(1201,35001
static void redo_fd_request(1220,35471
static void fd1772_checkint(1295,37122
void do_fd_request(1309,37487
static int invalidate_drive(1332,37856
static int fd_ioctl(1344,38070
#define IOCTL_MODE_BIT 1347,38177
#define OPEN_WRITE_BIT 1348,38202
#define IOCTL_ALLOWED 1349,38228
static void fd_probe(1385,38951
static int fd_test_drive_present(1409,39726
static void config_types(1470,41781
static int floppy_open(1509,42835
static void floppy_release(1563,43943
static struct file_operations floppy_fops 1582,44397
int floppy_init(1601,44883
void floppy_setup(1665,46529
void floppy_eject(1669,46574

drivers/acorn/block/ide-ics.c,1303
#define MAX_IFS	26,465
#define ICS_IDENT_OFFSET	28,484
#define ICS_ARCIN_V5_INTRSTAT	30,517
#define ICS_ARCIN_V5_INTROFFSET	31,554
#define ICS_ARCIN_V5_IDEOFFSET	32,593
#define ICS_ARCIN_V5_IDEALTOFFSET	33,631
#define ICS_ARCIN_V5_IDESTEPPING	34,671
#define ICS_ARCIN_V6_IDEOFFSET_1	36,707
#define ICS_ARCIN_V6_INTROFFSET_1	37,746
#define ICS_ARCIN_V6_INTRSTAT_1	38,786
#define ICS_ARCIN_V6_IDEALTOFFSET_1	39,825
#define ICS_ARCIN_V6_IDEOFFSET_2	40,867
#define ICS_ARCIN_V6_INTROFFSET_2	41,906
#define ICS_ARCIN_V6_INTRSTAT_2	42,946
#define ICS_ARCIN_V6_IDEALTOFFSET_2	43,985
#define ICS_ARCIN_V6_IDESTEPPING	44,1027
static const card_ids icside_cids[46,1063
} iftype_t;iftype_t55,1223
static struct expansion_card *ec[57,1236
static int result[58,1282
static void icside_irqenable_arcin_v5 65,1526
static void icside_irqdisable_arcin_v5 74,1837
static const expansioncard_ops_t icside_ops_arcin_v5 80,2018
static void icside_irqenable_arcin_v6 92,2352
static void icside_irqdisable_arcin_v6 102,2727
static const expansioncard_ops_t icside_ops_arcin_v6 109,2968
static iftype_t icside_identifyif 122,3251
static int icside_register_port(169,4428
static inline void icside_register 190,5010
int icside_init 246,6556
int init_module 272,6970
void cleanup_module 277,7021

drivers/acorn/block/ide-rapide.c,229
static const card_ids rapide_cids[20,373
static struct expansion_card *ec[25,487
static int result[26,533
static inline int rapide_register(28,565
int rapide_init(41,837
int init_module 67,1230
void cleanup_module 72,1281

drivers/acorn/block/mfmhd.c,4264
#define MAJOR_NR	116,4842
#define HDIO_GETGEO 131,5170
struct hd_geometry hd_geometry132,5196
#define MFM_MAXDRIVES 146,5414
#define ONBOARD_MFM_ADDRESS 150,5513
static const card_ids mfm_cids[160,5727
struct mfm_info mfm_info173,5948
#define NO_TRACK 179,6092
#define NEED_1_RECAL 180,6112
#define NEED_2_RECAL 181,6136
} mfm_info[190,6289
#define MFM_DRV_INFO 192,6317
static struct hd_struct mfm[194,6361
static int mfm_sizes[195,6410
static int mfm_blocksizes[196,6452
static int mfm_sectsizes[197,6499
static struct wait_queue *mfm_wait_open 198,6545
extern unsigned int hdc63463_baseaddress;201,6633
extern unsigned int hdc63463_irqpolladdress;202,6705
extern unsigned int hdc63463_irqpollmask;203,6788
extern unsigned int hdc63463_dataptr;204,6858
extern int hdc63463_dataleft;205,6938
static int lastspecifieddrive;210,7011
static unsigned Busy;211,7042
static unsigned int PartFragRead;213,7065
static unsigned int PartFragRead_RestartBlock;218,7266
static unsigned int PartFragRead_SectorsLeft;219,7354
static int Sectors256LeftInCurrent;221,7442
static int SectorsLeftInRequest;222,7522
static int Copy_Sector;223,7618
static char *Copy_buffer;225,7741
static unsigned int mfm_addr;236,8042
static unsigned int mfm_IRQPollLoc;237,8098
static unsigned int mfm_irqenable;238,8176
static unsigned char mfm_irq;239,8244
static int mfm_drives 240,8298
static int mfm_status 241,8349
static int *errors;242,8400
static struct rawcmd rawcmd244,8421
} raw_cmd;253,8625
static unsigned char result[255,8637
static struct cont cont257,8671
} *cont 262,8870
static struct tq_struct mfm_tq 264,8887
int number_mfm_drives 266,8957
#define MFM_COMMAND 273,9139
#define MFM_DATAOUT 274,9174
#define MFM_STATUS 275,9209
#define MFM_DATAIN 276,9244
#define CMD_ABT	278,9280
#define CMD_SPC	279,9314
#define CMD_TST	280,9350
#define CMD_RCLB	281,9383
#define CMD_SEK	282,9423
#define CMD_WFS	283,9456
#define CMD_WFM	284,9502
#define CMD_MTB	285,9543
#define CMD_CMPD	286,9588
#define CMD_WD	287,9629
#define CMD_RED	288,9667
#define CMD_RIS	289,9715
#define CMD_FID	290,9756
#define CMD_RID	291,9792
#define CMD_BTM	292,9828
#define CMD_CKD	293,9873
#define CMD_RD	294,9912
#define CMD_OPBW	295,9949
#define CMD_OPBR	296,9995
#define CMD_CKV	297,10040
#define CMD_CKE	298,10080
#define CMD_POD	299,10118
#define CMD_POL	300,10162
#define CMD_RCAL	301,10205
#define STAT_BSY	303,10241
#define STAT_CPR	304,10276
#define STAT_CED	305,10334
#define STAT_SED	306,10376
#define STAT_DER	307,10415
#define STAT_ABN	308,10457
#define STAT_POL	309,10500
static void console_printf(313,10649
#define DBG(DBG330,10980
#define DBG(DBG332,11022
static void print_status(335,11048
static void issue_command(384,12159
static void wait_for_completion(420,13150
static void wait_for_command_end(425,13245
static void mfm_rw_intr(442,13584
static void mfm_setup_rw(575,17938
static void mfm_recal_intr(583,18097
static void mfm_seek_intr(616,18890
#define IDEA2649,19624
#define SPEC_SL 651,19652
#define SPEC_SH 652,19673
#define SPEC_SL 654,19757
#define SPEC_SH 655,19811
static void mfm_setupspecify 658,19896
static void mfm_specify 678,20921
static void mfm_seek(691,21272
static void mfm_initialise(719,21900
static void request_done(725,21970
static void error_handler(772,23491
static void rw_interrupt(783,23740
static struct cont rw_cont 788,23803
static void issue_request(800,24036
static void mfm_rerequest(878,26643
static void mfm_request(886,26740
static void do_mfm_request(975,29102
static void mfm_interrupt_handler(981,29204
static void mfm_geometry 1020,30033
static int mfm_detectdrive 1041,30938
static int mfm_initdrives(1129,32844
static int mfm_ioctl(1180,34118
static int mfm_open(1255,35729
static int mfm_release(1274,36104
void mfm_setup(1286,36384
void xd_set_geometry(1296,36634
static struct gendisk mfm_gendisk 1325,37555
static void mfm_geninit 1339,37964
static struct file_operations mfm_fops 1365,38706
static struct expansion_card *ecs;1384,39163
static int mfm_probecontroller 1393,39503
int mfm_init 1429,40266
static int mfm_reread_partitions(1487,41693
int init_module(1528,42653
void cleanup_module(1537,42762

drivers/acorn/block/fd1772dma.S,656
_fdc1772_fiqdata:_fdc1772_fiqdata8,96
_fdc1772_bytestogo:_fdc1772_bytestogo11,173
_fdc1772_dataaddr:_fdc1772_dataaddr15,267
_fdc1772_fdc_int_done:_fdc1772_fdc_int_done19,331
_fdc1772_comendstatus:_fdc1772_comendstatus22,396
_fdc1772_comendhandler:_fdc1772_comendhandler27,498
_fdc1772_dma_read:_fdc1772_dma_read41,895
_fdc1772_dma_read_notours:_fdc1772_dma_read_notours54,1475
_fdc1772_dma_read_end:_fdc1772_dma_read_end59,1656
_fdc1772_dma_write:_fdc1772_dma_write62,1711
_fdc1772_dma_write_notours:_fdc1772_dma_write_notours75,2228
_fdc1772_dma_write_end:_fdc1772_dma_write_end81,2412
_fdc1772_setupdma:_fdc1772_setupdma89,2577

drivers/acorn/block/mfm.S,606
_hdc63463_irqdata:_hdc63463_irqdata7,193
_hdc63463_baseaddress:_hdc63463_baseaddress10,270
_hdc63463_irqpolladdress:_hdc63463_irqpolladdress14,339
_hdc63463_irqpollmask:_hdc63463_irqpollmask18,409
_hdc63463_dataptr:_hdc63463_dataptr23,526
_hdc63463_dataleft:_hdc63463_dataleft28,620
_hdc63463_writedma:_hdc63463_writedma36,949
writedma_again:writedma_again42,1046
writedma_loop:writedma_loop75,1908
writedma_end:writedma_end96,2604
_hdc63463_readdma:_hdc63463_readdma107,3006
readdma_again:readdma_again112,3101
readdma_loop:readdma_loop143,3968
readdma_end:readdma_end159,4409

drivers/acorn/net/ether1.c,2136
#define __ETHER1_C56,1703
static unsigned int net_debug 59,1743
#define BUFFER_SIZE	61,1787
#define TX_AREA_START	62,1815
#define TX_AREA_END	63,1845
#define RX_AREA_START	64,1873
#define RX_AREA_END	65,1903
#define tx_done(tx_done67,1932
static char *version 69,2035
#define BUS_16 71,2115
#define BUS_8 72,2133
static const card_ids ether1_cids[74,2151
#define DISABLEIRQS 81,2332
#define NORMALIRQS 82,2354
#define ether1_inw(ether1_inw84,2377
#define ether1_outw(ether1_outw85,2492
ether1_inw_p 88,2649
ether1_outw_p 104,2946
ether1_inswb 127,3603
ether1_outswb 170,4405
ether1_writebuffer 214,5224
ether1_readbuffer 236,5691
__initfunc(257,6144
ether1_reset 305,7182
__initfunc(311,7277
#define NOP_ADDR	335,7636
#define NOP_SIZE	336,7669
static nop_t  init_nop 337,7693
#define TDR_ADDR	344,7765
#define TDR_SIZE	345,7791
static tdr_t  init_tdr	346,7815
#define MC_ADDR	354,7901
#define MC_SIZE	355,7927
static mc_t   init_mc 356,7951
#define SA_ADDR	365,8049
#define SA_SIZE	366,8075
static sa_t   init_sa 367,8099
#define CFG_ADDR	375,8186
#define CFG_SIZE	376,8212
static cfg_t  init_cfg 377,8236
#define SCB_ADDR	393,8436
#define SCB_SIZE	394,8462
static scb_t  init_scb 395,8486
#define ISCP_ADDR	407,8642
#define ISCP_SIZE	408,8669
static iscp_t init_iscp 409,8694
#define SCP_ADDR	417,8774
#define SCP_SIZE	418,8800
static scp_t  init_scp 419,8824
#define RFD_SIZE	426,8898
static rfd_t  init_rfd	427,8922
#define RBD_SIZE	437,8990
static rbd_t  init_rbd	438,9014
#define TX_SIZE	446,9080
#define TBD_SIZE	447,9104
ether1_init_for_open 450,9140
__initfunc(615,15098
__initfunc(673,16526
__initfunc(682,16673
ether1_txalloc 711,17177
ether1_restart 737,17706
ether1_open 759,18167
ether1_sendpacket 786,18679
ether1_xmit_done 871,20961
ether1_recv_done 974,23672
ether1_interrupt 1029,25445
ether1_close 1081,27192
ether1_getstats 1098,27412
ether1_setmulticastlist 1112,27821
static char ethernames[1120,27967
static struct device *my_ethers[1121,28006
static struct expansion_card *ec[1122,28051
init_module 1125,28102
cleanup_module 1173,29015

drivers/acorn/net/ether1.h,3702
#define _LINUX_ether1_H10,144
#define NET_DEBUG 15,266
#define REG_PAGE	19,314
#define REG_CONTROL	22,379
#define CTRL_RST	23,423
#define CTRL_LOOPBACK	24,445
#define CTRL_CA	25,472
#define CTRL_ACK	26,494
#define ETHER1_RAM	28,517
#define IDPROM_ADDRESS	31,579
struct ether1_priv ether1_priv33,627
#define I82586_NULL 53,1309
#define TDR_TIME	60,1473
#define TDR_SHORT	61,1498
#define TDR_OPEN	62,1526
#define TDR_XCVRPROB	63,1553
#define TDR_LNKOK	64,1584
} tdr_t;tdr_t65,1612
} tx_t;tx_t72,1764
#define TBD_CNT	76,1826
#define TBD_EOL	77,1852
} tbd_t;tbd_t81,1957
#define RFD_NOEOF	85,2022
#define RFD_FRAMESHORT	86,2049
#define RFD_DMAOVRN	87,2081
#define RFD_NORESOURCES	88,2110
#define RFD_ALIGNERROR	89,2143
#define RFD_CRCERROR	90,2176
#define RFD_OK	91,2207
#define RFD_FDCONSUMED	92,2233
#define RFD_COMPLETE	93,2266
#define RFD_CMDSUSPEND	95,2326
#define RFD_CMDEL	96,2359
} rfd_t;rfd_t102,2526
#define RBD_ACNT	106,2591
#define RBD_ACNTVALID	107,2617
#define RBD_EOF	108,2649
} rbd_t;rbd_t113,2779
} nop_t;nop_t119,2899
} mc_t;mc_t127,3082
} sa_t;sa_t134,3234
#define CFG8_SRDY	143,3504
#define CFG8_SAVEBADF	144,3531
#define CFG9_ADDRLEN(CFG9_ADDRLEN146,3589
#define CFG9_ADDRLENBUF	147,3617
#define CFG9_PREAMB2	148,3650
#define CFG9_PREAMB4	149,3680
#define CFG9_PREAMB8	150,3710
#define CFG9_PREAMB16	151,3740
#define CFG9_ILOOPBACK	152,3771
#define CFG9_ELOOPBACK	153,3803
#define CFG10_LINPRI(CFG10_LINPRI155,3863
#define CFG10_ACR(CFG10_ACR156,3891
#define CFG10_BOFMET	157,3921
#define CFG13_SLOTH(CFG13_SLOTH161,4031
#define CFG13_RETRY(CFG13_RETRY162,4058
#define CFG14_PROMISC	164,4118
#define CFG14_DISBRD	165,4149
#define CFG14_MANCH	166,4179
#define CFG14_TNCRS	167,4208
#define CFG14_NOCRC	168,4237
#define CFG14_CRC16	169,4266
#define CFG14_BTSTF	170,4295
#define CFG14_FLGPAD	171,4324
#define CFG15_CSTF(CFG15_CSTF173,4382
#define CFG15_ICSS	174,4408
#define CFG15_CDTF(CFG15_CDTF175,4436
#define CFG15_ICDS	176,4467
} cfg_t;cfg_t178,4526
#define SCB_STRXMASK	182,4615
#define SCB_STRXIDLE	183,4673
#define SCB_STRXSUSP	184,4718
#define SCB_STRXNRES	185,4767
#define SCB_STRXRDY	186,4819
#define SCB_STCUMASK	187,4863
#define SCB_STCUIDLE	188,4921
#define SCB_STCUSUSP	189,4966
#define SCB_STCUACTV	190,5015
#define SCB_STRNR	191,5061
#define SCB_STCNA	192,5119
#define SCB_STFR	193,5177
#define SCB_STCX	194,5227
#define SCB_CMDRXSTART	196,5331
#define SCB_CMDRXRESUME	197,5392
#define SCB_CMDRXSUSPEND	198,5450
#define SCB_CMDRXABORT	199,5509
#define SCB_CMDCUCSTART	200,5565
#define SCB_CMDCUCRESUME	201,5627
#define SCB_CMDCUCSUSPEND	202,5685
#define SCB_CMDCUCABORT	203,5745
#define SCB_CMDACKRNR	204,5802
#define SCB_CMDACKCNA	205,5859
#define SCB_CMDACKFR	206,5916
#define SCB_CMDACKCX	207,5974
} scb_t;scb_t214,6442
} iscp_t;iscp_t221,6664
#define SCP_SY_16BBUS	226,6783
#define SCP_SY_8BBUS	227,6810
} scp_t;scp_t231,6986
#define CMD_NOP	234,7011
#define CMD_SETADDRESS	235,7031
#define CMD_CONFIG	236,7057
#define CMD_SETMULTICAST	237,7079
#define CMD_TX	238,7106
#define CMD_TDR	239,7125
#define CMD_DUMP	240,7145
#define CMD_DIAGNOSE	241,7165
#define CMD_MASK	243,7190
#define CMD_INTR	245,7211
#define CMD_SUSP	246,7239
#define CMD_EOL	247,7267
#define STAT_COLLISIONS	249,7296
#define STAT_COLLEXCESSIVE	250,7326
#define STAT_COLLAFTERTX	251,7362
#define STAT_TXDEFERRED	252,7396
#define STAT_TXSLOWDMA	253,7430
#define STAT_TXLOSTCTS	254,7463
#define STAT_NOCARRIER	255,7496
#define STAT_FAIL	256,7530
#define STAT_ABORTED	257,7559
#define STAT_OK	258,7591
#define STAT_BUSY	259,7619
#define STAT_COMPLETE	260,7648

drivers/acorn/net/ether3.c,1863
static char *version 40,1614
static unsigned int net_debug 68,2272
static const card_ids ether3_cids[69,2315
#define BUS_16	83,2823
#define BUS_8	84,2841
#define BUS_UNKNOWN	85,2858
unsigned char def_eth_addr[91,2977
} buffer_rw_t;buffer_rw_t98,3174
#define ether3_outb(ether3_outb103,3246
#define ether3_outw(ether3_outw104,3301
#define ether3_inb(ether3_inb106,3357
#define ether3_inw(ether3_inw107,3431
ether3_setbuffer(110,3517
#define ether3_writebuffer(ether3_writebuffer140,4265
#define ether3_writeword(ether3_writeword143,4352
#define ether3_writelong(ether3_writelong146,4419
#define ether3_readbuffer(ether3_readbuffer155,4620
#define ether3_readword(ether3_readword158,4705
#define ether3_readlong(ether3_readlong161,4758
ether3_ledoff(168,4878
ether3_ledon(179,5124
__initfunc(194,5588
__initfunc(219,6252
__initfunc(268,7460
ether3_init_for_open(319,8924
ether3_probe_bus_8(360,10093
ether3_probe_bus_16(381,10619
__initfunc(396,10911
__initfunc(475,12780
ether3_open(507,13490
ether3_close(529,13816
static struct enet_statistics *ether3_getstats(554,14316
static void ether3_setmulticastlist(566,14690
ether3_alloc_tx(587,15219
ether3_sendpacket(614,15660
#define TXHDR_FLAGS 642,16386
ether3_interrupt(708,18405
ether3_rx(747,19164
		if (!(*(unsigned long *)&dev->dev_addr[790,20404
		if (!(*(unsigned long *)&dev->dev_addr[0] ^ *(unsigned long *)&addrs[790,20404
		    !(*(unsigned short *)&dev->dev_addr[791,20484
		    !(*(unsigned short *)&dev->dev_addr[4] ^ *(unsigned short *)&addrs[791,20484
	while (-- maxcnt)830,21909
	priv->rx_head 834,21973
	if (!(ether3_inw(839,22121
	return maxcnt;845,22301
ether3_tx(867,22705
char ethernames[918,23883
static struct device *my_ethers[920,23916
static struct expansion_card *ec[921,23961
init_module(924,24012
cleanup_module(975,24948

drivers/acorn/net/ether3.h,3548
#define _LINUX_ether3_H8,110
#define DEBUG_TX	11,210
#define DEBUG_RX	12,230
#define DEBUG_INT	13,250
#define DEBUG_IC	14,271
#define NET_DEBUG 16,309
#define REG_COMMAND	20,380
#define CMD_ENINTDMA	21,425
#define CMD_ENINTRX	22,454
#define CMD_ENINTTX	23,482
#define CMD_ENINTBUFWIN	24,510
#define CMD_ACKINTDMA	25,542
#define CMD_ACKINTRX	26,572
#define CMD_ACKINTTX	27,601
#define CMD_ACKINTBUFWIN	28,630
#define CMD_DMAON	29,662
#define CMD_RXON	30,688
#define CMD_TXON	31,713
#define CMD_DMAOFF	32,738
#define CMD_RXOFF	33,765
#define CMD_TXOFF	34,791
#define CMD_FIFOREAD	35,817
#define CMD_FIFOWRITE	36,846
#define REG_STATUS	39,899
#define STAT_ENINTSTAT	40,943
#define STAT_ENINTRX	41,974
#define STAT_ENINTTX	42,1003
#define STAT_ENINTBUFWIN	43,1032
#define STAT_INTDMA	44,1064
#define STAT_INTRX	45,1092
#define STAT_INTTX	46,1119
#define STAT_INTBUFWIN	47,1146
#define STAT_DMAON	48,1177
#define STAT_RXON	49,1204
#define STAT_TXON	50,1230
#define STAT_FIFOFULL	51,1256
#define STAT_FIFOEMPTY	52,1286
#define STAT_FIFODIR	53,1317
#define REG_CONFIG1	56,1378
#define CFG1_BUFSELSTAT0	57,1423
#define CFG1_BUFSELSTAT1	58,1455
#define CFG1_BUFSELSTAT2	59,1487
#define CFG1_BUFSELSTAT3	60,1519
#define CFG1_BUFSELSTAT4	61,1551
#define CFG1_BUFSELSTAT5	62,1583
#define CFG1_ADDRPROM	63,1615
#define CFG1_TRANSEND	64,1645
#define CFG1_LOCBUFMEM	65,1675
#define CFG1_INTVECTOR	66,1706
#define CFG1_RECVSPECONLY	67,1737
#define CFG1_RECVSPECBROAD	68,1770
#define CFG1_RECVSPECBRMULTI	69,1804
#define CFG1_RECVPROMISC	70,1840
#define CFG1_DMABURSTCONT	73,1908
#define CFG1_DMABURST800NS	74,1941
#define CFG1_DMABURST1600NS	75,1975
#define CFG1_DMABURST3200NS	76,2010
#define CFG1_DMABURST1	77,2045
#define CFG1_DMABURST4	78,2076
#define CFG1_DMABURST8	79,2107
#define CFG1_DMABURST16	80,2138
#define CFG1_RECVCOMPSTAT0	81,2170
#define CFG1_RECVCOMPSTAT1	82,2204
#define CFG1_RECVCOMPSTAT2	83,2238
#define CFG1_RECVCOMPSTAT3	84,2272
#define CFG1_RECVCOMPSTAT4	85,2306
#define CFG1_RECVCOMPSTAT5	86,2340
#define REG_CONFIG2	89,2406
#define CFG2_BYTESWAP	90,2451
#define CFG2_ERRENCRC	91,2481
#define CFG2_ERRENDRIBBLE	92,2511
#define CFG2_ERRSHORTFRAME	93,2544
#define CFG2_SLOTSELECT	94,2578
#define CFG2_PREAMSELECT	95,2610
#define CFG2_ADDRLENGTH	96,2642
#define CFG2_RECVCRC	97,2674
#define CFG2_XMITNOCRC	98,2703
#define CFG2_LOOPBACK	99,2734
#define CFG2_CTRLO	100,2764
#define CFG2_RESET	101,2791
#define REG_RECVEND	103,2819
#define REG_BUFWIN	105,2865
#define REG_RECVPTR	107,2910
#define REG_TRANSMITPTR	109,2956
#define REG_DMAADDR	111,3006
#define TX_NEXT	116,3093
#define TXHDR_ENBABBLEINT	117,3120
#define TXHDR_ENCOLLISIONINT	118,3156
#define TXHDR_EN16COLLISION	119,3195
#define TXHDR_ENSUCCESS	120,3233
#define TXHDR_DATAFOLLOWS	121,3268
#define TXHDR_CHAINCONTINUE	122,3304
#define TXHDR_TRANSMIT	123,3342
#define TXSTAT_BABBLED	124,3376
#define TXSTAT_COLLISION	125,3410
#define TXSTAT_16COLLISIONS	126,3445
#define TXSTAT_DONE	127,3483
#define RX_NEXT	129,3515
#define RXHDR_CHAINCONTINUE	130,3542
#define RXHDR_RECEIVE	131,3579
#define RXSTAT_OVERSIZE	132,3611
#define RXSTAT_CRCERROR	133,3645
#define RXSTAT_DRIBBLEERROR	134,3679
#define RXSTAT_SHORTPACKET	135,3717
#define RXSTAT_DONE	136,3754
#define TX_START	139,3787
#define TX_END	140,3811
#define RX_START	141,3834
#define RX_LEN	142,3858
#define RX_END	143,3881
#define MAX_TXED	145,3965
#define MAX_TX_BUFFERED	146,3985
struct dev_priv dev_priv148,4013

drivers/acorn/net/etherh.c,1274
#define NET_DEBUG 49,1088
#define DEBUG_INIT 50,1109
static unsigned int net_debug 52,1131
static const card_ids etherh_cids[53,1174
static char *version 60,1344
#define ETHERH500_DATAPORT	62,1435
#define ETHERH500_NS8390	63,1479
#define ETHERH500_CTRLPORT	64,1521
#define ETHERH600_DATAPORT	66,1566
#define ETHERH600_NS8390	67,1607
#define ETHERH600_CTRLPORT	68,1649
#define ETHERH_CP_IE	70,1694
#define ETHERH_CP_IF	71,1718
#define ETHERH_CP_HEARTBEAT	72,1742
#define ETHERH_TX_START_PAGE	74,1773
#define ETHERH_STOP_PAGE	75,1804
etherh_addr(84,2025
etherh_setif(103,2384
etherh_getifstat(139,3054
etherh_reset(171,3591
etherh_block_output 182,3771
etherh_block_input 242,5216
etherh_get_header 285,6224
etherh_open(328,7424
etherh_close(346,7692
etherh_probe1(359,7859
static void etherh_irq_enable(448,9946
static void etherh_irq_disable(454,10108
static expansioncard_ops_t etherh_ops 460,10272
static void etherh_initdev 467,10372
etherh_probe(500,11253
#define MAX_ETHERH_CARDS 520,11546
static int io[522,11574
static int irq[523,11607
static char ethernames[524,11641
static struct device *my_ethers[525,11686
static struct expansion_card *ec[526,11737
init_all_cards(529,11801
init_module(596,13042
cleanup_module(615,13234

drivers/acorn/net/net-probe.c,19
__initfunc(15,339

drivers/acorn/char/serial-card.c,454
#define NUM_SERIALS	30,804
static int __serial_ports[34,871
static int __serial_pcount;35,911
static struct expansion_card *expcard[36,939
#define ADD_ECARD(ADD_ECARD37,990
#define ADD_PORT(ADD_PORT38,1040
#define MY_INIT 40,1121
#define ADD_ECARD(ADD_ECARD42,1155
#define ADD_PORT(ADD_PORT43,1182
static const card_ids serial_cids[46,1213
static inline int serial_register_onedev 48,1290
int MY_INIT 60,1525
void cleanup_module 96,2116

drivers/acorn/char/serial-dualsp.c,205
#define MY_CARD_LIST 9,137
#define MY_NUMPORTS 10,196
#define MY_BAUD_BASE 11,218
#define MY_INIT 12,254
#define MY_BASE_ADDRESS(MY_BASE_ADDRESS13,289
#define MY_PORT_ADDRESS(MY_PORT_ADDRESS15,378

drivers/acorn/char/serial-atomwide.c,206
#define MY_CARD_LIST 12,243
#define MY_NUMPORTS 13,306
#define MY_BAUD_BASE 14,328
#define MY_INIT 15,364
#define MY_BASE_ADDRESS(MY_BASE_ADDRESS16,401
#define MY_PORT_ADDRESS(MY_PORT_ADDRESS18,492

drivers/acorn/char/keyb_ps2.c,3670
int kbd_read_mask;31,659
#define IRQ_KEYBOARDRX 33,679
#define VERSION 35,706
#define KBD_REPORT_ERR37,727
#define KBD_REPORT_UNKN38,750
#define KBD_ESCAPEE0	40,775
#define KBD_ESCAPEE1	41,811
#define ESCE0(ESCE043,848
#define ESCE1(ESCE144,878
#define KBD_BAT	46,909
#define KBD_SETLEDS	47,941
#define KBD_ECHO	48,977
#define KBD_BREAK	49,1013
#define KBD_TYPRATEDLY	50,1046
#define KBD_SCANENABLE	51,1085
#define KBD_DEFDISABLE	52,1124
#define KBD_DEFAULT	53,1163
#define KBD_ACK	54,1199
#define KBD_DIAGFAIL	55,1231
#define KBD_RESEND	56,1267
#define KBD_RESET	57,1305
#define CODE_BREAK	59,1340
#define CODE_ESCAPEE0	60,1361
#define CODE_ESCAPEE1	61,1385
#define CODE_ESCAPE12	62,1409
#define K_NONE	64,1434
#define K_ESC	65,1455
#define K_F1	66,1475
#define K_F2	67,1494
#define K_F3	68,1513
#define K_F4	69,1532
#define K_F5	70,1551
#define K_F6	71,1570
#define K_F7	72,1589
#define K_F8	73,1608
#define K_F9	74,1627
#define K_F10	75,1646
#define K_F11	76,1666
#define K_F12	77,1686
#define K_PRNT	78,1706
#define K_SCRL	79,1727
#define K_BRK	80,1748
#define K_AGR	81,1768
#define K_1	82,1788
#define K_2	83,1806
#define K_3	84,1824
#define K_4	85,1842
#define K_5	86,1860
#define K_6	87,1878
#define K_7	88,1896
#define K_8	89,1914
#define K_9	90,1932
#define K_0	91,1950
#define K_MINS	92,1968
#define K_EQLS	93,1989
#define K_BKSP	94,2010
#define K_INS	95,2031
#define K_HOME	96,2051
#define K_PGUP	97,2072
#define K_NUML	98,2093
#define KP_SLH	99,2114
#define KP_STR	100,2135
#define KP_MNS	101,2156
#define K_TAB	102,2177
#define K_Q	103,2197
#define K_W	104,2215
#define K_E	105,2233
#define K_R	106,2251
#define K_T	107,2269
#define K_Y	108,2287
#define K_U	109,2305
#define K_I	110,2323
#define K_O	111,2341
#define K_P	112,2359
#define K_LSBK	113,2377
#define K_RSBK	114,2398
#define K_ENTR	115,2419
#define K_DEL	116,2440
#define K_END	117,2460
#define K_PGDN	118,2480
#define KP_7	119,2501
#define KP_8	120,2520
#define KP_9	121,2539
#define KP_PLS	122,2558
#define K_CAPS	123,2579
#define K_A	124,2600
#define K_S	125,2618
#define K_D	126,2636
#define K_F	127,2654
#define K_G	128,2672
#define K_H	129,2690
#define K_J	130,2708
#define K_K	131,2726
#define K_L	132,2744
#define K_SEMI	133,2762
#define K_SQOT	134,2783
#define K_HASH	135,2804
#define KP_4	136,2825
#define KP_5	137,2844
#define KP_6	138,2863
#define K_LSFT	139,2882
#define K_BSLH	140,2903
#define K_Z	141,2924
#define K_X	142,2942
#define K_C	143,2960
#define K_V	144,2978
#define K_B	145,2996
#define K_N	146,3014
#define K_M	147,3032
#define K_COMA	148,3050
#define K_DOT	149,3071
#define K_FSLH	150,3091
#define K_RSFT	151,3112
#define K_UP	152,3133
#define KP_1	153,3152
#define KP_2	154,3171
#define KP_3	155,3190
#define KP_ENT	156,3209
#define K_LCTL	157,3230
#define K_LALT	158,3251
#define K_SPCE	159,3272
#define K_RALT	160,3293
#define K_RCTL	161,3314
#define K_LEFT	162,3335
#define K_DOWN	163,3356
#define K_RGHT	164,3377
#define KP_0	165,3398
#define KP_DOT	166,3417
static unsigned char keycode_translate[168,3439
unsigned char ps2kbd_sysrq_xlate[203,5638
int ps2kbd_pretranslate(224,6489
int ps2kbd_translate(229,6553
static void ps2kbd_key(236,6709
static inline void ps2kbd_sendbyte(241,6831
static unsigned char status;247,6954
static unsigned char ncodes;248,6983
static unsigned char bi;249,7012
static unsigned char buffer[250,7037
static inline void ps2kbd_reset(252,7070
static void handle_rawcode(258,7146
void ps2kbd_leds(319,8543
static void ps2kbd_rx(326,8673
static void ps2kbd_tx(335,8862
__initfunc(339,8934

drivers/acorn/char/mouse_rpc.c,262
static short old_x,22,585
static short old_x, old_y,22,585
static short old_x, old_y, old_b;22,585
static int mousedev;23,619
mouse_rpc_irq(26,646
static struct busmouse rpcmouse 46,1024
mouse_rpc_init(51,1098
init_module(73,1618
cleanup_module(79,1671

drivers/zorro/proc.c,382
proc_bus_zorro_lseek(22,484
proc_bus_zorro_read(45,861
static struct file_operations proc_bus_zorro_operations 65,1398
static struct inode_operations proc_bus_zorro_inode_operations 79,1725
get_zorro_dev_info(100,2230
static struct proc_dir_entry proc_zorro_devices 134,3177
static struct proc_dir_entry *proc_bus_zorro_dir;141,3355
__initfunc(143,3406
__initfunc(158,3789

drivers/zorro/zorro.c,330
u_int zorro_num_autocon 27,574
struct ConfigDev zorro_autocon[28,603
static u32 zorro_autocon_parts[29,651
u_int zorro_find(56,1683
const struct ConfigDev *zorro_get_board(92,2593
void zorro_config_board(106,2862
void zorro_unconfig_board(126,3418
u32 zorro_unused_z2ram[153,4288
__initfunc(156,4334
__initfunc(186,5064

drivers/zorro/zorrosyms.c,0

drivers/dio/dio.c,665
#define CONFIG_DIO_CONSTANTS36,1705
struct dionamedioname47,2166
#define DIONAME(DIONAME54,2248
#define DIOFBNAME(DIOFBNAME55,2296
static struct dioname names[57,2381
#define NUMNAMES 79,3365
static const char *unknowndioname 81,3424
static const char *dio_getname(84,3542
static char dio_no_name[97,3860
#define dio_getname(dio_getname98,3895
struct dioboarddioboard103,4059
static struct dioboard *blist 113,4502
__initfunc(115,4541
int dio_find(137,5138
__initfunc(154,5481
void *dio_scodetoviraddr(214,7570
int dio_scodetoipl(231,8151
const char *dio_scodetoname(247,8511
void dio_config_board(263,8885
void dio_unconfig_board(278,9332

fs/stat.c,382
do_revalidate(18,307
static int cp_old_stat(33,630
static int cp_new_stat(60,1336
#define D_B 92,2465
#define I_B 93,2481
asmlinkage int sys_stat(122,3216
asmlinkage int sys_newstat(143,3587
asmlinkage int sys_lstat(169,4082
asmlinkage int sys_newlstat(191,4456
asmlinkage int sys_fstat(217,4953
asmlinkage int sys_newfstat(238,5300
asmlinkage int sys_readlink(257,5629

fs/read_write.c,419
static loff_t default_llseek(16,260
static inline loff_t llseek(39,673
asmlinkage off_t sys_lseek(49,918
asmlinkage int sys_llseek(76,1451
asmlinkage ssize_t sys_read(116,2236
asmlinkage ssize_t sys_write(145,2835
static ssize_t do_readv_writev(180,3536
asmlinkage ssize_t sys_readv(273,5463
asmlinkage ssize_t sys_writev(294,5871
asmlinkage ssize_t sys_pread(322,6540
asmlinkage ssize_t sys_pwrite(354,7170

fs/block_dev.c,199
extern int *blk_size[13,180
extern int *blksize_size[14,204
#define MAX_BUF_PER_PAGE 16,233
#define NBUF 17,276
ssize_t block_write(19,293
ssize_t block_read(145,3388
int block_fsync(295,6927

fs/buffer.c,3126
#define NR_SIZES 44,1118
static char buffersize_index[45,1137
#define BUFSIZE_INDEX(BUFSIZE_INDEX52,1435
#define MAX_BUF_PER_PAGE 53,1493
#define NR_RESERVED 54,1536
#define MAX_UNUSED_BUFFERS 55,1577
static unsigned long bh_hash_mask 61,1726
static struct buffer_head ** hash_table;65,1802
static struct buffer_head * lru_list[66,1843
static struct buffer_head * free_list[67,1901
static kmem_cache_t *bh_cachep;69,1962
static struct buffer_head * unused_list 71,1995
static struct buffer_head * reuse_list 72,2043
static struct wait_queue * buffer_wait 73,2090
static int nr_buffers 75,2138
static int nr_buffers_type[76,2165
static int nr_buffer_heads 77,2209
static int nr_unused_buffer_heads 78,2241
static int nr_hashed_buffers 79,2280
int buffermem 82,2386
#define N_PARAM 88,2551
union bdflush_param{bdflush_param93,2703
} bdf_prm 112,3383
int bdflush_min[115,3527
int bdflush_max[116,3604
void __wait_on_buffer(129,4103
static int sync_buffers(159,4946
void sync_dev(263,7502
int fsync_dev(283,8129
asmlinkage int sys_sync(292,8269
int file_fsync(304,8427
asmlinkage int sys_fsync(324,8870
asmlinkage int sys_fdatasync(361,9457
void invalidate_buffers(398,10066
#define _hashfn(_hashfn423,10617
#define hash(hash424,10694
static inline void remove_from_hash_queue(426,10750
static inline void remove_from_lru_list(441,11051
static inline void remove_from_free_list(457,11550
static void remove_from_queues(477,12138
static inline void put_last_lru(489,12423
static inline void put_last_free(516,12940
static void insert_into_queues(536,13386
struct buffer_head * find_buffer(577,14255
struct buffer_head * get_hash_table(602,14895
unsigned int get_hardblocksize(611,15068
void set_blocksize(630,15492
static void refill_freelist(683,16884
void init_buffer(692,17027
static void end_buffer_io_sync(704,17291
struct buffer_head * getblk(720,17837
void set_writetime(762,18710
static inline void file_buffer(781,19153
void refile_buffer(792,19423
void __brelse(831,20352
void __bforget(850,20824
struct buffer_head * bread(865,21145
#define NBUF 887,21597
struct buffer_head * breada(889,21614
static void put_unused_buffer_head(951,22872
static inline int recover_reusable_buffer_heads(978,23810
static struct buffer_head * get_unused_buffer_head(999,24295
static struct buffer_head * create_buffers(1058,25835
static inline void after_unlock_page 1132,27664
static inline void free_async_buffers 1152,28262
static void end_buffer_io_async(1174,28727
int brw_page(1241,30485
void mark_buffer_uptodate(1329,32703
int generic_readpage(1354,33491
static int grow_buffers(1385,34232
#define BUFFER_BUSY_BITS	1436,35240
#define buffer_busy(buffer_busy1437,35316
int try_to_free_buffers(1446,35666
void show_buffers(1483,36350
void __init buffer_init(1528,37540
static struct wait_queue * bdflush_wait 1571,38756
static struct wait_queue * bdflush_done 1572,38804
struct task_struct *bdflush_tsk 1573,38852
void wakeup_bdflush(1575,38890
static int sync_old_buffers(1595,39438
asmlinkage int sys_bdflush(1672,41290
int bdflush(1724,42734

fs/inode.c,1578
#define INODE_PARANOIA 24,426
#define HASH_BITS	31,605
#define HASH_SIZE	32,625
#define HASH_MASK	33,662
static struct list_head inode_hashtable[49,1179
spinlock_t inode_lock 57,1399
} inodes_stat 66,1538
int max_inodes;68,1564
void __mark_inode_dirty(82,1976
static void __wait_on_inode(100,2384
static inline void wait_on_inode(115,2712
static inline void init_once(126,2961
static inline void write_inode(136,3222
static inline void sync_one(142,3393
static inline void sync_list(163,3849
void sync_inodes(175,4149
static void sync_all_inodes(200,4613
void write_inode_now(213,4868
void clear_inode(232,5273
static void dispose_list(250,5732
static int invalidate_list(278,6283
int invalidate_inodes(313,7107
#define CAN_UNUSE(CAN_UNUSE338,7729
#define INODE(INODE340,7802
static int free_inodes(342,7866
static void try_to_free_inodes(375,8508
void free_inode_memory(400,9025
#define INODE_PAGE_ORDER	417,9394
#define INODE_ALLOCATION_SIZE	418,9421
#define INODES_PER_ALLOCATION	419,9483
static struct inode * grow_inodes(421,9559
static struct inode * find_inode(490,11099
void clean_inode(519,11700
static inline void read_inode(535,12069
struct inode * get_empty_inode(546,12379
static struct inode * get_new_inode(588,13259
static inline unsigned long hash(645,14732
struct inode *iget(652,14945
void insert_inode_hash(672,15429
void remove_inode_hash(680,15640
void iput(688,15801
int bmap(751,17800
#define MAX_INODE 762,18012
void __init inode_init(764,18039
int fs_may_remount_ro(784,18391
void update_atime 808,18930

fs/file_table.c,447
static kmem_cache_t *filp_cache;13,248
int nr_files 16,307
int nr_free_files 17,341
int max_files 18,380
static struct file * free_filps 21,490
static void insert_file_free(23,531
struct file *inuse_filps 33,790
static inline void put_inuse(35,824
static inline void remove_filp(44,1057
void __init file_table_init(52,1204
struct file * get_empty_filp(70,1730
int init_private_file(118,2795
void fput(133,3196
void put_filp(147,3421

fs/open.c,894
asmlinkage int sys_statfs(15,230
asmlinkage int sys_fstatfs(37,687
int do_truncate(66,1257
asmlinkage int sys_truncate(86,1744
asmlinkage int sys_ftruncate(135,2683
asmlinkage int sys_utime(183,3879
asmlinkage int sys_utimes(231,4992
asmlinkage int sys_access(277,6128
asmlinkage int sys_chdir(313,6930
asmlinkage int sys_fchdir(348,7483
asmlinkage int sys_chroot(385,8079
asmlinkage int sys_fchmod(425,8717
asmlinkage int sys_chmod(463,9467
static int chown_common(499,10172
asmlinkage int sys_chown(554,11631
asmlinkage int sys_lchown(571,11938
asmlinkage int sys_fchown(589,12248
struct file *filp_open(623,12963
int get_unused_fd(681,14099
inline void put_unused_fd(712,14769
asmlinkage int sys_open(717,14857
asmlinkage int sys_creat(752,15445
void __fput(762,15643
int filp_close(779,16016
asmlinkage int sys_close(802,16564
asmlinkage int sys_vhangup(825,17032

fs/exec.c,778
static struct linux_binfmt *formats 52,1414
void __init binfmt_setup(54,1483
int register_binfmt(88,1982
int unregister_binfmt(107,2288
int open_dentry(123,2566
asmlinkage int sys_uselib(170,3476
static int count(204,4134
unsigned long copy_strings(242,5068
unsigned long setup_arg_pages(297,6265
int read_exec(340,7354
static int exec_mmap(376,8285
static inline int make_private_signals(437,9602
static inline void release_old_signals(460,10298
static inline void flush_old_files(473,10593
int flush_old_exec(494,10947
static inline int must_not_trace_exec(551,12124
int prepare_binprm(560,12387
void compute_creds(678,16075
void remove_arg_zero(703,16944
int search_binary_handler(722,17366
#define printable(printable782,18912
int do_execve(801,19352

fs/super.c,1702
static struct semaphore mount_sem 45,1159
extern int root_mountflags;50,1306
kdev_t ROOT_DEV;55,1451
int nr_super_blocks 57,1469
int max_super_blocks 58,1494
static struct file_system_type *file_systems 61,1553
struct vfsmount *vfsmntlist 62,1634
static struct vfsmount *vfsmnttail 63,1690
struct vfsmount *lookup_vfsmnt(69,1897
static struct vfsmount *add_vfsmnt(92,2375
static void remove_vfsmnt(138,3441
int register_filesystem(170,4207
int unregister_filesystem(189,4663
static int fs_index(206,4923
static int fs_name(229,5302
static int fs_maxindex(245,5599
asmlinkage int sys_sysfs(259,5804
static struct proc_fs_info proc_fs_info281,6156
} fs_info[284,6208
static struct proc_nfs_info proc_nfs_info298,6531
} nfs_info[301,6584
int get_filesystem_info(310,6772
int get_filesystem_list(381,8716
struct file_system_type *get_fs_type(396,9005
void __wait_on_super(414,9373
void sync_supers(434,9838
struct super_block * get_super(458,10365
asmlinkage int sys_ustat(477,10703
static struct super_block *get_empty_super(511,11496
static struct super_block * read_super(537,12104
static unsigned int unnamed_dev_in_use[584,13060
kdev_t get_unnamed_dev(586,13140
void put_unnamed_dev(597,13308
static int d_umount(607,13544
static void d_mount(629,13909
static int do_umount(639,14133
static int umount_dev(720,16097
asmlinkage int sys_umount(768,17194
asmlinkage int sys_oldumount(808,17912
int fs_may_mount(816,18046
int do_mount(847,19357
static int do_remount_sb(913,20744
static int do_remount(944,21663
static int copy_mount_options 970,22190
asmlinkage int sys_mount(1013,23431
void __init mount_root(1117,25661
int __init change_root(1213,28301

fs/fcntl.c,246
static inline int dupfd(15,255
asmlinkage int sys_dup2(46,819
asmlinkage int sys_dup(67,1168
#define SETFL_MASK 77,1300
static int setfl(79,1364
asmlinkage long sys_fcntl(105,1999
static void send_sigio(186,3783
void kill_fasync(229,4930

fs/namei.c,1748
#define LOOKUP_FOLLOW	33,637
#define LOOKUP_DIRECTORY	34,664
#define LOOKUP_SLASHOK	35,693
#define LOOKUP_CONTINUE	36,721
#define CACHE_SUPERVISE	41,823
#define ACC_MODE(ACC_MODE45,936
static inline int do_getname(104,3851
char * getname(125,4370
int permission(151,4898
int get_write_access(187,6230
void put_write_access(195,6362
static struct dentry * reserved_lookup(204,6586
static struct dentry * cached_lookup(228,7045
static struct dentry * real_lookup(248,7656
static struct dentry * do_follow_link(278,8370
static inline struct dentry * follow_mount(300,8893
struct dentry * lookup_dentry(318,9215
struct dentry * __namei(461,12359
static inline int check_sticky(485,12847
static inline int may_delete(513,13907
static inline int may_create(546,14972
static inline struct dentry *get_parent(552,15132
static inline void unlock_dir(557,15232
#define check_parent(check_parent574,15680
static inline struct dentry *lock_parent(589,16211
static inline void double_lock(601,16464
static inline void double_unlock(616,16778
static inline int lookup_flags(635,17148
struct dentry * open_namei(664,17897
struct dentry * do_mknod(804,20867
asmlinkage int sys_mknod(839,21617
static inline int do_mkdir(878,22389
asmlinkage int sys_mkdir(921,23375
int vfs_rmdir(937,23632
static inline int do_rmdir(979,24494
asmlinkage int sys_rmdir(1016,25245
int vfs_unlink(1032,25487
static inline int do_unlink(1051,25775
asmlinkage int sys_unlink(1073,26170
static inline int do_symlink(1089,26414
asmlinkage int sys_symlink(1124,27083
static inline int do_link(1146,27461
asmlinkage int sys_link(1212,28964
int vfs_rename(1234,29336
static inline int do_rename(1266,30036
asmlinkage int sys_rename(1311,31006

fs/ioctl.c,63
static int file_ioctl(13,178
asmlinkage int sys_ioctl(42,934

fs/pipe.c,1169
#define FIFO_SUNOS_BRAINDAMAGE18,289
static ssize_t pipe_read(30,760
static ssize_t pipe_write(85,2056
static long long pipe_lseek(152,3756
static ssize_t bad_pipe_r(157,3854
static ssize_t bad_pipe_w(163,3966
static int pipe_ioctl(169,4084
static unsigned int pipe_poll(180,4312
static unsigned int fifo_poll(201,4862
#define fifo_poll 216,5202
static ssize_t connect_read(225,5465
static unsigned int connect_poll(235,5747
static int pipe_release(249,6100
static int pipe_read_release(259,6340
static int pipe_write_release(265,6470
static int pipe_rdwr_release(271,6601
static int pipe_read_open(280,6823
static int pipe_write_open(286,6932
static int pipe_rdwr_open(292,7042
struct file_operations connecting_fifo_fops 305,7372
struct file_operations read_fifo_fops 319,7623
struct file_operations write_fifo_fops 333,7862
struct file_operations rdwr_fifo_fops 347,8082
struct file_operations read_pipe_fops 361,8298
struct file_operations write_pipe_fops 375,8537
struct file_operations rdwr_pipe_fops 389,8757
static struct inode * get_pipe_inode(403,8973
struct inode_operations pipe_inode_operations 439,10014
int do_pipe(458,10422

fs/fifo.c,162
static int fifo_open(9,86
static struct file_operations def_fifo_fops 117,2996
struct inode_operations fifo_inode_operations 132,3176
void init_fifo(151,3614

fs/select.c,716
#define ROUND_UP(ROUND_UP20,545
#define DEFAULT_POLLMASK 21,585
static void free_wait(42,1413
void __pollwait(61,1741
#define __IN(__IN92,2454
#define __OUT(__OUT93,2490
#define __EX(__EX94,2528
#define __RES_IN(__RES_IN95,2564
#define __RES_OUT(__RES_OUT96,2607
#define __RES_EX(__RES_EX97,2652
#define BITS(BITS99,2696
static int max_select_fd(101,2764
#define BIT(BIT141,3412
#define MEM(MEM142,3457
#define ISSET(ISSET143,3504
#define SET(SET144,3541
#define POLLIN_SET 146,3573
#define POLLOUT_SET 147,3647
#define POLLEX_SET 148,3713
int do_select(150,3743
#define MAX_SELECT_SECONDS 240,5816
sys_select(244,5910
static int do_poll(330,7897
asmlinkage int sys_poll(373,8801

fs/locks.c,1530
#define OFFSET_MAX	114,5107
struct file_lock *file_lock_table 141,6438
static inline struct file_lock *locks_alloc_lock(147,6653
static inline void locks_free_lock(154,6822
static inline int locks_overlap(168,7169
locks_same_owner(180,7509
static void locks_insert_block(191,7894
static void locks_delete_block(214,8486
posix_block_lock(239,9096
posix_unblock_lock(246,9223
static void locks_wake_up_blocks(257,9538
asmlinkage int sys_flock(283,10251
int fcntl_getlk(312,10893
int fcntl_setlk(369,12106
			goto out_putf;443,13682
		break;444,13700
		error 447,13726
		goto out_putf;448,13745
	if 451,13766
	error 456,13888
	return error;461,13978
void locks_remove_posix(468,14090
void locks_remove_flock(502,14889
posix_test_lock(531,15539
int locks_verify_locked(545,15813
int locks_verify_area(556,16136
int locks_mandatory_locked(569,16570
int locks_mandatory_area(585,16921
static int posix_make_lock(640,18390
static int flock_make_lock(689,19333
static int posix_locks_conflict(723,19966
static int flock_locks_conflict(738,20402
static int locks_conflict(753,20861
static int posix_locks_deadlock(787,22062
static int flock_lock_file(826,23179
int posix_lock_file(913,25284
static struct file_lock *locks_empty_lock(1095,29864
static struct file_lock *locks_init_lock(1105,30124
static void locks_insert_lock(1126,30701
static void locks_delete_lock(1144,31226
static char *lock_get_status(1171,31724
static inline int copy_lock_status(1201,32618
int get_locks_status(1226,32980

fs/msdos/msdosfs_syms.c,65
struct file_system_type msdos_fs_type 32,681
__initfunc(39,781

fs/msdos/namei.c,1159
#define __NO_VERSION__9,162
#define MSDOS_DEBUG 22,399
#define PRINTK(PRINTK23,421
static const char *reserved_names[27,477
static char bad_chars[38,798
static char bad_if_strict[41,888
static char bad_if_strict[43,929
void msdos_put_super(46,976
struct super_operations msdos_sops 52,1066
static int msdos_format_name(65,1329
static int msdos_find(147,3917
static int msdos_hash(179,4920
static int msdos_cmp(196,5421
static struct dentry_operations msdos_dentry_operations 222,6103
struct super_block *msdos_read_super(231,6256
int msdos_lookup(253,6695
static int msdos_create_entry(300,7687
int msdos_create(341,8970
static void dump_fat(383,10146
static int msdos_empty(401,10441
int msdos_rmdir(429,11053
int msdos_mkdir(479,12238
static int msdos_unlinkx(565,14490
int msdos_unlink(598,15333
int msdos_unlink_umsdos(604,15475
#define MSDOS_CHECK_BUSY 609,15583
static int msdos_rename_same(612,15647
static int msdos_rename_diff(712,18338
int msdos_rename(937,24531
struct inode_operations msdos_dir_inode_operations 986,26156
void msdos_read_inode(1010,26795
int init_module(1018,26912
void cleanup_module(1024,26965

fs/proc/root.c,3792
#define FIRST_PROCESS_ENTRY 28,498
static unsigned char proc_alloc_map[34,714
static struct file_operations proc_dir_operations 44,1052
struct inode_operations proc_dir_inode_operations 61,1478
struct inode_operations proc_dyna_dir_inode_operations 84,2023
static struct file_operations proc_root_operations 109,2700
static struct inode_operations proc_root_inode_operations 126,3121
struct proc_dir_entry proc_root 149,3677
struct proc_dir_entry *proc_net,158,3855
struct proc_dir_entry *proc_net, *proc_scsi,158,3855
struct proc_dir_entry *proc_net, *proc_scsi, *proc_bus;158,3855
struct proc_dir_entry proc_mca 161,3930
struct proc_dir_entry proc_sys_root 171,4126
static struct openpromfs_dev *proc_openprom_devices 186,4718
static ino_t proc_openpromdev_ino 187,4778
proc_openprom_register(190,4863
int proc_openprom_regdev(204,5469
int proc_openprom_unregdev(214,5716
proc_openprom_deregister(232,6108
proc_openprom_defreaddir(242,6423
#define OPENPROM_DEFREADDIR 251,6750
proc_openprom_deflookup(254,6816
#define OPENPROM_DEFLOOKUP 263,7078
#define OPENPROM_DEFREADDIR 265,7135
#define OPENPROM_DEFLOOKUP 266,7168
static struct file_operations proc_openprom_operations 269,7208
struct inode_operations proc_openprom_inode_operations 283,7594
struct proc_dir_entry proc_openprom 303,8096
static int make_inode_number(315,8357
int proc_register(324,8581
static void proc_kill_inodes(354,9181
int proc_unregister(377,9642
static int proc_self_readlink(402,10151
static struct dentry * proc_self_follow_link(414,10383
int proc_readlink(424,10604
struct dentry * proc_follow_link(448,11107
static struct inode_operations proc_self_inode_operations 468,11596
static struct inode_operations proc_link_inode_operations 488,12079
static struct proc_dir_entry proc_root_loadavg 508,12553
static struct proc_dir_entry proc_root_uptime 513,12698
static struct proc_dir_entry proc_root_meminfo 518,12840
static struct proc_dir_entry proc_root_kmsg 523,12985
static struct proc_dir_entry proc_root_version 528,13120
static struct proc_dir_entry proc_root_cpuinfo 533,13265
static struct proc_dir_entry proc_root_hardware 539,13445
static struct proc_dir_entry proc_root_stram 546,13625
static struct proc_dir_entry proc_root_self 552,13771
static struct proc_dir_entry proc_root_malloc 558,13955
static struct proc_dir_entry proc_root_kcore 564,14104
static struct proc_dir_entry proc_root_modules 570,14265
static struct proc_dir_entry proc_root_ksyms 575,14410
static struct proc_dir_entry proc_root_stat 581,14556
static struct proc_dir_entry proc_root_devices 586,14692
static struct proc_dir_entry proc_root_partitions 591,14837
static struct proc_dir_entry proc_root_interrupts 596,14992
static struct proc_dir_entry proc_root_filesystems 601,15146
struct proc_dir_entry proc_root_fs 606,15303
static struct proc_dir_entry proc_root_dma 614,15488
static struct proc_dir_entry proc_root_ioports 619,15621
static struct proc_dir_entry proc_root_cmdline 624,15766
static struct proc_dir_entry proc_root_rtc 630,15929
static struct proc_dir_entry proc_root_locks 636,16069
static struct proc_dir_entry proc_root_mounts 641,16208
static struct proc_dir_entry proc_root_swaps 646,16348
static struct proc_dir_entry proc_root_profile 651,16486
static struct proc_dir_entry proc_root_slab 656,16643
static struct proc_dir_entry proc_root_ppc_htab 662,16806
__initfunc(672,17105
proc_delete_dentry(755,19652
struct dentry_operations proc_dentry_operations 760,19717
int proc_lookup(772,19980
static int proc_root_lookup(809,20740
int proc_readdir(874,22073
#define PROC_NUMBUF 925,23034
#define PROC_MAXPIDS 926,23057
static int get_pid_list(933,23281
static int proc_root_readdir(955,23668
static int proc_unlink(990,24405

fs/proc/base.c,920
static struct file_operations proc_base_operations 18,304
static struct inode_operations proc_base_inode_operations 35,731
static void proc_pid_fill_inode(59,1360
struct proc_dir_entry proc_pid 85,1999
static struct proc_dir_entry proc_pid_status 93,2189
static struct proc_dir_entry proc_pid_mem 99,2363
static struct proc_dir_entry proc_pid_cwd 105,2536
static struct proc_dir_entry proc_pid_root 111,2700
static struct proc_dir_entry proc_pid_exe 117,2867
static struct proc_dir_entry proc_pid_fd 123,3031
static struct proc_dir_entry proc_pid_environ 129,3200
static struct proc_dir_entry proc_pid_cmdline 135,3377
static struct proc_dir_entry proc_pid_stat 141,3554
static struct proc_dir_entry proc_pid_statm 147,3722
static struct proc_dir_entry proc_pid_maps 153,3893
static struct proc_dir_entry proc_pid_ringbuf 161,4084
static struct proc_dir_entry proc_pid_cpu 170,4296
__initfunc(178,4469

fs/proc/mem.c,351
#define mem_write 25,554
static int check_range(27,578
static struct task_struct * get_task(54,1137
static ssize_t mem_read(74,1537
static ssize_t mem_write(134,2941
static long long mem_lseek(195,4220
int mem_mmap(212,4519
static struct file_operations proc_mem_operations 312,7373
struct inode_operations proc_mem_inode_operations 326,7679

fs/proc/link.c,243
static struct file_operations proc_fd_link_operations 25,493
struct inode_operations proc_link_inode_operations 39,873
static struct dentry * proc_follow_link(59,1371
static int do_proc_readlink(140,2919
static int proc_readlink(172,3646

fs/proc/fd.c,206
static struct file_operations proc_fd_operations 24,505
struct inode_operations proc_fd_inode_operations 41,929
static int proc_lookupfd(70,1742
#define NUMBUF 130,2858
static int proc_readfd(132,2877

fs/proc/inode.c,464
struct proc_dir_entry * de_get(23,439
void de_put(33,607
static void proc_put_inode(51,898
static void proc_delete_inode(70,1375
static struct super_operations proc_sops 90,1830
static int parse_options(103,2031
static int standard_permission(135,2740
int proc_permission(178,4251
struct inode * proc_get_inode(239,5374
struct super_block *proc_read_super(309,6845
int proc_statfs(337,7496
void proc_read_inode(352,7839
void proc_write_inode(408,9005

fs/proc/array.c,2980
#define LOAD_INT(LOAD_INT71,1988
#define LOAD_FRAC(LOAD_FRAC72,2024
static ssize_t read_core(79,2149
#	define FIRST_MAPPED	88,2387
#	define FIRST_MAPPED	90,2468
static struct file_operations proc_kcore_operations 137,3427
struct inode_operations proc_kcore_inode_operations 142,3528
static ssize_t read_profile(152,3869
static ssize_t write_profile(183,4699
static struct file_operations proc_profile_operations 204,5156
struct inode_operations proc_profile_inode_operations 210,5278
static int get_loadavg(215,5368
static int get_kstat(229,5708
static int get_uptime(309,7902
static int get_meminfo(341,8930
static int get_version(374,9854
static int get_cmdline(382,9981
static unsigned long get_phys_addr(389,10113
static int get_array(425,10981
static int get_env(454,11511
static int get_arg(467,11820
#define first_sched	484,12276
#define last_sched	485,12346
static unsigned long get_wchan(487,12414
# define KSTK_EIP(KSTK_EIP615,15720
# define KSTK_ESP(KSTK_ESP616,15798
# define PT_REG(PT_REG621,15961
# define KSTK_EIP(KSTK_EIP623,16063
# define KSTK_ESP(KSTK_ESP625,16160
# define KSTK_EIP(KSTK_EIP627,16255
# define KSTK_ESP(KSTK_ESP628,16333
#define	KSTK_EIP(KSTK_EIP630,16438
#define	KSTK_ESP(KSTK_ESP637,16649
#define KSTK_EIP(KSTK_EIP639,16744
#define KSTK_ESP(KSTK_ESP640,16789
# define KSTK_EIP(KSTK_EIP642,16866
# define KSTK_ESP(KSTK_ESP643,16914
# define KSTK_EIP(KSTK_EIP645,16999
# define KSTK_ESP(KSTK_ESP646,17046
#define ADDBUF(ADDBUF650,17166
static inline char * task_name(654,17290
static const char *task_state_array[692,17904
static inline const char * get_task_state(701,18106
static inline char * task_state(718,18453
static inline char * task_mem(741,18940
static void collect_sigign_sigcatch(784,19954
static inline char * task_sig(804,20339
extern inline char *task_cap(826,20944
static int get_status(837,21223
static int get_stat(855,21679
static inline void statm_pte_range(944,23967
static inline void statm_pmd_range(982,24771
static void statm_pgd_range(1007,25390
static int get_statm(1017,25695
#define MAPS_LINE_LENGTH	1070,27300
#define MAPS_LINE_SHIFT	1071,27330
#define MAPS_LINE_FORMAT4	1077,27520
#define MAPS_LINE_MAX4	1078,27578
#define MAPS_LINE_FORMAT8	1081,27689
#define MAPS_LINE_MAX8	1082,27750
#define MAPS_LINE_MAX	1084,27821
static ssize_t read_maps 1087,27860
static int get_pidcpu(1216,30832
static long get_root_array(1263,32079
static int process_unauthorized(1358,33898
static int get_process_array(1402,34719
static inline int fill_array(1424,35173
#define PROC_BLOCK_SIZE	1431,35393
static ssize_t array_read(1433,35499
static struct file_operations proc_array_operations 1491,36783
struct inode_operations proc_array_inode_operations 1505,37124
static ssize_t arraylong_read(1525,37610
static struct file_operations proc_arraylong_operations 1539,37961
struct inode_operations proc_arraylong_inode_operations 1553,38310

fs/proc/kmsg.c,333
extern unsigned long log_size;17,253
extern struct wait_queue * log_wait;18,284
static int kmsg_open(22,378
static int kmsg_release(27,475
static ssize_t kmsg_read(33,586
static unsigned int kmsg_poll(39,712
static struct file_operations proc_kmsg_operations 48,877
struct inode_operations proc_kmsg_inode_operations 62,1169

fs/proc/net.c,186
#define PROC_BLOCK_SIZE	36,1310
static long proc_readnet(38,1416
static struct file_operations proc_net_operations 86,2484
struct inode_operations proc_net_inode_operations 103,2910

fs/proc/scsi.c,309
static struct file_operations proc_scsi_operations 44,1474
struct inode_operations proc_scsi_inode_operations 61,1925
int get_not_present_info(81,2541
#define PROC_BLOCK_SIZE 101,2974
static ssize_t proc_readscsi(105,3108
static ssize_t proc_writescsi(159,4342
static long long proc_scsilseek(183,4965

fs/proc/procfs_syms.c,196
extern struct inode_operations proc_scsi_inode_operations;13,390
extern struct proc_dir_entry proc_sys_root;14,449
static struct file_system_type proc_fs_type 44,1270
int init_proc_fs(51,1403

fs/proc/openpromfs.c,1901
#define ALIASES_NNODES 19,469
} openpromfs_node;openpromfs_node27,577
#define OPP_STRING	30,614
#define OPP_STRINGLIST	31,638
#define OPP_BINARY	32,666
#define OPP_HEXSTRING	33,690
#define OPP_DIRTY	34,717
#define OPP_QUOTED	35,740
#define OPP_NOTQUOTED	36,764
#define OPP_ASCIIZ	37,791
} openprom_property;openprom_property43,880
static openpromfs_node *nodes 45,902
static int alloced 46,940
static u16 last_node 47,964
static u16 first_prop 48,990
static u16 options 49,1017
static u16 aliases 50,1046
static int aliases_nodes 51,1075
static char *alias_names 52,1105
static struct inode_operations *proc_openprom_iops 53,1148
static struct openpromfs_dev **devices;54,1204
#define NODE(NODE56,1245
#define NODE2INO(NODE2INO57,1296
#define NODEP2INO(NODEP2INO58,1348
static ssize_t nodenum_read(65,1684
static ssize_t property_read(83,2151
static ssize_t property_write(297,7054
int property_release 499,11921
static struct file_operations openpromfs_prop_ops 553,13377
static struct inode_operations openpromfs_prop_inode_ops 567,13766
static struct file_operations openpromfs_nodenum_ops 587,14249
static struct inode_operations openpromfs_nodenum_inode_ops 601,14621
static struct file_operations openprom_alias_operations 621,15106
static struct inode_operations openprom_alias_inode_operations 635,15492
static int lookup_children(655,16028
static int openpromfs_lookup(688,16756
#define OPFSL_DIR	691,16844
#define OPFSL_PROPERTY	692,16864
#define OPFSL_NODENUM	693,16889
#define OPFSL_DEVICE	694,16913
static int openpromfs_readdir(833,20217
static int openpromfs_create 925,22215
static int openpromfs_unlink 957,23091
__initfunc(985,23690
__initfunc(1009,24177
void openpromfs_use 1081,25773
#define openpromfs_use 1122,26592
#define RET(RET1126,26640
__initfunc(1127,26655
#define RET(RET1132,26722
void cleanup_module 1154,27310

fs/proc/generic.c,558
extern struct inode_operations proc_dyna_dir_inode_operations;19,391
int proc_match(27,733
static struct file_operations proc_file_operations 36,920
struct inode_operations proc_file_inode_operations 50,1316
struct inode_operations proc_net_inode_operations 73,1921
#define MIN(MIN95,2406
#define PROC_BLOCK_SIZE	99,2528
proc_file_read(102,2577
proc_file_write(180,4325
proc_file_lseek(197,4717
static int xlate_proc_name(218,5157
struct proc_dir_entry *create_proc_entry(245,5626
void free_proc_entry(285,6559
void remove_proc_entry(298,6849

fs/proc/proc_tty.c,395
extern struct tty_driver *tty_drivers;17,278
extern struct tty_ldisc ldiscs[18,350
static struct proc_dir_entry *proc_tty_ldisc,29,647
static struct proc_dir_entry *proc_tty_ldisc, *proc_tty_driver;29,647
static int tty_drivers_read_proc(34,764
static int tty_ldiscs_read_proc(103,2404
void proc_tty_register_driver(134,3142
void proc_tty_unregister_driver(156,3627
__initfunc(173,3934

fs/proc/omirr.c,872
static int nr_omirr_open 13,212
static int cleared_flag 14,242
static char * buffer 16,272
static int read_pos,17,301
static int read_pos, write_pos;17,301
static int clip_pos,18,333
static int clip_pos, max_pos;18,333
static struct wait_queue * read_wait 19,363
static struct wait_queue * write_wait 20,408
static /*inline*/ int reserve_write_space(22,455
static /*inline*/ void write_space(39,772
static /*inline*/ int reserve_read_space(45,876
static /*inline*/ void read_space(65,1226
static /*inline*/ void init_buffer(75,1398
static int omirr_open(88,1667
static int omirr_release(98,1836
static long omirr_read(105,1953
int compute_name(137,2515
int _omirr_print(153,2790
int omirr_print(228,4442
int omirr_printall(245,4840
static struct file_operations omirr_operations 262,5211
struct inode_operations proc_omirr_inode_operations 279,5628

fs/proc/proc_devtree.c,314
static struct proc_dir_entry *proc_device_tree;14,264
static int property_read_proc(19,383
struct inode_operations devtree_symlink_inode_operations 47,968
static struct dentry *devtree_follow_link(68,1473
static int devtree_readlink(81,1805
static void add_node(101,2287
void proc_device_tree_init(209,5170

fs/minix/bitmap.c,454
static int nibblemap[22,401
static unsigned long count_free(24,464
void minix_free_block(54,1233
int minix_new_block(87,2097
unsigned long minix_count_free_blocks(126,2984
static struct buffer_head *V1_minix_clear_inode(133,3226
static struct buffer_head *V2_minix_clear_inode(161,4002
static void minix_clear_inode(191,4848
void minix_free_inode(201,5060
struct inode * minix_new_inode(241,6074
unsigned long minix_count_free_inodes(288,7215

fs/minix/truncate.c,611
#define DIRECT_BLOCK	16,299
#define INDIRECT_BLOCK(INDIRECT_BLOCK17,352
#define V1_DINDIRECT_BLOCK(V1_DINDIRECT_BLOCK18,405
#define V2_DINDIRECT_BLOCK(V2_DINDIRECT_BLOCK19,467
#define TINDIRECT_BLOCK(TINDIRECT_BLOCK20,529
static int V1_trunc_direct(38,1164
static int V1_trunc_indirect(71,1768
static int V1_trunc_dindirect(133,2936
static void V1_minix_truncate(179,3860
static int V2_trunc_direct(202,4418
static int V2_trunc_indirect(235,5039
static int V2_trunc_dindirect(297,6203
static int V2_trunc_tindirect(343,7123
static void V2_minix_truncate(389,8487
void minix_truncate(416,9201

fs/minix/inode.c,1596
static void minix_delete_inode(34,815
static void minix_commit_super 41,942
static void minix_write_super 48,1107
static void minix_put_super(63,1388
static struct super_operations minix_sops 82,1870
static int minix_remount 94,2102
static const char * minix_checkroot(133,3323
static struct super_block *minix_read_super(170,4219
static int minix_statfs(334,8826
#define V1_inode_bmap(V1_inode_bmap352,9399
static int V1_block_bmap(354,9489
static int V1_minix_bmap(365,9655
#define V2_inode_bmap(V2_inode_bmap399,10371
static int V2_block_bmap(400,10460
static int V2_minix_bmap(411,10625
int minix_bmap(458,11699
static struct buffer_head * V1_inode_getblk(469,11916
static struct buffer_head * V1_block_getblk(503,12577
static struct buffer_head * V1_minix_getblk(553,13466
static struct buffer_head * V2_inode_getblk(582,14188
static struct buffer_head * V2_block_getblk(616,14866
static struct buffer_head * V2_minix_getblk(666,15753
struct buffer_head * minix_getblk(702,16748
struct buffer_head * minix_bread(710,16969
static void V1_minix_read_inode(728,17330
static void V2_minix_read_inode(782,19103
static void minix_read_inode(838,20922
static struct buffer_head * V1_minix_update_inode(849,21140
static struct buffer_head * V2_minix_update_inode(887,22341
static struct buffer_head *minix_update_inode(924,23567
static void minix_write_inode(932,23762
int minix_sync_inode(940,23891
static struct file_system_type minix_fs_type 964,24326
__initfunc(971,24432
EXPORT_NO_SYMBOLS;977,24539
int init_module(979,24559
void cleanup_module(984,24611

fs/minix/file.c,231
#define	NBUF	22,405
#define MIN(MIN24,422
#define MAX(MAX25,459
static struct file_operations minix_file_operations 36,723
struct inode_operations minix_file_inode_operations 50,1112
static ssize_t minix_file_write(70,1614

fs/minix/namei.c,571
static inline int namecompare(23,455
static struct buffer_head * minix_find_entry(39,939
static int minix_hash(87,1913
struct dentry_operations minix_dentry_operations 109,2378
int minix_lookup(119,2525
static int minix_add_entry(151,3301
int minix_create(217,4710
int minix_mknod(247,5352
int minix_mkdir(293,6491
static int empty_dir(356,8067
int minix_rmdir(412,9255
int minix_unlink(456,10187
int minix_symlink(504,11213
int minix_link(557,12403
#define PARENT_INO(PARENT_INO594,13208
static int do_minix_rename(607,13810
int minix_rename(735,17267

fs/minix/symlink.c,147
struct inode_operations minix_symlink_inode_operations 23,454
static struct dentry * minix_follow_link(43,934
static int minix_readlink(61,1307

fs/minix/dir.c,190
static ssize_t minix_dir_read(17,274
static struct file_operations minix_dir_operations 25,456
struct inode_operations minix_dir_inode_operations 42,895
static int minix_readdir(62,1433

fs/minix/fsync.c,539
#define blocksize 26,493
static int V1_sync_block 31,585
static int V1_sync_iblock 60,1120
static int V1_sync_direct(84,1534
static int V1_sync_indirect(100,1808
static int V1_sync_dindirect(123,2244
static int V1_minix_sync_file(147,2701
static int V2_sync_block 168,3256
static int V2_sync_iblock 197,3789
static int V2_sync_direct(221,4201
static int V2_sync_indirect(237,4469
static int V2_sync_dindirect(260,4903
static int V2_sync_tindirect(284,5358
static int V2_minix_sync_file(308,5802
int minix_sync_file(335,6535

fs/isofs/inode.c,1343
#define IGNORE_WRONG_MULTI_VOLUME_SPECS37,965
#define BEQUIET38,1005
static int check_malloc 41,1040
static int check_bread 42,1069
void isofs_put_super(57,1719
static struct super_operations isofs_sops 75,2079
static struct dentry_operations isofs_dentry_ops[87,2323
struct iso9660_options{iso9660_options116,2773
isofs_hash_common(135,3075
isofs_hashi_common(156,3416
isofs_cmpi_common(184,3878
isofs_cmp_common(208,4354
isofs_hash(229,4775
isofs_hashi(235,4888
isofs_cmp(241,5003
isofs_cmpi(247,5125
isofs_hash_ms(254,5270
isofs_hashi_ms(260,5386
isofs_cmp_ms(266,5504
isofs_cmpi_ms(272,5629
static int parse_options(278,5752
#define WE_OBEY_THE_WRITTEN_STANDARDS 405,9386
static unsigned int isofs_get_last_session(407,9427
struct super_block *isofs_read_super(456,10838
int isofs_statfs 862,23301
int isofs_bmap(878,23764
static void test_and_set_uid(961,26083
static int isofs_read_level3_size(971,26221
void isofs_read_inode(1060,28492
int isofs_lookup_grandparent(1254,35459
void * leak_check_malloc(1378,38228
void leak_check_free_s(1385,38357
struct buffer_head * leak_check_bread(1390,38453
void leak_check_brelse(1395,38576
static struct file_system_type iso9660_fs_type 1402,38674
__initfunc(1409,38785
EXPORT_NO_SYMBOLS;1415,38896
int init_module(1417,38916
void cleanup_module(1422,38970

fs/isofs/dir.c,265
static struct file_operations isofs_dir_operations 29,687
struct inode_operations isofs_dir_inode_operations 46,1084
static int isofs_name_translate(67,1570
int get_acorn_filename(96,2184
static int do_isofs_readdir(124,3024
static int isofs_readdir(290,7173

fs/isofs/file.c,120
static struct file_operations isofs_file_operations 24,502
struct inode_operations isofs_file_inode_operations 38,871

fs/isofs/namei.c,71
isofs_cmp(27,602
isofs_find_entry(61,1380
int isofs_lookup(231,6116

fs/isofs/rock.c,370
#define SIG(SIG25,683
#define CHECK_SP(CHECK_SP30,835
#define CONTINUE_DECLS 38,1134
#define CHECK_CE	42,1239
#define SETUP_ROCK_RIDGE(SETUP_ROCK_RIDGE47,1418
#define MAYBE_CONTINUE(MAYBE_CONTINUE53,1649
int find_rock_ridge_relocation(80,2512
int get_rock_ridge_filename(153,4152
int parse_rock_ridge_inode(229,5878
char * get_rock_ridge_symlink(393,10362

fs/isofs/rock.h,825
struct SU_SP{SU_SP6,239
struct SU_CE{SU_CE11,305
struct SU_ER{SU_ER17,375
struct RR_RR{RR_RR25,508
struct RR_PX{RR_PX29,543
struct RR_PN{RR_PN36,626
struct SL_component{SL_component42,684
struct RR_SL{RR_SL48,769
struct RR_NM{RR_NM53,838
struct RR_CL{RR_CL58,895
struct RR_PL{RR_PL62,933
struct stamp{stamp66,971
struct RR_TF{RR_TF70,1005
#define TF_CREATE 76,1176
#define TF_MODIFY 77,1196
#define TF_ACCESS 78,1216
#define TF_ATTRIBUTES 79,1236
#define TF_BACKUP 80,1260
#define TF_EXPIRATION 81,1281
#define TF_EFFECTIVE 82,1306
#define TF_LONG_FORM 83,1330
struct rock_ridge{rock_ridge85,1356
#define RR_PX 104,1693
#define RR_PN 105,1734
#define RR_SL 106,1772
#define RR_NM 107,1810
#define RR_CL 108,1849
#define RR_PL 109,1884
#define RR_RE 110,1920
#define RR_TF 111,1965

fs/isofs/symlink.c,148
struct inode_operations isofs_symlink_inode_operations 27,611
static int isofs_readlink(47,1091
static struct dentry * isofs_follow_link(68,1438

fs/isofs/util.c,176
isonum_711 15,416
isonum_712 21,468
isonum_721 32,575
isonum_722 38,654
isonum_723 44,733
isonum_731 56,908
isonum_732 65,1041
isonum_733 74,1174
int iso_date(99,1850

fs/isofs/joliet.c,70
uni16_to_x8(18,284
wcsntombs_be(46,782
get_joliet_filename(76,1270

fs/filesystems.c,74
void __init filesystem_setup(50,1041
asmlinkage sys_nfsservctl(158,2365

fs/devices.c,906
#define isa_tty_dev(isa_tty_dev27,588
#define need_serial(need_serial28,652
struct device_struct device_struct31,726
static struct device_struct chrdevs[36,805
static struct device_struct blkdevs[40,878
int get_device_list(44,951
static struct file_operations * get_fops(68,1450
struct file_operations * get_blkfops(111,2674
struct file_operations * get_chrfops(116,2800
int register_chrdev(121,2949
int register_blkdev(142,3449
int unregister_chrdev(163,3949
int unregister_blkdev(176,4231
int check_disk_change(198,4923
int blkdev_open(229,5551
int blkdev_release(241,5809
struct file_operations def_blk_fops 255,6165
struct inode_operations blkdev_inode_operations 268,6415
int chrdev_open(290,6917
struct file_operations def_chr_fops 308,7363
struct inode_operations chrdev_inode_operations 321,7613
char * kdevname(344,8159
char * bdevname(351,8288
char * cdevname(363,8510

fs/nfs/dir.c,1231
#define NFS_PARANOIA 32,979
struct nfs_dirent nfs_dirent39,1160
static struct file_operations nfs_dir_operations 68,2405
struct inode_operations nfs_dir_inode_operations 82,2785
nfs_dir_open(106,3394
nfs_dir_read(116,3666
static struct nfs_dirent	dircache[121,3759
static int nfs_readdir(134,4236
nfs_invalidate_dircache(315,8421
nfs_invalidate_dircache_sb(342,9037
nfs_free_dircache(368,9574
static inline void nfs_renew_times(378,9810
#define NFS_REVALIDATE_INTERVAL 383,9901
static int nfs_lookup_revalidate(396,10285
static void nfs_dentry_delete(459,11662
static void nfs_dentry_release(498,12761
struct dentry_operations nfs_dentry_operations 504,12870
static void show_dentry(517,13237
static int nfs_lookup(536,13672
			error 578,14813
	return error;582,14839
static int nfs_instantiate(588,14908
		error 606,15474
	return error;608,15490
static int nfs_create(617,15762
static int nfs_mknod(652,16646
static int nfs_mkdir(684,17532
static int nfs_rmdir(716,18422
struct dentry *nfs_silly_lookup(781,20660
static int nfs_sillyrename(804,21161
static int nfs_safe_remove(884,23436
static int nfs_unlink(948,25125
nfs_symlink(971,25567
nfs_link(1020,26874
static int nfs_rename(1077,28876

fs/nfs/proc.c,453
#define NFS_NEED_XDR_TYPES30,963
# define NFSDBG_FACILITY	47,1317
nfs_proc_getattr(55,1430
nfs_proc_setattr(67,1703
nfs_proc_lookup(80,2046
nfs_proc_readlink(94,2464
nfs_proc_read(112,2936
nfs_proc_write(128,3440
nfs_proc_create(143,3947
nfs_proc_remove(158,4398
nfs_proc_rename(170,4715
nfs_proc_link(184,5138
nfs_proc_symlink(197,5482
nfs_proc_mkdir(211,5879
nfs_proc_rmdir(226,6326
nfs_proc_readdir(243,6852
nfs_proc_statfs(293,8183

fs/nfs/file.c,328
#define NFSDBG_FACILITY	33,866
static struct file_operations nfs_file_operations 41,1225
struct inode_operations nfs_file_inode_operations 59,1716
# define IS_SWAPFILE(IS_SWAPFILE84,2355
nfs_file_flush(92,2470
nfs_file_read(108,2774
nfs_file_mmap(124,3219
nfs_fsync(144,3781
nfs_file_write(164,4148
nfs_lock(198,4906

fs/nfs/inode.c,756
#define CONFIG_NFS_SNAPSHOT 35,806
#define NFSDBG_FACILITY	36,836
#define NFS_PARANOIA 37,872
static struct super_operations nfs_sops 49,1341
struct rpc_stat			nfs_rpcstat 63,1770
nfs_read_inode(73,2095
nfs_put_inode(84,2327
nfs_delete_inode(95,2547
nfs_put_super(127,3376
nfs_umount_begin(149,3825
nfs_block_size(163,4106
nfs_read_super(193,4943
nfs_statfs(358,9200
void nfs_free_dentries(390,10127
nfs_fill_inode(414,10686
nfs_fhget(459,12206
__nfs_fhget(506,13607
nfs_notify_change(569,15327
nfs_revalidate(645,17089
_nfs_revalidate_inode(655,17315
nfs_refresh_inode(725,19577
static struct file_system_type nfs_fs_type 838,22336
init_nfs_fs(849,22499
EXPORT_NO_SYMBOLS;864,22748
init_module(869,22862
cleanup_module(875,22913

fs/nfs/read.c,279
#define NFS_NEED_XDR_TYPES18,684
#define NFSDBG_FACILITY	33,1019
struct nfs_rreq nfs_rreq35,1062
# define IS_SWAPFILE(IS_SWAPFILE45,1409
nfs_readreq_setup(53,1514
nfs_readpage_sync(69,1875
nfs_readpage_result(132,3534
nfs_readpage_async(167,4435
nfs_readpage(224,6179

fs/nfs/symlink.c,119
struct inode_operations nfs_symlink_inode_operations 27,552
static int nfs_readlink(47,1026
nfs_follow_link(71,1562

fs/nfs/nfsroot.c,931
#define NFSDBG_FACILITY 84,3470
#define NFS_ROOT	87,3580
static char nfs_root_name[90,3667
static char nfs_root_name[256] __initdata 90,3667
static __u32 servaddr __initdata 93,3744
static char nfs_path[96,3816
static char nfs_path[NFS_MAXPATHLEN] __initdata 96,3816
static struct nfs_mount_data nfs_data __initdata 99,3898
static int nfs_port __initdata 100,3977
static int mount_port __initdata 101,4047
static struct nfs_int_opts nfs_int_opts113,4360
} root_int_opts[116,4414
} root_int_opts[] __initdata 116,4414
static struct nfs_bool_opts nfs_bool_opts133,4805
} root_bool_opts[137,4879
} root_bool_opts[] __initdata 137,4879
__initfunc(157,5518
__initfunc(186,6002
__initfunc(223,6884
__initfunc(264,7910
__initfunc(280,8295
__initfunc(295,8910
__initfunc(323,9482
set_sockaddr(349,10290
__initfunc(359,10507
__initfunc(375,11001
__initfunc(406,11766
__initfunc(424,12143
__initfunc(440,12559

fs/nfs/write.c,903
#define NFS_PARANOIA 59,2271
#define NFSDBG_FACILITY	60,2294
#define NFS_WRITEBACK_DELAY	69,2530
#define NFS_WRITEBACK_MAX	70,2568
static int			nr_write_requests 75,2639
static struct rpc_wait_queue	write_queue 76,2675
# define IS_SWAPFILE(IS_SWAPFILE80,2809
nfs_writepage_sync(88,2944
append_write_request(163,4987
remove_write_request(173,5215
find_write_request(184,5491
nfs_check_failed_request(217,6239
update_write_request(228,6439
free_write_request(254,6964
create_write_request(264,7132
schedule_write_request(326,8993
wait_on_write_request(360,9850
nfs_writepage(397,10766
nfs_updatepage(410,11153
nfs_cancel_request(489,13302
nfs_cancel_dirty(502,13566
static int wait_on_other_req(522,14066
#define NFS_WB(NFS_WB537,14392
nfs_wb_all(554,14789
nfs_wb_page(563,14927
nfs_wb_file(572,15093
nfs_inval(578,15193
nfs_wback_begin(590,15460
nfs_wback_result(619,16292

fs/nfs/nfs2xdr.c,1955
#define NFS_NEED_XDR_TYPES10,182
#define NFS_PAD_WRITES 26,587
#define NFSDBG_FACILITY	28,613
#define QUADLEN(QUADLEN31,679
#define errno_NFSERR_IO	35,820
#define NFS_fhandle_sz	41,949
#define NFS_sattr_sz	42,975
#define NFS_filename_sz	43,999
#define NFS_path_sz	44,1045
#define NFS_fattr_sz	45,1088
#define NFS_info_sz	46,1113
#define NFS_entry_sz	47,1136
#define NFS_enc_void_sz	49,1177
#define NFS_diropargs_sz	50,1204
#define NFS_sattrargs_sz	51,1260
#define NFS_readargs_sz	52,1313
#define NFS_writeargs_sz	53,1355
#define NFS_createargs_sz	54,1397
#define NFS_renameargs_sz	55,1453
#define NFS_linkargs_sz	56,1513
#define NFS_symlinkargs_sz	57,1570
#define NFS_readdirargs_sz	58,1639
#define NFS_dec_void_sz	60,1684
#define NFS_attrstat_sz	61,1711
#define NFS_diropres_sz	62,1751
#define NFS_readlinkres_sz	63,1806
#define NFS_readres_sz	64,1847
#define NFS_stat_sz	65,1888
#define NFS_readdirres_sz	66,1911
#define NFS_statfsres_sz	67,1939
xdr_encode_fhandle(73,2045
xdr_decode_fhandle(80,2196
xdr_decode_string2(87,2347
xdr_decode_fattr(98,2563
xdr_encode_sattr(121,3207
nfs_xdr_enc_void(141,3606
nfs_xdr_fhandle(152,3811
nfs_xdr_sattrargs(163,4021
nfs_xdr_diropargs(176,4317
nfs_xdr_readargs(190,4735
nfs_xdr_readres(224,5653
nfs_xdr_writeargs(262,6710
nfs_xdr_createargs(304,7664
nfs_xdr_renameargs(317,7970
nfs_xdr_linkargs(331,8324
nfs_xdr_symlinkargs(344,8634
nfs_xdr_readdirargs(358,9000
nfs_xdr_readdirres(412,10746
nfs_xdr_dec_void(499,13184
nfs_xdr_stat(508,13308
nfs_xdr_attrstat(522,13542
nfs_xdr_diropres(540,13992
nfs_xdr_readlinkres(559,14481
nfs_xdr_statfsres(577,14893
} nfs_errtbl[598,15358
nfs_stat_to_errno(627,16074
# define MAX(MAX640,16342
#define PROC(PROC643,16394
static struct rpc_procinfo	nfs_procedures[650,16606
static struct rpc_version	nfs_version2 671,17349
static struct rpc_version *	nfs_version[677,17467
struct rpc_program	nfs_program 683,17546

fs/nfs/mount_clnt.c,538
# define NFSDBG_FACILITY	23,465
extern struct rpc_program	mnt_program;34,683
struct mnt_fhstatus mnt_fhstatus36,723
nfs_mount(45,862
mnt_create(64,1402
xdr_error(90,1905
xdr_encode_dirpath(96,1988
xdr_decode_fhstatus(105,2167
#define MNT_dirpath_sz	112,2338
#define MNT_fhstatus_sz	113,2372
static struct rpc_procinfo	mnt_procedures[115,2406
static struct rpc_version	mnt_version1 125,2660
static struct rpc_version *	mnt_version[129,2729
static struct rpc_stat		mnt_stats;134,2802
struct rpc_program	mnt_program 136,2838

fs/nfs/nfs3xdr.c,2065
#define NFS_NEED_XDR_TYPES10,169
# define RPC_FACILITY	26,524
#define QUADLEN(QUADLEN29,566
#define errno_NFSERR_IO	33,707
#define NFS_fhandle_sz	39,836
#define NFS_sattr_sz	40,867
#define NFS_filename_sz	41,891
#define NFS_path_sz	42,937
#define NFS_fattr_sz	43,980
#define NFS_info_sz	44,1005
#define NFS_entry_sz	45,1028
#define NFS_enc_void_sz	47,1069
#define NFS_diropargs_sz	48,1096
#define NFS_sattrargs_sz	49,1152
#define NFS_readargs_sz	50,1205
#define NFS_writeargs_sz	51,1247
#define NFS_createargs_sz	52,1289
#define NFS_renameargs_sz	53,1345
#define NFS_linkargs_sz	54,1405
#define NFS_symlinkargs_sz	55,1462
#define NFS_readdirargs_sz	56,1531
#define NFS_dec_void_sz	58,1576
#define NFS_attrstat_sz	59,1603
#define NFS_diropres_sz	60,1643
#define NFS_readlinkres_sz	61,1698
#define NFS_readres_sz	62,1739
#define NFS_stat_sz	63,1780
#define NFS_readdirres_sz	64,1803
#define NFS_statfsres_sz	65,1831
xdr_encode_fhandle(71,1937
xdr_decode_fhandle(79,2097
xdr_decode_ftype(89,2308
xdr_decode_string2(95,2419
xdr_decode_fattr(106,2635
xdr_encode_sattr(129,3338
nfs_xdr_enc_void(150,3784
nfs_xdr_fhandle(161,3989
nfs_xdr_sattrargs(172,4200
nfs_xdr_diropargs(185,4496
nfs_xdr_readargs(199,4913
nfs_xdr_readres(233,5831
nfs_xdr_writeargs(271,6882
nfs_xdr_createargs(293,7380
nfs_xdr_renameargs(306,7686
nfs_xdr_linkargs(320,8040
nfs_xdr_symlinkargs(333,8350
nfs_xdr_readdirargs(347,8716
nfs_xdr_readdirres(392,10179
nfs_xdr_dec_void(479,12428
nfs_xdr_stat(488,12552
nfs_xdr_attrstat(502,12786
nfs_xdr_diropres(520,13230
nfs_xdr_readlinkres(539,13713
nfs_xdr_statfsres(557,14125
} nfs_errtbl[578,14590
nfs_stat_to_errno(606,15271
# define MAX(MAX619,15539
#define PROC(PROC622,15591
static struct rpc_procinfo	nfs_procedures[629,15803
static struct rpc_version	nfs_version2 650,16546
static struct rpc_version *	nfs_version[656,16664
struct rpc_program	nfs_program 662,16743
nfs_get_info(674,16919
static struct proc_dir_entry	proc_nfsclnt 679,17073
struct rpc_stat			nfs_rpcstat 686,17212

fs/ext2/dir.c,222
static ssize_t ext2_dir_read 29,595
static struct file_operations ext2_dir_operations 37,776
struct inode_operations ext2_dir_inode_operations 57,1285
int ext2_check_dir_entry 78,1841
static int ext2_readdir(106,2945

fs/ext2/file.c,475
#define	NBUF	34,706
#define MIN(MIN36,723
#define MAX(MAX37,760
#define EXT2_MAX_SIZE(EXT2_MAX_SIZE47,1095
static long long ext2_max_sizes[53,1334
static struct file_operations ext2_file_operations 64,1584
struct inode_operations ext2_file_inode_operations 85,2112
static long long ext2_file_lseek(109,2705
static inline void remove_suid(139,3266
static ssize_t ext2_file_write 154,3621
static int ext2_release_file 319,7508
static int ext2_open_file 331,7805

fs/ext2/inode.c,592
void ext2_put_inode 40,935
void ext2_delete_inode 48,1071
#define inode_bmap(inode_bmap62,1416
static inline int block_bmap 64,1480
void ext2_discard_prealloc 82,1952
static int ext2_alloc_block 95,2259
int ext2_bmap 147,3753
static struct buffer_head * inode_getblk 203,5421
static struct buffer_head * block_getblk 280,7223
struct buffer_head * ext2_getblk 357,8992
struct buffer_head * ext2_bread 419,11237
void ext2_read_inode 471,12353
static int ext2_update_inode(610,17460
void ext2_write_inode 708,21066
int ext2_sync_inode 713,21147
int ext2_notify_change(718,21232

fs/ext2/namei.c,671
#define NAMEI_RA_CHUNKS 37,873
#define NAMEI_RA_BLOCKS 38,900
#define NAMEI_RA_SIZE 39,927
#define NAMEI_RA_INDEX(NAMEI_RA_INDEX40,992
static inline int ext2_match 48,1230
static struct buffer_head * ext2_find_entry 66,1747
int ext2_lookup(171,4297
static struct buffer_head * ext2_add_entry 204,5130
static int ext2_delete_entry 329,8362
int ext2_create 366,9262
int ext2_mknod 405,10192
int ext2_mkdir(470,11920
static int empty_dir 555,14224
int ext2_rmdir 614,15984
int ext2_unlink(672,17251
int ext2_symlink 725,18424
int ext2_link 797,20066
#define PARENT_INO(PARENT_INO849,21376
static int do_ext2_rename 864,22036
int ext2_rename 1004,25982

fs/ext2/symlink.c,145
struct inode_operations ext2_symlink_inode_operations 33,683
static struct dentry * ext2_follow_link(54,1180
static int ext2_readlink 78,1686

fs/ext2/truncate.c,465
static int ext2_secrm_seed 46,1127
#define RANDOM_INT 48,1190
#define DIRECT_BLOCK(DIRECT_BLOCK56,1469
#define INDIRECT_BLOCK(INDIRECT_BLOCK59,1583
#define DINDIRECT_BLOCK(DINDIRECT_BLOCK60,1656
#define TINDIRECT_BLOCK(TINDIRECT_BLOCK62,1745
static int check_block_empty(108,3866
static int trunc_direct 163,4927
static int trunc_indirect 210,5959
static int trunc_dindirect 293,7990
static int trunc_tindirect 340,9190
void ext2_truncate 385,10377

fs/ext2/ialloc.c,276
static int read_inode_bitmap 47,1425
static int load_inode_bitmap 91,2754
void ext2_free_inode 180,5944
static void inc_inode_version 275,8386
struct inode * ext2_new_inode 295,9006
unsigned long ext2_count_free_inodes 513,14518
void ext2_check_inodes_bitmap 551,15568

fs/ext2/balloc.c,471
#define in_range(in_range40,1212
struct ext2_group_desc * ext2_get_group_desc(42,1293
static int read_block_bitmap 83,2456
static int load__block_bitmap 126,3779
static inline int load_block_bitmap 205,6684
void ext2_free_blocks 254,7947
int ext2_new_block 360,11026
unsigned long ext2_count_free_blocks 631,18121
static inline int block_in_use 669,19168
static int test_root(677,19404
int ext2_group_sparse(690,19551
void ext2_check_blocks_bitmap 696,19668

fs/ext2/bitmap.c,67
static int nibblemap[13,252
unsigned long ext2_count_free 15,328

fs/ext2/acl.c,28
int ext2_permission 26,485

fs/ext2/ioctl.c,23
int ext2_ioctl 19,367

fs/ext2/fsync.c,625
#define blocksize 35,905
#define addr_per_block 36,954
static int sync_block 38,1013
static int sync_block_swab32 61,1473
#define sync_block_swab32 83,1947
static int sync_iblock 87,1993
static int sync_iblock_swab32 106,2333
#define sync_iblock_swab32 124,2688
static int sync_direct 127,2735
static int sync_indirect 140,2965
static __inline__ int sync_indirect_swab32 162,3386
#define sync_indirect_swab32 183,3813
static int sync_dindirect 186,3864
static __inline__ int sync_dindirect_swab32 208,4301
#define sync_dindirect_swab32 229,4744
static int sync_tindirect 232,4797
int ext2_sync_file(258,5311

fs/ext2/super.c,686
static char error_buf[38,781
void ext2_error 40,811
NORET_TYPE void ext2_panic 70,1878
void ext2_warning 93,2552
void ext2_put_super 105,2849
static struct super_operations ext2_sops 132,3638
static int parse_options 147,3903
static void ext2_setup_super 276,7569
static int ext2_check_descriptors 330,9665
#define log2(log2377,11193
struct super_block * ext2_read_super 379,11220
static void ext2_commit_super 651,20224
void ext2_write_super 670,20823
int ext2_remount 688,21232
static struct file_system_type ext2_fs_type 737,22709
__initfunc(744,22876
EXPORT_NO_SYMBOLS;750,22981
int init_module(752,23001
void cleanup_module(757,23052
int ext2_statfs 764,23137

fs/dquot.c,2642
#define __DQUOT_VERSION__	46,1535
int nr_dquots 48,1576
int max_dquots 49,1615
static char quotamessage[51,1644
static char *quotatypes[52,1689
static kmem_cache_t *dquot_cachep;54,1731
static struct dquot *inuse_list 76,2633
static struct dquot *dquot_hash[78,2697
static int dquot_updating[79,2741
static struct dqstats dqstats;81,2780
static struct wait_queue *dquot_wait 82,2811
static inline char is_enabled(85,2945
static inline char sb_has_quota_enabled(96,3209
static inline char dev_has_quota_enabled(103,3418
static inline int const hashfn(110,3610
static inline void insert_dquot_hash(115,3750
static inline void hash_dquot(126,4061
static inline void unhash_dquot(131,4144
static inline struct dquot *find_dquot(141,4403
static inline void put_dquot_head(152,4752
static inline void put_dquot_last(159,4920
static inline void remove_free_dquot(165,5045
static inline void put_inuse(176,5307
static inline void remove_inuse(185,5534
static void __wait_on_dquot(196,5758
static inline void wait_on_dquot(211,6091
static inline void lock_dquot(217,6210
static inline void unlock_dquot(223,6320
static void write_dquot(229,6437
static void read_dquot(263,7223
void clear_dquot(297,8042
void invalidate_dquots(307,8287
int sync_dquots(343,9003
void dqput(376,9683
static void grow_dquots(420,10633
static struct dquot *find_best_candidate_weighted(439,10968
static inline struct dquot *find_best_free(459,11500
struct dquot *get_empty_dquot(473,11854
struct dquot *dqget(531,13033
static void add_dquot_ref(576,14095
static void reset_dquot_ptrs(601,14656
static inline void dquot_incr_inodes(647,15658
static inline void dquot_incr_blocks(655,15845
static inline void dquot_decr_inodes(663,16032
static inline void dquot_decr_blocks(677,16401
static inline char need_print_warning(691,16768
static inline char ignore_hardlimit(702,17003
static int check_idq(707,17164
static int check_bdq(752,18765
static int set_dqblk(801,20511
static int get_quota(861,22509
static int get_stats(880,22891
static int quota_root_squash(895,23249
static u_long isize_to_blocks(915,23757
void dquot_initialize(940,24395
void dquot_drop(982,25251
int dquot_alloc_block(1000,25578
int dquot_alloc_inode(1025,26149
void dquot_free_block(1049,26699
void dquot_free_inode(1063,26988
int dquot_transfer(1079,27355
void __init dquot_init_hash(1167,29820
struct dquot_operations dquot_operations 1185,30287
static inline void set_enable_flags(1195,30497
static inline void reset_enable_flags(1207,30747
int quota_off(1222,31086
int quota_on(1269,32095
asmlinkage int sys_quotactl(1355,34088

fs/umsdos/dir.c,830
#define UMSDOS_SPECIAL_DIRFPOS	22,445
extern struct dentry *saved_root;23,478
extern struct inode *pseudo_root;24,512
static int umsdos_dentry_validate(33,649
static void umsdos_dentry_dput(39,774
struct dentry_operations umsdos_dentry_operations 47,908
int dummy_dir_read 62,1213
struct UMSDOS_DIR_ONCE UMSDOS_DIR_ONCE68,1315
static int umsdos_dir_once 81,1522
static int umsdos_readdir_x 111,2275
static int UMSDOS_readdir 318,7903
void umsdos_lookup_patch_new(375,9687
int umsdos_is_pseudodos 428,11182
int umsdos_lookup_x 462,12401
int UMSDOS_lookup 584,15701
struct dentry *umsdos_lookup_dentry(608,16231
char * umsdos_d_path(643,16902
struct dentry *umsdos_solve_hlink 666,17481
static struct file_operations umsdos_dir_operations 772,20158
struct inode_operations umsdos_dir_inode_operations 787,20544

fs/umsdos/check.c,387
static int check_one_table 21,367
void check_page_tables 33,570
void check_sb 66,1124
extern struct inode_operations umsdos_rdir_inode_operations;79,1345
void check_inode 81,1407
void checkd_inode 122,2763
void check_dent_int 174,4158
void check_dentry_path 198,4838
void check_sb 233,5676
void check_inode 234,5733
void checkd_inode 235,5776
void check_dentry_path 236,5820

fs/umsdos/emd.c,680
ssize_t umsdos_file_read_kmem 29,520
ssize_t umsdos_file_write_kmem_real 50,932
ssize_t umsdos_file_write_kmem 86,1798
ssize_t umsdos_emd_dir_write 107,2186
ssize_t umsdos_emd_dir_read 160,3530
struct dentry *umsdos_get_emd_dentry(196,4385
int umsdos_have_emd(210,4689
int umsdos_make_emd(229,5063
int umsdos_emd_dir_readentry 273,5963
static int umsdos_writeentry 308,6978
#define CHUNK_SIZE 374,8832
struct find_buffer find_buffer375,8871
static int umsdos_fillbuf 393,9293
static int umsdos_find 449,10955
int umsdos_newentry 571,14073
int umsdos_newhidden 594,14657
int umsdos_delentry 617,15136
int umsdos_isempty 650,15708
int umsdos_findentry 699,16597

fs/umsdos/file.c,507
static ssize_t UMSDOS_file_read 25,495
static ssize_t UMSDOS_file_write 49,961
static void UMSDOS_truncate 62,1179
struct file_operations umsdos_file_operations 73,1469
struct inode_operations umsdos_file_inode_operations 88,1847
struct file_operations umsdos_file_operations_no_bmap 111,2426
struct inode_operations umsdos_file_inode_operations_no_bmap 126,2804
struct file_operations umsdos_file_operations_readpage 149,3398
struct inode_operations umsdos_file_inode_operations_readpage 164,3785

fs/umsdos/inode.c,862
extern struct dentry_operations umsdos_dentry_operations;22,448
extern struct inode_operations umsdos_rdir_inode_operations;23,506
struct dentry *saved_root 26,569
struct inode *pseudo_root 27,634
void fill_new_filp 36,855
void UMSDOS_put_inode 50,1142
void UMSDOS_put_super 68,1595
void umsdos_setup_dir(89,2123
void umsdos_set_dirinfo_new 110,2683
void umsdos_patch_dentry_inode(139,3412
void UMSDOS_read_inode 193,5131
int UMSDOS_notify_change 208,5469
int umsdos_notify_change_locked(222,5755
void UMSDOS_write_inode 326,8681
static struct super_operations umsdos_sops 349,9411
struct super_block *UMSDOS_read_super 365,9825
static struct dentry *check_pseudo_root(426,11367
static struct file_system_type umsdos_fs_type 470,12359
__initfunc 478,12468
EXPORT_NO_SYMBOLS;484,12573
int init_module 486,12593
void cleanup_module 491,12648

fs/umsdos/ioctl.c,114
struct UMSDOS_DIR_ONCE UMSDOS_DIR_ONCE18,336
static int umsdos_ioctl_fill 27,478
int UMSDOS_ioctl_dir(72,1628

fs/umsdos/mangle.c,305
#define KERN_WARNING17,389
void umsdos_manglename 28,640
#define SPECIAL_MANGLING 79,2753
#define lookup12 89,3077
int umsdos_evalrecsize 110,3742
int umsdos_evalrecsize_old 123,4096
int umsdos_parse 141,4492
struct MANG_TEST MANG_TEST421,13031
struct MANG_TEST tb[427,13186
int main 483,14809

fs/umsdos/namei.c,1028
static int umsdos_waitcreate 29,692
static void umsdos_waitlookup 44,979
void umsdos_lockcreate 82,2523
static void umsdos_lockcreate2 97,2884
void umsdos_startlookup 123,3603
void umsdos_unlockcreate 132,3762
void umsdos_endlookup 145,4092
static void umsdos_lockcreate 156,4380
static void umsdos_lockcreate2 159,4434
void umsdos_startlookup 162,4510
static void umsdos_unlockcreate 165,4558
void umsdos_endlookup 168,4614
static int is_sticky(177,4727
static int umsdos_nevercreat 186,4911
static int umsdos_create_any 233,6308
int UMSDOS_create 319,8490
static void umsdos_ren_init 329,8738
#define chkstk(chkstk344,9276
#define chkstk(chkstk353,9547
static int umsdos_rename_f 360,9643
extern struct inode_operations umsdos_symlink_inode_operations;615,17334
static int umsdos_symlink_x 617,17399
int UMSDOS_symlink 656,18252
int UMSDOS_link 665,18460
int UMSDOS_mkdir 881,24602
int UMSDOS_mknod 991,27523
int UMSDOS_rmdir 1000,27701
int UMSDOS_unlink 1095,29840
int UMSDOS_rename 1254,33612

fs/umsdos/rdir.c,476
extern struct dentry *saved_root;22,409
extern struct inode *pseudo_root;23,443
extern struct dentry_operations umsdos_dentry_operations;24,477
struct RDIR_FILLDIR RDIR_FILLDIR26,536
static int rdir_filldir 32,613
static int UMSDOS_rreaddir 61,1416
int umsdos_rlookup_x 82,2046
int UMSDOS_rlookup 122,3113
static int UMSDOS_rrmdir 150,4190
static struct file_operations umsdos_rdir_operations 220,6335
struct inode_operations umsdos_rdir_inode_operations 235,6722

fs/umsdos/symlink.c,311
static struct file_operations umsdos_symlink_operations;22,448
int umsdos_readlink_x 31,623
static int UMSDOS_readlink 60,1192
static struct dentry *UMSDOS_followlink 66,1369
static struct file_operations umsdos_symlink_operations 108,2246
struct inode_operations umsdos_symlink_inode_operations 124,2606

fs/hpfs/hpfs.h,1437
typedef unsigned secno;secno16,521
typedef secno dnode_secno;dnode_secno18,588
typedef secno fnode_secno;fnode_secno19,647
typedef secno anode_secno;anode_secno20,707
struct hpfs_boot_blockhpfs_boot_block27,920
#define SB_MAGIC 58,1771
struct hpfs_super_blockhpfs_super_block60,1800
#define SP_MAGIC 89,2833
struct hpfs_spare_blockhpfs_spare_block91,2862
#define BAD_MAGIC 119,3965
#define CP_DIR_MAGIC 143,4812
struct code_page_directorycode_page_directory145,4845
#define CP_DATA_MAGIC 163,5428
struct code_page_datacode_page_data165,5462
#define DNODE_MAGIC 218,7611
struct dnode dnode220,7645
struct hpfs_dirent hpfs_dirent233,8117
static inline dnode_secno de_down_pointer 270,9577
static inline struct hpfs_dirent *dnode_first_de 277,9745
static inline struct hpfs_dirent *dnode_end_de 284,9890
static inline struct hpfs_dirent *de_next_de 291,10049
struct bplus_leaf_nodebplus_leaf_node308,10771
struct bplus_internal_nodebplus_internal_node315,10962
struct bplus_headerbplus_header321,11102
#define FNODE_MAGIC 357,12451
struct fnodefnode359,12483
#define ANODE_MAGIC 409,13979
struct anodeanode411,14011
struct extended_attributeextended_attribute442,15057
static inline unsigned char *ea_name 468,15975
static inline unsigned char *ea_value 473,16084
    ea_next_ea 479,16254
static inline unsigned ea_indirect_length 484,16374
static inline secno ea_indirect_secno 490,16508

fs/hpfs/hpfs_fs.c,2180
#define little_ushort(little_ushort124,4985
typedef void nonconst;nonconst125,5037
static const struct super_operations hpfs_sops 134,5313
static const struct file_operations hpfs_file_ops 152,5784
static const struct inode_operations hpfs_file_iops 167,6166
static const struct file_operations hpfs_dir_ops 197,6970
static const struct inode_operations hpfs_dir_iops 212,7357
struct quad_buffer_head quad_buffer_head234,7914
static inline ino_t file_ino(280,9825
static inline ino_t dir_ino(289,9947
static inline fnode_secno ino_secno(298,10069
static inline int ino_is_dir(307,10184
#define CONV_BINARY 316,10278
#define CONV_TEXT 317,10322
#define CONV_AUTO 318,10364
static inline time_t local_to_gmt(324,10466
struct super_block *hpfs_read_super(337,10764
static int check_warn(538,15284
static int zerop(546,15458
static int parse_opts(556,15649
static void hpfs_read_inode(638,17680
static void hpfs_put_super(734,19654
static int hpfs_statfs(744,19869
static int hpfs_remount_fs(776,20596
static void count_dnodes(787,20793
static unsigned count_bitmap(820,21466
static unsigned count_one_bitmap(858,22201
static ssize_t hpfs_file_read(883,22593
static unsigned choose_conv(965,24169
static unsigned convcpy_tofs(996,24646
static secno hpfs_bmap(1015,24979
static secno bplus_lookup(1052,25832
static int hpfs_lookup(1122,27849
static inline int memcasecmp(1219,29912
static struct hpfs_dirent *map_dirent(1240,30353
static void translate_hpfs_name(1351,33243
static int hpfs_readdir(1366,33517
static struct hpfs_dirent *map_pos_dirent(1433,34925
static dnode_secno dir_subdno(1499,35993
static struct hpfs_dirent *map_nth_dirent(1560,36951
static ssize_t hpfs_dir_read(1582,37388
static dnode_secno fnode_dno(1590,37559
static struct fnode *map_fnode(1607,37888
static struct anode *map_anode(1628,38339
static struct dnode *map_dnode(1650,38821
static void *map_sector(1672,39310
static void *map_4sectors(1686,39636
static void brelse4(1738,40594
static struct file_system_type hpfs_fs_type 1747,40760
__initfunc(1754,40871
EXPORT_NO_SYMBOLS;1760,40976
int init_module(1762,40996
void cleanup_module(1767,41047

fs/hpfs/hpfs_caps.c,627
static const unsigned char tb_cp850_to_latin1[66,3046
static const unsigned char tb_latin1_to_cp850[87,3783
#define A_GRAVE 108,4521
#define THORN	109,4542
#define MULTIPLY 110,4564
#define a_grave 111,4586
#define thorn	112,4607
#define divide	113,4626
static inline unsigned latin1_upcase 115,4647
static inline unsigned latin1_downcase 125,4837
static inline unsigned latin1_to_cp850 136,5037
static inline unsigned cp850_to_latin1 145,5191
unsigned hpfs_char_to_upper_linux 153,5338
unsigned linux_char_to_upper_linux 158,5436
unsigned hpfs_char_to_lower_linux 163,5517
unsigned hpfs_char_to_linux 168,5617

fs/hpfs/hpfs_caps.h,0

fs/sysv/dir.c,187
static ssize_t sysv_dir_read(24,424
static struct file_operations sysv_dir_operations 32,603
struct inode_operations sysv_dir_inode_operations 49,1039
static int sysv_readdir(69,1566

fs/sysv/balloc.c,105
void sysv_free_block(32,685
int sysv_new_block(128,3775
unsigned long sysv_count_free_blocks(225,6839

fs/sysv/ialloc.c,168
static inline sysv_ino_t * sv_sb_fic_inode 38,900
void sysv_free_inode(52,1286
struct inode * sysv_new_inode(103,2814
unsigned long sysv_count_free_inodes(177,5531

fs/sysv/file.c,261
#define	NBUF	28,535
#define MIN(MIN30,552
#define MAX(MAX31,589
static struct file_operations sysv_file_operations 42,849
struct inode_operations sysv_file_inode_operations 56,1233
ssize_t sysv_file_read(76,1731
static ssize_t sysv_file_write(205,4861

fs/sysv/fsync.c,230
static int sync_block 29,607
static int sync_iblock 62,1313
static int sync_direct(89,1795
static int sync_indirect(104,2036
static int sync_dindirect(129,2535
static int sync_tindirect(155,3056
int sysv_sync_file(181,3580

fs/sysv/inode.c,1604
void sysv_print_inode(38,784
static void sysv_delete_inode(58,1734
static struct super_operations sysv_sops 66,1859
static void detected_bs 87,2428
static const char* detect_xenix 118,3592
static struct super_block * detected_xenix 131,3938
static const char* detect_sysv4 172,5243
static struct super_block * detected_sysv4 200,6252
static const char* detect_sysv2 240,7428
static struct super_block * detected_sysv2 255,7896
static const char* detect_coherent 295,9072
static struct super_block * detected_coherent 307,9491
struct super_block *sysv_read_super(341,10590
void sysv_write_super 522,16251
void sysv_put_super(545,16955
int sysv_statfs(558,17316
static inline int inode_bmap(577,18104
static int block_bmap(585,18288
int sysv_bmap(600,18573
static struct buffer_head * inode_getblk(660,20183
static struct buffer_head * block_getblk(695,20831
struct buffer_head * sysv_getblk(749,21847
struct buffer_head * sysv_file_bread(782,22960
static inline unsigned long read3byte 799,23295
static inline void write3byte 804,23399
static inline unsigned long read3byte 813,23539
static inline void write3byte 819,23704
static inline unsigned long coh_read3byte 827,23870
static inline void coh_write3byte 833,24039
void sysv_read_inode(839,24201
int sysv_notify_change(911,26603
static struct buffer_head * sysv_update_inode(929,27001
void sysv_write_inode(981,28742
int sysv_sync_inode(988,28861
static struct file_system_type sysv_fs_type[1013,29555
__initfunc(1019,29774
EXPORT_NO_SYMBOLS;1032,29968
int init_module(1034,29988
void cleanup_module(1039,30039

fs/sysv/namei.c,501
static inline int namecompare(27,586
static int sysv_match(44,1054
static struct buffer_head * sysv_find_entry(62,1679
int sysv_lookup(106,2642
static int sysv_add_entry(141,3427
int sysv_create(205,4796
int sysv_mknod(235,5441
int sysv_mkdir(282,6585
static int empty_dir(343,8264
int sysv_rmdir(400,9535
int sysv_unlink(443,10459
int sysv_symlink(489,11442
int sysv_link(547,12792
#define PARENT_INO(PARENT_INO584,13676
static int do_sysv_rename(597,14278
int sysv_rename(717,17555

fs/sysv/symlink.c,144
struct inode_operations sysv_symlink_inode_operations 29,591
static struct dentry *sysv_follow_link(49,1068
static int sysv_readlink(67,1443

fs/sysv/truncate.c,202
static int trunc_direct(40,1077
static int trunc_indirect(74,1780
static int trunc_dindirect(143,3308
static int trunc_tindirect(200,4648
static int trunc_all(257,5995
void sysv_truncate(270,6386

fs/dcache.c,1355
#define DCACHE_PARANOIA 26,538
extern unsigned long num_physpages,30,624
extern unsigned long num_physpages, page_cache_size;30,624
extern int inodes_stat[31,677
#define nr_inodes 32,703
kmem_cache_t *dentry_cache;34,739
#define D_HASHBITS 44,1084
#define D_HASHSIZE 45,1110
#define D_HASHMASK 46,1153
static struct list_head dentry_hashtable[48,1192
} dentry_stat 57,1424
static inline void d_free(59,1457
static inline void dentry_iput(72,1785
void dput(102,2705
int d_invalidate(168,3952
int select_dcache(207,5031
static inline void prune_one_dentry(268,6424
void prune_dcache(286,6823
void shrink_dcache_sb(318,7673
int is_root_busy(364,8708
static int select_parent(405,9786
void shrink_dcache_parent(453,11015
void shrink_dcache_memory(472,11446
#define NAME_ALLOC_LEN(NAME_ALLOC_LEN478,11559
struct dentry * d_alloc(480,11605
void d_instantiate(538,13008
struct dentry * d_alloc_root(545,13160
static inline struct list_head * d_hash(560,13478
struct dentry * d_lookup(567,13710
int d_validate(609,14864
void d_delete(654,15994
void d_rehash(671,16232
#define do_switch(do_switch678,16381
static inline void switch_names(693,16992
void d_move(723,18010
char * d_path(753,18907
asmlinkage int sys_getcwd(812,20118
int is_subdir(844,20851
ino_t find_inode_number(871,21449
void __init dcache_init(899,22039

fs/binfmt_elf.c,1331
#define DLINFO_ITEMS 38,888
#define elf_addr_t 48,1189
#define elf_caddr_t 49,1222
#define elf_core_dump	59,1437
#define ELF_PAGESTART(ELF_PAGESTART62,1472
#define ELF_PAGEOFFSET(ELF_PAGEOFFSET63,1545
#define ELF_PAGEALIGN(ELF_PAGEALIGN64,1603
static struct linux_binfmt elf_format 66,1690
static void set_brk(74,1898
static void padzero(92,2327
create_elf_tables(104,2546
#define NEW_AUX_ENT(NEW_AUX_ENT151,3839
static unsigned long load_elf_interp(213,5626
static unsigned long load_aout_interp(347,9379
#define INTERPRETER_NONE 395,10615
#define INTERPRETER_AOUT 396,10642
#define INTERPRETER_ELF 397,10669
do_load_elf_binary(401,10715
load_elf_binary(793,21961
do_load_elf_library(807,22280
static int load_elf_library(902,24697
static int dump_write(928,25255
static int dump_seek(933,25390
static inline int maydump(950,25835
#define roundup(roundup967,26213
struct memelfnotememelfnote970,26291
static int notesize(978,26380
static void dump_regs(992,26584
#define DUMP_WRITE(DUMP_WRITE1009,27002
#define DUMP_SEEK(DUMP_SEEK1011,27097
static int writenote(1014,27179
#define DUMP_WRITE(DUMP_WRITE1034,27700
#define DUMP_SEEK(DUMP_SEEK1037,27794
static int elf_core_dump(1047,28064
int __init init_elf_binfmt(1338,35498
int init_module(1345,35589
void cleanup_module(1355,35789

fs/readdir.c,401
#define NAME_OFFSET(NAME_OFFSET24,552
#define ROUND_UP(ROUND_UP25,615
struct old_linux_dirent old_linux_dirent27,679
struct readdir_callback readdir_callback34,800
static int fillonedir(39,877
asmlinkage int old_readdir(56,1354
struct linux_dirent linux_dirent107,2256
struct getdents_callback getdents_callback114,2370
static int filldir(121,2494
asmlinkage int sys_getdents(145,3217

fs/smbfs/dir.c,635
#define SMBFS_PARANOIA 16,264
#define SMBFS_MAX_AGE 19,355
static struct file_operations smb_dir_operations 33,954
struct inode_operations smb_dir_inode_operations 48,1344
smb_dir_read(73,1949
smb_readdir(79,2054
smb_dir_open(166,3865
static struct dentry_operations smbfs_dentry_operations 199,4810
smb_lookup_validate(211,5125
#define tolower(tolower253,6106
smb_hash_dentry(256,6189
smb_compare_dentry(270,6455
smb_delete_dentry(291,6868
smb_renew_times(316,7390
smb_lookup(328,7563
smb_instantiate(370,8388
smb_create(417,9459
smb_mkdir(448,10156
smb_rmdir(467,10468
smb_unlink(492,10865
smb_rename(512,11163

fs/smbfs/inode.c,795
#define SMBFS_PARANOIA 31,595
static struct super_operations smb_sops 40,908
smb_invent_inos(57,1373
static struct smb_fattr *read_fattr 70,1526
static struct semaphore read_semaphore 71,1570
smb_iget(74,1634
smb_get_inode_attr(92,1956
smb_set_inode_attr(119,2673
smb_read_inode(148,3426
smb_invalidate_inodes(175,4059
smb_refresh_inode(189,4371
smb_revalidate_inode(243,5811
smb_put_inode(299,7155
smb_delete_inode(311,7446
smb_put_super(321,7646
smb_read_super(343,8082
smb_statfs(443,10755
smb_notify_change(459,11080
int smb_malloced;581,13862
int smb_current_kmalloced;582,13880
int smb_current_vmalloced;583,13907
static struct file_system_type smb_fs_type 586,13942
__initfunc(593,14072
EXPORT_NO_SYMBOLS;599,14168
init_module(602,14192
cleanup_module(618,14419

fs/smbfs/file.c,486
#define SMBFS_PARANOIA 24,445
min(29,555
smb_unlock_page(35,620
smb_fsync(42,731
smb_readpage_sync(55,975
smb_readpage(105,2086
smb_writepage_sync(127,2622
smb_writepage(173,3919
smb_updatepage(191,4355
smb_file_read(203,4732
smb_file_mmap(235,5587
smb_file_write(263,6235
smb_file_open(302,7208
smb_file_release(313,7471
smb_file_permission(335,7985
static struct file_operations smb_file_operations 350,8293
struct inode_operations smb_file_inode_operations 369,8967

fs/smbfs/proc.c,2001
#define SMBFS_PARANOIA 28,658
#define SMB_VWV(SMB_VWV33,788
#define SMB_CMD(SMB_CMD34,841
#define SMB_WCT(SMB_WCT35,880
#define SMB_BCC(SMB_BCC36,936
#define SMB_BUF(SMB_BUF37,977
#define SMB_DIRINFO_SIZE 39,1057
#define SMB_STATUS_SIZE 40,1085
min(45,1227
str_upper(51,1285
str_lower(62,1425
static void reverse_string(72,1553
smb_encode_smb_length(90,2117
static int smb_build_path(107,2424
static char *smb_encode_path(155,3311
static int day_n[172,3714
extern struct timezone sys_tz;177,3861
utc2local(180,3907
local2utc(186,4024
date_dos2unix(194,4220
date_unix2dos(212,4694
smb_len(247,5750
smb_bcc(253,5845
smb_valid_packet(263,6067
smb_verify(277,6422
smb_get_xmitsize(309,7224
smb_get_rsize(325,7526
smb_get_wsize(340,7885
smb_errno(352,8201
smb_lock_server(465,10547
smb_unlock_server(471,10638
smb_retry(485,11065
smb_request_ok(556,12576
smb_newconn(615,13898
smb_setup_header(667,14999
smb_setup_bcc(706,15830
smb_proc_open(721,16204
smb_open(783,17754
smb_proc_close(844,19145
smb_proc_close_inode(861,19689
smb_close(908,20915
smb_close_dentry(932,21519
smb_close_fileid(967,22351
smb_proc_read(982,22736
smb_proc_write(1024,23822
smb_proc_create(1055,24666
smb_proc_mv(1087,25328
smb_proc_generic_command(1120,26003
smb_proc_mkdir(1148,26514
smb_proc_rmdir(1154,26613
smb_proc_unlink(1160,26712
smb_proc_trunc(1188,27249
smb_init_dirent(1218,27826
smb_finish_dirent(1229,28062
smb_init_root_dirent(1251,28551
smb_decode_dirent(1268,29041
smb_proc_readdir_short(1312,29939
smb_decode_long_dirent(1440,32962
smb_proc_readdir_long(1509,34553
smb_proc_readdir(1730,39966
smb_proc_getattr_ff(1749,40440
smb_proc_getattr_core(1833,42553
smb_proc_getattr_trans2(1873,43485
smb_proc_getattr(1951,45431
smb_proc_setattr_core(1996,46697
smb_proc_setattr(2040,47721
smb_proc_setattr_ext(2060,48264
smb_proc_setattr_trans2(2103,49351
smb_proc_settime(2169,51167
smb_proc_dskattr(2215,52314
smb_proc_disconnect(2244,52872

fs/smbfs/ioctl.c,18
smb_ioctl(21,322

fs/smbfs/cache.c,284
#define SMBFS_PARANOIA 20,399
get_cache_inode(24,491
smb_get_dircache(35,762
smb_free_cache_blocks(82,1842
smb_free_dircache(104,2258
smb_init_dircache(118,2585
smb_add_to_cache(132,2951
smb_find_in_cache(216,4997
smb_refill_dircache(254,5987
smb_invalid_dir_cache(305,7104

fs/smbfs/sock.c,501
#define SMBFS_PARANOIA 27,500
_recvfrom(31,573
_send(54,1046
smb_data_callback(86,1627
smb_valid_socket(132,2393
server_sock(139,2548
smb_catch_keepalive(155,2852
smb_dont_catch_keepalive(197,3726
smb_close_socket(249,4798
smb_send_raw(268,5213
smb_receive_raw(295,5677
smb_get_length(322,6150
smb_round_length(371,7049
smb_receive(381,7200
smb_receive_trans2(438,8625
smb_request(595,12615
#define ROUND_UP(ROUND_UP686,14660
smb_send_trans2(688,14706
smb_trans2_request(773,17099

fs/binfmt_aout.c,725
static struct linux_binfmt aout_format 38,879
static void set_brk(46,1094
#define DUMP_WRITE(DUMP_WRITE61,1472
#define DUMP_SEEK(DUMP_SEEK64,1596
do_aout_core_dump(81,2163
#       define START_DATA(START_DATA92,2461
#       define START_DATA(START_DATA94,2530
#       define START_DATA(START_DATA96,2622
#       define START_STACK(START_STACK99,2701
#       define START_STACK(START_STACK101,2784
aout_core_dump(216,5961
static unsigned long * create_aout_tables(231,6338
static inline int do_load_aout_binary(293,7832
load_aout_binary(468,13013
do_load_aout_library(479,13217
load_aout_library(554,15073
int __init init_aout_binfmt(565,15211
int init_module(571,15303
void cleanup_module(575,15358

fs/fat/fatfs_syms.c,133
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION7,109
extern struct file_operations fat_dir_operations;18,355
int init_fat_fs(58,1539

fs/fat/buffer.c,298
#  define PRINTK(PRINTK15,197
#  define PRINTK(PRINTK17,232
struct buffer_head *fat_bread 20,260
struct buffer_head *fat_getblk(96,2544
void fat_brelse 120,3278
void fat_mark_buffer_dirty 141,3714
void fat_set_uptodate 158,4061
int fat_is_uptodate 174,4390
void fat_ll_rw_block 188,4688

fs/fat/cache.c,451
#  define PRINTK(PRINTK17,266
#  define PRINTK(PRINTK19,301
static struct fat_cache *fat_cache,22,329
static struct fat_cache *fat_cache,cache[22,329
int fat_access(27,515
void fat_cache_init(125,3413
void fat_cache_lookup(141,3707
static void list_cache(167,4380
void fat_cache_add(182,4674
void fat_cache_inval_inode(227,5732
void fat_cache_inval_dev(238,5953
int fat_get_cluster(248,6125
int fat_smap(264,6498
int fat_free(289,7278

fs/fat/dir.c,370
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION14,365
#define PRINTK(PRINTK32,761
static ssize_t fat_dir_read(34,780
struct file_operations fat_dir_operations 40,897
uni16_to_x8(64,1761
static void dump_de(102,2446
int fat_readdirx(114,2645
static int fat_filldir(334,8111
int fat_readdir(348,8338
static int vfat_ioctl_fill(358,8544
int fat_dir_ioctl(410,9660

fs/fat/inode.c,623
#define __NO_VERSION__9,185
#define DEBUG_LEVEL 32,669
#  define PRINTK(PRINTK34,708
#  define PRINTK(PRINTK36,743
#  define PRINTK1(PRINTK139,793
#  define PRINTK1(PRINTK141,829
void fat_put_inode(44,858
void fat_delete_inode(61,1220
void fat_put_super(73,1423
static int parse_options(107,2285
fat_read_super(273,6492
#define ROUND_TO_MULTIPLE(ROUND_TO_MULTIPLE348,8559
int fat_statfs(522,14548
int fat_bmap(553,15383
static int is_exec(571,15903
void fat_read_inode(581,16096
void fat_write_inode(712,20649
int fat_notify_change(753,22034
int init_module(789,23023
void cleanup_module(795,23074

fs/fat/tables.c,68
unsigned char fat_uni2esc[14,264
unsigned char fat_esc2uni[25,629

fs/fat/file.c,781
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION9,145
#define MIN(MIN27,571
#define MAX(MAX28,614
#define PRINTK(PRINTK30,658
#define Printk(Printk31,676
static struct file_operations fat_file_operations 33,704
struct inode_operations fat_file_inode_operations 47,1103
static struct file_operations fat_file_operations_1024 74,1925
struct inode_operations fat_file_inode_operations_1024 97,2822
static struct file_operations fat_file_operations_readpage 118,3343
struct inode_operations fat_file_inode_operations_readpage 132,3751
#define MSDOS_PREFETCH	153,4277
struct fat_pre fat_pre154,4303
static void fat_prefetch 164,4635
static ssize_t fat_file_read_text(196,5486
ssize_t fat_file_read(311,8899
ssize_t fat_file_write(336,9643
void fat_truncate(452,12606

fs/fat/tables.h,252
struct unicode_value unicode_value1,0
extern unsigned char fat_a2alias[6,69
extern struct unicode_value fat_a2uni[7,149
extern unsigned char *fat_uni2asc_pg[8,230
extern unsigned char fat_uni2code[17,560
extern unsigned char fat_code2uni[18,597

fs/fat/misc.c,938
#  define PRINTK(PRINTK18,285
#  define PRINTK(PRINTK20,320
#define Printk(Printk22,347
static char ascii_extensions[26,448
void fat_fs_panic(41,952
int is_binary(58,1368
static struct wait_queue *creation_wait 82,1903
static int creation_lock 83,1951
void fat_lock_creation(86,1983
void fat_unlock_creation(93,2087
void lock_fat(100,2170
void unlock_fat(107,2310
void fat_clusters_flush(115,2542
int fat_add_cluster(147,3478
static int day_n[266,6803
extern struct timezone sys_tz;270,6937
int date_dos2unix(275,7048
void fat_date_unix2dos(293,7550
int fat_get_entry(324,8401
#define RSS_NAME 380,10290
#define RSS_START 384,10431
#define RSS_FREE 393,10720
#define RSS_COUNT 406,11042
static int raw_scan_sector(413,11205
static int raw_scan_root(466,12508
static int raw_scan_nonroot(484,13085
static int raw_scan(520,13976
int fat_parent_ino(537,14500
int fat_subdirs(583,15922
int fat_scan(606,16538

fs/fat/mmap.c,202
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION10,188
static unsigned long fat_file_mmap_nopage(30,632
struct vm_operations_struct fat_file_mmap 81,1764
int fat_mmap(98,2156
int fat_readpage(121,2794

fs/fat/msbuffer.h,28
#define FAT_READAHEAD 2,50

fs/fat/cvf.c,245
#define MAX_CVF_FORMATS 22,466
struct cvf_format *cvf_formats[24,493
int cvf_format_use_count[25,559
int register_cvf_format(27,611
int unregister_cvf_format(54,1395
void dec_cvf_format_use_count_by_version(79,2104
int detect_cvf(99,2611

fs/vfat/namei.c,2204
#define __NO_VERSION__13,402
#define DEBUG_LEVEL 29,733
#  define PRINTK1(PRINTK131,778
#  define PRINTK1(PRINTK133,814
#  define PRINTK2(PRINTK236,865
#  define PRINTK2(PRINTK238,901
#  define PRINTK3(PRINTK341,952
#  define PRINTK3(PRINTK343,988
# define CHECK_STACK47,1031
# define CHECK_STACK 49,1058
struct vfat_find_info vfat_find_info52,1119
static struct dentry_operations vfat_dentry_ops[76,1877
void vfat_put_super(103,2260
static int vfat_revalidate(109,2349
static struct super_operations vfat_sops 118,2551
static int simple_getbool(130,2768
static int parse_options(146,3067
static int vfat_hash(201,4442
static int vfat_hashi(222,4929
static int vfat_cmpi(247,5358
static int vfat_cmp(268,5802
struct super_block *vfat_read_super(286,6192
check_stack(323,6927
static int debug 348,7627
static void dump_fat(349,7649
static void dump_de(364,7893
static const char *reserved3_names[380,8131
static const char *reserved4_names[384,8230
static char bad_chars[394,8564
static char replace_chars[395,8605
static int vfat_valid_longname(405,8922
static int vfat_valid_shortname(446,9878
static int vfat_find_form(498,11014
static int vfat_format_name(516,11385
static char skip_chars[563,12624
static int vfat_create_shortname(568,12766
static loff_t vfat_find_free_slots(735,16637
xlate_to_uni(791,17922
vfat_fill_long_slots(859,19364
static int vfat_build_slots(931,21091
static int vfat_readdir_cb(977,22368
static int vfat_find(1021,23248
int vfat_lookup(1143,26362
static int vfat_create_entry(1181,27238
int vfat_create(1225,28218
static int vfat_create_a_dotdir(1243,28626
static int vfat_create_dotdirs(1292,29937
static int vfat_empty(1331,30920
static void vfat_free_ino(1358,31516
static int vfat_remove_entry(1373,31970
static void drop_aliases(1401,32688
static int vfat_rmdirx(1422,33154
int vfat_rmdir(1453,33848
static int vfat_unlinkx(1466,34151
int vfat_mkdir(1491,34653
int vfat_unlink(1532,35630
int vfat_unlink_uvfat(1546,35931
int vfat_rename(1555,36072
struct inode_operations vfat_dir_inode_operations 1750,41666
void vfat_read_inode(1771,42176
int init_module(1777,42289
void cleanup_module(1782,42340

fs/vfat/vfatfs_syms.c,121
#define ASC_LINUX_VERSION(ASC_LINUX_VERSION8,132
struct file_system_type vfat_fs_type 15,308
int init_vfat_fs(33,700

fs/ncpfs/dir.c,1583
struct ncp_dirent ncp_dirent27,574
static kdev_t c_dev 33,699
static unsigned long c_ino 34,724
static int c_size;35,756
static int c_seen_eof;36,775
static int c_last_returned_index;37,798
static struct ncp_dirent *c_entry 38,832
static int c_lock 39,874
static struct wait_queue *c_wait 40,897
static struct file_operations ncp_dir_operations 58,1648
struct inode_operations ncp_dir_inode_operations 73,2016
ncp_dir_read(98,2608
struct dentry_operations ncp_dentry_operations 111,2975
#define tolower(tolower124,3331
ncp_hash_dentry(131,3494
ncp_compare_dentry(146,3809
ncp_delete_dentry(167,4275
ino_t ncp_invent_inos(205,5274
ncp_single_volume(219,5443
static inline int ncp_is_server_root(224,5537
static inline void ncp_lock_dircache(230,5692
static inline void ncp_unlock_dircache(237,5790
ncp_force_unlink(253,6030
ncp_force_rename(295,7213
ncp_lookup_validate(357,9332
static int ncp_readdir(443,11496
ncp_read_volume_list(588,15074
static int ncp_do_readdir(633,16133
void ncp_init_dir_cache(694,17705
void ncp_invalid_dir_cache(701,17781
void ncp_free_dir_cache(710,17934
int ncp_conn_logged_in(723,18145
static int ncp_lookup(760,19085
static int ncp_instantiate(881,21683
static int ncp_create(907,22265
static int ncp_mkdir(949,23402
static int ncp_rmdir(983,24251
static int ncp_unlink(1024,25085
static int ncp_rename(1072,26213
static int day_n[1146,28590
extern struct timezone sys_tz;1151,28736
static int utc2local(1153,28768
static int local2utc(1159,28885
ncp_date_dos2unix(1167,29083
ncp_date_unix2dos(1183,29554

fs/ncpfs/file.c,253
static inline int min(24,455
static int ncp_fsync(29,519
int ncp_make_open(37,656
ncp_file_read(96,2076
ncp_file_write(173,3854
static struct file_operations ncp_file_operations 245,5601
struct inode_operations ncp_file_inode_operations 260,5944

fs/ncpfs/inode.c,810
static struct super_operations ncp_sops 38,925
extern struct dentry_operations ncp_dentry_operations;51,1297
static struct nw_file_info *read_nwinfo 53,1353
static struct semaphore read_sem 54,1401
void ncp_update_inode(59,1507
void ncp_update_inode2(76,2178
static void ncp_set_attr(104,3029
static void ncp_read_inode(147,4359
ncp_iget(169,4817
static void ncp_put_inode(188,5187
ncp_delete_inode(195,5299
static void ncp_init_root(209,5676
ncp_read_super(241,6693
static void ncp_put_super(411,11437
static int ncp_statfs(433,11991
int ncp_notify_change(454,12595
int ncp_malloced;572,15883
int ncp_current_malloced;573,15901
static struct file_system_type ncp_fs_type 576,15935
__initfunc(583,16072
EXPORT_NO_SYMBOLS;589,16168
int init_module(591,16188
void cleanup_module(607,16433

fs/ncpfs/ioctl.c,103
#define NCP_OBJECT_NAME_MAX_LEN	23,447
#define NCP_PRIVATE_DATA_MAX_LEN 25,530
int ncp_ioctl(27,569

fs/ncpfs/mmap.c,155
static inline int min(25,502
static unsigned long ncp_file_mmap_nopage(33,611
struct vm_operations_struct ncp_file_mmap 106,2101
int ncp_mmap(122,2434

fs/ncpfs/sock.c,305
static int _recv(38,793
static int _send(58,1196
#define NCP_SLACK_SPACE 84,1675
static int do_ncp_rpc_call(86,1705
static int ncp_do_request(302,8082
int ncp_request(335,8858
int ncp_connect(381,10166
int ncp_disconnect(406,10687
void ncp_lock_server(423,11110
void ncp_unlock_server(436,11361

fs/ncpfs/ncplib_kernel.c,1414
static inline int min(15,281
static void assert_server_locked(20,345
static void ncp_add_byte(27,492
static void ncp_add_word(35,683
static void ncp_add_dword(43,889
static void ncp_add_mem(51,1096
static void ncp_add_mem_fromfs(59,1317
static void ncp_add_pstring(67,1553
static void ncp_init_request(80,1839
static void ncp_init_request_s(88,2016
 ncp_reply_data(99,2254
 ncp_reply_byte(105,2395
 ncp_reply_word(111,2532
 ncp_reply_dword(117,2670
ncp_negotiate_buffersize(123,2800
ncp_negotiate_size_and_options(146,3219
ncp_get_volume_info_with_number(174,3836
ncp_close_file(210,4854
ncp_make_closed(227,5152
static void ncp_add_handle_path(240,5495
static void ncp_extract_file_info(258,5957
int ncp_obtain_info(275,6445
ncp_obtain_DOS_dir_base(305,7299
ncp_get_known_namespace(330,7996
ncp_ObtainSpecificDirBase(378,9244
ncp_mount_subdir(408,9984
ncp_lookup_volume(433,10609
int ncp_modify_file_or_subdir_dos_info(474,11887
ncp_DeleteNSEntry(498,12595
ncp_del_file_or_subdir2(517,13090
ncp_del_file_or_subdir(536,13562
static inline void ConvertToNWfromDWORD(556,14177
int ncp_open_create_file_or_subdir(566,14491
ncp_initialize_search(617,15942
int ncp_search_for_file_or_subdir(641,16571
ncp_RenameNSEntry(676,17571
int ncp_ren_or_mov_file_or_subdir(715,18735
ncp_read(742,19652
ncp_write(769,20275
ncp_LogPhysicalRecord(793,20831
ncp_ClearPhysicalRecord(815,21336

fs/ncpfs/ncplib_kernel.h,25
#define _NCPLIB_H11,243

fs/ncpfs/ncpsign_kernel.c,388
#define rol32(rol3216,219
#define GET_LE32(GET_LE3220,398
#define PUT_LE32(PUT_LE3221,432
#define BVAL(BVAL24,507
#define PVAL(PVAL25,552
#define BSET(BSET26,600
WVAL_LH(29,671
DVAL_LH(34,774
WSET_LH(39,883
DSET_LH(45,1006
#define GET_LE32(GET_LE3251,1120
#define PUT_LE32(PUT_LE3252,1153
#define min(min55,1198
static void nwsign(57,1234
void sign_packet(98,2852

fs/ncpfs/ncpsign_kernel.h,32
#define _NCPSIGN_KERNEL_H9,105

fs/binfmt_script.c,206
static int do_load_script(15,282
static int load_script(93,2272
struct linux_binfmt script_format 102,2454
int __init init_script_binfmt(110,2605
int init_module(116,2701
void cleanup_module(121,2758

fs/noquot.c,80
int nr_dquots 9,180
int max_dquots 10,219
asmlinkage int sys_quotactl(12,240

fs/binfmt_java.c,456
#define _PATH_JAVA	18,365
#define _PATH_APPLET	19,400
char binfmt_java_interpreter[23,498
char binfmt_java_appletviewer[24,545
static int do_load_java(26,596
static int do_load_applet(96,2426
static int load_java(143,3510
static struct linux_binfmt java_format 152,3688
static int load_applet(160,3840
static struct linux_binfmt applet_format 169,4022
int __init init_java_binfmt(177,4180
int init_module(184,4306
void cleanup_module(189,4361

fs/ufs/util.c,496
#define UFSD(UFSD18,292
#define UFSD(UFSD20,384
struct ufs_buffer_head * _ubh_bread_ 24,409
struct ufs_buffer_head * ubh_bread_uspi 52,1113
void ubh_brelse 75,1716
void ubh_brelse_uspi 85,1873
void ubh_mark_buffer_dirty 96,2074
void ubh_mark_buffer_uptodate 105,2257
void ubh_ll_rw_block 114,2446
void ubh_wait_on_buffer 123,2635
unsigned ubh_max_bcount 132,2796
void ubh_bforget 144,3026
int ubh_buffer_dirty 153,3194
void _ubh_ubhcpymem_(164,3399
void _ubh_memcpyubh_(180,3794

fs/ufs/util.h,2914
#define in_range(in_range16,227
#define howmany(howmany17,291
#define min(min18,331
#define max(max19,367
#define UCPI_UBH 26,441
#define USPI_UBH 27,491
#define ufs_get_fs_state(ufs_get_fs_state34,590
static inline __s32 _ufs_get_fs_state_(35,657
#define ufs_set_fs_state(ufs_set_fs_state44,912
static inline void _ufs_set_fs_state_(45,991
#define ufs_get_fs_qbmask(ufs_get_fs_qbmask54,1260
static inline __u64 _ufs_get_fs_qbmask_(55,1329
#define ufs_get_fs_qfmask(ufs_get_fs_qfmask70,1744
static inline __u64 _ufs_get_fs_qfmask_(71,1813
#define ufs_get_de_namlen(ufs_get_de_namlen86,2228
#define ufs_set_de_namlen(ufs_set_de_namlen91,2359
#define ufs_set_de_type(ufs_set_de_type96,2516
static inline void _ufs_set_de_type_(97,2587
#define ufs_get_inode_uid(ufs_get_inode_uid114,3206
static inline __u32 _ufs_get_inode_uid_(115,3277
#define ufs_set_inode_uid(ufs_set_inode_uid128,3607
static inline void _ufs_set_inode_uid_(129,3690
#define ufs_get_inode_gid(ufs_get_inode_gid143,4043
static inline __u32 _ufs_get_inode_gid_(144,4114
#define ufs_set_inode_gid(ufs_set_inode_gid157,4445
static inline void _ufs_set_inode_gid_(158,4528
#define ubh_bread(ubh_bread177,4933
#define ubh_ubhcpymem(ubh_ubhcpymem189,5764
#define ubh_memcpyubh(ubh_memcpyubh191,5947
#define ubh_get_usb_first(ubh_get_usb_first199,6199
#define ubh_get_usb_second(ubh_get_usb_second202,6291
#define ubh_get_usb_third(ubh_get_usb_third206,6456
#define ubh_get_ucg(ubh_get_ucg210,6625
#define ubh_get_addr8(ubh_get_addr8218,6819
#define ubh_get_addr16(ubh_get_addr16222,6940
#define ubh_get_addr32(ubh_get_addr32226,7078
#define ubh_get_addr 230,7219
#define ubh_blkmap(ubh_blkmap232,7255
#define ubh_postbl(ubh_postbl239,7455
#define ubh_rotbl(ubh_rotbl247,7770
#define ufs_freespace(ufs_freespace257,8097
#define ubh_cg_blktot(ubh_cg_blktot264,8344
#define ubh_cg_blks(ubh_cg_blks267,8454
#define ubh_setbit(ubh_setbit279,8916
#define ubh_clrbit(ubh_clrbit282,9021
#define ubh_isset(ubh_isset285,9128
#define ubh_isclr(ubh_isclr288,9232
#define ubh_find_first_zero_bit(ubh_find_first_zero_bit290,9294
#define ubh_find_next_zero_bit(ubh_find_next_zero_bit292,9391
static inline unsigned _ubh_find_next_zero_bit_(293,9498
static inline unsigned find_last_zero_bit 316,10080
#define ubh_find_last_zero_bit(ubh_find_last_zero_bit339,10486
static inline unsigned _ubh_find_last_zero_bit_(340,10593
#define ubh_isblockclear(ubh_isblockclear365,11235
#define ubh_isblockset(ubh_isblockset367,11320
static inline int _ubh_isblockset_(368,11399
#define ubh_clrblock(ubh_clrblock384,11931
static inline void _ubh_clrblock_(385,12006
#define ubh_setblock(ubh_setblock404,12538
static inline void _ubh_setblock_(405,12613
static inline void ufs_fragacct 424,13137
#define ubh_scanc(ubh_scanc448,13672
static inline unsigned _ubh_scanc_(449,13761

fs/ufs/acl.c,27
int ufs_permission 33,613

fs/ufs/truncate.c,303
#define UFSD(UFSD47,992
#define UFSD(UFSD49,1084
#define DIRECT_BLOCK 62,1444
#define DIRECT_FRAGMENT 63,1504
static int ufs_trunc_direct 65,1568
static int ufs_trunc_indirect 197,4675
static int ufs_trunc_dindirect 295,6870
static int ufs_trunc_tindirect 364,8386
void ufs_truncate 428,9966

fs/ufs/balloc.c,639
#define UFSD(UFSD25,471
#define UFSD(UFSD27,562
static unsigned char ufs_fragtable_8fpb[34,945
static unsigned char ufs_fragtable_8fpb[], ufs_fragtable_other[34,945
void ufs_free_fragments 40,1166
void ufs_free_blocks 134,3987
#define NULLIFY_FRAGMENTS 225,6348
unsigned ufs_new_fragments 238,6699
unsigned ufs_add_fragments 390,10501
#define UFS_TEST_FREE_SPACE_CG 466,12720
unsigned ufs_alloc_fragments 474,12977
unsigned ufs_alloccg_block 590,15936
unsigned ufs_bitmap_search 649,17438
void ufs_clusteracct(722,19498
static unsigned char ufs_fragtable_8fpb[780,20954
static unsigned char ufs_fragtable_other[799,22557

fs/ufs/dir.c,224
#define UFSD(UFSD25,616
#define UFSD(UFSD27,708
ufs_readdir 34,790
int ufs_check_dir_entry 154,4364
static struct file_operations ufs_dir_operations 189,5595
struct inode_operations ufs_dir_inode_operations 206,5978

fs/ufs/inode.c,599
#define UFSD(UFSD47,1008
#define UFSD(UFSD49,1100
static void ufs_print_inode(53,1152
#define ufs_inode_bmap(ufs_inode_bmap82,2321
static inline unsigned ufs_block_bmap 85,2451
int ufs_bmap 99,2800
static struct buffer_head * ufs_inode_getfrag 176,5058
static struct buffer_head * ufs_block_getfrag 281,7977
struct buffer_head * ufs_getfrag 355,9814
struct buffer_head * ufs_bread 430,11975
void ufs_read_inode 448,12400
static int ufs_update_inode(554,15811
void ufs_write_inode 637,18424
int ufs_sync_inode 642,18503
void ufs_put_inode 647,18586
void ufs_delete_inode 652,18659

fs/ufs/namei.c,718
#define UFSD(UFSD45,907
#define UFSD(UFSD47,999
#define NAMEI_RA_CHUNKS 53,1096
#define NAMEI_RA_BLOCKS 54,1123
#define NAMEI_RA_SIZE 55,1150
#define NAMEI_RA_INDEX(NAMEI_RA_INDEX56,1215
static inline int ufs_match 63,1425
static struct buffer_head * ufs_find_entry 81,1971
int ufs_lookup(188,4680
static struct buffer_head * ufs_add_entry 228,5624
static int ufs_delete_entry 361,9137
int ufs_create 414,10453
int ufs_mknod 460,11456
int ufs_mkdir(519,12834
static int ufs_empty_dir 602,14964
int ufs_rmdir 660,16676
int ufs_unlink(726,18024
int ufs_symlink 790,19483
int ufs_link 867,21083
#define PARENT_INO(PARENT_INO911,21996
static int do_ufs_rename 925,22645
int ufs_rename 1071,26557

fs/ufs/super.c,746
#define UFSD(UFSD88,2018
#define UFSD(UFSD90,2110
void ufs_print_super_stuff(97,2228
void ufs_print_cylinder_stuff(142,4518
static char error_buf[176,6279
void ufs_error 178,6309
void ufs_panic 210,7171
void ufs_warning 236,7845
static int ufs_parse_options 248,8136
int ufs_read_cylinder_structures 310,9860
void ufs_put_cylinder_structures 393,12285
struct super_block * ufs_read_super 430,13295
void ufs_write_super 764,22911
void ufs_put_super 787,23569
int ufs_remount 808,23925
int ufs_statfs 866,25632
static struct super_operations ufs_super_ops 890,26434
static struct file_system_type ufs_fs_type 902,26648
__initfunc(909,26749
EXPORT_NO_SYMBOLS;915,26845
int init_module(917,26865
void cleanup_module(922,26915

fs/ufs/swab.h,1266
#define _UFS_SWAB_H9,177
#define SWAB16(SWAB1649,1954
#define SWAB32(SWAB3250,1991
#define SWAB64(SWAB6451,2028
#define INC_SWAB16(INC_SWAB1657,2219
#define INC_SWAB32(INC_SWAB3258,2272
#define INC_SWAB64(INC_SWAB6459,2325
#define DEC_SWAB16(DEC_SWAB1660,2378
#define DEC_SWAB32(DEC_SWAB3261,2432
#define DEC_SWAB64(DEC_SWAB6462,2486
#define ADD_SWAB16(ADD_SWAB1663,2540
#define ADD_SWAB32(ADD_SWAB3264,2595
#define ADD_SWAB64(ADD_SWAB6465,2650
#define SUB_SWAB16(SUB_SWAB1666,2705
#define SUB_SWAB32(SUB_SWAB3267,2763
#define SUB_SWAB64(SUB_SWAB6468,2821
extern __inline__ __const__ __u16 ufs_swab16(71,2953
extern __inline__ __const__ __u32 ufs_swab32(77,3075
extern __inline__ __const__ __u64 ufs_swab64(83,3197
extern __inline__ __const__ __u16 ufs_swab16_add(89,3319
extern __inline__ __const__ __u32 ufs_swab32_add(95,3468
extern __inline__ __const__ __u64 ufs_swab64_add(101,3617
extern __inline__ __const__ __u16 ufs_swab16(108,3837
extern __inline__ __const__ __u32 ufs_swab32(114,3998
extern __inline__ __const__ __u64 ufs_swab64(120,4159
extern __inline__ __const__ __u16 ufs_swab16_add(126,4320
extern __inline__ __const__ __u32 ufs_swab32_add(129,4457
extern __inline__ __const__ __u64 ufs_swab64_add(132,4594

fs/ufs/symlink.c,195
#define UFSD(UFSD39,716
#define UFSD(UFSD41,807
static struct dentry * ufs_follow_link(45,832
static int ufs_readlink 77,1444
struct inode_operations ufs_symlink_inode_operations 119,2227

fs/ufs/cylinder.c,178
#define UFSD(UFSD27,502
#define UFSD(UFSD29,593
static void ufs_read_cylinder 37,758
void ufs_put_cylinder 92,2696
struct ufs_cg_private_info * ufs_load_cylinder 137,3908

fs/ufs/ialloc.c,120
#define UFSD(UFSD39,898
#define UFSD(UFSD41,990
void ufs_free_inode 60,1691
struct inode * ufs_new_inode 156,4220

fs/ufs/file.c,347
#define	NBUF	39,771
#define MIN(MIN41,788
#define MAX(MAX42,825
static struct file_operations ufs_file_operations 52,1161
struct inode_operations ufs_file_inode_operations 69,1619
static long long ufs_file_lseek(93,2200
static inline void remove_suid(121,2727
static ssize_t ufs_file_write 136,3070
static int ufs_release_file 276,6229

fs/affs/amigaffs.c,458
#define DEBUG 11,184
extern struct timezone sys_tz;21,398
static char ErrorBuffer[23,430
affs_get_file_name(33,661
affs_insert_hash(54,1260
affs_remove_hash(94,2432
affs_remove_link(149,4034
affs_remove_header(203,5531
affs_checksum_block(292,8462
affs_fix_checksum(316,8870
secs_to_datestamp(328,9102
prot_to_mode(347,9500
mode_to_prot(374,9982
affs_error(397,10377
affs_warning(414,10851
affs_check_name(429,11187
affs_copy_name(457,11700

fs/affs/bitmap.c,263
#define DEBUG 10,210
static int nibblemap[23,493
affs_count_free_bits(26,560
affs_count_free_blocks(40,786
affs_free_block(57,1074
affs_balloc(116,2703
affs_find_new_zone(189,4444
affs_new_header(280,6587
affs_new_data(311,7234
affs_make_zones(389,8954

fs/affs/dir.c,184
#define DEBUG 16,307
static struct file_operations affs_dir_operations 30,680
struct inode_operations affs_dir_inode_operations 47,1116
affs_dir_read(71,1726
affs_readdir(77,1831

fs/affs/file.c,648
#define DEBUG 15,309
#define MIN(MIN32,703
#define MAX(MAX33,740
static struct file_operations affs_file_operations 46,1311
struct inode_operations affs_file_inode_operations 64,1802
static struct file_operations affs_file_operations_ofs 87,2372
struct inode_operations affs_file_inode_operations_ofs 105,2861
#define AFFS_ISINDEX(AFFS_ISINDEX128,3425
seqnum_to_index(143,3927
index_to_seqnum(193,5189
calc_key(217,5775
affs_bmap(243,6360
affs_getblock(362,9594
affs_file_read_ofs(531,14445
affs_file_write(580,15630
affs_file_write_ofs(659,17399
affs_free_prealloc(744,19373
affs_truncate(768,19982
alloc_ext_cache(909,24334

fs/affs/inode.c,321
#define DEBUG 13,264
extern int *blk_size[32,706
extern struct timezone sys_tz;33,730
#define MIN(MIN35,762
affs_parent_ino(38,814
affs_read_inode(52,1123
affs_write_inode(182,5265
affs_notify_change(225,6675
affs_put_inode(256,7488
affs_delete_inode(273,7867
affs_new_inode(284,8174
affs_add_entry(337,9351

fs/affs/namei.c,447
#define DEBUG 11,199
affs_toupper(27,527
affs_intl_toupper(35,698
struct dentry_operations affs_dentry_operations 44,991
affs_hash_dentry(55,1235
affs_compare_dentry(76,1767
affs_match(116,2662
affs_hash_name(141,3195
affs_find_entry(159,3548
affs_lookup(205,4608
affs_unlink(229,5152
affs_create(262,5842
affs_mkdir(301,6703
empty_dir(335,7486
affs_rmdir(345,7658
affs_symlink(386,8568
affs_link(469,10489
affs_rename(521,11841

fs/affs/symlink.c,136
#define MIN(MIN20,377
struct inode_operations affs_symlink_inode_operations 25,578
affs_readlink(47,1086
affs_follow_link(101,2310

fs/affs/super.c,465
#define DEBUG 13,265
extern int *blk_size[33,733
extern struct timezone sys_tz;34,757
#define MIN(MIN36,789
affs_put_super(42,994
affs_write_super(73,1820
static struct super_operations affs_sops 100,2623
parse_options(113,2842
affs_read_super(241,6360
affs_remount(626,17749
affs_statfs(665,18807
static struct file_system_type affs_fs_type 684,19364
__initfunc(691,19467
EXPORT_NO_SYMBOLS;697,19565
init_module(700,19589
cleanup_module(706,19661

fs/romfs/inode.c,1042
static int inline min(63,1794
romfs_checksum(69,1869
static struct super_operations romfs_ops;82,2031
romfs_read_super(85,2102
romfs_put_super(159,3598
romfs_statfs(168,3709
romfs_strnlen(183,4079
romfs_copyfrom(225,5006
romfs_readdir(261,5836
romfs_lookup(316,7067
romfs_readpage(391,8940
romfs_readlink(430,9897
static struct dentry *romfs_follow_link(453,10343
static struct file_operations romfs_file_operations 488,10993
static struct inode_operations romfs_file_inode_operations 505,11420
static struct file_operations romfs_dir_operations 526,11919
static struct inode_operations romfs_dir_inode_operations 547,12441
static struct inode_operations romfs_link_inode_operations 568,12922
static mode_t romfs_modemap[589,13439
static struct inode_operations *romfs_inoops[595,13550
romfs_read_inode(608,13875
static struct super_operations romfs_ops 668,15229
static struct file_system_type romfs_fs_type 680,15535
__initfunc(687,15641
EXPORT_NO_SYMBOLS;696,15783
init_module(699,15807
cleanup_module(705,15860

fs/autofs/autofs_i.h,1052
#define AUTOFS_IOC_FIRST 18,600
#define AUTOFS_IOC_COUNT 19,646
#define DPRINTK(DPRINTK29,845
#define DPRINTK(DPRINTK31,881
#define AUTOFS_SUPER_MAGIC 34,918
#define AUTOFS_NEGATIVE_TIMEOUT 42,1246
#define AUTOFS_HASH_SIZE 46,1366
struct autofs_dir_ent autofs_dir_ent48,1395
struct autofs_dirhash autofs_dirhash63,1734
struct autofs_wait_queue autofs_wait_queue68,1843
struct autofs_symlink autofs_symlink81,2135
#define AUTOFS_MAX_SYMLINKS 87,2201
#define AUTOFS_ROOT_INO 89,2234
#define AUTOFS_FIRST_SYMLINK 90,2265
#define AUTOFS_FIRST_DIR_INO 91,2296
#define AUTOFS_SYMLINK_BITMAP_LEN 93,2369
#define AUTOFS_SBI_MAGIC 95,2434
struct autofs_sb_info autofs_sb_info97,2471
extern inline struct autofs_sb_info *autofs_sbi(110,2831
static inline int autofs_oz_mode(119,3133
extern struct inode_operations autofs_root_inode_operations;140,3975
extern struct inode_operations autofs_symlink_inode_operations;141,4036
extern struct inode_operations autofs_dir_inode_operations;142,4100
#define autofs_say(autofs_say157,4538

fs/autofs/dir.c,198
static int autofs_dir_readdir(15,492
static int autofs_dir_lookup(41,1066
static struct file_operations autofs_dir_operations 47,1176
struct inode_operations autofs_dir_inode_operations 65,1581

fs/autofs/init.c,149
static struct file_system_type autofs_fs_type 17,543
int init_module(25,652
void cleanup_module(30,725
__initfunc(37,817
void autofs_say(45,940

fs/autofs/dirhash.c,431
static void autofs_init_usage(17,545
static void autofs_delete_usage(27,826
void autofs_update_usage(33,975
struct autofs_dir_ent *autofs_expire(40,1184
void autofs_initialize_hash(96,2827
struct autofs_dir_ent *autofs_hash_lookup(102,3032
void autofs_hash_insert(119,3500
void autofs_hash_delete(138,3956
struct autofs_dir_ent *autofs_hash_enum(160,4502
void autofs_hash_dputall(209,5550
void autofs_hash_nuke(226,5943

fs/autofs/inode.c,394
#define __NO_VERSION__19,618
static void autofs_put_inode(26,746
static void autofs_delete_inode(30,801
static void autofs_put_super(35,879
static struct super_operations autofs_sops 62,1550
static int parse_options(74,1780
struct super_block *autofs_read_super(137,3222
static int autofs_statfs(280,6366
static void autofs_read_inode(295,6702
static void autofs_write_inode(342,8095

fs/autofs/root.c,700
static struct file_operations autofs_root_operations 26,1051
struct inode_operations autofs_root_inode_operations 44,1654
static int autofs_root_readdir(67,2557
static int try_to_fill_dentry(108,3469
static int autofs_revalidate(171,5399
static struct dentry_operations autofs_dentry_operations 206,6303
static int autofs_root_lookup(212,6454
static int autofs_root_symlink(271,8119
static int autofs_root_unlink(345,10084
static int autofs_root_rmdir(375,10913
static int autofs_root_mkdir(403,11593
static inline int autofs_get_set_timeout(449,12681
static inline int autofs_get_protover(468,13054
static inline int autofs_expire_run(474,13182
static int autofs_root_ioctl(504,13888

fs/autofs/waitq.c,251
static autofs_wqt_t autofs_next_wait_queue 21,746
#define SHUTDOWN_SIGS	24,861
void autofs_catatonic_mode(26,940
static int autofs_write(47,1457
static void autofs_notify_daemon(82,2356
int autofs_wait(102,2981
int autofs_wait_release(189,5133

fs/autofs/symlink.c,150
static int autofs_readlink(17,547
static struct dentry * autofs_follow_link(29,829
struct inode_operations autofs_symlink_inode_operations 39,1089

fs/binfmt_em86.c,254
#define EM86_INTERP	20,394
#define EM86_I_NAME	21,430
static int do_load_em86(23,458
static int load_em86(96,2620
struct linux_binfmt em86_format 105,2798
int __init init_em86_binfmt(113,2943
int init_module(119,3035
void cleanup_module(124,3090

fs/attr.c,83
int inode_change_ok(15,290
void inode_setattr(57,1385
int notify_change(81,2035

fs/lockd/clntlock.c,238
#define __KERNEL_SYSCALLS__9,153
#define NLMDBG_FACILITY	20,405
struct nlm_wait nlm_wait35,675
static struct nlm_wait *	nlm_blocked 44,973
nlmclnt_block(50,1049
nlmclnt_grant(102,2306
nlmclnt_recovery(139,3109
reclaimer(161,3594

fs/lockd/clntproc.c,556
#define NLMDBG_FACILITY	19,406
static u32	nlm_cookie 31,835
static inline void nlmclnt_next_cookie(33,868
nlmclnt_setlockargs(45,1104
nlmclnt_setgrantargs(66,1696
nlmclnt_freegrantargs(87,2213
nlmclnt_proc(101,2485
nlmclnt_grace_wait(184,4807
nlmclnt_alloc_call(197,5092
nlmclnt_call(217,5463
nlmclnt_async_call(292,7277
nlmclnt_test(321,8095
nlmclnt_lock(366,9419
nlmclnt_reclaim(400,10151
nlmclnt_unlock(440,11031
nlmclnt_unlock_callback(475,11930
nlmclnt_cancel(504,12605
nlmclnt_cancel_callback(541,13497
nlm_stat_to_errno(587,14471

fs/lockd/host.c,710
#define NLMDBG_FACILITY	20,447
#define NLM_HOST_MAX	21,489
#define NLM_HOST_NRHASH	22,514
#define NLM_ADDRHASH(NLM_ADDRHASH23,542
#define NLM_PTRHASH(NLM_PTRHASH24,605
#define NLM_HOST_REBIND	25,688
#define NLM_HOST_EXPIRE	26,723
#define NLM_HOST_COLLECT	27,796
#define NLM_HOST_ADDR(NLM_HOST_ADDR28,869
static struct nlm_host *	nlm_hosts[30,930
static unsigned long		next_gc 31,983
static int			nrhosts 32,1018
static struct semaphore		nlm_host_sema 33,1044
nlmclnt_lookup_host(42,1226
nlmsvc_lookup_host(51,1449
nlm_match_host(60,1635
nlm_lookup_host(72,1897
nlm_bind_host(162,4113
nlm_rebind_host(222,5681
nlm_release_host(235,5973
nlm_shutdown_hosts(246,6200
nlm_gc_hosts(285,7214

fs/lockd/svcsubs.c,486
#define NLMDBG_FACILITY	20,435
#define FILE_NRHASH	26,510
#define FILE_HASH_BITS	27,534
static struct nlm_file *	nlm_files[28,560
static struct semaphore		nlm_file_sema 29,609
static unsigned int file_hash(31,658
nlm_lookup_file(48,1186
nlm_delete_file(115,2848
nlm_traverse_locks(141,3440
nlm_inspect_file(185,4395
nlm_traverse_files(203,4866
nlm_release_file(244,5924
nlmsvc_mark_resources(265,6335
nlmsvc_free_host_resources(276,6516
nlmsvc_invalidate_client(290,6821

fs/lockd/svc.c,1063
#define __KERNEL_SYSCALLS__15,357
#define NLMDBG_FACILITY	37,878
#define LOCKD_BUFSIZE	38,914
#define ALLOWED_SIGS	39,962
extern struct svc_program	nlmsvc_program;41,1004
struct nlmsvc_binding *		nlmsvc_ops 42,1046
static struct semaphore 	nlmsvc_sema 43,1090
static unsigned int		nlmsvc_users 44,1136
static pid_t			nlmsvc_pid 45,1175
unsigned long			nlmsvc_grace_period 46,1206
unsigned long			nlmsvc_timeout 47,1247
static struct semaphore lockd_start 49,1284
static struct wait_queue *	lockd_exit 50,1336
unsigned long			nlm_grace_period 56,1516
unsigned long			nlm_timeout 57,1554
lockd(63,1657
lockd_up(204,4969
lockd_down(272,6432
  EXPORT_NO_SYMBOLS;312,7346
init_module(319,7587
cleanup_module(331,7753
static struct svc_version	nlmsvc_version1 341,7890
static struct svc_version	nlmsvc_version3 344,7971
static struct svc_version	nlmsvc_version4 348,8076
static struct svc_version *	nlmsvc_version[352,8165
static struct svc_stat		nlmsvc_stats;362,8320
#define NLM_NRVERS	364,8359
struct svc_program		nlmsvc_program 365,8429

fs/lockd/lockd_syms.c,30
#define __NO_VERSION__11,185

fs/lockd/mon.c,655
#define NLMDBG_FACILITY	18,326
extern struct rpc_program	nsm_program;22,411
u32				nsm_local_state 27,477
nsm_mon_unmon(33,570
nsm_monitor(74,1351
nsm_unmonitor(88,1558
nsm_create(101,1793
xdr_error(135,2377
xdr_encode_mon(141,2465
xdr_decode_stat_res(178,3491
xdr_decode_stat(188,3738
#define SM_my_name_sz	194,3853
#define SM_my_id_sz	195,3905
#define SM_mon_id_sz	196,3945
#define SM_mon_sz	197,3998
static struct rpc_procinfo	nsm_procedures[199,4034
static struct rpc_version	nsm_version1 223,4711
static struct rpc_version *	nsm_version[229,4830
static struct rpc_stat		nsm_stats;234,4903
struct rpc_program		nsm_program 236,4939

fs/lockd/svclock.c,599
#define NLMDBG_FACILITY	32,1200
static struct nlm_block *	nlm_blocked 42,1530
nlmsvc_insert_block(48,1642
nlmsvc_remove_block(69,2081
nlmsvc_lookup_block(91,2459
static inline int nlm_cookie_match(114,3135
nlmsvc_find_block(127,3393
nlmsvc_create_block(150,4080
nlmsvc_delete_block(206,5547
nlmsvc_traverse_blocks(255,6751
nlmsvc_lock(278,7286
nlmsvc_testlock(350,9129
nlmsvc_unlock(382,10068
nlmsvc_cancel_blocked(410,10798
nlmsvc_notify_blocked(436,11569
nlmsvc_grant_blocked(465,12469
nlmsvc_grant_callback(534,14557
nlmsvc_grant_reply(572,15621
nlmsvc_retry_blocked(610,16587

fs/lockd/svcproc.c,1250
#define NLMDBG_FACILITY	22,501
nlmsvc_retrieve_args(31,724
nlmsvc_proc_null(81,1979
nlmsvc_proc_test(91,2167
nlmsvc_proc_lock(120,2928
nlmsvc_proc_cancel(163,4101
nlmsvc_proc_unlock(196,4879
nlmsvc_proc_granted(230,5718
nlmsvc_proc_test_msg(247,6224
nlmsvc_proc_lock_msg(261,6540
nlmsvc_proc_cancel_msg(275,6856
nlmsvc_proc_unlock_msg(289,7182
nlmsvc_proc_granted_msg(303,7547
nlmsvc_proc_share(320,7977
nlmsvc_proc_unshare(353,8787
nlmsvc_proc_nm_lock(386,9579
nlmsvc_proc_free_all(399,9909
nlmsvc_proc_sm_notify(417,10311
nlmsvc_callback(460,11542
nlmsvc_callback_exit(486,12095
#define nlmsvc_encode_norep	503,12439
#define nlmsvc_decode_norep	504,12486
#define nlmsvc_decode_testres	505,12533
#define nlmsvc_decode_lockres	506,12582
#define nlmsvc_decode_unlockres	507,12631
#define nlmsvc_decode_cancelres	508,12682
#define nlmsvc_decode_grantedres	509,12733
#define nlmsvc_proc_none	511,12786
#define nlmsvc_proc_test_res	512,12828
#define nlmsvc_proc_lock_res	513,12874
#define nlmsvc_proc_cancel_res	514,12920
#define nlmsvc_proc_unlock_res	515,12968
#define nlmsvc_proc_granted_res	516,13016
struct nlm_void	nlm_void518,13066
#define PROC(PROC520,13101
struct svc_procedure		nlmsvc_procedures[530,13376

fs/lockd/svcshare.c,109
nlm_cmp_owner(19,345
nlmsvc_share_file(26,511
nlmsvc_unshare_file(68,1513
nlmsvc_traverse_shares(92,2112

fs/lockd/xdr.c,2280
#define NLMDBG_FACILITY	21,433
#define NLM_MAXSTRLEN	22,469
#define QUADLEN(QUADLEN24,498
u32	nlm_granted,27,541
u32	nlm_granted, nlm_lck_denied,27,541
u32	nlm_granted, nlm_lck_denied, nlm_lck_denied_nolocks,27,541
	nlm_lck_blocked,28,598
	nlm_lck_blocked, nlm_lck_denied_grace_period;28,598
typedef struct nlm_args	nlm_args;nlm_args31,647
nlmxdr_init(37,736
static inline u32 *nlm_decode_cookie(56,1113
nlm_encode_cookie(83,1556
nlm_decode_fh(92,1711
nlm_encode_fh(107,2012
nlm_decode_oh(118,2209
nlm_encode_oh(124,2313
nlm_decode_lock(130,2417
nlm_encode_lock(156,3067
nlm_encode_testres(179,3555
xdr_argsize_check(209,4181
xdr_ressize_check(217,4335
nlmsvc_decode_testargs(229,4546
nlmsvc_encode_testres(246,4877
nlmsvc_decode_lockargs(254,5052
nlmsvc_decode_cancargs(274,5527
nlmsvc_decode_unlockargs(290,5884
nlmsvc_decode_shareargs(300,6142
nlmsvc_encode_shareres(319,6647
nlmsvc_encode_res(329,6896
nlmsvc_decode_notify(338,7097
nlmsvc_decode_reboot(350,7379
nlmsvc_decode_res(360,7642
nlmsvc_decode_void(369,7850
nlmsvc_encode_void(375,7960
nlmclt_encode_void(384,8122
nlmclt_decode_void(391,8260
nlmclt_encode_testargs(397,8347
nlmclt_decode_testres(411,8709
nlmclt_encode_lockargs(438,9380
nlmclt_encode_cancargs(455,9854
nlmclt_encode_unlockargs(470,10257
nlmclt_encode_res(483,10562
nlmclt_encode_testres(493,10796
nlmclt_decode_res(502,11004
#define NLM_void_sz	513,11221
#define NLM_cookie_sz	514,11244
#define NLM_caller_sz	515,11290
#define NLM_netobj_sz	516,11356
#define NLM_fhandle_sz	518,11457
#define NLM_lock_sz	519,11503
#define NLM_holder_sz	520,11569
#define NLM_testargs_sz	522,11609
#define NLM_lockargs_sz	523,11662
#define NLM_cancargs_sz	524,11715
#define NLM_unlockargs_sz	525,11768
#define NLM_testres_sz	527,11821
#define NLM_res_sz	528,11875
#define NLM_norep_sz	529,11911
# define MAX(MAX532,11948
#define nlmclt_decode_norep	538,12060
#define PROC(PROC540,12094
static struct rpc_procinfo	nlm_procedures[547,12321
static struct rpc_version	nlm_version1 581,13376
static struct rpc_version	nlm_version3 585,13447
static struct rpc_version *	nlm_versions[589,13518
static struct rpc_stat		nlm_stats;596,13615
struct rpc_program		nlm_program 598,13651
nlm_procname(608,13818

fs/nfsd/auth.c,21
nfsd_setuser(14,243

fs/nfsd/stats.c,150
struct nfsd_stats	nfsdstats;26,536
struct svc_stat		nfsd_svcstats 27,565
nfsd_proc_read(30,630
nfsd_stat_init(74,1497
nfsd_stat_shutdown(87,1707

fs/nfsd/export.c,1409
#define NFSDDBG_FACILITY	29,801
#define NFSD_PARANOIA 30,841
typedef struct svc_client	svc_client;svc_client32,866
typedef struct svc_export	svc_export;svc_export33,904
#define CLIENT_HASHBITS	47,1474
#define CLIENT_HASHMAX	48,1501
#define CLIENT_HASHMASK	49,1548
#define CLIENT_HASH(CLIENT_HASH50,1594
#define EXPORT_HASH(EXPORT_HASH53,1728
struct svc_clnthash svc_clnthash55,1785
static struct svc_clnthash *	clnt_hash[60,1897
static svc_client *		clients 61,1953
static int			initialized 62,1990
static int			hash_lock 64,2021
static int			want_lock 65,2049
static int			hash_count 66,2077
static struct wait_queue *	hash_wait 67,2106
#define READLOCK	69,2152
#define WRITELOCK	70,2172
exp_find(76,2268
exp_get(90,2516
exp_device_in_use(112,2881
nfsd_parentdev(127,3108
exp_parent(143,3446
exp_child(186,4387
exp_export(220,5044
exp_do_unexport(353,8109
exp_unexport_all(394,9142
exp_unexport(415,9488
exp_rootfh(456,10335
exp_readlock(522,11913
exp_writelock(530,12012
exp_unlock(559,12519
exp_getclient(577,12958
exp_getclientbyname(607,13500
struct flags flags618,13675
} expflags[621,13717
exp_flags(636,14177
exp_procfs_exports(654,14559
exp_addclient(730,16553
exp_delclient(816,18296
exp_freeclient(849,18871
exp_unhashclient(865,19205
exp_nlmdetach(896,19858
exp_verify_string(908,20068
nfsd_export_init(924,20306
nfsd_export_shutdown(942,20562

fs/nfsd/nfssvc.c,582
#define __NO_VERSION__11,183
#define NFSDDBG_FACILITY	36,784
#define NFSD_BUFSIZE	37,821
#define ALLOWED_SIGS	39,871
#define SHUTDOWN_SIGS	40,911
extern struct svc_program	nfsd_program;42,990
struct timeval			nfssvc_boot 44,1074
static int			nfsd_active 45,1115
#define	NFSD_MAXSERVS	50,1189
nfsd_svc(53,1221
nfsd(101,2141
nfsd_dispatch(199,4487
static struct svc_version	nfsd_version2 251,5835
static struct svc_version	nfsd_version3 255,5946
static struct svc_version *	nfsd_version[259,6040
#define NFSD_NRVERS	268,6170
struct svc_program		nfsd_program 269,6238

fs/nfsd/lockd.c,197
#define NFSDDBG_FACILITY	17,458
nlm_fopen(23,579
nlm_fclose(41,916
struct nlmsvc_binding		nfsd_nlm_ops 47,993
nfsd_lockd_unexport(61,1438
nfsd_lockd_init(67,1526
nfsd_lockd_shutdown(74,1627

fs/nfsd/nfsctl.c,618
#define NFS_GETFH_NEW8,129
# define copy_from_user	36,747
# define copy_to_user	37,786
# define access_ok	38,821
extern long sys_call_table[44,945
static int	initialized 55,1448
void proc_export_init(60,1607
nfsd_init(76,1930
nfsctl_svc(89,2236
nfsctl_addclient(95,2349
nfsctl_delclient(101,2446
nfsctl_export(107,2543
nfsctl_unexport(113,2634
nfsctl_ugidupdate(120,2743
nfsctl_getfd(127,2827
nfsctl_getfh(150,3329
#define handle_sys_nfsservctl 173,3856
asmlinkage handle_sys_nfsservctl(177,3913
EXPORT_NO_SYMBOLS;260,5700
void nfsd_modcount(273,6048
init_module(285,6198
cleanup_module(296,6404

fs/nfsd/nfs3proc.c,963
typedef struct svc_rqst	svc_rqst;svc_rqst27,547
typedef struct svc_buf	svc_buf;svc_buf28,581
#define NFSDDBG_FACILITY	30,614
#define RETURN(RETURN32,654
svcbuf_reserve(35,724
nfsd3_proc_null(42,865
nfsd3_proc_getattr(52,1044
nfsd3_proc_setattr(71,1445
nfsd3_proc_lookup(90,1882
nfsd3_proc_access(112,2302
nfsd3_proc_readlink(124,2516
nfsd3_proc_read(149,3145
nfsd3_proc_write(191,4162
nfsd3_proc_create(219,4928
nfsd3_proc_remove(258,5878
nfsd3_proc_rename(282,6467
nfsd3_proc_link(303,6966
nfsd3_proc_symlink(323,7405
nfsd3_proc_mkdir(355,8139
nfsd3_proc_rmdir(375,8561
nfsd3_proc_readdir(394,8947
nfsd3_proc_statfs(427,9750
#define nfsd3_proc_none	445,10156
#define nfssvc_encode_void	446,10186
#define nfssvc_decode_void	447,10218
#define nfssvc_release_void	448,10250
struct nfsd3_void nfsd3_void449,10283
#define PROC(PROC451,10318
struct svc_procedure		nfsd3_procedures2[461,10623
nfserrno 487,11732
nfsd3_dump(528,12622

fs/nfsd/vfs.c,1068
#define NFSDDBG_FACILITY	42,1184
#define NFSD_PARANOIA43,1225
#define OPEN_READ	46,1278
#define OPEN_WRITE	47,1298
#define IS_ISMNDLK(IS_ISMNDLK51,1399
#define isdotent(isdotent55,1517
struct raparms raparms64,1871
int nfsd_nservers 76,2051
#define FILECACHE_MAX	77,2074
static struct raparms *		raparml 78,2118
static struct raparms *		raparm_cache 79,2159
fh_lock_parent(85,2280
fs_off_limits(120,3064
nfsd_iscovered(131,3353
nfsd_lookup(142,3599
nfsd_setattr(216,5205
nfsd_open(316,7557
nfsd_close(377,8832
nfsd_sync(399,9351
nfsd_get_raparms(409,9562
nfsd_read(442,10270
nfsd_write(502,11610
nfsd_create(629,14995
nfsd_truncate(756,17808
nfsd_readlink(808,19000
nfsd_symlink(849,19780
nfsd_link(915,21059
#define check_parent(check_parent1001,22825
static inline void nfsd_double_down(1007,22996
static inline void nfsd_double_up(1020,23233
nfsd_rename(1032,23438
nfsd_unlink(1113,25247
nfsd_readdir(1198,26847
nfsd_statfs(1281,28635
nfsd_permission(1313,29217
nfsd_racache_shutdown(1383,31225
nfsd_racache_init(1396,31470

fs/nfsd/nfs3xdr.c,2345
#define NFSDDBG_FACILITY	18,338
u32	nfs_ok,20,377
u32	nfs_ok, nfserr_perm,20,377
u32	nfs_ok, nfserr_perm, nfserr_noent,20,377
u32	nfs_ok, nfserr_perm, nfserr_noent, nfserr_io,20,377
u32	nfs_ok, nfserr_perm, nfserr_noent, nfserr_io, nfserr_nxio,20,377
	nfserr_acces,21,440
	nfserr_acces, nfserr_exist,21,440
	nfserr_acces, nfserr_exist, nfserr_nodev,21,440
	nfserr_acces, nfserr_exist, nfserr_nodev, nfserr_notdir,21,440
	nfserr_isdir,22,498
	nfserr_isdir, nfserr_fbig,22,498
	nfserr_isdir, nfserr_fbig, nfserr_nospc,22,498
	nfserr_isdir, nfserr_fbig, nfserr_nospc, nfserr_rofs,22,498
	nfserr_nametoolong,23,553
	nfserr_nametoolong, nfserr_dquot,23,553
	nfserr_nametoolong, nfserr_dquot, nfserr_stale;23,553
# define inline26,630
static u32	nfs3_ftypes[32,705
nfs3xdr_init(43,932
enc64(74,1663
dec64(82,1771
encode_time3(90,1892
decode_time3(97,1999
decode_fh(104,2096
encode_fh(117,2357
decode_filename(129,2650
decode_pathname(146,2962
decode_sattr3(163,3259
encode_fattr3(201,4004
encode_post_op_attr(236,5074
encode_wcc_data(249,5306
xdr_argsize_check(268,5760
xdr_ressize_check(276,5914
nfs3svc_decode_fhandle(290,6194
nfs3svc_decode_sattrargs(298,6358
nfs3svc_decode_diropargs(310,6645
nfs3svc_decode_accessargs(321,6889
nfs3svc_decode_readargs(332,7108
nfs3svc_decode_writeargs(344,7365
nfs3svc_decode_createargs(361,7734
nfs3svc_decode_mkdirargs(384,8178
nfs3svc_decode_symlinkargs(396,8466
nfs3svc_decode_mknodargs(409,8818
nfs3svc_decode_renameargs(433,9380
nfs3svc_decode_linkargs(446,9724
nfs3svc_decode_readdirargs(458,10006
nfs3svc_decode_readdirplusargs(471,10283
nfs3svc_decode_commitargs(485,10601
nfs3svc_encode_attrstat(501,10900
nfs3svc_encode_wccstat(511,11133
nfs3svc_encode_lookupres(521,11343
nfs3svc_encode_accessres(535,11682
nfs3svc_encode_readlinkres(546,11944
nfs3svc_encode_readres(559,12239
nfs3svc_encode_writeres(574,12610
nfs3svc_encode_createres(589,12989
nfs3svc_encode_renameres(602,13302
nfs3svc_encode_linkres(612,13539
nfs3svc_encode_readdirres(622,13786
#define NFS3_ENTRYPLUS_BAGGAGE	636,14122
nfs3svc_encode_entry(638,14191
nfs3svc_encode_statfsres(690,15405
nfs3svc_encode_fsinfores(712,16054
nfs3svc_encode_pathconfres(736,16625
nfs3svc_encode_commitres(755,17097
nfs3svc_release_fhandle(771,17434
nfs3svc_release_fhandle2(779,17562

fs/nfsd/nfscache.c,568
#define CACHESIZE	28,645
#define HASHSIZE	29,669
#define REQHASH(REQHASH30,690
struct nfscache_head nfscache_head32,754
static struct nfscache_head	hash_list[37,839
static struct svc_cacherep *	lru_head;38,888
static struct svc_cacherep *	lru_tail;39,927
static struct svc_cacherep	nfscache[40,966
static int			cache_initialized 41,1014
static int			cache_disabled 42,1050
nfsd_cache_init(47,1166
nfsd_cache_shutdown(77,1781
lru_put_front(97,2120
hash_refile(122,2548
nfsd_cache_lookup(143,3115
nfsd_cache_update(262,6251
nfsd_cache_append(310,7261

fs/nfsd/nfsfh.c,1902
#define NFSDDBG_FACILITY	21,396
#define NFSD_PARANOIA 22,433
extern unsigned long max_mapnr;25,493
#define NFSD_FILE_CACHE 27,526
#define NFSD_DIR_CACHE 28,552
struct fh_entry fh_entry29,578
#define NFSD_MAXFH 36,674
static struct fh_entry filetable[37,727
static struct fh_entry dirstable[38,773
static int nfsd_nr_verified 40,820
static int nfsd_nr_put 41,853
static unsigned long nfsd_next_expire 42,881
static int nfsd_nr_fixups 50,1132
static int nfsd_nr_paths 51,1163
#define NFSD_MAX_PATHS 52,1193
#define NFSD_MAX_FIXUPAGE 53,1220
struct nfsd_fixup nfsd_fixup55,1253
struct nfsd_path nfsd_path64,1385
static struct nfsd_fixup * find_cached_lookup(73,1507
static void add_to_lookup_cache(98,2023
static void free_fixup_entry(127,2727
static int copy_path(137,2894
static int add_to_path_cache(180,3609
static struct nfsd_path *get_path_entry(239,4898
static void put_path(262,5423
static void free_path_entry(267,5485
struct nfsd_getdents_callback nfsd_getdents_callback277,5694
struct nfsd_dirent nfsd_dirent284,5881
static int filldir_one(295,6144
static int get_parent_ino(326,6882
struct dentry * lookup_inode(387,8280
static struct fh_entry *find_fhe(491,10301
static void expire_fhe(518,10802
static void expire_slot(551,11652
static void expire_old(576,12106
static int add_to_fhcache(623,13179
static struct fh_entry *find_fhe_by_ino(660,13860
static struct dentry *find_dentry_by_ino(678,14251
static struct dentry *find_dentry_in_fhcache(757,16004
static struct dentry *lookup_by_inode(803,16959
static struct dentry *nfsd_cached_lookup(850,17973
expire_all(863,18229
expire_by_dentry(876,18468
find_fh_dentry(916,19809
fh_verify(1040,22783
fh_compose(1171,26454
fh_update(1213,27722
fh_put(1243,28357
static int nfsd_d_validate(1269,28935
void nfsd_fh_flush(1316,30167
void nfsd_fh_free(1340,30589
void nfsd_fh_init(1373,31302

fs/nfsd/nfsproc.c,840
typedef struct svc_rqst	svc_rqst;svc_rqst25,526
typedef struct svc_buf	svc_buf;svc_buf26,560
#define NFSDDBG_FACILITY	28,593
#define RETURN(RETURN30,633
svcbuf_reserve(33,675
nfsd_proc_null(40,816
nfsd_proc_getattr(50,995
nfsd_proc_setattr(65,1364
nfsd_proc_lookup(83,1904
nfsd_proc_readlink(102,2281
nfsd_proc_read(126,2853
nfsd_proc_write(164,3803
nfsd_proc_create(188,4489
nfsd_proc_remove(320,7979
nfsd_proc_rename(334,8348
nfsd_proc_link(351,8777
nfsd_proc_symlink(369,9152
nfsd_proc_mkdir(398,9858
nfsd_proc_rmdir(420,10352
nfsd_proc_readdir(436,10701
nfsd_proc_statfs(471,11536
#define nfsd_proc_none	487,11909
#define nfssvc_release_none	488,11938
struct nfsd_void nfsd_void489,11971
#define PROC(PROC491,12005
struct svc_procedure		nfsd_procedures2[501,12315
nfserrno 527,13417
nfsd_dump(568,14307

fs/nfsd/nfsxdr.c,1735
#define NFSDDBG_FACILITY	18,312
u32	nfs_ok,20,351
u32	nfs_ok, nfserr_perm,20,351
u32	nfs_ok, nfserr_perm, nfserr_noent,20,351
u32	nfs_ok, nfserr_perm, nfserr_noent, nfserr_io,20,351
u32	nfs_ok, nfserr_perm, nfserr_noent, nfserr_io, nfserr_nxio,20,351
	nfserr_inval,21,414
	nfserr_inval, nfserr_acces,21,414
	nfserr_inval, nfserr_acces, nfserr_exist,21,414
	nfserr_inval, nfserr_acces, nfserr_exist, nfserr_nodev,21,414
	nfserr_inval, nfserr_acces, nfserr_exist, nfserr_nodev, nfserr_notdir,21,414
	nfserr_isdir,22,486
	nfserr_isdir, nfserr_fbig,22,486
	nfserr_isdir, nfserr_fbig, nfserr_nospc,22,486
	nfserr_isdir, nfserr_fbig, nfserr_nospc, nfserr_rofs,22,486
	nfserr_nametoolong,23,541
	nfserr_nametoolong, nfserr_dquot,23,541
	nfserr_nametoolong, nfserr_dquot, nfserr_stale;23,541
# define inline26,618
static u32	nfs_ftypes[32,693
nfsd_xdr_init(43,903
decode_fh(75,1673
encode_fh(86,1933
decode_filename(97,2187
decode_pathname(114,2498
decode_sattr(131,2794
encode_fattr(171,3805
xdr_argsize_check(204,4698
xdr_ressize_check(212,4852
nfssvc_decode_void(226,5132
nfssvc_decode_fhandle(232,5242
nfssvc_decode_sattrargs(240,5405
nfssvc_decode_diropargs(251,5633
nfssvc_decode_readargs(262,5876
nfssvc_decode_writeargs(276,6157
nfssvc_decode_createargs(293,6521
nfssvc_decode_renameargs(305,6807
nfssvc_decode_linkargs(318,7149
nfssvc_decode_symlinkargs(330,7429
nfssvc_decode_readdirargs(343,7778
nfssvc_encode_void(358,8057
nfssvc_encode_attrstat(364,8167
nfssvc_encode_diropres(373,8378
nfssvc_encode_readlinkres(383,8625
nfssvc_encode_readres(392,8821
nfssvc_encode_readdirres(404,9091
nfssvc_encode_statfsres(412,9261
nfssvc_encode_entry(426,9607
nfssvc_release_fhandle(466,10480

fs/binfmt_misc.c,963
#define VERBOSE_STATUS 44,1128
struct binfmt_entry binfmt_entry46,1201
#define ENTRY_ENABLED 59,1580
#define	ENTRY_MAGIC 60,1640
static struct linux_binfmt misc_format 66,1881
static struct proc_dir_entry *bm_dir 74,2047
static struct binfmt_entry *entries 76,2093
static int free_id 77,2137
static int enabled 78,2161
static void clear_entry(86,2292
static void clear_entries(107,2622
static struct binfmt_entry *get_entry(126,2897
static inline void put_entry(142,3131
static struct binfmt_entry *check_file(154,3357
static int load_misc_binary(184,3912
static char *copyarg(248,5297
static int proc_write_register(283,6165
static int proc_read_status(355,7954
static int proc_write_status(426,9462
static void entry_proc_cleanup(457,10140
static int entry_proc_setup(465,10290
static void bm_modcount(488,10977
int __init init_misc_binfmt(497,11103
EXPORT_NO_SYMBOLS;533,11894
int init_module(534,11913
void cleanup_module(539,11968

fs/qnx4/bitmap.c,293
int qnx4_new_block(25,557
void count_bits(30,616
unsigned long qnx4_count_free_blocks(62,1100
unsigned long qnx4_count_free_inodes(84,1639
int qnx4_is_free(89,1777
int qnx4_bmap(118,2534
int qnx4_set_bitmap(129,2749
static void qnx4_clear_inode(156,3438
void qnx4_free_inode(167,3710

fs/qnx4/dir.c,150
static int qnx4_readdir(25,506
static struct file_operations qnx4_dir_operations 76,1852
struct inode_operations qnx4_dir_inode_operations 94,2374

fs/qnx4/file.c,244
#define MIN(MIN33,715
#define MAX(MAX34,752
static ssize_t qnx4_file_write(40,880
static struct file_operations qnx4_file_operations 151,3558
struct inode_operations qnx4_file_inode_operations 178,4190
static int qnx4_readpage(204,4779

fs/qnx4/fsync.c,220
#define blocksize 26,439
static int sync_block(34,558
static int sync_iblock(62,1083
static int sync_direct(86,1490
static int sync_indirect(102,1764
static int sync_dindirect(125,2178
int qnx4_sync_file(149,2611

fs/qnx4/inode.c,860
#define QNX4_VERSION 27,576
#define QNX4_BMNAME 28,600
#define CHECK_BOOT_SIGNATURE 29,632
static struct super_operations qnx4_sops;31,664
int qnx4_sync_inode(35,732
static void qnx4_delete_inode(61,1191
static void qnx4_write_super(69,1391
static void qnx4_put_inode(75,1503
static void qnx4_write_inode(83,1617
static struct super_operations qnx4_sops 129,3055
static int qnx4_remount(157,3505
struct buffer_head *inode_getblk(171,3749
struct buffer_head *qnx4_bread(210,4411
static int qnx4_statfs(228,4731
static const char *qnx4_checkroot(251,5398
static struct super_block *qnx4_read_super(296,6662
static void qnx4_put_super(366,8186
static void qnx4_read_inode(372,8271
static struct file_system_type qnx4_fs_type 437,10046
__initfunc(445,10149
EXPORT_NO_SYMBOLS;452,10294
int init_module(454,10314
void cleanup_module(459,10365

fs/qnx4/namei.c,185
static int qnx4_match(32,821
static struct buffer_head *qnx4_find_entry(66,1624
int qnx4_lookup(111,2616
int qnx4_create(148,3469
int qnx4_rmdir(157,3637
int qnx4_unlink(208,4729

fs/qnx4/symlinks.c,144
struct inode_operations qnx4_symlink_inode_operations 31,668
static struct dentry *qnx4_follow_link(52,1145
static int qnx4_readlink(78,1674

fs/qnx4/truncate.c,27
void qnx4_truncate(24,409

fs/nls/nls_base.c,733
static struct nls_table *tables 20,359
struct utf8_table utf8_table26,535
static struct utf8_table utf8_table[34,637
utf8_mbtowc(46,1204
utf8_mbstowcs(76,1628
utf8_wctomb(104,2026
utf8_wcstombs(132,2419
int register_nls(158,2823
int unregister_nls(177,3101
struct nls_table *find_nls(191,3304
struct nls_table *load_nls(202,3489
void unload_nls(238,4113
struct nls_unicode charset2uni[243,4180
static unsigned char page00[326,8048
static unsigned char *page_uni2charset[362,10170
void inc_use_count(367,10231
void dec_use_count(371,10261
static struct nls_table default_table 375,10291
struct nls_table *load_nls_default(387,10471
int init_nls(403,10828
int init_module(490,12423
void cleanup_module(496,12471

fs/nls/nls_cp437.c,614
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page03[170,8465
static unsigned char page20[206,10587
static unsigned char page22[242,12709
static unsigned char page23[278,14831
static unsigned char page25[314,16953
static unsigned char *page_uni2charset[350,19075
static unsigned char charset2upper[359,19463
static void inc_use_count(396,21599
static void dec_use_count(401,21656
static struct nls_table table 406,21713
int init_nls_cp437(415,21832
int init_module(421,21906
void cleanup_module(427,21960

fs/nls/nls_cp737.c,536
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page03[134,6343
static unsigned char page20[170,8465
static unsigned char page22[206,10587
static unsigned char page25[242,12709
static unsigned char *page_uni2charset[278,14831
static unsigned char charset2upper[287,15219
static void inc_use_count(324,17355
static void dec_use_count(329,17412
static struct nls_table table 334,17469
int init_nls_cp737(343,17588
int init_module(349,17662
void cleanup_module(355,17716

fs/nls/nls_cp775.c,536
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page20[170,8465
static unsigned char page22[206,10587
static unsigned char page25[242,12709
static unsigned char *page_uni2charset[278,14831
static unsigned char charset2upper[287,15219
static void inc_use_count(324,17355
static void dec_use_count(329,17412
static struct nls_table table 334,17469
int init_nls_cp775(343,17588
int init_module(349,17662
void cleanup_module(355,17716

fs/nls/nls_cp850.c,497
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page20[170,8465
static unsigned char page25[206,10587
static unsigned char *page_uni2charset[242,12709
static unsigned char charset2upper[251,13097
static void inc_use_count(288,15233
static void dec_use_count(293,15290
static struct nls_table table 298,15347
int init_nls_cp850(307,15466
int init_module(313,15540
void cleanup_module(319,15594

fs/nls/nls_cp852.c,497
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page02[170,8465
static unsigned char page25[206,10587
static unsigned char *page_uni2charset[242,12709
static unsigned char charset2upper[251,13097
static void inc_use_count(288,15233
static void dec_use_count(293,15290
static struct nls_table table 298,15347
int init_nls_cp852(307,15466
int init_module(313,15540
void cleanup_module(319,15594

fs/nls/nls_cp855.c,497
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page04[134,6343
static unsigned char page21[170,8465
static unsigned char page25[206,10587
static unsigned char *page_uni2charset[242,12709
static unsigned char charset2upper[251,13097
static void inc_use_count(288,15233
static void dec_use_count(293,15290
static struct nls_table table 298,15347
int init_nls_cp855(307,15466
int init_module(313,15540
void cleanup_module(319,15594

fs/nls/nls_cp857.c,458
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page25[170,8465
static unsigned char *page_uni2charset[206,10587
static unsigned char charset2upper[215,10975
static void inc_use_count(252,13111
static void dec_use_count(257,13168
static struct nls_table table 262,13225
int init_nls_cp857(271,13344
int init_module(277,13418
void cleanup_module(283,13472

fs/nls/nls_cp860.c,575
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page03[134,6343
static unsigned char page20[170,8465
static unsigned char page22[206,10587
static unsigned char page23[242,12709
static unsigned char page25[278,14831
static unsigned char *page_uni2charset[314,16953
static unsigned char charset2upper[323,17341
static void inc_use_count(360,19477
static void dec_use_count(365,19534
static struct nls_table table 370,19591
int init_nls_cp860(379,19710
int init_module(385,19784
void cleanup_module(391,19838

fs/nls/nls_cp861.c,614
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page03[170,8465
static unsigned char page20[206,10587
static unsigned char page22[242,12709
static unsigned char page23[278,14831
static unsigned char page25[314,16953
static unsigned char *page_uni2charset[350,19075
static unsigned char charset2upper[359,19463
static void inc_use_count(396,21599
static void dec_use_count(401,21656
static struct nls_table table 406,21713
int init_nls_cp861(415,21832
int init_module(421,21906
void cleanup_module(427,21960

fs/nls/nls_cp862.c,653
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page03[170,8465
static unsigned char page05[206,10587
static unsigned char page20[242,12709
static unsigned char page22[278,14831
static unsigned char page23[314,16953
static unsigned char page25[350,19075
static unsigned char *page_uni2charset[386,21197
static unsigned char charset2upper[395,21585
static void inc_use_count(431,23720
static void dec_use_count(436,23777
static struct nls_table table 441,23834
int init_nls_cp862(450,23953
int init_module(456,24027
void cleanup_module(462,24081

fs/nls/nls_cp863.c,614
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page03[170,8465
static unsigned char page20[206,10587
static unsigned char page22[242,12709
static unsigned char page23[278,14831
static unsigned char page25[314,16953
static unsigned char *page_uni2charset[350,19075
static unsigned char charset2upper[359,19463
static void inc_use_count(395,21598
static void dec_use_count(400,21655
static struct nls_table table 405,21712
int init_nls_cp863(414,21831
int init_module(420,21905
void cleanup_module(426,21959

fs/nls/nls_cp864.c,575
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page03[134,6343
static unsigned char page06[170,8465
static unsigned char page22[206,10587
static unsigned char page25[242,12709
static unsigned char pagefe[278,14831
static unsigned char *page_uni2charset[314,16953
static unsigned char charset2upper[350,19123
static void inc_use_count(386,21258
static void dec_use_count(391,21315
static struct nls_table table 396,21372
int init_nls_cp864(405,21491
int init_module(411,21565
void cleanup_module(417,21619

fs/nls/nls_cp865.c,614
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page01[134,6343
static unsigned char page03[170,8465
static unsigned char page20[206,10587
static unsigned char page22[242,12709
static unsigned char page23[278,14831
static unsigned char page25[314,16953
static unsigned char *page_uni2charset[350,19075
static unsigned char charset2upper[359,19463
static void inc_use_count(395,21598
static void dec_use_count(400,21655
static struct nls_table table 405,21712
int init_nls_cp865(414,21831
int init_module(420,21905
void cleanup_module(426,21959

fs/nls/nls_cp866.c,536
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page04[134,6343
static unsigned char page21[170,8465
static unsigned char page22[206,10587
static unsigned char page25[242,12709
static unsigned char *page_uni2charset[278,14831
static unsigned char charset2upper[287,15219
static void inc_use_count(323,17354
static void dec_use_count(328,17411
static struct nls_table table 333,17468
int init_nls_cp866(342,17587
int init_module(348,17661
void cleanup_module(354,17715

fs/nls/nls_cp869.c,497
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page03[134,6343
static unsigned char page20[170,8465
static unsigned char page25[206,10587
static unsigned char *page_uni2charset[242,12709
static unsigned char charset2upper[251,13097
static void inc_use_count(287,15232
static void dec_use_count(292,15289
static struct nls_table table 297,15346
int init_nls_cp869(306,15465
int init_module(312,15539
void cleanup_module(318,15593

fs/nls/nls_cp874.c,458
static struct nls_unicode charset2uni[15,346
static unsigned char page00[98,4221
static unsigned char page0e[134,6343
static unsigned char page20[170,8465
static unsigned char *page_uni2charset[206,10587
static unsigned char charset2upper[215,10975
static void inc_use_count(251,13110
static void dec_use_count(256,13167
static struct nls_table table 261,13224
int init_nls_cp874(270,13343
int init_module(276,13417
void cleanup_module(282,13471

fs/nls/nls_iso8859-1.c,378
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char *page_uni2charset[134,6351
static unsigned char charset2upper[139,6475
static void inc_use_count(175,8610
static void dec_use_count(180,8667
static struct nls_table table 185,8724
int init_nls_iso8859_1(194,8847
int init_module(200,8925
void cleanup_module(206,8983

fs/nls/nls_iso8859-2.c,462
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page01[134,6351
static unsigned char page02[170,8473
static unsigned char *page_uni2charset[206,10595
static unsigned char charset2upper[211,10719
static void inc_use_count(247,12854
static void dec_use_count(252,12911
static struct nls_table table 257,12968
int init_nls_iso8859_2(266,13091
int init_module(272,13169
void cleanup_module(278,13227

fs/nls/nls_iso8859-3.c,462
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page01[134,6351
static unsigned char page02[170,8473
static unsigned char *page_uni2charset[206,10595
static unsigned char charset2upper[211,10719
static void inc_use_count(247,12854
static void dec_use_count(252,12911
static struct nls_table table 257,12968
int init_nls_iso8859_3(266,13091
int init_module(272,13169
void cleanup_module(278,13227

fs/nls/nls_iso8859-4.c,462
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page01[134,6351
static unsigned char page02[170,8473
static unsigned char *page_uni2charset[206,10595
static unsigned char charset2upper[211,10719
static void inc_use_count(247,12854
static void dec_use_count(252,12911
static struct nls_table table 257,12968
int init_nls_iso8859_4(266,13091
int init_module(272,13169
void cleanup_module(278,13227

fs/nls/nls_iso8859-5.c,462
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page04[134,6351
static unsigned char page21[170,8473
static unsigned char *page_uni2charset[206,10595
static unsigned char charset2upper[215,10983
static void inc_use_count(251,13118
static void dec_use_count(256,13175
static struct nls_table table 261,13232
int init_nls_iso8859_5(270,13355
int init_module(276,13433
void cleanup_module(282,13491

fs/nls/nls_iso8859-6.c,422
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page06[134,6351
static unsigned char *page_uni2charset[170,8473
static unsigned char charset2upper[175,8597
static void inc_use_count(211,10732
static void dec_use_count(216,10789
static struct nls_table table 221,10846
int init_nls_iso8859_6(230,10969
int init_module(236,11047
void cleanup_module(242,11105

fs/nls/nls_iso8859-7.c,501
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page02[134,6351
static unsigned char page03[170,8473
static unsigned char page20[206,10595
static unsigned char *page_uni2charset[242,12717
static unsigned char charset2upper[251,13105
static void inc_use_count(287,15240
static void dec_use_count(292,15297
static struct nls_table table 297,15354
int init_nls_iso8859_7(306,15477
int init_module(312,15555
void cleanup_module(318,15613

fs/nls/nls_iso8859-8.c,462
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page05[134,6351
static unsigned char page20[170,8473
static unsigned char *page_uni2charset[206,10595
static unsigned char charset2upper[215,10983
static void inc_use_count(251,13118
static void dec_use_count(256,13175
static struct nls_table table 261,13232
int init_nls_iso8859_8(270,13355
int init_module(276,13433
void cleanup_module(282,13491

fs/nls/nls_iso8859-9.c,422
static struct nls_unicode charset2uni[15,354
static unsigned char page00[98,4229
static unsigned char page01[134,6351
static unsigned char *page_uni2charset[170,8473
static unsigned char charset2upper[175,8597
static void inc_use_count(211,10732
static void dec_use_count(216,10789
static struct nls_table table 221,10846
int init_nls_iso8859_9(230,10969
int init_module(236,11047
void cleanup_module(242,11105

fs/nls/nls_koi8-r.c,537
static struct nls_unicode charset2uni[15,348
static unsigned char page00[98,4223
static unsigned char page04[134,6345
static unsigned char page22[170,8467
static unsigned char page23[206,10589
static unsigned char page25[242,12711
static unsigned char *page_uni2charset[278,14833
static unsigned char charset2upper[287,15221
static void inc_use_count(323,17356
static void dec_use_count(328,17413
static struct nls_table table 333,17470
int init_nls_koi8_r(342,17590
int init_module(348,17665
void cleanup_module(354,17720

fs/nls/nls_iso8859-15.c,417
static struct nls_unicode charset2uni[13,241
static unsigned char page00[96,4116
static unsigned char page01[132,6238
static unsigned char page20[168,8360
static unsigned char *page_uni2charset[204,10482
static void inc_use_count(215,10849
static void dec_use_count(220,10906
static struct nls_table table 225,10963
int init_nls_iso8859_15(234,11087
int init_module(240,11166
void cleanup_module(246,11225

fs/bad_inode.c,256
static struct dentry * bad_follow_link(18,404
static int return_EIO(24,544
#define EIO_ERROR 29,591
static struct file_operations bad_file_ops 31,634
struct inode_operations bad_inode_ops 49,1055
void make_bad_inode(82,1986
int is_bad_inode(94,2348

fs/coda/cnode.c,270
extern int coda_debug;13,246
extern int coda_print_entry;14,269
static void coda_fill_inode(17,313
int coda_cnode_make(55,1635
inline int coda_fideq(121,3512
void coda_replace_fid(130,3706
struct inode *coda_fid_to_inode(156,4317
int coda_cnode_makectl(235,6315

fs/coda/coda_linux.c,477
int coda_debug 29,758
int coda_print_entry 30,778
int coda_access_cache 31,805
char * coda_f2s(34,851
char * coda_f2s2(45,1028
int coda_iscontrol(56,1220
int coda_isroot(65,1423
int coda_fid_is_volroot(75,1585
int coda_fid_is_weird(80,1691
void coda_load_creds(111,2446
int coda_cred_ok(124,2885
int coda_cred_eq(129,2974
unsigned short coda_flags_to_cflags(134,3092
void coda_vattr_to_iattr(173,3909
void coda_iattr_to_vattr(226,5591
void print_vattr(294,7637

fs/coda/dir.c,820
int coda_crossvol_rename 55,1928
int coda_hasmknod 56,1958
struct dentry_operations coda_dentry_operations 58,1982
struct inode_operations coda_dir_inode_operations 66,2152
struct file_operations coda_dir_operations 90,2930
static int coda_lookup(110,3568
int coda_permission(185,5563
static int coda_create(224,6380
static int coda_mknod(278,7684
static int coda_mkdir(334,9047
static int coda_link(391,10442
static int coda_symlink(436,11523
int coda_unlink(479,12593
int coda_rmdir(506,13281
static int coda_rename(541,14024
int coda_readdir(611,16148
int coda_open(649,17454
int coda_release(707,19041
#define DIR_BUFSIZE 758,20414
static int coda_venus_readdir(760,20440
static int coda_dentry_revalidate(857,23868
static void coda_dentry_delete(899,24743
int coda_revalidate_inode(924,25331

fs/coda/file.c,393
struct inode_operations coda_file_inode_operations 37,1155
struct file_operations coda_file_operations 60,1815
static int coda_readpage(79,2429
static int coda_file_mmap(109,3264
static ssize_t coda_file_read(125,3552
static ssize_t coda_file_write(166,4763
int coda_fsync(208,5945
void coda_prepare_openfile(252,7130
void coda_restore_codafile(268,7739
int coda_inode_grab(279,8129

fs/coda/stats.c,1016
struct coda_vfs_stats		coda_vfs_stat;30,591
struct coda_permission_stats	coda_permission_stat;31,629
struct coda_cache_inv_stats	coda_cache_inv_stat;32,680
struct coda_upcall_stats_entry coda_upcall_stat[33,729
char *coda_upcall_names[36,829
void reset_coda_vfs_stats(74,1762
static void reset_upcall_entry(80,1862
void reset_coda_upcall_stats(87,2018
void reset_coda_permission_stats(92,2121
void reset_coda_cache_inv_stats(97,2236
void do_time_stats(103,2349
void coda_upcall_stats(121,2721
unsigned long get_time_average(140,3139
static inline unsigned long absolute(145,3295
static unsigned long sqr_root(150,3381
unsigned long get_time_std_deviation(176,3695
int do_reset_coda_vfs_stats(189,4000
int do_reset_coda_upcall_stats(200,4194
int do_reset_coda_permission_stats(212,4396
int do_reset_coda_cache_inv_stats(224,4614
int coda_vfs_stats_get_info(236,4828
int coda_upcall_stats_get_info(303,6114
int coda_permission_stats_get_info(350,7348
int coda_cache_inv_stats_get_info(379,7927

fs/coda/psdev.c,576
extern struct file_system_type coda_fs_type;53,1477
int           coda_hard 57,1571
unsigned long coda_timeout 58,1640
struct coda_sb_info coda_super_info;60,1715
struct venus_comm coda_upc_comm;61,1752
static unsigned int coda_psdev_poll(67,1816
static ssize_t coda_psdev_write(84,2187
static ssize_t coda_psdev_read(186,5019
static int coda_psdev_open(229,6356
static int coda_psdev_release(266,7129
static struct file_operations coda_psdev_fops 317,8398
__initfunc(337,9059
int init_coda_psdev(355,9423
int init_module(375,9862
void cleanup_module(394,10227

fs/coda/pioctl.c,251
struct inode_operations coda_ioctl_inode_operations 35,1046
struct file_operations coda_ioctl_operations 59,1821
static int coda_ioctl_permission(74,2282
int coda_ioctl_open(82,2410
int coda_ioctl_release(94,2603
static int coda_pioctl(100,2684

fs/coda/cache.c,553
static void coda_ccinsert(36,1075
static void coda_cninsert(51,1536
static void coda_ccremove(62,1857
static void coda_cnremove(72,2097
static void coda_cache_create(82,2319
static struct coda_cache * coda_cache_find(107,2877
void coda_cache_enter(126,3390
void coda_cache_clear_inode(140,3637
void coda_cache_clear_all(163,4112
void coda_cache_clear_cred(187,4623
int coda_cache_check(215,5232
void coda_purge_dentries(257,6462
static void coda_flag_children(289,7237
void coda_flag_inode_children(309,7795
void coda_flag_inode(336,8394

fs/coda/sysctl.c,1841
#define __NO_VERSION__27,719
static struct ctl_table_header *fs_table_header;37,942
#define FS_CODA 39,992
#define CODA_DEBUG 41,1048
#define CODA_ENTRY	42,1097
#define CODA_TIMEOUT 43,1159
#define CODA_MC 44,1234
#define CODA_HARD 45,1304
#define CODA_VFS 46,1370
#define CODA_UPCALL 47,1418
#define CODA_PERMISSION	48,1472
#define CODA_CACHE_INV 49,1533
static ctl_table coda_table[51,1603
static ctl_table fs_table[64,2410
struct coda_vfs_stats		coda_vfs_stat;69,2513
struct coda_permission_stats	coda_permission_stat;70,2551
struct coda_cache_inv_stats	coda_cache_inv_stat;71,2602
struct coda_upcall_stats_entry  coda_upcall_stat[72,2651
struct coda_upcallstats         coda_callstats;73,2714
char *coda_upcall_names[76,2800
void reset_coda_vfs_stats(112,3731
void reset_coda_upcall_stats(117,3825
void reset_coda_permission_stats(122,3928
void reset_coda_cache_inv_stats(127,4043
void do_time_stats(133,4156
void coda_upcall_stats(151,4528
unsigned long get_time_average(170,4946
static inline unsigned long absolute(175,5102
static unsigned long sqr_root(180,5188
unsigned long get_time_std_deviation(206,5502
int do_reset_coda_vfs_stats(219,5807
int do_reset_coda_upcall_stats(230,6001
int do_reset_coda_permission_stats(242,6203
int do_reset_coda_cache_inv_stats(254,6421
int coda_vfs_stats_get_info(266,6635
int coda_upcall_stats_get_info(333,7921
int coda_permission_stats_get_info(380,9155
int coda_cache_inv_stats_get_info(409,9734
struct proc_dir_entry proc_fs_coda 458,10667
struct proc_dir_entry proc_coda_vfs 467,10860
struct proc_dir_entry proc_coda_upcall 474,11093
struct proc_dir_entry proc_coda_permission 481,11339
struct proc_dir_entry proc_coda_cache_inv 489,11602
static void coda_proc_modcount(496,11860
void coda_sysctl_init(507,11995
void coda_sysctl_clean(530,12627

fs/coda/symlink.c,144
struct inode_operations coda_symlink_inode_operations 32,899
static int coda_readlink(55,1520
static struct dentry *coda_follow_link(89,2262

fs/coda/inode.c,438
#define __NO_VERSION__11,274
struct super_operations coda_super_operations 47,1299
static struct super_block * coda_read_super(60,1688
static void coda_put_super(138,3552
static void coda_read_inode(158,3964
static void coda_put_inode(167,4104
static void coda_delete_inode(178,4285
static int  coda_notify_change(212,5195
static int coda_statfs(242,6007
struct file_system_type coda_fs_type 262,6422
int init_coda_fs(266,6503

fs/coda/upcall.c,736
#define UPARG(UPARG45,1133
static inline int max(57,1461
#define INSIZE(INSIZE65,1548
#define OUTSIZE(OUTSIZE66,1603
#define SIZE(SIZE67,1660
int venus_rootfid(71,1730
int venus_getattr(96,2302
int  venus_setattr(119,2812
int venus_lookup(139,3318
int venus_release(171,4174
int venus_open(196,4763
int venus_mkdir(225,5370
int venus_rename(256,6226
int venus_create(295,7570
int venus_rmdir(329,8610
int venus_remove(352,9251
int venus_readlink(374,9888
int venus_link(408,10747
int venus_symlink(437,11570
int venus_fsync(475,12744
int venus_access(493,13150
int venus_pioctl(513,13568
static inline unsigned long coda_waitfor_upcall(588,15711
static int coda_upcall(639,17119
int coda_downcall(805,23155

fs/hfs/catalog.c,2112
#define C_HASHBITS 29,998
#define C_HASHSIZE 30,1021
#define C_HASHMASK 31,1061
#define CCACHE_INC 35,1220
#define CCACHE_MAX 36,1280
} FIL_REC;FIL_REC63,2410
} DIR_REC;DIR_REC77,2927
} THD_REC;THD_REC84,3150
struct hfs_cat_rec hfs_cat_rec87,3190
static struct list_head hash_table[101,3484
spinlock_t entry_lock 103,3533
} entries_stat;108,3647
static inline hfs_u32 brec_to_id(117,3776
static inline unsigned int hashfn(130,4060
static inline struct list_head *hash(147,4505
static inline void insert_hash(153,4647
static inline void remove_hash(159,4800
static inline void wait_on_entry(170,4993
static void lock_entry(182,5198
static void unlock_entry(195,5429
void hfs_cat_mark_dirty(204,5632
static void delete_entry(222,6099
static inline void init_entry(240,6548
static inline struct hfs_cat_entry *hfs_cat_alloc(253,6808
static int grow_entries(265,7034
static void __read_entry(287,7434
static inline void count_dir_entries(346,9372
static inline void read_entry(372,9921
static void __write_entry(394,10344
static void write_entry(439,12124
static struct hfs_cat_entry *find_entry(478,13104
static struct hfs_cat_entry *get_new_entry(505,13634
static struct hfs_cat_entry *get_entry(582,15515
static inline hfs_u32 new_cnid(608,16088
static void update_dir(619,16318
static inline void start_write(648,16976
static inline void start_read(659,17206
static inline void end_write(670,17449
static inline void end_read(680,17647
static int create_entry(693,17922
void hfs_cat_put(796,20419
struct hfs_cat_entry *hfs_cat_get(857,22029
static void invalidate_list(864,22200
static void delete_list(897,22947
void hfs_cat_invalidate(920,23394
void hfs_cat_commit(942,23929
void hfs_cat_free(986,25164
int hfs_cat_compare(1012,25990
void hfs_cat_build_key(1033,26456
int hfs_cat_open(1054,26961
int hfs_cat_next(1088,27691
void hfs_cat_close(1124,28547
struct hfs_cat_entry *hfs_cat_parent(1140,28929
int hfs_cat_create(1176,29954
int hfs_cat_mkdir(1208,31030
int hfs_cat_delete(1238,31903
int hfs_cat_move(1314,33706
void hfs_cat_init(1579,39869

fs/hfs/super.c,440
static struct super_operations hfs_super_operations 44,1510
static struct file_system_type hfs_fs 58,1962
static void hfs_read_inode(72,2253
static void hfs_write_super(97,2957
static void hfs_put_super(120,3475
static int hfs_statfs(147,4092
static int parse_options(170,4765
struct super_block *hfs_read_super(390,10059
__initfunc(486,12300
int init_module(493,12415
void cleanup_module(513,12995
long int hfs_alloc 520,13128

fs/hfs/dir_cap.c,747
#define DOT_LEN	35,1258
#define DOT_DOT_LEN	36,1278
#define DOT_RESOURCE_LEN	37,1301
#define DOT_FINDERINFO_LEN	38,1328
#define DOT_ROOTINFO_LEN	39,1358
const struct hfs_name hfs_cap_reserved1[41,1386
const struct hfs_name hfs_cap_reserved2[49,1561
#define DOT	54,1657
#define DOT_DOT	55,1694
#define DOT_RESOURCE	56,1735
#define DOT_FINDERINFO	57,1780
#define DOT_ROOTINFO	58,1827
static struct file_operations hfs_cap_dir_operations 60,1873
struct inode_operations hfs_cap_ndir_inode_operations 77,2385
struct inode_operations hfs_cap_fdir_inode_operations 98,2920
struct inode_operations hfs_cap_rdir_inode_operations 119,3428
static int cap_lookup(150,4297
static int cap_readdir(235,7285
void hfs_cap_drop_dentry(355,10225

fs/hfs/dir_dbl.c,765
#define DOT_LEN	38,1343
#define DOT_DOT_LEN	39,1363
#define ROOTINFO_LEN	40,1386
#define PCNT_ROOTINFO_LEN	41,1410
const struct hfs_name hfs_dbl_reserved1[43,1439
const struct hfs_name hfs_dbl_reserved2[49,1542
#define DOT	55,1669
#define DOT_DOT	56,1706
#define ROOTINFO	57,1747
#define PCNT_ROOTINFO	58,1788
static struct file_operations hfs_dbl_dir_operations 60,1835
struct inode_operations hfs_dbl_dir_inode_operations 77,2368
static int is_hdr(104,2982
static int dbl_lookup(133,3737
static int dbl_readdir(202,6187
static int dbl_create(295,8384
static int dbl_mkdir(316,8911
static int dbl_mknod(338,9520
static int dbl_unlink(359,10047
static int dbl_rmdir(379,10562
static int dbl_rename(403,11242
void hfs_dbl_drop_dentry(430,12112

fs/hfs/file.c,520
static struct file_operations hfs_file_operations 35,1126
struct inode_operations hfs_file_inode_operations 53,1656
#define NBUF 79,2343
struct buffer_head *hfs_getblk(90,2620
static int hfs_bmap(139,3858
static hfs_rwret_t hfs_file_read(155,4470
static hfs_rwret_t hfs_file_write(199,5504
static void hfs_file_truncate(239,6496
static inline void xlate_to_user(257,6861
static inline int xlate_from_user(272,7117
hfs_s32 hfs_do_read(305,8134
hfs_s32 hfs_do_write(460,11945
void hfs_file_fix_mode(527,13388

fs/hfs/file_cap.c,324
#define OVERLAPS(OVERLAPS43,1408
static struct file_operations hfs_cap_info_operations 49,1606
struct inode_operations hfs_cap_info_inode_operations 67,2143
static void cap_build_meta(97,2857
static hfs_rwret_t cap_info_read(130,4108
static hfs_rwret_t cap_info_write(198,5562
static void cap_info_truncate(294,7899

fs/hfs/dir_nat.c,779
#define DOT_LEN	41,1474
#define DOT_DOT_LEN	42,1494
#define DOT_APPLEDOUBLE_LEN	43,1517
#define DOT_PARENT_LEN	44,1548
#define ROOTINFO_LEN 45,1574
const struct hfs_name hfs_nat_reserved1[47,1609
const struct hfs_name hfs_nat_reserved2[55,1782
#define DOT	59,1863
#define DOT_DOT	60,1900
#define DOT_APPLEDOUBLE	61,1941
#define DOT_PARENT	62,1989
#define ROOTINFO 63,2032
static struct file_operations hfs_nat_dir_operations 65,2081
struct inode_operations hfs_nat_ndir_inode_operations 83,2658
struct inode_operations hfs_nat_hdir_inode_operations 106,3278
static int nat_lookup(139,4255
static int nat_readdir(223,6989
void hfs_nat_drop_dentry(337,9853
static int nat_rmdir(371,10725
static int nat_hdr_unlink(411,11927
static int nat_hdr_rename(461,13368

fs/hfs/balloc.c,280
static hfs_buffer get_new_node(34,1065
static struct hfs_bnode_ref hfs_bnode_init(70,2126
static struct hfs_bnode *init_mapnode(137,3985
int hfs_bnode_bitop(212,6189
struct hfs_bnode_ref hfs_bnode_alloc(283,8194
void hfs_btree_extend(360,10410
int hfs_bnode_free(424,11819

fs/hfs/file_hdr.c,741
static struct file_operations hfs_hdr_operations 42,1552
struct inode_operations hfs_hdr_inode_operations 60,2107
const struct hfs_hdr_layout hfs_dbl_fil_hdr_layout 84,2722
const struct hfs_hdr_layout hfs_dbl_dir_hdr_layout 104,3581
const struct hfs_hdr_layout hfs_nat_hdr_layout 122,4314
static const char fstype[144,5209
struct hdr_hdr hdr_hdr149,5370
static int dlength(162,5629
static void hdr_build_meta(200,6274
static struct hfs_hdr_layout *dup_layout(228,7067
static inline void init_layout(245,7390
static inline void adjust_forks(280,8306
static void get_dates(303,8947
static void set_dates(314,9229
static hfs_rwret_t hdr_read(349,10236
static hfs_rwret_t hdr_write(549,14543
static void hdr_truncate(863,21564

fs/hfs/bdelete.c,240
#define FULL 20,589
#define NO_SPACE 21,652
static void bdelete_nonempty(43,1302
static int del_root(90,2657
static void delete_empty_bnode(203,6233
static void balance(245,7454
static int bdelete(295,8787
int hfs_bdelete(448,12431

fs/hfs/mdb.c,126
struct raw_mdb raw_mdb35,1094
struct hfs_mdb *hfs_mdb_get(84,3274
void hfs_mdb_commit(238,7863
void hfs_mdb_put(289,9550

fs/hfs/bfind.c,77
void hfs_brec_relse(38,1102
int hfs_bfind(126,5429
int hfs_bsucc(268,9310

fs/hfs/extent.c,853
struct hfs_raw_extent hfs_raw_extent21,617
static inline void build_key(35,848
static inline void lock_bitmap(50,1165
static inline void unlock_bitmap(62,1394
static void dump_ext(73,1640
#define dump_ext(dump_ext87,1998
static void read_extent(98,2243
static void write_extent(121,2905
static int decode_extent(141,3535
static void relse_ext(164,4146
static inline void set_cache(181,4414
static struct hfs_extent * find_ext(201,4963
static void delete_extent(307,7383
static struct hfs_extent *new_extent(372,9489
static void update_ext(424,10546
static int zero_blocks(445,10995
static void shrink_fork(469,11539
static void grow_fork(526,12915
int hfs_ext_compare(654,16137
void hfs_extent_adj(681,16699
int hfs_extent_map(713,17415
void hfs_extent_out(770,18739
void hfs_extent_in(785,19079
void hfs_extent_free(803,19477

fs/hfs/bins_del.c,139
void hfs_bnode_update_key(47,1566
void hfs_bnode_shift_right(92,2937
void hfs_bnode_shift_left(158,4856
int hfs_bnode_in_brec(220,6499

fs/hfs/dir.c,353
static int build_key(32,956
static inline void update_dirs_plus(76,2048
static inline void update_dirs_minus(106,2813
static inline void mark_inodes_deleted(137,3566
hfs_rwret_t hfs_dir_read(166,4228
int hfs_create(180,4638
int hfs_mkdir(225,5958
int hfs_mknod(270,7289
int hfs_unlink(290,7783
int hfs_rmdir(332,8848
int hfs_rename(392,10462

fs/hfs/binsert.c,319
static inline void hfs_btree_lock(21,619
static inline void hfs_btree_unlock(28,753
static void binsert_nonfull(60,1934
static void add_root(114,3541
static struct hfs_bnode_ref insert_empty_bnode(205,6171
static inline struct hfs_bnode_ref split(274,8279
static int binsert(371,11564
int hfs_binsert(469,14279

fs/hfs/bnode.c,227
int bnode_count 27,927
void hfs_bnode_delete(51,1516
void hfs_bnode_read(113,3822
void hfs_bnode_lock(202,6563
void hfs_bnode_relse(374,11201
struct hfs_bnode_ref hfs_bnode_find(430,13156
void hfs_bnode_commit(526,15294

fs/hfs/bitmap.c,138
hfs_u16 hfs_vbm_count_free(43,1283
hfs_u16 hfs_vbm_search_free(111,3458
int hfs_set_vbm_bits(206,6048
int hfs_clear_vbm_bits(322,9083

fs/hfs/hfs.h,3147
#define _HFS_H11,246
#define HFS_NEW(HFS_NEW15,293
#define HFS_DELETE(HFS_DELETE16,345
#define HFS_DD_BLK	20,485
#define HFS_PMAP_BLK	21,537
#define HFS_MDB_BLK	22,596
#define HFS_DRVR_DESC_MAGIC	25,699
#define HFS_OLD_PMAP_MAGIC	26,768
#define HFS_NEW_PMAP_MAGIC	27,837
#define HFS_SUPER_MAGIC	28,906
#define HFS_MFS_SUPER_MAGIC	29,972
#define HFS_FILE_MAGIC	32,1088
#define HFS_DIR_MAGIC	33,1119
#define HFS_MDB_MAGIC	34,1149
#define HFS_EXT_MAGIC	35,1179
#define HFS_BREC_MAGIC	36,1236
#define HFS_BTREE_MAGIC	37,1294
#define HFS_BNODE_MAGIC	38,1326
#define HFS_SECTOR_SIZE	41,1395
#define HFS_SECTOR_SIZE_BITS	42,1455
#define HFS_NAMELEN	43,1520
#define HFS_NAMEMAX	44,1588
#define HFS_BM_MAXBLOCKS	45,1651
#define HFS_BM_BPB 46,1717
#define HFS_MAX_VALENCE	47,1794
#define HFS_FORK_MAX	48,1826
#define HFS_SB_ATTRIB_HLOCK 53,1958
#define HFS_SB_ATTRIB_CLEAN 54,1993
#define HFS_SB_ATTRIB_SPARED 55,2028
#define HFS_SB_ATTRIB_SLOCK 56,2064
#define HFS_USHRT_MAX	59,2116
#define HFS_POR_CNID	62,2180
#define HFS_ROOT_CNID	63,2228
#define HFS_EXT_CNID	64,2273
#define HFS_CAT_CNID	65,2317
#define HFS_BAD_CNID	66,2361
#define HFS_ALLOC_CNID 67,2406
#define HFS_START_CNID 68,2467
#define HFS_ATTR_CNID 69,2525
#define HFS_EXCH_CNID 70,2586
#define HFS_CDR_DIR 73,2684
#define HFS_CDR_FIL 74,2740
#define HFS_CDR_THD 75,2782
#define HFS_CDR_FTH 76,2845
#define HFS_FK_DATA	79,2955
#define HFS_FK_RSRC	80,2980
#define HFS_FIL_LOCK	83,3040
#define HFS_FIL_THD	84,3066
#define HFS_FIL_USED	85,3091
#define HFS_LOCK_NONE	88,3177
#define HFS_LOCK_READ	89,3220
#define HFS_LOCK_RESRV	90,3272
#define HFS_LOCK_WRITE	91,3333
#define HFS_LOCK_MASK	92,3404
#define HFS_BPATH_FIRST	95,3473
#define HFS_BPATH_OVERFLOW	96,3505
#define HFS_BPATH_UNDERFLOW	97,3539
#define HFS_BPATH_MASK	98,3574
#define HFS_BFIND_EXACT	101,3634
#define HFS_BFIND_LOCK	102,3666
#define HFS_BFIND_WRITE 105,3726
#define HFS_BFIND_READ_EQ 106,3800
#define HFS_BFIND_READ_LE 107,3858
#define HFS_BFIND_INSERT 108,3900
#define HFS_BFIND_DELETE 109,3978
struct hfs_name hfs_name115,4191
} hfs_point_t;hfs_point_t123,4299
} hfs_rect_t;hfs_rect_t130,4406
} hfs_finfo_t;hfs_finfo_t138,4554
} hfs_fxinfo_t;hfs_fxinfo_t145,4681
} hfs_dinfo_t;hfs_dinfo_t152,4801
} hfs_dxinfo_t;hfs_dxinfo_t160,4952
union hfs_finder_info hfs_finder_info162,4969
struct hfs_bkey hfs_bkey174,5155
#define	HFS_BKEY(HFS_BKEY180,5323
struct hfs_cat_key hfs_cat_key183,5436
struct hfs_ext_key hfs_ext_key191,5695
struct hfs_mdb hfs_mdb205,6045
struct hfs_extent hfs_extent275,8365
struct hfs_dir hfs_dir296,9128
struct hfs_fork hfs_fork313,9512
struct hfs_file hfs_file330,10060
struct hfs_cat_entry hfs_cat_entry346,10402
#define HFS_DIRTY 368,11000
#define HFS_KEYDIRTY 369,11027
#define HFS_LOCK 370,11054
#define HFS_DELETED 371,11081
struct hfs_bnode_ref hfs_bnode_ref378,11214
struct hfs_belem hfs_belem390,11507
struct hfs_brec hfs_brec401,11690
*hfs_lookup_dentry(499,15440
static __inline__ void hfs_drop_special(512,15745
extern struct dentry_operations hfs_dentry_operations;531,16160

fs/hfs/bitops.c,72
hfs_u32 hfs_find_zero_bit(34,1017
hfs_u32 hfs_count_zero_bits(84,2066

fs/hfs/inode.c,255
#define HFS_VALID_MODE_BITS 26,797
static void init_file_inode(35,1012
void hfs_put_inode(74,2112
int hfs_notify_change(105,3122
struct inode *hfs_iget(217,6982
void hfs_cap_ifill(292,9185
void hfs_dbl_ifill(340,10753
void hfs_nat_ifill(381,12048

fs/hfs/string.c,189
static unsigned char caseorder[34,1119
static unsigned char casefold[60,2612
unsigned int hfs_strhash(84,4070
int hfs_strcmp(101,4526
int hfs_streq(120,4912
void hfs_tolower(138,5229

fs/hfs/sysdep.c,244
struct dentry_operations hfs_dentry_operations 25,859
hfs_buffer hfs_buffer_get(41,1374
static int hfs_hash_dentry(63,1922
static int hfs_compare_dentry(73,2151
static void hfs_dentry_iput(84,2380
static int hfs_revalidate_dentry(92,2593

fs/hfs/brec.c,216
static inline int first(25,667
static inline int overflow(36,905
static inline int underflow(51,1372
struct hfs_belem *hfs_brec_next(91,2803
void hfs_brec_lock(155,4709
struct hfs_belem *hfs_brec_init(200,6264

fs/hfs/version.c,31
const char hfs_version[10,219

fs/hfs/btree.c,142
static void hfs_bnode_ditch(49,1659
void hfs_btree_free(96,2975
struct hfs_btree * hfs_btree_init(156,4976
void hfs_btree_commit(291,8657

fs/hfs/hfs_btree.h,1066
#define _HFS_BTREE_H14,350
#define HFS_NOT_STICKY	21,495
#define HFS_STICKY	22,520
#define HFS_CACHELEN	25,601
#define ndIndxNode	32,775
#define ndHdrNode	33,830
#define ndMapNode	34,889
#define ndLeafNode	35,957
#define bhash(bhash40,1141
#define ROUND(ROUND43,1253
#define RECTBL(RECTBL46,1378
struct BTHdrRec BTHdrRec63,1969
struct NodeDescriptor NodeDescriptor89,3065
typedef int (*hfs_cmpfn)hfs_cmpfn105,3685
struct hfs_bnode hfs_bnode118,4088
struct hfs_btree hfs_btree160,5431
extern inline hfs_u16 bnode_offset(194,6496
extern inline hfs_u16 bnode_rsize(199,6716
extern inline hfs_u16 bnode_end(203,6920
extern inline hfs_u16 bnode_freespace(207,7113
extern inline void *bnode_datastart(213,7382
extern inline void *bnode_dataend(217,7600
extern inline void *bnode_key(221,7793
extern inline void *belem_key(223,7936
extern inline void *brec_key(225,8046
extern inline void *bkey_record(229,8199
extern inline void *bnode_record(231,8308
extern inline void *belem_record(233,8424
extern inline void *brec_record(235,8528

fs/hfs/part_tbl.c,223
struct hfs_drvr_desc hfs_drvr_desc32,1089
struct new_pmap new_pmap44,1417
struct old_pmap old_pmap73,2354
static int parse_new_part_table(90,2725
static int parse_old_part_table(140,3953
int hfs_part_find(170,4709

fs/hfs/trans.c,473
static char hex[40,1429
static unsigned char latin2mac_map[49,1737
static unsigned char mac2latin_map[55,1910
static inline const unsigned char dehex(81,2900
int hfs_mac2nat(110,3789
int hfs_mac2cap(152,4959
int hfs_mac2eight(193,6165
int hfs_mac2seven(235,7411
int hfs_mac2alpha(276,8649
int hfs_mac2triv(317,9792
int hfs_mac2latin(360,11298
void hfs_colon2mac(398,12284
void hfs_prcnt2mac(439,13353
void hfs_triv2mac(479,14293
void hfs_latin2mac(512,15170

fs/adfs/dir.c,465
static ssize_t adfs_dirread 13,194
static struct file_operations adfs_dir_operations 21,370
struct inode_operations adfs_dir_inode_operations 41,871
unsigned int adfs_val 62,1377
static unsigned int adfs_time 79,1602
int adfs_readname 96,2025
int adfs_dir_read_parent 115,2284
int adfs_dir_read 146,2877
int adfs_dir_check 178,3522
void adfs_dir_free 199,4105
int adfs_dir_get 207,4233
int adfs_dir_find_entry 241,5244
static int adfs_readdir 274,6178

fs/adfs/inode.c,471
#define inode_frag(inode_frag25,526
#define inode_idx(inode_idx26,564
#define inode_dirindex(inode_dirindex27,603
#define frag_id(frag_id29,659
#define off(off30,701
static inline int adfs_inode_validate_no 32,796
int adfs_inode_validate 43,1133
unsigned long adfs_inode_generate 51,1357
unsigned long adfs_inode_objid 62,1545
int adfs_bmap 74,1836
unsigned int adfs_parent_bmap 103,2494
static int adfs_atts2mode(123,3083
void adfs_read_inode 159,4066

fs/adfs/file.c,119
static struct file_operations adfs_file_operations 34,662
struct inode_operations adfs_file_inode_operations 51,1113

fs/adfs/super.c,476
void adfs_error(29,667
static unsigned char adfs_calczonecheck(43,1007
static int adfs_checkmap(67,1516
static struct super_operations adfs_sops 87,2014
static void adfs_put_super(99,2161
static int parse_options(110,2387
static int adfs_remount(157,3609
struct super_block *adfs_read_super(162,3719
static int adfs_statfs(326,8580
static struct file_system_type adfs_fs_type 385,10385
__initfunc(389,10485
int init_module(395,10583
void cleanup_module(400,10634

fs/adfs/map.c,130
adfs_convert_map_to_sector 12,172
adfs_convert_sector_to_map 22,417
static int lookup_zone 31,635
int adfs_map_lookup 73,1683

fs/adfs/namei.c,91
static int adfs_match 19,352
static int adfs_find_entry 40,787
int adfs_lookup 101,2118

fs/ntfs/attr.c,403
new_attr(22,423
ntfs_make_attr_resident(72,1619
ntfs_insert_run(85,1885
int ntfs_extend_attr(106,2511
ntfs_make_attr_nonresident(149,3574
ntfs_attr_allnonresident(171,4091
int ntfs_resize_attr(187,4471
int ntfs_create_attr(268,6713
ntfs_process_runs(322,8030
int ntfs_insert_attribute(361,8978
ntfs_read_zero(415,10467
int ntfs_read_compressed(430,10722
int ntfs_write_compressed(548,13464

fs/ntfs/dir.c,1069
static char I30[19,268
int ntfs_check_index_record(24,465
static inline int ntfs_is_top(30,613
static int ntfs_pop(35,683
static inline unsigned int ntfs_top(58,1140
static ntfs_u64 ntfs_push(63,1199
static void ntfs_display_stack(74,1482
static inline int ntfs_entry_has_subnodes(85,1683
static inline int ntfs_entry_is_used(91,1827
static int ntfs_allocate_index_block(96,1924
static int ntfs_index_writeback(203,4669
static int ntfs_split_record(240,5630
static int ntfs_dir_insert(330,8125
ntfs_split_indexroot(367,9196
static int ntfs_copyresult(440,11057
static inline unsigned short ntfs_my_toupper(448,11221
static int ntfs_my_strcmp(457,11463
static int ntfs_getdir_record(479,12206
static int ntfs_descend(515,13174
ntfs_getdir_iterate_byposition(538,13857
static int ntfs_getdir_iterate(607,15775
int ntfs_getdir(678,18019
int ntfs_getdir_byposition(712,19038
int ntfs_getdir_byname(719,19216
int ntfs_getdir_unsorted(725,19314
int ntfs_dir_add(855,22548
int ntfs_dir_add1(885,23351
add_index_root 924,24468
ntfs_mkdir(956,25334

fs/ntfs/fs.c,1453
static struct inode_operations ntfs_dir_inode_operations;33,614
#define ITEM_SIZE 35,673
static void ntfs_putuser(38,730
struct ntfs_getuser_update_vm_s{ntfs_getuser_update_vm_s45,878
static void ntfs_getuser_update_vm 51,967
ntfs_read(62,1240
ntfs_write(90,1935
struct ntfs_filldir{ntfs_filldir131,3023
static int ntfs_printcb(141,3168
static int ntfs_readdir(210,5100
static int simple_getbool(259,6638
static int parse_options(276,6971
static int ntfs_lookup(376,9410
static struct file_operations ntfs_file_operations_nommap 406,10238
static struct inode_operations ntfs_inode_operations_nobmap 428,10639
ntfs_create(453,11169
_linux_ntfs_mkdir(520,12650
ntfs_bmap(581,14012
static struct file_operations ntfs_file_operations 591,14343
static struct inode_operations ntfs_inode_operations 613,14739
static struct file_operations ntfs_dir_operations 636,15213
static struct inode_operations ntfs_dir_inode_operations 654,15582
static void ntfs_read_inode(690,16465
ntfs_write_inode 772,18522
static void _ntfs_clear_inode(779,18678
static void ntfs_put_super(797,19124
static int ntfs_statfs(816,19517
static int ntfs_remount_fs(845,20279
static struct super_operations ntfs_super_operations 853,20497
struct super_block * ntfs_read_super(879,21218
static struct file_system_type ntfs_fs_type 1008,24994
__initfunc(1031,25614
EXPORT_NO_SYMBOLS;1053,26299
int init_module(1070,26896
void cleanup_module(1076,27022

fs/ntfs/attr.h,0

fs/ntfs/inode.c,1145
} ntfs_mft_record;ntfs_mft_record25,445
} ntfs_disk_inode;ntfs_disk_inode31,532
fill_mft_header(34,564
ntfs_find_attr(57,1522
ntfs_extend_mft(85,2101
void ntfs_insert_mft_attributes(156,4402
static int parse_attributes(191,5268
static void ntfs_load_attributes(220,5924
int ntfs_init_inode(263,7123
void ntfs_clear_inode(290,7799
int ntfs_check_mft_record(319,8367
int ntfs_allocate_attr_number(326,8635
ntfs_get_attr(338,8997
ntfs_get_attr_size(368,9825
ntfs_attr_is_resident(376,9983
int ntfs_decompress_run(395,10640
int ntfs_readwrite_attr(441,12191
int ntfs_read_attr(542,14520
int ntfs_write_attr(553,14772
int ntfs_vcn_to_lcn(564,15019
allocate_store(591,15766
deallocate_store(618,16348
layout_runs(629,16551
count_runs(713,18575
layout_attr(726,18829
layout_inode(794,20677
int ntfs_update_inode(861,22346
void ntfs_decompress(914,23613
ntfs_set_bit 998,25165
ntfs_clear_bit 1006,25274
new_inode 1015,25458
add_mft_header 1060,26362
add_standard_information 1074,26645
add_filename 1097,27290
add_security 1144,28470
add_data 1180,29281
int ntfs_alloc_inode 1189,29521
ntfs_alloc_file(1261,31317

fs/ntfs/support.c,496
static char print_buf[25,400
void ntfs_debug(32,513
void *ntfs_malloc(48,821
void ntfs_free(61,1025
void ntfs_debug(68,1152
void *ntfs_malloc(73,1225
void ntfs_free(80,1318
void ntfs_bzero(87,1392
void ntfs_memcpy(95,1564
void ntfs_memmove(100,1653
void ntfs_error(106,1778
int ntfs_read_mft_record(117,1994
int ntfs_getput_clusters(155,2959
ntfs_time64_t ntfs_now(191,3855
static char uni2esc[200,4104
esc2uni(204,4221
int ntfs_dupuni2map(217,4446
int ntfs_dupmap2uni(279,5672

fs/ntfs/dir.h,235
#define ITERATE_SPLIT_DONE 8,85
enum ntfs_iterate_e ntfs_iterate_e10,120
    BY_POSITION,11,142
    BY_NAME,12,159
    DIR_INSERT13,172
typedef struct ntfs_iterate_s{ntfs_iterate_s17,240
} ntfs_iterate_s;ntfs_iterate_s32,607

fs/ntfs/super.c,532
int ntfs_fixup_record(32,930
int ntfs_init_volume(58,1549
ntfs_init_upcase(111,3249
#define UPCASE_LENGTH 114,3301
process_attrdef(125,3593
ntfs_init_attrdef(167,4840
int ntfs_load_special_files(196,5441
int ntfs_release_volume(235,6600
int ntfs_get_volumesize(249,6873
static int nc[268,7340
ntfs_get_free_cluster_count(271,7399
void ntfs_insert_fixups(310,8553
search_bits(332,9171
ntfs_set_bitrange(393,10177
ntfs_search_bits(454,11497
int ntfs_allocate_clusters(533,13061
int ntfs_deallocate_clusters(541,13247

fs/ntfs/util.c,576
# define EILSEQ	18,349
to_utf8(27,580
from_utf8(59,1242
static int ntfs_dupuni2utf8(97,2079
static int ntfs_duputf82uni(127,2822
static int ntfs_dupuni288591(153,3357
static int ntfs_dup885912uni(173,3777
int ntfs_encodeuni(188,4073
int ntfs_decodeuni(202,4516
void ntfs_put(216,4930
void ntfs_get(222,5047
void *ntfs_calloc(228,5163
void ntfs_uni2ascii(238,5343
void ntfs_ascii2uni(249,5515
int ntfs_uni_strncmp(259,5664
int ntfs_ua_strncmp(274,5874
ntfs_time_t ntfs_ntutc2unixutc(291,6172
ntfs_time64_t ntfs_unixutc2ntutc(339,7711
ntfs_indexname(347,7857

fs/ntfs/inode.h,0

fs/ntfs/support.h,407
#define DEBUG_OTHER	9,121
#define DEBUG_MALLOC	10,143
#define DEBUG_BSD 11,166
#define DEBUG_LINUX 12,192
#define DEBUG_DIR1 13,218
#define DEBUG_DIR2 14,244
#define DEBUG_DIR3 15,270
#define DEBUG_FILE1 16,296
#define DEBUG_FILE2 17,322
#define DEBUG_FILE3 18,348
#define DEBUG_NAME1 19,374
#define DEBUG_NAME2 20,400
#define ntfs_malloc(ntfs_malloc25,528
#define ntfs_free(ntfs_free26,580

fs/ntfs/macros.h,931
#define NTFS_FD(NTFS_FD8,102
#define NTFS_SB(NTFS_SB12,179
#define NTFS_SB2VOL(NTFS_SB2VOL13,234
#define NTFS_INO2VOL(NTFS_INO2VOL14,285
#define NTFS_LINO2NINO(NTFS_LINO2NINO15,339
#define NTFS_SB(NTFS_SB17,398
#define NTFS_SB2VOL(NTFS_SB2VOL18,455
#define NTFS_INO2VOL(NTFS_INO2VOL19,516
#define NTFS_LINO2NINO(NTFS_LINO2NINO20,587
#define NTFS_MNT(NTFS_MNT24,674
#define NTFS_MNT2VOL(NTFS_MNT2VOL25,726
#define NTFS_V2INO(NTFS_V2INO26,782
#define min(min30,923
#define max(max31,965
#define IS_MAGIC(IS_MAGIC34,1015
#define IS_MFT_RECORD(IS_MFT_RECORD35,1063
#define IS_NTFS_VOLUME(IS_NTFS_VOLUME36,1109
#define IS_INDEX_RECORD(IS_INDEX_RECORD37,1158
#define NTFS_SUPER_MAGIC	40,1237
#define NTFS_AFLAG_RO 42,1274
#define NTFS_AFLAG_HIDDEN 43,1308
#define NTFS_AFLAG_SYSTEM 44,1342
#define NTFS_AFLAG_ARCHIVE 45,1376
#define NTFS_AFLAG_COMPRESSED 46,1411
#define NTFS_AFLAG_DIR 47,1449

fs/ntfs/struct.h,633
#define ngt_dos 19,364
#define ngt_nt 21,460
#define ngt_posix 23,516
#define ngt_full 25,554
typedef struct ntfs_sb_info ntfs_volume;ntfs_volume28,603
typedef struct _ntfs_volume{_ntfs_volume30,650
}ntfs_volume;ntfs_volume78,2002
}ntfs_runlist;ntfs_runlist84,2087
typedef struct ntfs_attribute{ntfs_attribute86,2103
}ntfs_attribute;ntfs_attribute101,2391
typedef struct ntfs_inode_info ntfs_inode;ntfs_inode110,2777
typedef struct ntfs_inode{ntfs_inode112,2826
}ntfs_inode;ntfs_inode135,3487
typedef struct ntfs_io{ntfs_io138,3508
}ntfs_io;ntfs_io144,3700
} ntfs_attrlist_item;ntfs_attrlist_item154,3823

fs/ntfs/super.h,73
#define ALLOC_REQUIRE_LOCATION 9,139
#define ALLOC_REQUIRE_SIZE 10,172

fs/ntfs/sysctl.c,69
int ntdebug 16,216
void ntfs_sysctl(21,326
#define FS_NTFS 23,354

fs/ntfs/sysctl.h,87
extern int ntdebug;15,196
#define SYSCTL(SYSCTL19,245
#define SYSCTL(SYSCTL21,284

fs/ntfs/util.h,448
#define nct_utf8 10,173
#define nct_iso8859_1 12,231
#define nct_uni_xlate 14,295
#define nct_uni_xlate_vfat 16,387
#define nct_map 18,469
#define FILE_MFT 21,556
#define FILE_MFTMIRR 22,580
#define FILE_LOGFILE 23,604
#define FILE_VOLUME 24,628
#define FILE_ATTRDEF 25,652
#define FILE_ROOT 26,676
#define FILE_BITMAP 27,700
#define FILE_BOOT 28,724
#define FILE_BADCLUS 29,748
#define FILE_QUOTA 30,772
#define FILE_UPCASE 31,796

fs/ntfs/ntfsendian.h,1740
#define CPU_TO_LE16(CPU_TO_LE1614,237
#define CPU_TO_LE32(CPU_TO_LE3215,277
#define CPU_TO_LE64(CPU_TO_LE6416,317
#define LE16_TO_CPU(LE16_TO_CPU18,358
#define LE32_TO_CPU(LE32_TO_CPU19,398
#define LE64_TO_CPU(LE64_TO_CPU20,438
#define CPU_TO_LE16(CPU_TO_LE1626,510
#define CPU_TO_LE32(CPU_TO_LE3227,537
#define CPU_TO_LE64(CPU_TO_LE6428,564
#define LE16_TO_CPU(LE16_TO_CPU29,591
#define LE32_TO_CPU(LE32_TO_CPU30,618
#define LE64_TO_CPU(LE64_TO_CPU31,645
#define CPU_TO_LE16(CPU_TO_LE1639,788
#define CPU_TO_LE32(CPU_TO_LE3240,841
#define CPU_TO_LE64(CPU_TO_LE6442,950
#define LE16_TO_CPU(LE16_TO_CPU44,1017
#define LE32_TO_CPU(LE32_TO_CPU45,1055
#define LE64_TO_CPU(LE64_TO_CPU46,1093
#define NTFS_GETU8(NTFS_GETU856,1315
#define NTFS_GETU16(NTFS_GETU1657,1359
#define NTFS_GETU24(NTFS_GETU2458,1427
#define NTFS_GETU32(NTFS_GETU3259,1482
#define NTFS_GETU40(NTFS_GETU4060,1550
#define NTFS_GETU48(NTFS_GETU4861,1649
#define NTFS_GETU56(NTFS_GETU5662,1749
#define NTFS_GETU64(NTFS_GETU6463,1849
#define NTFS_PUTU8(NTFS_PUTU866,1959
#define NTFS_PUTU16(NTFS_PUTU1667,2011
#define NTFS_PUTU24(NTFS_PUTU2468,2075
#define NTFS_PUTU32(NTFS_PUTU3270,2198
#define NTFS_PUTU64(NTFS_PUTU6471,2262
#define NTFS_GETS8(NTFS_GETS874,2366
#define NTFS_GETS16(NTFS_GETS1675,2414
#define NTFS_GETS24(NTFS_GETS2476,2481
#define NTFS_GETS32(NTFS_GETS3277,2596
#define NTFS_GETS40(NTFS_GETS4078,2661
#define NTFS_GETS48(NTFS_GETS4879,2768
#define NTFS_GETS56(NTFS_GETS5680,2876
#define NTFS_GETS64(NTFS_GETS6481,2984
#define NTFS_PUTS8(NTFS_PUTS883,3041
#define NTFS_PUTS16(NTFS_PUTS1684,3086
#define NTFS_PUTS24(NTFS_PUTS2485,3132
#define NTFS_PUTS32(NTFS_PUTS3286,3178

fs/ntfs/ntfstypes.h,1098
#define NTFS_INTEGRAL_TYPES25,622
typedef u8  ntfs_u8;ntfs_u826,650
typedef u16 ntfs_u16;ntfs_u1627,671
typedef u32 ntfs_u32;ntfs_u3228,693
typedef u64 ntfs_u64;ntfs_u6429,715
typedef s8  ntfs_s8;ntfs_s830,737
typedef s16 ntfs_s16;ntfs_s1631,758
typedef s32 ntfs_s32;ntfs_s3232,780
typedef s64 ntfs_s64;ntfs_s6433,802
#define NTFS_WCHAR_T38,882
typedef u16 ntfs_wchar_t;ntfs_wchar_t39,903
#define NTFS_OFFSET_T43,976
typedef u64 ntfs_offset_t;ntfs_offset_t44,998
#define NTFS_TIME64_T48,1064
typedef u64 ntfs_time64_t;ntfs_time64_t49,1086
#define NTFS_CLUSTER_T53,1222
typedef u32 ntfs_cluster_t;ntfs_cluster_t54,1245
#define NTFS_PUTINUM(NTFS_PUTINUM60,1359
#define NTMODE_T66,1567
typedef __kernel_mode_t ntmode_t;ntmode_t67,1584
#define NTFS_UID_T70,1644
typedef __kernel_uid_t ntfs_uid_t;ntfs_uid_t71,1663
#define NTFS_GID_T74,1724
typedef __kernel_gid_t ntfs_gid_t;ntfs_gid_t75,1743
#define NTFS_SIZE_T78,1805
typedef __kernel_size_t ntfs_size_t;ntfs_size_t79,1825
#define NTFS_TIME_T82,1889
typedef __kernel_time_t ntfs_time_t;ntfs_time_t83,1909

fs/devpts/devpts_i.h,333
#define BUILDING_DEVPTS 17,533
struct devpts_sb_info devpts_sb_info20,589
#define DEVPTS_SUPER_MAGIC 34,802
#define DEVPTS_SBI_MAGIC 35,836
extern inline struct devpts_sb_info *SBI(37,875
extern struct inode_operations devpts_root_inode_operations;42,999
extern struct inode_operations devpts_device_inode_operations;43,1060

fs/devpts/inode.c,530
static struct super_block *mounts 29,780
static void devpts_put_super(31,823
static struct super_operations devpts_sops 63,1541
static int devpts_parse_options(76,1830
struct super_block *devpts_read_super(126,2854
static int devpts_statfs(246,5276
static void devpts_read_inode(261,5612
static void devpts_write_inode(294,6348
static struct file_system_type devpts_fs_type 298,6405
void devpts_pty_new(305,6500
void devpts_pty_kill(331,7133
__initfunc(350,7437
int init_module(358,7541
void cleanup_module(368,7707

fs/devpts/root.c,347
static struct file_operations devpts_root_operations 23,756
struct inode_operations devpts_root_inode_operations 41,1278
static struct dentry_operations devpts_dentry_operations 64,1998
#define genptsname(genptsname75,2269
static int devpts_root_readdir(77,2322
static int devpts_revalidate(122,3333
static int devpts_root_lookup(134,3567

include/asm-alpha/bitops.h,1288
#define _ALPHA_BITOPS_H2,24
extern __inline__ void set_bit(20,545
extern __inline__ void clear_bit(41,997
extern __inline__ void change_bit(62,1451
extern __inline__ unsigned long test_and_set_bit(79,1824
extern __inline__ unsigned long test_and_clear_bit(103,2323
extern __inline__ unsigned long test_and_change_bit(127,2826
extern __inline__ unsigned long test_bit(149,3307
extern inline unsigned long ffz_b(161,3689
extern inline unsigned long ffz(173,3911
extern inline int ffs(200,4563
extern __inline__ unsigned long hweight64(213,4818
#define hweight32(hweight32220,4970
#define hweight16(hweight16221,5021
#define hweight8(hweight8222,5068
#define hweight32(hweight32224,5119
#define hweight16(hweight16225,5161
#define hweight8(hweight8226,5203
extern inline unsigned long find_next_zero_bit(234,5343
#define find_first_zero_bit(find_first_zero_bit272,6092
#define ext2_set_bit 277,6193
#define ext2_clear_bit 278,6247
#define ext2_test_bit 279,6303
#define ext2_find_first_zero_bit 280,6349
#define ext2_find_next_zero_bit 281,6406
#define minix_set_bit(minix_set_bit284,6513
#define minix_clear_bit(minix_clear_bit285,6570
#define minix_test_bit(minix_test_bit286,6631
#define minix_find_first_zero_bit(minix_find_first_zero_bit287,6681

include/asm-alpha/system.h,1729
#define __ALPHA_SYSTEM_H2,25
#define BOOT_PCB	19,533
#define BOOT_ADDR	20,561
#define BOOT_SIZE	22,648
#define KERNEL_START	24,677
#define SWAPPER_PGD	25,721
#define INIT_STACK	26,764
#define EMPTY_PGT	27,806
#define EMPTY_PGE	28,847
#define ZERO_PGE	29,888
#define START_ADDR	31,929
struct el_common el_common39,1124
struct el_common_EV5_uncorrectable_mcheck el_common_EV5_uncorrectable_mcheck54,1705
extern void halt(98,4467
#define switch_to(switch_to100,4518
#define mb(mb107,4711
#define rmb(rmb110,4767
#define wmb(wmb113,4824
#define imb(imb116,4882
#define draina(draina119,4970
#define call_pal1(call_pal1140,5515
#define getipl(getipl152,5871
#define setipl(setipl163,6135
#define swpipl(swpipl173,6419
#define __cli(__cli185,6756
#define __sti(__sti186,6784
#define __save_flags(__save_flags187,6812
#define __save_and_cli(__save_and_cli188,6861
#define __restore_flags(__restore_flags189,6913
extern int global_irq_holder;193,6975
#define save_and_cli(save_and_cli195,7006
#define cli(cli202,7236
#define sti(sti203,7283
#define save_flags(save_flags204,7330
#define restore_flags(restore_flags205,7390
#define cli(cli209,7474
#define sti(sti210,7498
#define save_flags(save_flags211,7522
#define save_and_cli(save_and_cli212,7568
#define restore_flags(restore_flags213,7618
#define __tbi(__tbi220,7717
#define tbi(tbi231,8053
#define tbisi(tbisi232,8101
#define tbisd(tbisd233,8149
#define tbis(tbis234,8197
#define tbiap(tbiap235,8245
#define tbia(tbia236,8298
extern __inline__ unsigned long xchg_u32(244,8551
extern __inline__ unsigned long xchg_u64(262,8889
__xchg(291,9601
#define xchg(xchg303,9803
#define tas(tas305,9897

include/asm-alpha/io.h,2322
#define __ALPHA_IO_H2,21
#define __SLOW_DOWN_IO	8,146
#define SLOW_DOWN_IO	9,186
#define IDENT_ADDR 15,317
#define IDENT_ADDR 17,365
static inline void __set_hae(30,719
static inline void set_hae(43,977
static inline unsigned long virt_to_phys(52,1155
static inline void * phys_to_virt(60,1435
# define virt_to_bus(virt_to_bus86,2081
# define bus_to_virt(bus_to_virt87,2132
# define __inb	89,2184
# define __inw	90,2216
# define __inl	91,2248
# define __outb	92,2280
# define __outw	93,2314
# define __outl	94,2348
# define __readb(__readb96,2383
# define __readw(__readw97,2441
# define __readl(__readl98,2499
# define __readq(__readq99,2557
# define __writeb(__writeb100,2615
# define __writew(__writew101,2681
# define __writel(__writel102,2747
# define __writeq(__writeq103,2813
# define inb	105,2880
# define inw	106,2900
# define inl	107,2920
# define outb	108,2940
# define outw	109,2962
# define outl	110,2984
# define readb	112,3007
# define readw	113,3031
# define readl	114,3055
# define readq	115,3079
# define writeb	116,3103
# define writew	117,3129
# define writel	118,3155
# define writeq	119,3181
# define dense_mem(dense_mem121,3208
#define __WANT_IO_DEF126,3335
# define inb(inb186,5420
# define inw(inw189,5466
# define inl(inl192,5512
# define outb(outb195,5559
# define outw(outw198,5613
# define outl(outl201,5667
# define inb_p	205,5723
# define inw_p	208,5764
# define inl_p	211,5805
# define outb_p	215,5848
# define outw_p	218,5892
# define outl_p	221,5936
static inline void * ioremap(252,6949
static inline void iounmap(257,7051
# define readb(readb262,7109
# define readw(readw265,7175
# define readl(readl268,7241
# define readq(readq271,7307
# define writeb(writeb274,7374
# define writew(writew277,7449
# define writel(writel280,7524
# define writeq(writeq283,7599
#define memcpy_fromio(memcpy_fromio293,7885
#define memcpy_toio(memcpy_toio295,7973
#define memset_io(memset_io297,8057
#define __HAVE_ARCH_MEMSETW_IO300,8163
#define memsetw_io(memsetw_io301,8194
#define eth_io_copy_and_sum(eth_io_copy_and_sum320,9013
check_signature(324,9123
# define RTC_PORT(RTC_PORT349,9663
#  define RTC_PORT(RTC_PORT352,9744
#  define RTC_PORT(RTC_PORT354,9785
#define RTC_ALWAYS_BCD	357,9835

include/asm-alpha/string.h,500
#define __ALPHA_STRING_H__2,27
#define __HAVE_ARCH_MEMCPY13,259
#define memcpy 18,449
#define __HAVE_ARCH_MEMSET21,489
#define memset(memset26,669
#define memset(memset33,946
#define __HAVE_ARCH_STRCPY39,1118
#define __HAVE_ARCH_STRNCPY40,1145
#define __HAVE_ARCH_STRCAT41,1173
#define __HAVE_ARCH_STRNCAT42,1200
#define __HAVE_ARCH_STRCHR43,1228
#define __HAVE_ARCH_STRRCHR44,1255
#define __HAVE_ARCH_STRLEN45,1283
#define __HAVE_ARCH_MEMSETW51,1475
#define memsetw(memsetw54,1571

include/asm-alpha/delay.h,154
#define __ALPHA_DELAY_H2,24
__delay(13,208
__udelay(35,911
__small_const_udelay(45,1189
#define udelay(udelay56,1439
#define udelay(udelay63,1689

include/asm-alpha/dma.h,2906
#define _ASM_DMA_H19,654
#define dma_outb	25,747
#define dma_inb	26,769
#define MAX_DMA_CHANNELS	76,2931
#define ALPHA_XL_MAX_DMA_ADDRESS	92,3658
#define ALPHA_RUFFIAN_MAX_DMA_ADDRESS	93,3716
#define ALPHA_MAX_DMA_ADDRESS	94,3779
# define MAX_DMA_ADDRESS	97,3846
#  define MAX_DMA_ADDRESS	100,3929
#  define MAX_DMA_ADDRESS	102,4018
#  define MAX_DMA_ADDRESS	104,4082
#define IO_DMA1_BASE	109,4174
#define IO_DMA2_BASE	110,4237
#define DMA1_CMD_REG	113,4342
#define DMA1_STAT_REG	114,4396
#define DMA1_REQ_REG 115,4450
#define DMA1_MASK_REG	116,4517
#define DMA1_MODE_REG	117,4575
#define DMA1_CLEAR_FF_REG	118,4627
#define DMA1_TEMP_REG 119,4692
#define DMA1_RESET_REG	120,4761
#define DMA1_CLR_MASK_REG 121,4813
#define DMA1_MASK_ALL_REG 122,4870
#define DMA1_EXT_MODE_REG	123,4938
#define DMA2_CMD_REG	125,4989
#define DMA2_STAT_REG	126,5043
#define DMA2_REQ_REG 127,5097
#define DMA2_MASK_REG	128,5164
#define DMA2_MODE_REG	129,5222
#define DMA2_CLEAR_FF_REG	130,5274
#define DMA2_TEMP_REG 131,5339
#define DMA2_RESET_REG	132,5408
#define DMA2_CLR_MASK_REG 133,5460
#define DMA2_MASK_ALL_REG 134,5517
#define DMA2_EXT_MODE_REG	135,5585
#define DMA_ADDR_0 137,5636
#define DMA_ADDR_1 138,5704
#define DMA_ADDR_2 139,5741
#define DMA_ADDR_3 140,5778
#define DMA_ADDR_4 141,5815
#define DMA_ADDR_5 142,5852
#define DMA_ADDR_6 143,5889
#define DMA_ADDR_7 144,5926
#define DMA_CNT_0 146,5964
#define DMA_CNT_1 147,6030
#define DMA_CNT_2 148,6067
#define DMA_CNT_3 149,6104
#define DMA_CNT_4 150,6141
#define DMA_CNT_5 151,6178
#define DMA_CNT_6 152,6215
#define DMA_CNT_7 153,6252
#define DMA_PAGE_0 155,6290
#define DMA_PAGE_1 156,6355
#define DMA_PAGE_2 157,6392
#define DMA_PAGE_3 158,6429
#define DMA_PAGE_5 159,6466
#define DMA_PAGE_6 160,6503
#define DMA_PAGE_7 161,6540
#define DMA_HIPAGE_0	163,6578
#define DMA_HIPAGE_1	164,6621
#define DMA_HIPAGE_2	165,6664
#define DMA_HIPAGE_3	166,6707
#define DMA_HIPAGE_4	167,6750
#define DMA_HIPAGE_5	168,6793
#define DMA_HIPAGE_6	169,6836
#define DMA_HIPAGE_7	170,6879
#define DMA_MODE_READ	172,6923
#define DMA_MODE_WRITE	173,7007
#define DMA_MODE_CASCADE 174,7092
#define DMA_AUTOINIT	176,7168
extern spinlock_t  dma_spin_lock;178,7195
static __inline__ unsigned long claim_dma_lock(180,7230
static __inline__ void release_dma_lock(187,7368
static __inline__ void enable_dma(193,7526
static __inline__ void disable_dma(201,7680
static __inline__ void clear_dma_ff(216,8143
static __inline__ void set_dma_mode(225,8345
static __inline__ void set_dma_ext_mode(234,8577
static __inline__ void set_dma_page(246,8974
static __inline__ void set_dma_addr(284,9863
static __inline__ void set_dma_count(305,10674
static __inline__ int get_dma_residue(326,11440
#define KERNEL_HAVE_CHECK_DMA344,11987
extern int isa_dma_bridge_buggy;350,12101
#define isa_dma_bridge_buggy 352,12140

include/asm-alpha/types.h,957
#define _ALPHA_TYPES_H2,23
typedef unsigned int umode_t;umode_t12,370
typedef __signed__ char __s8;__s819,520
typedef unsigned char __u8;__u820,550
typedef __signed__ short __s16;__s1622,579
typedef unsigned short __u16;__u1623,611
typedef __signed__ int __s32;__s3225,642
typedef unsigned int __u32;__u3226,672
typedef __signed__ long long __s64;__s6434,843
typedef unsigned long long __u64;__u6435,879
typedef __signed__ long __s64;__s6440,928
typedef unsigned long __u64;__u6441,959
typedef signed char s8;s850,1095
typedef unsigned char u8;u851,1119
typedef signed short s16;s1653,1146
typedef unsigned short u16;u1654,1172
typedef signed int s32;s3256,1201
typedef unsigned int u32;u3257,1225
typedef signed long long s64;s6464,1343
typedef unsigned long long u64;u6465,1373
#define BITS_PER_LONG 66,1405
typedef signed long s64;s6470,1438
typedef unsigned long u64;u6471,1463
#define BITS_PER_LONG 72,1490

include/asm-alpha/irq.h,568
#define _ALPHA_IRQ_H2,21
# define NR_IRQS	19,408
# define NR_IRQS	26,635
# define NR_IRQS	31,777
# define NR_IRQS	39,1050
# define NR_IRQS	43,1148
# define NR_IRQS	47,1244
# define NR_IRQS	50,1300
# define NR_IRQS	53,1347
#define _PROBE_MASK(_PROBE_MASK61,1516
#define P2K_PROBE_MASK	64,1634
#define ALCOR_PROBE_MASK	67,1759
#define RUFFIAN_PROBE_MASK	70,1861
# define PROBE_MASK	73,1947
# define PROBE_MASK	75,2023
# define PROBE_MASK	77,2121
# define PROBE_MASK	79,2194
# define PROBE_MASK	81,2239
static __inline__ int irq_cannonicalize(85,2289

include/asm-alpha/bugs.h,31
static void check_bugs(18,261

include/asm-alpha/page.h,1291
#define _ALPHA_PAGE_H2,22
#define PAGE_SHIFT	5,87
#define PAGE_SIZE	6,109
#define PAGE_MASK	7,147
#define STRICT_MM_TYPECHECKS13,224
static inline void clear_page(22,523
static inline void copy_page(41,820
typedef struct { unsigned long pte; } pte_t;pte_t75,1424
typedef struct { unsigned long pmd; } pmd_t;pmd_t76,1469
typedef struct { unsigned long pgd; } pgd_t;pgd_t77,1514
typedef struct { unsigned long pgprot; } pgprot_t;pgprot_t78,1559
#define pte_val(pte_val80,1611
#define pmd_val(pmd_val81,1640
#define pgd_val(pgd_val82,1669
#define pgprot_val(pgprot_val83,1698
#define __pte(__pte85,1734
#define __pgd(__pgd86,1770
#define __pgprot(__pgprot87,1806
typedef unsigned long pte_t;pte_t93,1911
typedef unsigned long pmd_t;pmd_t94,1940
typedef unsigned long pgd_t;pgd_t95,1969
typedef unsigned long pgprot_t;pgprot_t96,1998
#define pte_val(pte_val98,2031
#define pmd_val(pmd_val99,2054
#define pgd_val(pgd_val100,2077
#define pgprot_val(pgprot_val101,2100
#define __pte(__pte103,2127
#define __pgd(__pgd104,2148
#define __pgprot(__pgprot105,2169
#define PAGE_ALIGN(PAGE_ALIGN111,2307
#define PAGE_OFFSET	114,2389
#define PAGE_OFFSET	116,2435
#define __pa(__pa119,2483
#define __va(__va120,2537
#define MAP_NR(MAP_NR121,2601

include/asm-alpha/segment.h,31
#define __ALPHA_SEGMENT_H2,26

include/asm-alpha/byteorder.h,280
#define _ALPHA_BYTEORDER_H2,27
static __inline__ __const__ __u32 ___arch__swab32(12,289
static __inline__ __const__ __u16 ___arch__swab16(35,920
#define __arch__swab32(__arch__swab3247,1126
#define __arch__swab16(__arch__swab1648,1171
#define __BYTEORDER_HAS_U64__52,1240

include/asm-alpha/processor.h,717
#define __ASM_ALPHA_PROCESSOR_H8,113
#define TASK_SIZE 13,208
#define TASK_UNMAPPED_BASE 18,341
#define EISA_bus 24,466
#define EISA_bus__is_a_macro 25,485
#define MCA_bus 26,544
#define MCA_bus__is_a_macro 27,562
} mm_segment_t;mm_segment_t31,658
struct thread_struct thread_struct33,675
#define INIT_MMAP 67,1474
#define INIT_TSS 70,1611
extern inline unsigned long thread_saved_pc(93,2317
#define copy_segments(copy_segments114,2847
#define release_segments(release_segments115,2899
#define forget_segments(forget_segments116,2946
#define alloc_task_struct(alloc_task_struct119,3047
#define free_task_struct(free_task_struct121,3141
#define init_task	123,3207
#define init_stack	124,3248

include/asm-alpha/unistd.h,10562
#define _ALPHA_UNISTD_H2,24
#define __NR_osf_syscall	4,49
#define __NR_exit	5,100
#define __NR_fork	6,123
#define __NR_read	7,146
#define __NR_write	8,169
#define __NR_osf_old_open	9,193
#define __NR_close	10,245
#define __NR_osf_wait4	11,269
#define __NR_osf_old_creat	12,297
#define __NR_link	13,350
#define __NR_unlink	14,373
#define __NR_osf_execve	15,398
#define __NR_chdir	16,449
#define __NR_fchdir	17,473
#define __NR_mknod	18,498
#define __NR_chmod	19,522
#define __NR_chown	20,546
#define __NR_brk	21,570
#define __NR_osf_getfsstat	22,592
#define __NR_lseek	23,645
#define __NR_getxpid	24,669
#define __NR_osf_mount	25,695
#define __NR_umount	26,723
#define __NR_setuid	27,748
#define __NR_getxuid	28,773
#define __NR_exec_with_loader	29,799
#define __NR_ptrace	30,855
#define __NR_osf_nrecvmsg	31,880
#define __NR_osf_nsendmsg	32,932
#define __NR_osf_nrecvfrom	33,984
#define __NR_osf_naccept	34,1037
#define __NR_osf_ngetpeername	35,1088
#define __NR_osf_ngetsockname	36,1144
#define __NR_access	37,1200
#define __NR_osf_chflags	38,1225
#define __NR_osf_fchflags	39,1276
#define __NR_sync	40,1328
#define __NR_kill	41,1351
#define __NR_osf_old_stat	42,1374
#define __NR_setpgid	43,1426
#define __NR_osf_old_lstat	44,1452
#define __NR_dup	45,1505
#define __NR_pipe	46,1527
#define __NR_osf_set_program_attributes	47,1550
#define __NR_osf_profil	48,1593
#define __NR_open	49,1644
#define __NR_osf_old_sigaction	50,1667
#define __NR_getxgid	51,1724
#define __NR_osf_sigprocmask	52,1750
#define __NR_osf_getlogin	53,1783
#define __NR_osf_setlogin	54,1835
#define __NR_acct	55,1887
#define __NR_sigpending	56,1910
#define __NR_ioctl	58,1940
#define __NR_osf_reboot	59,1964
#define __NR_osf_revoke	60,2015
#define __NR_symlink	61,2066
#define __NR_readlink	62,2092
#define __NR_execve	63,2119
#define __NR_umask	64,2144
#define __NR_chroot	65,2168
#define __NR_osf_old_fstat	66,2193
#define __NR_getpgrp	67,2246
#define __NR_getpagesize	68,2272
#define __NR_osf_mremap	69,2301
#define __NR_vfork	70,2352
#define __NR_stat	71,2376
#define __NR_lstat	72,2399
#define __NR_osf_sbrk	73,2423
#define __NR_osf_sstk	74,2472
#define __NR_mmap	75,2521
#define __NR_osf_old_vadvise	76,2582
#define __NR_munmap	77,2637
#define __NR_mprotect	78,2662
#define __NR_madvise	79,2689
#define __NR_vhangup	80,2715
#define __NR_osf_kmodcall	81,2741
#define __NR_osf_mincore	82,2793
#define __NR_getgroups	83,2844
#define __NR_setgroups	84,2872
#define __NR_osf_old_getpgrp	85,2900
#define __NR_setpgrp	86,2955
#define __NR_osf_setitimer	87,3009
#define __NR_osf_old_wait	88,3040
#define __NR_osf_table	89,3092
#define __NR_osf_getitimer	90,3142
#define __NR_gethostname	91,3173
#define __NR_sethostname	92,3202
#define __NR_getdtablesize	93,3231
#define __NR_dup2	94,3262
#define __NR_fstat	95,3285
#define __NR_fcntl	96,3309
#define __NR_osf_select	97,3333
#define __NR_poll	98,3362
#define __NR_fsync	99,3385
#define __NR_setpriority	100,3409
#define __NR_socket	101,3438
#define __NR_connect	102,3463
#define __NR_accept	103,3489
#define __NR_getpriority	104,3514
#define __NR_send	105,3543
#define __NR_recv	106,3566
#define __NR_sigreturn	107,3589
#define __NR_bind	108,3617
#define __NR_setsockopt	109,3640
#define __NR_listen	110,3669
#define __NR_osf_plock	111,3694
#define __NR_osf_old_sigvec	112,3744
#define __NR_osf_old_sigblock	113,3798
#define __NR_osf_old_sigsetmask	114,3854
#define __NR_sigsuspend	115,3912
#define __NR_osf_sigstack	116,3941
#define __NR_recvmsg	117,3971
#define __NR_sendmsg	118,3997
#define __NR_osf_old_vtrace	119,4023
#define __NR_osf_gettimeofday	120,4077
#define __NR_osf_getrusage	121,4111
#define __NR_getsockopt	122,4142
#define __NR_readv	124,4172
#define __NR_writev	125,4196
#define __NR_osf_settimeofday	126,4221
#define __NR_fchown	127,4255
#define __NR_fchmod	128,4280
#define __NR_recvfrom	129,4305
#define __NR_setreuid	130,4332
#define __NR_setregid	131,4359
#define __NR_rename	132,4386
#define __NR_truncate	133,4411
#define __NR_ftruncate	134,4438
#define __NR_flock	135,4466
#define __NR_setgid	136,4490
#define __NR_sendto	137,4515
#define __NR_shutdown	138,4540
#define __NR_socketpair	139,4567
#define __NR_mkdir	140,4596
#define __NR_rmdir	141,4620
#define __NR_osf_utimes	142,4644
#define __NR_osf_old_sigreturn	143,4673
#define __NR_osf_adjtime	144,4730
#define __NR_getpeername	145,4781
#define __NR_osf_gethostid	146,4810
#define __NR_osf_sethostid	147,4863
#define __NR_getrlimit	148,4916
#define __NR_setrlimit	149,4944
#define __NR_osf_old_killpg	150,4972
#define __NR_setsid	151,5026
#define __NR_quotactl	152,5051
#define __NR_osf_oldquota	153,5078
#define __NR_getsockname	154,5130
#define __NR_osf_pid_block	156,5160
#define __NR_osf_pid_unblock	157,5213
#define __NR_sigaction	159,5269
#define __NR_osf_sigwaitprim	160,5297
#define __NR_osf_nfssvc	161,5352
#define __NR_osf_getdirentries	162,5403
#define __NR_osf_statfs	163,5438
#define __NR_osf_fstatfs	164,5467
#define __NR_osf_asynch_daemon	166,5497
#define __NR_osf_getfh	167,5554
#define __NR_osf_getdomainname	168,5605
#define __NR_setdomainname	169,5640
#define __NR_osf_exportfs	171,5672
#define __NR_osf_alt_plock	173,5725
#define __NR_osf_getmnt	175,5779
#define __NR_osf_alt_sigpending	177,5831
#define __NR_osf_alt_setsid	178,5889
#define __NR_osf_swapon	180,5944
#define __NR_msgctl	181,5973
#define __NR_msgget	182,5998
#define __NR_msgrcv	183,6023
#define __NR_msgsnd	184,6048
#define __NR_semctl	185,6073
#define __NR_semget	186,6098
#define __NR_semop	187,6123
#define __NR_osf_utsname	188,6147
#define __NR_lchown	189,6176
#define __NR_osf_shmat	190,6201
#define __NR_shmctl	191,6229
#define __NR_shmdt	192,6254
#define __NR_shmget	193,6278
#define __NR_osf_mvalid	194,6303
#define __NR_osf_getaddressconf	195,6354
#define __NR_osf_msleep	196,6412
#define __NR_osf_mwakeup	197,6463
#define __NR_msync	198,6514
#define __NR_osf_signal	199,6538
#define __NR_osf_utc_gettime	200,6589
#define __NR_osf_utc_adjtime	201,6644
#define __NR_osf_security	203,6700
#define __NR_osf_kloadcall	204,6752
#define __NR_getpgid	206,6806
#define __NR_getsid	207,6832
#define __NR_sigaltstack	208,6857
#define __NR_osf_waitid	209,6886
#define __NR_osf_priocntlset	210,6937
#define __NR_osf_sigsendset	211,6992
#define __NR_osf_set_speculative	212,7046
#define __NR_osf_msfs_syscall	213,7105
#define __NR_osf_sysinfo	214,7161
#define __NR_osf_uadmin	215,7190
#define __NR_osf_fuser	216,7241
#define __NR_osf_proplist_syscall 217,7291
#define __NR_osf_ntp_adjtime	218,7332
#define __NR_osf_ntp_gettime	219,7387
#define __NR_osf_pathconf	220,7442
#define __NR_osf_fpathconf	221,7494
#define __NR_osf_uswitch	223,7548
#define __NR_osf_usleep_thread	224,7599
#define __NR_osf_audcntl	225,7634
#define __NR_osf_audgen	226,7685
#define __NR_sysfs	227,7736
#define __NR_osf_subsys_info	228,7760
#define __NR_osf_getsysinfo	229,7815
#define __NR_osf_setsysinfo	230,7847
#define __NR_osf_afs_syscall	231,7879
#define __NR_osf_swapctl	232,7934
#define __NR_osf_memcntl	233,7985
#define __NR_osf_fdatasync	234,8036
#define __NR_bdflush	240,8142
#define __NR_sethae	241,8168
#define __NR_mount	242,8193
#define __NR_old_adjtimex	243,8217
#define __NR_swapoff	244,8247
#define __NR_getdents	245,8273
#define __NR_create_module	246,8300
#define __NR_init_module	247,8331
#define __NR_delete_module	248,8360
#define __NR_get_kernel_syms	249,8391
#define __NR_syslog	250,8424
#define __NR_reboot	251,8449
#define __NR_clone	252,8474
#define __NR_uselib	253,8498
#define __NR_mlock	254,8523
#define __NR_munlock	255,8547
#define __NR_mlockall	256,8573
#define __NR_munlockall	257,8600
#define __NR_sysinfo	258,8629
#define __NR__sysctl	259,8655
#define __NR_idle	260,8681
#define __NR_oldumount	261,8704
#define __NR_swapon	262,8732
#define __NR_times	263,8757
#define __NR_personality	264,8781
#define __NR_setfsuid	265,8810
#define __NR_setfsgid	266,8837
#define __NR_ustat	267,8864
#define __NR_statfs	268,8888
#define __NR_fstatfs	269,8913
#define __NR_sched_setparam	270,8939
#define __NR_sched_getparam	271,8972
#define __NR_sched_setscheduler	272,9005
#define __NR_sched_getscheduler	273,9042
#define __NR_sched_yield	274,9079
#define __NR_sched_get_priority_max	275,9109
#define __NR_sched_get_priority_min	276,9149
#define __NR_sched_rr_get_interval	277,9189
#define __NR_afs_syscall	278,9228
#define __NR_uname	279,9258
#define __NR_nanosleep	280,9283
#define __NR_mremap	281,9312
#define __NR_nfsservctl	282,9338
#define __NR_setresuid	283,9368
#define __NR_getresuid	284,9397
#define __NR_pciconfig_read	285,9426
#define __NR_pciconfig_write	286,9459
#define __NR_query_module	287,9493
#define __NR_prctl	288,9524
#define __NR_pread	289,9549
#define __NR_pwrite	290,9574
#define __NR_rt_sigreturn	291,9600
#define __NR_rt_sigaction	292,9631
#define __NR_rt_sigprocmask	293,9662
#define __NR_rt_sigpending	294,9695
#define __NR_rt_sigtimedwait	295,9727
#define __NR_rt_sigqueueinfo	296,9761
#define __NR_rt_sigsuspend	297,9795
#define __NR_select	298,9827
#define __NR_gettimeofday	299,9853
#define __NR_settimeofday	300,9884
#define __NR_getitimer	301,9915
#define __NR_setitimer	302,9944
#define __NR_utimes	303,9973
#define __NR_getrusage	304,9999
#define __NR_wait4	305,10028
#define __NR_adjtimex	306,10053
#define __NR_getcwd	307,10081
#define __NR_capget	308,10107
#define __NR_capset	309,10133
#define __NR_sendfile	310,10159
#define _syscall_return(_syscall_return314,10235
#define _syscall_clobbers	317,10344
#define _syscall0(_syscall0321,10478
#define _syscall1(_syscall1339,10929
#define _syscall2(_syscall2359,11483
#define _syscall3(_syscall3381,12144
#define _syscall4(_syscall4406,12927
#define _syscall5(_syscall5432,13781
#define _syscall6(_syscall6461,14753
static inline long kernel_thread(501,16024
static inline void idle(507,16194
static inline int open(513,16287
static inline int dup(519,16417
static inline int close(524,16473
static inline off_t lseek(530,16574
static inline int _exit(536,16698
#define exit(exit541,16763
static inline int write(544,16835
static inline int read(550,16969
static inline int execve(556,17128
static inline int setsid(564,17335
static inline int sync(570,17420
static inline pid_t waitpid(576,17530
static inline pid_t wait(581,17648
static inline int delete_module(587,17776

include/asm-alpha/console.h,944
#define __AXP_CONSOLE_H2,24
#define CCB_GETC	7,92
#define CCB_PUTS	8,115
#define CCB_RESET_TERM	9,138
#define CCB_SET_TERM_INT	10,167
#define CCB_SET_TERM_CTL	11,197
#define CCB_PROCESS_KEYCODE	12,227
#define CCB_OPEN	14,261
#define CCB_CLOSE	15,284
#define CCB_IOCTL	16,308
#define CCB_READ	17,332
#define CCB_WRITE	18,355
#define CCB_SET_ENV	20,380
#define CCB_RESET_ENV	21,406
#define CCB_GET_ENV	22,434
#define CCB_SAVE_ENV	23,460
#define ENV_AUTO_ACTION	28,527
#define ENV_BOOT_DEV	29,557
#define ENV_BOOTDEF_DEV	30,584
#define ENV_BOOTED_DEV	31,614
#define ENV_BOOT_FILE	32,643
#define ENV_BOOTED_FILE	33,671
#define ENV_BOOT_OSFLAGS	34,701
#define ENV_BOOTED_OSFLAGS	35,731
#define ENV_BOOT_RESET	36,763
#define ENV_DUMP_DEV	37,792
#define ENV_ENABLE_AUDIT	38,819
#define ENV_LICENCE	39,849
#define ENV_CHAR_SET	40,875
#define ENV_LANGUAGE	41,902
#define ENV_TTY_DEV	42,929
extern long srm_printk(47,1052

include/asm-alpha/jensen.h,2100
#define __ALPHA_JENSEN_H2,25
#define AUX_IRQ 11,175
#define EISA_INTA	36,1169
#define EISA_FEPROM0	41,1245
#define EISA_FEPROM1	42,1296
#define EISA_VL82C106	47,1380
#define EISA_HAE	52,1514
#define EISA_SYSCTL	57,1598
#define EISA_SPARE	62,1684
#define EISA_MEM	67,1771
#define EISA_IO	72,1852
#define __EXTERN_INLINE 78,1944
#define __IO_EXTERN_INLINE79,1982
__EXTERN_INLINE unsigned long jensen_virt_to_bus(89,2221
__EXTERN_INLINE void * jensen_bus_to_virt(94,2322
#define JENSEN_HAE_ADDRESS	109,2705
#define JENSEN_HAE_MASK	110,2741
__EXTERN_INLINE void jensen_set_hae(112,2777
#define vuip	120,2955
static inline unsigned int jensen_local_inb(134,3413
static inline void jensen_local_outb(139,3535
static inline unsigned int jensen_bus_inb(145,3664
static inline void jensen_bus_outb(154,3867
#define jensen_is_local(jensen_is_local167,4194
__EXTERN_INLINE unsigned int jensen_inb(174,4480
__EXTERN_INLINE void jensen_outb(182,4643
__EXTERN_INLINE unsigned int jensen_inw(190,4810
__EXTERN_INLINE unsigned int jensen_inl(200,5025
__EXTERN_INLINE void jensen_outw(206,5158
__EXTERN_INLINE void jensen_outl(213,5319
__EXTERN_INLINE unsigned long jensen_readb(224,5494
__EXTERN_INLINE unsigned long jensen_readw(235,5740
__EXTERN_INLINE unsigned long jensen_readl(246,5988
__EXTERN_INLINE unsigned long jensen_readq(253,6154
__EXTERN_INLINE void jensen_writeb(265,6412
__EXTERN_INLINE void jensen_writew(272,6597
__EXTERN_INLINE void jensen_writel(279,6783
__EXTERN_INLINE void jensen_writeq(286,6954
__EXTERN_INLINE unsigned long jensen_dense_mem(298,7262
#define virt_to_bus	307,7380
#define bus_to_virt	308,7419
#define __inb	309,7458
#define __inw	310,7484
#define __inl	311,7510
#define __outb	312,7536
#define __outw	313,7564
#define __outl	314,7592
#define __readb	315,7620
#define __readw	316,7650
#define __writeb	317,7680
#define __writew	318,7711
#define __readl	319,7742
#define __readq	320,7772
#define __writel	321,7802
#define __writeq	322,7833
#define dense_mem	323,7864
#define inb(inb329,8029
#define outb(outb332,8104

include/asm-alpha/hwrpb.h,1788
#define __ALPHA_HWRPB_H2,24
#define INIT_HWRPB 4,49
#define EV3_CPU 11,206
#define EV4_CPU 12,273
#define LCA4_CPU 13,340
#define EV5_CPU 14,407
#define EV45_CPU 15,474
#define EV56_CPU	16,541
#define EV6_CPU	17,581
#define PCA56_CPU	18,620
#define PCA57_CPU	19,663
#define ST_ADU	26,805
#define ST_DEC_4000	27,850
#define ST_DEC_7000	28,895
#define ST_DEC_3000_500	29,940
#define ST_DEC_2000_300	30,992
#define ST_DEC_3000_300	31,1042
#define ST_DEC_2100_A500	32,1093
#define ST_DEC_AXPVME_64	33,1142
#define ST_DEC_AXPPCI_33	34,1196
#define ST_DEC_TLASER	35,1250
#define ST_DEC_2100_A50	36,1302
#define ST_DEC_MUSTANG	37,1352
#define ST_DEC_ALCOR	38,1402
#define ST_DEC_1000	39,1454
#define ST_DEC_EB64	40,1500
#define ST_DEC_EB66	41,1545
#define ST_DEC_EB64P	42,1590
#define ST_DEC_BURNS	43,1636
#define ST_DEC_RAWHIDE	44,1683
#define ST_DEC_K2	45,1733
#define ST_DEC_LYNX	46,1774
#define ST_DEC_XL	47,1819
#define ST_DEC_EB164	48,1865
#define ST_DEC_NORITAKE	49,1911
#define ST_DEC_CORTEX	50,1963
#define ST_DEC_MIATA	51,2011
#define ST_DEC_XXM	52,2064
#define ST_DEC_TAKARA	53,2107
#define ST_DEC_YUKON	54,2155
#define ST_DEC_TSUNAMI	55,2201
#define ST_DEC_WILDFIRE	56,2251
#define ST_DEC_CUSCO	57,2303
#define ST_UNOFFICIAL_BIAS	60,2370
#define ST_DTI_RUFFIAN	61,2401
struct pcb_struct pcb_struct63,2452
struct percpu_struct percpu_struct74,2647
struct procdesc_struct procdesc_struct101,3325
struct vf_map_struct vf_map_struct106,3410
struct crb_struct crb_struct112,3497
struct memclust_struct memclust_struct123,3784
struct memdesc_struct memdesc_struct133,3994
struct dsr_struct dsr_struct140,4137
struct hwrpb_struct hwrpb_struct146,4334
extern struct hwrpb_struct *hwrpb;190,6051
hwrpb_update_checksum(193,6106

include/asm-alpha/ptrace.h,197
#define _ASMAXP_PTRACE_H2,25
struct pt_regs pt_regs19,522
struct switch_stack switch_stack57,1357
#define user_mode(user_mode70,1604
#define instruction_pointer(instruction_pointer71,1645

include/asm-alpha/pgtable.h,6444
#define _ALPHA_PGTABLE_H2,25
#define flush_cache_all(flush_cache_all21,523
#define flush_cache_mm(flush_cache_mm22,568
#define flush_cache_range(flush_cache_range23,614
#define flush_cache_page(flush_cache_page24,673
#define flush_page_to_ram(flush_page_to_ram25,729
#define flush_icache_range(flush_icache_range26,780
#define __EXTERN_INLINE 34,970
#define __MMU_EXTERN_INLINE35,1008
ev4_flush_tlb_current(39,1065
ev4_flush_tlb_other(45,1145
ev5_flush_tlb_current(50,1213
ev5_flush_tlb_other(58,1362
ev4_flush_tlb_current_page(70,1614
ev5_flush_tlb_current_page(78,1800
# define flush_tlb_current	90,2025
# define flush_tlb_other	91,2083
# define flush_tlb_current_page	92,2137
#  define flush_tlb_current	95,2236
#  define flush_tlb_other	96,2287
#  define flush_tlb_current_page	97,2334
#  define flush_tlb_current	99,2401
#  define flush_tlb_other	100,2452
#  define flush_tlb_current_page	101,2499
static inline void flush_tlb(113,2698
static inline void flush_tlb_all(123,2877
static inline void flush_tlb_mm(131,2971
static inline void flush_tlb_page(147,3329
static inline void flush_tlb_range(162,3646
struct ipi_msg_flush_tb_struct ipi_msg_flush_tb_struct171,3862
extern struct ipi_msg_flush_tb_struct ipi_msg_flush_tb;181,4073
#define set_pte(set_pte194,4538
#define PMD_SHIFT	197,4678
#define PMD_SIZE	198,4726
#define PMD_MASK	199,4762
#define PGDIR_SHIFT	202,4869
#define PGDIR_SIZE	203,4921
#define PGDIR_MASK	204,4961
#define PTRS_PER_PTE	212,5191
#define PTRS_PER_PMD	213,5236
#define PTRS_PER_PGD	214,5281
#define USER_PTRS_PER_PGD	215,5330
#define PTRS_PER_PAGE	218,5447
#define VMALLOC_START	220,5494
#define VMALLOC_VMADDR(VMALLOC_VMADDR221,5536
#define VMALLOC_END	222,5583
#define _PAGE_VALID	227,5661
#define _PAGE_FOR	228,5688
#define _PAGE_FOW	229,5760
#define _PAGE_FOE	230,5833
#define _PAGE_ASM	231,5905
#define _PAGE_KRE	232,5930
#define _PAGE_URE	233,5999
#define _PAGE_KWE	234,6034
#define _PAGE_UWE	235,6102
#define _PAGE_DIRTY	238,6203
#define _PAGE_ACCESSED	239,6231
#define __DIRTY_BITS	252,6774
#define __ACCESS_BITS	253,6833
#define _PFN_MASK	255,6897
#define _PAGE_TABLE	257,6935
#define _PAGE_CHG_MASK	258,7000
#define PAGE_NONE	264,7231
#define PAGE_SHARED	265,7323
#define PAGE_COPY	266,7381
#define PAGE_READONLY	267,7449
#define PAGE_KERNEL	268,7521
#define _PAGE_NORMAL(_PAGE_NORMAL270,7600
#define _PAGE_P(_PAGE_P272,7669
#define _PAGE_S(_PAGE_S273,7740
#define __P000	283,8077
#define __P001	284,8135
#define __P010	285,8181
#define __P011	286,8215
#define __P100	287,8249
#define __P101	288,8295
#define __P110	289,8329
#define __P111	290,8355
#define __S000	292,8382
#define __S001	293,8440
#define __S010	294,8486
#define __S011	295,8520
#define __S100	296,8554
#define __S101	297,8600
#define __S110	298,8634
#define __S111	299,8660
#define BAD_PAGETABLE	313,9012
#define BAD_PAGE	314,9052
#define ZERO_PAGE	315,9082
#define BITS_PER_PTR	318,9176
#define PTR_MASK	321,9274
#define SIZEOF_PTR_LOG2	324,9355
#define PAGE_PTR(PAGE_PTR327,9423
#define PHYS_TWIDDLE(PHYS_TWIDDLE341,9926
#define PHYS_TWIDDLE(PHYS_TWIDDLE345,10056
extern inline pte_t mk_pte(352,10244
extern inline pte_t mk_pte_phys(355,10413
extern inline pte_t pte_modify(358,10595
extern inline void pmd_set(361,10742
extern inline void pgd_set(364,10894
extern inline unsigned long pte_page(367,11046
extern inline unsigned long pmd_page(370,11169
extern inline unsigned long pgd_page(373,11292
extern inline int pte_none(376,11415
extern inline int pte_present(377,11480
extern inline void pte_clear(378,11560
extern inline int pmd_none(380,11627
extern inline int pmd_bad(381,11692
extern inline int pmd_present(382,11785
extern inline void pmd_clear(383,11865
extern inline int pgd_none(385,11933
extern inline int pgd_bad(386,11998
extern inline int pgd_present(387,12091
extern inline void pgd_clear(388,12171
extern inline int pte_read(394,12331
extern inline int pte_write(395,12410
extern inline int pte_exec(396,12490
extern inline int pte_dirty(397,12569
extern inline int pte_young(398,12648
extern inline pte_t pte_wrprotect(400,12731
extern inline pte_t pte_rdprotect(401,12819
extern inline pte_t pte_exprotect(402,12907
extern inline pte_t pte_mkclean(403,12995
extern inline pte_t pte_mkold(404,13087
extern inline pte_t pte_mkwrite(405,13178
extern inline pte_t pte_mkread(406,13265
extern inline pte_t pte_mkexec(407,13351
extern inline pte_t pte_mkdirty(408,13437
extern inline pte_t pte_mkyoung(409,13526
extern inline void SET_PAGE_DIR(419,13909
#define PAGE_DIR_OFFSET(PAGE_DIR_OFFSET427,14186
#define pgd_offset_k(pgd_offset_k430,14308
extern inline pgd_t * pgd_offset(433,14419
extern inline pmd_t * pmd_offset(439,14624
extern inline pte_t * pte_offset(445,14833
extern struct pgtable_cache_struct pgtable_cache_struct456,15160
} quicklists;460,15284
#define quicklists 463,15325
#define pgd_quicklist 465,15380
#define pmd_quicklist 466,15425
#define pte_quicklist 467,15468
#define pgtable_cache_size 468,15513
extern __inline__ pgd_t *get_pgd_slow(470,15571
extern __inline__ pgd_t *get_pgd_fast(483,15914
extern __inline__ void free_pgd_fast(496,16179
extern __inline__ void free_pgd_slow(503,16352
extern __inline__ pmd_t *get_pmd_fast(510,16512
extern __inline__ void free_pmd_fast(522,16748
extern __inline__ void free_pmd_slow(529,16921
extern __inline__ pte_t *get_pte_fast(536,17083
extern __inline__ void free_pte_fast(548,17319
extern __inline__ void free_pte_slow(555,17492
#define pte_free_kernel(pte_free_kernel563,17649
#define pte_free(pte_free564,17697
#define pmd_free_kernel(pmd_free_kernel565,17739
#define pmd_free(pmd_free566,17787
#define pgd_free(pgd_free567,17829
#define pgd_alloc(pgd_alloc568,17871
extern inline pte_t * pte_alloc(570,17908
extern inline pmd_t * pmd_alloc(588,18298
#define pte_alloc_kernel	606,18687
#define pmd_alloc_kernel	607,18722
extern inline void set_pgdir(611,18800
extern pgd_t swapper_pg_dir[627,19205
extern inline void update_mmu_cache(633,19363
extern inline pte_t mk_swap_pte(642,19562
#define SWP_TYPE(SWP_TYPE645,19710
#define SWP_OFFSET(SWP_OFFSET646,19759
#define SWP_ENTRY(SWP_ENTRY647,19801
#define module_map	649,19871
#define module_unmap	650,19898
#define PageSkip(PageSkip653,20004
#define kern_addr_valid(kern_addr_valid654,20032

include/asm-alpha/fcntl.h,999
#define _ALPHA_FCNTL_H2,23
#define O_ACCMODE	6,158
#define O_RDONLY	7,183
#define O_WRONLY	8,207
#define O_RDWR	9,231
#define O_CREAT	10,254
#define O_TRUNC	11,294
#define O_EXCL	12,334
#define O_NOCTTY	13,373
#define O_NONBLOCK	15,414
#define O_APPEND	16,440
#define O_NDELAY	17,464
#define O_SYNC	18,492
#define FASYNC	19,515
#define O_DIRECT	20,573
#define O_DIRECTORY	21,648
#define O_NOFOLLOW	22,702
#define F_DUPFD	24,755
#define F_GETFD	25,784
#define F_SETFD	26,821
#define F_GETFL	27,858
#define F_SETFL	28,904
#define F_GETLK	29,923
#define F_SETLK	30,942
#define F_SETLKW	31,961
#define F_SETOWN	33,981
#define F_GETOWN	34,1020
#define F_SETSIG	35,1059
#define F_GETSIG	36,1099
#define FD_CLOEXEC	39,1164
#define F_RDLCK	42,1268
#define F_WRLCK	43,1287
#define F_UNLCK	44,1306
#define F_EXLCK	47,1371
#define F_SHLCK	48,1402
#define LOCK_SH	51,1507
#define LOCK_EX	52,1544
#define LOCK_NB	53,1584
#define LOCK_UN	55,1663
struct flock flock57,1701

include/asm-alpha/pal.h,950
#define __ALPHA_PAL_H2,22
#define PAL_halt	7,71
#define PAL_cflush	8,92
#define PAL_draina	9,115
#define PAL_bpt	10,138
#define PAL_bugchk	11,159
#define PAL_chmk	12,182
#define PAL_callsys	13,203
#define PAL_imb	14,227
#define PAL_rduniq	15,248
#define PAL_wruniq	16,271
#define PAL_gentrap	17,294
#define PAL_nphalt	18,318
#define PAL_swppal	23,374
#define PAL_mfpr_vptb	24,396
#define PAL_cserve	29,454
#define PAL_wripir	30,476
#define PAL_rdmces	31,498
#define PAL_wrmces	32,520
#define PAL_wrfen	33,542
#define PAL_wrvptptr	34,563
#define PAL_jtopal	35,587
#define PAL_swpctx	36,609
#define PAL_wrval	37,631
#define PAL_rdval	38,652
#define PAL_tbi	39,673
#define PAL_wrent	40,693
#define PAL_swpipl	41,714
#define PAL_rdps	42,736
#define PAL_wrkgp	43,756
#define PAL_wrusp	44,777
#define PAL_wrperfmon	45,798
#define PAL_rdusp	46,823
#define PAL_whami	47,844
#define PAL_rtsys	48,865
#define PAL_rti	49,886

include/asm-alpha/errno.h,3172
#define _ALPHA_ERRNO_H2,23
#define	EPERM	4,47
#define	ENOENT	5,95
#define	ESRCH	6,146
#define	EINTR	7,186
#define	EIO	8,234
#define	ENXIO	9,266
#define	E2BIG	10,316
#define	ENOEXEC	11,358
#define	EBADF	12,402
#define	ECHILD	13,442
#define	EDEADLK	14,486
#define	ENOMEM	15,542
#define	EACCES	16,581
#define	EFAULT	17,624
#define	ENOTBLK	18,661
#define	EBUSY	19,709
#define	EEXIST	20,757
#define	EXDEV	21,794
#define	ENODEV	22,836
#define	ENOTDIR	23,876
#define	EISDIR	24,918
#define	EINVAL	25,958
#define	ENFILE	26,1000
#define	EMFILE	27,1045
#define	ENOTTY	28,1090
#define	ETXTBSY	29,1132
#define	EFBIG	30,1173
#define	ENOSPC	31,1212
#define	ESPIPE	32,1261
#define	EROFS	33,1299
#define	EMLINK	34,1345
#define	EPIPE	35,1385
#define	EDOM	36,1421
#define	ERANGE	37,1480
#define	EAGAIN	38,1535
#define	EWOULDBLOCK	39,1570
#define	EINPROGRESS	40,1625
#define	EALREADY	41,1680
#define	ENOTSOCK	42,1736
#define	EDESTADDRREQ	43,1793
#define	EMSGSIZE	44,1852
#define	EPROTOTYPE	45,1895
#define	ENOPROTOOPT	46,1954
#define	EPROTONOSUPPORT	47,2006
#define	ESOCKTNOSUPPORT	48,2062
#define	EOPNOTSUPP	49,2121
#define	EPFNOSUPPORT	50,2195
#define	EAFNOSUPPORT	51,2255
#define	EADDRINUSE	52,2326
#define	EADDRNOTAVAIL	53,2377
#define	ENETDOWN	54,2440
#define	ENETUNREACH	55,2482
#define	ENETRESET	56,2534
#define	ECONNABORTED	57,2605
#define	ECONNRESET	58,2668
#define	ENOBUFS	59,2721
#define	EISCONN	60,2773
#define	ENOTCONN	61,2839
#define	ESHUTDOWN	62,2901
#define	ETOOMANYREFS	63,2974
#define	ETIMEDOUT	64,3039
#define	ECONNREFUSED	65,3087
#define	ELOOP	66,3136
#define	ENAMETOOLONG	67,3196
#define	EHOSTDOWN	68,3245
#define	EHOSTUNREACH	69,3285
#define	ENOTEMPTY	70,3332
#define	EUSERS	72,3380
#define	EDQUOT	73,3420
#define	ESTALE	74,3460
#define	EREMOTE	75,3507
#define	ENOLCK	77,3551
#define	ENOSYS	78,3602
#define	ENOMSG	80,3653
#define	EIDRM	81,3705
#define	ENOSR	82,3748
#define	ETIME	83,3797
#define	EBADMSG	84,3835
#define	EPROTO	85,3880
#define	ENODATA	86,3920
#define	ENOSTR	87,3964
#define	ENOPKG	89,4010
#define	EILSEQ	91,4058
#define	ECHRNG	94,4151
#define	EL2NSYNC	95,4204
#define	EL3HLT	96,4255
#define	EL3RST	97,4295
#define	ELNRNG	99,4335
#define	EUNATCH	100,4385
#define	ENOCSI	101,4440
#define	EL2HLT	102,4492
#define	EBADE	103,4532
#define	EBADR	104,4573
#define	EXFULL	105,4624
#define	ENOANO	106,4663
#define	EBADRQC	107,4698
#define	EBADSLT	108,4746
#define	EDEADLOCK	110,4787
#define	EBFONT	112,4814
#define	ENONET	113,4861
#define	ENOLINK	114,4917
#define	EADV	115,4966
#define	ESRMNT	116,5006
#define	ECOMM	117,5046
#define	EMULTIHOP	118,5099
#define	EDOTDOT	119,5146
#define	EOVERFLOW	120,5192
#define	ENOTUNIQ	121,5258
#define	EBADFD	122,5312
#define	EREMCHG	123,5367
#define	EUCLEAN	125,5418
#define	ENOTNAM	126,5470
#define	ENAVAIL	127,5525
#define	EISNAM	128,5582
#define	EREMOTEIO	129,5629
#define	ELIBACC	131,5675
#define	ELIBBAD	132,5741
#define	ELIBSCN	133,5805
#define	ELIBMAX	134,5864
#define	ELIBEXEC	135,5939
#define	ERESTART	136,6004
#define	ESTRPIPE	137,6075
#define ENOMEDIUM	139,6122
#define EMEDIUMTYPE	140,6166

include/asm-alpha/param.h,157
#define _ASM_ALPHA_PARAM_H2,27
# define HZ	5,66
#define EXEC_PAGESIZE	8,91
#define NGROUPS	11,135
#define NOGROUP	15,179
#define MAXHOSTNAMELEN	18,209

include/asm-alpha/floppy.h,1091
#define __ASM_ALPHA_FLOPPY_H11,289
#define fd_inb(fd_inb15,346
#define fd_outb(fd_outb16,381
#define fd_enable_dma(fd_enable_dma18,430
#define fd_disable_dma(fd_disable_dma19,485
#define fd_request_dma(fd_request_dma20,541
#define fd_free_dma(fd_free_dma21,606
#define fd_clear_dma_ff(fd_clear_dma_ff22,659
#define fd_set_dma_mode(fd_set_dma_mode23,716
#define fd_set_dma_addr(fd_set_dma_addr24,778
#define fd_set_dma_count(fd_set_dma_count25,853
#define fd_enable_irq(fd_enable_irq26,917
#define fd_disable_irq(fd_disable_irq27,972
#define fd_cacheflush(fd_cacheflush28,1028
#define fd_request_irq(fd_request_irq29,1075
#define fd_free_irq(fd_free_irq32,1225
__inline__ void virtual_dma_init(34,1286
static int FDC1 39,1363
static int FDC2 40,1388
#define FLOPPY0_TYPE 45,1477
#define FLOPPY1_TYPE 46,1500
#define N_FDC 48,1524
#define N_DRIVE 49,1540
#define FLOPPY_MOTOR_MASK 51,1559
#define __CROSS_64KB(__CROSS_64KB59,1793
# define CROSS_64KB(CROSS_64KB65,1997
#  define CROSS_64KB(CROSS_64KB68,2142
#  define CROSS_64KB(CROSS_64KB70,2194

include/asm-alpha/ioctl.h,879
#define _ALPHA_IOCTL_H2,23
#define _IOC_NRBITS	15,517
#define _IOC_TYPEBITS	16,539
#define _IOC_SIZEBITS	17,563
#define _IOC_DIRBITS	18,588
#define _IOC_NRMASK	20,612
#define _IOC_TYPEMASK	21,655
#define _IOC_SIZEMASK	22,702
#define _IOC_DIRMASK	23,749
#define _IOC_NRSHIFT	25,795
#define _IOC_TYPESHIFT	26,818
#define _IOC_SIZESHIFT	27,868
#define _IOC_DIRSHIFT	28,922
#define _IOC_NONE	35,1132
#define _IOC_READ	36,1153
#define _IOC_WRITE	37,1174
#define _IOC(_IOC39,1197
#define _IO(_IO47,1418
#define _IOR(_IOR48,1470
#define _IOW(_IOW49,1538
#define _IOWR(_IOWR50,1607
#define _IOC_DIR(_IOC_DIR53,1716
#define _IOC_TYPE(_IOC_TYPE54,1779
#define _IOC_NR(_IOC_NR55,1845
#define _IOC_SIZE(_IOC_SIZE56,1905
#define IOC_IN	60,2017
#define IOC_OUT	61,2063
#define IOC_INOUT	62,2109
#define IOCSIZE_MASK	63,2169
#define IOCSIZE_SHIFT	64,2224

include/asm-alpha/signal.h,2188
#define _ASMAXP_SIGNAL_H2,25
#define _NSIG	13,303
#define _NSIG_BPW	14,321
#define _NSIG_WORDS	15,342
typedef unsigned long old_sigset_t;old_sigset_t17,383
} sigset_t;sigset_t21,494
#define NSIG	26,584
typedef unsigned long sigset_t;sigset_t27,601
#define SIGHUP	36,806
#define SIGINT	37,825
#define SIGQUIT	38,844
#define SIGILL	39,864
#define SIGTRAP	40,883
#define SIGABRT	41,903
#define SIGEMT	42,923
#define SIGFPE	43,942
#define SIGKILL	44,961
#define SIGBUS	45,981
#define SIGSEGV	46,1000
#define SIGSYS	47,1020
#define SIGPIPE	48,1039
#define SIGALRM	49,1059
#define SIGTERM	50,1079
#define SIGURG	51,1099
#define SIGSTOP	52,1118
#define SIGTSTP	53,1138
#define SIGCONT	54,1158
#define SIGCHLD	55,1178
#define SIGTTIN	56,1198
#define SIGTTOU	57,1218
#define SIGIO	58,1238
#define SIGXCPU	59,1256
#define SIGXFSZ	60,1276
#define SIGVTALRM	61,1296
#define SIGPROF	62,1317
#define SIGWINCH	63,1337
#define SIGINFO	64,1357
#define SIGUSR1	65,1377
#define SIGUSR2	66,1397
#define SIGPOLL	68,1418
#define SIGPWR	69,1440
#define SIGIOT	70,1463
#define SIGRTMIN	73,1550
#define SIGRTMAX	74,1570
#define SA_ONSTACK	91,2225
#define SA_RESTART	92,2255
#define SA_NOCLDSTOP	93,2285
#define SA_NODEFER	94,2317
#define SA_RESETHAND	95,2347
#define SA_NOCLDWAIT	96,2379
#define SA_SIGINFO	97,2435
#define SA_ONESHOT	99,2466
#define SA_NOMASK	100,2498
#define SA_INTERRUPT	101,2527
#define SS_ONSTACK	106,2615
#define SS_DISABLE	107,2636
#define MINSIGSTKSZ	109,2658
#define SIGSTKSZ	110,2683
#define SA_PROBE	121,2953
#define SA_SAMPLE_RANDOM	122,2982
#define SA_SHIRQ	123,3018
#define SIG_BLOCK 126,3055
#define SIG_UNBLOCK 127,3111
#define SIG_SETMASK 128,3169
typedef void (*__sighandler_t)__sighandler_t131,3266
#define SIG_DFL	133,3304
#define SIG_IGN	134,3370
#define SIG_ERR	135,3426
struct osf_sigaction osf_sigaction138,3513
struct sigaction sigaction144,3607
struct k_sigaction k_sigaction150,3736
struct sigaction sigaction157,3887
#define sa_handler	166,4049
#define sa_sigaction	167,4083
typedef struct sigaltstack sigaltstack171,4147
} stack_t;stack_t175,4222
struct sigstack sigstack181,4430

include/asm-alpha/resource.h,370
#define _ALPHA_RESOURCE_H2,26
#define RLIMIT_CPU	8,80
#define RLIMIT_FSIZE	9,123
#define RLIMIT_DATA	10,170
#define RLIMIT_STACK	11,213
#define RLIMIT_CORE	12,258
#define RLIMIT_RSS	13,306
#define RLIMIT_NOFILE	14,356
#define RLIMIT_AS	15,412
#define RLIMIT_NPROC	16,462
#define RLIMIT_MEMLOCK	17,516
#define RLIM_NLIMITS	19,584
#define INIT_RLIMITS	23,628

include/asm-alpha/stat.h,101
#define _ALPHA_STAT_H2,22
struct __old_kernel_stat __old_kernel_stat4,45
struct stat stat22,414

include/asm-alpha/statfs.h,103
#define _ALPHA_STATFS_H2,24
typedef __kernel_fsid_t	fsid_t;fsid_t8,106
struct statfs statfs12,147

include/asm-alpha/termios.h,1102
#define _ALPHA_TERMIOS_H2,25
struct sgttyb sgttyb7,102
struct tchars tchars15,204
struct ltchars ltchars24,313
struct winsize winsize33,429
#define NCC 40,552
struct termio termio41,566
#define _VINTR	58,1251
#define _VQUIT	59,1268
#define _VERASE	60,1285
#define _VKILL	61,1303
#define _VEOF	62,1320
#define _VMIN	63,1336
#define _VEOL	64,1352
#define _VTIME	65,1368
#define _VEOL2	66,1385
#define _VSWTC	67,1402
#define N_TTY	70,1443
#define N_SLIP	71,1460
#define N_MOUSE	72,1478
#define N_PPP	73,1497
#define N_AX25	74,1514
#define N_X25	75,1532
#define N_6PACK	76,1566
#define N_MASC	77,1585
#define N_R3964	78,1652
#define N_PROFIBUS_FDL	79,1711
#define N_IRDA	80,1781
#define N_SMSBLOCK	81,1861
#define N_HDLC	82,1955
#define INIT_C_CC 91,2197
#define user_termio_to_kernel_termios(user_termio_to_kernel_termios97,2356
#define kernel_termios_to_user_termio(kernel_termios_to_user_termio129,3581
#define user_termios_to_kernel_termios(user_termios_to_kernel_termios153,4539
#define kernel_termios_to_user_termios(kernel_termios_to_user_termios156,4633

include/asm-alpha/unaligned.h,561
#define __ALPHA_UNALIGNED_H2,28
#define get_unaligned(get_unaligned7,119
#define put_unaligned(put_unaligned9,210
struct __una_u64 __una_u6424,624
struct __una_u32 __una_u3225,679
struct __una_u16 __una_u1626,734
extern inline unsigned long __uldq(32,828
extern inline unsigned long __uldl(51,1263
extern inline unsigned long __uldw(70,1697
extern inline void __ustq(93,2172
extern inline void __ustl(118,2744
extern inline void __ustw(143,3315
extern inline unsigned long __get_unaligned(168,3888
extern inline void __put_unaligned(190,4334

include/asm-alpha/a.out.h,786
#define __ALPHA_A_OUT_H__2,26
struct filehdrfilehdr15,350
struct aouthdraouthdr25,499
struct scnhdrscnhdr39,842
struct execexec53,1027
#define	a_info	64,1203
#define	a_text	65,1227
#define a_data	66,1252
#define a_bss	67,1277
#define a_entry	68,1301
#define a_textstart	69,1327
#define	a_datastart	70,1361
#define	a_bssstart	71,1395
#define	a_gprmask	72,1427
#define a_fprmask	73,1456
#define a_gpvalue	74,1485
#define N_TXTADDR(N_TXTADDR76,1515
#define N_DATADDR(N_DATADDR77,1554
#define N_BSSADDR(N_BSSADDR78,1593
#define N_DRSIZE(N_DRSIZE79,1631
#define N_TRSIZE(N_TRSIZE80,1653
#define N_SYMSIZE(N_SYMSIZE81,1675
#define AOUTHSZ	83,1699
#define SCNHSZ	84,1739
#define SCNROUND	85,1777
#define N_TXTOFF(N_TXTOFF87,1798
#define STACK_TOP 93,1962

include/asm-alpha/elf.h,727
#define __ASM_ALPHA_ELF_H2,26
#define ELF_NGREG	13,284
#define ELF_NFPREG	14,305
typedef unsigned long elf_greg_t;elf_greg_t16,328
typedef elf_greg_t elf_gregset_t[elf_gregset_t17,362
typedef double elf_fpreg_t;elf_fpreg_t19,408
typedef elf_fpreg_t elf_fpregset_t[elf_fpregset_t20,436
#define elf_check_arch(elf_check_arch25,570
#define ELF_CLASS	30,677
#define ELF_DATA	31,706
#define ELF_ARCH	32,735
#define USE_ELF_CORE_DUMP34,762
#define ELF_EXEC_PAGESIZE	35,788
#define ELF_ET_DYN_BASE	42,1128
#define ELF_PLAT_INIT(ELF_PLAT_INIT53,1583
#define ELF_CORE_COPY_REGS(ELF_CORE_COPY_REGS61,1984
#define ELF_HWCAP	105,3525
#define ELF_PLATFORM	120,4032
#define SET_PERSONALITY(SET_PERSONALITY129,4227

include/asm-alpha/checksum.h,160
#define _ALPHA_CHECKSUM_H2,26
#define csum_partial_copy_fromuser 54,1587
static inline unsigned short csum_fold(76,2207
#define _HAVE_ARCH_IPV6_CSUM83,2357

include/asm-alpha/socket.h,846
#define _ASM_SOCKET_H2,22
#define SOL_SOCKET	13,317
#define SO_DEBUG	15,344
#define SO_REUSEADDR	16,368
#define SO_KEEPALIVE	17,396
#define SO_DONTROUTE	18,424
#define SO_BROADCAST	19,452
#define SO_LINGER	20,480
#define SO_OOBINLINE	21,505
#define SO_TYPE	24,576
#define SO_ERROR	25,600
#define SO_SNDBUF	26,624
#define SO_RCVBUF	27,649
#define	SO_RCVLOWAT	28,674
#define	SO_SNDLOWAT	29,701
#define	SO_RCVTIMEO	30,728
#define	SO_SNDTIMEO	31,755
#define SO_NO_CHECK	34,842
#define SO_PRIORITY	35,865
#define SO_BSDCOMPAT	36,888
#define SO_PASSCRED	38,913
#define SO_PEERCRED	39,936
#define SO_BINDTODEVICE 40,959
#define SO_ATTACH_FILTER 43,1010
#define SO_DETACH_FILTER 44,1045
#define SO_SECURITY_AUTHENTICATION	47,1150
#define SO_SECURITY_ENCRYPTION_TRANSPORT	48,1189
#define SO_SECURITY_ENCRYPTION_NETWORK	49,1233

include/asm-alpha/shmparam.h,381
#define _ASMAXP_SHMPARAM_H2,27
#define SHM_RANGE_START	7,139
#define SHM_RANGE_END	8,177
#define _SHM_ID_BITS	27,710
#define SHM_ID_MASK	28,733
#define SHM_IDX_SHIFT	30,776
#define _SHM_IDX_BITS	31,813
#define SHM_IDX_MASK	32,838
#define SHMMAX 39,997
#define SHMMIN 40,1057
#define SHMMNI 41,1131
#define SHMALL	42,1198
#define	SHMLBA 44,1287
#define SHMSEG 45,1350

include/asm-alpha/sigcontext.h,69
#define _ASMAXP_SIGCONTEXT_H2,29
struct sigcontext sigcontext4,59

include/asm-alpha/smp.h,382
#define __ASM_SMP_H2,20
struct cpuinfo_alpha cpuinfo_alpha9,104
extern struct cpuinfo_alpha cpu_data[18,323
#define PROC_CHANGE_PENALTY 20,371
extern __volatile__ int cpu_number_map[22,407
static __inline__ unsigned char hard_smp_processor_id(26,536
#define smp_processor_id(smp_processor_id37,778
#define cpu_logical_map(cpu_logical_map38,826
#define NO_PROC_ID	42,884

include/asm-alpha/mman.h,697
#define __ALPHA_MMAN_H__2,25
#define PROT_READ	4,51
#define PROT_WRITE	5,97
#define PROT_EXEC	6,147
#define PROT_NONE	7,197
#define MAP_SHARED	9,252
#define MAP_PRIVATE	10,297
#define MAP_TYPE	11,349
#define MAP_FIXED	12,422
#define MAP_ANONYMOUS	13,476
#define _MAP_HASSEMAPHORE 16,609
#define _MAP_INHERIT	17,642
#define _MAP_UNALIGNED	18,670
#define MAP_GROWSDOWN	21,732
#define MAP_DENYWRITE	22,787
#define MAP_EXECUTABLE	23,831
#define MAP_LOCKED	24,893
#define MAP_NORESERVE	25,943
#define MS_ASYNC	27,1010
#define MS_SYNC	28,1063
#define MS_INVALIDATE	29,1113
#define MCL_CURRENT	31,1167
#define MCL_FUTURE	32,1232
#define MAP_ANON	35,1327
#define MAP_FILE	36,1358

include/asm-alpha/gentrap.h,734
#define _ASMAXP_GENTRAP_H2,26
#define GEN_INTOVF	9,221
#define GEN_INTDIV	10,266
#define GEN_FLTOVF	11,319
#define GEN_FLTDIV	12,359
#define GEN_FLTUND	13,407
#define GEN_FLTINV	14,448
#define GEN_FLTINE	15,495
#define GEN_DECOVF	16,542
#define GEN_DECDIV	17,601
#define GEN_DECINV	18,654
#define GEN_ROPRAND	19,707
#define GEN_ASSERTERR	20,754
#define GEN_NULPTRERR	21,802
#define GEN_STKOVF	22,853
#define GEN_STRLENERR	23,897
#define GEN_SUBSTRERR	24,949
#define GEN_RANGERR	25,997
#define GEN_SUBRNG	26,1039
#define GEN_SUBRNG1	27,1062
#define GEN_SUBRNG2	28,1088
#define GEN_SUBRNG3	29,1112
#define GEN_SUBRNG4	30,1172
#define GEN_SUBRNG5	31,1241
#define GEN_SUBRNG6	32,1265
#define GEN_SUBRNG7	33,1289

include/asm-alpha/reg.h,856
#define __reg_h__2,18
#define EF_V0	7,72
#define EF_T0	8,89
#define EF_T1	9,106
#define EF_T2	10,123
#define EF_T3	11,140
#define EF_T4	12,157
#define EF_T5	13,174
#define EF_T6	14,191
#define EF_T7	15,208
#define EF_S0	16,225
#define EF_S1	17,242
#define EF_S2	18,260
#define EF_S3	19,278
#define EF_S4	20,296
#define EF_S5	21,314
#define EF_S6	22,332
#define EF_A3	23,350
#define EF_A4	24,368
#define EF_A5	25,386
#define EF_T8	26,404
#define EF_T9	27,422
#define EF_T10	28,440
#define EF_T11	29,459
#define EF_RA	30,478
#define EF_T12	31,496
#define EF_AT	32,515
#define EF_SP	33,533
#define EF_PS	34,551
#define EF_PC	35,569
#define EF_GP	36,587
#define EF_A0	37,605
#define EF_A1	38,623
#define EF_A2	39,641
#define EF_SIZE	41,660
#define HWEF_SIZE	42,684
#define EF_SSIZE	44,742
#define CORE_REG(CORE_REG49,835

include/asm-alpha/user.h,212
#define _ALPHA_USER_H2,22
struct user user32,1324
#define NBPG	46,1905
#define UPAGES	47,1930
#define HOST_TEXT_START_ADDR	48,1949
#define HOST_DATA_START_ADDR	49,1993
#define HOST_STACK_END_ADDR	50,2037

include/asm-alpha/mmu_context.h,1092
#define __ALPHA_MMU_CONTEXT_H2,30
#define EV4_MAX_ASN 36,1272
#define EV5_MAX_ASN 37,1295
#define EV6_MAX_ASN 38,1319
# define MAX_ASN	41,1372
#  define MAX_ASN	44,1439
#  define MAX_ASN	46,1502
#  define MAX_ASN	48,1539
#define WIDTH_THIS_PROCESSOR	53,1600
extern unsigned long last_asn[61,1866
#define asn_cache 62,1899
#define WIDTH_THIS_PROCESSOR	65,1947
extern unsigned long asn_cache;73,2203
#define WIDTH_HARDWARE_ASN	76,2257
#define ASN_FIRST_VERSION 77,2286
#define HARDWARE_ASN_MASK 78,2365
#define __EXTERN_INLINE 93,2934
#define __MMU_EXTERN_INLINE94,2972
__EXTERN_INLINE void ev4_get_mmu_context(99,3087
__EXTERN_INLINE void ev5_get_mmu_context(104,3196
# define get_mmu_context	117,3517
#  define get_mmu_context	120,3604
#  define get_mmu_context	122,3658
extern inline void init_new_context(126,3721
extern inline void destroy_context(131,3802
#define MASK_CONTEXT(MASK_CONTEXT143,4063
#define MASK_CONTEXT(MASK_CONTEXT146,4203
#define MASK_CONTEXT(MASK_CONTEXT149,4304
__reload_tss(153,4384
reload_context(170,4742
activate_context(181,4966

include/asm-alpha/fpu.h,1215
#define __ASM_ALPHA_FPU_H2,26
#define FPCR_INVD	7,110
#define FPCR_DZED	8,170
#define FPCR_OVFD	9,236
#define FPCR_INV	10,298
#define FPCR_DZE	11,349
#define FPCR_OVF	12,399
#define FPCR_UNF	13,441
#define FPCR_INE	14,484
#define FPCR_IOV	15,525
#define FPCR_UNDZ	16,575
#define FPCR_UNFD	17,634
#define FPCR_INED	18,693
#define FPCR_SUM	19,750
#define FPCR_DYN_SHIFT	21,796
#define FPCR_DYN_CHOPPED 22,861
#define FPCR_DYN_MINUS	23,928
#define FPCR_DYN_NORMAL	24,997
#define FPCR_DYN_PLUS	25,1070
#define FPCR_DYN_MASK	26,1138
#define FPCR_MASK	28,1188
#define IEEE_TRAP_ENABLE_INV	40,1710
#define IEEE_TRAP_ENABLE_DZE	41,1765
#define IEEE_TRAP_ENABLE_OVF	42,1826
#define IEEE_TRAP_ENABLE_UNF	43,1879
#define IEEE_TRAP_ENABLE_INE	44,1933
#define IEEE_TRAP_ENABLE_MASK	45,1985
#define IEEE_STATUS_INV	50,2179
#define IEEE_STATUS_DZE	51,2214
#define IEEE_STATUS_OVF	52,2249
#define IEEE_STATUS_UNF	53,2284
#define IEEE_STATUS_INE	54,2319
#define IEEE_STATUS_MASK	56,2355
#define IEEE_SW_MASK	60,2485
#define IEEE_STATUS_TO_EXCSUM_SHIFT	62,2551
#define IEEE_INHERIT 64,2591
ieee_swcr_to_fpcr(72,2785
static inline unsigned long rdfpcr(91,3367
static inline void wrfpcr(102,3562

include/asm-alpha/atomic.h,813
#define _ALPHA_ATOMIC_H2,24
typedef struct { volatile int counter; } atomic_t;atomic_t13,257
typedef struct { int counter; } atomic_t;atomic_t15,314
#define ATOMIC_INIT(ATOMIC_INIT18,364
#define atomic_read(atomic_read20,411
#define atomic_set(atomic_set21,450
#define __atomic_fool_gcc(__atomic_fool_gcc28,688
extern __inline__ void atomic_add(36,934
extern __inline__ void atomic_sub(51,1252
extern __inline__ long atomic_add_return(69,1623
extern __inline__ long atomic_sub_return(86,1995
#define atomic_dec_return(atomic_dec_return103,2367
#define atomic_inc_return(atomic_inc_return104,2421
#define atomic_sub_and_test(atomic_sub_and_test106,2476
#define atomic_dec_and_test(atomic_dec_and_test107,2544
#define atomic_inc(atomic_inc109,2609
#define atomic_dec(atomic_dec110,2649

include/asm-alpha/ioctls.h,2382
#define _ASM_ALPHA_IOCTLS_H2,28
#define FIOCLEX	6,81
#define FIONCLEX	7,110
#define FIOASYNC	8,139
#define FIONBIO	9,176
#define FIONREAD	10,213
#define TIOCINQ	11,250
#define TIOCGETP	13,277
#define TIOCSETP	14,322
#define TIOCSETN	15,367
#define TIOCSETC	17,438
#define TIOCGETC	18,484
#define TCGETS	19,530
#define TCSETS	20,576
#define TCSETSW	21,622
#define TCSETSF	22,669
#define TCGETA	24,717
#define TCSETA	25,762
#define TCSETAW	26,807
#define TCSETAF	27,853
#define TCSBRK	29,900
#define TCXONC	30,929
#define TCFLSH	31,958
#define TIOCSWINSZ	33,988
#define TIOCGWINSZ	34,1038
#define	TIOCSTART	35,1088
#define	TIOCSTOP	36,1149
#define TIOCOUTQ 37,1208
#define TIOCGLTC	39,1281
#define TIOCSLTC	40,1329
#define TIOCSPGRP	41,1377
#define TIOCGPGRP	42,1415
#define TIOCEXCL	44,1454
#define TIOCNXCL	45,1478
#define TIOCSCTTY	46,1502
#define TIOCSTI	48,1528
#define TIOCMGET	49,1552
#define TIOCMBIS	50,1576
#define TIOCMBIC	51,1600
#define TIOCMSET	52,1624
# define TIOCM_LE	53,1648
# define TIOCM_DTR	54,1672
# define TIOCM_RTS	55,1697
# define TIOCM_ST	56,1722
# define TIOCM_SR	57,1746
# define TIOCM_CTS	58,1770
# define TIOCM_CAR	59,1795
# define TIOCM_RNG	60,1820
# define TIOCM_DSR	61,1845
# define TIOCM_CD	62,1870
# define TIOCM_RI	63,1898
#define TIOCGSOFTCAR	65,1927
#define TIOCSSOFTCAR	66,1955
#define TIOCLINUX	67,1983
#define TIOCCONS	68,2008
#define TIOCGSERIAL	69,2032
#define TIOCSSERIAL	70,2059
#define TIOCPKT	71,2086
# define TIOCPKT_DATA	72,2110
# define TIOCPKT_FLUSHREAD	73,2136
# define TIOCPKT_FLUSHWRITE	74,2166
# define TIOCPKT_STOP	75,2197
# define TIOCPKT_START	76,2223
# define TIOCPKT_NOSTOP	77,2250
# define TIOCPKT_DOSTOP	78,2278
#define TIOCNOTTY	81,2308
#define TIOCSETD	82,2333
#define TIOCGETD	83,2357
#define TCSBRKP	84,2381
#define TIOCTTYGSTRUCT	85,2442
#define TIOCSBRK	86,2498
#define TIOCCBRK	87,2547
#define TIOCGSID	88,2596
#define TIOCGPTN	89,2655
#define TIOCSPTLCK	90,2742
#define TIOCSERCONFIG	92,2805
#define TIOCSERGWILD	93,2834
#define TIOCSERSWILD	94,2862
#define TIOCGLCKTRMIOS	95,2890
#define TIOCSLCKTRMIOS	96,2920
#define TIOCSERGSTRUCT	97,2950
#define TIOCSERGETLSR 98,3005
# define TIOCSER_TEMT 100,3139
#define TIOCSERGETMULTI 101,3204
#define TIOCSERSETMULTI 102,3263
#define TIOCMIWAIT	104,3322
#define TIOCGICOUNT	105,3396

include/asm-alpha/posix_types.h,1499
#define _ALPHA_POSIX_TYPES_H2,29
typedef unsigned int	__kernel_dev_t;__kernel_dev_t10,237
typedef unsigned int	__kernel_ino_t;__kernel_ino_t11,274
typedef unsigned int	__kernel_mode_t;__kernel_mode_t12,311
typedef unsigned int	__kernel_nlink_t;__kernel_nlink_t13,349
typedef long		__kernel_off_t;__kernel_off_t14,388
typedef int		__kernel_pid_t;__kernel_pid_t15,418
typedef int		__kernel_ipc_pid_t;__kernel_ipc_pid_t16,447
typedef unsigned int	__kernel_uid_t;__kernel_uid_t17,480
typedef unsigned int	__kernel_gid_t;__kernel_gid_t18,517
typedef unsigned long	__kernel_size_t;__kernel_size_t19,554
typedef long		__kernel_ssize_t;__kernel_ssize_t20,593
typedef long		__kernel_ptrdiff_t;__kernel_ptrdiff_t21,625
typedef long		__kernel_time_t;__kernel_time_t22,659
typedef long		__kernel_suseconds_t;__kernel_suseconds_t23,690
typedef long		__kernel_clock_t;__kernel_clock_t24,726
typedef int		__kernel_daddr_t;__kernel_daddr_t25,758
typedef char *		__kernel_caddr_t;__kernel_caddr_t26,789
typedef unsigned long	__kernel_sigset_t;__kernel_sigset_t27,823
typedef long long	__kernel_loff_t;__kernel_loff_t30,904
} __kernel_fsid_t;__kernel_fsid_t35,977
#define	__FD_SET(__FD_SET41,1034
#define	__FD_CLR(__FD_CLR42,1104
#define	__FD_ISSET(__FD_ISSET43,1175
#define	__FD_ZERO(__FD_ZERO44,1253
static __inline__ void __FD_SET(52,1463
static __inline__ void __FD_CLR(60,1675
static __inline__ int __FD_ISSET(68,1890
static __inline__ void __FD_ZERO(80,2213

include/asm-alpha/sockios.h,188
#define _ASM_ALPHA_SOCKIOS_H2,29
#define FIOGETOWN	6,98
#define FIOSETOWN 7,136
#define SIOCATMARK	9,176
#define SIOCSPGRP	10,213
#define SIOCGPGRP	11,251
#define SIOCGSTAMP	13,290

include/asm-alpha/termbits.h,3509
#define _ALPHA_TERMBITS_H2,26
typedef unsigned char	cc_t;cc_t6,85
typedef unsigned int	speed_t;speed_t7,113
typedef unsigned int	tcflag_t;tcflag_t8,143
#define NCCS 16,359
struct termios termios17,375
#define VEOF 29,766
#define VEOL 30,781
#define VEOL2 31,796
#define VERASE 32,812
#define VWERASE 33,829
#define VKILL 34,847
#define VREPRINT 35,863
#define VSWTC 36,882
#define VINTR 37,898
#define VQUIT 38,914
#define VSUSP 39,930
#define VSTART 40,947
#define VSTOP 41,965
#define VLNEXT 42,982
#define VDISCARD 43,1000
#define VMIN 44,1020
#define VTIME 45,1036
#define IGNBRK	48,1073
#define BRKINT	49,1096
#define IGNPAR	50,1119
#define PARMRK	51,1142
#define INPCK	52,1165
#define ISTRIP	53,1187
#define INLCR	54,1210
#define IGNCR	55,1232
#define ICRNL	56,1254
#define IXON	57,1276
#define IXOFF	58,1297
# define IXANY	61,1400
# define IUCLC	62,1424
# define IMAXBEL	63,1448
#define OPOST	67,1500
#define ONLCR	68,1522
#define OLCUC	69,1544
#define OCRNL	71,1567
#define ONOCR	72,1589
#define ONLRET	73,1611
#define OFILL	75,1635
#define OFDEL	76,1658
#define NLDLY	77,1681
#define   NL0	78,1704
#define   NL1	79,1727
#define   NL2	80,1750
#define   NL3	81,1773
#define TABDLY	82,1796
#define   TAB0	83,1820
#define   TAB1	84,1844
#define   TAB2	85,1868
#define   TAB3	86,1892
#define CRDLY	87,1916
#define   CR0	88,1939
#define   CR1	89,1962
#define   CR2	90,1985
#define   CR3	91,2008
#define FFDLY	92,2031
#define   FF0	93,2054
#define   FF1	94,2077
#define BSDLY	95,2100
#define   BS0	96,2123
#define   BS1	97,2146
#define VTDLY	98,2169
#define   VT0	99,2192
#define   VT1	100,2215
#define XTABS	101,2238
#define CBAUD	104,2343
#define  B0	105,2365
#define  B50	106,2400
#define  B75	107,2421
#define  B110	108,2442
#define  B134	109,2464
#define  B150	110,2486
#define  B200	111,2508
#define  B300	112,2530
#define  B600	113,2552
#define  B1200	114,2574
#define  B1800	115,2597
#define  B2400	116,2620
#define  B4800	117,2643
#define  B9600	118,2666
#define  B19200	119,2689
#define  B38400	120,2713
#define EXTA 121,2737
#define EXTB 122,2757
#define CBAUDEX 123,2777
#define  B57600 124,2801
#define  B115200 125,2825
#define  B230400 126,2849
#define  B460800 127,2873
#define  B500000 128,2897
#define  B576000 129,2921
#define  B921600 130,2945
#define B1000000 131,2969
#define B1152000 132,2993
#define B1500000 133,3017
#define B2000000 134,3041
#define B2500000 135,3065
#define B3000000 136,3089
#define B3500000 137,3113
#define B4000000 138,3137
#define CSIZE	140,3162
#define   CS5	141,3185
#define   CS6	142,3208
#define   CS7	143,3231
#define   CS8	144,3254
#define CSTOPB	146,3278
#define CREAD	147,3302
#define PARENB	148,3325
#define PARODD	149,3349
#define HUPCL	150,3373
#define CLOCAL	152,3397
#define CRTSCTS	153,3421
#define ISIG	156,3492
#define ICANON	157,3516
#define XCASE	158,3542
#define ECHO	159,3567
#define ECHOE	160,3591
#define ECHOK	161,3616
#define ECHONL	162,3641
#define NOFLSH	163,3667
#define TOSTOP	164,3693
#define ECHOCTL	165,3719
#define ECHOPRT	166,3746
#define ECHOKE	167,3773
#define FLUSHO	168,3799
#define PENDIN	169,3825
#define IEXTEN	170,3851
#define	TCOOFF	173,3929
#define	TCOON	174,3947
#define	TCIOFF	175,3964
#define	TCION	176,3982
#define	TCIFLUSH	179,4060
#define	TCOFLUSH	180,4079
#define	TCIOFLUSH	181,4098
#define	TCSANOW	184,4183
#define	TCSADRAIN	185,4202
#define	TCSAFLUSH	186,4222

include/asm-alpha/semaphore.h,306
#define _ALPHA_SEMAPHORE_H2,27
struct semaphore semaphore15,257
#define MUTEX 22,433
#define MUTEX_LOCKED 24,513
#define sema_init(sema_init27,601
extern inline void down(46,1341
extern inline int down_interruptible(76,2119
extern inline int down_trylock(116,3109
extern inline void up(160,3991

include/asm-alpha/uaccess.h,2275
#define __ALPHA_UACCESS_H2,26
#define KERNEL_DS	20,547
#define USER_DS	21,590
#define VERIFY_READ	23,646
#define VERIFY_WRITE	24,668
#define get_fs(get_fs26,692
#define get_ds(get_ds27,728
#define set_fs(set_fs28,758
#define segment_eq(segment_eq30,801
#define __access_ok(__access_ok43,1140
#define access_ok(access_ok46,1236
extern inline int verify_area(49,1327
#define put_user(put_user66,1943
#define get_user(get_user68,2043
#define __put_user(__put_user76,2313
#define __get_user(__get_user78,2408
#define put_user_ret(put_user_ret87,2693
#define get_user_ret(get_user_ret90,2767
#define __put_user_ret(__put_user_ret93,2841
#define __get_user_ret(__get_user_ret96,2919
#define __get_user_nocheck(__get_user_nocheck108,3261
#define __get_user_check(__get_user_check122,3663
struct __large_struct __large_struct140,4233
#define __m(__m141,4284
#define __get_user_64(__get_user_64143,4332
#define __get_user_32(__get_user_32153,4588
#define __get_user_16(__get_user_16166,4944
#define __get_user_8(__get_user_8176,5201
#define __get_user_16(__get_user_16189,5597
#define __get_user_8(__get_user_8208,6092
#define __put_user_nocheck(__put_user_nocheck222,6437
#define __put_user_check(__put_user_check235,6796
#define __put_user_64(__put_user_64257,7507
#define __put_user_32(__put_user_32267,7783
#define __put_user_16(__put_user_16280,8157
#define __put_user_8(__put_user_8290,8431
#define __put_user_16(__put_user_16303,8845
#define __put_user_8(__put_user_8334,9696
#define __copy_to_user(__copy_to_user361,10289
#define __copy_from_user(__copy_from_user362,10369
#define copy_to_user(copy_to_user364,10450
#define copy_from_user(copy_from_user365,10528
#define __copy_tofrom_user_nocheck(__copy_tofrom_user_nocheck369,10641
#define __copy_tofrom_user(__copy_tofrom_user383,11139
#define copy_to_user_ret(copy_to_user_ret399,11754
#define copy_from_user_ret(copy_from_user_ret404,11855
#define __clear_user(__clear_user411,11996
#define clear_user(clear_user423,12378
#define strncpy_from_user(strncpy_from_user442,13013
extern inline long strlen_user(455,13454
struct exception_table_entryexception_table_entry480,14212
#define fixup_exception(fixup_exception497,14570

include/asm-alpha/ide.h,764
#define __ASMalpha_IDE_H12,197
typedef unsigned short ide_ioreg_t;ide_ioreg_t16,242
#define MAX_HWIFS	19,297
#define ide__sti(ide__sti22,325
static __inline__ int ide_default_irq(24,353
static __inline__ ide_ioreg_t ide_default_io_base(36,558
static __inline__ void ide_init_hwif_ports 48,765
	} select_t;select_t69,1291
static __inline__ int ide_request_irq(71,1305
static __inline__ void ide_free_irq(77,1533
static __inline__ int ide_check_region 82,1630
static __inline__ void ide_request_region 87,1750
static __inline__ void ide_release_region 92,1892
static __inline__ int ide_ack_intr 100,2072
static __inline__ void ide_fix_driveid(105,2172
static __inline__ void ide_release_lock 109,2239
static __inline__ void ide_get_lock 113,2300

include/asm-alpha/current.h,30
#define _ALPHA_CURRENT_H2,25

include/asm-alpha/scatterlist.h,105
#define _ALPHA_SCATTERLIST_H2,29
struct scatterlist scatterlist4,59
#define ISA_DMA_THRESHOLD 11,286

include/asm-alpha/poll.h,324
#define __ALPHA_POLL_H2,23
#define POLLIN	4,47
#define POLLPRI	5,65
#define POLLOUT	6,84
#define POLLERR	7,103
#define POLLHUP	8,122
#define POLLNVAL	9,142
#define POLLRDNORM	10,162
#define POLLRDBAND	11,184
#define POLLWRNORM	12,207
#define POLLWRBAND	13,230
#define POLLMSG	14,253
struct pollfd pollfd16,276

include/asm-alpha/cache.h,142
#define __ARCH_ALPHA_CACHE_H5,65
#define L1_CACHE_BYTES 9,213
#define L1_CACHE_ALIGN(L1_CACHE_ALIGN10,243
#define SMP_CACHE_BYTES 11,317

include/asm-alpha/namei.h,92
#define __ALPHA_NAMEI_H8,152
#define __prefix_lookup_dentry(__prefix_lookup_dentry15,317

include/asm-alpha/compiler.h,756
#define __ALPHA_COMPILER_H2,27
#define __kernel_insbl(__kernel_insbl17,512
#define __kernel_inswl(__kernel_inswl19,602
#define __kernel_insbl(__kernel_insbl22,700
#define __kernel_inswl(__kernel_inswl26,861
#define __kernel_extbl(__kernel_extbl33,1071
#define __kernel_extwl(__kernel_extwl34,1149
#define __kernel_extbl(__kernel_extbl36,1235
#define __kernel_extwl(__kernel_extwl40,1396
#define __kernel_ldbu(__kernel_ldbu55,1854
#define __kernel_ldwu(__kernel_ldwu56,1887
#define __kernel_stb(__kernel_stb57,1920
#define __kernel_stw(__kernel_stw58,1966
#define __kernel_ldbu(__kernel_ldbu60,2018
#define __kernel_ldwu(__kernel_ldwu64,2151
#define __kernel_stb(__kernel_stb68,2285
#define __kernel_stw(__kernel_stw70,2363

include/asm-alpha/keyboard.h,454
#define _ALPHA_KEYBOARD_H12,205
#define KEYBOARD_IRQ	16,251
#define DISABLE_KBD_DURING_INTERRUPTS	17,276
extern unsigned char pckbd_sysrq_xlate[27,743
#define kbd_setkeycode	29,789
#define kbd_getkeycode	30,830
#define kbd_pretranslate	31,871
#define kbd_translate	32,915
#define kbd_unexpected_up	33,954
#define kbd_leds	34,1000
#define kbd_init_hw	35,1029
#define kbd_sysrq_xlate	36,1064
#define INIT_KBD38,1108
#define SYSRQ_KEY 40,1126

include/asm-alpha/hardirq.h,722
#define _ALPHA_HARDIRQ_H2,25
extern unsigned int local_irq_count[8,134
extern unsigned long hardirq_no[9,180
#define in_interrupt(in_interrupt16,328
#define hardirq_trylock(hardirq_trylock24,487
#define hardirq_endlock(hardirq_endlock25,544
#define hardirq_enter(hardirq_enter27,585
#define hardirq_exit(hardirq_exit28,642
#define synchronize_irq(synchronize_irq30,699
extern int global_irq_holder;38,815
extern spinlock_t global_irq_lock;39,845
extern atomic_t global_irq_count;40,880
static inline void release_irqlock(42,915
static inline void hardirq_enter(51,1126
static inline void hardirq_exit(58,1299
static inline int hardirq_trylock(65,1473
#define hardirq_endlock(hardirq_endlock70,1587

include/asm-alpha/init.h,221
#define _ALPHA_INIT_H2,22
#define __init 4,45
#define __initdata 5,105
#define __initfunc(__initfunc6,169
#define __INIT	11,262
#define __FINIT	12,303
#define __INITDATA	13,330
#define __cacheline_aligned 15,374

include/asm-alpha/softirq.h,836
#define _ALPHA_SOFTIRQ_H2,25
extern unsigned int local_bh_count[8,127
#define get_active_bhs(get_active_bhs10,173
static inline void clear_active_bhs(12,221
extern inline void init_bh(27,514
extern inline void remove_bh(34,658
extern inline void mark_bh(40,745
extern atomic_t global_bh_lock;52,1007
extern atomic_t global_bh_count;53,1039
static inline void start_bh_atomic(57,1108
static inline void end_bh_atomic(63,1203
static inline int softirq_trylock(69,1324
static inline void softirq_endlock(81,1551
extern inline void start_bh_atomic(89,1663
extern inline void end_bh_atomic(95,1760
#define softirq_trylock(softirq_trylock102,1902
#define softirq_endlock(softirq_endlock105,1990
#define synchronize_bh(synchronize_bh108,2050
extern inline void disable_bh(116,2195
extern inline void enable_bh(123,2314

include/asm-alpha/spinlock.h,3011
#define _ALPHA_SPINLOCK_H2,26
  typedef struct { } spinlock_t;spinlock_t14,281
  #define SPIN_LOCK_UNLOCKED 15,314
  typedef struct { int gcc_is_buggy; } spinlock_t;spinlock_t17,366
  #define SPIN_LOCK_UNLOCKED 18,417
#define spin_lock_init(spin_lock_init21,473
#define spin_lock(spin_lock22,515
#define spin_trylock(spin_trylock23,553
#define spin_unlock_wait(spin_unlock_wait24,593
#define spin_unlock(spin_unlock25,637
#define spin_lock_irq(spin_lock_irq26,676
#define spin_unlock_irq(spin_unlock_irq27,712
#define spin_lock_irqsave(spin_lock_irqsave29,751
#define spin_unlock_irqrestore(spin_unlock_irqrestore30,811
  typedef struct { } rwlock_t;rwlock_t45,1321
  #define RW_LOCK_UNLOCKED 46,1352
  typedef struct { int gcc_is_buggy; } rwlock_t;rwlock_t48,1400
  #define RW_LOCK_UNLOCKED 49,1449
#define read_lock(read_lock52,1501
#define read_unlock(read_unlock53,1539
#define write_lock(write_lock54,1578
#define write_unlock(write_unlock55,1616
#define read_lock_irq(read_lock_irq56,1656
#define read_unlock_irq(read_unlock_irq57,1692
#define write_lock_irq(write_lock_irq58,1730
#define write_unlock_irq(write_unlock_irq59,1767
#define read_lock_irqsave(read_lock_irqsave61,1807
#define read_unlock_irqrestore(read_unlock_irqrestore62,1867
#define write_lock_irqsave(write_lock_irqsave63,1932
#define write_unlock_irqrestore(write_unlock_irqrestore64,1993
#define DEBUG_SPINLOCK 71,2133
#define DEBUG_RWLOCK 72,2158
} spinlock_t;spinlock_t88,2529
#define SPIN_LOCK_UNLOCKED 91,2563
#define spin_lock_init(spin_lock_init92,2622
#define SPIN_LOCK_UNLOCKED	96,2759
#define spin_lock_init(spin_lock_init97,2805
#define spin_unlock_wait(spin_unlock_wait100,2855
typedef struct { unsigned long a[100]; } __dummy_lock_t;__dummy_lock_t103,2952
#define __dummy_lock(__dummy_lock104,3009
#define spin_lock_own(spin_lock_own111,3215
static inline void spin_unlock(120,3562
static inline void spin_lock(126,3641
#define spin_trylock(spin_trylock149,4122
#define spin_lock_own(spin_lock_own150,4179
#define spin_lock_irq(spin_lock_irq153,4256
#define spin_unlock_irq(spin_unlock_irq155,4315
#define spin_lock_irqsave(spin_lock_irqsave157,4378
#define spin_unlock_irqrestore(spin_unlock_irqrestore159,4462
typedef struct { volatile int write_lock:1, read_counter:31; } rwlock_t;rwlock_t164,4618
#define RW_LOCK_UNLOCKED 166,4692
static inline void write_lock(172,4842
static inline void read_lock(193,5189
static inline void write_unlock(215,5566
static inline void read_unlock(221,5655
#define read_lock_irq(read_lock_irq236,5944
#define read_unlock_irq(read_unlock_irq237,5999
#define write_lock_irq(write_lock_irq238,6058
#define write_unlock_irq(write_unlock_irq239,6115
#define read_lock_irqsave(read_lock_irqsave241,6177
#define read_unlock_irqrestore(read_unlock_irqrestore243,6260
#define write_lock_irqsave(write_lock_irqsave245,6351
#define write_unlock_irqrestore(write_unlock_irqrestore247,6436

include/asm-alpha/sysinfo.h,517
#define __ASM_ALPHA_SYSINFO_H6,69
#define GSI_UACPROC	11,193
#define GSI_IEEE_FP_CONTROL	12,217
#define GSI_IEEE_STATE_AT_SIGNAL	13,249
#define GSI_PROC_TYPE	14,285
#define GSI_GET_HWRPB	15,312
#define SSI_NVPAIRS	17,341
#define SSI_IEEE_FP_CONTROL	18,365
#define SSI_IEEE_STATE_AT_SIGNAL	19,397
#define SSI_IEEE_IGNORE_STATE_AT_SIGNAL	20,433
#define SSIN_UACPROC	22,477
#define UAC_BITMASK	24,503
#define UAC_NOPRINT	25,527
#define UAC_NOFIX	26,551
#define UAC_SIGBUS	27,573
#define UAC_SHIFT	34,713

include/asm-alpha/ucontext.h,63
#define _ASMAXP_UCONTEXT_H2,27
struct ucontext ucontext4,55

include/asm-alpha/siginfo.h,2270
#define _ALPHA_SIGINFO_H2,25
typedef union sigval sigval8,139
} sigval_t;sigval_t11,196
#define SI_MAX_SIZE	13,209
#define SI_PAD_SIZE	14,233
typedef struct siginfo siginfo16,286
} siginfo_t;siginfo_t63,1146
#define si_pid	68,1207
#define si_uid	69,1244
#define si_status	70,1281
#define si_utime	71,1326
#define si_stime	72,1369
#define si_value	73,1412
#define si_int	74,1451
#define si_ptr	75,1499
#define si_addr	76,1547
#define si_band	77,1590
#define si_fd	78,1632
#define SI_USER	84,1762
#define SI_KERNEL	85,1816
#define SI_QUEUE	86,1879
#define SI_TIMER	87,1922
#define SI_MESGQ	88,1973
#define SI_ASYNCIO	89,2035
#define SI_SIGIO	90,2086
#define SI_FROMUSER(SI_FROMUSER92,2134
#define SI_FROMKERNEL(SI_FROMKERNEL93,2185
#define ILL_ILLOPC	98,2264
#define ILL_ILLOPN	99,2306
#define ILL_ILLADR	100,2349
#define ILL_ILLTRP	101,2400
#define ILL_PRVOPC	102,2440
#define ILL_PRVREG	103,2485
#define ILL_COPROC	104,2532
#define ILL_BADSTK	105,2577
#define NSIGILL	106,2625
#define FPE_INTDIV	111,2671
#define FPE_INTOVF	112,2721
#define FPE_FLTDIV	113,2765
#define FPE_FLTOVF	114,2822
#define FPE_FLTUND	115,2873
#define FPE_FLTRES	116,2925
#define FPE_FLTINV	117,2982
#define FPE_FLTSUB	118,3042
#define NSIGFPE	119,3092
#define SEGV_MAPERR	124,3139
#define SEGV_ACCERR	125,3196
#define NSIGSEGV	126,3262
#define BUS_ADRALN	131,3308
#define BUS_ADRERR	132,3361
#define BUS_OBJERR	133,3418
#define NSIGBUS	134,3476
#define TRAP_BRKPT	139,3523
#define TRAP_TRACE	140,3569
#define NSIGTRAP141,3615
#define CLD_EXITED	146,3660
#define CLD_KILLED	147,3704
#define CLD_DUMPED	148,3748
#define CLD_TRAPPED	149,3803
#define CLD_STOPPED	150,3856
#define CLD_CONTINUED	151,3902
#define NSIGCHLD152,3960
#define POLL_IN	157,4005
#define POLL_OUT	158,4051
#define POLL_MSG	159,4101
#define POLL_ERR	160,4150
#define POLL_PRI	161,4185
#define POLL_HUP	162,4240
#define NSIGPOLL	163,4285
#define SIGEV_SIGNAL	173,4606
#define SIGEV_NONE	174,4653
#define SIGEV_THREAD	175,4712
#define SIGEV_MAX_SIZE	177,4770
#define SIGEV_PAD_SIZE	178,4796
typedef struct sigevent sigevent180,4855
} sigevent_t;sigevent_t192,5104
#define sigev_notify_function	194,5119
#define sigev_notify_attributes	195,5183

include/asm-alpha/serial.h,388
#define BASE_BAUD 14,324
#define STD_COM_FLAGS 18,464
#define STD_COM4_FLAGS 19,543
#define STD_COM_FLAGS 21,611
#define STD_COM4_FLAGS 22,673
#define FOURPORT_FLAGS 26,756
#define ACCENT_FLAGS 27,794
#define BOCA_FLAGS 28,817
#define STD_SERIAL_PORT_DEFNS	31,847
#define EXTRA_SERIAL_PORT_DEFNS	40,1194
#define EXTRA_SERIAL_PORT_DEFNS70,2849
#define SERIAL_PORT_DFNS	73,2889

include/asm-alpha/core_pyxis.h,6099
#define __ALPHA_PYXIS__H__2,27
#define PYXIS_MEM_R1_MASK 73,3062
#define PYXIS_MEM_R2_MASK 74,3142
#define PYXIS_MEM_R3_MASK 75,3222
#define PYXIS_DMA_WIN_BASE_DEFAULT	77,3303
#define PYXIS_DMA_WIN_SIZE_DEFAULT	78,3355
#define PYXIS_DMA_WIN_BASE	81,3477
#define PYXIS_DMA_WIN_SIZE	82,3527
#define PYXIS_DMA_WIN_BASE	84,3583
#define PYXIS_DMA_WIN_SIZE	85,3638
#define PYXIS_REV	91,3730
#define PYXIS_PCI_LAT	92,3780
#define PYXIS_CTRL	93,3834
#define PYXIS_CTRL1	94,3885
#define PYXIS_FLASH_CTRL	95,3937
#define PYXIS_HAE_MEM	97,3994
#define PYXIS_HAE_IO	98,4048
#define PYXIS_CFG	99,4101
#define PYXIS_DIAG	104,4183
#define PYXIS_DIAG_CHECK	105,4234
#define PYXIS_PERF_MONITOR	110,4331
#define PYXIS_PERF_CONTROL	111,4389
#define PYXIS_ERR	116,4474
#define PYXIS_STAT	117,4524
#define PYXIS_ERR_MASK	118,4575
#define PYXIS_SYN	119,4630
#define PYXIS_ERR_DATA	120,4680
#define PYXIS_MEAR	122,4736
#define PYXIS_MESR	123,4787
#define PYXIS_PCI_ERR0	124,4838
#define PYXIS_PCI_ERR1	125,4893
#define PYXIS_PCI_ERR2	126,4948
#define PYXIS_TBIA	131,5049
#define PYXIS_W0_BASE	133,5101
#define PYXIS_W0_MASK	134,5155
#define PYXIS_T0_BASE	135,5209
#define PYXIS_W1_BASE	137,5264
#define PYXIS_W1_MASK	138,5318
#define PYXIS_T1_BASE	139,5372
#define PYXIS_W2_BASE	141,5427
#define PYXIS_W2_MASK	142,5481
#define PYXIS_T2_BASE	143,5535
#define PYXIS_W3_BASE	145,5590
#define PYXIS_W3_MASK	146,5644
#define PYXIS_T3_BASE	147,5698
#define PYXIS_MCR	152,5788
#define PYXIS_IACK_SC	157,5864
#define PYXIS_CONF	158,5925
#define PYXIS_IO	159,5983
#define PYXIS_SPARSE_MEM	160,6032
#define PYXIS_SPARSE_MEM_R2	161,6088
#define PYXIS_SPARSE_MEM_R3	162,6147
#define PYXIS_DENSE_MEM	163,6206
#define PYXIS_BW_MEM	168,6309
#define PYXIS_BW_IO	169,6362
#define PYXIS_BW_CFG_0	170,6414
#define PYXIS_BW_CFG_1	171,6469
#define PYXIS_INT_REQ	176,6563
#define PYXIS_INT_MASK	177,6617
#define PYXIS_INT_HILO	178,6672
#define PYXIS_INT_ROUTE	179,6727
#define PYXIS_GPO	180,6783
#define PYXIS_INT_CNFG	181,6833
#define PYXIS_RT_COUNT	182,6888
#define PYXIS_INT_TIME	183,6943
#define PYXIS_IIC_CTRL	184,6998
#define PYXIS_RESET	185,7053
#define PYXIS_STAT0_CMD	190,7170
#define PYXIS_STAT0_ERR	191,7200
#define PYXIS_STAT0_LOST	192,7233
#define PYXIS_STAT0_THIT	193,7266
#define PYXIS_STAT0_TREF	194,7299
#define PYXIS_STAT0_CODE_SHIFT	195,7332
#define PYXIS_STAT0_CODE_MASK	196,7366
#define PYXIS_STAT0_P_NBR_SHIFT	197,7401
#define PYXIS_STAT0_P_NBR_MASK	198,7437
#define PYXIS_HAE_ADDRESS 200,7478
struct el_PYXIS_sysdata_mcheck el_PYXIS_sysdata_mcheck205,7594
#define __EXTERN_INLINE 253,9684
#define __IO_EXTERN_INLINE254,9722
__EXTERN_INLINE unsigned long pyxis_virt_to_bus(262,9864
__EXTERN_INLINE void * pyxis_bus_to_virt(267,9985
#define vucp	282,10370
#define vusp	283,10408
#define vip	284,10447
#define vuip	285,10474
#define vulp	286,10511
__EXTERN_INLINE unsigned int pyxis_bw_inb(288,10550
__EXTERN_INLINE void pyxis_bw_outb(293,10667
__EXTERN_INLINE unsigned int pyxis_bw_inw(299,10796
__EXTERN_INLINE void pyxis_bw_outw(304,10913
__EXTERN_INLINE unsigned int pyxis_bw_inl(310,11043
__EXTERN_INLINE void pyxis_bw_outl(315,11145
__EXTERN_INLINE unsigned int pyxis_inb(321,11260
__EXTERN_INLINE void pyxis_outb(327,11421
__EXTERN_INLINE unsigned int pyxis_inw(336,11601
__EXTERN_INLINE void pyxis_outw(342,11762
__EXTERN_INLINE unsigned int pyxis_inl(351,11943
__EXTERN_INLINE void pyxis_outl(356,12056
__EXTERN_INLINE unsigned long pyxis_bw_readb(395,13274
__EXTERN_INLINE unsigned long pyxis_bw_readw(400,13395
__EXTERN_INLINE unsigned long pyxis_bw_readl(405,13516
__EXTERN_INLINE unsigned long pyxis_bw_readq(410,13622
__EXTERN_INLINE void pyxis_bw_writeb(415,13728
__EXTERN_INLINE void pyxis_bw_writew(421,13860
__EXTERN_INLINE void pyxis_bw_writel(427,13993
__EXTERN_INLINE void pyxis_bw_writeq(432,14104
__EXTERN_INLINE unsigned long pyxis_srm_base(437,14216
__EXTERN_INLINE unsigned long pyxis_srm_readb(467,14914
__EXTERN_INLINE unsigned long pyxis_srm_readw(479,15178
__EXTERN_INLINE void pyxis_srm_writeb(491,15444
__EXTERN_INLINE void pyxis_srm_writew(500,15659
__EXTERN_INLINE unsigned long pyxis_readb(509,15875
__EXTERN_INLINE unsigned long pyxis_readw(522,16176
__EXTERN_INLINE void pyxis_writeb(535,16477
__EXTERN_INLINE void pyxis_writew(546,16722
__EXTERN_INLINE unsigned long pyxis_readl(557,16968
__EXTERN_INLINE unsigned long pyxis_readq(562,17077
__EXTERN_INLINE void pyxis_writel(567,17186
__EXTERN_INLINE void pyxis_writeq(572,17300
__EXTERN_INLINE unsigned long pyxis_dense_mem(579,17475
#define virt_to_bus	592,17653
#define bus_to_virt	593,17691
# define __inb	596,17790
# define __inw	597,17819
# define __inl	598,17848
# define __outb	599,17877
# define __outw	600,17908
# define __outl	601,17939
# define __readb	602,17970
# define __readw	603,18002
# define __writeb	604,18034
# define __writew	605,18068
# define __readl	606,18102
# define __readq	607,18134
# define __writel	608,18166
# define __writeq	609,18200
# define __inb	611,18240
# define __inw	612,18266
# define __inl	613,18292
# define __outb	614,18318
# define __outw	615,18346
# define __outl	616,18374
#  define __readb	618,18433
#  define __readw	619,18467
#  define __writeb	620,18501
#  define __writew	621,18537
#  define __readb	623,18580
#  define __readw	624,18610
#  define __writeb	625,18640
#  define __writew	626,18672
# define __readl	628,18712
# define __readq	629,18741
# define __writel	630,18770
# define __writeq	631,18801
#define dense_mem	634,18851
# define inb(inb637,18946
# define inw(inw638,18979
# define inl(inl639,19012
# define outb(outb640,19045
# define outw(outw641,19087
# define outl(outl642,19129
# define readb(readb643,19171
# define readw(readw644,19208
# define writeb(writeb645,19245
# define writew(writew646,19291
# define inb(inb648,19343
# define outb(outb650,19420
#define readl(readl654,19534
#define readq(readq655,19579
#define writel(writel656,19624
#define writeq(writeq657,19677

include/asm-alpha/timex.h,192
#define _ASMALPHA_TIMEX_H7,114
#define CLOCK_TICK_RATE	9,141
typedef unsigned int cycles_t;cycles_t20,471
extern cycles_t cacheflush_time;21,502
static inline cycles_t get_cycles 23,536

include/asm-alpha/md.h,63
#define __ASM_MD_H7,129
#define MD_XORBLOCK_ALIGNMENT	11,183

include/asm-alpha/linux_logo.h,550
#define linux_logo_banner 24,760
#define LINUX_LOGO_COLORS 26,820
#define INCLUDE_LINUX_LOGOBW30,883
#define INCLUDE_LINUX_LOGO1631,912
extern unsigned char linux_logo_red[38,1002
extern unsigned char linux_logo_green[39,1041
extern unsigned char linux_logo_blue[40,1082
extern unsigned char linux_logo[41,1122
extern unsigned char linux_logo_bw[42,1157
extern unsigned char linux_logo16_red[43,1195
extern unsigned char linux_logo16_green[44,1236
extern unsigned char linux_logo16_blue[45,1279
extern unsigned char linux_logo16[46,1321

include/asm-alpha/vga.h,424
#define _LINUX_ASM_VGA_H_8,100
#define VT_BUF_HAVE_RW12,148
#define VT_BUF_HAVE_MEMSETW13,171
#define VT_BUF_HAVE_MEMCPYF14,199
extern inline void scr_writew(16,228
extern inline u16 scr_readw(24,363
extern inline void scr_memsetw(32,495
extern inline void scr_memcpyw_from(40,641
extern inline void scr_memcpyw_to(45,753
#define vga_readb 51,862
#define vga_writeb 52,886
#define VGA_MAP_MEM(VGA_MAP_MEM54,913

include/asm-alpha/asm_offsets.h,309
#define __ASM_OFFSETS_H__2,26
#define TASK_STATE 3,52
#define TASK_FLAGS 4,73
#define TASK_SIGPENDING 5,94
#define TASK_ADDR_LIMIT 6,121
#define TASK_EXEC_DOMAIN 7,148
#define TASK_NEED_RESCHED 8,176
#define TASK_SIZE 9,205
#define STACK_SIZE 10,228
#define HAE_CACHE 11,253
#define HAE_REG 12,273

include/asm-alpha/core_mcpcia.h,6121
#define __ALPHA_MCPCIA__H__2,28
#define MCPCIA_MEM_MASK 74,3084
#define MCPCIA_DMA_WIN_BASE_DEFAULT 76,3160
#define MCPCIA_DMA_WIN_SIZE_DEFAULT 77,3219
#define MCPCIA_DMA_WIN_BASE	80,3348
#define MCPCIA_DMA_WIN_SIZE	81,3399
#define MCPCIA_DMA_WIN_BASE	83,3456
#define MCPCIA_DMA_WIN_SIZE	84,3513
#define HOSE(HOSE87,3578
#define MCPCIA_REV(MCPCIA_REV92,3653
#define MCPCIA_WHOAMI(MCPCIA_WHOAMI93,3716
#define MCPCIA_PCI_LAT(MCPCIA_PCI_LAT94,3781
#define MCPCIA_CAP_CTRL(MCPCIA_CAP_CTRL95,3847
#define MCPCIA_HAE_MEM(MCPCIA_HAE_MEM96,3914
#define MCPCIA_HAE_IO(MCPCIA_HAE_IO97,3980
#define MCPCIA_IACK_SC(MCPCIA_IACK_SC99,4051
#define MCPCIA_HAE_DENSE(MCPCIA_HAE_DENSE101,4124
#define MCPCIA_INT_CTL(MCPCIA_INT_CTL106,4231
#define MCPCIA_INT_REQ(MCPCIA_INT_REQ107,4297
#define MCPCIA_INT_TARG(MCPCIA_INT_TARG108,4363
#define MCPCIA_INT_ADR(MCPCIA_INT_ADR109,4430
#define MCPCIA_INT_ADR_EXT(MCPCIA_INT_ADR_EXT110,4496
#define MCPCIA_INT_MASK0(MCPCIA_INT_MASK0111,4566
#define MCPCIA_INT_MASK1(MCPCIA_INT_MASK1112,4634
#define MCPCIA_INT_ACK0(MCPCIA_INT_ACK0113,4702
#define MCPCIA_INT_ACK1(MCPCIA_INT_ACK1114,4769
#define MCPCIA_PERF_MONITOR(MCPCIA_PERF_MONITOR119,4877
#define MCPCIA_PERF_CONTROL(MCPCIA_PERF_CONTROL120,4948
#define MCPCIA_CAP_DIAG(MCPCIA_CAP_DIAG125,5051
#define MCPCIA_TOP_OF_MEM(MCPCIA_TOP_OF_MEM126,5118
#define MCPCIA_MC_ERR0(MCPCIA_MC_ERR0131,5214
#define MCPCIA_MC_ERR1(MCPCIA_MC_ERR1132,5280
#define MCPCIA_CAP_ERR(MCPCIA_CAP_ERR133,5346
#define MCPCIA_PCI_ERR1(MCPCIA_PCI_ERR1134,5412
#define MCPCIA_SG_TBIA(MCPCIA_SG_TBIA139,5525
#define MCPCIA_HBASE(MCPCIA_HBASE140,5591
#define MCPCIA_W0_BASE(MCPCIA_W0_BASE142,5657
#define MCPCIA_W0_MASK(MCPCIA_W0_MASK143,5723
#define MCPCIA_T0_BASE(MCPCIA_T0_BASE144,5789
#define MCPCIA_W1_BASE(MCPCIA_W1_BASE146,5856
#define MCPCIA_W1_MASK(MCPCIA_W1_MASK147,5922
#define MCPCIA_T1_BASE(MCPCIA_T1_BASE148,5988
#define MCPCIA_W2_BASE(MCPCIA_W2_BASE150,6055
#define MCPCIA_W2_MASK(MCPCIA_W2_MASK151,6121
#define MCPCIA_T2_BASE(MCPCIA_T2_BASE152,6187
#define MCPCIA_W3_BASE(MCPCIA_W3_BASE154,6254
#define MCPCIA_W3_MASK(MCPCIA_W3_MASK155,6320
#define MCPCIA_T3_BASE(MCPCIA_T3_BASE156,6386
#define MCPCIA_CONF(MCPCIA_CONF161,6478
#define MCPCIA_IO(MCPCIA_IO162,6542
#define MCPCIA_SPARSE(MCPCIA_SPARSE163,6604
#define MCPCIA_DENSE(MCPCIA_DENSE164,6669
#define _MCPCIA_IACK_SC(_MCPCIA_IACK_SC165,6734
#define MCPCIA_HAE_ADDRESS	167,6802
#define MCPCIA_IACK_SC	168,6847
struct el_MCPCIA_uncorrected_frame_mcheck el_MCPCIA_uncorrected_frame_mcheck173,6952
#define __EXTERN_INLINE 182,7137
#define __IO_EXTERN_INLINE183,7175
__EXTERN_INLINE unsigned long mcpcia_virt_to_bus(191,7317
__EXTERN_INLINE void * mcpcia_bus_to_virt(196,7440
#define vucp	212,7915
#define vusp	213,7953
#define vip	214,7992
#define vuip	215,8019
#define vulp	216,8056
__EXTERN_INLINE unsigned int mcpcia_bw_inb(219,8112
__EXTERN_INLINE void mcpcia_bw_outb(224,8231
__EXTERN_INLINE unsigned int mcpcia_bw_inw(230,8362
__EXTERN_INLINE void mcpcia_bw_outw(235,8481
__EXTERN_INLINE unsigned int mcpcia_bw_inl(241,8613
__EXTERN_INLINE void mcpcia_bw_outl(246,8717
__EXTERN_INLINE unsigned int mcpcia_inb(253,8841
__EXTERN_INLINE void mcpcia_outb(261,9102
__EXTERN_INLINE unsigned int mcpcia_inw(272,9382
__EXTERN_INLINE void mcpcia_outw(280,9643
__EXTERN_INLINE unsigned int mcpcia_inl(291,9924
__EXTERN_INLINE void mcpcia_outl(298,10137
__EXTERN_INLINE unsigned long mcpcia_bw_readb(340,11346
__EXTERN_INLINE unsigned long mcpcia_bw_readw(345,11469
__EXTERN_INLINE unsigned long mcpcia_bw_readl(350,11592
__EXTERN_INLINE unsigned long mcpcia_bw_readq(355,11702
__EXTERN_INLINE void mcpcia_bw_writeb(360,11812
__EXTERN_INLINE void mcpcia_bw_writew(365,11939
__EXTERN_INLINE void mcpcia_bw_writel(370,12067
__EXTERN_INLINE void mcpcia_bw_writeq(375,12180
__EXTERN_INLINE unsigned long mcpcia_srm_base(381,12301
__EXTERN_INLINE unsigned long mcpcia_srm_readb(402,12728
__EXTERN_INLINE unsigned long mcpcia_srm_readw(414,12994
__EXTERN_INLINE void mcpcia_srm_writeb(426,13262
__EXTERN_INLINE void mcpcia_srm_writew(435,13479
__EXTERN_INLINE unsigned long mcpcia_readb(444,13697
__EXTERN_INLINE unsigned long mcpcia_readw(459,14095
__EXTERN_INLINE void mcpcia_writeb(474,14494
__EXTERN_INLINE void mcpcia_writew(487,14836
__EXTERN_INLINE unsigned long mcpcia_readl(500,15182
__EXTERN_INLINE unsigned long mcpcia_readq(507,15387
__EXTERN_INLINE void mcpcia_writel(514,15592
__EXTERN_INLINE void mcpcia_writeq(521,15802
__EXTERN_INLINE unsigned long mcpcia_dense_mem(530,16073
#define virt_to_bus	543,16267
#define bus_to_virt	544,16306
# define __inb	547,16363
# define __inw	548,16393
# define __inl	549,16423
# define __outb	550,16453
# define __outw	551,16485
# define __outl	552,16517
# define __readb	553,16549
# define __readw	554,16582
# define __writeb	555,16615
# define __writew	556,16650
# define __readl	557,16685
# define __readq	558,16718
# define __writel	559,16751
# define __writeq	560,16786
# define __inb	562,16827
# define __inw	563,16854
# define __inl	564,16881
# define __outb	565,16908
# define __outw	566,16937
# define __outl	567,16966
#  define __readb	569,17026
#  define __readw	570,17061
#  define __writeb	571,17096
#  define __writew	572,17133
#  define __readb	574,17177
#  define __readw	575,17208
#  define __writeb	576,17239
#  define __writew	577,17272
# define __readl	579,17313
# define __readq	580,17343
# define __writel	581,17373
# define __writeq	582,17405
#define dense_mem	585,17456
# define inb(inb588,17509
# define inw(inw589,17542
# define inl(inl590,17575
# define outb(outb591,17608
# define outw(outw592,17650
# define outl(outl593,17692
# define readb(readb594,17734
# define readw(readw595,17771
# define writeb(writeb596,17808
# define writew(writew597,17854
# define inb(inb599,17906
# define outb(outb601,17983
#define readl(readl605,18097
#define readq(readq606,18142
#define writel(writel607,18187
#define writeq(writeq608,18240

include/asm-alpha/smplock.h,230
extern spinlock_t kernel_flag;11,146
static __inline__ void release_kernel_lock(16,241
static __inline__ void reacquire_kernel_lock(27,451
static __inline__ void lock_kernel(40,712
static __inline__ void unlock_kernel(46,814

include/asm-alpha/core_apecs.h,5839
#define __ALPHA_APECS__H__2,27
#define APECS_XL_DMA_WIN1_BASE	70,3111
#define APECS_XL_DMA_WIN1_SIZE	71,3158
#define APECS_XL_DMA_WIN1_SIZE_PARANOID	72,3205
#define APECS_XL_DMA_WIN2_BASE	73,3260
#define APECS_XL_DMA_WIN2_SIZE	74,3309
#define APECS_DMA_WIN_BASE_DEFAULT	79,3438
#define APECS_DMA_WIN_SIZE_DEFAULT	80,3490
#define APECS_DMA_WIN_BASE	83,3612
#define APECS_DMA_WIN_SIZE	84,3662
#define APECS_DMA_WIN_BASE	86,3718
#define APECS_DMA_WIN_SIZE	87,3773
#define APECS_IOC_DCSR 95,3927
#define APECS_IOC_PEAR 96,3996
#define APECS_IOC_SEAR 97,4065
#define APECS_IOC_DR1 98,4134
#define APECS_IOC_DR2 99,4203
#define APECS_IOC_DR3 100,4272
#define APECS_IOC_TB1R 102,4342
#define APECS_IOC_TB2R 103,4411
#define APECS_IOC_PB1R 105,4481
#define APECS_IOC_PB2R 106,4550
#define APECS_IOC_PM1R 108,4620
#define APECS_IOC_PM2R 109,4689
#define APECS_IOC_HAXR0 111,4759
#define APECS_IOC_HAXR1 112,4828
#define APECS_IOC_HAXR2 113,4897
#define APECS_IOC_PMLT 115,4967
#define APECS_IOC_TLBTAG0 117,5037
#define APECS_IOC_TLBTAG1 118,5106
#define APECS_IOC_TLBTAG2 119,5175
#define APECS_IOC_TLBTAG3 120,5244
#define APECS_IOC_TLBTAG4 121,5313
#define APECS_IOC_TLBTAG5 122,5382
#define APECS_IOC_TLBTAG6 123,5451
#define APECS_IOC_TLBTAG7 124,5520
#define APECS_IOC_TLBDATA0 126,5590
#define APECS_IOC_TLBDATA1 127,5659
#define APECS_IOC_TLBDATA2 128,5728
#define APECS_IOC_TLBDATA3 129,5797
#define APECS_IOC_TLBDATA4 130,5866
#define APECS_IOC_TLBDATA5 131,5935
#define APECS_IOC_TLBDATA6 132,6004
#define APECS_IOC_TLBDATA7 133,6073
#define APECS_IOC_TBIA 135,6143
#define APECS_MEM_GCR	143,6356
#define APECS_MEM_EDSR	144,6416
#define APECS_MEM_TAR 145,6477
#define APECS_MEM_ELAR	146,6539
#define APECS_MEM_EHAR 147,6600
#define APECS_MEM_SFT_RST	148,6655
#define APECS_MEM_LDxLAR 149,6711
#define APECS_MEM_LDxHAR 150,6767
#define APECS_MEM_GTR 151,6823
#define APECS_MEM_RTR 152,6879
#define APECS_MEM_VFPR 153,6935
#define APECS_MEM_PDLDR 154,6991
#define APECS_MEM_PDhDR 155,7047
#define APECS_MEM_B0BAR 158,7139
#define APECS_MEM_B1BAR 159,7195
#define APECS_MEM_B2BAR 160,7251
#define APECS_MEM_B3BAR 161,7307
#define APECS_MEM_B4BAR 162,7363
#define APECS_MEM_B5BAR 163,7419
#define APECS_MEM_B6BAR 164,7475
#define APECS_MEM_B7BAR 165,7531
#define APECS_MEM_B8BAR 166,7587
#define APECS_MEM_B0BCR 169,7680
#define APECS_MEM_B1BCR 170,7736
#define APECS_MEM_B2BCR 171,7792
#define APECS_MEM_B3BCR 172,7848
#define APECS_MEM_B4BCR 173,7904
#define APECS_MEM_B5BCR 174,7960
#define APECS_MEM_B6BCR 175,8016
#define APECS_MEM_B7BCR 176,8072
#define APECS_MEM_B8BCR 177,8128
#define APECS_MEM_B0TRA 180,8216
#define APECS_MEM_B1TRA 181,8272
#define APECS_MEM_B2TRA 182,8328
#define APECS_MEM_B3TRA 183,8384
#define APECS_MEM_B4TRA 184,8440
#define APECS_MEM_B5TRA 185,8496
#define APECS_MEM_B6TRA 186,8552
#define APECS_MEM_B7TRA 187,8608
#define APECS_MEM_B8TRA 188,8664
#define APECS_MEM_B0TRB 191,8752
#define APECS_MEM_B1TRB 192,8821
#define APECS_MEM_B2TRB 193,8877
#define APECS_MEM_B3TRB 194,8933
#define APECS_MEM_B4TRB 195,8989
#define APECS_MEM_B5TRB 196,9045
#define APECS_MEM_B6TRB 197,9101
#define APECS_MEM_B7TRB 198,9157
#define APECS_MEM_B8TRB 199,9213
#define APECS_IACK_SC	205,9296
#define APECS_CONF	206,9356
#define APECS_IO	207,9413
#define APECS_SPARSE_MEM	208,9461
#define APECS_DENSE_MEM	209,9516
#define APECS_IOC_STAT0_CMD	215,9644
#define APECS_IOC_STAT0_ERR	216,9677
#define APECS_IOC_STAT0_LOST	217,9713
#define APECS_IOC_STAT0_THIT	218,9750
#define APECS_IOC_STAT0_TREF	219,9787
#define APECS_IOC_STAT0_CODE_SHIFT	220,9824
#define APECS_IOC_STAT0_CODE_MASK	221,9861
#define APECS_IOC_STAT0_P_NBR_SHIFT	222,9899
#define APECS_IOC_STAT0_P_NBR_MASK	223,9938
#define APECS_HAE_ADDRESS	225,9982
struct el_apecs_mikasa_sysdata_mcheckel_apecs_mikasa_sysdata_mcheck232,10088
struct el_apecs_sysdata_mcheckel_apecs_sysdata_mcheck303,11847
struct el_apecs_procdatael_apecs_procdata348,12964
#define __EXTERN_INLINE 376,14210
#define __IO_EXTERN_INLINE377,14248
__EXTERN_INLINE unsigned long apecs_virt_to_bus(393,14752
static inline unsigned long apecs_xl_virt_to_bus(399,14903
__EXTERN_INLINE void * apecs_bus_to_virt(408,15184
static inline void * apecs_xl_bus_to_virt(421,15575
#define vip	449,16500
#define vuip	450,16527
#define vulp	451,16564
__EXTERN_INLINE unsigned int apecs_inb(453,16603
__EXTERN_INLINE void apecs_outb(459,16764
__EXTERN_INLINE unsigned int apecs_inw(468,16944
__EXTERN_INLINE void apecs_outw(474,17105
__EXTERN_INLINE unsigned int apecs_inl(483,17286
__EXTERN_INLINE void apecs_outl(488,17399
__EXTERN_INLINE unsigned long apecs_readb(500,17661
__EXTERN_INLINE unsigned long apecs_readw(513,17946
__EXTERN_INLINE unsigned long apecs_readl(526,18231
__EXTERN_INLINE unsigned long apecs_readq(531,18340
__EXTERN_INLINE void apecs_writeb(536,18449
__EXTERN_INLINE void apecs_writew(548,18702
__EXTERN_INLINE void apecs_writel(560,18956
__EXTERN_INLINE void apecs_writeq(565,19070
__EXTERN_INLINE unsigned long apecs_dense_mem(572,19245
#define virt_to_bus	584,19422
#define bus_to_virt	585,19463
#define virt_to_bus	587,19510
#define bus_to_virt	588,19548
#define __inb	591,19594
#define __inw	592,19619
#define __inl	593,19644
#define __outb	594,19669
#define __outw	595,19696
#define __outl	596,19723
#define __readb	597,19750
#define __readw	598,19779
#define __readl	599,19808
#define __readq	600,19837
#define __writeb	601,19866
#define __writew	602,19896
#define __writel	603,19926
#define __writeq	604,19956
#define dense_mem	605,19986
#define inb(inb607,20021
#define outb(outb610,20096
#define readl(readl613,20189
#define readq(readq614,20234
#define writel(writel615,20279
#define writeq(writeq616,20332

include/asm-alpha/core_cia.h,5184
#define __ALPHA_CIA__H__2,25
#define CIA_MEM_R1_MASK 76,3142
#define CIA_MEM_R2_MASK 77,3220
#define CIA_MEM_R3_MASK 78,3298
#define CIA_DMA_WIN_BASE_DEFAULT	80,3377
#define CIA_DMA_WIN_SIZE_DEFAULT	81,3427
#define CIA_DMA_WIN_BASE	84,3547
#define CIA_DMA_WIN_SIZE	85,3595
#define CIA_DMA_WIN_BASE	87,3649
#define CIA_DMA_WIN_SIZE	88,3700
#define CIA_IOC_CIA_REV 94,3814
#define CIA_IOC_PCI_LAT 95,3882
#define CIA_IOC_CIA_CTRL 96,3950
#define CIA_IOC_CIA_CNFG 97,4018
#define CIA_IOC_HAE_MEM 98,4086
#define CIA_IOC_HAE_IO 99,4154
#define CIA_IOC_CFG 100,4222
#define CIA_IOC_CACK_EN 101,4290
#define CIA_IOC_CIA_DIAG 106,4406
#define CIA_IOC_DIAG_CHECK 107,4474
#define CIA_IOC_PERF_MONITOR 112,4599
#define CIA_IOC_PERF_CONTROL 113,4667
#define CIA_IOC_CPU_ERR0 118,4778
#define CIA_IOC_CPU_ERR1 119,4846
#define CIA_IOC_CIA_ERR 120,4914
#define CIA_IOC_CIA_STAT 121,4982
#define CIA_IOC_ERR_MASK 122,5050
#define CIA_IOC_CIA_SYN 123,5118
#define CIA_IOC_MEM_ERR0 124,5186
#define CIA_IOC_MEM_ERR1 125,5254
#define CIA_IOC_PCI_ERR0 126,5322
#define CIA_IOC_PCI_ERR1 127,5390
#define CIA_IOC_PCI_ERR3 128,5458
#define CIA_IOC_PCI_TBIA 133,5581
#define CIA_IOC_PCI_W0_BASE 135,5650
#define CIA_IOC_PCI_W0_MASK 136,5718
#define CIA_IOC_PCI_T0_BASE 137,5786
#define CIA_IOC_PCI_W1_BASE 139,5855
#define CIA_IOC_PCI_W1_MASK 140,5923
#define CIA_IOC_PCI_T1_BASE 141,5991
#define CIA_IOC_PCI_W2_BASE 143,6060
#define CIA_IOC_PCI_W2_MASK 144,6128
#define CIA_IOC_PCI_T2_BASE 145,6196
#define CIA_IOC_PCI_W3_BASE 147,6265
#define CIA_IOC_PCI_W3_MASK 148,6333
#define CIA_IOC_PCI_T3_BASE 149,6401
#define CIA_IOC_MCR 154,6527
#define CIA_IOC_MBA0 155,6595
#define CIA_IOC_MBA2 156,6663
#define CIA_IOC_MBA4 157,6731
#define CIA_IOC_MBA6 158,6799
#define CIA_IOC_MBA8 159,6867
#define CIA_IOC_MBAA 160,6935
#define CIA_IOC_MBAC 161,7003
#define CIA_IOC_MBAE 162,7071
#define CIA_IOC_TMG0 163,7139
#define CIA_IOC_TMG1 164,7207
#define CIA_IOC_TMG2 165,7275
#define CIA_IACK_SC	170,7369
#define CIA_CONF	171,7428
#define CIA_IO	172,7484
#define CIA_SPARSE_MEM	173,7532
#define CIA_SPARSE_MEM_R2	174,7587
#define CIA_SPARSE_MEM_R3	175,7644
#define CIA_DENSE_MEM	176,7701
#define GRU_INT_REQ	181,7800
#define GRU_INT_MASK	182,7852
#define GRU_INT_EDGE	183,7905
#define GRU_INT_HILO	184,7958
#define GRU_INT_CLEAR	185,8011
#define GRU_CACHE_CNFG	187,8066
#define GRU_SCR	188,8121
#define GRU_LED	189,8170
#define GRU_RESET	190,8219
#define ALCOR_GRU_INT_REQ_BITS	192,8270
#define XLT_GRU_INT_REQ_BITS	193,8315
#define GRU_INT_REQ_BITS	194,8358
#define CIA_IOC_STAT0_CMD	200,8488
#define CIA_IOC_STAT0_ERR	201,8519
#define CIA_IOC_STAT0_LOST	202,8553
#define CIA_IOC_STAT0_THIT	203,8588
#define CIA_IOC_STAT0_TREF	204,8623
#define CIA_IOC_STAT0_CODE_SHIFT	205,8658
#define CIA_IOC_STAT0_CODE_MASK	206,8693
#define CIA_IOC_STAT0_P_NBR_SHIFT	207,8730
#define CIA_IOC_STAT0_P_NBR_MASK	208,8767
#define CIA_HAE_ADDRESS	210,8809
struct el_CIA_procdata el_CIA_procdata217,8951
struct el_CIA_sysdata_mcheck el_CIA_sysdata_mcheck241,9820
#define __EXTERN_INLINE 289,12072
#define __IO_EXTERN_INLINE290,12110
__EXTERN_INLINE unsigned long cia_virt_to_bus(298,12252
__EXTERN_INLINE void * cia_bus_to_virt(303,12369
#define vip	316,12674
#define vuip	317,12701
#define vulp	318,12738
__EXTERN_INLINE unsigned int cia_inb(320,12777
__EXTERN_INLINE void cia_outb(327,12943
__EXTERN_INLINE unsigned int cia_inw(334,13114
__EXTERN_INLINE void cia_outw(341,13280
__EXTERN_INLINE unsigned int cia_inl(348,13452
__EXTERN_INLINE void cia_outl(353,13561
__EXTERN_INLINE unsigned long cia_srm_base(392,14775
__EXTERN_INLINE unsigned long cia_srm_readb(422,15449
__EXTERN_INLINE unsigned long cia_srm_readw(434,15709
__EXTERN_INLINE void cia_srm_writeb(446,15971
__EXTERN_INLINE void cia_srm_writew(456,16207
__EXTERN_INLINE unsigned long cia_readb(466,16444
__EXTERN_INLINE unsigned long cia_readw(478,16704
__EXTERN_INLINE void cia_writeb(490,16964
__EXTERN_INLINE void cia_writew(502,17224
__EXTERN_INLINE unsigned long cia_readl(514,17485
__EXTERN_INLINE unsigned long cia_readq(519,17590
__EXTERN_INLINE void cia_writel(524,17695
__EXTERN_INLINE void cia_writeq(529,17805
__EXTERN_INLINE unsigned long cia_dense_mem(536,17976
#define virt_to_bus	547,18126
#define bus_to_virt	548,18162
#define __inb	549,18198
#define __inw	550,18221
#define __inl	551,18244
#define __outb	552,18267
#define __outw	553,18292
#define __outl	554,18317
#define __readb	557,18373
#define __readw	558,18404
#define __writeb	559,18435
#define __writew	560,18467
#define __readb	562,18505
#define __readw	563,18532
#define __writeb	564,18559
#define __writew	565,18587
#define __readl	568,18623
#define __readq	569,18650
#define __writel	570,18677
#define __writeq	571,18705
#define dense_mem	572,18733
#define inb(inb574,18766
#define outb(outb576,18840
#define inw(inw579,18933
#define outw(outw581,19007
#define inl(inl584,19100
#define outl(outl585,19130
#define readl(readl587,19171
#define readq(readq588,19216
#define writel(writel589,19261
#define writeq(writeq590,19314

include/asm-alpha/core_lca.h,4567
#define __ALPHA_LCA__H__2,25
#define LCA_DMA_WIN_BASE_DEFAULT	59,2303
#define LCA_DMA_WIN_SIZE_DEFAULT	60,2353
#define LCA_DMA_WIN_BASE	63,2473
#define LCA_DMA_WIN_SIZE	64,2521
#define LCA_DMA_WIN_BASE	66,2575
#define LCA_DMA_WIN_SIZE	67,2626
#define LCA_MEM_BCR0	73,2724
#define LCA_MEM_BCR1	74,2775
#define LCA_MEM_BCR2	75,2826
#define LCA_MEM_BCR3	76,2877
#define LCA_MEM_BMR0	77,2928
#define LCA_MEM_BMR1	78,2979
#define LCA_MEM_BMR2	79,3030
#define LCA_MEM_BMR3	80,3081
#define LCA_MEM_BTR0	81,3132
#define LCA_MEM_BTR1	82,3183
#define LCA_MEM_BTR2	83,3234
#define LCA_MEM_BTR3	84,3285
#define LCA_MEM_GTR	85,3336
#define LCA_MEM_ESR	86,3386
#define LCA_MEM_EAR	87,3436
#define LCA_MEM_CAR	88,3486
#define LCA_MEM_VGR	89,3536
#define LCA_MEM_PLM	90,3586
#define LCA_MEM_FOR	91,3636
#define LCA_IOC_HAE	96,3723
#define LCA_IOC_CONF	97,3773
#define LCA_IOC_STAT0	98,3824
#define LCA_IOC_STAT1	99,3876
#define LCA_IOC_TBIA	100,3928
#define LCA_IOC_TB_ENA	101,3979
#define LCA_IOC_SFT_RST	102,4032
#define LCA_IOC_PAR_DIS	103,4086
#define LCA_IOC_W_BASE0	104,4140
#define LCA_IOC_W_BASE1	105,4194
#define LCA_IOC_W_MASK0	106,4248
#define LCA_IOC_W_MASK1	107,4302
#define LCA_IOC_T_BASE0	108,4356
#define LCA_IOC_T_BASE1	109,4410
#define LCA_IOC_TB_TAG0	110,4464
#define LCA_IOC_TB_TAG1	111,4518
#define LCA_IOC_TB_TAG2	112,4572
#define LCA_IOC_TB_TAG3	113,4626
#define LCA_IOC_TB_TAG4	114,4680
#define LCA_IOC_TB_TAG5	115,4734
#define LCA_IOC_TB_TAG6	116,4788
#define LCA_IOC_TB_TAG7	117,4842
#define LCA_IACK_SC	122,4922
#define LCA_CONF	123,4972
#define LCA_IO	124,5019
#define LCA_SPARSE_MEM	125,5065
#define LCA_DENSE_MEM	126,5118
#define LCA_IOC_STAT0_CMD	131,5235
#define LCA_IOC_STAT0_ERR	132,5266
#define LCA_IOC_STAT0_LOST	133,5300
#define LCA_IOC_STAT0_THIT	134,5335
#define LCA_IOC_STAT0_TREF	135,5370
#define LCA_IOC_STAT0_CODE_SHIFT	136,5405
#define LCA_IOC_STAT0_CODE_MASK	137,5440
#define LCA_IOC_STAT0_P_NBR_SHIFT	138,5477
#define LCA_IOC_STAT0_P_NBR_MASK	139,5514
#define LCA_HAE_ADDRESS	141,5556
#define LCA_PMR_ADDR	144,5642
#define LCA_PMR_PDIV 145,5692
#define LCA_PMR_ODIV 146,5768
#define LCA_PMR_INTO 147,5845
#define LCA_PMR_DMAO 148,5918
#define LCA_PMR_OCCEB 149,5985
#define LCA_PMR_OCCOB 150,6074
#define LCA_PMR_PRIMARY_MASK 151,6163
#define LCA_READ_PMR 155,6237
#define LCA_WRITE_PMR(LCA_WRITE_PMR156,6307
#define LCA_GET_PRIMARY(LCA_GET_PRIMARY158,6386
#define LCA_GET_OVERRIDE(LCA_GET_OVERRIDE159,6435
#define LCA_SET_PRIMARY_CLOCK(LCA_SET_PRIMARY_CLOCK160,6491
#define LCA_PMR_DIV_1 163,6600
#define LCA_PMR_DIV_1_5 164,6628
#define LCA_PMR_DIV_2 165,6656
#define LCA_PMR_DIV_4 166,6684
#define LCA_PMR_DIV_8 167,6712
#define LCA_PMR_DIV_16 168,6740
#define LCA_PMR_DIV_MIN 169,6768
#define LCA_PMR_DIV_MAX 170,6798
struct el_lca_mcheck_short el_lca_mcheck_short177,6978
struct el_lca_mcheck_long el_lca_mcheck_long186,7347
union el_lca el_lca206,8250
#define __EXTERN_INLINE 215,8401
#define __IO_EXTERN_INLINE216,8439
__EXTERN_INLINE unsigned long lca_virt_to_bus(224,8581
__EXTERN_INLINE void * lca_bus_to_virt(229,8698
#define vip	253,9384
#define vuip	254,9411
#define vulp	255,9448
__EXTERN_INLINE unsigned int lca_inb(257,9487
__EXTERN_INLINE void lca_outb(263,9644
__EXTERN_INLINE unsigned int lca_inw(272,9820
__EXTERN_INLINE void lca_outw(278,9977
__EXTERN_INLINE unsigned int lca_inl(287,10154
__EXTERN_INLINE void lca_outl(292,10263
__EXTERN_INLINE unsigned long lca_readb(304,10521
__EXTERN_INLINE unsigned long lca_readw(317,10802
__EXTERN_INLINE unsigned long lca_readl(330,11083
__EXTERN_INLINE unsigned long lca_readq(335,11188
__EXTERN_INLINE void lca_writeb(340,11293
__EXTERN_INLINE void lca_writew(354,11581
__EXTERN_INLINE void lca_writel(368,11870
__EXTERN_INLINE void lca_writeq(373,11980
__EXTERN_INLINE unsigned long lca_dense_mem(380,12151
#define virt_to_bus	391,12301
#define bus_to_virt	392,12337
#define __inb	393,12373
#define __inw	394,12396
#define __inl	395,12419
#define __outb	396,12442
#define __outw	397,12467
#define __outl	398,12492
#define __readb	399,12517
#define __readw	400,12544
#define __writeb	401,12571
#define __writew	402,12599
#define __readl	403,12627
#define __readq	404,12654
#define __writel	405,12681
#define __writeq	406,12709
#define dense_mem	407,12737
#define inb(inb409,12770
#define outb(outb412,12845
#define readl(readl415,12938
#define readq(readq416,12983
#define writel(writel417,13028
#define writeq(writeq418,13081

include/asm-alpha/core_tsunami.h,4898
#define __ALPHA_TSUNAMI__H__2,29
#define TSUNAMI_DMA_WIN_BASE_DEFAULT 19,395
#define TSUNAMI_DMA_WIN_SIZE_DEFAULT 20,453
#define TSUNAMI_DMA_WIN_BASE	23,581
#define TSUNAMI_DMA_WIN_SIZE	24,633
#define TSUNAMI_DMA_WIN_BASE	26,691
#define TSUNAMI_DMA_WIN_SIZE	27,750
#define TS_BIAS 32,890
#define TS_BIAS 34,928
} tsunami_64;tsunami_6443,1088
} tsunami_cchip;tsunami_cchip75,1672
} tsunami_dchip;tsunami_dchip81,1759
} tsunami_pchip;tsunami_pchip97,2056
#define TSUNAMI_cchip 99,2074
#define TSUNAMI_dchip 100,2151
#define TSUNAMI_pchip0 101,2228
#define TSUNAMI_pchip1 102,2305
extern int TSUNAMI_bootcpu;103,2382
#define perror_m_lost 109,2452
#define perror_m_serr 110,2478
#define perror_m_perr 111,2504
#define perror_m_dcrto 112,2530
#define perror_m_sge 113,2557
#define perror_m_ape 114,2583
#define perror_m_ta 115,2609
#define perror_m_rdpe 116,2634
#define perror_m_nds 117,2661
#define perror_m_rto 118,2688
#define perror_m_uecc 119,2715
#define perror_m_cre 120,2743
#define perror_m_addrl 121,2770
#define perror_m_addrh 122,2810
#define perror_m_cmd 123,2851
#define perror_m_syn 124,2891
union TPchipPERROR TPchipPERROR125,2933
#define wsba_m_ena 152,3663
#define wsba_m_sg 153,3702
#define wsba_m_ptp 154,3724
#define wsba_m_addr 155,3747
#define wmask_k_sz1gb 156,3780
union TPchipWSBA TPchipWSBA157,3832
#define pctl_m_fdsc 172,4122
#define pctl_m_fbtb 173,4146
#define pctl_m_thdis 174,4170
#define pctl_m_chaindis 175,4195
#define pctl_m_tgtlat 176,4223
#define pctl_m_hole 177,4250
#define pctl_m_mwin 178,4275
#define pctl_m_arbena 179,4300
#define pctl_m_prigrp 180,4327
#define pctl_m_ppri 181,4356
#define pctl_m_rsvd1 182,4383
#define pctl_m_eccen 183,4412
#define pctl_m_padm 184,4441
#define pctl_m_cdqmax 185,4469
#define pctl_m_rev 186,4500
#define pctl_m_crqmax 187,4530
#define pctl_m_ptpmax 188,4566
#define pctl_m_pclkx 189,4603
#define pctl_m_fdsdis 190,4640
#define pctl_m_fdwdis 191,4678
#define pctl_m_ptevrfy 192,4716
#define pctl_m_rpp 193,4756
#define pctl_m_pid 194,4792
#define pctl_m_rsvd2 195,4828
union TPchipPCTL TPchipPCTL197,4871
#define perrmask_m_lost 230,5686
#define perrmask_m_serr 231,5714
#define perrmask_m_perr 232,5742
#define perrmask_m_dcrto 233,5770
#define perrmask_m_sge 234,5799
#define perrmask_m_ape 235,5827
#define perrmask_m_ta 236,5855
#define perrmask_m_rdpe 237,5882
#define perrmask_m_nds 238,5911
#define perrmask_m_rto 239,5940
#define perrmask_m_uecc 240,5969
#define perrmask_m_cre 241,5999
#define perrmask_m_rsvd 242,6028
union TPchipPERRMASK TPchipPERRMASK243,6073
#define HOSE(HOSE266,6683
#define TSUNAMI_MEM(TSUNAMI_MEM268,6729
#define _TSUNAMI_IACK_SC(_TSUNAMI_IACK_SC269,6806
#define TSUNAMI_IO(TSUNAMI_IO270,6884
#define TSUNAMI_CONF(TSUNAMI_CONF271,6960
#define TSUNAMI_IACK_SC	273,7039
struct el_TSUNAMI_sysdata_mcheck el_TSUNAMI_sysdata_mcheck279,7164
#define __EXTERN_INLINE 286,7247
#define __IO_EXTERN_INLINE287,7285
__EXTERN_INLINE unsigned long tsunami_virt_to_bus(294,7426
__EXTERN_INLINE void * tsunami_bus_to_virt(299,7551
#define vucp	311,7843
#define vusp	312,7881
#define vuip	313,7920
#define vulp	314,7957
#define XADDR	316,7996
#define XHOSE	317,8034
__EXTERN_INLINE unsigned int tsunami_inb(319,8072
__EXTERN_INLINE void tsunami_outb(324,8197
__EXTERN_INLINE unsigned int tsunami_inw(330,8334
__EXTERN_INLINE void tsunami_outw(335,8459
__EXTERN_INLINE unsigned int tsunami_inl(341,8597
__EXTERN_INLINE void tsunami_outl(346,8707
__EXTERN_INLINE unsigned long tsunami_readb(356,8904
__EXTERN_INLINE unsigned long tsunami_readw(361,9033
__EXTERN_INLINE unsigned long tsunami_readl(366,9162
__EXTERN_INLINE unsigned long tsunami_readq(371,9276
__EXTERN_INLINE void tsunami_writeb(376,9390
__EXTERN_INLINE void tsunami_writew(382,9530
__EXTERN_INLINE void tsunami_writel(388,9671
__EXTERN_INLINE void tsunami_writeq(394,9797
__EXTERN_INLINE unsigned long tsunami_dense_mem(402,9984
#define virt_to_bus	417,10183
#define bus_to_virt	418,10223
#define __inb	420,10264
#define __inw	421,10291
#define __inl	422,10318
#define __outb	423,10345
#define __outw	424,10374
#define __outl	425,10403
#define __readb	426,10432
#define __readw	427,10463
#define __writeb	428,10494
#define __writew	429,10526
#define __readl	430,10558
#define __readq	431,10589
#define __writel	432,10620
#define __writeq	433,10652
#define dense_mem	434,10684
#define inb(inb436,10721
#define inw(inw437,10753
#define inl(inl438,10785
#define outb(outb440,10818
#define outw(outw441,10859
#define outl(outl442,10900
#define readb(readb444,10942
#define readw(readw445,10987
#define readl(readl446,11032
#define readq(readq447,11077
#define writeb(writeb449,11123
#define writew(writew450,11176
#define writel(writel451,11229
#define writeq(writeq452,11282

include/asm-alpha/machvec.h,364
#define __ALPHA_MACHVEC_H 2,26
struct alpha_machine_vectoralpha_machine_vector23,471
extern struct alpha_machine_vector alpha_mv;113,3243
extern int alpha_using_srm;116,3317
extern int alpha_use_srm_setup;117,3345
#define alpha_using_srm 120,3407
#define alpha_using_srm 122,3439
#define alpha_use_srm_setup 125,3508
#define alpha_use_srm_setup 127,3544

include/asm-alpha/core_t2.h,3980
#define __ALPHA_T2__H__2,24
#define T2_MEM_R1_MASK 22,417
#define T2_DMA_WIN_BASE_DEFAULT	24,495
#define T2_DMA_WIN_SIZE_DEFAULT	25,544
#define T2_DMA_WIN_BASE	28,663
#define T2_DMA_WIN_SIZE	29,710
#define T2_DMA_WIN_BASE	31,763
#define T2_DMA_WIN_SIZE	32,812
#define _GAMMA_BIAS	36,918
#define GAMMA_BIAS	39,989
#define GAMMA_BIAS	41,1070
#define GAMMA_BIAS	43,1108
#define T2_CONF	49,1163
#define T2_IO	50,1230
#define T2_SPARSE_MEM	51,1288
#define T2_DENSE_MEM	52,1353
#define T2_IOCSR	54,1425
#define T2_CERR1	55,1485
#define T2_CERR2	56,1545
#define T2_CERR3	57,1605
#define T2_PERR1	58,1665
#define T2_PERR2	59,1725
#define T2_PSCR	60,1785
#define T2_HAE_1	61,1845
#define T2_HAE_2	62,1905
#define T2_HBASE	63,1965
#define T2_WBASE1	64,2025
#define T2_WMASK1	65,2086
#define T2_TBASE1	66,2147
#define T2_WBASE2	67,2208
#define T2_WMASK2	68,2269
#define T2_TBASE2	69,2330
#define T2_TLBBR	70,2391
#define T2_HAE_3	72,2452
#define T2_HAE_4	73,2512
#define T2_HAE_ADDRESS	75,2573
#define T2_CPU0_BASE 110,3687
#define T2_CPU1_BASE 111,3760
#define T2_CPU2_BASE 112,3833
#define T2_CPU3_BASE 113,3906
#define T2_MEM0_BASE 114,3979
#define T2_MEM1_BASE 115,4052
#define T2_MEM2_BASE 116,4125
#define T2_MEM3_BASE 117,4198
struct sable_cpu_csr sable_cpu_csr129,4567
struct el_t2_frame_header el_t2_frame_header151,5783
struct el_t2_procdata_mcheck el_t2_procdata_mcheck156,5921
struct el_t2_logout_header el_t2_logout_header183,7200
struct el_t2_sysdata_mcheck el_t2_sysdata_mcheck192,7624
struct el_t2_data_memory el_t2_data_memory214,8490
struct el_t2_data_other_cpu el_t2_data_other_cpu234,9286
struct el_t2_data_t2{el_t2_data_t2258,10070
struct el_t2_data_corrected el_t2_data_corrected288,11516
struct el_t2_frame_mcheck el_t2_frame_mcheck301,11834
struct el_t2_frame_corrected el_t2_frame_corrected315,12269
#define __EXTERN_INLINE 328,12650
#define __IO_EXTERN_INLINE329,12688
__EXTERN_INLINE unsigned long t2_virt_to_bus(337,12830
__EXTERN_INLINE void * t2_bus_to_virt(342,12945
#define vip	355,13246
#define vuip	356,13273
__EXTERN_INLINE unsigned int t2_inb(358,13311
__EXTERN_INLINE void t2_outb(364,13466
__EXTERN_INLINE unsigned int t2_inw(373,13640
__EXTERN_INLINE void t2_outw(379,13795
__EXTERN_INLINE unsigned int t2_inl(388,13970
__EXTERN_INLINE void t2_outl(393,14077
__EXTERN_INLINE unsigned long t2_srm_base(432,15289
__EXTERN_INLINE unsigned long t2_srm_readb(445,15636
__EXTERN_INLINE unsigned long t2_srm_readw(457,15894
__EXTERN_INLINE unsigned long t2_srm_readl(470,16231
__EXTERN_INLINE unsigned long t2_srm_readq(483,16598
__EXTERN_INLINE void t2_srm_writeb(496,16867
__EXTERN_INLINE void t2_srm_writew(505,17076
__EXTERN_INLINE void t2_srm_writel(515,17363
__EXTERN_INLINE void t2_srm_writeq(526,17712
__EXTERN_INLINE unsigned long t2_readb(536,17947
__EXTERN_INLINE unsigned long t2_readw(548,18207
__EXTERN_INLINE unsigned long t2_readl(561,18541
__EXTERN_INLINE unsigned long t2_readq(572,18749
__EXTERN_INLINE void t2_writeb(586,19037
__EXTERN_INLINE void t2_writew(597,19273
__EXTERN_INLINE void t2_writel(609,19584
__EXTERN_INLINE void t2_writeq(620,19806
__EXTERN_INLINE unsigned long t2_dense_mem(635,20141
#define virt_to_bus	645,20277
#define bus_to_virt	646,20312
#define __inb	647,20347
#define __inw	648,20369
#define __inl	649,20391
#define __outb	650,20413
#define __outw	651,20437
#define __outl	652,20461
#define __readb	655,20516
#define __readw	656,20546
#define __readl	657,20576
#define __readq	658,20606
#define __writeb	659,20636
#define __writew	660,20667
#define __writel	661,20698
#define __writeq	662,20729
#define __readb	664,20766
#define __readw	665,20792
#define __readl	666,20818
#define __readq	667,20844
#define __writeb	668,20870
#define __writew	669,20897
#define __writel	670,20924
#define __writeq	671,20951
#define dense_mem	674,20986
#define inb(inb676,21018
#define outb(outb679,21093

include/asm-alpha/pci.h,306
#define __ALPHA_PCI_H2,22
struct linux_hose_info linux_hose_info15,288
extern struct linux_hose_info *bus2hose[28,840
#define PCI_HANDLE(PCI_HANDLE37,1144
#define DEV_IS_ON_PRIMARY(DEV_IS_ON_PRIMARY38,1216
#define PCI_HANDLE(PCI_HANDLE43,1329
#define DEV_IS_ON_PRIMARY(DEV_IS_ON_PRIMARY44,1363

include/asm-alpha/core_polaris.h,2662
#define __ALPHA_POLARIS__H__2,29
#define		POLARIS_SPARSE_MEM_BASE	22,442
#define		POLARIS_DENSE_MEM_BASE	23,504
#define 	POLARIS_SPARSE_IO_BASE	24,565
#define		POLARIS_SPARSE_CONFIG_BASE	25,626
#define		POLARIS_IACK_BASE	26,690
#define		POLARIS_DENSE_IO_BASE	27,746
#define		POLARIS_DENSE_CONFIG_BASE	28,806
#define		POLARIS_IACK_SC	30,870
#define		POLARIS_W_VENID	35,1060
#define		POLARIS_W_DEVID	36,1114
#define		POLARIS_W_CMD	37,1170
#define		POLARIS_W_STATUS	38,1224
#define POLARIS_DMA_WIN_BASE_DEFAULT	44,1400
#define POLARIS_DMA_WIN_SIZE_DEFAULT	45,1469
#define POLARIS_DMA_WIN_BASE	48,1608
#define POLARIS_DMA_WIN_SIZE	49,1660
#define POLARIS_DMA_WIN_BASE	51,1718
#define POLARIS_DMA_WIN_SIZE	52,1777
struct el_POLARIS_sysdata_mcheck el_POLARIS_sysdata_mcheck58,1906
#define __EXTERN_INLINE 68,2089
#define __IO_EXTERN_INLINE69,2127
__EXTERN_INLINE unsigned long polaris_virt_to_bus(72,2162
__EXTERN_INLINE void * polaris_bus_to_virt(77,2287
#define vucp	92,2702
#define vusp	93,2740
#define vuip	94,2779
#define vulp	95,2817
__EXTERN_INLINE unsigned int polaris_inb(97,2857
__EXTERN_INLINE void polaris_outb(102,2992
__EXTERN_INLINE unsigned int polaris_inw(108,3132
__EXTERN_INLINE void polaris_outw(113,3267
__EXTERN_INLINE unsigned int polaris_inl(119,3408
__EXTERN_INLINE void polaris_outl(124,3528
__EXTERN_INLINE unsigned long polaris_readb(137,3849
__EXTERN_INLINE unsigned long polaris_readw(142,3988
__EXTERN_INLINE unsigned long polaris_readl(147,4127
__EXTERN_INLINE unsigned long polaris_readq(152,4251
__EXTERN_INLINE void polaris_writeb(157,4375
__EXTERN_INLINE void polaris_writew(163,4532
__EXTERN_INLINE void polaris_writel(169,4690
__EXTERN_INLINE void polaris_writeq(175,4833
__EXTERN_INLINE unsigned long polaris_dense_mem(183,5037
#define virt_to_bus 195,5220
#define bus_to_virt 196,5264
#define __inb 198,5309
#define __inw 199,5345
#define __inl 200,5381
#define __outb 201,5417
#define __outw 202,5454
#define __outl 203,5491
#define __readb 204,5528
#define __readw 205,5566
#define __writeb 206,5604
#define __writew 207,5643
#define __readl 208,5682
#define __readq 209,5720
#define __writel 210,5758
#define __writeq 211,5797
#define dense_mem 212,5836
#define inb(inb214,5879
#define inw(inw215,5911
#define inl(inl216,5943
#define outb(outb218,5976
#define outw(outw219,6017
#define outl(outl220,6058
#define readb(readb222,6100
#define readw(readw223,6152
#define readl(readl224,6204
#define readq(readq225,6256
#define writeb(writeb227,6309
#define writew(writew228,6366
#define writel(writel229,6423
#define writeq(writeq230,6480

include/asm-alpha/semaphore-helper.h,158
#define _ALPHA_SEMAPHORE_HELPER_H2,34
wake_one_more(19,410
waking_non_zero(25,498
waking_non_zero_interruptible(61,1243
waking_non_zero_trylock(123,2764

include/asm-generic/bitops.h,288
#define _ASM_GENERIC_BITOPS_H_2,31
extern __inline__ int set_bit(19,691
extern __inline__ int clear_bit(32,888
extern __inline__ int test_bit(45,1089
#define ffs(ffs62,1427
#define hweight32(hweight3269,1555
#define hweight16(hweight1670,1597
#define hweight8(hweight871,1639

include/asm-generic/unaligned.h,127
#define _ASM_GENERIC_UNALIGNED_H_2,34
#define get_unaligned(get_unaligned12,227
#define put_unaligned(put_unaligned15,337

include/asm-generic/smplock.h,241
extern spinlock_t kernel_flag;9,120
#define release_kernel_lock(release_kernel_lock14,215
#define reacquire_kernel_lock(reacquire_kernel_lock25,411
extern __inline__ void lock_kernel(39,659
extern __inline__ void unlock_kernel(45,761

include/linux/hdreg.h,3373
#define _LINUX_HDREG_H2,23
#define HD_IRQ 9,138
#define HD_DATA	14,296
#define HD_ERROR	15,343
#define HD_NSECTOR	16,385
#define HD_SECTOR	17,444
#define HD_LCYL	18,490
#define HD_HCYL	19,537
#define HD_CURRENT	20,592
#define HD_STATUS	21,653
#define HD_FEATURE 22,699
#define HD_PRECOMP 23,776
#define HD_COMMAND 24,853
#define HD_CMD	26,929
#define HD_ALTSTATUS	27,973
#define ERR_STAT	32,1152
#define INDEX_STAT	33,1174
#define ECC_STAT	34,1198
#define DRQ_STAT	35,1242
#define SEEK_STAT	36,1264
#define WRERR_STAT	37,1287
#define READY_STAT	38,1311
#define BUSY_STAT	39,1335
#define WIN_RESTORE	42,1387
#define WIN_READ	43,1413
#define WIN_WRITE	44,1436
#define WIN_WRITE_VERIFY	45,1460
#define WIN_VERIFY	46,1490
#define WIN_FORMAT	47,1515
#define WIN_INIT	48,1540
#define WIN_SEEK	49,1563
#define WIN_DIAGNOSE	50,1586
#define WIN_SPECIFY	51,1613
#define WIN_SETIDLE1	52,1676
#define WIN_SETIDLE2	53,1703
#define WIN_STANDBYNOW1	55,1731
#define WIN_STANDBYNOW2	56,1761
#define WIN_SLEEPNOW1	57,1791
#define WIN_SLEEPNOW2	58,1819
#define WIN_CHECKPOWERMODE1	59,1847
#define WIN_CHECKPOWERMODE2	60,1880
#define WIN_DOORLOCK	62,1914
#define WIN_DOORUNLOCK	63,1977
#define WIN_MULTREAD	65,2045
#define WIN_MULTWRITE	66,2111
#define WIN_SETMULT	67,2179
#define WIN_IDENTIFY	68,2240
#define WIN_IDENTIFY_DMA	69,2302
#define WIN_SETFEATURES	70,2368
#define WIN_READDMA	71,2431
#define WIN_WRITEDMA	72,2496
#define WIN_READ_BUFFER	74,2564
#define WIN_WRITE_BUFFER	75,2625
#define WIN_SMART	77,2688
#define WIN_PIDENTIFY	80,2809
#define WIN_SRST	81,2865
#define WIN_PACKETCMD	82,2919
#define SMART_READ_VALUES	86,3007
#define SMART_READ_THRESHOLDS	87,3038
#define SMART_AUTOSAVE	88,3073
#define SMART_SAVE	89,3102
#define SMART_IMMEDIATE_OFFLINE	90,3127
#define SMART_ENABLE	91,3164
#define SMART_DISABLE	92,3191
#define SMART_STATUS	93,3219
#define SMART_AUTO_OFFLINE	94,3246
#define SECURITY_SET_PASSWORD	97,3311
#define SECURITY_UNLOCK	98,3358
#define SECURITY_ERASE_PREPARE	99,3400
#define SECURITY_ERASE_UNIT	100,3448
#define SECURITY_FREEZE_LOCK	101,3493
#define SECURITY_DISABLE_PASSWORD	102,3539
#define MARK_ERR	105,3614
#define TRK0_ERR	106,3659
#define ABRT_ERR	107,3709
#define MCR_ERR	108,3753
#define ID_ERR	109,3802
#define ECC_ERR	110,3848
#define	BBD_ERR	111,3900
#define	ICRC_ERR	112,3964
struct hd_geometry hd_geometry114,4033
#define HDIO_GETGEO	122,4254
#define HDIO_GET_UNMASKINTR	123,4308
#define HDIO_GET_MULTCOUNT	124,4376
#define HDIO_OBSOLETE_IDENTITY	125,4450
#define HDIO_GET_KEEPSETTINGS	126,4534
#define HDIO_GET_32BIT	127,4609
#define HDIO_GET_NOWERR	128,4675
#define HDIO_GET_DMA	129,4741
#define HDIO_GET_NICE	130,4793
#define HDIO_GET_IDENTITY	131,4844
#define HDIO_DRIVE_CMD	132,4911
#define HDIO_SET_MULTCOUNT	135,5058
#define HDIO_SET_UNMASKINTR	136,5119
#define HDIO_SET_KEEPSETTINGS	137,5189
#define HDIO_SET_32BIT	138,5261
#define HDIO_SET_NOWERR	139,5320
#define HDIO_SET_DMA	140,5389
#define HDIO_SET_PIO_MODE	141,5444
#define HDIO_SCAN_HWIF	142,5515
#define HDIO_SET_NICE	143,5584
#define HDIO_UNREGISTER_HWIF	144,5635
struct hd_driveid hd_driveid147,5776
#define IDE_NICE_DSC_OVERLAP	259,11081
#define IDE_NICE_ATAPI_OVERLAP	260,11149
#define IDE_NICE_0	261,11208
#define IDE_NICE_1	262,11272
#define IDE_NICE_2	263,11337

include/linux/kernel.h,789
#define _LINUX_KERNEL_H2,24
#define barrier(barrier15,254
#define INT_MAX	17,311
#define UINT_MAX	18,344
#define LONG_MAX	19,367
#define ULONG_MAX	20,402
#define STACK_MAGIC	22,428
#define	KERN_EMERG	24,460
#define	KERN_ALERT	25,512
#define	KERN_CRIT	26,576
#define	KERN_ERR	27,628
#define	KERN_WARNING	28,676
#define	KERN_NOTICE	29,730
#define	KERN_INFO	30,795
#define	KERN_DEBUG	31,841
# define NORET_TYPE 33,896
# define ATTRIB_NORET 34,924
# define NORET_AND 35,973
#define FASTCALL(FASTCALL38,1023
#define FASTCALL(FASTCALL40,1079
NORET_TYPE void panic(44,1139
#define pr_debug(pr_debug59,1674
#define pr_debug(pr_debug62,1741
#define pr_info(pr_info66,1798
#define NIPQUAD(NIPQUAD73,1916
#define SI_LOAD_SHIFT	81,2091
struct sysinfo sysinfo82,2116

include/linux/sched.h,4081
#define _LINUX_SCHED_H2,23
extern unsigned long event;6,84
#define CSIGNAL	29,523
#define CLONE_VM	30,588
#define CLONE_FS	31,657
#define CLONE_FILES	32,731
#define CLONE_SIGHAND	33,811
#define CLONE_PID	34,880
#define CLONE_PTRACE	35,933
#define CLONE_VFORK	36,1027
extern unsigned long avenrun[48,1604
#define FSHIFT	50,1658
#define FIXED_1	51,1708
#define LOAD_FREQ	52,1762
#define EXP_1	53,1810
#define EXP_5	54,1869
#define EXP_15	55,1913
#define CALC_LOAD(CALC_LOAD57,1960
#define CT_TO_SECS(CT_TO_SECS62,2055
#define CT_TO_USECS(CT_TO_USECS63,2088
extern int nr_running,65,2138
extern int nr_running, nr_tasks;65,2138
extern int last_pid;66,2171
#define TASK_RUNNING	76,2346
#define TASK_INTERRUPTIBLE	77,2370
#define TASK_UNINTERRUPTIBLE	78,2399
#define TASK_ZOMBIE	79,2430
#define TASK_STOPPED	80,2453
#define TASK_SWAPPING	81,2477
#define SCHED_OTHER	86,2534
#define SCHED_FIFO	87,2557
#define SCHED_RR	88,2579
#define SCHED_YIELD	94,2695
struct sched_param sched_param96,2722
#define NULL 101,2781
extern rwlock_t tasklist_lock;114,3040
extern spinlock_t scheduler_lock;115,3071
extern spinlock_t runqueue_lock;116,3105
#define	MAX_SCHEDULE_TIMEOUT	122,3229
struct files_struct files_struct129,3404
#define INIT_FILES 137,3545
struct fs_struct fs_struct145,3653
#define INIT_FS 151,3735
#define MAX_MAP_COUNT	158,3875
#define AVL_MIN_MAP_COUNT	161,3987
struct mm_struct mm_struct163,4017
#define INIT_MM 187,4817
struct signal_struct signal_struct199,5038
#define INIT_SIGNALS 206,5141
struct task_struct task_struct218,5442
#define PF_ALIGNWARN	320,8454
#define PF_STARTING	322,8565
#define PF_EXITING	323,8616
#define PF_PTRACED	324,8670
#define PF_TRACESYS	325,8740
#define PF_FORKNOEXEC	326,8798
#define PF_SUPERPRIV	327,8860
#define PF_DUMPCORE	328,8925
#define PF_SIGNALED	329,8974
#define PF_MEMALLOC	330,9030
#define PF_VFORK	331,9085
#define PF_USEDFPU	333,9149
#define PF_DTRACE	334,9218
#define _STK_LIM	340,9414
#define DEF_PRIORITY	342,9446
#define INIT_TASK 348,9624
union task_union task_union383,10751
extern union task_union init_task_union;388,10828
extern struct   mm_struct init_mm;390,10870
extern struct task_struct *task[391,10905
extern struct task_struct **tarray_freelist;393,10949
extern spinlock_t taskslot_lock;394,10994
extern __inline__ void add_free_taskslot(396,11028
extern __inline__ struct task_struct **get_free_taskslot(404,11224
#define PIDHASH_SZ 417,11506
extern struct task_struct *pidhash[418,11541
#define pid_hashfn(pid_hashfn420,11590
extern __inline__ void hash_pid(422,11653
extern __inline__ void unhash_pid(432,11905
extern __inline__ struct task_struct *find_task_by_pid(439,12079
extern unsigned long volatile jiffies;455,12428
extern unsigned long itimer_ticks;456,12467
extern unsigned long itimer_next;457,12502
extern struct timeval xtime;458,12536
extern unsigned int * prof_buffer;461,12606
extern unsigned long prof_len;462,12641
extern unsigned long prof_shift;463,12672
#define CURRENT_TIME 465,12706
#define wake_up(wake_up476,13215
#define wake_up_interruptible(wake_up_interruptible477,13293
extern inline int signal_pending(500,14417
static inline void recalc_sigpending(509,14679
static inline int on_sig_stack(538,15398
static inline int sas_ss_flags(544,15540
extern inline int suser(571,16501
extern inline int fsuser(580,16652
extern inline int capable(595,17007
static inline void mmget(613,17348
extern inline void __add_wait_queue(638,18215
extern rwlock_t waitqueue_lock;644,18359
extern inline void add_wait_queue(646,18392
extern inline void __remove_wait_queue(655,18627
extern inline void remove_wait_queue(667,18897
#define __wait_event(__wait_event676,19139
#define wait_event(wait_event692,19538
#define __wait_event_interruptible(__wait_event_interruptible699,19685
#define wait_event_interruptible(wait_event_interruptible720,20214
#define REMOVE_LINKS(REMOVE_LINKS728,20405
#define SET_LINKS(SET_LINKS739,20718
#define for_each_task(for_each_task750,21040

include/linux/sys.h,307
#define _LINUX_SYS_H2,21
#define NR_syscalls 7,106
#define _sys_waitpid	15,303
#define _sys_olduname	16,358
#define _sys_uname	17,417
#define _sys_stat	18,473
#define _sys_fstat	19,527
#define _sys_lstat	20,583
#define _sys_signal	21,639
#define _sys_sgetmask	22,697
#define _sys_ssetmask	23,759

include/linux/tty.h,4786
#define _LINUX_TTY_H2,21
#define MIN_NR_CONSOLES 12,207
#define MAX_NR_CONSOLES	13,264
#define MAX_NR_USER_CONSOLES 14,322
#define NR_PTYS	37,956
#define NR_LDISCS	38,994
# define UNIX98_NR_MAJORS 46,1201
#  define UNIX98_NR_MAJORS 52,1443
struct screen_info screen_info60,1572
extern struct screen_info screen_info;96,2970
#define ORIG_X	98,3010
#define ORIG_Y	99,3048
#define ORIG_VIDEO_MODE	100,3086
#define ORIG_VIDEO_COLS 101,3141
#define ORIG_VIDEO_EGA_BX	102,3196
#define ORIG_VIDEO_LINES	103,3254
#define ORIG_VIDEO_ISVGA	104,3310
#define ORIG_VIDEO_POINTS 105,3366
#define VIDEO_TYPE_MDA	107,3431
#define VIDEO_TYPE_CGA	108,3490
#define VIDEO_TYPE_EGAM	109,3540
#define VIDEO_TYPE_EGAC	110,3603
#define VIDEO_TYPE_VGAC	111,3658
#define VIDEO_TYPE_VLFB	112,3714
#define VIDEO_TYPE_TGAC	114,3780
#define VIDEO_TYPE_SUN 116,3825
#define VIDEO_TYPE_SUNPCI 117,3889
#define VIDEO_TYPE_PMAC	119,3964
#define __DISABLED_CHAR 126,4229
#define TTY_FLIPBUF_SIZE 133,4459
struct tty_flip_buffer tty_flip_buffer135,4489
#define PTY_BUF_SIZE	149,4862
#define TTY_NORMAL	155,5015
#define TTY_BREAK	156,5036
#define TTY_FRAME	157,5056
#define TTY_PARITY	158,5076
#define TTY_OVERRUN	159,5097
#define INTR_CHAR(INTR_CHAR161,5120
#define QUIT_CHAR(QUIT_CHAR162,5173
#define ERASE_CHAR(ERASE_CHAR163,5226
#define KILL_CHAR(KILL_CHAR164,5281
#define EOF_CHAR(EOF_CHAR165,5334
#define TIME_CHAR(TIME_CHAR166,5385
#define MIN_CHAR(MIN_CHAR167,5438
#define SWTC_CHAR(SWTC_CHAR168,5489
#define START_CHAR(START_CHAR169,5542
#define STOP_CHAR(STOP_CHAR170,5597
#define SUSP_CHAR(SUSP_CHAR171,5650
#define EOL_CHAR(EOL_CHAR172,5703
#define REPRINT_CHAR(REPRINT_CHAR173,5754
#define DISCARD_CHAR(DISCARD_CHAR174,5813
#define WERASE_CHAR(WERASE_CHAR175,5872
#define LNEXT_CHAR(LNEXT_CHAR176,5929
#define EOL2_CHAR(EOL2_CHAR177,5984
#define _I_FLAG(_I_FLAG179,6038
#define _O_FLAG(_O_FLAG180,6093
#define _C_FLAG(_C_FLAG181,6148
#define _L_FLAG(_L_FLAG182,6203
#define I_IGNBRK(I_IGNBRK184,6259
#define I_BRKINT(I_BRKINT185,6303
#define I_IGNPAR(I_IGNPAR186,6347
#define I_PARMRK(I_PARMRK187,6391
#define I_INPCK(I_INPCK188,6435
#define I_ISTRIP(I_ISTRIP189,6477
#define I_INLCR(I_INLCR190,6521
#define I_IGNCR(I_IGNCR191,6563
#define I_ICRNL(I_ICRNL192,6605
#define I_IUCLC(I_IUCLC193,6647
#define I_IXON(I_IXON194,6689
#define I_IXANY(I_IXANY195,6729
#define I_IXOFF(I_IXOFF196,6771
#define I_IMAXBEL(I_IMAXBEL197,6813
#define O_OPOST(O_OPOST199,6860
#define O_OLCUC(O_OLCUC200,6902
#define O_ONLCR(O_ONLCR201,6944
#define O_OCRNL(O_OCRNL202,6986
#define O_ONOCR(O_ONOCR203,7028
#define O_ONLRET(O_ONLRET204,7070
#define O_OFILL(O_OFILL205,7114
#define O_OFDEL(O_OFDEL206,7156
#define O_NLDLY(O_NLDLY207,7198
#define O_CRDLY(O_CRDLY208,7240
#define O_TABDLY(O_TABDLY209,7282
#define O_BSDLY(O_BSDLY210,7326
#define O_VTDLY(O_VTDLY211,7368
#define O_FFDLY(O_FFDLY212,7410
#define C_BAUD(C_BAUD214,7453
#define C_CSIZE(C_CSIZE215,7494
#define C_CSTOPB(C_CSTOPB216,7536
#define C_CREAD(C_CREAD217,7580
#define C_PARENB(C_PARENB218,7622
#define C_PARODD(C_PARODD219,7666
#define C_HUPCL(C_HUPCL220,7710
#define C_CLOCAL(C_CLOCAL221,7752
#define C_CIBAUD(C_CIBAUD222,7796
#define C_CRTSCTS(C_CRTSCTS223,7840
#define L_ISIG(L_ISIG225,7887
#define L_ICANON(L_ICANON226,7927
#define L_XCASE(L_XCASE227,7971
#define L_ECHO(L_ECHO228,8013
#define L_ECHOE(L_ECHOE229,8053
#define L_ECHOK(L_ECHOK230,8095
#define L_ECHONL(L_ECHONL231,8137
#define L_NOFLSH(L_NOFLSH232,8181
#define L_TOSTOP(L_TOSTOP233,8225
#define L_ECHOCTL(L_ECHOCTL234,8269
#define L_ECHOPRT(L_ECHOPRT235,8315
#define L_ECHOKE(L_ECHOKE236,8361
#define L_FLUSHO(L_FLUSHO237,8405
#define L_PENDIN(L_PENDIN238,8449
#define L_IEXTEN(L_IEXTEN239,8493
struct tty_struct tty_struct255,9311
#define N_TTY_BUF_SIZE 281,9969
#define TTY_MAGIC	306,10647
#define TTY_THROTTLED 316,10981
#define TTY_IO_ERROR 317,11005
#define TTY_OTHER_CLOSED 318,11028
#define TTY_EXCLUSIVE 319,11055
#define TTY_DEBUG 320,11079
#define TTY_DO_WRITE_WAKEUP 321,11099
#define TTY_PUSH 322,11129
#define TTY_CLOSING 323,11148
#define TTY_DONT_FLIP 324,11170
#define TTY_HW_COOK_OUT 325,11194
#define TTY_HW_COOK_IN 326,11221
#define TTY_PTY_LOCK 327,11247
#define TTY_WRITE_FLUSH(TTY_WRITE_FLUSH329,11272
extern struct termios tty_std_termios;333,11376
extern struct tty_struct * redirect;334,11415
extern struct tty_ldisc ldiscs[335,11452
extern int fg_console,336,11486
extern int fg_console, last_console,336,11486
extern int fg_console, last_console, want_console;336,11486
extern int kmsg_redirect;338,11538
extern struct tty_ldisc tty_ldisc_N_TTY;385,13297

include/linux/fs.h,6035
#define _LINUX_FS_H2,20
#define NR_OPEN 40,900
#define BLOCK_SIZE_BITS 42,922
#define BLOCK_SIZE 43,949
extern int max_inodes;46,1041
extern int max_files,47,1064
extern int max_files, nr_files,47,1064
extern int max_files, nr_files, nr_free_files;47,1064
extern int max_super_blocks,48,1111
extern int max_super_blocks, nr_super_blocks;48,1111
#define NR_FILE 50,1158
#define NR_RESERVED_FILES 51,1229
#define NR_SUPER 52,1282
#define MAY_EXEC 54,1304
#define MAY_WRITE 55,1323
#define MAY_READ 56,1343
#define FMODE_READ 58,1363
#define FMODE_WRITE 59,1384
#define READ 61,1407
#define WRITE 62,1422
#define READA 63,1438
#define WRITEA 64,1503
#define NULL 67,1582
#define NIL_FILP	70,1616
#define SEL_IN	71,1652
#define SEL_OUT	72,1670
#define SEL_EX	73,1689
#define FS_REQUIRES_DEV 76,1748
#define FS_NO_DCACHE 77,1775
#define FS_NO_PRELIM 78,1841
#define FS_IBASKET 81,1952
#define MS_RDONLY	86,2120
#define MS_NOSUID	87,2163
#define MS_NODEV	88,2216
#define MS_NOEXEC	89,2282
#define MS_SYNCHRONOUS	90,2336
#define MS_REMOUNT	91,2394
#define MS_MANDLOCK	92,2450
#define S_QUOTA	93,2510
#define S_APPEND	94,2582
#define S_IMMUTABLE	95,2626
#define MS_NOATIME	96,2671
#define MS_NODIRATIME 97,2729
#define MS_RMT_MASK 102,2855
#define MS_MGC_VAL 107,3040
#define MS_MGC_MSK 108,3118
#define __IS_FLG(__IS_FLG123,3841
#define IS_RDONLY(IS_RDONLY126,3956
#define IS_NOSUID(IS_NOSUID127,4039
#define IS_NODEV(IS_NODEV128,4091
#define IS_NOEXEC(IS_NOEXEC129,4142
#define IS_SYNC(IS_SYNC130,4194
#define IS_MANDLOCK(IS_MANDLOCK131,4250
#define IS_QUOTAINIT(IS_QUOTAINIT133,4307
#define IS_APPEND(IS_APPEND134,4364
#define IS_IMMUTABLE(IS_IMMUTABLE135,4419
#define IS_NOATIME(IS_NOATIME136,4480
#define IS_NODIRATIME(IS_NODIRATIME137,4534
#define BLKROSET 142,4745
#define BLKROGET 143,4821
#define BLKRRPART 144,4897
#define BLKGETSIZE 145,4959
#define BLKFLSBUF 146,5016
#define BLKRASET 147,5073
#define BLKRAGET 148,5143
#define BLKFRASET 149,5212
#define BLKFRAGET 150,5291
#define BLKSECTSET 151,5370
#define BLKSECTGET 152,5450
#define BLKSSZGET 153,5530
#define BMAP_IOCTL 155,5613
#define FIBMAP	156,5675
#define FIGETBSZ 157,5723
#define UPDATE_ATIME(UPDATE_ATIME166,5940
typedef char buffer_block[buffer_block173,6118
#define BH_Uptodate	176,6178
#define BH_Dirty	177,6242
#define BH_Lock	178,6292
#define BH_Req	179,6343
#define BH_Protected	180,6404
struct buffer_head buffer_head194,6912
typedef void (bh_end_io_t)bh_end_io_t224,8061
static inline int buffer_uptodate(228,8232
static inline int buffer_dirty(233,8342
static inline int buffer_locked(238,8445
static inline int buffer_req(243,8548
static inline int buffer_protected(248,8647
#define touch_buffer(touch_buffer264,9130
#define ATTR_MODE	289,9795
#define ATTR_UID	290,9815
#define ATTR_GID	291,9834
#define ATTR_SIZE	292,9853
#define ATTR_ATIME	293,9873
#define ATTR_MTIME	294,9895
#define ATTR_CTIME	295,9917
#define ATTR_ATIME_SET	296,9939
#define ATTR_MTIME_SET	297,9966
#define ATTR_FORCE	298,9993
#define ATTR_ATTR_FLAG	299,10052
struct iattr iattr310,10467
#define ATTR_FLAG_SYNCRONOUS	325,10720
#define ATTR_FLAG_NOATIME	326,10775
#define ATTR_FLAG_APPEND	327,10829
#define ATTR_FLAG_IMMUTABLE	328,10880
#define ATTR_FLAG_NODIRATIME	329,10932
struct inode inode337,11112
#define I_DIRTY	402,12703
#define I_LOCK	403,12722
#define I_FREEING	404,12740
static inline void mark_inode_dirty(407,12809
struct fown_struct fown_struct413,12934
struct file file419,13139
#define FL_POSIX	439,13621
#define FL_FLOCK	440,13640
#define FL_BROKEN	441,13659
#define FL_ACCESS	442,13710
#define FL_LOCKD	443,13781
typedef struct files_struct *fl_owner_t;fl_owner_t452,14019
struct file_lock file_lock454,14061
extern struct file_lock			*file_lock_table;476,14689
struct fasync_struct fasync_struct493,15323
#define FASYNC_MAGIC 500,15462
extern struct list_head super_blocks;520,16017
#define sb_entry(sb_entry522,16056
struct super_block super_block523,16126
typedef int (*filldir_t)filldir_t578,17731
struct file_operations file_operations580,17800
struct inode_operations inode_operations598,18599
struct super_operations super_operations622,19692
struct dquot_operations dquot_operations636,20225
struct file_system_type file_system_type646,20652
#define FLOCK_VERIFY_READ 657,20943
#define FLOCK_VERIFY_WRITE 658,20972
extern inline int locks_verify_locked(665,21185
extern inline int locks_verify_area(676,21522
#define __getname(__getname703,22403
#define putname(putname704,22462
extern struct file_operations def_blk_fops;711,22845
extern struct inode_operations blkdev_inode_operations;712,22889
extern struct file_operations def_chr_fops;718,23182
extern struct inode_operations chrdev_inode_operations;719,23226
extern struct inode_operations fifo_inode_operations;726,23437
extern struct file_operations connecting_fifo_fops;732,23639
extern struct file_operations read_fifo_fops;733,23691
extern struct file_operations write_fifo_fops;734,23737
extern struct file_operations rdwr_fifo_fops;735,23784
extern struct file_operations read_pipe_fops;736,23830
extern struct file_operations write_pipe_fops;737,23876
extern struct file_operations rdwr_pipe_fops;738,23923
extern struct file *inuse_filps;745,24124
extern int nr_buffers;751,24322
extern int buffermem;752,24345
extern int nr_buffer_heads;753,24367
#define BUF_CLEAN	755,24396
#define BUF_LOCKED	756,24416
#define BUF_DIRTY	757,24471
#define NR_LIST	758,24540
extern inline void mark_buffer_clean(762,24621
extern inline void mark_buffer_dirty(770,24795
#define ERR_PTR(ERR_PTR810,26313
#define PTR_ERR(PTR_ERR811,26358
#define IS_ERR(IS_ERR812,26393
#define namei(namei817,26606
#define lnamei(lnamei818,26652
extern inline void brelse(834,27351
extern inline void bforget(840,27481
extern kdev_t ROOT_DEV;862,28422
extern kdev_t real_root_dev;868,28539
extern int read_ahead[874,28776

include/linux/mm.h,3109
#define _LINUX_MM_H2,20
extern unsigned long max_mapnr;11,138
extern unsigned long num_physpages;12,170
extern void * high_memory;13,206
extern int page_cluster;14,233
struct vm_area_struct vm_area_struct34,889
#define VM_READ	65,1665
#define VM_WRITE	66,1718
#define VM_EXEC	67,1742
#define VM_SHARED	68,1766
#define VM_MAYREAD	70,1792
#define VM_MAYWRITE	71,1850
#define VM_MAYEXEC	72,1877
#define VM_MAYSHARE	73,1903
#define VM_GROWSDOWN	75,1931
#define VM_GROWSUP	76,1993
#define VM_SHM	77,2019
#define VM_DENYWRITE	78,2083
#define VM_EXECUTABLE	80,2146
#define VM_LOCKED	81,2175
#define VM_IO 82,2200
#define VM_STACK_FLAGS	84,2268
extern pgprot_t protection_map[90,2419
struct vm_operations_struct vm_operations_struct98,2681
typedef struct page page120,3786
} mem_map_t;mem_map_t132,4146
#define PG_locked	135,4187
#define PG_error	136,4209
#define PG_referenced	137,4230
#define PG_dirty	138,4256
#define PG_uptodate	139,4277
#define PG_free_after	140,4301
#define PG_decr_after	141,4327
#define PG_swap_unlock_after	142,4353
#define PG_DMA	143,4385
#define PG_Slab	144,4405
#define PG_swap_cache	145,4426
#define PG_skip	146,4452
#define PG_reserved	147,4473
#define PageLocked(PageLocked150,4542
#define PageError(PageError151,4605
#define PageReferenced(PageReferenced152,4667
#define PageDirty(PageDirty153,4738
#define PageUptodate(PageUptodate154,4800
#define PageFreeAfter(PageFreeAfter155,4867
#define PageDecrAfter(PageDecrAfter156,4937
#define PageSwapUnlockAfter(PageSwapUnlockAfter157,5007
#define PageDMA(PageDMA158,5090
#define PageSlab(PageSlab159,5148
#define PageSwapCache(PageSwapCache160,5208
#define PageReserved(PageReserved161,5278
#define PageSetSlab(PageSetSlab163,5346
#define PageSetSwapCache(PageSetSwapCache164,5407
#define PageTestandSetDirty(PageTestandSetDirty166,5480
#define PageTestandSetSwapCache(PageTestandSetSwapCache168,5564
#define PageClearSlab(PageClearSlab171,5658
#define PageClearSwapCache(PageClearSwapCache172,5723
#define PageTestandClearDirty(PageTestandClearDirty174,5799
#define PageTestandClearSwapCache(PageTestandClearSwapCache176,5887
extern mem_map_t * mem_map;251,9163
#define __get_free_page(__get_free_page258,9388
#define __get_dma_pages(__get_dma_pages259,9453
extern inline unsigned long get_free_page(262,9630
extern int low_on_memory;272,9793
#define free_page(free_page276,9844
extern int pgt_cache_water[297,10981
#define __GFP_WAIT	329,12193
#define __GFP_LOW	330,12217
#define __GFP_MED	331,12240
#define __GFP_HIGH	332,12263
#define __GFP_IO	333,12287
#define __GFP_SWAP	334,12309
#define __GFP_DMA	336,12334
#define GFP_BUFFER	338,12358
#define GFP_ATOMIC	339,12402
#define GFP_USER	340,12434
#define GFP_KERNEL	341,12487
#define GFP_NFS	342,12542
#define GFP_KSWAPD	343,12596
#define GFP_DMA	348,12767
static inline int expand_stack(352,12909
static inline struct vm_area_struct * find_vma_intersection(376,13766
#define buffer_under_min(buffer_under_min385,14027
#define pgcache_under_min(pgcache_under_min387,14135

include/linux/loop.h,777
#define _LINUX_LOOP_H2,22
#define LO_NAME_SIZE	15,259
#define LO_KEY_SIZE	16,283
struct loop_device loop_device20,333
typedef	int (* transfer_proc_t)transfer_proc_t44,970
#define LO_FLAGS_DO_BMAP	53,1146
#define LO_FLAGS_READ_ONLY	54,1182
struct loop_info loop_info71,1640
#define LO_CRYPT_NONE	90,2093
#define LO_CRYPT_XOR	91,2119
#define LO_CRYPT_DES	92,2144
#define LO_CRYPT_FISH2 93,2169
#define LO_CRYPT_BLOW 94,2235
#define LO_CRYPT_CAST128 95,2263
#define LO_CRYPT_IDEA 96,2291
#define LO_CRYPT_DUMMY 97,2319
#define LO_CRYPT_SKIPJACK 98,2347
#define MAX_LO_CRYPT	99,2376
struct loop_func_table loop_func_table103,2463
#define LOOP_SET_FD	125,3168
#define LOOP_CLR_FD	126,3195
#define LOOP_SET_STATUS	127,3222
#define LOOP_GET_STATUS	128,3253

include/linux/config.h,29
#define _LINUX_CONFIG_H2,24

include/linux/fdreg.h,2203
#define _LINUX_FDREG_H2,23
#define FD_IOPORT 11,235
#define FD_STATUS	14,323
#define FD_DATA	15,358
#define FD_DOR	18,423
#define FD_DIR	21,493
#define FD_DCR	24,566
#define FD_STATUS	28,607
#define FD_DATA	29,631
#define FD_DOR	30,654
#define FD_DIR	31,707
#define FD_DCR	32,766
#define STATUS_BUSYMASK	37,872
#define STATUS_BUSY	38,924
#define STATUS_DMA	39,965
#define STATUS_DIR	40,1008
#define STATUS_READY	41,1051
#define ST0_DS	44,1121
#define ST0_HA	45,1167
#define ST0_NR	46,1210
#define ST0_ECE	47,1248
#define ST0_SE	48,1299
#define ST0_INTR	49,1336
#define ST1_MAM	52,1407
#define ST1_WP	53,1457
#define ST1_ND	54,1499
#define ST1_OR	55,1548
#define ST1_CRC	56,1584
#define ST1_EOC	57,1639
#define ST2_MAM	60,1706
#define ST2_BC	61,1764
#define ST2_SNS	62,1805
#define ST2_SEH	63,1853
#define ST2_WC	64,1897
#define ST2_CRC	65,1940
#define ST2_CM	66,1993
#define ST3_HA	69,2066
#define ST3_DS	70,2109
#define ST3_TZ	71,2159
#define ST3_RY	72,2217
#define ST3_WP	73,2260
#define ST3_FT	74,2302
#define FD_RECALIBRATE	77,2371
#define FD_SEEK	78,2422
#define FD_READ	79,2462
#define FD_WRITE	80,2523
#define FD_SENSEI	81,2571
#define FD_SPECIFY	82,2624
#define FD_FORMAT	83,2671
#define FD_VERSION	84,2718
#define FD_CONFIGURE	85,2766
#define FD_PERPENDICULAR	86,2824
#define FD_GETSTATUS	87,2883
#define FD_DUMPREGS	88,2925
#define FD_READID	89,2991
#define FD_UNLOCK	90,3051
#define FD_LOCK	91,3100
#define FD_RSEEK_OUT	92,3146
#define FD_RSEEK_IN	93,3211
#define FD_PARTID	100,3573
#define FD_SAVE	101,3636
#define FD_DRIVESPEC	102,3697
#define FD_RESTORE	106,3824
#define FD_POWERDOWN	107,3872
#define FD_FORMAT_N_WRITE	108,3940
#define FD_OPTION	109,4008
#define DMA_READ	113,4132
#define DMA_WRITE	114,4154
#define FDC_NONE	117,4209
#define FDC_UNKNOWN	118,4231
#define FDC_8272A	120,4327
#define FDC_765ED	121,4377
#define FDC_82072	122,4449
#define FDC_82072A	123,4515
#define FDC_82077_ORIG	124,4564
#define FDC_82077	125,4637
#define FDC_82078_UNKN	126,4676
#define FDC_82078	127,4732
#define FDC_82078_1	128,4790
#define FDC_S82078B	129,4841
#define FDC_87306	131,4952
#define FD_RESET_DELAY 142,5428

include/linux/msdos_fs.h,2484
#define _LINUX_MSDOS_FS_H2,26
#define MSDOS_ROOT_INO 13,203
#define SECTOR_SIZE 14,253
#define SECTOR_BITS	15,307
#define MSDOS_DPB	16,353
#define MSDOS_DPB_BITS	17,411
#define MSDOS_DPS	18,458
#define MSDOS_DPS_BITS	19,521
#define MSDOS_DIR_BITS	20,568
#define MSDOS_SUPER_MAGIC 22,637
#define FAT_CACHE 24,680
#define MSDOS_MAX_EXTRA	26,725
#define ATTR_RO 29,857
#define ATTR_HIDDEN 30,897
#define ATTR_SYS 31,934
#define ATTR_VOLUME 32,971
#define ATTR_DIR 33,1014
#define ATTR_ARCH 34,1054
#define ATTR_NONE 36,1094
#define ATTR_UNUSED 37,1141
#define ATTR_EXT 39,1259
#define ATTR_DIR_READ_BOTH 42,1398
#define ATTR_DIR_READ_SHORT 46,1588
#define CASE_LOWER_BASE 48,1622
#define CASE_LOWER_EXT 49,1673
#define SCAN_ANY 51,1731
#define SCAN_HID 52,1782
#define SCAN_NOTHID 53,1824
#define SCAN_NOTANY 54,1870
#define DELETED_FLAG 56,1945
#define IS_FREE(IS_FREE57,2015
#define MSDOS_VALID_MODE 60,2143
#define MSDOS_SB(MSDOS_SB63,2247
#define MSDOS_I(MSDOS_I64,2288
#define MSDOS_NAME 66,2328
#define MSDOS_LONGNAME 67,2376
#define MSDOS_SLOTS 68,2429
#define MSDOS_DOT 69,2506
#define MSDOS_DOTDOT 70,2579
#define MSDOS_FAT12 72,2654
#define EOF_FAT12 74,2729
#define EOF_FAT16 75,2773
#define EOF_FAT32 76,2798
#define EOF_FAT(EOF_FAT77,2826
#define FAT_BINARY_FL	83,2967
#define	VFAT_IOCTL_READDIR_BOTH	88,3059
#define	VFAT_IOCTL_READDIR_SHORT	89,3124
#define CF_LE_W(CF_LE_W98,3409
#define CF_LE_L(CF_LE_L99,3443
#define CT_LE_W(CT_LE_W100,3477
#define CT_LE_L(CT_LE_L101,3511
struct fat_boot_sector fat_boot_sector103,3546
struct fat_boot_fsinfo fat_boot_fsinfo130,4644
struct msdos_dir_entry msdos_dir_entry139,4943
struct msdos_dir_slot msdos_dir_slot153,5456
struct vfat_slot_info vfat_slot_info164,5883
#define MSDOS_CAN_BMAP(MSDOS_CAN_BMAP174,6319
#define MSDOS_MKMODE(MSDOS_MKMODE178,6470
#define MSDOS_MKATTR(MSDOS_MKATTR181,6601
typedef int (*fat_filldir_t)fat_filldir_t186,6684
struct fat_cache fat_cache189,6800
extern struct file_operations fat_dir_operations;239,9081
extern struct inode_operations fat_file_inode_operations;249,9503
extern struct inode_operations fat_file_inode_operations_1024;250,9561
extern struct inode_operations fat_file_inode_operations_readpage;251,9624
extern struct file_system_type msdos_fs_type;267,10118
extern unsigned char fat_uni2esc[288,11016
extern unsigned char fat_esc2uni[289,11052
extern struct file_system_type vfat_fs_type;318,12295

include/linux/timer.h,836
#define _LINUX_TIMER_H2,23
#define BLANK_TIMER	11,204
#define BEEP_TIMER	12,253
#define RS_TIMER	13,293
#define SWAP_TIMER	14,331
#define BACKGR_TIMER 15,377
#define HD_TIMER	16,435
#define FLOPPY_TIMER	17,475
#define QIC02_TAPE_TIMER 18,511
#define MCD_TIMER	19,556
#define GSCD_TIMER	20,596
#define COMTROL_TIMER	21,638
#define DIGI_TIMER	22,684
#define GDTH_TIMER	23,724
#define COPRO_TIMER	25,776
struct timer_struct timer_struct27,849
extern unsigned long timer_active;32,918
extern struct timer_struct timer_table[33,953
struct timer_list timer_list48,1534
extern inline void init_timer(68,2143
extern inline int timer_pending(74,2247
#define time_after(time_after90,2769
#define time_before(time_before91,2822
#define time_after_eq(time_after_eq93,2864
#define time_before_eq(time_before_eq94,2920

include/linux/tasks.h,199
#define _LINUX_TASKS_H2,23
#define NR_CPUS	9,133
#define NR_CPUS 11,207
#define NR_TASKS	14,233
#define MAX_TASKS_PER_USER 16,304
#define MIN_TASKS_LEFT_FOR_ROOT 17,344
#define PID_MAX 23,443

include/linux/minix_fs.h,1027
#define _LINUX_MINIX_FS_H2,26
#define MINIX_ROOT_INO 14,258
#define MINIX_LINK_MAX	17,355
#define MINIX2_LINK_MAX	18,382
#define MINIX_I_MAP_SLOTS	20,413
#define MINIX_Z_MAP_SLOTS	21,441
#define MINIX_SUPER_MAGIC	22,470
#define MINIX_SUPER_MAGIC2	23,528
#define MINIX2_SUPER_MAGIC	24,593
#define MINIX2_SUPER_MAGIC2	25,646
#define MINIX_VALID_FS	26,715
#define MINIX_ERROR_FS	27,763
#define MINIX_INODES_PER_BLOCK 29,817
#define MINIX2_INODES_PER_BLOCK 30,893
#define MINIX_V1	32,972
#define MINIX_V2	33,1022
#define INODE_VERSION(INODE_VERSION35,1067
struct minix_inode minix_inode41,1233
struct minix2_inode minix2_inode57,1608
struct minix_super_block minix_super_block72,1817
struct minix_dir_entry minix_dir_entry85,2042
extern struct inode_operations minix_file_inode_operations;120,3621
extern struct inode_operations minix_dir_inode_operations;121,3681
extern struct inode_operations minix_symlink_inode_operations;122,3740
extern struct dentry_operations minix_dentry_operations;123,3803

include/linux/vt.h,610
#define _LINUX_VT_H2,20
#define VT_OPENQRY	6,100
struct vt_mode vt_mode8,151
#define VT_GETMODE	15,400
#define VT_SETMODE	16,454
#define		VT_AUTO	17,508
#define		VT_PROCESS	18,555
#define		VT_ACKACQ	19,613
struct vt_stat vt_stat21,663
#define VT_GETSTATE	26,815
#define VT_SENDSIG	27,873
#define VT_RELDISP	29,939
#define VT_ACTIVATE	31,988
#define VT_WAITACTIVE	32,1036
#define VT_DISALLOCATE	33,1090
struct vt_sizes vt_sizes35,1157
#define VT_RESIZE	40,1339
struct vt_consize vt_consize42,1403
#define VT_RESIZEX 50,1777
#define VT_LOCKSWITCH 51,1854
#define VT_UNLOCKSWITCH 52,1914

include/linux/lp.h,1693
#define _LINUX_LP_H2,20
#define LP_PARPORT_UNSPEC 11,260
#define LP_PARPORT_AUTO 12,289
#define LP_PARPORT_OFF 13,316
#define LP_PARPORT_NONE 14,342
#define LP_EXIST 20,494
#define LP_SELEC 21,518
#define LP_BUSY	22,542
#define LP_BUSY_BIT_POS 23,566
#define LP_OFFL	24,592
#define LP_NOPA 25,616
#define LP_ERR 26,640
#define LP_ABORT 27,664
#define LP_CAREFUL 28,688
#define LP_ABORTOPEN 29,736
#define	LP_TRUST_IRQ 30,764
#define LP_INIT_CHAR 40,1216
#define LP_INIT_WAIT 46,1359
#define LP_INIT_TIME 58,1905
#define LPCHAR 61,1949
#define LPTIME 62,2008
#define LPABORT 63,2067
#define LPSETIRQ 65,2179
#define LPGETIRQ 67,2269
#define LPWAIT 68,2327
#define LPCAREFUL 70,2466
#define LPABORTOPEN 73,2652
#define LPGETSTATUS 75,2782
#define LPRESET 76,2835
#define LPGETSTATS 78,2899
#define LPGETFLAGS 80,2973
#define LPTRUSTIRQ 81,3024
#define LP_TIMEOUT_INTERRUPT	87,3277
#define LP_TIMEOUT_POLLED	88,3316
#define LP_F(LP_F90,3353
#define LP_CHAR(LP_CHAR91,3425
#define LP_TIME(LP_TIME92,3492
#define LP_WAIT(LP_WAIT93,3555
#define LP_IRQ(LP_IRQ94,3620
#define LP_STAT(LP_STAT97,3750
#define LP_BUFFER_SIZE 99,3827
#define LP_BASE(LP_BASE101,3855
struct lp_stats lp_stats104,3921
struct lp_struct lp_struct114,4084
#define LP_PBUSY	145,4924
#define LP_PACK	146,4981
#define LP_POUTPA	147,5038
#define LP_PSELECD	148,5097
#define LP_PERRORP	149,5157
#define LP_PINTEN	156,5300
#define LP_PSELECP	157,5371
#define LP_PINITP	158,5430
#define LP_PAUTOLF	159,5489
#define LP_PSTROBE	160,5548
#define LP_DUMMY	167,5787
#define LP_DELAY 173,5926
#define LP_POLLED(LP_POLLED175,5948
#define LP_PREEMPTED(LP_PREEMPTED176,6028

include/linux/string.h,82
#define _LINUX_STRING_H_2,25
#define NULL 7,107
extern char * ___strtok;14,181

include/linux/ctype.h,830
#define _LINUX_CTYPE_H2,23
#define _U	9,142
#define _L	10,170
#define _D	11,198
#define _C	12,226
#define _P	13,254
#define _S	14,282
#define _X	15,331
#define _SP	16,363
extern unsigned char _ctype[18,405
#define __ismask(__ismask20,437
#define isalnum(isalnum22,492
#define isalpha(isalpha23,543
#define iscntrl(iscntrl24,591
#define isdigit(isdigit25,636
#define isgraph(isgraph26,681
#define islower(islower27,735
#define isprint(isprint28,780
#define ispunct(ispunct29,838
#define isspace(isspace30,883
#define isupper(isupper31,928
#define isxdigit(isxdigit32,973
#define isascii(isascii34,1023
#define toascii(toascii35,1071
static inline unsigned char __tolower(37,1119
static inline unsigned char __toupper(44,1223
#define tolower(tolower51,1327
#define toupper(toupper52,1359

include/linux/unistd.h,53
#define _LINUX_UNISTD_H_2,25
extern int errno;4,51

include/linux/ioctl.h,28
#define _LINUX_IOCTL_H2,23

include/linux/fd.h,2757
#define _LINUX_FD_H2,20
struct floppy_struct floppy_struct12,206
#define FD_STRETCH 18,415
#define FD_SWAPSIDES 19,436
#define FD_2M 24,551
#define FD_SIZECODEMASK 25,569
#define FD_SIZECODE(FD_SIZECODE26,598
#define FD_SECTSIZE(FD_SECTSIZE27,675
#define FD_PERP 29,775
#define FDCLRPRM 40,1044
#define FDSETPRM 43,1111
#define FDSETMEDIAPRM 44,1165
#define FDDEFPRM 47,1249
#define FDGETPRM 48,1303
#define FDDEFMEDIAPRM 49,1356
#define FDGETMEDIAPRM 50,1387
#define	FDMSGON 54,1450
#define	FDMSGOFF 55,1479
#define FD_FILL_BYTE 62,1604
struct format_descr format_descr64,1655
#define FDFMTBEG 68,1714
#define	FDFMTTRK 70,1773
#define FDFMTEND 72,1857
struct floppy_max_errors floppy_max_errors79,1943
#define FDSETEMSGTRESH	97,2489
#define FDFLUSH 100,2565
#define FDSETMAXERRS 104,2724
#define FDGETMAXERRS 105,2785
typedef char floppy_drive_name[floppy_drive_name110,2939
#define FDGETDRVTYP 111,2975
struct floppy_drive_params floppy_drive_params118,3112
#define FTD_MSG 152,4377
#define FD_BROKEN_DCL 153,4398
#define FD_DEBUG 154,4425
#define FD_SILENT_DCL_CLEAR 155,4447
#define FD_INVERTED_DCL 156,4479
	FD_NEED_TWADDLE_BIT,174,5043
	FD_VERIFY_BIT,175,5082
	FD_DISK_NEWCHANGE_BIT,176,5134
	FD_UNUSED_BIT,178,5246
	FD_DISK_CHANGED_BIT,179,5262
	FD_DISK_WRITABLE_BIT	180,5327
#define FDSETDRVPRM 183,5376
#define FDGETDRVPRM 184,5438
struct floppy_drive_struct floppy_drive_struct191,5607
#define FD_NEED_TWADDLE 194,5687
#define FD_VERIFY 195,5738
#define FD_DISK_NEWCHANGE 196,5777
#define FD_DISK_CHANGED 197,5832
#define FD_DISK_WRITABLE 198,5883
#define FDGETDRVSTAT 226,6621
#define FDPOLLDRVSTAT 227,6684
enum reset_mode reset_mode234,6848
	FD_RESET_IF_NEEDED,235,6866
	FD_RESET_IF_RAWCMD,236,6930
	FD_RESET_ALWAYS	237,6966
#define FDRESET 239,7006
struct floppy_fdc_state floppy_fdc_state245,7057
#define FD_DRIVER_VERSION 258,7483
#define FDGETFDCSTAT 277,8267
struct floppy_write_errors floppy_write_errors283,8373
#define FDWERRORCLR 305,9066
#define FDWERRORGET 307,9148
#define FDHAVEBATCHEDRAWCMD315,9338
struct floppy_raw_cmd floppy_raw_cmd317,9367
#define FD_RAW_READ 319,9412
#define FD_RAW_WRITE 320,9434
#define FD_RAW_NO_MOTOR 321,9457
#define FD_RAW_DISK_CHANGE 322,9483
#define FD_RAW_INTR 323,9548
#define FD_RAW_SPIN 324,9601
#define FD_RAW_NO_MOTOR_AFTER 325,9666
#define FD_RAW_NEED_DISK 327,9764
#define FD_RAW_NEED_SEEK 328,9841
#define FD_RAW_MORE 331,9942
#define FD_RAW_STOP_IF_FAILURE 332,9995
#define FD_RAW_STOP_IF_SUCCESS 333,10069
#define FD_RAW_SOFTFAILURE 334,10139
#define FD_RAW_FAILURE 338,10262
#define FD_RAW_HARDFAILURE 339,10339
#define FDRAWCMD 361,10975
#define FDTWADDLE 365,11094
#define FDEJECT 369,11192

include/linux/utsname.h,298
#define _LINUX_UTSNAME_H2,25
#define __OLD_UTS_LEN 4,51
struct oldold_utsname oldold_utsname6,76
#define __NEW_UTS_LEN 14,195
struct old_utsname old_utsname16,221
struct new_utsname new_utsname24,342
extern struct new_utsname system_utsname;33,485
extern struct semaphore uts_sem;35,528

include/linux/stat.h,937
#define _LINUX_STAT_H2,22
#define S_IFMT 12,162
#define S_IFSOCK 13,187
#define S_IFLNK	14,212
#define S_IFREG 15,237
#define S_IFBLK 16,262
#define S_IFDIR 17,287
#define S_IFCHR 18,312
#define S_IFIFO 19,337
#define S_ISUID 20,362
#define S_ISGID 21,387
#define S_ISVTX 22,412
#define S_ISLNK(S_ISLNK24,438
#define S_ISREG(S_ISREG25,485
#define S_ISDIR(S_ISDIR26,532
#define S_ISCHR(S_ISCHR27,579
#define S_ISBLK(S_ISBLK28,626
#define S_ISFIFO(S_ISFIFO29,673
#define S_ISSOCK(S_ISSOCK30,721
#define S_IRWXU 32,771
#define S_IRUSR 33,793
#define S_IWUSR 34,815
#define S_IXUSR 35,837
#define S_IRWXG 37,860
#define S_IRGRP 38,882
#define S_IWGRP 39,904
#define S_IXGRP 40,926
#define S_IRWXO 42,949
#define S_IROTH 43,971
#define S_IWOTH 44,993
#define S_IXOTH 45,1015
#define S_IRWXUGO	50,1064
#define S_IALLUGO	51,1108
#define S_IRUGO	52,1162
#define S_IWUGO	53,1205
#define S_IXUGO	54,1248

include/linux/fcntl.h,28
#define _LINUX_FCNTL_H2,23

include/linux/bios32.h,187
#define BIOS32_H7,134
extern inline int __pcibios_read_irq(13,268
extern inline int __pcibios_read_config_byte(25,543
#define pcibios_read_config_byte(pcibios_read_config_byte31,733

include/linux/nfsiod.h,125
#define _LINUX_NFSIOD_H9,118
typedef int	(*nfsiod_callback_t)nfsiod_callback_t21,347
struct nfsiod_req nfsiod_req26,460

include/linux/hfs_fs.h,4113
#define _LINUX_HFS_FS_H21,817
#define HFS_DBL_MAGIC	26,923
#define HFS_SNGL_MAGIC	27,957
#define HFS_HDR_VERSION_1	28,992
#define HFS_HDR_VERSION_2	29,1029
#define HFS_INO_MAGIC	32,1119
#define HFS_SB_MAGIC	33,1149
#define HFS_DBL_HDR_LEN	36,1243
#define HFS_NAT_HDR_LEN	39,1319
#define HFS_CNID(HFS_CNID42,1453
#define HFS_ITYPE(HFS_ITYPE43,1492
#define HFS_ITYPE_TO_INT(HFS_ITYPE_TO_INT46,1565
#define HFS_INT_TO_ITYPE(HFS_INT_TO_ITYPE47,1605
#define HFS_ITYPE_0	50,1667
#define HFS_ITYPE_1	51,1698
#define HFS_ITYPE_2	52,1729
#define HFS_ITYPE_3	53,1760
#define HFS_ITYPE_NORM	54,1791
#define HFS_CAP_NORM	57,1881
#define HFS_CAP_DATA	58,1950
#define HFS_CAP_NDIR	59,2007
#define HFS_CAP_FNDR	60,2063
#define HFS_CAP_RSRC	61,2130
#define HFS_CAP_RDIR	62,2191
#define HFS_CAP_FDIR	63,2250
#define HFS_DBL_NORM	66,2342
#define HFS_DBL_DATA	67,2404
#define HFS_DBL_DIR	68,2461
#define HFS_DBL_HDR	69,2509
#define HFS_NAT_NORM	72,2599
#define HFS_NAT_DATA	73,2661
#define HFS_NAT_NDIR	74,2718
#define HFS_NAT_HDR	75,2774
#define HFS_NAT_HDIR	76,2837
#define HFS_SGL_NORM	79,2936
#define HFS_SGL_SNGL	80,3005
#define HFS_SGL_DIR	81,3061
#define HFS_SGL_DINF	82,3109
#define HFS_HDR_DATA	85,3235
#define HFS_HDR_RSRC	86,3258
#define HFS_HDR_FNAME	87,3281
#define HFS_HDR_COMNT	88,3305
#define HFS_HDR_BWICN	89,3329
#define HFS_HDR_CICON	90,3353
#define HFS_HDR_OLDI	91,3377
#define HFS_HDR_DATES	92,3400
#define HFS_HDR_FINFO	93,3424
#define HFS_HDR_MACI	94,3448
#define HFS_HDR_MAX	95,3472
#define hfs_h_to_mtime(hfs_h_to_mtime105,3782
#define hfs_m_to_htime(hfs_m_to_htime106,3849
#define hfs_h_to_utime(hfs_h_to_utime107,3918
#define hfs_u_to_htime(hfs_u_to_htime108,3991
#define hfs_u_to_mtime(hfs_u_to_mtime109,4066
#define hfs_m_to_utime(hfs_m_to_utime110,4131
struct hfs_hdr_descr hfs_hdr_descr119,4423
struct hfs_hdr_layout hfs_hdr_layout128,4673
struct hfs_nat_hdr hfs_nat_hdr141,5041
struct hfs_dbl_hdr hfs_dbl_hdr160,5554
struct hfs_cap_info hfs_cap_info177,6034
#define HFS_AFP_WRI	180,6143
#define HFS_AFP_RNI	181,6194
#define HFS_AFP_DEI	182,6259
#define HFS_AFP_RDONLY	183,6324
#define HFS_CAP_MAGIC1	185,6429
#define HFS_CAP_VERSION	187,6515
#define HFS_CAP_MAGIC	189,6595
#define HFS_CAP_SHORTNAME	191,6685
#define HFS_CAP_LONGNAME	192,6716
#define HFS_CAP_DMAGIC	199,7123
#define HFS_CAP_MDATE	201,7217
#define HFS_CAP_CDATE	202,7245
typedef ssize_t hfs_rwret_t;hfs_rwret_t211,7489
typedef size_t hfs_rwarg_t;hfs_rwarg_t212,7518
extern const struct hfs_name hfs_cap_reserved1[235,8265
extern const struct hfs_name hfs_cap_reserved2[236,8315
extern struct inode_operations hfs_cap_ndir_inode_operations;237,8365
extern struct inode_operations hfs_cap_fdir_inode_operations;238,8427
extern struct inode_operations hfs_cap_rdir_inode_operations;239,8489
extern const struct hfs_name hfs_dbl_reserved1[243,8631
extern const struct hfs_name hfs_dbl_reserved2[244,8681
extern struct inode_operations hfs_dbl_dir_inode_operations;245,8731
extern const struct hfs_name hfs_nat_reserved1[249,8872
extern const struct hfs_name hfs_nat_reserved2[250,8922
extern struct inode_operations hfs_nat_ndir_inode_operations;251,8972
extern struct inode_operations hfs_nat_hdir_inode_operations;252,9034
extern const struct hfs_name hfs_sngl_reserved1[256,9177
extern const struct hfs_name hfs_sngl_reserved2[257,9228
extern struct inode_operations hfs_sngl_dir_inode_operations;258,9279
extern struct inode_operations hfs_file_inode_operations;266,9618
extern struct inode_operations hfs_cap_info_inode_operations;269,9694
extern struct inode_operations hfs_hdr_inode_operations;272,9774
extern const struct hfs_hdr_layout hfs_dbl_fil_hdr_layout;273,9831
extern const struct hfs_hdr_layout hfs_dbl_dir_hdr_layout;274,9890
extern const struct hfs_hdr_layout hfs_nat_hdr_layout;275,9949
extern const struct hfs_hdr_layout hfs_sngl_hdr_layout;276,10004
#define	HFS_I(HFS_I306,11313
#define	HFS_SB(HFS_SB307,11348
extern __inline__ void hfs_nameout(309,11386
extern __inline__ int hfs_namein(314,11544

include/linux/wait.h,267
#define _LINUX_WAIT_H2,22
#define WNOHANG	4,45
#define WUNTRACED	5,73
#define __WCLONE	7,103
struct wait_queue wait_queue13,174
#define WAIT_QUEUE_HEAD(WAIT_QUEUE_HEAD18,253
static inline void init_waitqueue(20,312
static inline int waitqueue_active(25,400

include/linux/limits.h,327
#define _LINUX_LIMITS_H2,24
#define NR_OPEN	4,49
#define NGROUPS_MAX 6,72
#define ARG_MAX 7,144
#define CHILD_MAX 8,216
#define OPEN_MAX 9,267
#define LINK_MAX 10,334
#define MAX_CANON 11,393
#define MAX_INPUT 12,462
#define NAME_MAX 13,527
#define PATH_MAX 14,585
#define PIPE_BUF 15,643
#define RTSIG_MAX	17,713

include/linux/errno.h,145
#define _LINUX_ERRNO_H2,23
#define ERESTARTSYS	9,134
#define ERESTARTNOINTR	10,158
#define ERESTARTNOHAND	11,185
#define ENOIOCTLCMD	12,242

include/linux/signal.h,765
#define _LINUX_SIGNAL_H2,24
struct signal_queuesignal_queue12,161
extern inline void sigaddset(27,433
extern inline void sigdelset(36,638
extern inline int sigismember(45,849
extern inline int sigfindinword(54,1067
#define sigmask(sigmask59,1144
#define _SIG_SET_BINOP(_SIG_SET_BINOP66,1282
#define _sig_or(_sig_or103,2516
#define _sig_and(_sig_and106,2585
_SIG_SET_BINOP(104,2549
#define _sig_nand(_sig_nand109,2657
#define _SIG_SET_OP(_SIG_SET_OP117,2804
#define _sig_not(_sig_not135,3384
extern inline void sigfillset(153,3675
extern inline void sigaddsetmask(169,4007
extern inline void sigdelsetmask(174,4102
extern inline int sigtestsetmask(179,4198
extern inline void siginitset(184,4306
extern inline void siginitsetinv(196,4535

include/linux/genhd.h,1527
#define _LINUX_GENHD_H2,23
#define CONFIG_MSDOS_PARTITION 15,236
#define CONFIG_OSF_PARTITION 18,287
#define CONFIG_SUN_PARTITION 22,382
#define CONFIG_SGI_PARTITION 26,445
#define DOS_EXTENDED_PARTITION 31,640
#define LINUX_EXTENDED_PARTITION 32,673
#define WIN98_EXTENDED_PARTITION 33,711
#define LINUX_SWAP_PARTITION	35,750
#define SOLARIS_X86_PARTITION	38,821
#define DM6_PARTITION	41,880
#define EZD_PARTITION	42,948
#define DM6_AUX1PARTITION	43,1016
#define DM6_AUX3PARTITION	44,1078
struct partition partition46,1142
struct hd_struct hd_struct59,1670
struct gendisk gendisk64,1727
#define SOLARIS_X86_NUMSLICE	83,2375
#define SOLARIS_X86_VTOC_SANE	84,2406
struct solaris_x86_slice solaris_x86_slice86,2452
struct solaris_x86_vtoc solaris_x86_vtoc93,2667
#define FREEBSD_PARTITION	114,3442
#define OPENBSD_PARTITION	115,3503
#define NETBSD_PARTITION	116,3564
#define BSDI_PARTITION	117,3623
#define BSD_PARTITION	120,3714
#define BSD_DISKMAGIC	124,3821
#define BSD_MAXPARTITIONS	125,3886
#define OPENBSD_MAXPARTITIONS	126,3914
#define BSD_FS_UNUSED	127,3947
struct bsd_disklabel bsd_disklabel128,4014
#define NDDATA 150,5101
#define NSPARE 152,5184
#define UNIXWARE_PARTITION 179,6204
#define UNIXWARE_DISKMAGIC 181,6303
#define UNIXWARE_DISKMAGIC2 182,6377
#define UNIXWARE_NUMSLICE 183,6454
#define UNIXWARE_FS_UNUSED 184,6488
struct unixware_slice unixware_slice186,6551
struct unixware_disklabel unixware_disklabel193,6745
extern struct gendisk *gendisk_head;229,8312

include/linux/types.h,2015
#define _LINUX_TYPES_H2,23
typedef __kernel_fd_set		fd_set;fd_set9,133
typedef __kernel_dev_t		dev_t;dev_t10,166
typedef __kernel_ino_t		ino_t;ino_t11,197
typedef __kernel_mode_t		mode_t;mode_t12,228
typedef __kernel_nlink_t	nlink_t;nlink_t13,261
typedef __kernel_off_t		off_t;off_t14,295
typedef __kernel_pid_t		pid_t;pid_t15,326
typedef __kernel_uid_t		uid_t;uid_t16,357
typedef __kernel_gid_t		gid_t;gid_t17,388
typedef __kernel_daddr_t	daddr_t;daddr_t18,419
typedef __kernel_key_t		key_t;key_t19,453
typedef __kernel_suseconds_t	suseconds_t;suseconds_t20,484
typedef __kernel_loff_t		loff_t;loff_t23,578
#define _SIZE_T31,735
typedef __kernel_size_t		size_t;size_t32,751
#define _SSIZE_T36,809
typedef __kernel_ssize_t	ssize_t;ssize_t37,826
#define _PTRDIFF_T41,887
typedef __kernel_ptrdiff_t	ptrdiff_t;ptrdiff_t42,906
#define _TIME_T46,968
typedef __kernel_time_t		time_t;time_t47,984
#define _CLOCK_T51,1042
typedef __kernel_clock_t	clock_t;clock_t52,1059
#define _CADDR_T56,1118
typedef __kernel_caddr_t	caddr_t;caddr_t57,1135
typedef unsigned char		u_char;u_char61,1187
typedef unsigned short		u_short;u_short62,1218
typedef unsigned int		u_int;u_int63,1251
typedef unsigned long		u_long;u_long64,1280
typedef unsigned char		unchar;unchar67,1323
typedef unsigned short		ushort;ushort68,1354
typedef unsigned int		uint;uint69,1386
typedef unsigned long		ulong;ulong70,1414
#define __BIT_TYPES_DEFINED__73,1475
typedef		__u8		u_int8_t;u_int8_t75,1506
typedef		__s8		int8_t;int8_t76,1531
typedef		__u16		u_int16_t;u_int16_t77,1554
typedef		__s16		int16_t;int16_t78,1581
typedef		__u32		u_int32_t;u_int32_t79,1606
typedef		__s32		int32_t;int32_t80,1633
typedef		__u8		uint8_t;uint8_t84,1698
typedef		__u16		uint16_t;uint16_t85,1722
typedef		__u32		uint32_t;uint32_t86,1748
typedef		__u64		uint64_t;uint64_t89,1826
typedef		__u64		u_int64_t;u_int64_t90,1852
typedef		__s64		int64_t;int64_t91,1879
struct ustat ustat101,2080

include/linux/dirent.h,56
#define _LINUX_DIRENT_H2,24
struct dirent dirent4,49

include/linux/vfs.h,26
#define _LINUX_VFS_H2,21

include/linux/time.h,593
#define _LINUX_TIME_H2,22
#define _STRUCT_TIMESPEC8,119
struct timespec timespec9,144
#define MAX_JIFFY_OFFSET 27,620
timespec_to_jiffies(30,694
jiffies_to_timespec(43,979
struct timeval timeval49,1138
struct timezone timezone54,1232
#define NFDBITS	59,1353
#define FD_SETSIZE	68,1604
#define FD_SET(FD_SET69,1637
#define FD_CLR(FD_CLR70,1683
#define FD_ISSET(FD_ISSET71,1729
#define FD_ZERO(FD_ZERO72,1779
#define	ITIMER_REAL	78,1906
#define	ITIMER_VIRTUAL	79,1928
#define	ITIMER_PROF	80,1953
struct  itimerspec itimerspec82,1976
struct	itimerval itimerval87,2125

include/linux/termios.h,30
#define _LINUX_TERMIOS_H2,25

include/linux/param.h,28
#define _LINUX_PARAM_H2,23

include/linux/resource.h,345
#define _LINUX_RESOURCE_H2,26
#define	RUSAGE_SELF	17,419
#define	RUSAGE_CHILDREN	18,441
#define RUSAGE_BOTH	19,470
struct	rusage rusage21,525
#define RLIM_INFINITY	40,1256
struct rlimit rlimit42,1297
#define	PRIO_MIN	47,1349
#define	PRIO_MAX	48,1372
#define	PRIO_PROCESS	50,1393
#define	PRIO_PGRP	51,1416
#define	PRIO_USER	52,1436

include/linux/ptrace.h,429
#define _LINUX_PTRACE_H2,24
#define PTRACE_TRACEME	8,183
#define PTRACE_PEEKTEXT	9,212
#define PTRACE_PEEKDATA	10,242
#define PTRACE_PEEKUSR	11,272
#define PTRACE_POKETEXT	12,301
#define PTRACE_POKEDATA	13,331
#define PTRACE_POKEUSR	14,361
#define PTRACE_CONT	15,390
#define PTRACE_KILL	16,416
#define PTRACE_SINGLESTEP	17,442
#define PTRACE_ATTACH	19,474
#define PTRACE_DETACH	20,502
#define PTRACE_SYSCALL	22,531

include/linux/times.h,49
#define _LINUX_TIMES_H2,23
struct tms tms4,47

include/linux/utime.h,57
#define _LINUX_UTIME_H2,23
struct utimbuf utimbuf4,47

include/linux/a.out.h,1975
#define __A_OUT_GNU_H__2,24
#define __GNU_EXEC_MACROS__4,49
enum machine_type machine_type13,214
  M__OLDSUN2 15,258
  M__OLDSUN2 = M_OLDSUN2,15,258
  M_OLDSUN2 17,290
  M__68010 20,336
  M__68010 = M_68010,20,336
  M_68010 22,364
  M__68020 25,408
  M__68020 = M_68020,25,408
  M_68020 27,436
  M__SPARC 30,480
  M__SPARC = M_SPARC,30,480
  M_SPARC 32,508
  M_386 35,593
  M_MIPS1 36,608
  M_MIPS2 37,655
#define N_MAGIC(N_MAGIC41,729
#define N_MACHTYPE(N_MACHTYPE43,783
#define N_FLAGS(N_FLAGS44,860
#define N_SET_INFO(N_SET_INFO45,913
#define N_SET_MAGIC(N_SET_MAGIC49,1064
#define N_SET_MACHTYPE(N_SET_MACHTYPE52,1171
#define N_SET_FLAGS(N_SET_FLAGS56,1298
#define OMAGIC 61,1468
#define NMAGIC 63,1528
#define ZMAGIC 65,1596
#define QMAGIC 68,1760
#define CMAGIC 71,1815
#define N_BADMAG(N_BADMAG74,1860
#define _N_HDROFF(_N_HDROFF80,2011
#define N_TXTOFF(N_TXTOFF83,2087
#define N_DATOFF(N_DATOFF89,2261
#define N_TRELOFF(N_TRELOFF93,2341
#define N_DRELOFF(N_DRELOFF97,2422
#define N_SYMOFF(N_SYMOFF101,2504
#define N_STROFF(N_STROFF105,2585
#define N_TXTADDR(N_TXTADDR110,2728
#define SEGMENT_SIZE 117,2992
#define	SEGMENT_SIZE	120,3042
#define SEGMENT_SIZE 123,3103
#define PAGE_SIZE 126,3176
#define SEGMENT_SIZE 127,3200
#define SEGMENT_SIZE	133,3320
#define SEGMENT_SIZE	136,3373
#define _N_SEGMENT_ROUND(_N_SEGMENT_ROUND141,3426
#define _N_TXTENDADDR(_N_TXTENDADDR143,3504
#define N_DATADDR(N_DATADDR146,3574
#define N_BSSADDR(N_BSSADDR153,3782
struct nlist nlist157,3872
#define N_UNDF 171,4110
#define N_ABS 174,4155
#define N_TEXT 177,4200
#define N_DATA 180,4246
#define N_BSS 183,4291
#define N_FN 186,4334
#define N_EXT 190,4379
#define N_TYPE 193,4424
#define N_STAB 196,4472
#define N_INDR 207,4950
#define	N_SETA	221,5552
#define	N_SETT	222,5607
#define	N_SETD	223,5658
#define	N_SETB	224,5709
#define N_SETV	227,5791
struct relocation_inforelocation_info235,6158

include/linux/user.h,0

include/linux/socket.h,3573
#define _LINUX_SOCKET_H2,24
typedef unsigned short	sa_family_t;sa_family_t11,317
struct sockaddr sockaddr17,421
struct linger linger22,551
struct msghdr msghdr33,845
struct cmsghdr cmsghdr49,1341
#define __CMSG_NXTHDR(__CMSG_NXTHDR60,1615
#define CMSG_NXTHDR(CMSG_NXTHDR61,1687
#define CMSG_ALIGN(CMSG_ALIGN63,1748
#define CMSG_DATA(CMSG_DATA65,1820
#define CMSG_SPACE(CMSG_SPACE66,1908
#define CMSG_LEN(CMSG_LEN67,1987
#define __CMSG_FIRSTHDR(__CMSG_FIRSTHDR69,2055
#define CMSG_FIRSTHDR(CMSG_FIRSTHDR72,2189
#define __KINLINE 79,2340
#define __KINLINE 81,2402
#define __KINLINE 83,2465
#define __KINLINE 85,2503
__KINLINE struct cmsghdr * __cmsg_nxthdr(102,2968
__KINLINE struct cmsghdr * cmsg_nxthdr 114,3298
#define	SCM_RIGHTS	121,3508
#define SCM_CREDENTIALS 122,3572
#define SCM_CONNECT	123,3626
struct ucred ucred125,3682
#define SOCK_STREAM	133,3758
#define SOCK_DGRAM	134,3814
#define SOCK_RAW	135,3870
#define SOCK_RDM	136,3909
#define SOCK_SEQPACKET	137,3962
#define SOCK_PACKET	138,4019
#define AF_UNSPEC	145,4248
#define AF_UNIX	146,4268
#define AF_LOCAL	147,4315
#define AF_INET	148,4363
#define AF_AX25	149,4410
#define AF_IPX	150,4457
#define AF_APPLETALK	151,4495
#define AF_NETROM	152,4540
#define AF_BRIDGE	153,4589
#define AF_ATMPVC	154,4637
#define AF_X25	155,4674
#define AF_INET6	156,4725
#define AF_ROSE	157,4766
#define AF_DECnet	158,4815
#define AF_NETBEUI	159,4870
#define AF_SECURITY	160,4927
#define pseudo_AF_KEY 161,4984
#define AF_NETLINK	162,5048
#define AF_ROUTE	163,5070
#define AF_PACKET	164,5128
#define AF_ASH	165,5170
#define AF_ECONET	166,5202
#define AF_ATMSVC	167,5244
#define AF_SNA	168,5282
#define AF_IRDA	169,5336
#define AF_MAX	170,5377
#define PF_UNSPEC	173,5464
#define PF_UNIX	174,5492
#define PF_LOCAL	175,5517
#define PF_INET	176,5543
#define PF_AX25	177,5568
#define PF_IPX	178,5593
#define PF_APPLETALK	179,5616
#define	PF_NETROM	180,5650
#define PF_BRIDGE	181,5678
#define PF_ATMPVC	182,5706
#define PF_X25	183,5734
#define PF_INET6	184,5757
#define PF_ROSE	185,5783
#define PF_DECnet	186,5808
#define PF_NETBEUI	187,5836
#define PF_SECURITY	188,5866
#define PF_KEY 189,5898
#define PF_NETLINK	190,5936
#define PF_ROUTE	191,5966
#define PF_PACKET	192,5992
#define PF_ASH	193,6020
#define PF_ECONET	194,6043
#define PF_ATMSVC	195,6071
#define PF_SNA	196,6099
#define PF_IRDA	197,6122
#define PF_MAX	199,6148
#define SOMAXCONN	202,6223
#define MSG_OOB	208,6347
#define MSG_PEEK	209,6366
#define MSG_DONTROUTE	210,6385
#define MSG_TRYHARD 211,6409
#define MSG_CTRUNC	212,6484
#define MSG_PROXY	213,6505
#define MSG_TRUNC	214,6564
#define MSG_DONTWAIT	215,6587
#define MSG_EOR 216,6636
#define MSG_WAITALL	217,6685
#define MSG_FIN 218,6741
#define MSG_SYN	219,6771
#define MSG_URG	220,6794
#define MSG_RST	221,6817
#define MSG_ERRQUEUE	222,6841
#define MSG_NOSIGNAL	223,6869
#define MSG_CTLIGNORE 225,6898
#define MSG_EOF 227,6934
#define MSG_CTLFLAGS	228,6966
#define SOL_IP	232,7105
#define SOL_TCP	234,7200
#define SOL_UDP	235,7219
#define SOL_IPV6	236,7239
#define SOL_ICMPV6	237,7259
#define SOL_RAW	238,7281
#define SOL_IPX	239,7302
#define SOL_AX25	240,7323
#define SOL_ATALK	241,7344
#define SOL_NETROM	242,7366
#define SOL_ROSE	243,7389
#define SOL_DECNET	244,7410
#define	SOL_X25	245,7433
#define SOL_PACKET	246,7454
#define SOL_ATM	247,7477
#define SOL_AAL	248,7527
#define IPX_TYPE	251,7607
#define TCP_NODELAY	254,7716
#define TCP_MAXSEG	255,7738
#define TCP_CORK	256,7759

include/linux/un.h,90
#define _LINUX_UN_H2,20
#define UNIX_PATH_MAX	4,41
struct sockaddr_un sockaddr_un6,68

include/linux/stddef.h,81
#define _LINUX_STDDEF_H2,24
#define NULL 5,61
#define offsetof(offsetof8,103

include/linux/binfmts.h,181
#define _LINUX_BINFMTS_H2,25
#define MAX_ARG_PAGES 12,294
struct linux_binprm{linux_binprm19,431
struct linux_binfmt linux_binfmt37,901
#define change_ldt(change_ldt73,2198

include/linux/minix_fs_sb.h,67
#define _MINIX_FS_SB2,21
struct minix_sb_info minix_sb_info7,86

include/linux/msdos_fs_sb.h,162
#define _MSDOS_FS_SB2,21
struct fat_mount_options fat_mount_options9,123
struct vfat_unicode vfat_unicode30,1221
struct msdos_sb_info msdos_sb_info35,1289

include/linux/cdrom.h,4266
#define	_LINUX_CDROM_H12,418
#define EDRIVE_CANT_DO_THIS 43,2061
#define CDROMPAUSE	50,2380
#define CDROMRESUME	51,2436
#define CDROMPLAYMSF	52,2500
#define CDROMPLAYTRKIND	53,2569
#define CDROMREADTOCHDR	55,2692
#define CDROMREADTOCENTRY	57,2812
#define CDROMSTOP	59,2934
#define CDROMSTART	60,2987
#define CDROMEJECT	61,3042
#define CDROMVOLCTRL	62,3098
#define CDROMSUBCHNL	64,3222
#define CDROMREADMODE2	66,3345
#define CDROMREADMODE1	68,3482
#define CDROMREADAUDIO	70,3618
#define CDROMEJECT_SW	71,3681
#define CDROMMULTISESSION	72,3752
#define CDROM_GET_MCN	75,3971
#define CDROM_GET_UPC	77,4119
#define CDROMRESET	79,4264
#define CDROMVOLREAD	80,4318
#define CDROMREADRAW	82,4450
#define CDROMREADCOOKED	87,4649
#define CDROMSEEK	88,4712
#define CDROMPLAYBLK	94,4885
#define CDROMREADALL	99,4994
#define CDROMCLOSETRAY	100,5049
#define CDROM_SET_OPTIONS	107,5325
#define CDROM_CLEAR_OPTIONS	108,5386
#define CDROM_SELECT_SPEED	109,5451
#define CDROM_SELECT_DISC	110,5513
#define CDROM_MEDIA_CHANGED	111,5582
#define CDROM_DRIVE_STATUS	112,5648
#define CDROM_DISC_STATUS	113,5713
#define CDROM_CHANGER_NSLOTS 114,5773
#define CDROM_LOCKDOOR	115,5839
#define CDROM_DEBUG	116,5897
#define CDROM_GET_CAPABILITY	117,5958
#define CDROMAUDIOBUFSIZ 120,6071
struct cdrom_msf0	cdrom_msf0127,6313
union cdrom_addr	cdrom_addr135,6432
struct cdrom_msf cdrom_msf142,6546
struct cdrom_ti cdrom_ti153,6855
struct cdrom_tochdr cdrom_tochdr162,7077
struct cdrom_volctrlcdrom_volctrl169,7247
struct cdrom_subchnl cdrom_subchnl178,7398
struct cdrom_tocentry cdrom_tocentry192,7674
struct cdrom_read cdrom_read203,7914
struct cdrom_read_audiocdrom_read_audio211,8060
struct cdrom_multisessioncdrom_multisession220,8389
struct cdrom_mcn cdrom_mcn234,8995
struct cdrom_blk cdrom_blk240,9139
#define CD_MINS 282,10766
#define CD_SECS 283,10844
#define CD_FRAMES 284,10901
#define CD_SYNC_SIZE 285,10957
#define CD_MSF_OFFSET 286,11028
#define CD_CHUNK_SIZE 287,11102
#define CD_NUM_OF_CHUNKS 288,11172
#define CD_FRAMESIZE_SUB 289,11227
#define CD_HEAD_SIZE 290,11294
#define CD_SUBHEAD_SIZE 291,11374
#define CD_EDC_SIZE 292,11450
#define CD_ZERO_SIZE 293,11528
#define CD_ECC_SIZE 294,11606
#define CD_FRAMESIZE 295,11684
#define CD_FRAMESIZE_RAW 296,11753
#define CD_FRAMESIZE_RAWER 297,11819
#define CD_FRAMESIZE_RAW1 299,11938
#define CD_FRAMESIZE_RAW0 300,12005
#define CD_XA_HEAD 302,12086
#define CD_XA_TAIL 303,12184
#define CD_XA_SYNC_HEAD 304,12276
#define	CDROM_LBA 307,12423
#define	CDROM_MSF 308,12487
#define	CDROM_DATA_TRACK	311,12638
#define	CDROM_LEADOUT	314,12743
#define	CDROM_AUDIO_INVALID	317,12838
#define	CDROM_AUDIO_PLAY	318,12904
#define	CDROM_AUDIO_PAUSED	319,12973
#define	CDROM_AUDIO_COMPLETED	320,13039
#define	CDROM_AUDIO_ERROR	321,13114
#define	CDROM_AUDIO_NO_STATUS	322,13183
#define SCMD_READ_TOC	325,13302
#define SCMD_PLAYAUDIO_MSF	326,13359
#define SCMD_PLAYAUDIO_TI	327,13422
#define SCMD_PAUSE_RESUME	328,13484
#define SCMD_READ_SUBCHANNEL	329,13540
#define SCMD_PLAYAUDIO10	330,13609
#define CDC_CLOSE_TRAY	333,13733
#define CDC_OPEN_TRAY	334,13799
#define CDC_LOCK	335,13854
#define CDC_SELECT_SPEED 336,13907
#define CDC_SELECT_DISC	337,13966
#define CDC_MULTI_SESSION 338,14031
#define CDC_MCN	339,14088
#define CDC_MEDIA_CHANGED 340,14142
#define CDC_PLAY_AUDIO	341,14197
#define CDC_RESET 342,14251
#define CDC_IOCTLS 343,14315
#define CDC_DRIVE_STATUS 344,14392
#define CDS_NO_INFO	347,14540
#define CDS_NO_DISC	348,14588
#define CDS_TRAY_OPEN	349,14611
#define CDS_DRIVE_NOT_READY	350,14636
#define CDS_DISC_OK	351,14666
#define CDS_AUDIO	355,14795
#define CDS_DATA_1	356,14818
#define CDS_DATA_2	357,14842
#define CDS_XA_2_1	358,14866
#define CDS_XA_2_2	359,14890
#define CDS_MIXED	360,14914
#define CDO_AUTO_CLOSE	363,15009
#define CDO_AUTO_EJECT	364,15074
#define CDO_USE_FFLAGS	365,15140
#define CDO_LOCK	366,15213
#define CDO_CHECK_TYPE	367,15269
#define CDSL_NONE 370,15392
#define CDSL_CURRENT 371,15436
struct cdrom_device_info cdrom_device_info375,15545
struct cdrom_device_ops cdrom_device_ops392,16296
extern struct file_operations cdrom_fops;419,17368
} tracktype;tracktype429,17616

include/linux/proc_fs.h,8970
#define _LINUX_PROC_FS_H2,25
enum root_directory_inos root_directory_inos15,202
	PROC_ROOT_INO 16,229
	PROC_LOADAVG,17,249
	PROC_UPTIME,18,264
	PROC_MEMINFO,19,278
	PROC_KMSG,20,293
	PROC_VERSION,21,305
	PROC_CPUINFO,22,320
	PROC_PCI,23,335
	PROC_MCA,24,346
	PROC_NUBUS,25,357
	PROC_SELF,26,370
	PROC_NET,27,408
        PROC_SCSI,28,419
	PROC_MALLOC,29,438
	PROC_KCORE,30,452
	PROC_MODULES,31,465
	PROC_STAT,32,480
	PROC_DEVICES,33,492
	PROC_PARTITIONS,34,507
	PROC_INTERRUPTS,35,525
	PROC_FILESYSTEMS,36,543
	PROC_KSYMS,37,562
	PROC_DMA,38,575
	PROC_IOPORTS,39,587
	PROC_PROFILE,40,602
	PROC_CMDLINE,41,646
	PROC_SYS,42,661
	PROC_MTAB,43,672
	PROC_SWAP,44,684
	PROC_MD,45,696
	PROC_RTC,46,706
	PROC_LOCKS,47,717
	PROC_HARDWARE,48,730
	PROC_SLABINFO,49,746
	PROC_PARPORT,50,762
	PROC_PPC_HTAB,51,777
	PROC_STRAM,52,793
	PROC_SOUND,53,806
	PROC_MTRR,54,819
	PROC_FS55,860
enum pid_directory_inos pid_directory_inos58,873
	PROC_PID_INO 59,899
	PROC_PID_STATUS,60,918
	PROC_PID_MEM,61,936
	PROC_PID_CWD,62,951
	PROC_PID_ROOT,63,966
	PROC_PID_EXE,64,982
	PROC_PID_FD,65,997
	PROC_PID_ENVIRON,66,1011
	PROC_PID_CMDLINE,67,1030
	PROC_PID_STAT,68,1049
	PROC_PID_STATM,69,1065
	PROC_PID_MAPS,70,1082
	PROC_PID_RINGBUF,72,1116
	PROC_PID_CPU,74,1142
enum pid_subdirectory_inos pid_subdirectory_inos77,1161
	PROC_PID_FD_DIR 78,1190
	PROC_PID_FD_DIR = 0x8000,78,1190
enum net_directory_inos net_directory_inos81,1241
	PROC_NET_UNIX 82,1267
	PROC_NET_ARP,83,1289
	PROC_NET_ROUTE,84,1304
	PROC_NET_DEV,85,1321
	PROC_NET_RAW,86,1336
	PROC_NET_RAW6,87,1351
	PROC_NET_TCP,88,1367
	PROC_NET_TCP6,89,1382
	PROC_NET_UDP,90,1398
	PROC_NET_UDP6,91,1413
	PROC_NET_SNMP,92,1429
	PROC_NET_RARP,93,1445
	PROC_NET_IGMP,94,1461
	PROC_NET_IPMR_VIF,95,1477
	PROC_NET_IPMR_MFC,96,1497
	PROC_NET_IPFWFWD,97,1517
	PROC_NET_IPFWIN,98,1536
	PROC_NET_IPFWOUT,99,1554
	PROC_NET_IPACCT,100,1573
	PROC_NET_IPMSQHST,101,1591
	PROC_NET_WIRELESS,102,1611
	PROC_NET_IPX_INTERFACE,103,1631
	PROC_NET_IPX_ROUTE,104,1656
	PROC_NET_IPX,105,1677
	PROC_NET_ATALK,106,1692
	PROC_NET_AT_ROUTE,107,1709
	PROC_NET_ATIF,108,1729
	PROC_NET_AX25_ROUTE,109,1745
	PROC_NET_AX25,110,1767
	PROC_NET_AX25_CALLS,111,1783
	PROC_NET_BMAC,112,1805
	PROC_NET_NR_NODES,113,1821
	PROC_NET_NR_NEIGH,114,1841
	PROC_NET_NR,115,1861
	PROC_NET_SOCKSTAT,116,1875
	PROC_NET_SOCKSTAT6,117,1895
	PROC_NET_RTCACHE,118,1916
	PROC_NET_AX25_BPQETHER,119,1935
	PROC_NET_IP_MASQ_APP,120,1960
	PROC_NET_RT6,121,1983
	PROC_NET_SNMP6,122,1998
	PROC_NET_RT6_STATS,123,2015
	PROC_NET_NDISC,124,2036
	PROC_NET_STRIP_STATUS,125,2053
	PROC_NET_STRIP_TRACE,126,2077
	PROC_NET_Z8530,127,2100
	PROC_NET_RS_NODES,128,2117
	PROC_NET_RS_NEIGH,129,2137
	PROC_NET_RS_ROUTES,130,2157
	PROC_NET_RS,131,2178
	PROC_NET_CL2LLC,132,2192
	PROC_NET_X25_ROUTES,133,2210
	PROC_NET_X25,134,2232
	PROC_NET_TR_RIF,135,2247
	PROC_NET_DN_DEV,136,2265
	PROC_NET_DN_ADJ,137,2283
	PROC_NET_DN_L1,138,2301
	PROC_NET_DN_L2,139,2318
	PROC_NET_DN_CACHE,140,2335
	PROC_NET_DN_SKT,141,2355
	PROC_NET_DN_FW,142,2373
	PROC_NET_DN_RAW,143,2390
	PROC_NET_NETSTAT,144,2408
	PROC_NET_IPFW_CHAINS,145,2427
	PROC_NET_IPFW_CHAIN_NAMES,146,2450
	PROC_NET_AT_AARP,147,2478
	PROC_NET_BRIDGE,148,2497
	PROC_NET_LAST149,2515
enum scsi_directory_inos scsi_directory_inos152,2534
	PROC_SCSI_SCSI 153,2561
	PROC_SCSI_ADVANSYS,154,2584
	PROC_SCSI_PCI2000,155,2605
	PROC_SCSI_PCI2220I,156,2625
	PROC_SCSI_PSI240I,157,2646
	PROC_SCSI_EATA,158,2666
	PROC_SCSI_EATA_PIO,159,2683
	PROC_SCSI_AHA152X,160,2704
	PROC_SCSI_AHA1542,161,2724
	PROC_SCSI_AHA1740,162,2744
	PROC_SCSI_AIC7XXX,163,2764
	PROC_SCSI_BUSLOGIC,164,2784
	PROC_SCSI_U14_34F,165,2805
	PROC_SCSI_FDOMAIN,166,2825
	PROC_SCSI_GDTH,167,2845
	PROC_SCSI_GENERIC_NCR5380,168,2862
	PROC_SCSI_IN2000,169,2890
	PROC_SCSI_PAS16,170,2909
	PROC_SCSI_QLOGICFAS,171,2927
	PROC_SCSI_QLOGICISP,172,2949
	PROC_SCSI_QLOGICFC,173,2971
	PROC_SCSI_SEAGATE,174,2992
	PROC_SCSI_T128,175,3012
	PROC_SCSI_NCR53C7xx,176,3029
	PROC_SCSI_NCR53C8XX,177,3051
	PROC_SCSI_ULTRASTOR,178,3073
	PROC_SCSI_7000FASST,179,3095
	PROC_SCSI_IBMMCA,180,3117
	PROC_SCSI_FD_MCS,181,3136
	PROC_SCSI_EATA2X,182,3155
	PROC_SCSI_DC390T,183,3174
	PROC_SCSI_AM53C974,184,3193
	PROC_SCSI_SSC,185,3214
	PROC_SCSI_NCR53C406A,186,3230
	PROC_SCSI_SYM53C416,187,3253
	PROC_SCSI_MEGARAID,188,3275
	PROC_SCSI_PPA,189,3296
	PROC_SCSI_ATP870U,190,3312
	PROC_SCSI_ESP,191,3332
	PROC_SCSI_QLOGICPTI,192,3348
	PROC_SCSI_AMIGA7XX,193,3370
	PROC_SCSI_MVME16x,194,3391
	PROC_SCSI_BVME6000,195,3411
	PROC_SCSI_A3000,196,3432
	PROC_SCSI_A2091,197,3450
	PROC_SCSI_GVP11,198,3468
	PROC_SCSI_ATARI,199,3486
	PROC_SCSI_MAC,200,3504
	PROC_SCSI_IDESCSI,201,3520
	PROC_SCSI_MESH,202,3540
	PROC_SCSI_53C94,203,3557
	PROC_SCSI_PLUTO,204,3575
	PROC_SCSI_INI9100U,205,3593
 	PROC_SCSI_INIA100,206,3614
	PROC_SCSI_FCAL,207,3635
	PROC_SCSI_SCSI_DEBUG,208,3652
	PROC_SCSI_NOT_PRESENT,209,3676
	PROC_SCSI_FILE,210,3700
	PROC_SCSI_LAST 211,3772
	PROC_SCSI_LAST = (PROC_SCSI_FILE 211,3772
enum mca_directory_inos mca_directory_inos214,3922
	PROC_MCA_MACHINE 215,3948
	PROC_MCA_MACHINE = (PROC_SCSI_LAST+215,3948
	PROC_MCA_REGISTERS,216,3988
	PROC_MCA_VIDEO,217,4009
	PROC_MCA_SCSI,218,4026
	PROC_MCA_SLOT,219,4042
	PROC_MCA_LAST 220,4084
	PROC_MCA_LAST = (PROC_MCA_SLOT 220,4084
enum bus_directory_inos bus_directory_inos223,4125
	PROC_BUS_PCI 224,4151
	PROC_BUS_PCI = PROC_MCA_LAST,224,4151
	PROC_BUS_PCI_DEVICES,225,4182
	PROC_BUS_ZORRO,226,4205
	PROC_BUS_ZORRO_DEVICES,227,4222
	PROC_BUS_LAST228,4247
enum fs_directory_inos fs_directory_inos231,4266
	PROC_FS_CODA 232,4291
	PROC_FS_CODA = PROC_BUS_LAST,232,4291
	PROC_FS_LAST233,4322
enum fs_coda_directory_inos fs_coda_directory_inos236,4340
	PROC_VFS_STATS 237,4370
	PROC_VFS_STATS = PROC_FS_LAST,237,4370
	PROC_UPCALL_STATS,238,4402
	PROC_PERMISSION_STATS,239,4422
	PROC_CACHE_INV_STATS,240,4446
	PROC_CODA_FS_LAST241,4469
#define PROC_DYNAMIC_FIRST 246,4563
#define PROC_NDYNAMIC 247,4595
#define PROC_OPENPROM_FIRST 248,4627
#define PROC_OPENPROM	249,4690
#define PROC_NOPENPROM	250,4735
#define PROC_OPENPROMD_FIRST 251,4766
#define PROC_NOPENPROMD	252,4832
#define PROC_SUPER_MAGIC 254,4865
struct proc_dir_entry proc_dir_entry271,5491
typedef	int (read_proc_t)read_proc_t294,6172
typedef	int (write_proc_t)write_proc_t296,6274
extern struct proc_dir_entry proc_root;304,6523
extern struct proc_dir_entry proc_root_fs;305,6563
extern struct proc_dir_entry *proc_net;306,6606
extern struct proc_dir_entry *proc_scsi;307,6646
extern struct proc_dir_entry proc_sys;308,6687
extern struct proc_dir_entry proc_openprom;309,6726
extern struct proc_dir_entry proc_pid;310,6770
extern struct proc_dir_entry proc_pid_fd;311,6809
extern struct proc_dir_entry proc_mca;312,6851
extern struct proc_dir_entry *proc_bus;313,6890
extern struct inode_operations proc_scsi_inode_operations;315,6931
static inline int proc_net_register(323,7195
static inline int proc_net_unregister(328,7299
static inline int proc_scsi_register(333,7387
static inline int proc_scsi_unregister(344,7665
extern struct dentry_operations proc_dentry_operations;365,8157
struct openpromfs_dev openpromfs_dev386,9033
extern struct inode_operations proc_dir_inode_operations;404,9627
extern struct inode_operations proc_file_inode_operations;405,9685
extern struct inode_operations proc_net_inode_operations;406,9744
extern struct inode_operations proc_netdir_inode_operations;407,9802
extern struct inode_operations proc_openprom_inode_operations;408,9863
extern struct inode_operations proc_mem_inode_operations;409,9926
extern struct inode_operations proc_sys_inode_operations;410,9984
extern struct inode_operations proc_array_inode_operations;411,10042
extern struct inode_operations proc_arraylong_inode_operations;412,10102
extern struct inode_operations proc_kcore_inode_operations;413,10166
extern struct inode_operations proc_profile_inode_operations;414,10226
extern struct inode_operations proc_kmsg_inode_operations;415,10288
extern struct inode_operations proc_link_inode_operations;416,10347
extern struct inode_operations proc_fd_inode_operations;417,10406
extern struct inode_operations proc_ringbuf_inode_operations;419,10481
extern struct inode_operations proc_omirr_inode_operations;421,10550
extern struct inode_operations proc_ppc_htab_inode_operations;422,10610
extern inline int proc_register(445,11139
extern inline int proc_unregister(446,11227
extern inline int proc_net_register(447,11298
extern inline int proc_net_unregister(448,11364
extern inline int proc_scsi_register(449,11413
extern inline struct proc_dir_entry *create_proc_entry(452,11580
extern inline void remove_proc_entry(458,11722
extern inline void proc_tty_register_driver(460,11813
extern inline void proc_tty_unregister_driver(461,11888

include/linux/pci.h,39405
#define LINUX_PCI_H18,464
#define PCI_VENDOR_ID	24,624
#define PCI_DEVICE_ID	25,666
#define PCI_COMMAND	26,708
#define  PCI_COMMAND_IO	27,748
#define  PCI_COMMAND_MEMORY	28,812
#define  PCI_COMMAND_MASTER	29,882
#define  PCI_COMMAND_SPECIAL	30,941
#define  PCI_COMMAND_INVALIDATE	31,1014
#define  PCI_COMMAND_VGA_PALETTE 32,1089
#define  PCI_COMMAND_PARITY	33,1157
#define  PCI_COMMAND_WAIT 34,1219
#define  PCI_COMMAND_SERR	35,1286
#define  PCI_COMMAND_FAST_BACK	36,1336
#define PCI_STATUS	38,1407
#define  PCI_STATUS_CAP_LIST	39,1446
#define  PCI_STATUS_66MHZ	40,1510
#define  PCI_STATUS_UDF	41,1574
#define  PCI_STATUS_FAST_BACK	42,1642
#define  PCI_STATUS_PARITY	43,1708
#define  PCI_STATUS_DEVSEL_MASK	44,1769
#define  PCI_STATUS_DEVSEL_FAST	45,1827
#define  PCI_STATUS_DEVSEL_MEDIUM 46,1866
#define  PCI_STATUS_DEVSEL_SLOW 47,1906
#define  PCI_STATUS_SIG_TARGET_ABORT 48,1944
#define  PCI_STATUS_REC_TARGET_ABORT 49,2013
#define  PCI_STATUS_REC_MASTER_ABORT 50,2079
#define  PCI_STATUS_SIG_SYSTEM_ERROR 51,2149
#define  PCI_STATUS_DETECTED_PARITY 52,2222
#define PCI_CLASS_REVISION	54,2292
#define PCI_REVISION_ID 56,2377
#define PCI_CLASS_PROG 57,2435
#define PCI_CLASS_DEVICE 58,2514
#define PCI_CACHE_LINE_SIZE	60,2574
#define PCI_LATENCY_TIMER	61,2620
#define PCI_HEADER_TYPE	62,2664
#define  PCI_HEADER_TYPE_NORMAL	63,2707
#define  PCI_HEADER_TYPE_BRIDGE 64,2741
#define  PCI_HEADER_TYPE_CARDBUS 65,2775
#define PCI_BIST	67,2811
#define PCI_BIST_CODE_MASK	68,2847
#define PCI_BIST_START	69,2899
#define PCI_BIST_CAPABLE	70,2966
#define PCI_BASE_ADDRESS_0	78,3227
#define PCI_BASE_ADDRESS_1	79,3273
#define PCI_BASE_ADDRESS_2	80,3336
#define PCI_BASE_ADDRESS_3	81,3397
#define PCI_BASE_ADDRESS_4	82,3443
#define PCI_BASE_ADDRESS_5	83,3489
#define  PCI_BASE_ADDRESS_SPACE	84,3535
#define  PCI_BASE_ADDRESS_SPACE_IO 85,3598
#define  PCI_BASE_ADDRESS_SPACE_MEMORY 86,3638
#define  PCI_BASE_ADDRESS_MEM_TYPE_MASK 87,3682
#define  PCI_BASE_ADDRESS_MEM_TYPE_32	88,3727
#define  PCI_BASE_ADDRESS_MEM_TYPE_1M	89,3791
#define  PCI_BASE_ADDRESS_MEM_TYPE_64	90,3849
#define  PCI_BASE_ADDRESS_MEM_PREFETCH	91,3913
#define  PCI_BASE_ADDRESS_MEM_MASK	92,3977
#define  PCI_BASE_ADDRESS_IO_MASK	93,4022
#define PCI_CARDBUS_CIS	97,4149
#define PCI_SUBSYSTEM_VENDOR_ID	98,4179
#define PCI_SUBSYSTEM_ID	99,4216
#define PCI_ROM_ADDRESS	100,4248
#define  PCI_ROM_ADDRESS_ENABLE	101,4324
#define PCI_ROM_ADDRESS_MASK	102,4361
#define PCI_CAPABILITY_LIST	104,4402
#define PCI_INTERRUPT_LINE	107,4509
#define PCI_INTERRUPT_PIN	108,4554
#define PCI_MIN_GNT	109,4598
#define PCI_MAX_LAT	110,4637
#define PCI_PRIMARY_BUS	113,4718
#define PCI_SECONDARY_BUS	114,4773
#define PCI_SUBORDINATE_BUS	115,4831
#define PCI_SEC_LATENCY_TIMER	116,4907
#define PCI_IO_BASE	117,4986
#define PCI_IO_LIMIT	118,5046
#define  PCI_IO_RANGE_TYPE_MASK	119,5073
#define  PCI_IO_RANGE_TYPE_16	120,5134
#define  PCI_IO_RANGE_TYPE_32	121,5169
#define  PCI_IO_RANGE_MASK	122,5204
#define PCI_SEC_STATUS	123,5237
#define PCI_MEMORY_BASE	124,5316
#define PCI_MEMORY_LIMIT	125,5372
#define  PCI_MEMORY_RANGE_TYPE_MASK 126,5402
#define  PCI_MEMORY_RANGE_MASK	127,5443
#define PCI_PREF_MEMORY_BASE	128,5480
#define PCI_PREF_MEMORY_LIMIT	129,5553
#define  PCI_PREF_RANGE_TYPE_MASK 130,5588
#define  PCI_PREF_RANGE_TYPE_32	131,5627
#define  PCI_PREF_RANGE_TYPE_64	132,5664
#define  PCI_PREF_RANGE_MASK	133,5701
#define PCI_PREF_BASE_UPPER32	134,5736
#define PCI_PREF_LIMIT_UPPER32	135,5817
#define PCI_IO_BASE_UPPER16	136,5853
#define PCI_IO_LIMIT_UPPER16	137,5920
#define PCI_ROM_ADDRESS1	139,5982
#define PCI_BRIDGE_CONTROL	141,6099
#define  PCI_BRIDGE_CTL_PARITY	142,6131
#define  PCI_BRIDGE_CTL_SERR	143,6220
#define  PCI_BRIDGE_CTL_NO_ISA	144,6289
#define  PCI_BRIDGE_CTL_VGA	145,6361
#define  PCI_BRIDGE_CTL_MASTER_ABORT 146,6422
#define  PCI_BRIDGE_CTL_BUS_RESET 147,6492
#define  PCI_BRIDGE_CTL_FAST_BACK 148,6557
#define PCI_CB_SEC_STATUS	152,6712
#define PCI_CB_PRIMARY_BUS	153,6766
#define PCI_CB_CARD_BUS	154,6819
#define PCI_CB_SUBORDINATE_BUS	155,6874
#define PCI_CB_LATENCY_TIMER	156,6939
#define PCI_CB_MEMORY_BASE_0	157,7001
#define PCI_CB_MEMORY_LIMIT_0	158,7035
#define PCI_CB_MEMORY_BASE_1	159,7070
#define PCI_CB_MEMORY_LIMIT_1	160,7104
#define PCI_CB_IO_BASE_0	161,7139
#define PCI_CB_IO_BASE_0_HI	162,7169
#define PCI_CB_IO_LIMIT_0	163,7202
#define PCI_CB_IO_LIMIT_0_HI	164,7233
#define PCI_CB_IO_BASE_1	165,7267
#define PCI_CB_IO_BASE_1_HI	166,7297
#define PCI_CB_IO_LIMIT_1	167,7330
#define PCI_CB_IO_LIMIT_1_HI	168,7361
#define  PCI_CB_IO_RANGE_MASK	169,7395
#define PCI_CB_BRIDGE_CONTROL	171,7471
#define  PCI_CB_BRIDGE_CTL_PARITY	172,7506
#define  PCI_CB_BRIDGE_CTL_SERR	173,7595
#define  PCI_CB_BRIDGE_CTL_ISA	174,7633
#define  PCI_CB_BRIDGE_CTL_VGA	175,7670
#define  PCI_CB_BRIDGE_CTL_MASTER_ABORT	176,7707
#define  PCI_CB_BRIDGE_CTL_CB_RESET	177,7752
#define  PCI_CB_BRIDGE_CTL_16BIT_INT	178,7813
#define  PCI_CB_BRIDGE_CTL_PREFETCH_MEM0 179,7895
#define  PCI_CB_BRIDGE_CTL_PREFETCH_MEM1 180,7988
#define  PCI_CB_BRIDGE_CTL_POST_WRITES	181,8035
#define PCI_CB_SUBSYSTEM_VENDOR_ID 182,8080
#define PCI_CB_SUBSYSTEM_ID	183,8120
#define PCI_CB_LEGACY_MODE_BASE	184,8153
#define PCI_CAP_LIST_ID	188,8292
#define  PCI_CAP_ID_PM	189,8339
#define  PCI_CAP_ID_AGP	190,8391
#define PCI_CAP_LIST_NEXT	191,8453
#define PCI_CLASS_NOT_DEFINED	195,8553
#define PCI_CLASS_NOT_DEFINED_VGA	196,8591
#define PCI_BASE_CLASS_STORAGE	198,8633
#define PCI_CLASS_STORAGE_SCSI	199,8670
#define PCI_CLASS_STORAGE_IDE	200,8709
#define PCI_CLASS_STORAGE_FLOPPY	201,8747
#define PCI_CLASS_STORAGE_IPI	202,8787
#define PCI_CLASS_STORAGE_RAID	203,8825
#define PCI_CLASS_STORAGE_OTHER	204,8864
#define PCI_BASE_CLASS_NETWORK	206,8905
#define PCI_CLASS_NETWORK_ETHERNET	207,8942
#define PCI_CLASS_NETWORK_TOKEN_RING	208,8984
#define PCI_CLASS_NETWORK_FDDI	209,9028
#define PCI_CLASS_NETWORK_ATM	210,9067
#define PCI_CLASS_NETWORK_OTHER	211,9105
#define PCI_BASE_CLASS_DISPLAY	213,9146
#define PCI_CLASS_DISPLAY_VGA	214,9183
#define PCI_CLASS_DISPLAY_XGA	215,9221
#define PCI_CLASS_DISPLAY_OTHER	216,9259
#define PCI_BASE_CLASS_MULTIMEDIA	218,9300
#define PCI_CLASS_MULTIMEDIA_VIDEO	219,9339
#define PCI_CLASS_MULTIMEDIA_AUDIO	220,9381
#define PCI_CLASS_MULTIMEDIA_OTHER	221,9423
#define PCI_BASE_CLASS_MEMORY	223,9466
#define  PCI_CLASS_MEMORY_RAM	224,9502
#define  PCI_CLASS_MEMORY_FLASH	225,9540
#define  PCI_CLASS_MEMORY_OTHER	226,9580
#define PCI_BASE_CLASS_BRIDGE	228,9621
#define  PCI_CLASS_BRIDGE_HOST	229,9657
#define  PCI_CLASS_BRIDGE_ISA	230,9696
#define  PCI_CLASS_BRIDGE_EISA	231,9734
#define  PCI_CLASS_BRIDGE_MC	232,9773
#define  PCI_CLASS_BRIDGE_PCI	233,9810
#define  PCI_CLASS_BRIDGE_PCMCIA	234,9848
#define  PCI_CLASS_BRIDGE_NUBUS	235,9888
#define  PCI_CLASS_BRIDGE_CARDBUS	236,9928
#define  PCI_CLASS_BRIDGE_OTHER	237,9969
#define PCI_BASE_CLASS_COMMUNICATION	239,10010
#define PCI_CLASS_COMMUNICATION_SERIAL	240,10052
#define PCI_CLASS_COMMUNICATION_PARALLEL 241,10098
#define PCI_CLASS_COMMUNICATION_OTHER	242,10146
#define PCI_BASE_CLASS_SYSTEM	244,10192
#define PCI_CLASS_SYSTEM_PIC	245,10228
#define PCI_CLASS_SYSTEM_DMA	246,10265
#define PCI_CLASS_SYSTEM_TIMER	247,10302
#define PCI_CLASS_SYSTEM_RTC	248,10341
#define PCI_CLASS_SYSTEM_OTHER	249,10378
#define PCI_BASE_CLASS_INPUT	251,10418
#define PCI_CLASS_INPUT_KEYBOARD	252,10453
#define PCI_CLASS_INPUT_PEN	253,10493
#define PCI_CLASS_INPUT_MOUSE	254,10529
#define PCI_CLASS_INPUT_OTHER	255,10567
#define PCI_BASE_CLASS_DOCKING	257,10606
#define PCI_CLASS_DOCKING_GENERIC	258,10643
#define PCI_CLASS_DOCKING_OTHER	259,10684
#define PCI_BASE_CLASS_PROCESSOR	261,10725
#define PCI_CLASS_PROCESSOR_386	262,10763
#define PCI_CLASS_PROCESSOR_486	263,10803
#define PCI_CLASS_PROCESSOR_PENTIUM	264,10843
#define PCI_CLASS_PROCESSOR_ALPHA	265,10886
#define PCI_CLASS_PROCESSOR_POWERPC	266,10927
#define PCI_CLASS_PROCESSOR_CO	267,10970
#define PCI_BASE_CLASS_SERIAL	269,11010
#define PCI_CLASS_SERIAL_FIREWIRE	270,11046
#define PCI_CLASS_SERIAL_ACCESS	271,11087
#define PCI_CLASS_SERIAL_SSA	272,11127
#define PCI_CLASS_SERIAL_USB	273,11164
#define PCI_CLASS_SERIAL_FIBER	274,11201
#define PCI_CLASS_OTHERS	276,11241
#define PCI_VENDOR_ID_COMPAQ	283,11450
#define PCI_DEVICE_ID_COMPAQ_1280	284,11487
#define PCI_DEVICE_ID_COMPAQ_TRIFLEX	285,11528
#define PCI_DEVICE_ID_COMPAQ_SMART2P	286,11572
#define PCI_DEVICE_ID_COMPAQ_NETEL100	287,11616
#define PCI_DEVICE_ID_COMPAQ_NETEL10	288,11661
#define PCI_DEVICE_ID_COMPAQ_NETFLEX3I	289,11705
#define PCI_DEVICE_ID_COMPAQ_NETEL100D	290,11751
#define PCI_DEVICE_ID_COMPAQ_NETEL100PI	291,11797
#define PCI_DEVICE_ID_COMPAQ_NETEL100I	292,11844
#define PCI_DEVICE_ID_COMPAQ_THUNDER	293,11890
#define PCI_DEVICE_ID_COMPAQ_NETFLEX3B	294,11934
#define PCI_VENDOR_ID_NCR	296,11981
#define PCI_DEVICE_ID_NCR_53C810	297,12015
#define PCI_DEVICE_ID_NCR_53C820	298,12055
#define PCI_DEVICE_ID_NCR_53C825	299,12095
#define PCI_DEVICE_ID_NCR_53C815	300,12135
#define PCI_DEVICE_ID_NCR_53C860	301,12175
#define PCI_DEVICE_ID_NCR_53C896	302,12215
#define PCI_DEVICE_ID_NCR_53C895	303,12255
#define PCI_DEVICE_ID_NCR_53C885	304,12295
#define PCI_DEVICE_ID_NCR_53C875	305,12335
#define PCI_DEVICE_ID_NCR_53C875J	306,12375
#define PCI_VENDOR_ID_ATI	308,12417
#define PCI_DEVICE_ID_ATI_68800	309,12451
#define PCI_DEVICE_ID_ATI_215CT222	310,12491
#define PCI_DEVICE_ID_ATI_210888CX	311,12533
#define PCI_DEVICE_ID_ATI_215GB	312,12575
#define PCI_DEVICE_ID_ATI_215GD	313,12615
#define PCI_DEVICE_ID_ATI_215GI	314,12655
#define PCI_DEVICE_ID_ATI_215GP	315,12695
#define PCI_DEVICE_ID_ATI_215GQ	316,12735
#define PCI_DEVICE_ID_ATI_215GT	317,12775
#define PCI_DEVICE_ID_ATI_215GTB	318,12815
#define PCI_DEVICE_ID_ATI_210888GX	319,12855
#define PCI_DEVICE_ID_ATI_215LG	320,12897
#define PCI_DEVICE_ID_ATI_264LT	321,12937
#define PCI_DEVICE_ID_ATI_264VT	322,12977
#define PCI_VENDOR_ID_VLSI	324,13018
#define PCI_DEVICE_ID_VLSI_82C592	325,13053
#define PCI_DEVICE_ID_VLSI_82C593	326,13094
#define PCI_DEVICE_ID_VLSI_82C594	327,13135
#define PCI_DEVICE_ID_VLSI_82C597	328,13176
#define PCI_DEVICE_ID_VLSI_82C541	329,13217
#define PCI_DEVICE_ID_VLSI_82C543	330,13258
#define PCI_DEVICE_ID_VLSI_82C532	331,13299
#define PCI_DEVICE_ID_VLSI_82C534	332,13340
#define PCI_DEVICE_ID_VLSI_82C535	333,13381
#define PCI_DEVICE_ID_VLSI_82C147	334,13422
#define PCI_DEVICE_ID_VLSI_VAS96011	335,13463
#define PCI_VENDOR_ID_ADL	337,13507
#define PCI_DEVICE_ID_ADL_2301	338,13541
#define PCI_VENDOR_ID_NS	340,13581
#define PCI_DEVICE_ID_NS_87415	341,13614
#define PCI_DEVICE_ID_NS_87410	342,13653
#define PCI_VENDOR_ID_TSENG	344,13693
#define PCI_DEVICE_ID_TSENG_W32P_2	345,13729
#define PCI_DEVICE_ID_TSENG_W32P_b	346,13771
#define PCI_DEVICE_ID_TSENG_W32P_c	347,13813
#define PCI_DEVICE_ID_TSENG_W32P_d	348,13855
#define PCI_DEVICE_ID_TSENG_ET6000	349,13897
#define PCI_VENDOR_ID_WEITEK	351,13940
#define PCI_DEVICE_ID_WEITEK_P9000	352,13977
#define PCI_DEVICE_ID_WEITEK_P9100	353,14019
#define PCI_VENDOR_ID_DEC	355,14062
#define PCI_DEVICE_ID_DEC_BRD	356,14096
#define PCI_DEVICE_ID_DEC_TULIP	357,14134
#define PCI_DEVICE_ID_DEC_TGA	358,14174
#define PCI_DEVICE_ID_DEC_TULIP_FAST	359,14212
#define PCI_DEVICE_ID_DEC_TGA2	360,14256
#define PCI_DEVICE_ID_DEC_FDDI	361,14295
#define PCI_DEVICE_ID_DEC_TULIP_PLUS	362,14334
#define PCI_DEVICE_ID_DEC_21142	363,14378
#define PCI_DEVICE_ID_DEC_21052	364,14418
#define PCI_DEVICE_ID_DEC_21150	365,14458
#define PCI_DEVICE_ID_DEC_21152	366,14498
#define PCI_DEVICE_ID_DEC_21153	367,14538
#define PCI_VENDOR_ID_CIRRUS	369,14579
#define PCI_DEVICE_ID_CIRRUS_7548	370,14616
#define PCI_DEVICE_ID_CIRRUS_5430	371,14657
#define PCI_DEVICE_ID_CIRRUS_5434_4	372,14698
#define PCI_DEVICE_ID_CIRRUS_5434_8	373,14741
#define PCI_DEVICE_ID_CIRRUS_5436	374,14784
#define PCI_DEVICE_ID_CIRRUS_5446	375,14825
#define PCI_DEVICE_ID_CIRRUS_5480	376,14866
#define PCI_DEVICE_ID_CIRRUS_5464	377,14907
#define PCI_DEVICE_ID_CIRRUS_5465	378,14948
#define PCI_DEVICE_ID_CIRRUS_6729	379,14989
#define PCI_DEVICE_ID_CIRRUS_6832	380,15030
#define PCI_DEVICE_ID_CIRRUS_7542	381,15071
#define PCI_DEVICE_ID_CIRRUS_7543	382,15112
#define PCI_DEVICE_ID_CIRRUS_7541	383,15153
#define PCI_VENDOR_ID_IBM	385,15195
#define PCI_DEVICE_ID_IBM_FIRE_CORAL	386,15229
#define PCI_DEVICE_ID_IBM_TR	387,15273
#define PCI_DEVICE_ID_IBM_82G2675	388,15310
#define PCI_DEVICE_ID_IBM_MCA	389,15351
#define PCI_DEVICE_ID_IBM_82351	390,15389
#define PCI_DEVICE_ID_IBM_PYTHON	391,15429
#define PCI_DEVICE_ID_IBM_SERVERAID	392,15469
#define PCI_DEVICE_ID_IBM_TR_WAKE	393,15512
#define PCI_DEVICE_ID_IBM_MPIC	394,15553
#define PCI_DEVICE_ID_IBM_3780IDSP	395,15592
#define PCI_DEVICE_ID_IBM_MPIC_2	396,15634
#define PCI_VENDOR_ID_WD	398,15675
#define PCI_DEVICE_ID_WD_7197	399,15708
#define PCI_VENDOR_ID_AMD	401,15747
#define PCI_DEVICE_ID_AMD_LANCE	402,15781
#define PCI_DEVICE_ID_AMD_SCSI	403,15821
#define PCI_VENDOR_ID_TRIDENT	405,15861
#define PCI_DEVICE_ID_TRIDENT_9397	406,15899
#define PCI_DEVICE_ID_TRIDENT_9420	407,15941
#define PCI_DEVICE_ID_TRIDENT_9440	408,15983
#define PCI_DEVICE_ID_TRIDENT_9660	409,16025
#define PCI_DEVICE_ID_TRIDENT_9750	410,16067
#define PCI_VENDOR_ID_AI	412,16110
#define PCI_DEVICE_ID_AI_M1435	413,16143
#define PCI_VENDOR_ID_MATROX	415,16183
#define PCI_DEVICE_ID_MATROX_MGA_2	416,16220
#define PCI_DEVICE_ID_MATROX_MIL	417,16262
#define PCI_DEVICE_ID_MATROX_MYS	418,16302
#define PCI_DEVICE_ID_MATROX_MIL_2	419,16342
#define PCI_DEVICE_ID_MATROX_MIL_2_AGP	420,16384
#define PCI_DEVICE_ID_MATROX_G200_PCI 421,16430
#define PCI_DEVICE_ID_MATROX_G200_AGP 422,16477
#define PCI_DEVICE_ID_MATROX_MGA_IMP	423,16524
#define PCI_DEVICE_ID_MATROX_G100_MM 424,16568
#define PCI_DEVICE_ID_MATROX_G100_AGP 425,16615
#define PCI_VENDOR_ID_CT	427,16663
#define PCI_DEVICE_ID_CT_65545	428,16696
#define PCI_DEVICE_ID_CT_65548	429,16735
#define PCI_DEVICE_ID_CT_65550	430,16774
#define PCI_DEVICE_ID_CT_65554	431,16813
#define PCI_DEVICE_ID_CT_65555	432,16852
#define PCI_VENDOR_ID_MIRO	434,16892
#define PCI_DEVICE_ID_MIRO_36050	435,16927
#define PCI_VENDOR_ID_NEC	437,16968
#define PCI_DEVICE_ID_NEC_PCX2	438,17002
#define PCI_VENDOR_ID_FD	440,17042
#define PCI_DEVICE_ID_FD_36C70	441,17075
#define PCI_VENDOR_ID_SI	443,17115
#define PCI_DEVICE_ID_SI_5591_AGP	444,17148
#define PCI_DEVICE_ID_SI_6202	445,17189
#define PCI_DEVICE_ID_SI_503	446,17227
#define PCI_DEVICE_ID_SI_ACPI	447,17264
#define PCI_DEVICE_ID_SI_5597_VGA	448,17302
#define PCI_DEVICE_ID_SI_6205	449,17343
#define PCI_DEVICE_ID_SI_501	450,17381
#define PCI_DEVICE_ID_SI_496	451,17418
#define PCI_DEVICE_ID_SI_601	452,17455
#define PCI_DEVICE_ID_SI_5107	453,17492
#define PCI_DEVICE_ID_SI_5511	454,17530
#define PCI_DEVICE_ID_SI_5513	455,17568
#define PCI_DEVICE_ID_SI_5571	456,17606
#define PCI_DEVICE_ID_SI_5591	457,17644
#define PCI_DEVICE_ID_SI_5597	458,17682
#define PCI_DEVICE_ID_SI_7001	459,17720
#define PCI_VENDOR_ID_HP	461,17759
#define PCI_DEVICE_ID_HP_J2585A	462,17792
#define PCI_DEVICE_ID_HP_J2585B	463,17832
#define PCI_VENDOR_ID_PCTECH	465,17873
#define PCI_DEVICE_ID_PCTECH_RZ1000	466,17910
#define PCI_DEVICE_ID_PCTECH_RZ1001	467,17953
#define PCI_DEVICE_ID_PCTECH_SAMURAI_0	468,17996
#define PCI_DEVICE_ID_PCTECH_SAMURAI_1	469,18042
#define PCI_DEVICE_ID_PCTECH_SAMURAI_IDE 470,18088
#define PCI_VENDOR_ID_DPT 472,18137
#define PCI_DEVICE_ID_DPT 473,18187
#define PCI_VENDOR_ID_OPTI	475,18237
#define PCI_DEVICE_ID_OPTI_92C178	476,18272
#define PCI_DEVICE_ID_OPTI_82C557	477,18313
#define PCI_DEVICE_ID_OPTI_82C558	478,18354
#define PCI_DEVICE_ID_OPTI_82C621	479,18395
#define PCI_DEVICE_ID_OPTI_82C700	480,18436
#define PCI_DEVICE_ID_OPTI_82C701	481,18477
#define PCI_DEVICE_ID_OPTI_82C814	482,18518
#define PCI_DEVICE_ID_OPTI_82C822	483,18559
#define PCI_DEVICE_ID_OPTI_82C861	484,18600
#define PCI_DEVICE_ID_OPTI_82C825	485,18641
#define PCI_VENDOR_ID_SGS	487,18683
#define PCI_DEVICE_ID_SGS_2000	488,18717
#define PCI_DEVICE_ID_SGS_1764	489,18756
#define PCI_VENDOR_ID_BUSLOGIC	491,18796
#define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER_NC 492,18841
#define PCI_DEVICE_ID_BUSLOGIC_MULTIMASTER 493,18894
#define PCI_DEVICE_ID_BUSLOGIC_FLASHPOINT 494,18947
#define PCI_VENDOR_ID_TI	496,19001
#define PCI_DEVICE_ID_TI_TVP4010	497,19034
#define PCI_DEVICE_ID_TI_TVP4020	498,19074
#define PCI_DEVICE_ID_TI_PCI1130	499,19114
#define PCI_DEVICE_ID_TI_PCI1031	500,19154
#define PCI_DEVICE_ID_TI_PCI1131	501,19194
#define PCI_DEVICE_ID_TI_PCI1250	502,19234
#define PCI_DEVICE_ID_TI_PCI1220	503,19274
#define PCI_VENDOR_ID_OAK	505,19315
#define PCI_DEVICE_ID_OAK_OTI107	506,19349
#define PCI_VENDOR_ID_WINBOND2	509,19444
#define PCI_DEVICE_ID_WINBOND2_89C940	510,19483
#define PCI_VENDOR_ID_MOTOROLA	512,19529
#define PCI_DEVICE_ID_MOTOROLA_MPC105	513,19568
#define PCI_DEVICE_ID_MOTOROLA_MPC106	514,19613
#define PCI_DEVICE_ID_MOTOROLA_RAVEN	515,19658
#define PCI_VENDOR_ID_PROMISE	517,19703
#define PCI_DEVICE_ID_PROMISE_20246	518,19741
#define PCI_DEVICE_ID_PROMISE_5300	519,19784
#define PCI_VENDOR_ID_N9	521,19827
#define PCI_DEVICE_ID_N9_I128	522,19860
#define PCI_DEVICE_ID_N9_I128_2	523,19898
#define PCI_DEVICE_ID_N9_I128_T2R	524,19938
#define PCI_VENDOR_ID_UMC	526,19980
#define PCI_DEVICE_ID_UMC_UM8673F	527,20014
#define PCI_DEVICE_ID_UMC_UM8891A	528,20055
#define PCI_DEVICE_ID_UMC_UM8886BF	529,20096
#define PCI_DEVICE_ID_UMC_UM8886A	530,20138
#define PCI_DEVICE_ID_UMC_UM8881F	531,20179
#define PCI_DEVICE_ID_UMC_UM8886F	532,20220
#define PCI_DEVICE_ID_UMC_UM9017F	533,20261
#define PCI_DEVICE_ID_UMC_UM8886N	534,20302
#define PCI_DEVICE_ID_UMC_UM8891N	535,20343
#define PCI_VENDOR_ID_X	537,20385
#define PCI_DEVICE_ID_X_AGX016	538,20418
#define PCI_VENDOR_ID_PICOP	540,20458
#define PCI_DEVICE_ID_PICOP_PT86C52X	541,20494
#define PCI_DEVICE_ID_PICOP_PT80C524	542,20538
#define PCI_VENDOR_ID_APPLE	544,20583
#define PCI_DEVICE_ID_APPLE_BANDIT	545,20619
#define PCI_DEVICE_ID_APPLE_GC	546,20661
#define PCI_DEVICE_ID_APPLE_HYDRA	547,20700
#define PCI_VENDOR_ID_NEXGEN	549,20742
#define PCI_DEVICE_ID_NEXGEN_82C501	550,20779
#define PCI_VENDOR_ID_QLOGIC	552,20823
#define PCI_DEVICE_ID_QLOGIC_ISP1020	553,20860
#define PCI_DEVICE_ID_QLOGIC_ISP1022	554,20904
#define PCI_DEVICE_ID_QLOGIC_ISP2100	555,20948
#define PCI_VENDOR_ID_CYRIX	557,20993
#define PCI_DEVICE_ID_CYRIX_5510	558,21029
#define PCI_DEVICE_ID_CYRIX_PCI_MASTER	559,21069
#define PCI_DEVICE_ID_CYRIX_5520	560,21115
#define PCI_DEVICE_ID_CYRIX_5530_LEGACY	561,21155
#define PCI_DEVICE_ID_CYRIX_5530_SMI	562,21202
#define PCI_DEVICE_ID_CYRIX_5530_IDE	563,21246
#define PCI_DEVICE_ID_CYRIX_5530_AUDIO	564,21290
#define PCI_DEVICE_ID_CYRIX_5530_VIDEO	565,21336
#define PCI_VENDOR_ID_LEADTEK	567,21383
#define PCI_DEVICE_ID_LEADTEK_805	568,21421
#define PCI_VENDOR_ID_CONTAQ	570,21463
#define PCI_DEVICE_ID_CONTAQ_82C599	571,21500
#define PCI_DEVICE_ID_CONTAQ_82C693	572,21543
#define PCI_VENDOR_ID_FOREX	574,21587
#define PCI_VENDOR_ID_OLICOM	576,21624
#define PCI_DEVICE_ID_OLICOM_OC3136	577,21661
#define PCI_DEVICE_ID_OLICOM_OC2315	578,21704
#define PCI_DEVICE_ID_OLICOM_OC2325	579,21747
#define PCI_DEVICE_ID_OLICOM_OC2183	580,21790
#define PCI_DEVICE_ID_OLICOM_OC2326	581,21833
#define PCI_DEVICE_ID_OLICOM_OC6151	582,21876
#define PCI_VENDOR_ID_SUN	584,21920
#define PCI_DEVICE_ID_SUN_EBUS	585,21954
#define PCI_DEVICE_ID_SUN_HAPPYMEAL	586,21993
#define PCI_DEVICE_ID_SUN_SIMBA	587,22036
#define PCI_DEVICE_ID_SUN_PBM	588,22076
#define PCI_DEVICE_ID_SUN_SABRE	589,22114
#define PCI_VENDOR_ID_CMD	591,22155
#define PCI_DEVICE_ID_CMD_640	592,22189
#define PCI_DEVICE_ID_CMD_643	593,22227
#define PCI_DEVICE_ID_CMD_646	594,22265
#define PCI_DEVICE_ID_CMD_647	595,22303
#define PCI_DEVICE_ID_CMD_670	596,22341
#define PCI_VENDOR_ID_VISION	598,22380
#define PCI_DEVICE_ID_VISION_QD8500	599,22417
#define PCI_DEVICE_ID_VISION_QD8580	600,22460
#define PCI_VENDOR_ID_BROOKTREE	602,22504
#define PCI_DEVICE_ID_BROOKTREE_848	603,22544
#define PCI_DEVICE_ID_BROOKTREE_849A	604,22587
#define PCI_DEVICE_ID_BROOKTREE_878_1 605,22631
#define PCI_DEVICE_ID_BROOKTREE_878 606,22678
#define PCI_DEVICE_ID_BROOKTREE_8474	607,22725
#define PCI_VENDOR_ID_SIERRA	609,22770
#define PCI_DEVICE_ID_SIERRA_STB	610,22807
#define PCI_VENDOR_ID_ACC	612,22848
#define PCI_DEVICE_ID_ACC_2056	613,22882
#define PCI_VENDOR_ID_WINBOND	615,22922
#define PCI_DEVICE_ID_WINBOND_83769	616,22960
#define PCI_DEVICE_ID_WINBOND_82C105	617,23003
#define PCI_DEVICE_ID_WINBOND_83C553	618,23047
#define PCI_VENDOR_ID_DATABOOK	620,23092
#define PCI_DEVICE_ID_DATABOOK_87144	621,23131
#define PCI_VENDOR_ID_PLX	623,23176
#define PCI_DEVICE_ID_PLX_9050	624,23210
#define PCI_DEVICE_ID_PLX_9060	625,23249
#define PCI_DEVICE_ID_PLX_9060ES	626,23288
#define PCI_DEVICE_ID_PLX_9060SD	627,23328
#define PCI_DEVICE_ID_PLX_9080	628,23368
#define PCI_VENDOR_ID_MADGE	630,23408
#define PCI_DEVICE_ID_MADGE_MK2	631,23444
#define PCI_DEVICE_ID_MADGE_C155S	632,23484
#define PCI_VENDOR_ID_3COM	634,23526
#define PCI_DEVICE_ID_3COM_3C985	635,23561
#define PCI_DEVICE_ID_3COM_3C339	636,23601
#define PCI_DEVICE_ID_3COM_3C590	637,23641
#define PCI_DEVICE_ID_3COM_3C595TX	638,23681
#define PCI_DEVICE_ID_3COM_3C595T4	639,23723
#define PCI_DEVICE_ID_3COM_3C595MII	640,23765
#define PCI_DEVICE_ID_3COM_3C900TPO	641,23808
#define PCI_DEVICE_ID_3COM_3C900COMBO	642,23851
#define PCI_DEVICE_ID_3COM_3C905TX	643,23896
#define PCI_DEVICE_ID_3COM_3C905T4	644,23938
#define PCI_DEVICE_ID_3COM_3C905B_TX	645,23980
#define PCI_VENDOR_ID_SMC	647,24025
#define PCI_DEVICE_ID_SMC_EPIC100	648,24059
#define PCI_VENDOR_ID_AL	650,24101
#define PCI_DEVICE_ID_AL_M1445	651,24134
#define PCI_DEVICE_ID_AL_M1449	652,24173
#define PCI_DEVICE_ID_AL_M1451	653,24212
#define PCI_DEVICE_ID_AL_M1461	654,24251
#define PCI_DEVICE_ID_AL_M1489	655,24290
#define PCI_DEVICE_ID_AL_M1511	656,24329
#define PCI_DEVICE_ID_AL_M1513	657,24368
#define PCI_DEVICE_ID_AL_M1521	658,24407
#define PCI_DEVICE_ID_AL_M1523	659,24446
#define PCI_DEVICE_ID_AL_M1531	660,24485
#define PCI_DEVICE_ID_AL_M1533	661,24524
#define PCI_DEVICE_ID_AL_M3307	662,24563
#define PCI_DEVICE_ID_AL_M4803	663,24602
#define PCI_DEVICE_ID_AL_M5219	664,24641
#define PCI_DEVICE_ID_AL_M5229	665,24680
#define PCI_DEVICE_ID_AL_M5237	666,24719
#define PCI_DEVICE_ID_AL_M7101	667,24758
#define PCI_VENDOR_ID_MITSUBISHI	669,24798
#define PCI_VENDOR_ID_SURECOM	671,24839
#define PCI_DEVICE_ID_SURECOM_NE34	672,24877
#define PCI_VENDOR_ID_NEOMAGIC 674,24920
#define PCI_DEVICE_ID_NEOMAGIC_MAGICGRAPH_NM2070 675,24967
#define PCI_DEVICE_ID_NEOMAGIC_MAGICGRAPH_128V 676,25023
#define PCI_DEVICE_ID_NEOMAGIC_MAGICGRAPH_128ZV 677,25077
#define PCI_DEVICE_ID_NEOMAGIC_MAGICGRAPH_NM2160 678,25132
#define PCI_VENDOR_ID_ASP	680,25189
#define PCI_DEVICE_ID_ASP_ABP940	681,25223
#define PCI_DEVICE_ID_ASP_ABP940U	682,25263
#define PCI_DEVICE_ID_ASP_ABP940UW	683,25304
#define PCI_VENDOR_ID_MACRONIX	685,25347
#define PCI_DEVICE_ID_MACRONIX_MX98713	686,25386
#define PCI_DEVICE_ID_MACRONIX_MX987x5	687,25432
#define PCI_VENDOR_ID_CERN	689,25479
#define PCI_DEVICE_ID_CERN_SPSB_PMC	690,25514
#define PCI_DEVICE_ID_CERN_SPSB_PCI	691,25557
#define PCI_DEVICE_ID_CERN_HIPPI_DST	692,25600
#define PCI_DEVICE_ID_CERN_HIPPI_SRC	693,25644
#define PCI_VENDOR_ID_NVIDIA	695,25689
#define PCI_VENDOR_ID_IMS	697,25727
#define PCI_DEVICE_ID_IMS_8849	698,25761
#define PCI_VENDOR_ID_TEKRAM2	700,25801
#define PCI_DEVICE_ID_TEKRAM2_690c	701,25839
#define PCI_VENDOR_ID_TUNDRA	703,25882
#define PCI_DEVICE_ID_TUNDRA_CA91C042	704,25919
#define PCI_VENDOR_ID_AMCC	706,25965
#define PCI_DEVICE_ID_AMCC_MYRINET	707,26000
#define PCI_DEVICE_ID_AMCC_PARASTATION	708,26042
#define PCI_DEVICE_ID_AMCC_S5933	709,26088
#define PCI_DEVICE_ID_AMCC_S5933_HEPC3	710,26128
#define PCI_VENDOR_ID_INTERG	712,26175
#define PCI_DEVICE_ID_INTERG_1680	713,26212
#define PCI_DEVICE_ID_INTERG_1682	714,26253
#define PCI_VENDOR_ID_REALTEK	716,26295
#define PCI_DEVICE_ID_REALTEK_8029	717,26333
#define PCI_DEVICE_ID_REALTEK_8129	718,26375
#define PCI_DEVICE_ID_REALTEK_8139	719,26417
#define PCI_VENDOR_ID_TRUEVISION	721,26460
#define PCI_DEVICE_ID_TRUEVISION_T1000	722,26500
#define PCI_VENDOR_ID_INIT	724,26547
#define PCI_DEVICE_ID_INIT_320P	725,26582
#define PCI_DEVICE_ID_INIT_360P	726,26622
#define PCI_VENDOR_ID_TTI	728,26663
#define PCI_DEVICE_ID_TTI_HPT343	729,26697
#define PCI_VENDOR_ID_VIA	731,26738
#define PCI_DEVICE_ID_VIA_82C505	732,26772
#define PCI_DEVICE_ID_VIA_82C561	733,26812
#define PCI_DEVICE_ID_VIA_82C586_1	734,26852
#define PCI_DEVICE_ID_VIA_82C576	735,26894
#define PCI_DEVICE_ID_VIA_82C585	736,26934
#define PCI_DEVICE_ID_VIA_82C586_0	737,26974
#define PCI_DEVICE_ID_VIA_82C595	738,27016
#define PCI_DEVICE_ID_VIA_82C597_0	739,27056
#define PCI_DEVICE_ID_VIA_82C598_0 740,27098
#define PCI_DEVICE_ID_VIA_82C926	741,27145
#define PCI_DEVICE_ID_VIA_82C416	742,27185
#define PCI_DEVICE_ID_VIA_82C595_97	743,27225
#define PCI_DEVICE_ID_VIA_82C586_2	744,27268
#define PCI_DEVICE_ID_VIA_82C586_3	745,27310
#define PCI_DEVICE_ID_VIA_86C100A	746,27352
#define PCI_DEVICE_ID_VIA_82C597_1	747,27393
#define PCI_DEVICE_ID_VIA_82C598_1 748,27435
#define PCI_VENDOR_ID_SMC2 750,27483
#define PCI_DEVICE_ID_SMC2_1211TX 751,27529
#define PCI_VENDOR_ID_VORTEX	753,27576
#define PCI_DEVICE_ID_VORTEX_GDT60x0	754,27613
#define PCI_DEVICE_ID_VORTEX_GDT6000B	755,27657
#define PCI_DEVICE_ID_VORTEX_GDT6x10	756,27702
#define PCI_DEVICE_ID_VORTEX_GDT6x20	757,27746
#define PCI_DEVICE_ID_VORTEX_GDT6530	758,27790
#define PCI_DEVICE_ID_VORTEX_GDT6550	759,27834
#define PCI_DEVICE_ID_VORTEX_GDT6x17	760,27878
#define PCI_DEVICE_ID_VORTEX_GDT6x27	761,27922
#define PCI_DEVICE_ID_VORTEX_GDT6537	762,27966
#define PCI_DEVICE_ID_VORTEX_GDT6557	763,28010
#define PCI_DEVICE_ID_VORTEX_GDT6x15	764,28054
#define PCI_DEVICE_ID_VORTEX_GDT6x25	765,28098
#define PCI_DEVICE_ID_VORTEX_GDT6535	766,28142
#define PCI_DEVICE_ID_VORTEX_GDT6555	767,28186
#define PCI_DEVICE_ID_VORTEX_GDT6x17RP	768,28230
#define PCI_DEVICE_ID_VORTEX_GDT6x27RP	769,28276
#define PCI_DEVICE_ID_VORTEX_GDT6537RP	770,28322
#define PCI_DEVICE_ID_VORTEX_GDT6557RP	771,28368
#define PCI_DEVICE_ID_VORTEX_GDT6x11RP	772,28414
#define PCI_DEVICE_ID_VORTEX_GDT6x21RP	773,28460
#define PCI_DEVICE_ID_VORTEX_GDT6x17RP1	774,28506
#define PCI_DEVICE_ID_VORTEX_GDT6x27RP1	775,28553
#define PCI_DEVICE_ID_VORTEX_GDT6537RP1	776,28600
#define PCI_DEVICE_ID_VORTEX_GDT6557RP1	777,28647
#define PCI_DEVICE_ID_VORTEX_GDT6x11RP1	778,28694
#define PCI_DEVICE_ID_VORTEX_GDT6x21RP1	779,28741
#define PCI_DEVICE_ID_VORTEX_GDT6x17RP2	780,28788
#define PCI_DEVICE_ID_VORTEX_GDT6x27RP2	781,28835
#define PCI_DEVICE_ID_VORTEX_GDT6537RP2	782,28882
#define PCI_DEVICE_ID_VORTEX_GDT6557RP2	783,28929
#define PCI_DEVICE_ID_VORTEX_GDT6x11RP2	784,28976
#define PCI_DEVICE_ID_VORTEX_GDT6x21RP2	785,29023
#define PCI_VENDOR_ID_EF	787,29071
#define PCI_DEVICE_ID_EF_ATM_FPGA	788,29104
#define PCI_DEVICE_ID_EF_ATM_ASIC	789,29145
#define PCI_VENDOR_ID_FORE	791,29187
#define PCI_DEVICE_ID_FORE_PCA200PC	792,29222
#define PCI_DEVICE_ID_FORE_PCA200E	793,29265
#define PCI_VENDOR_ID_IMAGINGTECH	795,29308
#define PCI_DEVICE_ID_IMAGINGTECH_ICPCI	796,29349
#define PCI_VENDOR_ID_PHILIPS	798,29397
#define PCI_DEVICE_ID_PHILIPS_SAA7145	799,29435
#define PCI_DEVICE_ID_PHILIPS_SAA7146	800,29480
#define PCI_VENDOR_ID_CYCLONE	802,29526
#define PCI_DEVICE_ID_CYCLONE_SDK	803,29564
#define PCI_VENDOR_ID_ALLIANCE	805,29606
#define PCI_DEVICE_ID_ALLIANCE_PROMOTIO	806,29645
#define PCI_DEVICE_ID_ALLIANCE_PROVIDEO	807,29692
#define PCI_DEVICE_ID_ALLIANCE_AT24	808,29739
#define PCI_DEVICE_ID_ALLIANCE_AT3D	809,29782
#define PCI_VENDOR_ID_SK	811,29826
#define PCI_DEVICE_ID_SK_FP	812,29859
#define PCI_DEVICE_ID_SK_TR	813,29895
#define PCI_DEVICE_ID_SK_GE	814,29931
#define PCI_VENDOR_ID_VMIC	816,29968
#define PCI_DEVICE_ID_VMIC_VME	817,30003
#define PCI_VENDOR_ID_DIGI	819,30043
#define PCI_DEVICE_ID_DIGI_EPC	820,30078
#define PCI_DEVICE_ID_DIGI_RIGHTSWITCH	821,30117
#define PCI_DEVICE_ID_DIGI_XEM	822,30163
#define PCI_DEVICE_ID_DIGI_XR	823,30202
#define PCI_DEVICE_ID_DIGI_CX	824,30240
#define PCI_DEVICE_ID_DIGI_XRJ	825,30278
#define PCI_DEVICE_ID_DIGI_EPCJ	826,30317
#define PCI_DEVICE_ID_DIGI_XR_920	827,30357
#define PCI_VENDOR_ID_MUTECH	829,30399
#define PCI_DEVICE_ID_MUTECH_MV1000	830,30436
#define PCI_VENDOR_ID_RENDITION	832,30480
#define PCI_DEVICE_ID_RENDITION_VERITE	833,30520
#define PCI_DEVICE_ID_RENDITION_VERITE2100 834,30566
#define PCI_VENDOR_ID_TOSHIBA	836,30617
#define PCI_DEVICE_ID_TOSHIBA_601	837,30655
#define PCI_DEVICE_ID_TOSHIBA_TOPIC95	838,30696
#define PCI_DEVICE_ID_TOSHIBA_TOPIC97	839,30741
#define PCI_VENDOR_ID_RICOH	841,30787
#define PCI_DEVICE_ID_RICOH_RL5C465	842,30823
#define PCI_DEVICE_ID_RICOH_RL5C466	843,30866
#define PCI_DEVICE_ID_RICOH_RL5C475	844,30909
#define PCI_DEVICE_ID_RICOH_RL5C478	845,30952
#define PCI_VENDOR_ID_ARTOP	847,30996
#define PCI_DEVICE_ID_ARTOP_ATP8400	848,31032
#define PCI_DEVICE_ID_ARTOP_ATP850UF	849,31075
#define PCI_VENDOR_ID_ZEITNET	851,31120
#define PCI_DEVICE_ID_ZEITNET_1221	852,31158
#define PCI_DEVICE_ID_ZEITNET_1225	853,31200
#define PCI_VENDOR_ID_OMEGA	855,31243
#define PCI_DEVICE_ID_OMEGA_82C092G	856,31279
#define PCI_VENDOR_ID_LITEON	858,31323
#define PCI_DEVICE_ID_LITEON_LNE100TX	859,31360
#define PCI_VENDOR_ID_NP	861,31406
#define PCI_DEVICE_ID_NP_PCI_FDDI	862,31439
#define PCI_VENDOR_ID_ATT	864,31481
#define PCI_DEVICE_ID_ATT_L56XMF	865,31515
#define PCI_VENDOR_ID_SPECIALIX	867,31556
#define PCI_DEVICE_ID_SPECIALIX_IO8	868,31596
#define PCI_DEVICE_ID_SPECIALIX_XIO	869,31639
#define PCI_DEVICE_ID_SPECIALIX_RIO	870,31682
#define PCI_VENDOR_ID_AURAVISION	872,31726
#define PCI_DEVICE_ID_AURAVISION_VXP524	873,31766
#define PCI_VENDOR_ID_IKON	875,31814
#define PCI_DEVICE_ID_IKON_10115	876,31849
#define PCI_DEVICE_ID_IKON_10117	877,31889
#define PCI_VENDOR_ID_ZORAN	879,31930
#define PCI_DEVICE_ID_ZORAN_36057	880,31966
#define PCI_DEVICE_ID_ZORAN_36120	881,32007
#define PCI_VENDOR_ID_KINETIC	883,32049
#define PCI_DEVICE_ID_KINETIC_2915	884,32087
#define PCI_VENDOR_ID_COMPEX	886,32130
#define PCI_DEVICE_ID_COMPEX_ENET100VG4	887,32167
#define PCI_DEVICE_ID_COMPEX_RL2000	888,32214
#define PCI_VENDOR_ID_RP 890,32258
#define PCI_DEVICE_ID_RP32INTF 891,32304
#define PCI_DEVICE_ID_RP8INTF 892,32350
#define PCI_DEVICE_ID_RP16INTF 893,32396
#define PCI_DEVICE_ID_RP4QUAD	894,32442
#define PCI_DEVICE_ID_RP8OCTA 895,32486
#define PCI_DEVICE_ID_RP8J	896,32532
#define PCI_DEVICE_ID_RPP4	897,32573
#define PCI_DEVICE_ID_RPP8	898,32614
#define PCI_DEVICE_ID_RP8M	899,32655
#define PCI_VENDOR_ID_CYCLADES	901,32697
#define PCI_DEVICE_ID_CYCLOM_Y_Lo	902,32736
#define PCI_DEVICE_ID_CYCLOM_Y_Hi	903,32777
#define PCI_DEVICE_ID_CYCLOM_Z_Lo	904,32818
#define PCI_DEVICE_ID_CYCLOM_Z_Hi	905,32859
#define PCI_VENDOR_ID_ESSENTIAL	907,32901
#define PCI_DEVICE_ID_ESSENTIAL_ROADRUNNER	908,32941
#define PCI_VENDOR_ID_O2	910,32992
#define PCI_DEVICE_ID_O2_6729	911,33025
#define PCI_DEVICE_ID_O2_6730	912,33063
#define PCI_DEVICE_ID_O2_6832	913,33101
#define PCI_DEVICE_ID_O2_6836	914,33139
#define PCI_VENDOR_ID_3DFX	916,33178
#define PCI_DEVICE_ID_3DFX_VOODOO	917,33213
#define PCI_DEVICE_ID_3DFX_VOODOO2	918,33254
#define PCI_DEVICE_ID_3DFX_BANSHEE 919,33296
#define PCI_VENDOR_ID_SIGMADES	921,33344
#define PCI_DEVICE_ID_SIGMADES_6425	922,33383
#define PCI_VENDOR_ID_CCUBE	924,33427
#define PCI_VENDOR_ID_DIPIX	926,33464
#define PCI_VENDOR_ID_STALLION	928,33501
#define PCI_DEVICE_ID_STALLION_ECHPCI832 929,33540
#define PCI_DEVICE_ID_STALLION_ECHPCI864 930,33588
#define PCI_DEVICE_ID_STALLION_EIOPCI	931,33636
#define PCI_VENDOR_ID_OPTIBASE	933,33682
#define PCI_DEVICE_ID_OPTIBASE_FORGE	934,33721
#define PCI_DEVICE_ID_OPTIBASE_FUSION	935,33765
#define PCI_DEVICE_ID_OPTIBASE_VPLEX	936,33810
#define PCI_DEVICE_ID_OPTIBASE_VPLEXCC	937,33854
#define PCI_DEVICE_ID_OPTIBASE_VQUEST	938,33900
#define PCI_VENDOR_ID_SATSAGEM	940,33946
#define PCI_DEVICE_ID_SATSAGEM_PCR2101	941,33985
#define PCI_DEVICE_ID_SATSAGEM_TELSATTURBO 942,34031
#define PCI_VENDOR_ID_HUGHES	944,34082
#define PCI_DEVICE_ID_HUGHES_DIRECPC	945,34119
#define PCI_VENDOR_ID_ENSONIQ	947,34164
#define PCI_DEVICE_ID_ENSONIQ_AUDIOPCI	948,34202
#define PCI_VENDOR_ID_ALTEON	950,34249
#define PCI_DEVICE_ID_ALTEON_ACENIC	951,34286
#define PCI_VENDOR_ID_PICTUREL	953,34330
#define PCI_DEVICE_ID_PICTUREL_PCIVST	954,34369
#define PCI_VENDOR_ID_NVIDIA_SGS	956,34415
#define PCI_DEVICE_ID_NVIDIA_SGS_RIVA128 957,34455
#define PCI_VENDOR_ID_CBOARDS	959,34504
#define PCI_DEVICE_ID_CBOARDS_DAS1602_16 960,34542
#define PCI_VENDOR_ID_NETGEAR	962,34591
#define PCI_DEVICE_ID_NETGEAR_GA620	963,34629
#define PCI_VENDOR_ID_SYMPHONY	965,34673
#define PCI_DEVICE_ID_SYMPHONY_101	966,34712
#define PCI_VENDOR_ID_TEKRAM	968,34755
#define PCI_DEVICE_ID_TEKRAM_DC290	969,34792
#define PCI_VENDOR_ID_3DLABS	971,34835
#define PCI_DEVICE_ID_3DLABS_300SX	972,34872
#define PCI_DEVICE_ID_3DLABS_500TX	973,34914
#define PCI_DEVICE_ID_3DLABS_DELTA	974,34956
#define PCI_DEVICE_ID_3DLABS_PERMEDIA	975,34998
#define PCI_DEVICE_ID_3DLABS_MX	976,35043
#define PCI_VENDOR_ID_AVANCE	978,35084
#define PCI_DEVICE_ID_AVANCE_ALG2064	979,35121
#define PCI_DEVICE_ID_AVANCE_2302	980,35165
#define PCI_VENDOR_ID_NETVIN	982,35207
#define PCI_DEVICE_ID_NETVIN_NV5000SC	983,35244
#define PCI_VENDOR_ID_S3	985,35290
#define PCI_DEVICE_ID_S3_PLATO_PXS	986,35323
#define PCI_DEVICE_ID_S3_ViRGE	987,35365
#define PCI_DEVICE_ID_S3_TRIO	988,35404
#define PCI_DEVICE_ID_S3_AURORA64VP	989,35442
#define PCI_DEVICE_ID_S3_TRIO64UVP	990,35485
#define PCI_DEVICE_ID_S3_ViRGE_VX	991,35527
#define PCI_DEVICE_ID_S3_868	992,35568
#define PCI_DEVICE_ID_S3_928	993,35605
#define PCI_DEVICE_ID_S3_864_1	994,35642
#define PCI_DEVICE_ID_S3_864_2	995,35681
#define PCI_DEVICE_ID_S3_964_1	996,35720
#define PCI_DEVICE_ID_S3_964_2	997,35759
#define PCI_DEVICE_ID_S3_968	998,35798
#define PCI_DEVICE_ID_S3_TRIO64V2	999,35835
#define PCI_DEVICE_ID_S3_PLATO_PXG	1000,35876
#define PCI_DEVICE_ID_S3_ViRGE_DXGX	1001,35918
#define PCI_DEVICE_ID_S3_ViRGE_GX2	1002,35961
#define PCI_DEVICE_ID_S3_ViRGE_MX	1003,36003
#define PCI_DEVICE_ID_S3_ViRGE_MXP	1004,36044
#define PCI_DEVICE_ID_S3_ViRGE_MXPMV	1005,36086
#define PCI_DEVICE_ID_S3_SONICVIBES	1006,36130
#define PCI_VENDOR_ID_DCI 1008,36174
#define PCI_DEVICE_ID_DCI_PCCOM4 1009,36213
#define PCI_VENDOR_ID_INTEL	1011,36257
#define PCI_DEVICE_ID_INTEL_82375	1012,36293
#define PCI_DEVICE_ID_INTEL_82424	1013,36334
#define PCI_DEVICE_ID_INTEL_82378	1014,36375
#define PCI_DEVICE_ID_INTEL_82430	1015,36416
#define PCI_DEVICE_ID_INTEL_82434	1016,36457
#define PCI_DEVICE_ID_INTEL_82092AA_0	1017,36498
#define PCI_DEVICE_ID_INTEL_82092AA_1	1018,36543
#define PCI_DEVICE_ID_INTEL_7116	1019,36588
#define PCI_DEVICE_ID_INTEL_82596	1020,36628
#define PCI_DEVICE_ID_INTEL_82865	1021,36669
#define PCI_DEVICE_ID_INTEL_82557	1022,36710
#define PCI_DEVICE_ID_INTEL_82437	1023,36751
#define PCI_DEVICE_ID_INTEL_82371FB_0	1024,36792
#define PCI_DEVICE_ID_INTEL_82371FB_1	1025,36837
#define PCI_DEVICE_ID_INTEL_82371MX	1026,36882
#define PCI_DEVICE_ID_INTEL_82437MX	1027,36925
#define PCI_DEVICE_ID_INTEL_82441	1028,36968
#define PCI_DEVICE_ID_INTEL_82380FB	1029,37009
#define PCI_DEVICE_ID_INTEL_82439	1030,37052
#define PCI_DEVICE_ID_INTEL_82371SB_0	1031,37093
#define PCI_DEVICE_ID_INTEL_82371SB_1	1032,37138
#define PCI_DEVICE_ID_INTEL_82371SB_2	1033,37183
#define PCI_DEVICE_ID_INTEL_82437VX	1034,37228
#define PCI_DEVICE_ID_INTEL_82439TX	1035,37271
#define PCI_DEVICE_ID_INTEL_82371AB_0	1036,37314
#define PCI_DEVICE_ID_INTEL_82371AB	1037,37359
#define PCI_DEVICE_ID_INTEL_82371AB_2	1038,37402
#define PCI_DEVICE_ID_INTEL_82371AB_3	1039,37447
#define PCI_DEVICE_ID_INTEL_82443LX_0	1040,37492
#define PCI_DEVICE_ID_INTEL_82443LX_1	1041,37537
#define PCI_DEVICE_ID_INTEL_82443BX_0	1042,37582
#define PCI_DEVICE_ID_INTEL_82443BX_1	1043,37627
#define PCI_DEVICE_ID_INTEL_82443BX_2	1044,37672
#define PCI_DEVICE_ID_INTEL_P6	1045,37717
#define PCI_DEVICE_ID_INTEL_82450GX	1046,37756
#define PCI_DEVICE_ID_INTEL_82451NX	1047,37799
#define PCI_VENDOR_ID_KTI	1049,37843
#define PCI_DEVICE_ID_KTI_ET32P2	1050,37877
#define PCI_VENDOR_ID_ADAPTEC	1052,37918
#define PCI_DEVICE_ID_ADAPTEC_7810	1053,37956
#define PCI_DEVICE_ID_ADAPTEC_7850	1054,37998
#define PCI_DEVICE_ID_ADAPTEC_7855	1055,38040
#define PCI_DEVICE_ID_ADAPTEC_5800	1056,38082
#define PCI_DEVICE_ID_ADAPTEC_1480A	1057,38124
#define PCI_DEVICE_ID_ADAPTEC_7860	1058,38167
#define PCI_DEVICE_ID_ADAPTEC_7861	1059,38209
#define PCI_DEVICE_ID_ADAPTEC_7870	1060,38251
#define PCI_DEVICE_ID_ADAPTEC_7871	1061,38293
#define PCI_DEVICE_ID_ADAPTEC_7872	1062,38335
#define PCI_DEVICE_ID_ADAPTEC_7873	1063,38377
#define PCI_DEVICE_ID_ADAPTEC_7874	1064,38419
#define PCI_DEVICE_ID_ADAPTEC_7895	1065,38461
#define PCI_DEVICE_ID_ADAPTEC_7880	1066,38503
#define PCI_DEVICE_ID_ADAPTEC_7881	1067,38545
#define PCI_DEVICE_ID_ADAPTEC_7882	1068,38587
#define PCI_DEVICE_ID_ADAPTEC_7883	1069,38629
#define PCI_DEVICE_ID_ADAPTEC_7884	1070,38671
#define PCI_DEVICE_ID_ADAPTEC_1030	1071,38713
#define PCI_VENDOR_ID_ADAPTEC2	1073,38756
#define PCI_DEVICE_ID_ADAPTEC2_2940U2	1074,38795
#define PCI_DEVICE_ID_ADAPTEC2_78902	1075,38840
#define PCI_DEVICE_ID_ADAPTEC2_7890	1076,38884
#define PCI_DEVICE_ID_ADAPTEC2_3940U2	1077,38927
#define PCI_DEVICE_ID_ADAPTEC2_3950U2D	1078,38972
#define PCI_DEVICE_ID_ADAPTEC2_7896	1079,39018
#define PCI_VENDOR_ID_ATRONICS	1081,39062
#define PCI_DEVICE_ID_ATRONICS_2015	1082,39101
#define PCI_VENDOR_ID_HOLTEK	1084,39145
#define PCI_DEVICE_ID_HOLTEK_6565	1085,39182
#define PCI_VENDOR_ID_TIGERJET	1087,39224
#define PCI_DEVICE_ID_TIGERJET_300	1088,39263
#define PCI_VENDOR_ID_ARK	1090,39306
#define PCI_DEVICE_ID_ARK_STING	1091,39340
#define PCI_DEVICE_ID_ARK_STINGARK	1092,39380
#define PCI_DEVICE_ID_ARK_2000MT	1093,39422
#define PCI_DEVFN(PCI_DEVFN1103,39668
#define PCI_SLOT(PCI_SLOT1104,39740
#define PCI_FUNC(PCI_FUNC1105,39789
struct pci_dev pci_dev1116,39997
struct pci_bus pci_bus1150,41317
extern struct pci_bus	pci_root;1167,41989
extern struct pci_dev	*pci_devices;1168,42036
#define PCIBIOS_SUCCESSFUL	1173,42160
#define PCIBIOS_FUNC_NOT_SUPPORTED	1174,42193
#define PCIBIOS_BAD_VENDOR_ID	1175,42233
#define PCIBIOS_DEVICE_NOT_FOUND	1176,42269
#define PCIBIOS_BAD_REGISTER_NUMBER	1177,42307
#define PCIBIOS_SET_FAILED	1178,42348
#define PCIBIOS_BUFFER_TOO_SMALL	1179,42381
#define pci_present 1225,44327
extern inline int pcibios_present(1237,44966
#define _PCI_NOP(_PCI_NOP1239,45021
#define _PCI_NOP_ALL(_PCI_NOP_ALL1244,45296
_PCI_NOP_ALL(1247,45403
extern inline struct pci_dev *pci_find_class(1253,45575
extern inline struct pci_dev *pci_find_slot(1256,45680

include/linux/busmouse.h,1338
#define _LINUX_BUSMOUSE_H2,26
#define MOUSE_IRQ	30,1038
#define LOGITECH_BUSMOUSE 31,1059
#define MICROSOFT_BUSMOUSE 32,1130
#define	LOGIBM_BASE	36,1255
#define	MSE_DATA_PORT	37,1282
#define	MSE_SIGNATURE_PORT	38,1311
#define	MSE_CONTROL_PORT	39,1344
#define	MSE_INTERRUPT_PORT	40,1375
#define	MSE_CONFIG_PORT	41,1408
#define	LOGIBM_EXTENT	42,1439
#define	MSE_ENABLE_INTERRUPTS	44,1467
#define	MSE_DISABLE_INTERRUPTS	45,1502
#define	MSE_READ_X_LOW	47,1539
#define	MSE_READ_X_HIGH	48,1568
#define	MSE_READ_Y_LOW	49,1598
#define	MSE_READ_Y_HIGH	50,1627
#define MSE_CONFIG_BYTE	53,1711
#define MSE_DEFAULT_MODE	54,1741
#define MSE_SIGNATURE_BYTE	55,1771
#define MSE_INT_OFF(MSE_INT_OFF59,1840
#define MSE_INT_ON(MSE_INT_ON60,1909
#define	MSBM_BASE	64,2031
#define	MS_MSE_DATA_PORT	65,2057
#define	MS_MSE_SIGNATURE_PORT	66,2096
#define	MS_MSE_CONTROL_PORT	67,2140
#define	MS_MSE_CONFIG_PORT	68,2182
#define	MSBM_EXTENT	69,2216
#define	MS_MSE_ENABLE_INTERRUPTS	71,2243
#define	MS_MSE_DISABLE_INTERRUPTS	72,2281
#define	MS_MSE_READ_BUTTONS 74,2321
#define	MS_MSE_READ_X	75,2366
#define	MS_MSE_READ_Y 76,2402
#define MS_MSE_START 78,2448
#define MS_MSE_COMMAND_MODE 79,2493
#define MS_MSE_INT_OFF(MS_MSE_INT_OFF83,2579
#define MS_MSE_INT_ON(MS_MSE_INT_ON85,2714
struct mouse_status mouse_status89,2851

include/linux/minix_fs_i.h,72
#define _MINIX_FS_I2,20
struct minix_inode_info minix_inode_info7,81

include/linux/ioport.h,91
#define _LINUX_PORTIO_H11,205
#define HAVE_PORTRESERVE13,230
#define HAVE_AUTOIRQ31,935

include/linux/msdos_fs_i.h,74
#define _MSDOS_FS_I2,20
struct msdos_inode_info msdos_inode_info12,156

include/linux/serial.h,1678
#define _LINUX_SERIAL_H11,201
struct serial_struct serial_struct13,226
#define ASYNC_CLOSING_WAIT_INF	34,696
#define ASYNC_CLOSING_WAIT_NONE	35,729
#define PORT_UNKNOWN	40,816
#define PORT_8250	41,839
#define PORT_16450	42,859
#define PORT_16550	43,880
#define PORT_16550A	44,901
#define PORT_CIRRUS 45,923
#define PORT_16650	46,977
#define PORT_16650V2	47,998
#define PORT_16750	48,1021
#define PORT_STARTECH	49,1042
#define PORT_MAX	50,1094
struct serial_uart_config serial_uart_config52,1114
#define UART_CLEAR_FIFO	58,1196
#define UART_USE_FIFO	59,1226
#define UART_STARTECH	60,1254
#define ASYNC_HUP_NOTIFY 65,1354
#define ASYNC_FOURPORT 67,1455
#define ASYNC_SAK	68,1532
#define ASYNC_SPLIT_TERMIOS 69,1598
#define ASYNC_SPD_MASK	71,1676
#define ASYNC_SPD_HI	72,1706
#define ASYNC_SPD_VHI	74,1772
#define ASYNC_SPD_CUST	75,1840
#define ASYNC_SKIP_TEST	77,1905
#define ASYNC_AUTO_IRQ 78,1982
#define ASYNC_SESSION_LOCKOUT 79,2061
#define ASYNC_PGRP_LOCKOUT 80,2140
#define ASYNC_CALLOUT_NOHUP 81,2216
#define ASYNC_HARDPPS_CD	83,2292
#define ASYNC_SPD_SHI	85,2363
#define ASYNC_SPD_WARP	86,2430
#define ASYNC_LOW_LATENCY 88,2499
#define ASYNC_FLAGS	90,2569
#define ASYNC_USR_MASK	91,2629
#define ASYNC_INITIALIZED	95,2786
#define ASYNC_CALLOUT_ACTIVE	96,2857
#define ASYNC_NORMAL_ACTIVE	97,2929
#define ASYNC_BOOT_AUTOCONF	98,2998
#define ASYNC_CLOSING	99,3072
#define ASYNC_CTS_FLOW	100,3135
#define ASYNC_CHECK_CD	101,3196
#define ASYNC_SHARE_IRQ	102,3250
#define ASYNC_INTERNAL_FLAGS	104,3317
struct serial_multiport_struct serial_multiport_struct109,3453
struct serial_icounter_struct serial_icounter_struct127,3828

include/linux/kd.h,2727
#define _LINUX_KD_H2,20
#define GIO_FONT	7,125
#define PIO_FONT	8,182
#define GIO_FONTX	10,239
#define PIO_FONTX	11,308
struct consolefontdesc consolefontdesc12,377
#define PIO_FONTRESET 18,589
#define GIO_CMAP	20,649
#define PIO_CMAP	21,707
#define KIOCSOUND	23,766
#define KDMKTONE	24,832
#define KDGETLED	26,877
#define KDSETLED	27,932
#define 	LED_SCR	28,996
#define 	LED_CAP	29,1041
#define 	LED_NUM	30,1084
#define KDGKBTYPE	32,1127
#define 	KB_84	33,1176
#define 	KB_101	34,1197
#define 	KB_OTHER	35,1256
#define KDADDIO	37,1280
#define KDDELIO	38,1332
#define KDENABIO	39,1384
#define KDDISABIO	40,1440
#define KDSETMODE	42,1499
#define		KD_TEXT	43,1553
#define		KD_GRAPHICS	44,1576
#define		KD_TEXT0	45,1602
#define		KD_TEXT1	46,1640
#define KDGETMODE	47,1678
#define KDMAPDISP	49,1727
#define KDUNMAPDISP	50,1789
typedef char scrnmap_t;scrnmap_t52,1856
#define		E_TABSZ	53,1880
#define GIO_SCRNMAP	54,1902
#define PIO_SCRNMAP	55,1966
#define GIO_UNISCRNMAP 56,2034
#define PIO_UNISCRNMAP 57,2103
#define GIO_UNIMAP	59,2174
struct unipair unipair60,2246
struct unimapdesc unimapdesc64,2316
#define PIO_UNIMAP	68,2391
#define PIO_UNIMAPCLR	69,2461
struct unimapinit unimapinit70,2540
#define UNI_DIRECT_BASE 76,2735
#define UNI_DIRECT_MASK 77,2800
#define		K_RAW	79,2865
#define		K_XLATE	80,2886
#define		K_MEDIUMRAW	81,2909
#define		K_UNICODE	82,2935
#define KDGKBMODE	83,2959
#define KDSKBMODE	84,3017
#define		K_METABIT	86,3076
#define		K_ESCPREFIX	87,3100
#define KDGKBMETA	88,3126
#define KDSKBMETA	89,3185
#define		K_SCROLLLOCK	91,3245
#define		K_CAPSLOCK	92,3272
#define		K_NUMLOCK	93,3297
#define	KDGKBLED	94,3321
#define KDSKBLED	95,3378
struct kbentry kbentry97,3436
#define		K_NORMTAB	102,3532
#define		K_SHIFTTAB	103,3556
#define		K_ALTTAB	104,3581
#define		K_ALTSHIFTTAB	105,3604
#define KDGKBENT	107,3633
#define KDSKBENT	108,3699
struct kbsentry kbsentry110,3766
#define KDGKBSENT	114,3842
#define KDSKBSENT	115,3908
struct kbdiacr kbdiacr117,3975
struct kbdiacrs kbdiacrs120,4038
#define KDGKBDIACR 124,4199
#define KDSKBDIACR 125,4262
struct kbkeycode kbkeycode127,4327
#define KDGETKEYCODE	130,4382
#define KDSETKEYCODE	131,4448
#define KDSIGACCEPT	133,4516
struct hwclk_time hwclk_time135,4579
#define KDGHWCLK 145,4831
#define KDSHWCLK 146,4887
struct kbd_repeat kbd_repeat148,4945
#define KDKBDREP 153,5060
#define KDFONTOP	156,5172
struct console_font_op console_font_op158,5219
#define KD_FONT_OP_SET	166,5474
#define KD_FONT_OP_GET	167,5515
#define KD_FONT_OP_SET_DEFAULT	168,5556
#define KD_FONT_OP_COPY	169,5643
#define KD_FONT_FLAG_DONT_RECALC 171,5703
#define KD_FONT_FLAG_OLD	173,5807

include/linux/mman.h,56
#define _LINUX_MMAN_H2,22
#define MREMAP_MAYMOVE	6,68

include/linux/in.h,2623
#define _LINUX_IN_H19,695
  IPPROTO_IP 25,792
  IPPROTO_ICMP 26,841
  IPPROTO_IGMP 27,902
  IPPROTO_IPIP 28,964
  IPPROTO_TCP 29,1032
  IPPROTO_EGP 30,1088
  IPPROTO_PUP 31,1141
  IPPROTO_UDP 32,1184
  IPPROTO_IDP 33,1235
  IPPROTO_RSVP 34,1281
  IPPROTO_GRE 35,1325
  IPPROTO_IPV6	37,1387
  IPPROTO_PIM 39,1442
  IPPROTO_RAW	41,1505
  IPPROTO_MAX42,1551
struct in_addr in_addr47,1594
#define IP_TOS	51,1630
#define IP_TTL	52,1648
#define IP_HDRINCL	53,1666
#define IP_OPTIONS	54,1687
#define IP_ROUTER_ALERT	55,1708
#define IP_RECVOPTS	56,1734
#define IP_RETOPTS	57,1756
#define IP_PKTINFO	58,1777
#define IP_PKTOPTIONS	59,1798
#define IP_MTU_DISCOVER	60,1822
#define IP_RECVERR	61,1849
#define IP_RECVTTL	62,1871
#define	IP_RECVTOS	63,1893
#define IP_MTU	64,1915
#define IP_RECVRETOPTS	67,1959
#define IP_PMTUDISC_DONT	70,2023
#define IP_PMTUDISC_WANT	71,2078
#define IP_PMTUDISC_DO	72,2132
#define IP_MULTICAST_IF	74,2177
#define IP_MULTICAST_TTL 75,2206
#define IP_MULTICAST_LOOP 76,2236
#define IP_ADD_MEMBERSHIP	77,2267
#define IP_DROP_MEMBERSHIP	78,2297
#define IP_DEFAULT_MULTICAST_TTL 81,2378
#define IP_DEFAULT_MULTICAST_LOOP 82,2420
struct ip_mreq ip_mreq86,2510
struct ip_mreqnip_mreqn92,2666
struct in_pktinfoin_pktinfo99,2864
#define __SOCK_SIZE__	107,3023
struct sockaddr_in sockaddr_in108,3079
#define sin_zero	117,3413
#define	IN_CLASSA(IN_CLASSA125,3633
#define	IN_CLASSA_NET	126,3694
#define	IN_CLASSA_NSHIFT	127,3728
#define	IN_CLASSA_HOST	128,3756
#define	IN_CLASSA_MAX	129,3810
#define	IN_CLASSB(IN_CLASSB131,3838
#define	IN_CLASSB_NET	132,3908
#define	IN_CLASSB_NSHIFT	133,3942
#define	IN_CLASSB_HOST	134,3970
#define	IN_CLASSB_MAX	135,4024
#define	IN_CLASSC(IN_CLASSC137,4054
#define	IN_CLASSC_NET	138,4124
#define	IN_CLASSC_NSHIFT	139,4158
#define	IN_CLASSC_HOST	140,4185
#define	IN_CLASSD(IN_CLASSD142,4240
#define	IN_MULTICAST(IN_MULTICAST143,4310
#define IN_MULTICAST_NET	144,4348
#define	IN_EXPERIMENTAL(IN_EXPERIMENTAL146,4385
#define	IN_BADCLASS(IN_BADCLASS147,4460
#define	INADDR_ANY	150,4553
#define	INADDR_BROADCAST	153,4643
#define	INADDR_NONE	156,4744
#define	IN_LOOPBACKNET	159,4845
#define	INADDR_LOOPBACK	162,4928
#define	IN_LOOPBACK(IN_LOOPBACK163,4982
#define INADDR_UNSPEC_GROUP 166,5090
#define INADDR_ALLHOSTS_GROUP 167,5151
#define INADDR_ALLRTRS_GROUP 168,5212
#define INADDR_MAX_LOCAL_GROUP 169,5272
#define LOOPBACK(LOOPBACK177,5499
#define MULTICAST(MULTICAST178,5568
#define BADCLASS(BADCLASS179,5638
#define ZERONET(ZERONET180,5707
#define LOCAL_MCAST(LOCAL_MCAST181,5775

include/linux/ufs_fs.h,5167
#define __LINUX_UFS_FS_H24,790
#define UFS_BBLOCK 31,916
#define UFS_BBSIZE 32,937
#define UFS_SBLOCK 33,961
#define UFS_SBSIZE 34,985
#define UFS_SECTOR_SIZE 36,1010
#define UFS_SECTOR_BITS 37,1038
#define UFS_MAGIC 38,1064
#define UFS_CIGAM 39,1093
#define UFS_BSIZE	41,1147
#define UFS_MINBSIZE	42,1170
#define UFS_FSIZE	43,1196
#define UFS_MAXFRAG	44,1219
#define UFS_NDADDR 46,1264
#define UFS_NINDIR 47,1286
#define UFS_IND_BLOCK	49,1308
#define UFS_DIND_BLOCK	50,1347
#define UFS_TIND_BLOCK	51,1387
#define UFS_NDIR_FRAGMENT 53,1428
#define UFS_IND_FRAGMENT 54,1487
#define UFS_DIND_FRAGMENT 55,1548
#define UFS_TIND_FRAGMENT 56,1611
#define UFS_ROOTINO 58,1675
#define UFS_FIRST_INO 59,1697
#define UFS_USEEFT 61,1738
#define UFS_FSOK 63,1774
#define UFS_FSACTIVE 64,1807
#define UFS_FSCLEAN 65,1842
#define UFS_FSSTABLE 66,1877
#define UFS_FSOSF1 67,1912
#define UFS_FSBAD 68,1984
#define UFS_BYTESEX 72,2097
#define UFS_NATIVE_ENDIAN	75,2268
#define UFS_SWABBED_ENDIAN	76,2305
#define UFS_LITTLE_ENDIAN	79,2391
#define UFS_BIG_ENDIAN	80,2428
#define UFS_DE_MASK	83,2501
#define UFS_DE_OLD	84,2562
#define UFS_DE_44BSD	85,2593
#define UFS_UID_MASK	87,2645
#define UFS_UID_OLD	88,2707
#define UFS_UID_44BSD	89,2739
#define UFS_UID_EFT	90,2773
#define UFS_ST_MASK	92,2837
#define UFS_ST_OLD	93,2898
#define UFS_ST_44BSD	94,2929
#define UFS_ST_SUN	95,2962
#define UFS_CG_MASK	97,3022
#define UFS_CG_OLD	98,3083
#define UFS_CG_44BSD	99,3114
#define UFS_CG_SUN	100,3147
#define UFS_42INODEFMT	103,3205
#define UFS_44INODEFMT	104,3231
#define UFS_MOUNT_ONERROR	107,3277
#define UFS_MOUNT_ONERROR_PANIC	108,3315
#define UFS_MOUNT_ONERROR_LOCK	109,3359
#define UFS_MOUNT_ONERROR_UMOUNT	110,3402
#define UFS_MOUNT_ONERROR_REPAIR	111,3446
#define UFS_MOUNT_UFSTYPE	113,3491
#define UFS_MOUNT_UFSTYPE_OLD	114,3529
#define UFS_MOUNT_UFSTYPE_44BSD	115,3571
#define UFS_MOUNT_UFSTYPE_SUN	116,3615
#define UFS_MOUNT_UFSTYPE_NEXT	117,3657
#define UFS_MOUNT_UFSTYPE_OPENSTEP	118,3700
#define ufs_clear_opt(ufs_clear_opt120,3747
#define ufs_set_opt(ufs_set_opt121,3798
#define ufs_test_opt(ufs_test_opt122,3846
#define UFS_MINFREE 136,4533
#define UFS_DEFAULTOPT 137,4563
#define ufs_fsbtodb(ufs_fsbtodb143,4739
#define	ufs_dbtofsb(ufs_dbtofsb144,4795
#define	ufs_cgbase(ufs_cgbase150,4991
#define ufs_cgstart(ufs_cgstart151,5033
#define	ufs_cgsblock(ufs_cgsblock152,5118
#define	ufs_cgcmin(ufs_cgcmin153,5192
#define	ufs_cgimin(ufs_cgimin154,5263
#define	ufs_cgdmin(ufs_cgdmin155,5335
#define	ufs_inotocg(ufs_inotocg163,5597
#define	ufs_inotocgoff(ufs_inotocgoff164,5641
#define	ufs_inotofsba(ufs_inotofsba165,5687
#define	ufs_inotofsbo(ufs_inotofsbo166,5777
#define	ufs_dtog(ufs_dtog172,5948
#define	ufs_dtogd(ufs_dtogd173,5988
#define ufs_cbtocylno(ufs_cbtocylno178,6106
#define ufs_cbtorpos(ufs_cbtorpos180,6173
#define ufs_blkoff(ufs_blkoff191,6576
#define ufs_fragoff(ufs_fragoff192,6626
#define ufs_lblktosize(ufs_lblktosize193,6676
#define ufs_lblkno(ufs_lblkno194,6730
#define ufs_numfrags(ufs_numfrags195,6781
#define ufs_blkroundup(ufs_blkroundup196,6833
#define ufs_fragroundup(ufs_fragroundup197,6906
#define ufs_fragstoblks(ufs_fragstoblks198,6980
#define ufs_blkstofrags(ufs_blkstofrags199,7041
#define ufs_fragnum(ufs_fragnum200,7100
#define ufs_blknum(ufs_blknum201,7151
#define	UFS_MAXNAMLEN 203,7204
#define UFS_MAXMNTLEN 204,7230
#define UFS_MAXCSBUFS 205,7256
#define UFS_LINK_MAX 206,7281
#define UFS_DIR_PAD	212,7409
#define UFS_DIR_ROUND	213,7433
#define UFS_DIR_REC_LEN(UFS_DIR_REC_LEN214,7475
struct ufs_timeval ufs_timeval216,7566
#define DT_UNKNOWN	224,7643
#define DT_FIFO	225,7664
#define DT_CHR	226,7683
#define DT_DIR	227,7701
#define DT_BLK	228,7719
#define DT_REG	229,7737
#define DT_LNK	230,7755
#define DT_SOCK	231,7774
#define DT_WHT	232,7794
struct ufs_dir_entry ufs_dir_entry234,7817
struct ufs_csum ufs_csum247,8160
struct ufs_super_block ufs_super_block257,8435
#define UFS_OPTTIME	364,13372
#define UFS_OPTSPACE	365,13425
#define UFS_42POSTBLFMT	370,13530
#define UFS_DYNAMICPOSTBLFMT	371,13595
#define fs_cs(fs_cs376,13742
#define	CG_MAGIC	385,13993
#define ufs_cg_chkmagic(ufs_cg_chkmagic386,14019
struct	ufs_cylinder_group ufs_cylinder_group391,14129
struct ufs_inode ufs_inode425,15503
#define UFS_UF_SETTABLE 474,17039
#define UFS_UF_NODUMP 475,17076
#define UFS_UF_IMMUTABLE 476,17132
#define UFS_UF_APPEND 477,17203
#define UFS_UF_OPAQUE 478,17259
#define UFS_UF_NOUNLINK 479,17333
#define UFS_SF_SETTABLE 481,17443
#define UFS_SF_ARCHIVED 482,17480
#define UFS_SF_IMMUTABLE 483,17533
#define UFS_SF_APPEND 484,17604
#define UFS_SF_NOUNLINK 485,17660
extern struct inode_operations ufs_dir_inode_operations;502,18242
extern struct file_operations ufs_dir_operations;503,18299
extern struct inode_operations ufs_file_inode_operations;507,18487
extern struct file_operations ufs_file_operations;508,18545
extern struct super_operations ufs_super_ops;537,19852
extern struct file_system_type ufs_fs_type;538,19898
extern void ufs_warning 539,19942

include/linux/ftape.h,1893
#define _FTAPE_H2,17
#define FTAPE_VERSION 31,1067
#define KERNEL_VER(KERNEL_VER34,1167
typedef daddr_t __kernel_daddr_t;__kernel_daddr_t44,1441
#define FT_SECTOR(FT_SECTOR48,1531
#define FT_SECTOR_SIZE	49,1596
#define FT_SECTORS_PER_SEGMENT	50,1625
#define FT_ECC_SECTORS	51,1661
#define FT_SEGMENT_SIZE	52,1690
#define FT_BUFF_SIZE 53,1776
#define FTAPE_SEL_A 60,2011
#define FTAPE_SEL_B 61,2037
#define FTAPE_SEL_C 62,2063
#define FTAPE_SEL_D 63,2089
#define FTAPE_SEL_MASK 64,2115
#define FTAPE_SEL(FTAPE_SEL65,2144
#define FTAPE_NO_REWIND 66,2194
} ft_drive_error;ft_drive_error75,2395
} ft_drive_status;ft_drive_status83,2525
#define FT_RQM_DELAY 87,2564
#define FT_MILLISECOND 88,2591
#define FT_SECOND 89,2617
#define FT_FOREVER 90,2646
#define FT_USPT 94,2714
#define FT_SOFT_RETRIES 100,2931
#define FT_RETRIES_ON_ECC_ERROR 101,2994
#define FT_SOFT_RETRIES 103,3075
#define FT_RETRIES_ON_ECC_ERROR 104,3147
#define THE_FTAPE_MAINTAINER 108,3259
# define CONFIG_FT_NR_BUFFERS 114,3400
# define CONFIG_FT_FDC_THR 117,3465
# define CONFIG_FT_FDC_MAX_RATE 120,3532
# define CONFIG_FT_FDC_BASE 123,3603
# define CONFIG_FT_FDC_IRQ 126,3666
# define CONFIG_FT_FDC_DMA 129,3729
# define CONFIG_FT_PROBE_FC10 136,3864
# define CONFIG_FT_PROBE_FC10 138,3902
# define CONFIG_FT_MACH2 142,3988
# define CONFIG_FT_MACH2 144,4021
#  define CONFIG_FT_FDC_BASE 152,4175
#  define CONFIG_FT_FDC_IRQ 156,4274
#  define CONFIG_FT_FDC_DMA 160,4368
#  define CONFIG_FT_FDC_BASE 165,4526
#  define CONFIG_FT_FDC_IRQ 169,4625
#  define CONFIG_FT_FDC_DMA 173,4719
#  define CONFIG_FT_FDC_BASE 178,4867
#  define CONFIG_FT_FDC_IRQ 182,4966
#  define CONFIG_FT_FDC_DMA 186,5060
#  define CONFIG_FT_FDC_BASE 191,5211
#  define CONFIG_FT_FDC_IRQ 195,5310
#  define CONFIG_FT_FDC_DMA 199,5404
#define ABS(ABS205,5525
#define NR_ITEMS(NR_ITEMS206,5572

include/linux/pipe_fs_i.h,715
#define _LINUX_PIPE_FS_I_H2,27
struct pipe_inode_info pipe_inode_info4,55
#define PIPE_WAIT(PIPE_WAIT15,264
#define PIPE_BASE(PIPE_BASE16,313
#define PIPE_START(PIPE_START17,362
#define PIPE_LEN(PIPE_LEN18,413
#define PIPE_RD_OPENERS(PIPE_RD_OPENERS19,455
#define PIPE_WR_OPENERS(PIPE_WR_OPENERS20,516
#define PIPE_READERS(PIPE_READERS21,577
#define PIPE_WRITERS(PIPE_WRITERS22,632
#define PIPE_LOCK(PIPE_LOCK23,687
#define PIPE_SIZE(PIPE_SIZE24,736
#define PIPE_EMPTY(PIPE_EMPTY26,778
#define PIPE_FULL(PIPE_FULL27,826
#define PIPE_FREE(PIPE_FREE28,880
#define PIPE_END(PIPE_END29,934
#define PIPE_MAX_RCHUNK(PIPE_MAX_RCHUNK31,1022
#define PIPE_MAX_WCHUNK(PIPE_MAX_WCHUNK32,1084

include/linux/locks.h,270
#define _LINUX_LOCKS_H2,23
extern inline void wait_on_buffer(17,301
extern inline void lock_buffer(23,427
extern inline void unlock_buffer(29,561
extern inline void wait_on_super(42,878
extern inline void lock_super(48,981
extern inline void unlock_super(55,1098

include/linux/mtio.h,4455
#define _LINUX_MTIO_H9,182
struct	mtop mtop20,404
#define MTRESET 26,584
#define MTFSF	27,641
#define MTBSF	30,741
#define MTFSR	31,808
#define MTBSR	32,851
#define MTWEOF	33,895
#define MTREW	34,953
#define MTOFFL	35,982
#define MTNOP	36,1047
#define MTRETEN 37,1113
#define MTBSFM	38,1152
#define MTFSFM 39,1217
#define MTEOM	40,1282
#define MTERASE 44,1440
#define MTRAS1 46,1492
#define MTRAS2	47,1550
#define MTRAS3 48,1604
#define MTSETBLK 50,1655
#define MTSETDENSITY 51,1705
#define MTSEEK	52,1759
#define MTTELL	53,1814
#define MTSETDRVBUFFER 54,1866
#define MTFSS	56,1991
#define MTBSS	57,2042
#define MTWSM	58,2094
#define MTLOCK 60,2133
#define MTUNLOCK 61,2178
#define MTLOAD 62,2226
#define MTUNLOAD 63,2281
#define MTCOMPRESSION 64,2339
#define MTSETPART 65,2412
#define MTMKPART 66,2472
struct	mtget mtget70,2603
#define MT_ISUNKNOWN	92,3309
#define MT_ISQIC02	93,3336
#define MT_ISWT5150	94,3396
#define MT_ISARCHIVE_5945L2	95,3460
#define MT_ISCMSJ500	96,3532
#define MT_ISTDC3610	97,3589
#define MT_ISARCHIVE_VP60I	98,3644
#define MT_ISARCHIVE_2150L	99,3704
#define MT_ISARCHIVE_2060L	100,3762
#define MT_ISARCHIVESC499	101,3820
#define MT_ISQIC02_ALL_FEATURES	102,3890
#define MT_ISWT5099EEN24	103,3966
#define MT_ISTEAC_MT2ST	104,4035
#define MT_ISEVEREX_FT40A	105,4126
#define MT_ISDDS1	106,4185
#define MT_ISDDS2	107,4245
#define MT_ISSCSI1	108,4302
#define MT_ISSCSI2	109,4363
#define MT_ISFTAPE_UNKNOWN	114,4528
#define MT_ISFTAPE_FLAG	115,4579
struct mt_tape_info mt_tape_info117,4613
#define MT_TAPE_INFO	122,4724
struct	mtpos mtpos145,5621
struct mtconfiginfo mtconfiginfo153,5824
struct mtvolinfo mtvolinfo181,6510
#define MT_FT_RD_SINGLE 192,6957
#define MT_FT_RD_AHEAD 193,6984
#define MT_FT_WR_ASYNC 194,7011
#define MT_FT_WR_MULTI 195,7090
#define MT_FT_WR_SINGLE 196,7169
#define MT_FT_WR_DELETE 197,7248
struct mtftsegmtftseg199,7328
struct mttapesize mttapesize209,7653
#define FTFMT_SET_PARMS	220,7925
#define FTFMT_GET_PARMS	221,7977
#define FTFMT_FORMAT_TRACK	222,8029
#define FTFMT_STATUS	223,8096
#define FTFMT_VERIFY	224,8158
struct ftfmtparms ftfmtparms226,8221
struct ftfmttrack ftfmttrack235,8583
struct ftfmtstatus ftfmtstatus240,8718
struct ftfmtverify ftfmtverify244,8811
struct mtftformat mtftformat249,8952
struct mtftcmd mtftcmd259,9264
#define	MTIOCTOP	283,10246
#define	MTIOCGET	284,10312
#define	MTIOCPOS	285,10378
#define	MTIOCGETCONFIG	290,10568
#define	MTIOCSETCONFIG	291,10647
#define	MTIOCRDFTSEG 296,10850
#define	MTIOCWRFTSEG 297,10926
#define MTIOCVOLINFO	298,11004
#define MTIOCGETSIZE 299,11081
#define MTIOCFTFORMAT 300,11161
#define MTIOCFTCMD	301,11238
#define GMT_EOF(GMT_EOF309,11586
#define GMT_BOT(GMT_BOT310,11637
#define GMT_EOT(GMT_EOT311,11688
#define GMT_SM(GMT_SM312,11739
#define GMT_EOD(GMT_EOD313,11809
#define GMT_WR_PROT(GMT_WR_PROT314,11875
#define GMT_ONLINE(GMT_ONLINE316,11968
#define GMT_D_6250(GMT_D_6250317,12019
#define GMT_D_1600(GMT_D_1600318,12070
#define GMT_D_800(GMT_D_800319,12121
#define GMT_DR_OPEN(GMT_DR_OPEN322,12256
#define GMT_IM_REP_EN(GMT_IM_REP_EN324,12376
#define MT_ST_BLKSIZE_SHIFT	330,12568
#define MT_ST_BLKSIZE_MASK	331,12598
#define MT_ST_DENSITY_SHIFT	332,12634
#define MT_ST_DENSITY_MASK	333,12665
#define MT_ST_SOFTERR_SHIFT	335,12704
#define MT_ST_SOFTERR_MASK	336,12734
#define MT_ST_OPTIONS	339,12814
#define MT_ST_BOOLEANS	340,12848
#define MT_ST_SETBOOLEANS	341,12883
#define MT_ST_CLEARBOOLEANS	342,12920
#define MT_ST_WRITE_THRESHOLD	343,12959
#define MT_ST_DEF_BLKSIZE	344,13000
#define MT_ST_DEF_OPTIONS	345,13037
#define MT_ST_TIMEOUTS	346,13074
#define MT_ST_SET_TIMEOUT	347,13109
#define MT_ST_SET_LONG_TIMEOUT	348,13163
#define MT_ST_BUFFER_WRITES	350,13223
#define MT_ST_ASYNC_WRITES	351,13255
#define MT_ST_READ_AHEAD	352,13286
#define MT_ST_DEBUGGING	353,13315
#define MT_ST_TWO_FM	354,13344
#define MT_ST_FAST_MTEOM	355,13371
#define MT_ST_AUTO_LOCK	356,13401
#define MT_ST_DEF_WRITES	357,13431
#define MT_ST_CAN_BSR	358,13461
#define MT_ST_NO_BLKLIMS	359,13490
#define MT_ST_CAN_PARTITIONS 360,13521
#define MT_ST_SCSI2LOGICAL 361,13559
#define MT_ST_SYSV 362,13597
#define MT_ST_CLEAR_DEFAULT	365,13714
#define MT_ST_DEF_DENSITY	366,13750
#define MT_ST_DEF_COMPRESSION	367,13807
#define MT_ST_DEF_DRVBUFFER	368,13868
#define MT_ST_HPLOADER_OFFSET 371,14004

include/linux/nfs.h,2838
#define _LINUX_NFS_H5,56
#define NFS_PORT	9,114
#define NFS_MAXDATA	10,136
#define NFS_MAXPATHLEN	11,161
#define NFS_MAXNAMLEN	12,189
#define NFS_MAXGROUPS	13,215
#define NFS_FHSIZE	14,240
#define NFS_COOKIESIZE	15,262
#define NFS_FIFO_DEV	16,287
#define NFSMODE_FMT	17,313
#define NFSMODE_DIR	18,341
#define NFSMODE_CHR	19,369
#define NFSMODE_BLK	20,397
#define NFSMODE_REG	21,425
#define NFSMODE_LNK	22,453
#define NFSMODE_SOCK	23,481
#define NFSMODE_FIFO	24,510
enum nfs_stat nfs_stat27,542
	NFS_OK 28,558
	NFSERR_PERM 29,571
	NFSERR_NOENT 30,589
	NFSERR_IO 31,608
	NFSERR_NXIO 32,624
	NFSERR_EAGAIN 33,642
	NFSERR_ACCES 34,663
	NFSERR_EXIST 35,683
	NFSERR_XDEV 36,703
	NFSERR_NODEV 37,722
	NFSERR_NOTDIR 38,742
	NFSERR_ISDIR 39,763
	NFSERR_INVAL 40,783
	NFSERR_FBIG 41,825
	NFSERR_NOSPC 42,844
	NFSERR_ROFS 43,864
	NFSERR_OPNOTSUPP 44,883
	NFSERR_NAMETOOLONG 45,907
	NFSERR_NOTEMPTY 46,933
	NFSERR_DQUOT 47,956
	NFSERR_STALE 48,976
	NFSERR_WFLUSH 49,996
enum nfs_ftype nfs_ftype52,1020
	NFNON 53,1037
	NFREG 54,1049
	NFDIR 55,1061
	NFBLK 56,1073
	NFCHR 57,1085
	NFLNK 58,1097
	NFSOCK 59,1109
	NFBAD 60,1122
	NFFIFO 61,1134
struct nfs_fh nfs_fh64,1150
#define NFS_PROGRAM	68,1196
#define NFS_VERSION	69,1224
#define NFSPROC_NULL	70,1247
#define NFSPROC_GETATTR	71,1271
#define NFSPROC_SETATTR	72,1298
#define NFSPROC_ROOT	73,1325
#define NFSPROC_LOOKUP	74,1349
#define NFSPROC_READLINK	75,1375
#define NFSPROC_READ	76,1402
#define NFSPROC_WRITECACHE	77,1426
#define NFSPROC_WRITE	78,1455
#define NFSPROC_CREATE	79,1480
#define NFSPROC_REMOVE	80,1506
#define NFSPROC_RENAME	81,1533
#define NFSPROC_LINK	82,1560
#define NFSPROC_SYMLINK	83,1585
#define NFSPROC_MKDIR	84,1613
#define NFSPROC_RMDIR	85,1639
#define NFSPROC_READDIR	86,1665
#define NFSPROC_STATFS	87,1693
#define NFS_MNT_PROGRAM	91,1771
#define NFS_MNT_VERSION	92,1803
#define NFS_MNT_PORT	93,1830
#define NFS_MNTPROC_MNT	94,1856
#define NFS_MNTPROC_UMNT	95,1883
extern struct rpc_program	nfs_program;100,1977
extern struct rpc_stat		nfs_rpcstat;101,2016
struct nfs_time nfs_time103,2054
struct nfs_fattr nfs_fattr108,2113
struct nfs_sattr nfs_sattr125,2392
struct nfs_fsinfo nfs_fsinfo134,2523
struct nfs_writeargs nfs_writeargs142,2629
struct nfs_sattrargs nfs_sattrargs151,2761
struct nfs_diropargs nfs_diropargs156,2837
struct nfs_readargs nfs_readargs161,2907
struct nfs_createargs nfs_createargs168,3006
struct nfs_renameargs nfs_renameargs174,3104
struct nfs_linkargs nfs_linkargs181,3230
struct nfs_symlinkargs nfs_symlinkargs187,3329
struct nfs_readdirargs nfs_readdirargs194,3459
struct nfs_diropok nfs_diropok201,3568
struct nfs_readres nfs_readres206,3642
struct nfs_readlinkres nfs_readlinkres211,3716
struct nfs_readdirres nfs_readdirres218,3828

include/linux/keyboard.h,10240
#define __LINUX_KEYBOARD_H2,27
#define KG_SHIFT	4,55
#define KG_CTRL	5,74
#define KG_ALT	6,93
#define KG_ALTGR	7,111
#define KG_SHIFTL	8,130
#define KG_SHIFTR	9,150
#define KG_CTRLL	10,170
#define KG_CTRLR	11,189
#define KG_CAPSSHIFT	12,208
#define NR_SHIFT	14,232
#define NR_KEYS	16,252
#define MAX_NR_KEYMAPS	17,273
#define MAX_NR_OF_USER_KEYMAPS 20,438
extern const int NR_TYPES;23,520
extern const int max_vals[24,547
extern unsigned short *key_maps[25,576
extern unsigned short plain_map[26,625
extern struct wait_queue * keypress_wait;27,667
extern unsigned char keyboard_type;28,709
#define MAX_NR_FUNC	31,753
#define KT_LATIN	33,819
#define KT_LETTER	34,873
#define KT_FN	35,942
#define KT_SPEC	36,959
#define KT_PAD	37,978
#define KT_DEAD	38,996
#define KT_CONS	39,1015
#define KT_CUR	40,1034
#define KT_SHIFT	41,1052
#define KT_META	42,1071
#define KT_ASCII	43,1090
#define KT_LOCK	44,1109
#define KT_SLOCK	45,1129
#define K(K47,1150
#define KTYP(KTYP48,1181
#define KVAL(KVAL49,1209
#define K_F1	51,1240
#define K_F2	52,1265
#define K_F3	53,1290
#define K_F4	54,1315
#define K_F5	55,1340
#define K_F6	56,1365
#define K_F7	57,1390
#define K_F8	58,1415
#define K_F9	59,1440
#define K_F10	60,1465
#define K_F11	61,1491
#define K_F12	62,1518
#define K_F13	63,1545
#define K_F14	64,1572
#define K_F15	65,1599
#define K_F16	66,1626
#define K_F17	67,1653
#define K_F18	68,1680
#define K_F19	69,1707
#define K_F20	70,1734
#define K_FIND	71,1761
#define K_INSERT	72,1789
#define K_REMOVE	73,1818
#define K_SELECT	74,1847
#define K_PGUP	75,1876
#define K_PGDN	76,1938
#define K_MACRO	77,1999
#define K_HELP	78,2029
#define K_DO	79,2057
#define K_PAUSE	80,2083
#define K_F21	81,2113
#define K_F22	82,2140
#define K_F23	83,2167
#define K_F24	84,2194
#define K_F25	85,2221
#define K_F26	86,2248
#define K_F27	87,2275
#define K_F28	88,2302
#define K_F29	89,2329
#define K_F30	90,2356
#define K_F31	91,2383
#define K_F32	92,2410
#define K_F33	93,2437
#define K_F34	94,2464
#define K_F35	95,2491
#define K_F36	96,2518
#define K_F37	97,2545
#define K_F38	98,2572
#define K_F39	99,2599
#define K_F40	100,2626
#define K_F41	101,2653
#define K_F42	102,2680
#define K_F43	103,2707
#define K_F44	104,2734
#define K_F45	105,2761
#define K_F46	106,2788
#define K_F47	107,2815
#define K_F48	108,2842
#define K_F49	109,2869
#define K_F50	110,2896
#define K_F51	111,2923
#define K_F52	112,2950
#define K_F53	113,2977
#define K_F54	114,3004
#define K_F55	115,3031
#define K_F56	116,3058
#define K_F57	117,3085
#define K_F58	118,3112
#define K_F59	119,3139
#define K_F60	120,3166
#define K_F61	121,3193
#define K_F62	122,3220
#define K_F63	123,3247
#define K_F64	124,3274
#define K_F65	125,3301
#define K_F66	126,3328
#define K_F67	127,3355
#define K_F68	128,3382
#define K_F69	129,3409
#define K_F70	130,3436
#define K_F71	131,3463
#define K_F72	132,3490
#define K_F73	133,3517
#define K_F74	134,3544
#define K_F75	135,3571
#define K_F76	136,3598
#define K_F77	137,3625
#define K_F78	138,3652
#define K_F79	139,3679
#define K_F80	140,3706
#define K_F81	141,3733
#define K_F82	142,3760
#define K_F83	143,3787
#define K_F84	144,3814
#define K_F85	145,3841
#define K_F86	146,3868
#define K_F87	147,3895
#define K_F88	148,3922
#define K_F89	149,3949
#define K_F90	150,3976
#define K_F91	151,4003
#define K_F92	152,4031
#define K_F93	153,4059
#define K_F94	154,4087
#define K_F95	155,4115
#define K_F96	156,4143
#define K_F97	157,4171
#define K_F98	158,4199
#define K_F99	159,4227
#define K_F100	160,4255
#define K_F101	161,4284
#define K_F102	162,4313
#define K_F103	163,4342
#define K_F104	164,4371
#define K_F105	165,4400
#define K_F106	166,4429
#define K_F107	167,4458
#define K_F108	168,4487
#define K_F109	169,4516
#define K_F110	170,4545
#define K_F111	171,4574
#define K_F112	172,4603
#define K_F113	173,4632
#define K_F114	174,4661
#define K_F115	175,4690
#define K_F116	176,4719
#define K_F117	177,4748
#define K_F118	178,4777
#define K_F119	179,4806
#define K_F120	180,4835
#define K_F121	181,4864
#define K_F122	182,4893
#define K_F123	183,4922
#define K_F124	184,4951
#define K_F125	185,4980
#define K_F126	186,5009
#define K_F127	187,5038
#define K_F128	188,5067
#define K_F129	189,5096
#define K_F130	190,5125
#define K_F131	191,5154
#define K_F132	192,5183
#define K_F133	193,5212
#define K_F134	194,5241
#define K_F135	195,5270
#define K_F136	196,5299
#define K_F137	197,5328
#define K_F138	198,5357
#define K_F139	199,5386
#define K_F140	200,5415
#define K_F141	201,5444
#define K_F142	202,5473
#define K_F143	203,5502
#define K_F144	204,5531
#define K_F145	205,5560
#define K_F146	206,5589
#define K_F147	207,5618
#define K_F148	208,5647
#define K_F149	209,5676
#define K_F150	210,5705
#define K_F151	211,5734
#define K_F152	212,5763
#define K_F153	213,5792
#define K_F154	214,5821
#define K_F155	215,5850
#define K_F156	216,5879
#define K_F157	217,5908
#define K_F158	218,5937
#define K_F159	219,5966
#define K_F160	220,5995
#define K_F161	221,6024
#define K_F162	222,6053
#define K_F163	223,6082
#define K_F164	224,6111
#define K_F165	225,6140
#define K_F166	226,6169
#define K_F167	227,6198
#define K_F168	228,6227
#define K_F169	229,6256
#define K_F170	230,6285
#define K_F171	231,6314
#define K_F172	232,6343
#define K_F173	233,6372
#define K_F174	234,6401
#define K_F175	235,6430
#define K_F176	236,6459
#define K_F177	237,6488
#define K_F178	238,6517
#define K_F179	239,6546
#define K_F180	240,6575
#define K_F181	241,6604
#define K_F182	242,6633
#define K_F183	243,6662
#define K_F184	244,6691
#define K_F185	245,6720
#define K_F186	246,6749
#define K_F187	247,6778
#define K_F188	248,6807
#define K_F189	249,6836
#define K_F190	250,6865
#define K_F191	251,6894
#define K_F192	252,6923
#define K_F193	253,6952
#define K_F194	254,6981
#define K_F195	255,7010
#define K_F196	256,7039
#define K_F197	257,7068
#define K_F198	258,7097
#define K_F199	259,7126
#define K_F200	260,7155
#define K_F201	261,7184
#define K_F202	262,7213
#define K_F203	263,7242
#define K_F204	264,7271
#define K_F205	265,7300
#define K_F206	266,7329
#define K_F207	267,7358
#define K_F208	268,7387
#define K_F209	269,7416
#define K_F210	270,7445
#define K_F211	271,7474
#define K_F212	272,7503
#define K_F213	273,7532
#define K_F214	274,7561
#define K_F215	275,7590
#define K_F216	276,7619
#define K_F217	277,7648
#define K_F218	278,7677
#define K_F219	279,7706
#define K_F220	280,7735
#define K_F221	281,7764
#define K_F222	282,7793
#define K_F223	283,7822
#define K_F224	284,7851
#define K_F225	285,7880
#define K_F226	286,7909
#define K_F227	287,7938
#define K_F228	288,7967
#define K_F229	289,7996
#define K_F230	290,8025
#define K_F231	291,8054
#define K_F232	292,8083
#define K_F233	293,8112
#define K_F234	294,8141
#define K_F235	295,8170
#define K_F236	296,8199
#define K_F237	297,8228
#define K_F238	298,8257
#define K_F239	299,8286
#define K_F240	300,8315
#define K_F241	301,8344
#define K_F242	302,8373
#define K_F243	303,8402
#define K_F244	304,8431
#define K_F245	305,8460
#define K_UNDO	306,8489
#define K_HOLE	309,8520
#define K_ENTER	310,8549
#define K_SH_REGS	311,8579
#define K_SH_MEM	312,8610
#define K_SH_STAT	313,8640
#define K_BREAK	314,8671
#define K_CONS	315,8701
#define K_CAPS	316,8730
#define K_NUM	317,8759
#define K_HOLD	318,8787
#define K_SCROLLFORW	319,8816
#define K_SCROLLBACK	320,8851
#define K_BOOT	321,8886
#define K_CAPSON	322,8916
#define K_COMPOSE	323,8947
#define K_SAK	324,8979
#define K_DECRCONSOLE	325,9008
#define K_INCRCONSOLE	326,9044
#define K_SPAWNCONSOLE	327,9080
#define K_BARENUMLOCK	328,9117
#define K_ALLOCATED	330,9154
#define K_NOSUCHMAP	331,9224
#define K_P0	333,9287
#define K_P1	334,9313
#define K_P2	335,9339
#define K_P3	336,9365
#define K_P4	337,9391
#define K_P5	338,9417
#define K_P6	339,9443
#define K_P7	340,9469
#define K_P8	341,9495
#define K_P9	342,9521
#define K_PPLUS	343,9547
#define K_PMINUS	344,9596
#define K_PSTAR	345,9646
#define K_PSLASH	346,9706
#define K_PENTER	347,9756
#define K_PCOMMA	348,9806
#define K_PDOT	349,9867
#define K_PPLUSMINUS	350,9934
#define K_PPARENL	351,9993
#define K_PPARENR	352,10055
#define NR_PAD	354,10119
#define K_DGRAVE	356,10139
#define K_DACUTE	357,10169
#define K_DCIRCM	358,10199
#define K_DTILDE	359,10229
#define K_DDIERE	360,10259
#define K_DCEDIL	361,10289
#define NR_DEAD	363,10320
#define K_DOWN	365,10340
#define K_LEFT	366,10368
#define K_RIGHT	367,10396
#define K_UP	368,10425
#define K_SHIFT	370,10452
#define K_CTRL	371,10490
#define K_ALT	372,10526
#define K_ALTGR	373,10560
#define K_SHIFTL	374,10598
#define K_SHIFTR	375,10637
#define K_CTRLL	376,10676
#define K_CTRLR	377,10715
#define K_CAPSSHIFT	378,10754
#define K_ASC0	380,10800
#define K_ASC1	381,10830
#define K_ASC2	382,10860
#define K_ASC3	383,10890
#define K_ASC4	384,10920
#define K_ASC5	385,10950
#define K_ASC6	386,10980
#define K_ASC7	387,11010
#define K_ASC8	388,11040
#define K_ASC9	389,11070
#define K_HEX0	390,11100
#define K_HEX1	391,11131
#define K_HEX2	392,11162
#define K_HEX3	393,11193
#define K_HEX4	394,11224
#define K_HEX5	395,11255
#define K_HEX6	396,11286
#define K_HEX7	397,11317
#define K_HEX8	398,11348
#define K_HEX9	399,11379
#define K_HEXa	400,11410
#define K_HEXb	401,11441
#define K_HEXc	402,11472
#define K_HEXd	403,11503
#define K_HEXe	404,11534
#define K_HEXf	405,11565
#define NR_ASCII	407,11597
#define K_SHIFTLOCK	409,11618
#define K_CTRLLOCK	410,11658
#define K_ALTLOCK	411,11696
#define K_ALTGRLOCK	412,11732
#define K_SHIFTLLOCK	413,11772
#define K_SHIFTRLOCK	414,11814
#define K_CTRLLLOCK	415,11856
#define K_CTRLRLOCK	416,11896
#define K_SHIFT_SLOCK	418,11937
#define K_CTRL_SLOCK	419,11980
#define K_ALT_SLOCK	420,12021
#define K_ALTGR_SLOCK	421,12060
#define K_SHIFTL_SLOCK	422,12103
#define K_SHIFTR_SLOCK	423,12148
#define K_CTRLL_SLOCK	424,12193
#define K_CTRLR_SLOCK	425,12236
#define NR_LOCK	427,12280
#define MAX_DIACR	429,12300

include/linux/iso_fs.h,1419
#define _ISOFS_FS_H3,21
#define ISODCL(ISODCL11,167
struct iso_volume_descriptor iso_volume_descriptor13,209
#define ISO_VD_PRIMARY 21,388
#define ISO_VD_SUPPLEMENTARY 22,413
#define ISO_VD_END 23,444
#define ISO_STANDARD_ID 25,468
struct iso_primary_descriptor iso_primary_descriptor27,501
struct iso_supplementary_descriptor iso_supplementary_descriptor64,2349
#define HS_STANDARD_ID 101,4144
struct  hs_volume_descriptor hs_volume_descriptor103,4176
struct hs_primary_descriptor hs_primary_descriptor112,4408
struct iso_path_table{iso_path_table134,5362
struct iso_directory_record iso_directory_record144,5632
#define ISOFS_BLOCK_BITS 158,6152
#define ISOFS_BLOCK_SIZE 159,6180
#define ISOFS_BUFFER_SIZE(ISOFS_BUFFER_SIZE161,6211
#define ISOFS_BUFFER_BITS(ISOFS_BUFFER_BITS162,6273
#define ISOFS_ZONE_BITS(ISOFS_ZONE_BITS163,6340
#define ISOFS_SUPER_MAGIC 165,6418
extern struct inode_operations isofs_file_inode_operations;209,8271
extern struct inode_operations isofs_dir_inode_operations;210,8331
extern struct inode_operations isofs_symlink_inode_operations;211,8390
extern struct inode_operations isofs_chrdev_inode_operations;212,8453
extern struct inode_operations isofs_blkdev_inode_operations;213,8515
extern struct inode_operations isofs_fifo_inode_operations;214,8577
#define free_s 218,8719
#define malloc 219,8752
#define bread 220,8785
#define brelse 221,8816

include/linux/iso_fs_i.h,66
#define _ISO_FS_I2,18
struct iso_inode_info iso_inode_info7,75

include/linux/iso_fs_sb.h,67
#define _ISOFS_FS_SB2,21
struct isofs_sb_info isofs_sb_info7,88

include/linux/interrupt.h,580
#define _LINUX_INTERRUPT_H3,45
struct irqaction irqaction9,148
extern volatile unsigned char bh_running;18,322
extern atomic_t bh_mask_count[20,365
extern unsigned long bh_active;21,400
extern unsigned long bh_mask;22,432
extern void (*bh_base[23,462
	TIMER_BH 31,704
	CONSOLE_BH,32,719
	TQUEUE_BH,33,732
	DIGI_BH,34,744
	SERIAL_BH,35,754
	RISCOM8_BH,36,766
	SPECIALIX_BH,37,779
	ESP_BH,38,794
	NET_BH,39,803
	SCSI_BH,40,812
	IMMEDIATE_BH,41,822
	KEYBOARD_BH,42,837
	CYCLADES_BH,43,851
	CM206_BH,44,865
	JS_BH,45,876
	MACSERIAL_BH,46,884
	ISICOM_BH47,899

include/linux/nfs_fs.h,2135
#define _LINUX_NFS_FS_H10,168
# define NFS_DEBUG25,443
#define NFS_MAX_DIRCACHE	35,753
#define NFS_MAX_FILE_IO_BUFFER_SIZE	37,783
#define NFS_DEF_FILE_IO_BUFFER_SIZE	38,825
#define NFS_MAX_RPC_TIMEOUT	43,944
#define NFS_LOOKUP_CACHE_SIZE	50,1157
#define NFS_SUPER_MAGIC	55,1234
#define NFS_FH(NFS_FH57,1268
#define NFS_DSERVER(NFS_DSERVER58,1334
#define NFS_SERVER(NFS_SERVER59,1400
#define NFS_CLIENT(NFS_CLIENT60,1463
#define NFS_ADDR(NFS_ADDR61,1518
#define NFS_CONGESTED(NFS_CONGESTED62,1578
#define NFS_READTIME(NFS_READTIME64,1644
#define NFS_OLDMTIME(NFS_OLDMTIME65,1711
#define NFS_CACHEINV(NFS_CACHEINV66,1776
#define NFS_ATTRTIMEO(NFS_ATTRTIMEO71,1897
#define NFS_MINATTRTIMEO(NFS_MINATTRTIMEO72,1956
#define NFS_MAXATTRTIMEO(NFS_MAXATTRTIMEO75,2087
#define NFS_FLAGS(NFS_FLAGS79,2219
#define NFS_REVALIDATING(NFS_REVALIDATING80,2270
#define NFS_WRITEBACK(NFS_WRITEBACK81,2343
#define NFS_RPC_SWAPFLAGS	86,2459
#define NFS_CLNTF_BUFSIZE	89,2565
struct nfs_wreq nfs_wreq98,2838
#define WB_NEXT(WB_NEXT115,3454
#define NFS_WRITE_CANCELLED	120,3558
#define NFS_WRITE_UNCOMMITTED	121,3618
#define NFS_WRITE_INVALIDATE	122,3693
#define NFS_WRITE_INPROGRESS	123,3758
#define NFS_WRITE_COMPLETE	124,3821
#define WB_CANCELLED(WB_CANCELLED126,3881
#define WB_UNCOMMITTED(WB_UNCOMMITTED127,3947
#define WB_INVALIDATE(WB_INVALIDATE128,4017
#define WB_INPROGRESS(WB_INPROGRESS129,4085
#define WB_COMPLETE(WB_COMPLETE130,4153
extern struct inode_operations nfs_file_inode_operations;189,6773
extern struct inode_operations nfs_dir_inode_operations;194,6861
extern struct dentry_operations nfs_dentry_operations;195,6918
extern struct inode_operations nfs_symlink_inode_operations;203,7159
nfs_revalidate_inode(246,8176
#define NFSDBG_VFS	263,8529
#define NFSDBG_DIRCACHE	264,8556
#define NFSDBG_LOOKUPCACHE	265,8588
#define NFSDBG_PAGECACHE	266,8622
#define NFSDBG_PROC	267,8654
#define NFSDBG_XDR	268,8682
#define NFSDBG_FILE	269,8709
#define NFSDBG_ROOT	270,8737
#define NFSDBG_ALL	271,8765
#  define ifdebug(ifdebug276,8845
#  define ifdebug(ifdebug278,8906

include/linux/atalk.h,1282
#define __LINUX_ATALK_H__9,184
#define ATPORT_FIRST	11,211
#define ATPORT_RESERVED	12,234
#define ATPORT_LAST	13,262
#define ATADDR_ANYNET	14,324
#define ATADDR_ANYNODE	15,355
#define ATADDR_ANYPORT 16,386
#define ATADDR_BCAST	17,418
#define DDP_MAXSZ	18,449
#define DDP_MAXHOPS 19,471
#define SIOCATALKDIFADDR 21,532
struct at_addr at_addr23,587
struct sockaddr_at sockaddr_at29,637
struct netrange netrange37,753
struct atalk_routeatalk_route44,831
struct atalk_ifaceatalk_iface53,965
#define ATIF_PROBE	58,1091
#define ATIF_PROBE_FAIL	59,1142
struct atalk_sockatalk_sock64,1279
struct ddpehdrddpehdr78,1503
struct ddpebitsddpebits100,1930
struct ddpshdrddpshdr113,2111
struct elapaarpelapaarp127,2365
#define AARP_HW_TYPE_ETHERNET	130,2399
#define AARP_HW_TYPE_TOKENRING	131,2432
#define AARP_PA_ALEN	135,2510
#define AARP_REQUEST	137,2552
#define AARP_REPLY	138,2577
#define AARP_PROBE	139,2600
#define AARP_EXPIRY_TIME	150,2996
#define AARP_HASH_SIZE	151,3092
#define AARP_TICK_TIME	152,3145
#define AARP_RETRANSMIT_LIMIT	153,3224
#define AARP_RESOLVE_TIME	154,3306
extern struct datalink_proto *ddp_dl,156,3457
extern struct datalink_proto *ddp_dl, *aarp_dl;156,3457
extern __inline__ struct atalk_iface *atalk_find_dev(164,3625

include/linux/nfs_fs_i.h,214
#define _NFS_FS_I2,18
struct nfs_inode_info nfs_inode_info10,128
#define NFS_INO_REVALIDATE	55,1319
#define NFS_IS_SNAPSHOT	56,1379
struct nfs_lock_info nfs_lock_info61,1459
#define NFS_LCK_GRANTED	69,1539

include/linux/nfs_fs_sb.h,100
#define _NFS_FS_SB2,19
struct nfs_server nfs_server10,143
struct nfs_sb_info nfs_sb_info26,573

include/linux/nfs_mount.h,439
#define _LINUX_NFS_MOUNT_H2,27
#define NFS_MOUNT_VERSION	19,532
struct nfs_mount_data nfs_mount_data21,561
#define NFS_MOUNT_SOFT	42,1032
#define NFS_MOUNT_INTR	43,1071
#define NFS_MOUNT_SECURE	44,1110
#define NFS_MOUNT_POSIX	45,1150
#define NFS_MOUNT_NOCTO	46,1190
#define NFS_MOUNT_NOAC	47,1230
#define NFS_MOUNT_TCP	48,1269
#define NFS_MOUNT_VER3	49,1307
#define NFS_MOUNT_KERBEROS	50,1346
#define NFS_MOUNT_NONLM	51,1388

include/linux/ext2_fs.h,6140
#define _LINUX_EXT2_FS_H17,332
#define EXT2_PREALLOCATE33,605
#define EXT2_DEFAULT_PREALLOC_BLOCKS	34,630
#define EXT2FS_DATE	39,720
#define EXT2FS_VERSION	40,752
#	define ext2_debug(ext2_debug46,825
#	define ext2_debug(ext2_debug52,987
#define	EXT2_BAD_INO	58,1062
#define EXT2_ROOT_INO	59,1110
#define EXT2_ACL_IDX_INO	60,1153
#define EXT2_ACL_DATA_INO	61,1197
#define EXT2_BOOT_LOADER_INO	62,1242
#define EXT2_UNDEL_DIR_INO	63,1298
#define EXT2_GOOD_OLD_FIRST_INO	66,1416
#define EXT2_SUPER_MAGIC	71,1507
#define EXT2_LINK_MAX	76,1583
#define EXT2_MIN_BLOCK_SIZE	81,1677
#define	EXT2_MAX_BLOCK_SIZE	82,1711
#define EXT2_MIN_BLOCK_LOG_SIZE	83,1745
# define EXT2_BLOCK_SIZE(EXT2_BLOCK_SIZE85,1801
# define EXT2_BLOCK_SIZE(EXT2_BLOCK_SIZE87,1855
#define EXT2_ACLE_PER_BLOCK(EXT2_ACLE_PER_BLOCK89,1938
#define	EXT2_ADDR_PER_BLOCK(EXT2_ADDR_PER_BLOCK90,2024
# define EXT2_BLOCK_SIZE_BITS(EXT2_BLOCK_SIZE_BITS92,2112
# define EXT2_BLOCK_SIZE_BITS(EXT2_BLOCK_SIZE_BITS94,2175
#define	EXT2_ADDR_PER_BLOCK_BITS(EXT2_ADDR_PER_BLOCK_BITS97,2262
#define EXT2_INODE_SIZE(EXT2_INODE_SIZE98,2337
#define EXT2_FIRST_INO(EXT2_FIRST_INO99,2395
#define EXT2_INODE_SIZE(EXT2_INODE_SIZE101,2457
#define EXT2_FIRST_INO(EXT2_FIRST_INO104,2587
#define EXT2_MIN_FRAG_SIZE	112,2776
#define	EXT2_MAX_FRAG_SIZE	113,2809
#define EXT2_MIN_FRAG_LOG_SIZE	114,2842
# define EXT2_FRAG_SIZE(EXT2_FRAG_SIZE116,2897
# define EXT2_FRAGS_PER_BLOCK(EXT2_FRAGS_PER_BLOCK117,2954
# define EXT2_FRAG_SIZE(EXT2_FRAG_SIZE119,3028
# define EXT2_FRAGS_PER_BLOCK(EXT2_FRAGS_PER_BLOCK120,3101
struct ext2_acl_header	ext2_acl_header126,3208
struct ext2_acl_entry	ext2_acl_entry134,3364
struct ext2_group_descext2_group_desc148,3735
# define EXT2_BLOCKS_PER_GROUP(EXT2_BLOCKS_PER_GROUP164,4190
# define EXT2_DESC_PER_BLOCK(EXT2_DESC_PER_BLOCK165,4260
# define EXT2_INODES_PER_GROUP(EXT2_INODES_PER_GROUP166,4327
# define EXT2_DESC_PER_BLOCK_BITS(EXT2_DESC_PER_BLOCK_BITS167,4397
# define EXT2_BLOCKS_PER_GROUP(EXT2_BLOCKS_PER_GROUP169,4479
# define EXT2_DESC_PER_BLOCK(EXT2_DESC_PER_BLOCK170,4539
# define EXT2_INODES_PER_GROUP(EXT2_INODES_PER_GROUP171,4627
#define	EXT2_NDIR_BLOCKS	177,4743
#define	EXT2_IND_BLOCK	178,4772
#define	EXT2_DIND_BLOCK	179,4814
#define	EXT2_TIND_BLOCK	180,4861
#define	EXT2_N_BLOCKS	181,4909
#define	EXT2_SECRM_FL	186,4978
#define	EXT2_UNRM_FL	187,5035
#define	EXT2_COMPR_FL	188,5084
#define EXT2_SYNC_FL	189,5139
#define EXT2_IMMUTABLE_FL	190,5199
#define EXT2_APPEND_FL	191,5258
#define EXT2_NODUMP_FL	192,5331
#define EXT2_NOATIME_FL	193,5390
#define EXT2_DIRTY_FL	195,5493
#define EXT2_COMPRBLK_FL	196,5528
#define EXT2_NOCOMP_FL	197,5603
#define EXT2_ECOMPR_FL	198,5660
#define EXT2_BTREE_FL	200,5772
#define EXT2_RESERVED_FL	201,5830
#define EXT2_FL_USER_VISIBLE	203,5896
#define EXT2_FL_USER_MODIFIABLE	204,5962
#define	EXT2_IOC_GETFLAGS	209,6060
#define	EXT2_IOC_SETFLAGS	210,6106
#define	EXT2_IOC_GETVERSION	211,6152
#define	EXT2_IOC_SETVERSION	212,6200
struct ext2_inode ext2_inode217,6293
#define i_size_high	269,7626
#define i_reserved1	272,7703
#define i_frag	273,7749
#define i_fsize	274,7786
#define i_reserved2	275,7825
#define i_translator	279,7895
#define i_frag	280,7942
#define i_fsize	281,7979
#define i_uid_high	282,8018
#define i_gid_high	283,8061
#define i_author	284,8104
#define i_reserved1	288,8168
#define i_frag	289,8214
#define i_fsize	290,8251
#define i_reserved2	291,8290
#define	EXT2_VALID_FS	297,8373
#define	EXT2_ERROR_FS	298,8428
#define EXT2_MOUNT_CHECK_NORMAL	303,8504
#define EXT2_MOUNT_CHECK_STRICT	304,8570
#define EXT2_MOUNT_CHECK	305,8637
#define EXT2_MOUNT_GRPID	307,8723
#define EXT2_MOUNT_DEBUG	308,8798
#define EXT2_MOUNT_ERRORS_CONT	309,8861
#define EXT2_MOUNT_ERRORS_RO	310,8925
#define EXT2_MOUNT_ERRORS_PANIC	311,8992
#define EXT2_MOUNT_MINIX_DF	312,9054
#define clear_opt(clear_opt314,9121
#define set_opt(set_opt315,9171
#define test_opt(test_opt316,9219
#define EXT2_DFL_MAX_MNT_COUNT	321,9364
#define EXT2_DFL_CHECKINTERVAL	322,9421
#define EXT2_ERRORS_CONTINUE	327,9529
#define EXT2_ERRORS_RO	328,9586
#define EXT2_ERRORS_PANIC	329,9640
#define EXT2_ERRORS_DEFAULT	330,9681
struct ext2_super_block ext2_super_block335,9771
#define EXT2_SB(EXT2_SB395,12429
#define EXT2_SB(EXT2_SB400,12657
#define EXT2_OS_LINUX	406,12728
#define EXT2_OS_HURD	407,12753
#define EXT2_OS_MASIX	408,12777
#define EXT2_OS_FREEBSD	409,12802
#define EXT2_OS_LITES	410,12829
#define EXT2_GOOD_OLD_REV	415,12881
#define EXT2_DYNAMIC_REV	416,12946
#define EXT2_CURRENT_REV	418,13014
#define EXT2_MAX_SUPP_REV	419,13057
#define EXT2_GOOD_OLD_INODE_SIZE 421,13101
#define EXT2_HAS_COMPAT_FEATURE(EXT2_HAS_COMPAT_FEATURE427,13174
#define EXT2_HAS_RO_COMPAT_FEATURE(EXT2_HAS_RO_COMPAT_FEATURE429,13263
#define EXT2_HAS_INCOMPAT_FEATURE(EXT2_HAS_INCOMPAT_FEATURE431,13358
#define EXT2_FEATURE_COMPAT_DIR_PREALLOC	434,13452
#define EXT2_FEATURE_RO_COMPAT_SPARSE_SUPER	436,13501
#define EXT2_FEATURE_RO_COMPAT_LARGE_FILE	437,13552
#define EXT2_FEATURE_RO_COMPAT_BTREE_DIR	438,13601
#define EXT2_FEATURE_INCOMPAT_COMPRESSION	440,13650
#define EXT2_FEATURE_INCOMPAT_FILETYPE	441,13699
#define EXT2_FEATURE_COMPAT_SUPP	443,13747
#define EXT2_FEATURE_INCOMPAT_SUPP	444,13782
#define EXT2_FEATURE_RO_COMPAT_SUPP	445,13848
#define	EXT2_DEF_RESUID	452,14077
#define	EXT2_DEF_RESGID	453,14104
#define EXT2_NAME_LEN 458,14173
struct ext2_dir_entry ext2_dir_entry460,14200
struct ext2_dir_entry_2 ext2_dir_entry_2473,14624
#define EXT2_FT_UNKNOWN	485,14939
#define EXT2_FT_REG_FILE	486,14966
#define EXT2_FT_DIR	487,14993
#define EXT2_FT_CHRDEV	488,15016
#define EXT2_FT_BLKDEV 489,15042
#define EXT2_FT_FIFO	490,15069
#define EXT2_FT_SOCK	491,15093
#define EXT2_FT_SYMLINK	492,15117
#define EXT2_FT_MAX	494,15145
#define EXT2_DIR_PAD	501,15272
#define EXT2_DIR_ROUND 502,15298
#define EXT2_DIR_REC_LEN(EXT2_DIR_REC_LEN503,15343
# define NORET_TYPE 515,15641
# define ATTRIB_NORET 516,15669
# define NORET_AND 517,15718
extern void ext2_error 587,18414

include/linux/init.h,255
#define _LINUX_INIT_H2,22
#define __init53,1516
#define __initdata54,1531
#define __initfunc(__initfunc55,1550
#define __INIT57,1618
#define __FINIT58,1633
#define __INITDATA59,1649
#define __initlocaldata 63,1717
#define __initlocaldata65,1759

include/linux/ext2_fs_i.h,79
#define _LINUX_EXT2_FS_I17,336
struct ext2_inode_info ext2_inode_info22,421

include/linux/net.h,916
#define _LINUX_NET_H19,669
#define NPROTO	25,745
#define SYS_SOCKET	28,800
#define SYS_BIND	29,843
#define SYS_CONNECT	30,883
#define SYS_LISTEN	31,928
#define SYS_ACCEPT	32,971
#define SYS_GETSOCKNAME	33,1014
#define SYS_GETPEERNAME	34,1067
#define SYS_SOCKETPAIR	35,1120
#define SYS_SEND	36,1171
#define SYS_RECV	37,1211
#define SYS_SENDTO	38,1252
#define SYS_RECVFROM	39,1296
#define SYS_SHUTDOWN	40,1344
#define SYS_SETSOCKOPT	41,1392
#define SYS_GETSOCKOPT	42,1444
#define SYS_SENDMSG	43,1496
#define SYS_RECVMSG	44,1542
} socket_state;socket_state53,1847
#define SO_ACCEPTCON	55,1864
#define SO_WAITDATA	56,1920
#define SO_NOSPACE	57,1974
struct socketsocket61,2047
#define SOCK_INODE(SOCK_INODE78,2389
struct proto_ops proto_ops82,2445
struct net_proto_family net_proto_family111,3797
struct net_proto net_proto122,4039
extern struct net_proto_family *net_families[128,4159

include/linux/ext2_fs_sb.h,112
#define _LINUX_EXT2_FS_SB17,339
#define EXT2_MAX_GROUP_LOADED	27,545
struct ext2_sb_info ext2_sb_info32,634

include/linux/ipc.h,363
#define _LINUX_IPC_H2,21
#define IPC_PRIVATE 6,69
struct ipc_permipc_perm8,113
#define IPC_CREAT 20,320
#define IPC_EXCL 21,385
#define IPC_NOWAIT 22,440
#define IPC_DIPC 27,615
#define IPC_OWN 28,668
#define IPC_RMID 34,854
#define IPC_SET 35,899
#define IPC_STAT 36,949
#define IPC_INFO 37,999
#define IPC_UNUSED	42,1117
#define IPC_NOID	43,1150

include/linux/shm.h,449
#define _LINUX_SHM_H_2,22
struct shmid_ds shmid_ds8,96
struct shmid_kernelshmid_kernel22,674
#define SHM_R	32,980
#define SHM_W	33,1037
#define	SHM_RDONLY	36,1117
#define	SHM_RND	37,1166
#define	SHM_REMAP	38,1236
#define SHM_LOCK 41,1328
#define SHM_UNLOCK 42,1349
#define SHM_STAT 45,1397
#define SHM_INFO 46,1418
struct	shminfo shminfo48,1440
struct shm_info shm_info56,1526
#define	SHM_DEST	68,1822
#define SHM_LOCKED 69,1892

include/linux/sem.h,720
#define _LINUX_SEM_H2,21
#define SEM_UNDO 7,85
#define GETPID 10,185
#define GETVAL 11,227
#define GETALL 12,269
#define GETNCNT 13,317
#define GETZCNT 14,360
#define SETVAL 15,403
#define SETALL 16,445
#define SEM_STAT 19,514
#define SEM_INFO 20,534
struct semid_ds semid_ds23,628
struct sembuf sembuf35,1186
union semun semun42,1380
struct  seminfo seminfo50,1615
#define SEMMNI 63,1767
#define SEMMSL 64,1839
#define SEMMNS 65,1913
#define SEMOPM 66,1983
#define SEMVMX 67,2052
#define SEMUME 70,2128
#define SEMMNU 71,2202
#define SEMAEM 72,2275
#define SEMMAP 73,2338
#define SEMUSZ 74,2406
struct sem sem79,2539
struct sem_queue sem_queue85,2686
struct sem_undo sem_undo101,3378

include/linux/msg.h,466
#define _LINUX_MSG_H2,21
#define MSG_STAT 7,91
#define MSG_INFO 8,111
#define MSG_NOERROR 11,153
#define MSG_EXCEPT 12,222
struct msqid_ds msqid_ds15,354
struct msgbuf msgbuf32,1065
struct msginfo msginfo38,1217
#define MSGMNI 49,1362
#define MSGMAX 50,1438
#define MSGMNB 51,1511
#define MSGPOOL 54,1605
#define MSGTQL 55,1683
#define MSGMAP 56,1756
#define MSGSSZ 57,1829
#define __MSGSEG 58,1890
#define MSGSEG 59,1958
struct msg msg64,2075

include/linux/skbuff.h,2356
#define _LINUX_SKBUFF_H15,442
#define HAVE_ALLOC_SKB	24,592
#define HAVE_ALIGNABLE_SKB	25,646
#define SLAB_SKB 26,692
#define CHECKSUM_NONE 28,740
#define CHECKSUM_HW 29,764
#define CHECKSUM_UNNECESSARY 30,786
struct sk_buff_head sk_buff_head32,818
struct sk_buff sk_buff39,974
#define SK_WMEM_MAX	121,3457
#define SK_RMEM_MAX	122,3483
#define SK_WMEM_MAX	124,3515
#define SK_RMEM_MAX	125,3541
#define dev_kfree_skb(dev_kfree_skb152,4750
extern __inline__ atomic_t *skb_datarefp(164,5389
extern __inline__ int skb_queue_empty(169,5488
extern __inline__ void kfree_skb(174,5607
extern __inline__ void kfree_skb_fast(181,5795
extern __inline__ int skb_cloned(187,5920
extern __inline__ int skb_shared(192,6039
extern __inline__ struct sk_buff *skb_unshare(204,6385
extern __inline__ struct sk_buff *skb_peek(221,6865
extern __inline__ struct sk_buff *skb_peek_tail(229,7065
extern __inline__ __u32 skb_queue_len(241,7320
extern __inline__ void skb_queue_head_init(246,7413
extern __inline__ void __skb_queue_head(260,7746
extern spinlock_t skb_queue_lock;274,8044
extern __inline__ void skb_queue_head(276,8079
extern __inline__ void __skb_queue_tail(289,8371
extern __inline__ void skb_queue_tail(303,8669
extern __inline__ struct sk_buff *__skb_dequeue(316,8952
extern __inline__ struct sk_buff *skb_dequeue(336,9346
extern __inline__ void __skb_insert(351,9641
extern __inline__ void skb_insert(366,9957
extern __inline__ void __skb_append(379,10263
extern __inline__ void skb_append(384,10397
extern __inline__ void __skb_unlink(397,10717
extern __inline__ void skb_unlink(418,11234
extern __inline__ struct sk_buff *__skb_dequeue_tail(429,11500
extern __inline__ struct sk_buff *skb_dequeue_tail(437,11680
extern __inline__ unsigned char *skb_put(452,11982
extern __inline__ unsigned char *skb_push(466,12239
extern __inline__ char *__skb_pull(479,12473
extern __inline__ unsigned char * skb_pull(485,12593
extern __inline__ int skb_headroom(492,12746
extern __inline__ int skb_tailroom(497,12836
extern __inline__ void skb_reserve(502,12925
extern __inline__ void __skb_trim(508,13038
extern __inline__ void skb_trim(514,13161
extern __inline__ void skb_orphan(521,13287
extern __inline__ void skb_queue_purge(529,13435
extern __inline__ struct sk_buff *dev_alloc_skb(536,13585
skb_cow(547,13804

include/linux/icmp.h,1403
#define	_LINUX_ICMP_H18,634
#define ICMP_ECHOREPLY	20,657
#define ICMP_DEST_UNREACH	21,702
#define ICMP_SOURCE_QUENCH	22,760
#define ICMP_REDIRECT	23,810
#define ICMP_ECHO	24,865
#define ICMP_TIME_EXCEEDED	25,907
#define ICMP_PARAMETERPROB	26,958
#define ICMP_TIMESTAMP	27,1013
#define ICMP_TIMESTAMPREPLY	28,1065
#define ICMP_INFO_REQUEST	29,1119
#define ICMP_INFO_REPLY	30,1175
#define ICMP_ADDRESS	31,1228
#define ICMP_ADDRESSREPLY	32,1281
#define NR_ICMP_TYPES	33,1336
#define ICMP_NET_UNREACH	37,1389
#define ICMP_HOST_UNREACH	38,1443
#define ICMP_PROT_UNREACH	39,1495
#define ICMP_PORT_UNREACH	40,1551
#define ICMP_FRAG_NEEDED	41,1603
#define ICMP_SR_FAILED	42,1664
#define ICMP_NET_UNKNOWN	43,1717
#define ICMP_HOST_UNKNOWN	44,1744
#define ICMP_HOST_ISOLATED	45,1772
#define ICMP_NET_ANO	46,1801
#define ICMP_HOST_ANO	47,1825
#define ICMP_NET_UNR_TOS	48,1851
#define ICMP_HOST_UNR_TOS	49,1879
#define ICMP_PKT_FILTERED	50,1908
#define ICMP_PREC_VIOLATION	51,1959
#define ICMP_PREC_CUTOFF	52,2017
#define NR_ICMP_UNREACH	53,2070
#define ICMP_REDIR_NET	56,2169
#define ICMP_REDIR_HOST	57,2216
#define ICMP_REDIR_NETTOS	58,2264
#define ICMP_REDIR_HOSTTOS	59,2320
#define ICMP_EXC_TTL	62,2409
#define ICMP_EXC_FRAGTIME	63,2459
struct icmphdr icmphdr66,2524
struct icmp_err icmp_err85,2744
#define ICMP_FILTER	95,2849
struct icmp_filter icmp_filter97,2874

include/linux/if.h,1267
#define _LINUX_IF_H20,749
#define	IFF_UP	26,925
#define	IFF_BROADCAST	27,969
#define	IFF_DEBUG	28,1026
#define	IFF_LOOPBACK	29,1074
#define	IFF_POINTOPOINT	30,1125
#define	IFF_NOTRAILERS	31,1187
#define	IFF_RUNNING	32,1244
#define	IFF_NOARP	33,1297
#define	IFF_PROMISC	34,1344
#define	IFF_ALLMULTI	35,1398
#define IFF_MASTER	37,1462
#define IFF_SLAVE	38,1521
#define IFF_MULTICAST	40,1578
#define IFF_VOLATILE	42,1635
#define IFF_PORTSEL	44,1715
#define IFF_AUTOMEDIA	45,1777
#define IFF_DYNAMIC	46,1838
struct ifaddr ifaddr57,2210
#define	ifa_broadaddr	68,2488
#define	ifa_dstaddr	69,2556
struct ifmap ifmap83,3043
struct ifreq ifreq101,3420
#define IFHWADDRLEN	103,3436
#define	IFNAMSIZ	104,3458
#define ifr_name	126,3929
#define ifr_hwaddr	127,3987
#define	ifr_addr	128,4047
#define	ifr_dstaddr	129,4098
#define	ifr_broadaddr	130,4167
#define	ifr_netmask	131,4237
#define	ifr_flags	132,4304
#define	ifr_metric	133,4355
#define	ifr_mtu	134,4409
#define ifr_map	135,4456
#define ifr_slave	136,4509
#define	ifr_data	137,4567
#define ifr_ifindex	138,4630
#define ifr_bandwidth	139,4693
#define ifr_qlen	140,4760
#define ifr_newname	141,4818
struct ifconf ifconf150,5052
#define	ifc_buf	159,5182
#define	ifc_req	160,5238

include/linux/if_arp.h,1688
#define _LINUX_IF_ARP_H23,878
#define ARPHRD_NETROM	28,974
#define ARPHRD_ETHER 29,1031
#define	ARPHRD_EETHER	30,1079
#define	ARPHRD_AX25	31,1132
#define	ARPHRD_PRONET	32,1176
#define	ARPHRD_CHAOS	33,1226
#define	ARPHRD_IEEE802	34,1267
#define	ARPHRD_ARCNET	35,1325
#define	ARPHRD_APPLETLK	36,1365
#define ARPHRD_DLCI	37,1410
#define ARPHRD_METRICOM	38,1458
#define ARPHRD_SLIP	41,1561
#define ARPHRD_CSLIP	42,1585
#define ARPHRD_SLIP6	43,1610
#define ARPHRD_CSLIP6	44,1635
#define ARPHRD_RSRVD	45,1661
#define ARPHRD_ADAPT	46,1714
#define ARPHRD_ROSE	47,1739
#define ARPHRD_X25	48,1763
#define ARPHRD_PPP	49,1806
#define ARPHRD_HDLC	50,1829
#define ARPHRD_LAPB	51,1875
#define ARPHRD_TUNNEL	53,1915
#define ARPHRD_TUNNEL6	54,1962
#define ARPHRD_FRAD	55,2011
#define ARPHRD_SKIP	56,2082
#define ARPHRD_LOOPBACK	57,2124
#define ARPHRD_LOCALTLK 58,2176
#define ARPHRD_FDDI	59,2229
#define ARPHRD_BIF 60,2293
#define ARPHRD_SIT	61,2368
#define ARPHRD_IPDDP	62,2425
#define ARPHRD_IPGRE	63,2479
#define ARPHRD_PIMREG	64,2525
#define ARPHRD_HIPPI	65,2583
#define ARPHRD_ASH	66,2651
#define ARPHRD_ECONET	67,2699
#define ARPHRD_IRDA 68,2747
#define ARPHRD_FCPP	70,2847
#define ARPHRD_FCAL	71,2905
#define ARPHRD_FCPL	72,2965
#define ARPHRD_FCFABRIC	73,3021
#define	ARPOP_REQUEST	78,3161
#define	ARPOP_REPLY	79,3206
#define	ARPOP_RREQUEST	80,3247
#define	ARPOP_RREPLY	81,3294
struct arpreq arpreq85,3364
struct arpreq_old arpreq_old93,3617
#define ATF_COM	101,3875
#define	ATF_PERM	102,3931
#define	ATF_PUBL	103,3977
#define	ATF_USETRAILERS	104,4021
#define ATF_NETMASK 105,4080
#define ATF_DONTPUB	107,4181
struct arphdrarphdr113,4300

include/linux/if_ether.h,1207
#define _LINUX_IF_ETHER_H22,788
#define ETH_ALEN	29,938
#define ETH_HLEN	30,993
#define ETH_ZLEN	31,1045
#define ETH_DATA_LEN	32,1102
#define ETH_FRAME_LEN	33,1159
#define ETH_P_LOOP	39,1281
#define ETH_P_ECHO	40,1339
#define ETH_P_PUP	41,1394
#define ETH_P_IP	42,1444
#define ETH_P_X25	43,1500
#define ETH_P_ARP	44,1545
#define	ETH_P_BPQ	45,1603
#define ETH_P_DEC 46,1699
#define ETH_P_DNA_DL 47,1774
#define ETH_P_DNA_RC 48,1849
#define ETH_P_DNA_RT 49,1924
#define ETH_P_LAT 50,1999
#define ETH_P_DIAG 51,2074
#define ETH_P_CUST 52,2149
#define ETH_P_SCA 53,2224
#define ETH_P_RARP 54,2299
#define ETH_P_ATALK	55,2361
#define ETH_P_AARP	56,2410
#define ETH_P_IPX	57,2459
#define ETH_P_IPV6	58,2506
#define ETH_P_802_3	64,2615
#define ETH_P_AX25	65,2678
#define ETH_P_ALL	66,2740
#define ETH_P_802_2	67,2801
#define ETH_P_SNAP	68,2850
#define ETH_P_DDCMP 69,2898
#define ETH_P_WAN_PPP 70,2973
#define ETH_P_PPP_MP 71,3048
#define ETH_P_LOCALTALK 72,3123
#define ETH_P_PPPTALK	73,3184
#define ETH_P_TR_802_2	74,3249
#define ETH_P_MOBITEX	75,3301
#define ETH_P_CONTROL	76,3360
#define ETH_P_IRDA	77,3425
struct ethhdr ethhdr83,3516
#define enet_statistics 96,3831

include/linux/ip.h,1719
#define _LINUX_IP_H18,629
#define IPTOS_TOS_MASK	23,706
#define IPTOS_TOS(IPTOS_TOS24,735
#define	IPTOS_LOWDELAY	25,782
#define	IPTOS_THROUGHPUT	26,811
#define	IPTOS_RELIABILITY	27,841
#define	IPTOS_MINCOST	28,872
#define IPTOS_PREC_MASK	30,901
#define IPTOS_PREC(IPTOS_PREC31,931
#define IPTOS_PREC_NETCONTROL 32,980
#define IPTOS_PREC_INTERNETCONTROL 33,1025
#define IPTOS_PREC_CRITIC_ECP 34,1070
#define IPTOS_PREC_FLASHOVERRIDE 35,1115
#define IPTOS_PREC_FLASH 36,1160
#define IPTOS_PREC_IMMEDIATE 37,1205
#define IPTOS_PREC_PRIORITY 38,1250
#define IPTOS_PREC_ROUTINE 39,1295
#define IPOPT_COPY	43,1359
#define IPOPT_CLASS_MASK	44,1384
#define IPOPT_NUMBER_MASK	45,1414
#define	IPOPT_COPIED(IPOPT_COPIED47,1446
#define	IPOPT_CLASS(IPOPT_CLASS48,1488
#define	IPOPT_NUMBER(IPOPT_NUMBER49,1535
#define	IPOPT_CONTROL	51,1585
#define	IPOPT_RESERVED1	52,1613
#define	IPOPT_MEASUREMENT	53,1643
#define	IPOPT_RESERVED2	54,1674
#define IPOPT_END	56,1705
#define IPOPT_NOOP	57,1742
#define IPOPT_SEC	58,1780
#define IPOPT_LSRR	59,1828
#define IPOPT_TIMESTAMP	60,1877
#define IPOPT_RR	61,1924
#define IPOPT_SID	62,1960
#define IPOPT_SSRR	63,2008
#define IPOPT_RA	64,2057
#define IPVERSION	66,2105
#define MAXTTL	67,2125
#define IPDEFTTL	68,2145
#define IPOPT_OPTVAL 78,2439
#define IPOPT_OLEN 79,2462
#define IPOPT_OFFSET 80,2485
#define IPOPT_MINOFF 81,2508
#define MAX_IPOPTLEN 82,2531
#define IPOPT_NOP 83,2555
#define IPOPT_EOL 84,2584
#define IPOPT_TS 85,2612
#define	IPOPT_TS_TSONLY	87,2647
#define	IPOPT_TS_TSANDADDR	88,2697
#define	IPOPT_TS_PRESPEC	89,2758
struct ip_options ip_options91,2816
#define optlength(optlength112,3648
struct iphdr iphdr115,3721

include/linux/poll.h,575
#define _LINUX_POLL_H2,22
struct poll_table_entry poll_table_entry14,186
typedef struct poll_table_struct poll_table_struct20,298
} poll_table;poll_table24,419
#define __MAX_POLL_TABLE_ENTRIES 26,434
extern inline void poll_wait(30,634
#define KFDS_64BLOCK 49,1321
#define KFDS_NR 50,1366
typedef unsigned long kernel_fd_set[kernel_fd_set51,1436
} fd_set_bits;fd_set_bits60,1628
#define FDS_BITPERLONG	65,1688
#define FDS_LONGS(FDS_LONGS66,1728
#define FDS_BYTES(FDS_BYTES67,1791
int get_fd_set(76,2048
void set_fd_set(91,2360
void zero_fd_set(98,2510

include/linux/route.h,386
#define _LINUX_ROUTE_H24,831
struct rtentry rtentry30,950
#define rt_mss	44,1419
#define	RTF_UP	51,1585
#define	RTF_GATEWAY	52,1632
#define	RTF_HOST	53,1691
#define RTF_REINSTATE	54,1749
#define	RTF_DYNAMIC	55,1813
#define	RTF_MODIFIED	56,1874
#define RTF_MTU	57,1937
#define RTF_MSS	58,1996
#define RTF_WINDOW	59,2047
#define RTF_IRTT	60,2106
#define RTF_REJECT	61,2161

include/linux/sockios.h,1624
#define _LINUX_SOCKIOS_H19,699
#define SIOCADDRT	24,778
#define SIOCDELRT	25,834
#define SIOCRTMSG	26,893
#define SIOCGIFNAME	29,986
#define SIOCSIFLINK	30,1036
#define SIOCGIFCONF	31,1089
#define SIOCGIFFLAGS	32,1139
#define SIOCSIFFLAGS	33,1186
#define SIOCGIFADDR	34,1233
#define SIOCSIFADDR	35,1283
#define SIOCGIFDSTADDR	36,1333
#define SIOCSIFDSTADDR	37,1392
#define SIOCGIFBRDADDR	38,1451
#define SIOCSIFBRDADDR	39,1513
#define SIOCGIFNETMASK	40,1575
#define SIOCSIFNETMASK	41,1633
#define SIOCGIFMETRIC	42,1691
#define SIOCSIFMETRIC	43,1740
#define SIOCGIFMEM	44,1789
#define SIOCSIFMEM	45,1847
#define SIOCGIFMTU	46,1905
#define SIOCSIFMTU	47,1953
#define SIOCSIFNAME	48,2001
#define	SIOCSIFHWADDR	49,2054
#define SIOCGIFENCAP	50,2112
#define SIOCSIFENCAP	51,2176
#define SIOCGIFHWADDR	52,2206
#define SIOCGIFSLAVE	53,2264
#define SIOCSIFSLAVE	54,2322
#define SIOCADDMULTI	55,2350
#define SIOCDELMULTI	56,2409
#define SIOCGIFINDEX	57,2437
#define SIOGIFINDEX	58,2497
#define SIOCSIFPFLAGS	59,2563
#define SIOCGIFPFLAGS	60,2626
#define SIOCDIFADDR	61,2655
#define	SIOCSIFHWBROADCAST	62,2708
#define SIOCGIFCOUNT	63,2776
#define SIOCGIFBR	65,2834
#define SIOCSIFBR	66,2884
#define SIOCGIFTXQLEN	68,2939
#define SIOCSIFTXQLEN	69,2999
#define SIOCDARP	74,3154
#define SIOCGARP	75,3208
#define SIOCSARP	76,3260
#define SIOCDRARP	79,3345
#define SIOCGRARP	80,3401
#define SIOCSRARP	81,3455
#define SIOCGIFMAP	85,3544
#define SIOCSIFMAP	86,3599
#define SIOCADDDLCI	90,3687
#define SIOCDELDLCI	91,3744
#define SIOCDEVPRIVATE	102,4106
#define SIOCPROTOPRIVATE 108,4205

include/linux/tcp.h,690
#define _LINUX_TCP_H18,631
struct tcphdr tcphdr23,706
  TCP_ESTABLISHED 58,1149
  TCP_SYN_SENT,59,1172
  TCP_SYN_RECV,60,1188
  TCP_FIN_WAIT1,61,1204
  TCP_FIN_WAIT2,62,1221
  TCP_TIME_WAIT,63,1238
  TCP_CLOSE,64,1255
  TCP_CLOSE_WAIT,65,1268
  TCP_LAST_ACK,66,1286
  TCP_LISTEN,67,1302
  TCP_CLOSING,68,1316
  TCP_MAX_STATES 70,1357
#define TCP_STATE_MASK	73,1402
#define TCP_ACTION_FIN	74,1429
  TCPF_ESTABLISHED 77,1469
  TCPF_SYN_SENT 78,1500
  TCPF_SYN_RECV 79,1529
  TCPF_FIN_WAIT1 80,1558
  TCPF_FIN_WAIT2 81,1587
  TCPF_TIME_WAIT 82,1616
  TCPF_CLOSE 83,1645
  TCPF_CLOSE_WAIT 84,1674
  TCPF_LAST_ACK 85,1704
  TCPF_LISTEN 86,1733
  TCPF_CLOSING 87,1763

include/linux/udp.h,57
#define _LINUX_UDP_H18,631
struct udphdr udphdr21,654

include/linux/delay.h,161
#define _LINUX_DELAY_H2,23
extern unsigned long loops_per_sec;10,161
#define MAX_UDELAY_MS	25,738
#define mdelay(mdelay29,784
#define mdelay(mdelay32,868

include/linux/tpqic02.h,11744
#define _LINUX_TPQIC02_H11,271
#define WANGTEK	35,1032
#define EVEREX	36,1093
#define EVEREX_811V	37,1166
#define EVEREX_831V	38,1228
#define ARCHIVE	39,1255
#define ARCHIVE_SC400	40,1274
#define ARCHIVE_SC402	41,1353
#define ARCHIVE_SC499	42,1425
#define MOUNTAIN	44,1505
#define EMERALD	45,1566
#define QIC02_TAPE_PORT_RANGE 49,1625
#define QIC02_TAPE_DRIVE	85,2903
#define QIC02_TAPE_IFC	95,3334
#define QIC02_TAPE_PORT 99,3470
#define QIC02_TAPE_IRQ	100,3531
#define QIC02_TAPE_DMA	101,3600
#define TP_HAVE_DENS	124,4432
#define TP_HAVE_BSF	125,4455
#define TP_HAVE_FSR	126,4488
#define TP_HAVE_BSR	127,4521
#define TP_HAVE_EOD	128,4554
#define TP_HAVE_SEEK	129,4599
#define TP_HAVE_TELL	130,4622
#define TP_HAVE_RAS1	131,4645
#define TP_HAVE_RAS2	132,4668
#define TP_HAVE_DENS	135,4775
#define TP_HAVE_BSF	136,4841
#define TP_HAVE_FSR	137,4863
#define TP_HAVE_BSR	138,4919
#define TP_HAVE_EOD	139,4976
#define TP_HAVE_SEEK	140,5037
#define TP_HAVE_TELL	141,5060
#define TP_HAVE_RAS1	142,5083
#define TP_HAVE_RAS2	143,5131
#define TP_HAVE_DENS	147,5325
#define TP_HAVE_BSF	148,5402
#define TP_HAVE_FSR	149,5424
#define TP_HAVE_BSR	150,5480
#define TP_HAVE_EOD	151,5537
#define TP_HAVE_TELL	152,5598
#define TP_HAVE_SEEK	153,5658
#define TP_HAVE_RAS1	154,5705
#define TP_HAVE_RAS2	155,5753
#define TP_HAVE_DENS	160,5939
#define TP_HAVE_BSF	161,6000
#define TP_HAVE_FSR	162,6022
#define TP_HAVE_BSR	163,6078
#define TP_HAVE_EOD	164,6135
#define TP_HAVE_TELL	165,6196
#define TP_HAVE_SEEK	166,6256
#define TP_HAVE_RAS1	167,6303
#define TP_HAVE_RAS2	168,6351
#define TP_HAVE_DENS	173,6533
#define TP_HAVE_BSF	174,6597
#define TP_HAVE_FSR	175,6619
#define TP_HAVE_BSR	176,6675
#define TP_HAVE_EOD	177,6732
#define TP_HAVE_SEEK	178,6793
#define TP_HAVE_TELL	179,6840
#define TP_HAVE_RAS1	180,6900
#define TP_HAVE_RAS2	181,6948
#define TP_HAVE_DENS	185,7101
#define TP_HAVE_BSF	186,7149
#define TP_HAVE_FSR	187,7207
#define TP_HAVE_BSR	188,7263
#define TP_HAVE_EOD	189,7320
#define TP_HAVE_SEEK	190,7381
#define TP_HAVE_TELL	191,7432
#define TP_HAVE_RAS1	192,7488
#define TP_HAVE_RAS2	193,7536
#define WT_QIC02_STAT_PORT	210,8012
#define WT_QIC02_CTL_PORT	211,8057
#define WT_QIC02_CMD_PORT	212,8101
#define WT_QIC02_DATA_PORT	213,8147
#define WT_QIC02_STAT_POLARITY	216,8236
#define WT_QIC02_STAT_READY	217,8269
#define WT_QIC02_STAT_EXCEPTION	218,8302
#define WT_QIC02_STAT_MASK	219,8339
#define WT_QIC02_STAT_RESETMASK	221,8413
#define WT_QIC02_STAT_RESETVAL	222,8450
#define WT_QIC02_CTL_RESET	225,8583
#define WT_QIC02_CTL_REQUEST	226,8615
#define WT_CTL_ONLINE	227,8649
#define WT_CTL_CMDOFF	228,8677
#define WT_CTL_DMA3	230,8707
#define WT_CTL_DMA1	231,8760
#define EMR_QIC02_STAT_PORT	236,8932
#define EMR_QIC02_CTL_PORT	237,8978
#define EMR_QIC02_CMD_PORT	238,9023
#define EMR_QIC02_DATA_PORT	239,9070
#define EMR_QIC02_STAT_POLARITY	242,9161
#define EMR_QIC02_STAT_READY	243,9196
#define EMR_QIC02_STAT_EXCEPTION	244,9231
#define EMR_QIC02_STAT_MASK	245,9269
#define EMR_QIC02_STAT_RESETMASK	247,9346
#define EMR_QIC02_STAT_RESETVAL	248,9384
#define EMR_QIC02_CTL_RESET	251,9520
#define EMR_QIC02_CTL_REQUEST	252,9553
#define EMR_CTL_ONLINE	253,9588
#define EMR_CTL_CMDOFF	254,9617
#define EMR_CTL_DMA3	256,9648
#define EMR_CTL_DMA1	257,9702
#define AR_QIC02_STAT_PORT	262,9812
#define AR_QIC02_CTL_PORT	263,9859
#define AR_QIC02_CMD_PORT	264,9905
#define AR_QIC02_DATA_PORT	265,9949
#define AR_START_DMA_PORT	267,9995
#define AR_RESET_DMA_PORT	268,10041
#define AR_QIC02_STAT_POLARITY	271,10109
#define AR_STAT_IRQF	272,10142
#define AR_QIC02_STAT_READY	273,10211
#define AR_QIC02_STAT_EXCEPTION	274,10261
#define AR_QIC02_STAT_MASK	275,10315
#define AR_STAT_DMADONE	276,10388
#define AR_STAT_DIRC	277,10446
#define AR_QIC02_STAT_RESETMASK	279,10503
#define AR_QIC02_STAT_RESETVAL	280,10568
#define AR_QIC02_CTL_RESET	283,10709
#define AR_QIC02_CTL_REQUEST	284,10759
#define AR_CTL_IEN	285,10821
#define AR_CTL_DNIEN	286,10869
#define MTN_QIC02_STAT_PORT	294,11158
#define MTN_QIC02_CTL_PORT	295,11206
#define MTN_QIC02_CMD_PORT	296,11253
#define MTN_QIC02_DATA_PORT	297,11298
#define MTN_W_SELECT_DMA_PORT	299,11345
#define MTN_R_DESELECT_DMA_PORT	300,11395
#define MTN_W_DMA_WRITE_PORT	301,11447
#define MTN_QIC02_STAT_POLARITY	304,11518
#define MTN_QIC02_STAT_READY	305,11553
#define MTN_QIC02_STAT_EXCEPTION 306,11605
#define MTN_QIC02_STAT_MASK	307,11660
#define MTN_STAT_DMADONE	308,11737
#define MTN_QIC02_STAT_RESETMASK 310,11797
#define MTN_QIC02_STAT_RESETVAL	311,11863
#define MTN_QIC02_CTL_RESET_NOT	314,11993
#define MTN_QIC02_CTL_RESET	315,12061
#define MTN_QIC02_CTL_ONLINE	317,12139
#define MTN_QIC02_CTL_REQUEST	318,12199
#define MTN_QIC02_CTL_IRQ_DRIVER 319,12263
#define MTN_QIC02_CTL_DMA_DRIVER 320,12334
#define MTN_CTL_EXC_IEN	321,12405
#define MTN_CTL_RDY_IEN	322,12469
#define MTN_CTL_DNIEN	323,12529
#define MTN_CTL_ONLINE	325,12587
# define QIC02_TAPE_DEBUG	330,12723
#  define QIC02_STAT_POLARITY	333,12801
#  define QIC02_STAT_PORT	334,12854
#  define QIC02_CTL_PORT	335,12899
#  define QIC02_CMD_PORT	336,12942
#  define QIC02_DATA_PORT	337,12985
#  define QIC02_STAT_READY	339,13031
#  define QIC02_STAT_EXCEPTION	340,13078
#  define QIC02_STAT_MASK	341,13133
#  define QIC02_STAT_RESETMASK	342,13178
#  define QIC02_STAT_RESETVAL	343,13233
#  define QIC02_CTL_RESET	345,13287
#  define QIC02_CTL_REQUEST	346,13332
#    define WT_CTL_DMA	350,13438
#    define WT_CTL_DMA	352,13483
#    define WT_CTL_DMA	355,13557
#  define QIC02_STAT_POLARITY	361,13698
#  define QIC02_STAT_PORT	362,13752
#  define QIC02_CTL_PORT	363,13798
#  define QIC02_CMD_PORT	364,13842
#  define QIC02_DATA_PORT	365,13886
#  define QIC02_STAT_READY	367,13933
#  define QIC02_STAT_EXCEPTION	368,13981
#  define QIC02_STAT_MASK	369,14037
#  define QIC02_STAT_RESETMASK	370,14083
#  define QIC02_STAT_RESETVAL	371,14139
#  define QIC02_CTL_RESET	373,14194
#  define QIC02_CTL_REQUEST	374,14240
#    define EMR_CTL_DMA	378,14347
#    define EMR_CTL_DMA	380,14394
#    define EMR_CTL_DMA	383,14470
#  define QIC02_STAT_POLARITY	389,14613
#  define QIC02_STAT_PORT	390,14666
#  define QIC02_CTL_PORT	391,14711
#  define QIC02_CMD_PORT	392,14754
#  define QIC02_DATA_PORT	393,14797
#  define QIC02_STAT_READY	395,14843
#  define QIC02_STAT_EXCEPTION	396,14890
#  define QIC02_STAT_MASK	397,14945
#  define QIC02_STAT_RESETMASK	398,14990
#  define QIC02_STAT_RESETVAL	399,15045
#  define QIC02_CTL_RESET	401,15099
#  define QIC02_CTL_REQUEST	402,15144
#  define QIC02_STAT_POLARITY	409,15369
#  define QIC02_STAT_PORT	410,15423
#  define QIC02_CTL_PORT	411,15469
#  define QIC02_CMD_PORT	412,15513
#  define QIC02_DATA_PORT	413,15557
#  define QIC02_STAT_READY	415,15604
#  define QIC02_STAT_EXCEPTION	416,15652
#  define QIC02_STAT_MASK	417,15708
#  define QIC02_STAT_RESETMASK	418,15754
#  define QIC02_STAT_RESETVAL	419,15810
#  define QIC02_CTL_RESET	421,15865
#  define QIC02_CTL_REQUEST	422,15911
#  define WT_CTL_DMA	437,16341
# define QIC02_TAPE_DRIVE	450,16637
# define QIC02_TAPE_IFC	451,16692
# define QIC02_TAPE_IRQ	452,16743
# define QIC02_TAPE_DMA	453,16795
# define QIC02_TAPE_PORT	454,16847
# define WT_CTL_DMA	455,16898
# define QIC02_TAPE_DEBUG	456,16953
# define QIC02_STAT_PORT	458,17007
# define QIC02_CTL_PORT 459,17059
# define QIC02_CMD_PORT 460,17110
# define QIC02_DATA_PORT 461,17161
# define QIC02_STAT_POLARITY	463,17215
# define QIC02_STAT_READY	464,17275
# define QIC02_STAT_EXCEPTION	465,17329
# define QIC02_STAT_MASK	466,17391
# define QIC02_STAT_RESETMASK	468,17444
# define QIC02_STAT_RESETVAL	469,17506
# define QIC02_CTL_RESET	471,17567
# define QIC02_CTL_REQUEST	472,17619
# define TP_HAVE_DENS	474,17676
# define TP_HAVE_BSF	475,17730
# define TP_HAVE_FSR	476,17782
# define TP_HAVE_BSR	477,17834
# define TP_HAVE_EOD	478,17886
# define TP_HAVE_SEEK	479,17938
# define TP_HAVE_TELL	480,17992
# define TP_HAVE_RAS1	481,18046
# define TP_HAVE_RAS2	482,18100
#define AR_QCMDV_TELL_BLK	489,18251
#define AR_QCMDV_SEEK_BLK	490,18315
#define AR_SEEK_BUF_SIZE	491,18375
#define QCMD_SEL_1	500,18538
#define QCMD_SEL_2	501,18584
#define QCMD_SEL_3	502,18630
#define QCMD_SEL_4	503,18676
#define	QCMD_REWIND	504,18722
#define QCMD_ERASE	505,18766
#define QCMD_RETEN	506,18808
#define	QCMD_WRT_DATA	507,18854
#define	QCMD_WRT_FM	508,18899
#define	QCMD_RD_DATA	509,18947
#define	QCMD_RD_FM	510,18990
#define	QCMD_RD_STAT	511,19056
#define QCMD_DENS_11	515,19207
#define QCMD_DENS_24	516,19247
#define QCMD_DENS_120	517,19301
#define QCMD_DENS_150	518,19359
#define QCMD_DENS_300	519,19417
#define QCMD_DENS_600	520,19468
#define	QCMD_WRTNU_DATA	523,19565
#define QCMD_SPACE_FWD	524,19642
#define QCMD_SPACE_BCK	525,19693
#define QCMD_RD_FM_BCK	526,19774
#define QCMD_SEEK_EOD	527,19835
#define	QCMD_RD_STAT_X1	528,19881
#define	QCMD_RD_STAT_X2	529,19940
#define	QCMD_RD_STAT_X3	530,19999
#define QCMD_SELF_TST1	531,20058
#define QCMD_SELF_TST2	532,20126
#define QFA_ENABLE	547,20848
#define QFA_DATA	548,20911
#define QFA_DIR	549,20962
#define QFA_RD_POS	550,21018
#define QFA_SEEK_EOD	551,21076
#define QFA_SEEK_BLK	552,21143
#define TPQD_SENSE_TEXT	560,21247
#define TPQD_SENSE_CNTS 561,21278
#define TPQD_REWIND	562,21309
#define TPQD_TERM_CYCLE	563,21336
#define TPQD_IOCTLS	564,21367
#define TPQD_DMAX	565,21394
#define TPQD_BLKSZ	566,21419
#define TPQD_MISC	567,21445
#define TPQD_DEBUG	569,21471
#define TPQD_DIAGS	571,21498
#define TPQD_ALWAYS	573,21525
#define TPQD_DEFAULT_FLAGS	575,21553
#define TPQDBG(TPQDBG578,21589
#define	TP_REWCLOSE(TP_REWCLOSE590,22017
#define	TP_DENS(TP_DENS592,22145
#define TP_UNIT(TP_UNIT593,22219
#define TP_DIAGS(TP_DIAGS596,22327
struct tpstatus tpstatus599,22431
#define TPSTATSIZE	604,22702
#define	TP_POR	608,22809
#define	TP_EOR	609,22864
#define	TP_PAR	610,22927
#define	TP_BOM	611,22979
#define	TP_MBD	612,23026
#define	TP_NDT	613,23079
#define	TP_ILL	614,23125
#define	TP_ST1	615,23170
#define	TP_FIL	616,23218
#define	TP_BNL	617,23264
#define	TP_UDA	618,23313
#define	TP_EOM	619,23365
#define	TP_WRP	620,23405
#define	TP_USL	621,23458
#define	TP_CNI	622,23502
#define	TP_ST0	623,23552
#define REPORT_ERR0	625,23599
#define REPORT_ERR1	626,23670
#define EXC_UNKNOWN	630,23746
#define EXC_NDRV	631,23805
#define EXC_NCART	632,23839
#define EXC_WP	633,23878
#define EXC_EOM	634,23918
#define EXC_RWA	635,23947
#define EXC_XBAD	636,23989
#define EXC_XFILLER	637,24047
#define EXC_NDT	638,24111
#define EXC_NDTEOM	639,24156
#define EXC_NDTBOM	640,24209
#define EXC_FM	641,24263
#define EXC_ILL	642,24304
#define EXC_POR	643,24346
#define EXC_MARGINAL	644,24387
#define EXC_EOR	645,24441
#define EXC_BOM	646,24517
#define TAPE_NOTIFY_TIMEOUT	649,24565
#define TE_OK	652,24639
#define TE_EX	653,24681
#define TE_ERR	654,24723
#define TE_NS	655,24758
#define TE_TIM	656,24799
#define TE_DEAD	657,24833
#define TE_END	658,24885
#define TIM_S	661,24977
#define TIM_M	662,25029
#define TIM_R	663,25080
#define TIM_F	664,25135
#define TIMERON(TIMERON666,25213
#define TIMEROFF	668,25330
#define TIMERCONT	669,25386
typedef char flag;flag672,25444
#define NO	673,25463
#define YES	674,25495
# define TPQDEB(TPQDEB678,25548
# define TPQPUTS(TPQPUTS679,25569
# define TPQDEB(TPQDEB681,25606
# define TPQPUTS(TPQPUTS682,25625
#define NR_BLK_BUF	691,25909
#define TAPE_BLKSIZE	692,25959
#define TPQBUF_SIZE	693,26026
#define BLOCKS_BEYOND_EW	696,26099
#define BOGUS_IRQ	697,26170
struct qic02_ccb qic02_ccb704,26368

include/linux/dmascc.h,121
#define SIOCGSCCPARAM 23,878
#define SIOCSSCCPARAM 24,915
#define TMR_0_HZ 27,984
struct scc_param scc_param30,1043

include/linux/blkdev.h,893
#define _LINUX_BLKDEV_H2,24
struct request request15,367
#define RQ_INACTIVE	17,456
#define RQ_ACTIVE	18,482
#define RQ_SCSI_BUSY	19,503
#define RQ_SCSI_DONE	20,532
#define RQ_SCSI_DISCONNECTING	21,561
typedef void (request_fn_proc)request_fn_proc36,869
typedef struct request request37,908
struct blk_dev_struct blk_dev_struct39,962
struct sec_size sec_size51,1184
extern struct sec_size * blk_sec[56,1255
extern struct blk_dev_struct blk_dev[57,1301
extern struct wait_queue * wait_for_request;58,1351
extern int * blk_size[68,1826
extern int * blksize_size[70,1862
extern int * hardsect_size[72,1902
extern int * max_readahead[74,1943
extern int * max_sectors[76,1984
#define MAX_SECTORS 78,2023
#define PageAlignSize(PageAlignSize80,2060
#define MAX_READAHEAD 82,2155
#define MIN_READAHEAD 83,2199
#define MAX_READAHEAD 85,2271
#define MIN_READAHEAD 86,2316

include/linux/cdk.h,5138
#define	_CDK_H26,1067
#define	CDK_SIGADDR	44,1703
#define	CDK_FEATADDR	45,1729
#define	CDK_CDKADDR	46,1756
#define	CDK_RDYADDR	47,1782
#define	CDK_ALIVEMARKER	49,1809
typedef struct cdkecpsig cdkecpsig57,2084
} cdkecpsig_t;cdkecpsig_t62,2209
#define	ECP_MAGIC	64,2225
typedef struct cdkonbsig cdkonbsig72,2512
} cdkonbsig_t;cdkonbsig_t88,2899
#define	ONB_MAGIC0	90,2915
#define	ONB_MAGIC1	91,2941
#define	ONB_MAGIC2	92,2967
#define	ONB_MAGIC3	93,2993
typedef struct cdkfeature cdkfeature100,3239
} cdkfeature_t;cdkfeature_t109,3453
#define	ETYP_DDK	111,3470
#define	ETYP_CDK	112,3489
typedef struct cdkhdr cdkhdr119,3722
} cdkhdr_t;cdkhdr_t140,4266
#define	MODE_DDK	142,4279
#define	MODE_CDK	143,4298
#define	IMD_INTR	145,4318
#define	IMD_PPINTR	146,4339
#define	IMD_POLL	147,4362
typedef struct cdkmem cdkmem155,4672
} cdkmem_t;cdkmem_t158,4742
#define	TYP_UNDEFINED	160,4755
#define	TYP_ASYNCTRL	161,4781
#define	TYP_ASYNC	162,4806
#define	TYP_PARALLEL	163,4829
#define	TYP_SYNCX21	164,4855
#define	ASYCMD	173,5142
#define	A_NULL	175,5188
#define	A_FLUSH	176,5217
#define	A_BREAK	177,5247
#define	A_GETPORT	178,5277
#define	A_SETPORT	179,5308
#define	A_SETPORTF	180,5339
#define	A_SETPORTFTX	181,5371
#define	A_SETPORTFRX	182,5405
#define	A_GETSIGNALS	183,5439
#define	A_SETSIGNALS	184,5473
#define	A_SETSIGNALSF	185,5507
#define	A_SETSIGNALSFTX	186,5543
#define	A_SETSIGNALSFRX	187,5581
#define	A_GETNOTIFY	188,5619
#define	A_SETNOTIFY	189,5653
#define	A_NOTIFY	190,5687
#define	A_PORTCTRL	191,5718
#define	A_GETSTATS	192,5751
#define	A_RQSTATE	193,5784
#define	A_FLOWSTATE	194,5816
#define	A_CLEARSTATS	195,5850
#define	FLUSHRX	200,5945
#define	FLUSHTX	201,5966
#define	BREAKON	203,5988
#define	BREAKOFF	204,6008
typedef struct asyport asyport211,6249
} asyport_t;asyport_t238,6868
#define	PT_STOP1	240,6882
#define	PT_STOP15	241,6903
#define	PT_STOP2	242,6925
#define	PT_NOPARITY	244,6947
#define	PT_ODDPARITY	245,6971
#define	PT_EVENPARITY	246,6996
#define	PT_MARKPARITY	247,7022
#define	PT_SPACEPARITY	248,7048
#define	F_NONE	250,7076
#define	F_IXON	251,7096
#define	F_IXOFF	252,7116
#define	F_IXANY	253,7137
#define	F_IOXANY	254,7158
#define	F_RTSFLOW	255,7179
#define	F_CTSFLOW	256,7202
#define	F_DTRFLOW	257,7225
#define	F_DCDFLOW	258,7248
#define	F_DSROFLOW	259,7271
#define	F_DSRIFLOW	260,7296
#define	FI_NORX	262,7322
#define	FI_RAW	263,7343
#define	FI_ISTRIP	264,7363
#define	FI_UCLC	265,7385
#define	FI_INLCR	266,7406
#define	FI_ICRNL	267,7428
#define	FI_IGNCR	268,7450
#define	FI_IGNBREAK	269,7472
#define	FI_DSCRDBREAK	270,7497
#define	FI_1MARKBREAK	271,7525
#define	FI_2MARKBREAK	272,7553
#define	FI_XCHNGBREAK	273,7581
#define	FI_IGNRXERRS	274,7609
#define	FI_DSCDRXERRS	275,7637
#define	FI_1MARKRXERRS	276,7666
#define	FI_2MARKRXERRS	277,7696
#define	FI_XCHNGRXERRS	278,7726
#define	FI_DSCRDNULL	279,7757
#define	FO_OLCUC	281,7787
#define	FO_ONLCR	282,7808
#define	FO_OOCRNL	283,7829
#define	FO_ONOCR	284,7851
#define	FO_ONLRET	285,7872
#define	FO_ONL	286,7895
#define	FO_OBS	287,7916
#define	FO_OVT	288,7937
#define	FO_OFF	289,7958
#define	FO_OTAB1	290,7980
#define	FO_OTAB2	291,8003
#define	FO_OTAB3	292,8026
#define	FO_OCR1	293,8049
#define	FO_OCR2	294,8073
#define	FO_OCR3	295,8097
#define	FO_OFILL	296,8121
#define	FO_ODELL	297,8145
#define	P_RTSLOCK	299,8171
#define	P_CTSLOCK	300,8193
#define	P_MAPRTS	301,8215
#define	P_MAPCTS	302,8236
#define	P_LOOPBACK	303,8257
#define	P_DTRFOLLOW	304,8281
#define	P_FAKEDCD	305,8306
#define	P_RXIMIN	307,8330
#define	P_RXITIME	308,8355
#define	P_RXTHOLD	309,8381
typedef struct asysigs asysigs315,8502
} asysigs_t;asysigs_t319,8596
#define	DT_TXBUSY	321,8610
#define	DT_TXEMPTY	322,8632
#define	DT_TXLOW	323,8655
#define	DT_TXHIGH	324,8676
#define	DT_TXFULL	325,8698
#define	DT_TXHOG	326,8721
#define	DT_TXFLOWED	327,8743
#define	DT_TXBREAK	328,8768
#define	DT_RXBUSY	330,8793
#define	DT_RXEMPTY	331,8817
#define	DT_RXLOW	332,8842
#define	DT_RXHIGH	333,8865
#define	DT_RXFULL	334,8889
#define	DT_RXHOG	335,8914
#define	DT_RXFLOWED	336,8938
#define	DT_RXBREAK	337,8965
#define	SG_DTR	339,8992
#define	SG_DCD	340,9012
#define	SG_RTS	341,9032
#define	SG_CTS	342,9052
#define	SG_DSR	343,9072
#define	SG_RI	344,9093
typedef struct asynotify asynotify351,9314
} asynotify_t;asynotify_t356,9431
} asyctrl_t;asyctrl_t369,9680
#define	CT_ENABLE	371,9694
#define	CT_DISABLE	372,9716
#define	CT_STOP	373,9739
#define	CT_START	374,9760
#define	CT_STARTFLOW	375,9781
#define	CT_STOPFLOW	376,9807
#define	CT_SENDCHR	377,9832
typedef struct asystats asystats384,10056
} asystats_t;asystats_t414,10764
typedef struct cdkctrl cdkctrl424,11146
} cdkctrl_t;cdkctrl_t432,11331
typedef struct cdkasyrq cdkasyrq441,11640
} cdkasyrq_t;cdkasyrq_t446,11755
typedef struct cdkasy cdkasy453,11971
} cdkasy_t;cdkasy_t461,12143
#define	STL_BINTR	474,12467
#define	STL_BSTART	475,12497
#define	STL_BSTOP	476,12528
#define	STL_BRESET	477,12558
#define	STL_GETPFLAG	482,12664
#define	STL_SETPFLAG	483,12697

include/linux/ip_fw.h,1809
#define _IP_FWCHAINS_H23,764
#define IP_FW_MAX_LABEL_LENGTH 32,944
typedef char ip_chainlabel[ip_chainlabel33,977
struct ip_fw ip_fw35,1032
struct ip_fwuserip_fwuser52,1873
#define IP_FW_F_PRN	59,1973
#define IP_FW_F_TCPSYN	60,2033
#define IP_FW_F_FRAG	61,2100
#define IP_FW_F_MARKABS	62,2166
#define IP_FW_F_WILDIF	63,2238
#define IP_FW_F_NETLINK 64,2316
#define IP_FW_F_MASK	65,2386
#define IP_FW_INV_SRCIP 68,2487
#define IP_FW_INV_DSTIP 69,2553
#define IP_FW_INV_PROTO 70,2619
#define IP_FW_INV_SRCPT 71,2687
#define IP_FW_INV_DSTPT 72,2759
#define IP_FW_INV_VIA 73,2836
#define IP_FW_INV_SYN 74,2906
#define IP_FW_INV_FRAG 75,2980
#define IP_FW_BASE_CTL 82,3260
#define IP_FW_APPEND	84,3328
#define IP_FW_REPLACE	85,3394
#define IP_FW_DELETE_NUM	86,3458
#define IP_FW_DELETE	87,3527
#define IP_FW_INSERT	88,3593
#define IP_FW_FLUSH	89,3656
#define IP_FW_ZERO	90,3723
#define IP_FW_CHECK	91,3789
#define IP_FW_MASQ_TIMEOUTS	92,3852
#define IP_FW_CREATECHAIN	93,3919
#define IP_FW_DELETECHAIN	94,3991
#define IP_FW_POLICY	95,4063
#define IP_FW_MASQ_CTL 98,4171
#define IP_FW_LABEL_FORWARD	101,4270
#define IP_FW_LABEL_INPUT	102,4308
#define IP_FW_LABEL_OUTPUT	103,4342
#define IP_FW_LABEL_MASQUERADE 106,4401
#define IP_FW_LABEL_REDIRECT 107,4440
#define IP_FW_LABEL_ACCEPT	108,4483
#define IP_FW_LABEL_BLOCK	109,4519
#define IP_FW_LABEL_REJECT	110,4552
#define IP_FW_LABEL_RETURN	111,4588
#define IP_FW_LABEL_QUEUE 112,4624
#define IP_FW_PROC_CHAINS	115,4690
#define IP_FW_PROC_CHAIN_NAMES	116,4730
struct ip_fwpktip_fwpkt119,4776
struct ip_fwchangeip_fwchange132,5163
struct ip_fwtestip_fwtest139,5278
struct ip_fwdelnumip_fwdelnum146,5458
struct ip_fwnewip_fwnew153,5582
struct ip_fwpolicyip_fwpolicy161,5714
extern void ip_fw_init(183,6102

include/linux/elf.h,9403
#define _LINUX_ELF_H2,21
typedef __u32	Elf32_Addr;Elf32_Addr8,119
typedef __u16	Elf32_Half;Elf32_Half9,145
typedef __u32	Elf32_Off;Elf32_Off10,171
typedef __s32	Elf32_Sword;Elf32_Sword11,196
typedef __u32	Elf32_Word;Elf32_Word12,223
typedef __u64	Elf64_Addr;Elf64_Addr15,279
typedef __u16	Elf64_Half;Elf64_Half16,305
typedef __s16	Elf64_SHalf;Elf64_SHalf17,331
typedef __u64	Elf64_Off;Elf64_Off18,358
typedef __s64	Elf64_Sword;Elf64_Sword19,383
typedef __u64	Elf64_Word;Elf64_Word20,410
#define PT_NULL 23,513
#define PT_LOAD 24,534
#define PT_DYNAMIC 25,555
#define PT_INTERP 26,576
#define PT_NOTE 27,597
#define PT_SHLIB 28,618
#define PT_PHDR 29,639
#define PT_LOPROC 30,660
#define PT_HIPROC 31,690
#define ET_NONE 34,779
#define ET_REL 35,799
#define ET_EXEC 36,819
#define ET_DYN 37,839
#define ET_CORE 38,859
#define ET_LOPROC 39,879
#define ET_HIPROC 40,899
#define EM_NONE 43,981
#define EM_M32 44,1000
#define EM_SPARC 45,1019
#define EM_386 46,1038
#define EM_68K 47,1057
#define EM_88K 48,1076
#define EM_486 49,1095
#define EM_860 50,1138
#define EM_MIPS	52,1158
#define EM_MIPS_RS4_BE 54,1225
#define EM_PARISC 56,1280
#define EM_SPARC32PLUS 58,1318
#define EM_PPC	60,1366
#define EM_SPARCV9 62,1406
#define EM_ALPHA	68,1560
#define DT_NULL	72,1665
#define DT_NEEDED	73,1684
#define DT_PLTRELSZ	74,1704
#define DT_PLTGOT	75,1726
#define DT_HASH	76,1746
#define DT_STRTAB	77,1765
#define DT_SYMTAB	78,1785
#define DT_RELA	79,1805
#define DT_RELASZ	80,1824
#define DT_RELAENT	81,1844
#define DT_STRSZ	82,1865
#define DT_SYMENT	83,1885
#define DT_INIT	84,1906
#define DT_FINI	85,1926
#define DT_SONAME	86,1946
#define DT_RPATH 87,1967
#define DT_SYMBOLIC	88,1988
#define DT_REL	89,2011
#define DT_RELSZ	90,2037
#define DT_RELENT	91,2057
#define DT_PLTREL	92,2078
#define DT_DEBUG	93,2099
#define DT_TEXTREL	94,2119
#define DT_JMPREL	95,2141
#define DT_LOPROC	96,2162
#define DT_HIPROC	97,2191
#define STB_LOCAL 100,2277
#define STB_GLOBAL 101,2298
#define STB_WEAK 102,2319
#define STT_NOTYPE 104,2341
#define STT_OBJECT 105,2363
#define STT_FUNC 106,2385
#define STT_SECTION 107,2407
#define STT_FILE 108,2429
#define ELF32_ST_BIND(ELF32_ST_BIND110,2452
#define ELF32_ST_TYPE(ELF32_ST_TYPE111,2488
#define AT_NULL 115,2630
#define AT_IGNORE 116,2670
#define AT_EXECFD 117,2720
#define AT_PHDR 118,2773
#define AT_PHENT 119,2827
#define AT_PHNUM 120,2882
#define AT_PAGESZ 121,2934
#define AT_BASE 122,2977
#define AT_FLAGS 123,3031
#define AT_ENTRY 124,3063
#define AT_NOTELF 125,3112
#define AT_UID 126,3158
#define AT_EUID 127,3194
#define AT_GID 128,3235
#define AT_EGID 129,3271
#define AT_PLATFORM 130,3312
#define AT_HWCAP 131,3383
typedef struct dynamic{dynamic133,3455
} Elf32_Dyn;Elf32_Dyn139,3564
} Elf64_Dyn;Elf64_Dyn147,3702
#define ELF32_R_SYM(ELF32_R_SYM150,3762
#define ELF32_R_TYPE(ELF32_R_TYPE151,3796
#define R_386_NONE	153,3834
#define R_386_32	154,3855
#define R_386_PC32	155,3874
#define R_386_GOT32	156,3895
#define R_386_PLT32	157,3917
#define R_386_COPY	158,3939
#define R_386_GLOB_DAT	159,3960
#define R_386_JMP_SLOT	160,3985
#define R_386_RELATIVE	161,4010
#define R_386_GOTOFF	162,4035
#define R_386_GOTPC	163,4058
#define R_386_NUM	164,4081
#define	R_SPARC_NONE	169,4140
#define	R_SPARC_8	170,4164
#define	R_SPARC_16	171,4185
#define	R_SPARC_32	172,4207
#define	R_SPARC_DISP8	173,4229
#define	R_SPARC_DISP16	174,4254
#define	R_SPARC_DISP32	175,4280
#define	R_SPARC_WDISP30	176,4306
#define	R_SPARC_WDISP22	177,4333
#define	R_SPARC_HI22	178,4360
#define	R_SPARC_22	179,4384
#define	R_SPARC_13	180,4407
#define	R_SPARC_LO10	181,4430
#define	R_SPARC_GOT10	182,4455
#define	R_SPARC_GOT13	183,4481
#define	R_SPARC_GOT22	184,4507
#define	R_SPARC_PC10	185,4533
#define	R_SPARC_PC22	186,4558
#define	R_SPARC_WPLT30	187,4583
#define	R_SPARC_COPY	188,4610
#define	R_SPARC_GLOB_DAT	189,4635
#define	R_SPARC_JMP_SLOT	190,4663
#define	R_SPARC_RELATIVE	191,4691
#define	R_SPARC_UA32	192,4719
#define R_SPARC_PLT32	193,4744
#define R_SPARC_HIPLT22	194,4770
#define R_SPARC_LOPLT10	195,4798
#define R_SPARC_PCPLT32	196,4826
#define R_SPARC_PCPLT22	197,4854
#define R_SPARC_PCPLT10	198,4882
#define R_SPARC_10	199,4910
#define R_SPARC_11	200,4933
#define R_SPARC_WDISP16	201,4956
#define R_SPARC_WDISP19	202,4984
#define R_SPARC_7	203,5012
#define R_SPARC_5	204,5034
#define R_SPARC_6	205,5056
#define HWCAP_SPARC_FLUSH 209,5136
#define HWCAP_SPARC_STBAR 210,5211
#define HWCAP_SPARC_SWAP 211,5245
#define HWCAP_SPARC_MULDIV 212,5279
#define HWCAP_SPARC_V9	213,5313
#define R_68K_NONE	219,5377
#define R_68K_32	220,5398
#define R_68K_16	221,5417
#define R_68K_8	222,5436
#define R_68K_PC32	223,5455
#define R_68K_PC16	224,5476
#define R_68K_PC8	225,5497
#define R_68K_GOT32	226,5517
#define R_68K_GOT16	227,5539
#define R_68K_GOT8	228,5561
#define R_68K_GOT32O	229,5582
#define R_68K_GOT16O	230,5606
#define R_68K_GOT8O	231,5630
#define R_68K_PLT32	232,5653
#define R_68K_PLT16	233,5676
#define R_68K_PLT8	234,5699
#define R_68K_PLT32O	235,5721
#define R_68K_PLT16O	236,5745
#define R_68K_PLT8O	237,5769
#define R_68K_COPY	238,5792
#define R_68K_GLOB_DAT	239,5814
#define R_68K_JMP_SLOT	240,5840
#define R_68K_RELATIVE	241,5866
#define R_ALPHA_NONE 246,5930
#define R_ALPHA_REFLONG 247,5985
#define R_ALPHA_REFQUAD 248,6045
#define R_ALPHA_GPREL32 249,6105
#define R_ALPHA_LITERAL 250,6170
#define R_ALPHA_LITUSE 251,6250
#define R_ALPHA_GPDISP 252,6326
#define R_ALPHA_BRADDR 253,6395
#define R_ALPHA_HINT 254,6470
#define R_ALPHA_SREL16 255,6545
#define R_ALPHA_SREL32 256,6610
#define R_ALPHA_SREL64 257,6675
#define R_ALPHA_OP_PUSH 258,6740
#define R_ALPHA_OP_STORE 259,6800
#define R_ALPHA_OP_PSUB 260,6869
#define R_ALPHA_OP_PRSHIFT 261,6933
#define R_ALPHA_GPVALUE 262,7000
#define R_ALPHA_GPRELHIGH 263,7035
#define R_ALPHA_GPRELLOW 264,7070
#define R_ALPHA_IMMED_GP_16 265,7105
#define R_ALPHA_IMMED_GP_HI32 266,7140
#define R_ALPHA_IMMED_SCN_HI32 267,7175
#define R_ALPHA_IMMED_BR_HI32 268,7210
#define R_ALPHA_IMMED_LO32 269,7245
#define R_ALPHA_COPY 270,7280
#define R_ALPHA_GLOB_DAT 271,7349
#define R_ALPHA_JMP_SLOT 272,7412
#define R_ALPHA_RELATIVE 273,7475
#define EF_ALPHA_32BIT	277,7599
typedef struct elf32_rel elf32_rel280,7661
} Elf32_Rel;Elf32_Rel283,7732
typedef struct elf64_rel elf64_rel285,7746
} Elf64_Rel;Elf64_Rel288,7896
typedef struct elf32_rela{elf32_rela290,7910
} Elf32_Rela;Elf32_Rela294,8005
typedef struct elf64_rela elf64_rela296,8020
} Elf64_Rela;Elf64_Rela300,8238
typedef struct elf32_sym{elf32_sym302,8253
} Elf32_Sym;Elf32_Sym309,8420
typedef struct elf64_sym elf64_sym311,8434
} Elf64_Sym;Elf64_Sym318,8806
#define EI_NIDENT	321,8821
typedef struct elf32_hdr{elf32_hdr323,8843
} Elf32_Ehdr;Elf32_Ehdr338,9223
typedef struct elf64_hdr elf64_hdr340,9238
} Elf64_Ehdr;Elf64_Ehdr355,9731
#define PF_R	359,9838
#define PF_W	360,9856
#define PF_X	361,9874
typedef struct elf32_phdr{elf32_phdr363,9893
} Elf32_Phdr;Elf32_Phdr372,10096
typedef struct elf64_phdr elf64_phdr374,10111
} Elf64_Phdr;Elf64_Phdr383,10493
#define SHT_NULL	386,10522
#define SHT_PROGBITS	387,10541
#define SHT_SYMTAB	388,10564
#define SHT_STRTAB	389,10585
#define SHT_RELA	390,10606
#define SHT_HASH	391,10625
#define SHT_DYNAMIC	392,10644
#define SHT_NOTE	393,10666
#define SHT_NOBITS	394,10685
#define SHT_REL	395,10706
#define SHT_SHLIB	396,10725
#define SHT_DYNSYM	397,10746
#define SHT_NUM	398,10768
#define SHT_LOPROC	399,10788
#define SHT_HIPROC	400,10818
#define SHT_LOUSER	401,10848
#define SHT_HIUSER	402,10878
#define SHF_WRITE	405,10924
#define SHF_ALLOC	406,10946
#define SHF_EXECINSTR	407,10968
#define SHF_MASKPROC	408,10994
#define SHN_UNDEF	411,11057
#define SHN_LORESERVE	412,11077
#define SHN_LOPROC	413,11106
#define SHN_HIPROC	414,11132
#define SHN_ABS	415,11158
#define SHN_COMMON	416,11182
#define SHN_HIRESERVE	417,11208
} Elf32_Shdr;Elf32_Shdr430,11486
typedef struct elf64_shdr elf64_shdr432,11501
} Elf64_Shdr;Elf64_Shdr443,12145
#define	EI_MAG0	445,12160
#define	EI_MAG1	446,12204
#define	EI_MAG2	447,12223
#define	EI_MAG3	448,12242
#define	EI_CLASS	449,12261
#define	EI_DATA	450,12280
#define	EI_VERSION	451,12299
#define	EI_PAD	452,12320
#define	ELFMAG0	454,12339
#define	ELFMAG1	455,12375
#define	ELFMAG2	456,12396
#define	ELFMAG3	457,12417
#define	ELFMAG	458,12438
#define	SELFMAG	459,12464
#define	ELFCLASSNONE	461,12484
#define	ELFCLASS32	462,12523
#define	ELFCLASS64	463,12544
#define	ELFCLASSNUM	464,12565
#define ELFDATANONE	466,12588
#define ELFDATA2LSB	467,12634
#define ELFDATA2MSB	468,12656
#define EV_NONE	470,12679
#define EV_CURRENT	471,12727
#define EV_NUM	472,12748
#define NT_PRSTATUS	475,12795
#define NT_PRFPREG	476,12817
#define NT_PRPSINFO	477,12838
#define NT_TASKSTRUCT	478,12860
typedef struct elf32_note elf32_note481,12924
} Elf32_Nhdr;Elf32_Nhdr485,13074
typedef struct elf64_note elf64_note493,13302
} Elf64_Nhdr;Elf64_Nhdr497,13451
extern Elf32_Dyn _DYNAMIC 501,13495
#define elfhdr	502,13525
#define elf_phdr	503,13551
#define elf_note	504,13579
extern Elf64_Dyn _DYNAMIC 508,13615
#define elfhdr	509,13645
#define elf_phdr	510,13671
#define elf_note	511,13699

include/linux/linkage.h,618
#define _LINUX_LINKAGE_H2,25
#define CPP_ASMLINKAGE 5,70
#define CPP_ASMLINKAGE7,110
#define asmlinkage 11,202
#define asmlinkage 13,270
#define SYMBOL_NAME_STR(SYMBOL_NAME_STR16,312
#define SYMBOL_NAME(SYMBOL_NAME17,342
#define SYMBOL_NAME_LABEL(SYMBOL_NAME_LABEL19,383
#define SYMBOL_NAME_LABEL(SYMBOL_NAME_LABEL21,423
#define __ALIGN 25,482
#define __ALIGN_STR 26,507
#define __ALIGN 29,563
#define __ALIGN_STR 30,588
#define __ALIGN 33,670
#define __ALIGN_STR 34,700
#define __ALIGN 36,767
#define __ALIGN_STR 37,798
#define ALIGN 44,934
#define ALIGN_STR 45,956
#define ENTRY(ENTRY47,987

include/linux/malloc.h,29
#define _LINUX_MALLOC_H2,24

include/linux/mc146818rtc.h,1899
#define _MC146818RTC_H12,458
#define RTC_PORT(RTC_PORT16,519
#define RTC_ALWAYS_BCD	17,552
#define CMOS_READ(CMOS_READ20,585
#define CMOS_WRITE(CMOS_WRITE24,669
#define RTC_SECONDS	32,932
#define RTC_SECONDS_ALARM	33,955
#define RTC_MINUTES	34,983
#define RTC_MINUTES_ALARM	35,1006
#define RTC_HOURS	36,1034
#define RTC_HOURS_ALARM	37,1055
# define RTC_ALARM_DONT_CARE 39,1133
#define RTC_DAY_OF_WEEK	41,1169
#define RTC_DAY_OF_MONTH	42,1196
#define RTC_MONTH	43,1223
#define RTC_YEAR	44,1244
#define RTC_REG_A	48,1303
#define RTC_REG_B	49,1325
#define RTC_REG_C	50,1347
#define RTC_REG_D	51,1369
#define RTC_FREQ_SELECT	56,1557
# define RTC_UIP	62,1797
# define RTC_DIV_CTL	63,1820
#  define RTC_REF_CLCK_4MHZ	65,1920
#  define RTC_REF_CLCK_1MHZ	66,1953
#  define RTC_REF_CLCK_32KHZ	67,1986
#  define RTC_DIV_RESET1	69,2098
#  define RTC_DIV_RESET2	70,2128
# define RTC_RATE_SELECT 72,2237
#define RTC_CONTROL	75,2342
# define RTC_SET 76,2372
# define RTC_PIE 77,2435
# define RTC_AIE 78,2490
# define RTC_UIE 79,2542
# define RTC_SQWE 80,2604
# define RTC_DM_BINARY 81,2660
# define RTC_24H 82,2732
# define RTC_DST_EN 83,2802
#define RTC_INTR_FLAGS	86,2943
# define RTC_IRQF 88,3008
# define RTC_PF 89,3071
# define RTC_AF 90,3092
# define RTC_UF 91,3113
#define RTC_VALID	94,3208
# define RTC_VRT 95,3236
#define BCD_TO_BIN(BCD_TO_BIN102,3491
#define BIN_TO_BCD(BIN_TO_BCD106,3577
struct rtc_time rtc_time115,3858
#define RTC_AIE_ON	132,4104
#define RTC_AIE_OFF	133,4166
#define RTC_UIE_ON	134,4217
#define RTC_UIE_OFF	135,4279
#define RTC_PIE_ON	136,4330
#define RTC_PIE_OFF	137,4394
#define RTC_ALM_SET	139,4446
#define RTC_ALM_READ	140,4521
#define RTC_RD_TIME	141,4597
#define RTC_SET_TIME	142,4672
#define RTC_IRQP_READ	143,4748
#define RTC_IRQP_SET	144,4824
#define RTC_EPOCH_READ	145,4899
#define RTC_EPOCH_SET	146,4976

include/linux/zorro.h,22677
#define _LINUX_ZORRO_H12,320
#define ZORRO_MANUF(ZORRO_MANUF32,792
#define ZORRO_PROD(ZORRO_PROD33,830
#define ZORRO_EPC(ZORRO_EPC34,875
#define ZORRO_ID(ZORRO_ID36,913
typedef __u32 zorro_id;zorro_id39,1009
#define ZORRO_MANUF_PACIFIC_PERIPHERALS	42,1035
#define  ZORRO_PROD_PACIFIC_PERIPHERALS_SE_2000_A500	43,1085
#define  ZORRO_PROD_PACIFIC_PERIPHERALS_SCSI	44,1178
#define ZORRO_MANUF_MACROSYSTEMS_USA_2	46,1265
#define  ZORRO_PROD_MACROSYSTEMS_WARP_ENGINE	47,1314
#define ZORRO_MANUF_KUPKE_1	49,1400
#define  ZORRO_PROD_KUPKE_GOLEM_RAM_BOX_2MB	50,1439
#define ZORRO_MANUF_MEMPHIS	52,1513
#define  ZORRO_PROD_MEMPHIS_STORMBRINGER	53,1552
#define ZORRO_MANUF_3_STATE	55,1623
#define  ZORRO_PROD_3_STATE_MEGAMIX_2000	56,1662
#define ZORRO_MANUF_COMMODORE_BRAUNSCHWEIG	58,1733
#define  ZORRO_PROD_CBM_A2088_A2286	59,1785
#define  ZORRO_PROD_CBM_A2286	60,1866
#define  ZORRO_PROD_CBM_A4091_1	61,1942
#define  ZORRO_PROD_CBM_A2386SX_1	62,2020
#define ZORRO_MANUF_COMMODORE_WEST_CHESTER_1	64,2100
#define  ZORRO_PROD_CBM_A2090A	65,2154
#define  ZORRO_PROD_CBM_A590_A2091_1	66,2233
#define  ZORRO_PROD_CBM_A590_A2091_2	67,2317
#define  ZORRO_PROD_CBM_A2090B	68,2401
#define  ZORRO_PROD_CBM_A2060	69,2480
#define  ZORRO_PROD_CBM_A590_A2052_A2058_A2091	70,2558
#define  ZORRO_PROD_CBM_A560_RAM	71,2651
#define  ZORRO_PROD_CBM_A2232_PROTOTYPE	72,2731
#define  ZORRO_PROD_CBM_A2232	73,2818
#define  ZORRO_PROD_CBM_A2620	74,2896
#define  ZORRO_PROD_CBM_A2630	75,2974
#define  ZORRO_PROD_CBM_A4091_2	76,3052
#define  ZORRO_PROD_CBM_A2065_1	77,3132
#define  ZORRO_PROD_CBM_ROMULATOR	78,3212
#define  ZORRO_PROD_CBM_A3000_TEST_FIXTURE	79,3293
#define  ZORRO_PROD_CBM_A2386SX_2	80,3382
#define  ZORRO_PROD_CBM_A2065_2	81,3463
#define ZORRO_MANUF_COMMODORE_WEST_CHESTER_2	83,3544
#define  ZORRO_PROD_CBM_A2090A_CM	84,3598
#define ZORRO_MANUF_PROGRESSIVE_PERIPHERALS_AND_SYSTEMS_2	86,3680
#define  ZORRO_PROD_PPS_EXP8000	87,3745
#define ZORRO_MANUF_KOLFF_COMPUTER_SUPPLIES	89,3839
#define  ZORRO_PROD_KCS_POWER_PC_BOARD	90,3892
#define ZORRO_MANUF_CARDCO_1	92,3978
#define  ZORRO_PROD_CARDCO_KRONOS_2000_1	93,4018
#define  ZORRO_PROD_CARDCO_A1000_1	94,4089
#define  ZORRO_PROD_CARDCO_ESCORT	95,4155
#define  ZORRO_PROD_CARDCO_A2410	96,4220
#define ZORRO_MANUF_A_SQUARED	98,4285
#define  ZORRO_PROD_A_SQUARED_LIVE_2000	99,4326
#define ZORRO_MANUF_COMSPEC_COMMUNICATIONS	101,4399
#define  ZORRO_PROD_COMSPEC_COMMUNICATIONS_AX2000	102,4451
#define ZORRO_MANUF_ANAKIN_RESEARCH	104,4545
#define  ZORRO_PROD_ANAKIN_RESEARCH_EASYL	105,4591
#define ZORRO_MANUF_MICROBOTICS	107,4671
#define  ZORRO_PROD_MICROBOTICS_STARBOARD_II	108,4714
#define  ZORRO_PROD_MICROBOTICS_STARDRIVE	109,4792
#define  ZORRO_PROD_MICROBOTICS_8_UP_A	110,4867
#define  ZORRO_PROD_MICROBOTICS_8_UP_Z	111,4940
#define  ZORRO_PROD_MICROBOTICS_DELTA_RAM	112,5013
#define  ZORRO_PROD_MICROBOTICS_8_STAR_RAM	113,5088
#define  ZORRO_PROD_MICROBOTICS_8_STAR	114,5164
#define  ZORRO_PROD_MICROBOTICS_VXL_RAM_32	115,5237
#define  ZORRO_PROD_MICROBOTICS_VXL_68030	116,5313
#define  ZORRO_PROD_MICROBOTICS_DELTA	117,5388
#define  ZORRO_PROD_MICROBOTICS_MBX_1200_1200Z_RAM	118,5460
#define  ZORRO_PROD_MICROBOTICS_HARDFRAME_2000_1	119,5543
#define  ZORRO_PROD_MICROBOTICS_HARDFRAME_2000_2	120,5624
#define  ZORRO_PROD_MICROBOTICS_MBX_1200_1200Z	121,5705
#define ZORRO_MANUF_ACCESS_ASSOCIATES_ALEGRA	123,5786
#define ZORRO_MANUF_EXPANSION_TECHNOLOGIES	125,5841
#define ZORRO_MANUF_ASDG	127,5894
#define  ZORRO_PROD_ASDG_MEMORY_1	128,5930
#define  ZORRO_PROD_ASDG_MEMORY_2	129,5991
#define  ZORRO_PROD_ASDG_EB920_LAN_ROVER	130,6052
#define  ZORRO_PROD_ASDG_GPIB_DUALIEEE488_TWIN_X	131,6119
#define ZORRO_MANUF_IMTRONICS_1	133,6194
#define  ZORRO_PROD_IMTRONICS_HURRICANE_2800_1	134,6237
#define  ZORRO_PROD_IMTRONICS_HURRICANE_2800_2	135,6317
#define ZORRO_MANUF_CBM_UNIVERSITY_OF_LOWELL	137,6398
#define  ZORRO_PROD_CBM_A2410	138,6452
#define ZORRO_MANUF_AMERISTAR	140,6531
#define  ZORRO_PROD_AMERISTAR_A2065	141,6572
#define  ZORRO_PROD_AMERISTAR_A560	142,6640
#define  ZORRO_PROD_AMERISTAR_A4066	143,6707
#define ZORRO_MANUF_SUPRA	145,6776
#define  ZORRO_PROD_SUPRA_SUPRADRIVE_4x4	146,6813
#define  ZORRO_PROD_SUPRA_1000_RAM	147,6881
#define  ZORRO_PROD_SUPRA_2000_DMA	148,6944
#define  ZORRO_PROD_SUPRA_500	149,7007
#define  ZORRO_PROD_SUPRA_500_SCSI	150,7066
#define  ZORRO_PROD_SUPRA_500XP_2000_RAM	151,7129
#define  ZORRO_PROD_SUPRA_500RX_2000_RAM	152,7197
#define  ZORRO_PROD_SUPRA_2400ZI	153,7265
#define  ZORRO_PROD_SUPRA_500XP_SUPRADRIVE_WORDSYNC	154,7326
#define  ZORRO_PROD_SUPRA_SUPRADRIVE_WORDSYNC_II	155,7404
#define  ZORRO_PROD_SUPRA_2400ZIPLUS	156,7479
#define ZORRO_MANUF_COMPUTER_SYSTEMS_ASSOCIATES	158,7545
#define  ZORRO_PROD_CSA_MAGNUM	159,7602
#define  ZORRO_PROD_CSA_12_GAUGE	160,7684
#define ZORRO_MANUF_MARC_MICHAEL_GROTH	162,7768
#define ZORRO_MANUF_M_TECH	164,7818
#define  ZORRO_PROD_MTEC_AT500_1	165,7856
#define ZORRO_MANUF_GREAT_VALLEY_PRODUCTS_1	167,7919
#define  ZORRO_PROD_GVP_IMPACT_SERIES_I	168,7972
#define ZORRO_MANUF_BYTEBOX	170,8059
#define  ZORRO_PROD_BYTEBOX_A500	171,8098
#define ZORRO_MANUF_DKB_POWER_COMPUTING	173,8162
#define  ZORRO_PROD_DKB_POWER_COMPUTING_SECUREKEY	174,8212
#define  ZORRO_PROD_DKB_POWER_COMPUTING_DKM_3128	175,8302
#define  ZORRO_PROD_DKB_POWER_COMPUTING_RAPID_FIRE	176,8391
#define  ZORRO_PROD_DKB_POWER_COMPUTING_DKM_1202	177,8482
#define  ZORRO_PROD_DKB_POWER_COMPUTING_COBRA_VIPER_II_68EC030	178,8571
#define  ZORRO_PROD_DKB_POWER_COMPUTING_WILDFIRE_060_1	179,8673
#define  ZORRO_PROD_DKB_POWER_COMPUTING_WILDFIRE_060_2	180,8768
#define ZORRO_MANUF_GREAT_VALLEY_PRODUCTS_2	182,8864
#define  ZORRO_PROD_GVP_IMPACT_SERIES_I_4K	183,8917
#define  ZORRO_PROD_GVP_IMPACT_SERIES_I_16K_2	184,9005
#define  ZORRO_PROD_GVP_IMPACT_SERIES_I_16K_3	185,9096
#define  ZORRO_PROD_GVP_IMPACT_3001_IDE_1	186,9187
#define  ZORRO_PROD_GVP_IMPACT_3001_RAM	187,9274
#define  ZORRO_PROD_GVP_IMPACT_SERIES_II_RAM_1	188,9360
#define  ZORRO_PROD_GVP_EPC_BASE	189,9452
#define  ZORRO_PROD_GVP_GFORCE_040_1	190,9531
#define  ZORRO_PROD_GVP_GFORCE_040_SCSI_1	191,9617
#define  ZORRO_PROD_GVP_A1291	192,9707
#define  ZORRO_PROD_GVP_COMBO_030_R4	193,9787
#define  ZORRO_PROD_GVP_COMBO_030_R4_SCSI	194,9873
#define  ZORRO_PROD_GVP_PHONEPAK	195,9963
#define  ZORRO_PROD_GVP_IO_EXTENDER	196,10045
#define  ZORRO_PROD_GVP_GFORCE_030	197,10130
#define  ZORRO_PROD_GVP_GFORCE_030_SCSI	198,10214
#define  ZORRO_PROD_GVP_A530	199,10303
#define  ZORRO_PROD_GVP_A530_SCSI	200,10382
#define  ZORRO_PROD_GVP_COMBO_030_R3	201,10465
#define  ZORRO_PROD_GVP_COMBO_030_R3_SCSI	202,10551
#define  ZORRO_PROD_GVP_SERIES_II	203,10641
#define  ZORRO_PROD_GVP_IMPACT_3001_IDE_2	204,10724
#define  ZORRO_PROD_GVP_GFORCE_040_060	207,10986
#define  ZORRO_PROD_GVP_IMPACT_VISION_24	208,11071
#define  ZORRO_PROD_GVP_GFORCE_040_2	209,11157
#define ZORRO_MANUF_CALIFORNIA_ACCESS_SYNERGY	211,11241
#define  ZORRO_PROD_CALIFORNIA_ACCESS_SYNERGY_MALIBU	212,11296
#define ZORRO_MANUF_XETEC	214,11396
#define  ZORRO_PROD_XETEC_FASTCARD	215,11433
#define  ZORRO_PROD_XETEC_FASTCARD_RAM	216,11496
#define  ZORRO_PROD_XETEC_FASTCARD_PLUS	217,11563
#define ZORRO_MANUF_PROGRESSIVE_PERIPHERALS_AND_SYSTEMS	219,11632
#define  ZORRO_PROD_PPS_MERCURY	220,11696
#define  ZORRO_PROD_PPS_A3000_68040	221,11787
#define  ZORRO_PROD_PPS_A2000_68040	222,11881
#define  ZORRO_PROD_PPS_ZEUS	223,11975
#define  ZORRO_PROD_PPS_A500_68040	224,12063
#define ZORRO_MANUF_XEBEC	226,12157
#define ZORRO_MANUF_SPIRIT_TECHNOLOGY	228,12195
#define  ZORRO_PROD_SPIRIT_TECHNOLOGY_INSIDER_IN1000	229,12243
#define  ZORRO_PROD_SPIRIT_TECHNOLOGY_INSIDER_IN500	230,12334
#define  ZORRO_PROD_SPIRIT_TECHNOLOGY_SIN500	231,12424
#define  ZORRO_PROD_SPIRIT_TECHNOLOGY_HDA_506	232,12508
#define  ZORRO_PROD_SPIRIT_TECHNOLOGY_AX_S	233,12593
#define  ZORRO_PROD_SPIRIT_TECHNOLOGY_OCTABYTE	234,12675
#define  ZORRO_PROD_SPIRIT_TECHNOLOGY_INMATE	235,12761
#define ZORRO_MANUF_SPIRIT_TECHNOLOGY_2	237,12846
#define ZORRO_MANUF_BSC_ALFADATA_1	239,12897
#define  ZORRO_PROD_BSC_ALF_3_1	240,12942
#define ZORRO_MANUF_BSC_ALFADATA_2	242,13013
#define  ZORRO_PROD_BSC_ALF_2_1	243,13058
#define  ZORRO_PROD_BSC_ALF_2_2	244,13128
#define  ZORRO_PROD_BSC_ALF_3_2	245,13198
#define ZORRO_MANUF_CARDCO_2	247,13269
#define  ZORRO_PROD_CARDCO_KRONOS_2000_2	248,13309
#define  ZORRO_PROD_CARDCO_A1000_2	249,13380
#define ZORRO_MANUF_JOCHHEIM	251,13447
#define  ZORRO_PROD_JOCHHEIM_RAM	252,13487
#define ZORRO_MANUF_CHECKPOINT_TECHNOLOGIES	254,13552
#define  ZORRO_PROD_CHECKPOINT_TECHNOLOGIES_SERIAL_SOLUTION	255,13605
#define ZORRO_MANUF_EDOTRONIK	257,13709
#define  ZORRO_PROD_EDOTRONIK_IEEE_488	258,13750
#define  ZORRO_PROD_EDOTRONIK_8032	259,13821
#define  ZORRO_PROD_EDOTRONIK_MULTISERIAL	260,13888
#define  ZORRO_PROD_EDOTRONIK_VIDEODIGITIZER	261,13961
#define  ZORRO_PROD_EDOTRONIK_PARALLEL_IO	262,14037
#define  ZORRO_PROD_EDOTRONIK_PIC_PROTOYPING	263,14110
#define  ZORRO_PROD_EDOTRONIK_ADC	264,14186
#define  ZORRO_PROD_EDOTRONIK_VME	265,14252
#define  ZORRO_PROD_EDOTRONIK_DSP96000	266,14318
#define ZORRO_MANUF_NES_INC	268,14390
#define  ZORRO_PROD_NES_INC_RAM	269,14429
#define ZORRO_MANUF_ICD	271,14493
#define  ZORRO_PROD_ICD_ADVANTAGE_2000_SCSI	272,14529
#define  ZORRO_PROD_ICD_ADVANTAGE_IDE	273,14598
#define  ZORRO_PROD_ICD_ADVANTAGE_2080_RAM	274,14662
#define ZORRO_MANUF_KUPKE_2	276,14731
#define  ZORRO_PROD_KUPKE_OMTI	277,14770
#define  ZORRO_PROD_KUPKE_SCSI_II	278,14832
#define  ZORRO_PROD_KUPKE_GOLEM_BOX	279,14896
#define  ZORRO_PROD_KUPKE_030_882	280,14962
#define  ZORRO_PROD_KUPKE_SCSI_AT	281,15026
#define ZORRO_MANUF_GREAT_VALLEY_PRODUCTS_3	283,15091
#define  ZORRO_PROD_GVP_A2000_RAM8	284,15144
#define  ZORRO_PROD_GVP_IMPACT_SERIES_II_RAM_2	285,15225
#define ZORRO_MANUF_INTERWORKS_NETWORK	287,15318
#define ZORRO_MANUF_HARDITAL_SYNTHESIS	289,15368
#define  ZORRO_PROD_HARDITAL_SYNTHESIS_TQM_68030_68882	290,15417
#define ZORRO_MANUF_APPLIED_ENGINEERING	292,15512
#define  ZORRO_PROD_APPLIED_ENGINEERING_DL2000	293,15562
#define  ZORRO_PROD_APPLIED_ENGINEERING_RAM_WORKS	294,15650
#define ZORRO_MANUF_BSC_ALFADATA_3	296,15741
#define  ZORRO_PROD_BSC_OKTAGON_2008	297,15786
#define  ZORRO_PROD_BSC_TANDEM_AT_2008_508	298,15860
#define  ZORRO_PROD_BSC_ALFA_RAM_1200	299,15939
#define  ZORRO_PROD_BSC_OKTAGON_2008_RAM	300,16014
#define  ZORRO_PROD_BSC_MULTIFACE_I	301,16091
#define  ZORRO_PROD_BSC_MULTIFACE_II	302,16164
#define  ZORRO_PROD_BSC_MULTIFACE_III	303,16238
#define  ZORRO_PROD_BSC_FRAMEMASTER_II	304,16313
#define  ZORRO_PROD_BSC_GRAFFITI_RAM	305,16389
#define  ZORRO_PROD_BSC_GRAFFITI_REG	306,16463
#define  ZORRO_PROD_BSC_ISDN_MASTERCARD	307,16537
#define  ZORRO_PROD_BSC_ISDN_MASTERCARD_II	308,16614
#define ZORRO_MANUF_PHOENIX	310,16694
#define  ZORRO_PROD_PHOENIX_ST506	311,16733
#define  ZORRO_PROD_PHOENIX_SCSI	312,16797
#define  ZORRO_PROD_PHOENIX_RAM	313,16860
#define ZORRO_MANUF_ADVANCED_STORAGE_SYSTEMS	315,16924
#define  ZORRO_PROD_ADVANCED_STORAGE_SYSTEMS_NEXUS	316,16978
#define  ZORRO_PROD_ADVANCED_STORAGE_SYSTEMS_NEXUS_RAM	317,17074
#define ZORRO_MANUF_IMPULSE	319,17175
#define  ZORRO_PROD_IMPULSE_FIRECRACKER_24	320,17214
#define ZORRO_MANUF_IVS	322,17287
#define  ZORRO_PROD_IVS_GRANDSLAM_PIC_2	323,17323
#define  ZORRO_PROD_IVS_GRANDSLAM_PIC_1	324,17389
#define  ZORRO_PROD_IVS_OVERDRIVE	325,17455
#define  ZORRO_PROD_IVS_TRUMPCARD_CLASSIC	326,17515
#define  ZORRO_PROD_IVS_TRUMPCARD_PRO_GRANDSLAM	327,17582
#define  ZORRO_PROD_IVS_META_4	328,17655
#define  ZORRO_PROD_IVS_WAVETOOLS	329,17713
#define  ZORRO_PROD_IVS_VECTOR_1	330,17773
#define  ZORRO_PROD_IVS_VECTOR_2	331,17832
#define ZORRO_MANUF_VECTOR_1	333,17892
#define  ZORRO_PROD_VECTOR_CONNECTION_1	334,17932
#define ZORRO_MANUF_XPERT_PRODEV	336,18004
#define  ZORRO_PROD_XPERT_PRODEV_VISIONA_RAM	337,18047
#define  ZORRO_PROD_XPERT_PRODEV_VISIONA_REG	338,18126
#define  ZORRO_PROD_XPERT_PRODEV_MERLIN_RAM	339,18205
#define  ZORRO_PROD_XPERT_PRODEV_MERLIN_REG_1	340,18283
#define  ZORRO_PROD_XPERT_PRODEV_MERLIN_REG_2	341,18363
#define ZORRO_MANUF_HYDRA_SYSTEMS	343,18444
#define  ZORRO_PROD_HYDRA_SYSTEMS_AMIGANET	344,18488
#define ZORRO_MANUF_SUNRIZE_INDUSTRIES	346,18567
#define  ZORRO_PROD_SUNRIZE_INDUSTRIES_AD1012	347,18616
#define  ZORRO_PROD_SUNRIZE_INDUSTRIES_AD516	348,18702
#define  ZORRO_PROD_SUNRIZE_INDUSTRIES_DD512	349,18787
#define ZORRO_MANUF_TRICERATOPS	351,18873
#define  ZORRO_PROD_TRICERATOPS_MULTI_IO	352,18916
#define ZORRO_MANUF_APPLIED_MAGIC	354,18991
#define  ZORRO_PROD_APPLIED_MAGIC_DMI_RESOLVER	355,19035
#define  ZORRO_PROD_APPLIED_MAGIC_DIGITAL_BROADCASTER	356,19117
#define ZORRO_MANUF_GFX_BASE	358,19206
#define  ZORRO_PROD_GFX_BASE_GDA_1_VRAM	359,19246
#define  ZORRO_PROD_GFX_BASE_GDA_1	360,19317
#define ZORRO_MANUF_ROCTEC	362,19384
#define  ZORRO_PROD_ROCTEC_RH_800C	363,19422
#define  ZORRO_PROD_ROCTEC_RH_800C_RAM	364,19486
#define ZORRO_MANUF_KATO	366,19555
#define  ZORRO_PROD_KATO_MELODY	367,19591
#define ZORRO_MANUF_HELFRICH_1	369,19668
#define  ZORRO_PROD_HELFRICH_RAINBOW_II	370,19710
#define  ZORRO_PROD_HELFRICH_RAINBOW_III	371,19783
#define ZORRO_MANUF_ATLANTIS	373,19857
#define ZORRO_MANUF_PROTAR	375,19898
#define ZORRO_MANUF_ACS	377,19937
#define ZORRO_MANUF_SOFTWARE_RESULTS_ENTERPRISES	379,19974
#define  ZORRO_PROD_SOFTWARE_RESULTS_ENTERPRISES_GOLDEN_GATE_2_BUS_PLUS	380,20031
#define ZORRO_MANUF_MASOBOSHI	382,20152
#define  ZORRO_PROD_MASOBOSHI_MASTER_CARD_SC201	383,20193
#define  ZORRO_PROD_MASOBOSHI_MASTER_CARD_MC702	384,20272
#define  ZORRO_PROD_MASOBOSHI_MVD_819	385,20351
#define ZORRO_MANUF_MAINHATTAN_DATA	387,20422
#define  ZORRO_PROD_MAINHATTAN_DATA_IDE	388,20468
#define ZORRO_MANUF_VILLAGE_TRONIC	390,20547
#define  ZORRO_PROD_VILLAGE_TRONIC_DOMINO_RAM	391,20592
#define  ZORRO_PROD_VILLAGE_TRONIC_DOMINO_REG	392,20674
#define  ZORRO_PROD_VILLAGE_TRONIC_DOMINO_16M_PROTOTYPE	393,20756
#define  ZORRO_PROD_VILLAGE_TRONIC_PICASSO_II_II_PLUS_RAM	394,20847
#define  ZORRO_PROD_VILLAGE_TRONIC_PICASSO_II_II_PLUS_REG	395,20939
#define  ZORRO_PROD_VILLAGE_TRONIC_PICASSO_II_II_PLUS_SEGMENTED_MODE	396,21031
#define  ZORRO_PROD_VILLAGE_TRONIC_PICASSO_IV_Z2_MEM1	397,21134
#define  ZORRO_PROD_VILLAGE_TRONIC_PICASSO_IV_Z2_MEM2	398,21223
#define  ZORRO_PROD_VILLAGE_TRONIC_PICASSO_IV_Z2_REG	399,21312
#define  ZORRO_PROD_VILLAGE_TRONIC_PICASSO_IV_Z3	400,21400
#define  ZORRO_PROD_VILLAGE_TRONIC_ARIADNE	401,21484
#define  ZORRO_PROD_VILLAGE_TRONIC_ARIADNE2	402,21563
#define ZORRO_MANUF_UTILITIES_UNLIMITED	404,21644
#define  ZORRO_PROD_UTILITIES_UNLIMITED_EMPLANT_DELUXE	405,21694
#define  ZORRO_PROD_UTILITIES_UNLIMITED_EMPLANT_DELUXE2	406,21789
#define ZORRO_MANUF_AMITRIX	408,21886
#define  ZORRO_PROD_AMITRIX_MULTI_IO	409,21925
#define  ZORRO_PROD_AMITRIX_CD_RAM	410,21992
#define ZORRO_MANUF_ARMAX	412,22058
#define  ZORRO_PROD_ARMAX_OMNIBUS	413,22095
#define ZORRO_MANUF_ZEUS	415,22158
#define  ZORRO_PROD_ZEUS_SPIDER	416,22194
#define ZORRO_MANUF_NEWTEK	418,22255
#define  ZORRO_PROD_NEWTEK_VIDEOTOASTER	419,22293
#define ZORRO_MANUF_M_TECH_GERMANY	421,22363
#define  ZORRO_PROD_MTEC_AT500_2	422,22408
#define  ZORRO_PROD_MTEC_68030	423,22478
#define  ZORRO_PROD_MTEC_68020I	424,22547
#define  ZORRO_PROD_MTEC_A1200_T68030_RTC	425,22617
#define  ZORRO_PROD_MTEC_VIPER_MK_V_E_MATRIX_530	426,22695
#define  ZORRO_PROD_MTEC_8_MB_RAM	427,22779
#define  ZORRO_PROD_MTEC_VIPER_MK_V_E_MATRIX_530_SCSI_IDE	428,22850
#define ZORRO_MANUF_GREAT_VALLEY_PRODUCTS_4	430,22943
#define  ZORRO_PROD_GVP_EGS_28_24_SPECTRUM_RAM	431,22996
#define  ZORRO_PROD_GVP_EGS_28_24_SPECTRUM_REG	432,23088
#define ZORRO_MANUF_APOLLO_1	434,23181
#define  ZORRO_PROD_APOLLO_A1200	435,23221
#define ZORRO_MANUF_HELFRICH_2	437,23286
#define  ZORRO_PROD_HELFRICH_PICCOLO_RAM	438,23328
#define  ZORRO_PROD_HELFRICH_PICCOLO_REG	439,23401
#define  ZORRO_PROD_HELFRICH_PEGGY_PLUS_MPEG	440,23474
#define  ZORRO_PROD_HELFRICH_VIDEOCRUNCHER	441,23551
#define  ZORRO_PROD_HELFRICH_SD64_RAM	442,23626
#define  ZORRO_PROD_HELFRICH_SD64_REG	443,23697
#define ZORRO_MANUF_MACROSYSTEMS_USA	445,23769
#define  ZORRO_PROD_MACROSYSTEMS_WARP_ENGINE_40xx	446,23816
#define ZORRO_MANUF_ELBOX_COMPUTER	448,23904
#define  ZORRO_PROD_ELBOX_COMPUTER_1200_4	449,23949
#define ZORRO_MANUF_HARMS_PROFESSIONAL	451,24028
#define  ZORRO_PROD_HARMS_PROFESSIONAL_030_PLUS	452,24077
#define  ZORRO_PROD_HARMS_PROFESSIONAL_3500	453,24165
#define ZORRO_MANUF_MICRONIK	455,24250
#define  ZORRO_PROD_MICRONIK_RCA_120	456,24290
#define ZORRO_MANUF_MICRONIK2	458,24359
#define  ZORRO_PROD_MICRONIK2_Z3I	459,24400
#define ZORRO_MANUF_MEGAMICRO	461,24467
#define  ZORRO_PROD_MEGAMICRO_SCRAM_500	462,24508
#define  ZORRO_PROD_MEGAMICRO_SCRAM_500_RAM	463,24580
#define ZORRO_MANUF_IMTRONICS_2	465,24656
#define  ZORRO_PROD_IMTRONICS_HURRICANE_2800_3	466,24699
#define  ZORRO_PROD_IMTRONICS_HURRICANE_2800_4	467,24779
#define ZORRO_MANUF_INDIVIDUAL_COMPUTERS	470,24880
#define  ZORRO_PROD_INDIVIDUAL_COMPUTERS_BUDDHA	471,24930
#define  ZORRO_PROD_INDIVIDUAL_COMPUTERS_CATWEASEL	472,25020
#define ZORRO_MANUF_KUPKE_3	474,25113
#define  ZORRO_PROD_KUPKE_GOLEM_HD_3000	475,25152
#define ZORRO_MANUF_ITH	477,25223
#define  ZORRO_PROD_ITH_ISDN_MASTER_II	478,25259
#define ZORRO_MANUF_VMC	480,25325
#define  ZORRO_PROD_VMC_ISDN_BLASTER_Z2	481,25361
#define  ZORRO_PROD_VMC_HYPERCOM_4	482,25427
#define ZORRO_MANUF_INFORMATION	484,25489
#define  ZORRO_PROD_INFORMATION_ISDN_ENGINE_I	485,25532
#define ZORRO_MANUF_VORTEX	487,25612
#define  ZORRO_PROD_VORTEX_GOLDEN_GATE_80386SX	488,25650
#define  ZORRO_PROD_VORTEX_GOLDEN_GATE_RAM	489,25725
#define  ZORRO_PROD_VORTEX_GOLDEN_GATE_80486	490,25796
#define ZORRO_MANUF_EXPANSION_SYSTEMS	492,25870
#define  ZORRO_PROD_EXPANSION_SYSTEMS_DATAFLYER_4000SX	493,25918
#define  ZORRO_PROD_EXPANSION_SYSTEMS_DATAFLYER_4000SX_RAM	494,26011
#define ZORRO_MANUF_READYSOFT	496,26108
#define  ZORRO_PROD_READYSOFT_AMAX_II_IV	497,26149
#define ZORRO_MANUF_PHASE5	499,26222
#define  ZORRO_PROD_PHASE5_BLIZZARD_RAM	500,26260
#define  ZORRO_PROD_PHASE5_BLIZZARD	501,26329
#define  ZORRO_PROD_PHASE5_BLIZZARD_1220_IV	502,26394
#define  ZORRO_PROD_PHASE5_FASTLANE_Z3_RAM	503,26466
#define  ZORRO_PROD_PHASE5_BLIZZARD_1230_II_FASTLANE_Z3_CYBERSCSI_CYBERSTORM060	504,26537
#define  ZORRO_PROD_PHASE5_BLIZZARD_1220_CYBERSTORM	505,26643
#define  ZORRO_PROD_PHASE5_BLIZZARD_1230	506,26722
#define  ZORRO_PROD_PHASE5_BLIZZARD_1230_IV_1260	507,26791
#define  ZORRO_PROD_PHASE5_BLIZZARD_2060	508,26867
#define  ZORRO_PROD_PHASE5_CYBERSTORM_MK_II	509,26936
#define  ZORRO_PROD_PHASE5_CYBERVISION64	510,27008
#define  ZORRO_PROD_PHASE5_CYBERVISION64_3D_PROTOTYPE	511,27077
#define  ZORRO_PROD_PHASE5_CYBERVISION64_3D	512,27158
#define  ZORRO_PROD_PHASE5_CYBERSTORM_MK_III	513,27230
#define  ZORRO_PROD_PHASE5_BLIZZARD_603E_PLUS	514,27303
#define ZORRO_MANUF_DPS	516,27378
#define  ZORRO_PROD_DPS_PERSONAL_ANIMATION_RECORDER	517,27414
#define ZORRO_MANUF_APOLLO_2	519,27491
#define  ZORRO_PROD_APOLLO_A620_68020_1	520,27531
#define  ZORRO_PROD_APOLLO_A620_68020_2	521,27602
#define ZORRO_MANUF_APOLLO_3	523,27674
#define  ZORRO_PROD_APOLLO_AT_APOLLO	524,27714
#define  ZORRO_PROD_APOLLO_1230_1240_1260_2030_4040_4060	525,27782
#define ZORRO_MANUF_PETSOFF_LP	527,27868
#define  ZORRO_PROD_PETSOFF_LP_DELFINA	528,27910
#define  ZORRO_PROD_PETSOFF_LP_DELFINA_LITE	529,27982
#define ZORRO_MANUF_UWE_GERLACH	531,28059
#define  ZORRO_PROD_UWE_GERLACH_RAM_ROM	532,28102
#define ZORRO_MANUF_ACT	534,28177
#define  ZORRO_PROD_ACT_PRELUDE	535,28213
#define ZORRO_MANUF_MACROSYSTEMS_GERMANY	537,28273
#define  ZORRO_PROD_MACROSYSTEMS_MAESTRO	538,28323
#define  ZORRO_PROD_MACROSYSTEMS_VLAB	539,28406
#define  ZORRO_PROD_MACROSYSTEMS_MAESTRO_PRO	540,28487
#define  ZORRO_PROD_MACROSYSTEMS_RETINA	541,28574
#define  ZORRO_PROD_MACROSYSTEMS_MULTI_EVOLUTION	542,28657
#define  ZORRO_PROD_MACROSYSTEMS_TOCCATA	543,28747
#define  ZORRO_PROD_MACROSYSTEMS_RETINA_Z3	544,28830
#define  ZORRO_PROD_MACROSYSTEMS_VLAB_MOTION	545,28915
#define  ZORRO_PROD_MACROSYSTEMS_ALTAIS	546,29002
#define  ZORRO_PROD_MACROSYSTEMS_FALCON_040	547,29085
#define ZORRO_MANUF_COMBITEC	549,29172
#define ZORRO_MANUF_SKI_PERIPHERALS	551,29213
#define  ZORRO_PROD_SKI_PERIPHERALS_MAST_FIREBALL	552,29259
#define  ZORRO_PROD_SKI_PERIPHERALS_SCSI_DUAL_SERIAL	553,29345
#define ZORRO_MANUF_REIS_WARE_2	555,29435
#define  ZORRO_PROD_REIS_WARE_SCAN_KING	556,29478
#define ZORRO_MANUF_CAMERON	558,29553
#define  ZORRO_PROD_CAMERON_PERSONAL_A4	559,29592
#define ZORRO_MANUF_REIS_WARE	561,29663
#define  ZORRO_PROD_REIS_WARE_HANDYSCANNER	562,29704
#define ZORRO_MANUF_PHOENIX_2	564,29779
#define  ZORRO_PROD_PHOENIX_ST506_2	565,29820
#define  ZORRO_PROD_PHOENIX_SCSI_2	566,29888
#define  ZORRO_PROD_PHOENIX_RAM_2	567,29955
#define ZORRO_MANUF_COMBITEC_2	569,30022
#define  ZORRO_PROD_COMBITEC_HD	570,30064
#define  ZORRO_PROD_COMBITEC_SRAM	571,30130
#define ZORRO_MANUF_HACKER	578,30258
#define  ZORRO_PROD_GENERAL_PROTOTYPE	579,30296
#define  ZORRO_PROD_HACKER_SCSI	580,30363
#define  ZORRO_PROD_RESOURCE_MANAGEMENT_FORCE_QUICKNET_QN2000	581,30425
#define  ZORRO_PROD_VECTOR_CONNECTION_2	582,30513
#define  ZORRO_PROD_VECTOR_CONNECTION_3	583,30582
#define  ZORRO_PROD_VECTOR_CONNECTION_4	584,30651
#define  ZORRO_PROD_VECTOR_CONNECTION_5	585,30720
#define GVP_PRODMASK	594,30983
#define GVP_SCSICLKMASK	595,31013
enum GVP_flags GVP_flags597,31047
    GVP_IO	598,31064
    GVP_IO		= 0x01,598,31064
    GVP_ACCEL	599,31084
    GVP_ACCEL		= 0x02,599,31084
    GVP_SCSI	600,31107
    GVP_SCSI		= 0x04,600,31107
    GVP_24BITDMA	601,31129
    GVP_24BITDMA	= 0x08,601,31129
    GVP_25BITDMA	602,31154
    GVP_25BITDMA	= 0x10,602,31154
    GVP_NOBANK	603,31179
    GVP_NOBANK		= 0x20,603,31179
    GVP_14MHZ	604,31203
    GVP_14MHZ		= 0x40,604,31203
struct Node Node608,31231
struct ExpansionRom ExpansionRom616,31528
#define ERT_TYPEMASK	632,32183
#define ERT_ZORROII	633,32209
#define ERT_ZORROIII	634,32234
#define ERTB_MEMLIST	637,32297
#define ERTF_MEMLIST	638,32358
struct ConfigDev ConfigDev640,32387
LN_Succ	656,33062
#define ZORRO_NUM_AUTO	693,33883
extern struct ConfigDev zorro_autocon[698,34005
extern __u32 zorro_unused_z2ram[723,34804
#define Z2RAM_START	725,34841
#define Z2RAM_END	726,34875
#define Z2RAM_SIZE	727,34907
#define Z2RAM_CHUNKSIZE	728,34940
#define Z2RAM_CHUNKMASK	729,34978
#define Z2RAM_CHUNKSHIFT	730,35016

include/linux/timex.h,2591
#define _LINUX_TIMEX_H52,2209
# define SHIFT_HZ 62,2621
# define SHIFT_HZ 64,2664
#define SHIFT_KG 78,3159
#define SHIFT_KF 79,3206
#define SHIFT_KH 80,3262
#define MAXTC 81,3317
#define SHIFT_SCALE 97,4011
#define SHIFT_UPDATE 98,4061
#define SHIFT_USEC 99,4133
#define FINEUSEC 100,4193
#define MAXPHASE 102,4257
#define MAXFREQ 103,4316
#define MAXTIME 104,4386
#define MINSEC 105,4458
#define MAXSEC 106,4529
#define	NTP_PHASE_LIMIT	107,4600
#define PPS_AVG 129,5511
#define PPS_SHIFT 130,5567
#define PPS_SHIFTMAX 131,5628
#define PPS_VALID 132,5692
#define MAXGLITCH 133,5749
#define LATCH 141,5952
struct timex timex147,6117
#define ADJ_OFFSET	179,7308
#define ADJ_FREQUENCY	180,7353
#define ADJ_MAXERROR	181,7406
#define ADJ_ESTERROR	182,7460
#define ADJ_STATUS	183,7516
#define ADJ_TIMECONST	184,7562
#define ADJ_TICK	185,7616
#define ADJ_OFFSET_SINGLESHOT	186,7658
#define MOD_OFFSET	189,7759
#define MOD_FREQUENCY	190,7789
#define MOD_MAXERROR	191,7825
#define MOD_ESTERROR	192,7859
#define MOD_STATUS	193,7893
#define MOD_TIMECONST	194,7923
#define MOD_CLKB	195,7959
#define MOD_CLKA	196,7985
#define STA_PLL	202,8089
#define STA_PPSFREQ	203,8143
#define STA_PPSTIME	204,8208
#define STA_FLL	205,8273
#define STA_INS	207,8336
#define STA_DEL	208,8383
#define STA_UNSYNC	209,8430
#define STA_FREQHOLD	210,8488
#define STA_PPSSIGNAL	212,8543
#define STA_PPSJITTER	213,8602
#define STA_PPSWANDER	214,8669
#define STA_PPSERROR	215,8736
#define STA_CLOCKERR	217,8805
#define STA_RONLY 219,8866
#define TIME_OK	225,9026
#define TIME_INS	226,9086
#define TIME_DEL	227,9130
#define TIME_OOP	228,9174
#define TIME_WAIT	229,9223
#define TIME_ERROR	230,9274
#define TIME_BAD	231,9324
extern long tick;239,9521
extern int tickadj;240,9589
extern int time_state;245,9684
extern int time_status;246,9727
extern long time_offset;247,9792
extern long time_constant;248,9844
extern long time_tolerance;249,9895
extern long time_precision;250,9955
extern long time_maxerror;251,10010
extern long time_esterror;252,10057
extern long time_phase;254,10107
extern long time_freq;255,10163
extern long time_adj;256,10223
extern long time_reftime;257,10280
extern long time_adjust;259,10341
extern long pps_offset;262,10447
extern long pps_jitter;263,10499
extern long pps_freq;264,10560
extern long pps_stabil;265,10619
extern long pps_valid;266,10684
extern int pps_shift;269,10783
extern long pps_jitcnt;270,10842
extern long pps_calcnt;271,10895
extern long pps_errcnt;272,10948
extern long pps_stbcnt;273,10998

include/linux/coff.h,2987
#define  E_SYMNMLEN 13,531
#define  E_FILNMLEN 14,608
#define  E_DIMNUM 15,685
#define COFF_SHORT_L(COFF_SHORT_L25,1112
#define COFF_LONG_L(COFF_LONG_L29,1317
#define COFF_SHORT_H(COFF_SHORT_H35,1624
#define COFF_LONG_H(COFF_LONG_H39,1826
#define COFF_LONG(COFF_LONG49,2306
#define COFF_SHORT(COFF_SHORT50,2344
struct COFF_filehdr COFF_filehdr56,2491
#define  COFF_F_RELFLG	88,3656
#define  COFF_F_EXEC	89,3688
#define  COFF_F_LNNO	90,3718
#define  COFF_F_LSYMS	91,3748
#define  COFF_F_MINMAL	92,3779
#define  COFF_F_UPDATE	93,3811
#define  COFF_F_SWABD	94,3843
#define  COFF_F_AR16WR	95,3874
#define  COFF_F_AR32WR	96,3906
#define  COFF_F_AR32W	97,3938
#define  COFF_F_PATCH	98,3969
#define  COFF_F_NODF	99,4000
#define	COFF_I386MAGIC	101,4031
#define COFF_I386PTXMAGIC	104,4159
#define COFF_I386AIXMAGIC	105,4191
#define COFF_I386BADMAG(COFF_I386BADMAG106,4249
#define COFF_I386BADMAG(COFF_I386BADMAG110,4438
#define	COFF_FILHDR	113,4517
#define	COFF_FILHSZ	114,4557
COFF_AOUTHDR;COFF_AOUTHDR140,5674
#define COFF_AOUTSZ 142,5689
#define COFF_STMAGIC	144,5733
#define COFF_OMAGIC 145,5759
#define COFF_JMAGIC 146,5788
#define COFF_DMAGIC 147,5866
#define COFF_ZMAGIC 148,5944
#define COFF_SHMAGIC	149,6023
struct COFF_scnhdr COFF_scnhdr153,6160
#define	COFF_SCNHDR	166,6707
#define	COFF_SCNHSZ	167,6746
#define COFF_TEXT	173,6826
#define COFF_DATA	174,6852
#define COFF_BSS	175,6878
#define COFF_COMMENT 176,6902
#define COFF_LIB 177,6937
#define COFF_SECT_TEXT 179,6969
#define COFF_SECT_DATA 180,7047
#define COFF_SECT_BSS 181,7125
#define COFF_SECT_REQD 182,7203
#define COFF_STYP_REG 184,7282
#define COFF_STYP_DSECT 185,7360
#define COFF_STYP_NOLOAD 186,7438
#define COFF_STYP_GROUP 187,7516
#define COFF_STYP_PAD 188,7594
#define COFF_STYP_COPY 189,7672
#define COFF_STYP_TEXT 190,7750
#define COFF_STYP_DATA 191,7828
#define COFF_STYP_BSS 192,7906
#define COFF_STYP_INFO 193,7984
#define COFF_STYP_OVER 194,8062
#define COFF_STYP_LIB 195,8140
struct COFF_slib COFF_slib202,8320
#define	COFF_SLIBHD	207,8465
#define	COFF_SLIBSZ	208,8502
struct COFF_lineno COFF_lineno218,8887
#define	COFF_LINENO	226,9103
#define	COFF_LINESZ	227,9142
#define COFF_E_SYMNMLEN	231,9222
#define COFF_E_FILNMLEN	232,9291
#define COFF_E_DIMNUM	233,9353
struct COFF_syment COFF_syment239,9490
#define COFF_N_BTMASK	256,10058
#define COFF_N_TMASK	257,10124
#define COFF_N_BTSHFT	258,10189
#define COFF_N_TSHIFT	259,10255
union COFF_auxent COFF_auxent265,10394
#define	COFF_SYMENT	328,11697
#define	COFF_SYMESZ	329,11736
#define	COFF_AUXENT	330,11760
#define	COFF_AUXESZ	331,11798
#define COFF_ETEXT	333,11822
struct COFF_reloc COFF_reloc337,11921
#define COFF_RELOC 343,12122
#define COFF_RELSZ 344,12159
#define COFF_DEF_DATA_SECTION_ALIGNMENT 346,12182
#define COFF_DEF_BSS_SECTION_ALIGNMENT 347,12225
#define COFF_DEF_TEXT_SECTION_ALIGNMENT 348,12268
#define COFF_DEF_SECTION_ALIGNMENT 351,12362

include/linux/hpfs_fs.h,61
#define _LINUX_HPFS_FS_H2,25
#define HPFS_SUPER_MAGIC 6,97

include/linux/hpfs_fs_i.h,311
#define _HPFS_FS_I2,19
struct hpfs_inode_info hpfs_inode_info4,39
#define i_hpfs_dno 15,554
#define i_hpfs_parent_dir 16,588
#define i_hpfs_n_secs 17,636
#define i_hpfs_file_sec 18,676
#define i_hpfs_disk_sec 19,720
#define i_hpfs_dpos 20,764
#define i_hpfs_dsubdno 21,800
#define i_hpfs_conv 22,842

include/linux/major.h,2692
#define _LINUX_MAJOR_H2,23
#define MAX_CHRDEV	15,333
#define MAX_BLKDEV	16,356
#define UNNAMED_MAJOR	18,380
#define MEM_MAJOR	19,404
#define RAMDISK_MAJOR	20,424
#define FLOPPY_MAJOR	21,448
#define PTY_MASTER_MAJOR 22,471
#define IDE0_MAJOR	23,498
#define PTY_SLAVE_MAJOR 24,519
#define HD_MAJOR	25,545
#define TTY_MAJOR	26,573
#define TTYAUX_MAJOR	27,593
#define LP_MAJOR	28,616
#define VCS_MAJOR	29,635
#define LOOP_MAJOR	30,655
#define SCSI_DISK0_MAJOR 31,676
#define SCSI_TAPE_MAJOR	32,703
#define MD_MAJOR 33,729
#define MISC_MAJOR	34,755
#define SCSI_CDROM_MAJOR 35,777
#define QIC02_TAPE_MAJOR 36,805
#define XT_DISK_MAJOR	37,833
#define SOUND_MAJOR	38,858
#define CDU31A_CDROM_MAJOR 39,881
#define JOYSTICK_MAJOR	40,911
#define GOLDSTAR_CDROM_MAJOR 41,937
#define OPTICS_CDROM_MAJOR 42,969
#define SANYO_CDROM_MAJOR 43,999
#define CYCLADES_MAJOR 44,1028
#define CYCLADESAUX_MAJOR 45,1055
#define MITSUMI_X_CDROM_MAJOR 46,1084
#define MFM_ACORN_MAJOR 47,1117
#define SCSI_GENERIC_MAJOR 48,1169
#define Z8530_MAJOR 49,1199
#define DIGI_MAJOR 50,1222
#define IDE1_MAJOR	51,1244
#define DIGICU_MAJOR 52,1266
#define MITSUMI_CDROM_MAJOR 53,1290
#define CDU535_CDROM_MAJOR 54,1321
#define STL_SERIALMAJOR 55,1351
#define MATSUSHITA_CDROM_MAJOR 56,1378
#define STL_CALLOUTMAJOR 57,1412
#define MATSUSHITA_CDROM2_MAJOR 58,1440
#define QIC117_TAPE_MAJOR 59,1475
#define MATSUSHITA_CDROM3_MAJOR 60,1504
#define MATSUSHITA_CDROM4_MAJOR 61,1539
#define STL_SIOMEMMAJOR 62,1574
#define ACSI_MAJOR	63,1601
#define AZTECH_CDROM_MAJOR 64,1623
#define GRAPHDEV_MAJOR	65,1653
#define CM206_CDROM_MAJOR 66,1716
#define IDE2_MAJOR	67,1745
#define IDE3_MAJOR	68,1767
#define NETLINK_MAJOR	69,1789
#define PS2ESDI_MAJOR	70,1814
#define IDETAPE_MAJOR	71,1839
#define Z2RAM_MAJOR	72,1864
#define APBLOCK_MAJOR 73,1887
#define DDV_MAJOR 74,1942
#define NBD_MAJOR	75,2001
#define RISCOM8_NORMAL_MAJOR 76,2051
#define RISCOM8_CALLOUT_MAJOR 77,2083
#define MKISS_MAJOR	78,2116
#define DSP56K_MAJOR 79,2139
#define IDE4_MAJOR	81,2201
#define IDE5_MAJOR	82,2223
#define SCSI_DISK1_MAJOR	84,2246
#define SCSI_DISK2_MAJOR	85,2274
#define SCSI_DISK3_MAJOR	86,2302
#define SCSI_DISK4_MAJOR	87,2330
#define SCSI_DISK5_MAJOR	88,2358
#define SCSI_DISK6_MAJOR	89,2386
#define SCSI_DISK7_MAJOR	90,2414
#define SPECIALIX_NORMAL_MAJOR 92,2443
#define SPECIALIX_CALLOUT_MAJOR 93,2477
#define UNIX98_PTY_MASTER_MAJOR	95,2513
#define UNIX98_PTY_MAJOR_COUNT	96,2549
#define UNIX98_PTY_SLAVE_MAJOR	97,2582
#define SCSI_DISK_MAJOR(SCSI_DISK_MAJOR103,2698
#define SCSI_BLK_MAJOR(SCSI_BLK_MAJOR106,2814
static __inline__ int scsi_blk_major(110,2898

include/linux/hpfs_fs_sb.h,433
#define _HPFS_FS_SB2,20
struct hpfs_sb_info hpfs_sb_info4,41
#define s_hpfs_root 19,723
#define s_hpfs_fs_size 20,761
#define s_hpfs_bitmaps 21,805
#define s_hpfs_dirband_size 22,849
#define s_hpfs_dmap 23,903
#define s_hpfs_uid 24,941
#define s_hpfs_gid 25,977
#define s_hpfs_mode 26,1013
#define s_hpfs_n_free 27,1051
#define s_hpfs_n_free_dnodes 28,1093
#define s_hpfs_lowercase 29,1149
#define s_hpfs_conv 30,1197

include/linux/inet.h,30
#define _LINUX_INET_H43,2204

include/linux/soundcard.h,19902
#define SOUNDCARD_H2,20
#define SOUND_VERSION	36,1713
#define OPEN_SOUND_SYSTEM37,1744
#define SNDCARD_ADLIB	46,1920
#define SNDCARD_SB	47,1945
#define SNDCARD_PAS	48,1967
#define SNDCARD_GUS	49,1990
#define SNDCARD_MPU401	50,2013
#define SNDCARD_SB16	51,2039
#define SNDCARD_SB16MIDI	52,2063
#define SNDCARD_UART6850	53,2090
#define SNDCARD_GUS16	54,2117
#define SNDCARD_MSS	55,2142
#define SNDCARD_PSS 56,2166
#define SNDCARD_SSCAPE	57,2194
#define SNDCARD_PSS_MPU 58,2221
#define SNDCARD_PSS_MSS 59,2253
#define SNDCARD_SSCAPE_MSS	60,2285
#define SNDCARD_TRXPRO	61,2315
#define SNDCARD_TRXPRO_SB	62,2342
#define SNDCARD_TRXPRO_MPU	63,2371
#define SNDCARD_MAD16	64,2401
#define SNDCARD_MAD16_MPU	65,2427
#define SNDCARD_CS4232	66,2456
#define SNDCARD_CS4232_MPU	67,2483
#define SNDCARD_MAUI	68,2513
#define SNDCARD_PSEUDO_MSS	69,2538
#define SNDCARD_GUSPNP	70,2568
#define SNDCARD_UART401	71,2595
#define	SIOCPARM_MASK	81,2989
#define	SIOC_VOID	82,3024
#define	SIOC_OUT	83,3051
#define	SIOC_IN	84,3076
#define	SIOC_INOUT	85,3100
#define _SIOC_SIZE	86,3129
#define _SIOC_DIR	87,3158
#define _SIOC_NONE	88,3185
#define _SIOC_READ	89,3214
#define _SIOC_WRITE	90,3243
#define	_SIO	91,3274
#define	_SIOR	92,3292
#define	_SIOW	93,3312
#define	_SIOWR	94,3332
#define	SIOCPARM_MASK	104,3670
#define	SIOC_VOID	105,3738
#define	SIOC_OUT	106,3787
#define	SIOC_IN	107,3841
#define	SIOC_INOUT	108,3894
#define	_SIO(_SIO110,3999
#define	_SIOR(_SIOR111,4045
#define	_SIOW(_SIOW112,4125
#define	_SIOWR(_SIOWR114,4259
#define _SIOC_SIZE(_SIOC_SIZE115,4342
#define _SIOC_DIR(_SIOC_DIR116,4389
#define _SIOC_NONE	117,4427
#define _SIOC_READ	118,4456
#define _SIOC_WRITE	119,4484
#define SNDCTL_SEQ_RESET	123,4556
#define SNDCTL_SEQ_SYNC	124,4597
#define SNDCTL_SYNTH_INFO	125,4638
#define SNDCTL_SEQ_CTRLRATE	126,4699
#define SNDCTL_SEQ_GETOUTCOUNT	127,4784
#define SNDCTL_SEQ_GETINCOUNT	128,4836
#define SNDCTL_SEQ_PERCMODE	129,4887
#define SNDCTL_FM_LOAD_INSTR	130,4936
#define SNDCTL_SEQ_TESTMIDI	131,5036
#define SNDCTL_SEQ_RESETSAMPLES	132,5085
#define SNDCTL_SEQ_NRSYNTHS	133,5138
#define SNDCTL_SEQ_NRMIDIS	134,5187
#define SNDCTL_MIDI_INFO	135,5235
#define SNDCTL_SEQ_THRESHOLD	136,5294
#define SNDCTL_SYNTH_MEMAVL	137,5344
#define SNDCTL_FM_4OP_ENABLE	138,5420
#define SNDCTL_SEQ_PANIC	139,5484
#define SNDCTL_SEQ_OUTOFBAND	140,5525
#define SNDCTL_SEQ_GETTIME	141,5592
#define SNDCTL_SYNTH_ID	142,5640
#define SNDCTL_SYNTH_CONTROL	143,5700
#define SNDCTL_SYNTH_REMOVESAMPLE	144,5767
typedef struct synth_controlsynth_control146,5839
}synth_control;synth_control150,5962
typedef struct remove_sampleremove_sample152,5979
} remove_sample;remove_sample157,6133
typedef struct seq_event_rec seq_event_rec159,6151
} seq_event_rec;seq_event_rec161,6206
#define SNDCTL_TMR_TIMEBASE	163,6224
#define SNDCTL_TMR_START	164,6273
#define SNDCTL_TMR_STOP	165,6314
#define SNDCTL_TMR_CONTINUE	166,6355
#define SNDCTL_TMR_TEMPO	167,6399
#define SNDCTL_TMR_SOURCE	168,6445
#	define TMR_INTERNAL	169,6492
#	define TMR_EXTERNAL	170,6526
#		define TMR_MODE_MIDI	171,6560
#		define TMR_MODE_FSK	172,6595
#		define TMR_MODE_CLS	173,6629
#		define TMR_MODE_SMPTE	174,6663
#define SNDCTL_TMR_METRONOME	175,6699
#define SNDCTL_TMR_SELECT	176,6749
#  define _PATCHKEY(_PATCHKEY184,6965
#  define AFMT_S16_NE 185,7001
#  define _PATCHKEY(_PATCHKEY187,7041
#  define AFMT_S16_NE 188,7080
struct patch_info patch_info201,7540
#define WAVE_PATCH	203,7609
#define GUS_PATCH	204,7647
#define WAVEFRONT_PATCH 205,7679
#define WAVE_16_BITS	215,7908
#define WAVE_UNSIGNED	216,7971
#define WAVE_LOOPING	217,8036
#define WAVE_BIDIR_LOOP	218,8095
#define WAVE_LOOP_BACK	219,8168
#define WAVE_SUSTAIN_ON	220,8235
#define WAVE_ENVELOPES	221,8311
#define WAVE_FAST_RELEASE 222,8374
#define WAVE_VIBRATO	225,8528
#define WAVE_TREMOLO	226,8592
#define WAVE_SCALE	227,8656
#define WAVE_FRACTIONS	228,8718
#define WAVE_ROM	230,8808
#define WAVE_MULAW	231,8857
struct sysex_info sysex_info290,10689
#define SYSEX_PATCH	292,10764
#define MAUI_PATCH	293,10800
#define SEQ_NOTEOFF	319,11780
#define SEQ_FMNOTEOFF	320,11803
#define SEQ_NOTEON	321,11858
#define	SEQ_FMNOTEON	322,11880
#define SEQ_WAIT	323,11913
#define SEQ_PGMCHANGE	324,11944
#define SEQ_FMPGMCHANGE	325,11969
#define SEQ_SYNCTIMER	326,12008
#define SEQ_MIDIPUTC	327,12041
#define SEQ_DRUMON	328,12065
#define SEQ_DRUMOFF	329,12106
#define SEQ_ECHO	330,12148
#define SEQ_AFTERTOUCH	331,12215
#define SEQ_CONTROLLER	332,12241
#define	   CTL_BANK_SELECT	346,12717
#define	   CTL_MODWHEEL	347,12750
#define    CTL_BREATH	348,12781
#define    CTL_FOOT	350,12833
#define    CTL_PORTAMENTO_TIME	351,12860
#define    CTL_DATA_ENTRY	352,12897
#define    CTL_MAIN_VOLUME	353,12929
#define    CTL_BALANCE	354,12962
#define    CTL_PAN	356,13015
#define    CTL_EXPRESSION	357,13041
#define    CTL_GENERAL_PURPOSE1	362,13165
#define    CTL_GENERAL_PURPOSE2	363,13202
#define    CTL_GENERAL_PURPOSE3	364,13239
#define    CTL_GENERAL_PURPOSE4	365,13276
#define    CTL_DAMPER_PEDAL	375,13673
#define    CTL_SUSTAIN	376,13707
#define    CTL_HOLD	377,13749
#define    CTL_PORTAMENTO	378,13788
#define    CTL_SOSTENUTO	379,13820
#define    CTL_SOFT_PEDAL	380,13851
#define    CTL_HOLD2	382,13906
#define    CTL_GENERAL_PURPOSE5	385,13965
#define    CTL_GENERAL_PURPOSE6	386,14002
#define    CTL_GENERAL_PURPOSE7	387,14039
#define    CTL_GENERAL_PURPOSE8	388,14076
#define    CTL_EXT_EFF_DEPTH	390,14143
#define    CTL_TREMOLO_DEPTH	391,14178
#define    CTL_CHORUS_DEPTH	392,14213
#define    CTL_DETUNE_DEPTH	393,14247
#define    CTL_CELESTE_DEPTH	394,14281
#define    CTL_PHASER_DEPTH	395,14346
#define    CTL_DATA_INCREMENT	396,14380
#define    CTL_DATA_DECREMENT	397,14416
#define    CTL_NONREG_PARM_NUM_LSB	398,14452
#define    CTL_NONREG_PARM_NUM_MSB	399,14492
#define    CTL_REGIST_PARM_NUM_LSB	400,14532
#define    CTL_REGIST_PARM_NUM_MSB	401,14572
#define    CTRL_PITCH_BENDER	406,14719
#define    CTRL_PITCH_BENDER_RANGE	407,14753
#define    CTRL_EXPRESSION	408,14792
#define    CTRL_MAIN_VOLUME	409,14839
#define SEQ_BALANCE	410,14887
#define SEQ_VOLMODE 411,14911
#define VOL_METHOD_ADAGIO	417,14999
#define VOL_METHOD_LINEAR	418,15027
#define SEQ_FULLSIZE	429,15216
#define SEQ_PRIVATE	450,16184
#define SEQ_EXTENDED	451,16256
typedef unsigned char sbi_instr_data[sbi_instr_data457,16358
struct sbi_instrument sbi_instrument459,16401
#define FM_PATCH	461,16476
#define OPL3_PATCH	462,16509
struct synth_info synth_info468,16722
#define SYNTH_TYPE_FM	472,16845
#define SYNTH_TYPE_SAMPLE	473,16871
#define SYNTH_TYPE_MIDI	474,16900
#define FM_TYPE_ADLIB	477,16971
#define FM_TYPE_OPL3	478,17000
#define MIDI_TYPE_MPU401	479,17028
#define SAMPLE_TYPE_BASIC	481,17061
#define SAMPLE_TYPE_GUS	482,17093
#define SAMPLE_TYPE_WAVEFRONT 483,17137
#define SYNTH_CAP_PERCMODE	490,17333
#define SYNTH_CAP_OPL3	491,17393
#define SYNTH_CAP_INPUT	492,17457
struct sound_timer_info sound_timer_info496,17564
#define MIDI_CAP_MPU401	501,17624
struct midi_info midi_info503,17684
	} mpu_command_rec;mpu_command_rec518,18071
#define SNDCTL_MIDI_PRETIME	520,18092
#define SNDCTL_MIDI_MPUMODE	521,18141
#define SNDCTL_MIDI_MPUCMD	522,18190
#define SNDCTL_DSP_RESET	528,18348
#define SNDCTL_DSP_SYNC	529,18389
#define SNDCTL_DSP_SPEED	530,18430
#define SNDCTL_DSP_STEREO	531,18476
#define SNDCTL_DSP_GETBLKSIZE	532,18523
#define SNDCTL_DSP_SAMPLESIZE	533,18574
#define SNDCTL_DSP_CHANNELS	534,18623
#define SOUND_PCM_WRITE_CHANNELS	535,18672
#define SOUND_PCM_WRITE_FILTER	536,18725
#define SNDCTL_DSP_POST	537,18777
#define SNDCTL_DSP_SUBDIVIDE	538,18818
#define SNDCTL_DSP_SETFRAGMENT	539,18868
#define SNDCTL_DSP_GETFMTS	542,18991
#define SNDCTL_DSP_SETFMT	543,19060
#	define AFMT_QUERY	544,19127
#	define AFMT_MU_LAW	545,19184
#	define AFMT_A_LAW	546,19217
#	define AFMT_IMA_ADPCM	547,19249
#	define AFMT_U8	548,19285
#	define AFMT_S16_LE	549,19315
#	define AFMT_S16_BE	550,19377
#	define AFMT_S8	551,19437
#	define AFMT_U16_LE	552,19467
#	define AFMT_U16_BE	553,19524
#	define AFMT_MPEG	554,19578
typedef struct audio_buf_info audio_buf_info559,19664
		} audio_buf_info;audio_buf_info566,20030
#define SNDCTL_DSP_GETOSPACE	568,20051
#define SNDCTL_DSP_GETISPACE	569,20112
#define SNDCTL_DSP_NONBLOCK	570,20173
#define SNDCTL_DSP_GETCAPS	571,20217
#	define DSP_CAP_REVISION	572,20265
#	define DSP_CAP_DUPLEX	573,20344
#	define DSP_CAP_REALTIME	574,20414
#	define DSP_CAP_BATCH	575,20479
#	define DSP_CAP_COPROC	579,20661
#	define DSP_CAP_TRIGGER	582,20784
#	define DSP_CAP_MMAP	583,20847
#define SNDCTL_DSP_GETTRIGGER	585,20904
#define SNDCTL_DSP_SETTRIGGER	586,20955
#	define PCM_ENABLE_INPUT	587,21006
#	define PCM_ENABLE_OUTPUT	588,21044
typedef struct count_info count_info590,21083
	} count_info;count_info594,21262
#define SNDCTL_DSP_GETIPTR	596,21278
#define SNDCTL_DSP_GETOPTR	597,21333
typedef struct buffmem_desc buffmem_desc599,21389
	} buffmem_desc;buffmem_desc602,21451
#define SNDCTL_DSP_MAPINBUF	603,21468
#define SNDCTL_DSP_MAPOUTBUF	604,21527
#define SNDCTL_DSP_SETSYNCRO	605,21587
#define SNDCTL_DSP_SETDUPLEX	606,21633
#define SNDCTL_DSP_GETODELAY	607,21679
#define SNDCTL_DSP_PROFILE	620,22311
#define	  APF_NORMAL	621,22360
#define	  APF_NETWORK	622,22409
#define   APF_CPUINTENS 623,22488
#define SOUND_PCM_READ_RATE	625,22572
#define SOUND_PCM_READ_CHANNELS	626,22621
#define SOUND_PCM_READ_BITS	627,22674
#define SOUND_PCM_READ_FILTER	628,22723
#define SOUND_PCM_WRITE_BITS	631,22798
#define SOUND_PCM_WRITE_RATE	632,22846
#define SOUND_PCM_POST	633,22893
#define SOUND_PCM_RESET	634,22934
#define SOUND_PCM_SYNC	635,22977
#define SOUND_PCM_SUBDIVIDE	636,23018
#define SOUND_PCM_SETFRAGMENT	637,23068
#define SOUND_PCM_GETFMTS	638,23122
#define SOUND_PCM_SETFMT	639,23168
#define SOUND_PCM_GETOSPACE	640,23212
#define SOUND_PCM_GETISPACE	641,23262
#define SOUND_PCM_NONBLOCK	642,23312
#define SOUND_PCM_GETCAPS	643,23360
#define SOUND_PCM_GETTRIGGER	644,23406
#define SOUND_PCM_SETTRIGGER	645,23458
#define SOUND_PCM_SETSYNCRO	646,23510
#define SOUND_PCM_GETIPTR	647,23560
#define SOUND_PCM_GETOPTR	648,23606
#define SOUND_PCM_MAPINBUF	649,23652
#define SOUND_PCM_MAPOUTBUF	650,23700
typedef struct copr_buffer copr_buffer657,23838
#define CPF_NONE	CPF_NONE660,23922
#define CPF_FIRST	CPF_FIRST661,23947
#define CPF_LAST	CPF_LAST662,23991
	} copr_buffer;copr_buffer667,24160
typedef struct copr_debug_buf copr_debug_buf669,24177
	} copr_debug_buf;copr_debug_buf675,24337
typedef struct copr_msg copr_msg677,24357
	} copr_msg;copr_msg680,24422
#define SNDCTL_COPR_RESET 682,24436
#define SNDCTL_COPR_LOAD	683,24490
#define SNDCTL_COPR_RDATA	684,24550
#define SNDCTL_COPR_RCODE	685,24614
#define SNDCTL_COPR_WDATA	686,24678
#define SNDCTL_COPR_WCODE	687,24742
#define SNDCTL_COPR_RUN	688,24806
#define SNDCTL_COPR_HALT	689,24869
#define SNDCTL_COPR_SENDMSG	690,24932
#define SNDCTL_COPR_RCVMSG	691,24992
#define SOUND_MIXER_NRDEVICES	706,25406
#define SOUND_MIXER_VOLUME	707,25439
#define SOUND_MIXER_BASS	708,25468
#define SOUND_MIXER_TREBLE	709,25495
#define SOUND_MIXER_SYNTH	710,25524
#define SOUND_MIXER_PCM	711,25552
#define SOUND_MIXER_SPEAKER	712,25579
#define SOUND_MIXER_LINE	713,25609
#define SOUND_MIXER_MIC	714,25636
#define SOUND_MIXER_CD	715,25663
#define SOUND_MIXER_IMIX	716,25689
#define SOUND_MIXER_ALTPCM	717,25742
#define SOUND_MIXER_RECLEV	718,25772
#define SOUND_MIXER_IGAIN	719,25824
#define SOUND_MIXER_OGAIN	720,25870
#define SOUND_MIXER_LINE1	727,26178
#define SOUND_MIXER_LINE2	728,26236
#define SOUND_MIXER_LINE3	729,26294
#define SOUND_MIXER_DIGITAL1	730,26352
#define SOUND_MIXER_DIGITAL2	731,26408
#define SOUND_MIXER_DIGITAL3	732,26464
#define SOUND_MIXER_PHONEIN	733,26520
#define SOUND_MIXER_PHONEOUT	734,26569
#define SOUND_MIXER_VIDEO	735,26620
#define SOUND_MIXER_RADIO	736,26675
#define SOUND_MIXER_MONITOR	737,26719
#define SOUND_ONOFF_MIN	741,26927
#define SOUND_ONOFF_MAX	742,26955
#define SOUND_MIXER_NONE	745,27052
#define SOUND_MIXER_ENHANCE	751,27196
#define SOUND_MIXER_MUTE	752,27241
#define SOUND_MIXER_LOUD	753,27283
#define SOUND_DEVICE_LABELS	756,27327
#define SOUND_DEVICE_NAMES	761,27619
#define SOUND_MIXER_RECSRC	768,27913
#define SOUND_MIXER_DEVMASK	769,27996
#define SOUND_MIXER_RECMASK	770,28080
#define SOUND_MIXER_CAPS	771,28174
#	define SOUND_CAP_EXCL_INPUT	772,28204
#define SOUND_MIXER_STEREODEVS	773,28287
#define SOUND_MIXER_OUTSRC	774,28362
#define SOUND_MIXER_OUTMASK	775,28451
#define SOUND_MASK_VOLUME	779,28576
#define SOUND_MASK_BASS	780,28628
#define SOUND_MASK_TREBLE	781,28677
#define SOUND_MASK_SYNTH	782,28729
#define SOUND_MASK_PCM	783,28779
#define SOUND_MASK_SPEAKER	784,28826
#define SOUND_MASK_LINE	785,28880
#define SOUND_MASK_MIC	786,28929
#define SOUND_MASK_CD	787,28976
#define SOUND_MASK_IMIX	788,29021
#define SOUND_MASK_ALTPCM	789,29070
#define SOUND_MASK_RECLEV	790,29122
#define SOUND_MASK_IGAIN	791,29174
#define SOUND_MASK_OGAIN	792,29224
#define SOUND_MASK_LINE1	793,29274
#define SOUND_MASK_LINE2	794,29324
#define SOUND_MASK_LINE3	795,29374
#define SOUND_MASK_DIGITAL1	796,29424
#define SOUND_MASK_DIGITAL2	797,29480
#define SOUND_MASK_DIGITAL3	798,29536
#define SOUND_MASK_PHONEIN	799,29592
#define SOUND_MASK_PHONEOUT	800,29646
#define SOUND_MASK_RADIO	801,29702
#define SOUND_MASK_VIDEO	802,29752
#define SOUND_MASK_MONITOR	803,29802
#define SOUND_MASK_MUTE	806,29879
#define SOUND_MASK_ENHANCE	807,29928
#define SOUND_MASK_LOUD	808,29982
#define MIXER_READ(MIXER_READ810,30032
#define SOUND_MIXER_READ_VOLUME	811,30078
#define SOUND_MIXER_READ_BASS	812,30142
#define SOUND_MIXER_READ_TREBLE	813,30202
#define SOUND_MIXER_READ_SYNTH	814,30266
#define SOUND_MIXER_READ_PCM	815,30328
#define SOUND_MIXER_READ_SPEAKER	816,30386
#define SOUND_MIXER_READ_LINE	817,30451
#define SOUND_MIXER_READ_MIC	818,30511
#define SOUND_MIXER_READ_CD	819,30569
#define SOUND_MIXER_READ_IMIX	820,30625
#define SOUND_MIXER_READ_ALTPCM	821,30685
#define SOUND_MIXER_READ_RECLEV	822,30749
#define SOUND_MIXER_READ_IGAIN	823,30813
#define SOUND_MIXER_READ_OGAIN	824,30875
#define SOUND_MIXER_READ_LINE1	825,30937
#define SOUND_MIXER_READ_LINE2	826,30999
#define SOUND_MIXER_READ_LINE3	827,31061
#define SOUND_MIXER_READ_MUTE	830,31146
#define SOUND_MIXER_READ_ENHANCE	831,31206
#define SOUND_MIXER_READ_LOUD	832,31271
#define SOUND_MIXER_READ_RECSRC	834,31332
#define SOUND_MIXER_READ_DEVMASK	835,31396
#define SOUND_MIXER_READ_RECMASK	836,31461
#define SOUND_MIXER_READ_STEREODEVS	837,31526
#define SOUND_MIXER_READ_CAPS	838,31597
#define MIXER_WRITE(MIXER_WRITE840,31658
#define SOUND_MIXER_WRITE_VOLUME	841,31706
#define SOUND_MIXER_WRITE_BASS	842,31771
#define SOUND_MIXER_WRITE_TREBLE	843,31833
#define SOUND_MIXER_WRITE_SYNTH	844,31898
#define SOUND_MIXER_WRITE_PCM	845,31962
#define SOUND_MIXER_WRITE_SPEAKER	846,32022
#define SOUND_MIXER_WRITE_LINE	847,32089
#define SOUND_MIXER_WRITE_MIC	848,32151
#define SOUND_MIXER_WRITE_CD	849,32211
#define SOUND_MIXER_WRITE_IMIX	850,32269
#define SOUND_MIXER_WRITE_ALTPCM	851,32331
#define SOUND_MIXER_WRITE_RECLEV	852,32396
#define SOUND_MIXER_WRITE_IGAIN	853,32461
#define SOUND_MIXER_WRITE_OGAIN	854,32525
#define SOUND_MIXER_WRITE_LINE1	855,32589
#define SOUND_MIXER_WRITE_LINE2	856,32653
#define SOUND_MIXER_WRITE_LINE3	857,32717
#define SOUND_MIXER_WRITE_MUTE	860,32804
#define SOUND_MIXER_WRITE_ENHANCE	861,32866
#define SOUND_MIXER_WRITE_LOUD	862,32933
#define SOUND_MIXER_WRITE_RECSRC	864,32996
typedef struct mixer_infomixer_info866,33062
} mixer_info;mixer_info872,33164
typedef struct _old_mixer_info _old_mixer_info874,33179
} _old_mixer_info;_old_mixer_info878,33259
#define SOUND_MIXER_INFO	880,33279
#define SOUND_OLD_MIXER_INFO	881,33334
typedef unsigned char mixer_record[mixer_record889,33652
#define SOUND_MIXER_ACCESS	891,33694
#define SOUND_MIXER_PRIVATE1	897,33908
#define SOUND_MIXER_PRIVATE2	898,33960
#define SOUND_MIXER_PRIVATE3	899,34012
#define SOUND_MIXER_PRIVATE4	900,34064
#define SOUND_MIXER_PRIVATE5	901,34116
typedef struct mixer_vol_table mixer_vol_table911,34480
} mixer_vol_table;mixer_vol_table915,34587
#define SOUND_MIXER_GETLEVELS	917,34607
#define SOUND_MIXER_SETLEVELS	918,34672
#define OSS_GETVERSION	926,34988
#define EV_SEQ_LOCAL	946,35511
#define EV_TIMING	947,35538
#define EV_CHN_COMMON	948,35562
#define EV_CHN_VOICE	949,35590
#define EV_SYSEX	950,35617
#define MIDI_NOTEOFF	960,35803
#define MIDI_NOTEON	961,35830
#define MIDI_KEY_PRESSURE	962,35856
#define MIDI_CTL_CHANGE	968,35935
#define MIDI_PGM_CHANGE	969,35965
#define MIDI_CHN_PRESSURE	970,35995
#define MIDI_PITCH_BEND	971,36026
#define MIDI_SYSTEM_PREFIX	973,36057
#define TMR_WAIT_REL	978,36118
#define TMR_WAIT_ABS	979,36179
#define TMR_STOP	980,36239
#define TMR_START	981,36259
#define TMR_CONTINUE	982,36280
#define TMR_TEMPO	983,36304
#define TMR_ECHO	984,36325
#define TMR_CLOCK	985,36345
#define TMR_SPP	986,36383
#define TMR_TIMESIG	987,36432
#define LOCL_STARTAUDIO	992,36506
#define SEQ_DECLAREBUF(SEQ_DECLAREBUF1001,36815
#define SEQ_PM_DEFINES 1016,37551
#  define SEQ_USE_EXTBUF(SEQ_USE_EXTBUF1018,37605
#  define SEQ_DEFINEBUF(SEQ_DEFINEBUF1021,37715
#  define _SEQ_ADVBUF(_SEQ_ADVBUF1022,37797
#  define _SEQ_NEEDBUF(_SEQ_NEEDBUF1023,37872
#  define SEQ_DUMPBUF(SEQ_DUMPBUF1024,37949
#  define SEQ_LOAD_GMINSTR(SEQ_LOAD_GMINSTR1026,38018
#  define SEQ_LOAD_GMDRUM(SEQ_LOAD_GMDRUM1028,38123
#  define SEQ_LOAD_GMINSTR(SEQ_LOAD_GMINSTR1032,38245
#  define SEQ_LOAD_GMDRUM(SEQ_LOAD_GMDRUM1033,38284
#  define SEQ_USE_EXTBUF(SEQ_USE_EXTBUF1035,38322
#define SEQ_DEFINEBUF(SEQ_DEFINEBUF1059,38837
#define _SEQ_NEEDBUF(_SEQ_NEEDBUF1060,38933
#define _SEQ_ADVBUF(_SEQ_ADVBUF1061,39011
#define SEQ_DUMPBUF	1062,39055
#define _SEQ_NEEDBUF(_SEQ_NEEDBUF1078,39622
#define SEQ_VOLUME_MODE(SEQ_VOLUME_MODE1082,39689
#define _CHN_VOICE(_CHN_VOICE1097,40089
#define SEQ_START_NOTE(SEQ_START_NOTE1109,40485
#define SEQ_STOP_NOTE(SEQ_STOP_NOTE1112,40579
#define SEQ_KEY_PRESSURE(SEQ_KEY_PRESSURE1115,40673
#define _CHN_COMMON(_CHN_COMMON1122,40818
#define SEQ_SYSEX(SEQ_SYSEX1147,41998
#define SEQ_CHN_PRESSURE(SEQ_CHN_PRESSURE1160,42376
#define SEQ_SET_PATCH 1163,42483
#   define SEQ_PGM_CHANGE(SEQ_PGM_CHANGE1165,42534
#   define SEQ_PGM_CHANGE(SEQ_PGM_CHANGE1169,42711
#define SEQ_CONTROL(SEQ_CONTROL1173,42818
#define SEQ_BENDER(SEQ_BENDER1176,42933
#define SEQ_V2_X_CONTROL(SEQ_V2_X_CONTROL1180,43027
#define SEQ_PITCHBEND(SEQ_PITCHBEND1194,43603
#define SEQ_BENDER_RANGE(SEQ_BENDER_RANGE1195,43699
#define SEQ_EXPRESSION(SEQ_EXPRESSION1196,43804
#define SEQ_MAIN_VOLUME(SEQ_MAIN_VOLUME1197,43897
#define SEQ_PANNING(SEQ_PANNING1198,44000
#define _TIMER_EVENT(_TIMER_EVENT1204,44130
#define SEQ_START_TIMER(SEQ_START_TIMER1212,44409
#define SEQ_STOP_TIMER(SEQ_STOP_TIMER1213,44463
#define SEQ_CONTINUE_TIMER(SEQ_CONTINUE_TIMER1214,44515
#define SEQ_WAIT_TIME(SEQ_WAIT_TIME1215,44575
#define SEQ_DELTA_TIME(SEQ_DELTA_TIME1216,44639
#define SEQ_ECHO_BACK(SEQ_ECHO_BACK1217,44704
#define SEQ_SET_TEMPO(SEQ_SET_TEMPO1218,44760
#define SEQ_SONGPOS(SEQ_SONGPOS1219,44821
#define SEQ_TIME_SIGNATURE(SEQ_TIME_SIGNATURE1220,44874
#define _LOCAL_EVENT(_LOCAL_EVENT1226,44971
#define SEQ_PLAYAUDIO(SEQ_PLAYAUDIO1234,45253
#define SEQ_MIDIOUT(SEQ_MIDIOUT1239,45374
#   define SEQ_WRPATCH(SEQ_WRPATCH1250,45642
#   define SEQ_WRPATCH2(SEQ_WRPATCH21252,45727
#   define SEQ_WRPATCH(SEQ_WRPATCH1255,45820
#   define SEQ_WRPATCH2(SEQ_WRPATCH21259,45988

include/linux/ultrasound.h,1355
#define _ULTRASOUND_H_2,23
#define _GUS_NUMVOICES	53,2117
#define _GUS_VOICESAMPLE	54,2146
#define _GUS_VOICEON	55,2191
#define _GUS_VOICEOFF	56,2218
#define _GUS_VOICEMODE	57,2246
#define _GUS_VOICEBALA	58,2275
#define _GUS_VOICEFREQ	59,2304
#define _GUS_VOICEVOL	60,2333
#define _GUS_RAMPRANGE	61,2361
#define _GUS_RAMPRATE	62,2390
#define _GUS_RAMPMODE	63,2418
#define _GUS_RAMPON	64,2446
#define _GUS_RAMPOFF	65,2472
#define _GUS_VOICEFADE	66,2499
#define _GUS_VOLUME_SCALE	67,2528
#define _GUS_VOICEVOL2	68,2559
#define _GUS_VOICE_POS	69,2588
#define _GUS_CMD(_GUS_CMD75,2644
#define GUS_NUMVOICES(GUS_NUMVOICES83,2979
#define GUS_VOICESAMPLE(GUS_VOICESAMPLE84,3054
#define GUS_VOICEON(GUS_VOICEON85,3158
#define GUS_VOICEOFF(GUS_VOICEOFF86,3239
#define GUS_VOICEFADE(GUS_VOICEFADE87,3315
#define GUS_VOICEMODE(GUS_VOICEMODE88,3393
#define GUS_VOICEBALA(GUS_VOICEBALA89,3478
#define GUS_VOICEFREQ(GUS_VOICEFREQ90,3563
#define GUS_VOICEVOL(GUS_VOICEVOL92,3683
#define GUS_VOICEVOL2(GUS_VOICEVOL293,3766
#define GUS_RAMPRANGE(GUS_RAMPRANGE94,3851
#define GUS_RAMPRATE(GUS_RAMPRATE95,3948
#define GUS_RAMPMODE(GUS_RAMPMODE96,4037
#define GUS_RAMPON(GUS_RAMPON97,4120
#define GUS_RAMPOFF(GUS_RAMPOFF98,4199
#define GUS_VOLUME_SCALE(GUS_VOLUME_SCALE99,4274
#define GUS_VOICE_POS(GUS_VOICE_POS100,4371

include/linux/ipx.h,1321
#define _IPX_H_2,16
#define IPX_NODE_LEN	5,85
#define IPX_MTU	6,108
struct sockaddr_ipxsockaddr_ipx8,130
#define sipx_special	22,408
#define sipx_action	23,439
#define IPX_DLTITF	24,469
#define IPX_CRTITF	25,490
typedef struct ipx_route_definitionipx_route_definition27,512
}	ipx_route_definition;ipx_route_definition32,659
typedef struct ipx_interface_definitionipx_interface_definition34,684
#define IPX_FRAME_NONE	IPX_FRAME_NONE39,816
#define IPX_FRAME_SNAP	IPX_FRAME_SNAP40,842
#define IPX_FRAME_8022	IPX_FRAME_802241,868
#define IPX_FRAME_ETHERII	IPX_FRAME_ETHERII42,894
#define IPX_FRAME_8023	IPX_FRAME_802343,922
#define IPX_FRAME_TR_8022 IPX_FRAME_TR_802244,948
#define IPX_SPECIAL_NONE	IPX_SPECIAL_NONE46,1025
#define IPX_PRIMARY	IPX_PRIMARY47,1052
#define IPX_INTERNAL	IPX_INTERNAL48,1075
}	ipx_interface_definition;ipx_interface_definition50,1138
typedef struct ipx_config_dataipx_config_data52,1168
}	ipx_config_data;ipx_config_data56,1290
struct ipx_route_defipx_route_def62,1370
#define IPX_ROUTE_NO_ROUTER	66,1456
#define IPX_RT_SNAP	70,1590
#define IPX_RT_8022	71,1613
#define IPX_RT_BLUEBOOK	72,1636
#define IPX_RT_ROUTED	73,1663
#define SIOCAIPXITFCRT	76,1692
#define SIOCAIPXPRISLT	77,1735
#define SIOCIPXCFGDATA	78,1780
#define SIOCIPXNCPCONN	79,1825

include/linux/tqueue.h,532
#define _LINUX_TQUEUE_H14,354
struct tq_struct tq_struct43,1536
typedef struct tq_struct * task_queue;task_queue50,1765
#define DECLARE_TASK_QUEUE(DECLARE_TASK_QUEUE52,1805
extern task_queue tq_timer,54,1857
extern task_queue tq_timer, tq_immediate,54,1857
extern task_queue tq_timer, tq_immediate, tq_scheduler,54,1857
extern task_queue tq_timer, tq_immediate, tq_scheduler, tq_disk;54,1857
extern spinlock_t tqueue_lock;78,2532
extern __inline__ void queue_task(83,2585
extern __inline__ void run_task_queue(98,2950

include/linux/ppp.h,0

include/linux/sysv_fs.h,2061
#define _LINUX_SYSV_FS_H2,25
#define __packed2__ 16,308
typedef u32 coh_ulong;coh_ulong40,1024
static inline coh_ulong to_coh_ulong 42,1048
static inline u32 from_coh_ulong 47,1155
typedef u16 sysv_ino_t;sysv_ino_t54,1296
typedef u32 sysv_zone_t;sysv_zone_t61,1486
#define SYSV_BADBL_INO	70,1808
#define SYSV_ROOT_INO	71,1864
#define XENIX_NICINOD	75,1957
#define XENIX_NICFREE	76,2019
struct xenix_super_block xenix_super_block77,2091
struct xenix_freelist_chunk xenix_freelist_chunk107,3459
#define SYSV_NICINOD	116,3804
#define SYSV_NICFREE	117,3865
struct sysv4_super_block sysv4_super_block120,3976
struct sysv4_freelist_chunk sysv4_freelist_chunk152,5301
struct sysv2_super_block sysv2_super_block158,5476
struct sysv2_freelist_chunk sysv2_freelist_chunk186,6792
#define COH_NICINOD	192,6978
#define COH_NICFREE	193,7038
struct coh_super_block coh_super_block194,7107
struct coh_freelist_chunk coh_freelist_chunk219,8287
struct sysv_inode sysv_inode227,8474
#define COH_KLUDGE_SYMLINK_MODE	283,10606
#define COH_KLUDGE_NOT_SYMLINK	284,10658
extern inline mode_t from_coh_imode(285,10743
extern inline unsigned short to_coh_imode(292,10890
#define XENIX_LINK_MAX	303,11151
#define SYSV_LINK_MAX	304,11187
#define COH_LINK_MAX	305,11229
#define SYSV_NAMELEN	315,11560
struct sysv_dir_entry sysv_dir_entry317,11633
#define SYSV_DIRSIZE	322,11753
#define FSTYPE_XENIX	330,11910
#define FSTYPE_SYSV4	331,11933
#define FSTYPE_SYSV2	332,11956
#define FSTYPE_COH	333,11979
#define SYSV_MAGIC_BASE	335,12001
#define XENIX_SUPER_MAGIC	337,12038
#define SYSV4_SUPER_MAGIC	338,12095
#define SYSV2_SUPER_MAGIC	339,12152
#define COH_SUPER_MAGIC	340,12209
sv_get_hash_table 346,12412
sv_getblk 353,12681
sv_bread 360,12932
extern struct inode_operations sysv_file_inode_operations;406,15156
extern struct inode_operations sysv_file_inode_operations_with_bmap;407,15215
extern struct inode_operations sysv_dir_inode_operations;408,15284
extern struct inode_operations sysv_symlink_inode_operations;409,15342

include/linux/sysv_fs_i.h,69
#define _SYSV_FS_I2,19
struct sysv_inode_info sysv_inode_info7,90

include/linux/sysv_fs_sb.h,1727
#define _SYSV_FS_SB2,20
struct sysv_sb_info sysv_sb_info13,433
#define sv_type	72,4082
#define sv_block_size	73,4119
#define sv_block_size_1	74,4167
#define sv_block_size_bits	75,4219
#define sv_block_size_inc_bits	76,4276
#define sv_block_size_dec_bits	77,4341
#define sv_convert	78,4406
#define sv_kludge_symlinks	79,4448
#define sv_truncate	80,4505
#define sv_link_max	81,4549
#define sv_inodes_per_block	82,4593
#define sv_inodes_per_block_1	83,4652
#define sv_inodes_per_block_bits	84,4715
#define sv_ind_per_block	85,4783
#define sv_ind_per_block_1	86,4836
#define sv_ind_per_block_bits	87,4893
#define sv_ind_per_block_2	88,4956
#define sv_ind_per_block_2_1	89,5013
#define sv_ind_per_block_2_bits	90,5074
#define sv_ind_per_block_3	91,5141
#define sv_ind_per_block_block_size_1	92,5198
#define sv_ind_per_block_block_size_bits	93,5276
#define sv_ind_per_block_2_block_size_1	94,5359
#define sv_ind_per_block_2_block_size_bits	95,5441
#define sv_ind0_size	96,5528
#define sv_ind1_size	97,5574
#define sv_ind2_size	98,5620
#define sv_toobig_block	99,5666
#define sv_block_base	100,5718
#define sv_fic_size	101,5766
#define sv_flc_size	102,5810
#define sv_bh1	103,5854
#define sv_bh2	104,5889
#define sv_sbd1	105,5924
#define sv_sbd2	106,5961
#define sv_sb_fic_count	107,5998
#define sv_sb_fic_inodes	108,6050
#define sv_sb_total_free_inodes	109,6103
#define sv_sb_flc_count	110,6170
#define sv_sb_flc_blocks	111,6222
#define sv_sb_total_free_blocks	112,6275
#define sv_sb_time	113,6342
#define sv_sb_state	114,6384
#define sv_firstinodezone	115,6428
#define sv_firstdatazone	116,6483
#define sv_ninodes	117,6536
#define sv_ndatazones	118,6578
#define sv_nzones	119,6626

include/linux/kernel_stat.h,177
#define _LINUX_KERNEL_STAT_H2,29
#define DK_NDRIVE 14,287
struct kernel_stat kernel_stat16,308
extern struct kernel_stat kstat;35,907
extern inline int kstat_irqs 40,1010

include/linux/in_systm.h,150
#define _LINUX_IN_SYSTM_H19,714
typedef u_short	n_short;n_short28,1000
typedef u_long	n_long;n_long29,1062
typedef u_long	n_time;n_time30,1122

include/linux/if_slip.h,358
#define __LINUX_SLIP_H9,172
#define		SL_MODE_SLIP	11,196
#define		SL_MODE_CSLIP	12,221
#define 	SL_MODE_KISS	13,247
#define		SL_OPT_SIXBIT	15,273
#define		SL_OPT_ADAPTIVE	16,299
#define SIOCSKEEPALIVE	22,392
#define SIOCGKEEPALIVE	23,468
#define SIOCSOUTFILL	24,539
#define	SIOCGOUTFILL	25,606
#define SIOCSLEASE	26,673
#define	SIOCGLEASE	27,741

include/linux/etherdevice.h,85
#define _LINUX_ETHERDEVICE_H25,879
static __inline__ void eth_copy_and_sum 45,1608

include/linux/netdevice.h,1945
#define _LINUX_NETDEVICE_H25,900
#define MAX_ADDR_LEN	44,1217
#define LL_MAX_HEADER	52,1446
#define LL_MAX_HEADER	55,1533
#define LL_MAX_HEADER	57,1564
#define MAX_HEADER 63,1697
#define MAX_HEADER 65,1736
struct net_device_statsnet_device_stats73,1878
struct net_fastroute_statsnet_fastroute_stats107,3141
        IF_PORT_UNKNOWN 118,3287
        IF_PORT_10BASE2,119,3316
        IF_PORT_10BASET,120,3341
        IF_PORT_AUI,121,3366
        IF_PORT_100BASET,122,3387
        IF_PORT_100BASETX,123,3413
        IF_PORT_100BASEFX124,3440
extern const char *if_port_text[129,3489
struct dev_mc_listdev_mc_list141,3660
struct hh_cachehh_cache150,3811
struct devicedevice172,4497
#define HAVE_MULTICAST	281,8017
#define HAVE_SET_MAC_ADDR 283,8095
#define HAVE_PRIVATE_IOCTL286,8194
#define HAVE_SET_CONFIG289,8298
#define HAVE_HEADER_CACHE292,8394
#define HAVE_CHANGE_MTU298,8629
#define NETDEV_FASTROUTE_HMASK 311,9062
struct packet_type packet_type318,9227
extern struct device		loopback_dev;332,9584
extern struct device		*dev_base;333,9640
extern struct packet_type 	*ptype_base[334,9692
extern int			netdev_dropping;335,9755
extern int			net_cpu_congestion;336,9785
typedef int gifconf_func_t(gifconf_func_t356,10741
extern __inline__ int unregister_gifconf(358,10891
#define HAVE_NETIF_RX 363,10995
extern int		netdev_nit;373,11392
extern atomic_t		dev_lockct;377,11511
extern __inline__ void  dev_lock_list(384,11644
extern __inline__ void  dev_unlock_list(389,11719
extern __inline__ void dev_lock_wait(405,12111
extern __inline__ void dev_init_buffers(413,12236
extern int		netdev_dropping;443,13594
extern int		netdev_max_backlog;444,13623
extern atomic_t		netdev_rx_dropped;445,13655
extern unsigned long	netdev_fc_xoff;446,13691
extern int		netdev_fastroute;448,13756
extern int		netdev_fastroute_obstacles;449,13786
extern struct net_fastroute_stats dev_fastroute_stat;451,13880

include/linux/tty_driver.h,759
#define _LINUX_TTY_DRIVER_H2,28
struct tty_driver tty_driver120,4435
#define TTY_DRIVER_MAGIC	182,6721
#define TTY_DRIVER_INSTALLED	201,7492
#define TTY_DRIVER_RESET_TERMIOS	202,7529
#define TTY_DRIVER_REAL_RAW	203,7569
#define TTY_DRIVER_TYPE_SYSTEM	206,7629
#define TTY_DRIVER_TYPE_CONSOLE	207,7668
#define TTY_DRIVER_TYPE_SERIAL	208,7708
#define TTY_DRIVER_TYPE_PTY	209,7747
#define TTY_DRIVER_TYPE_SCC	210,7783
#define TTY_DRIVER_TYPE_SYSCONS	211,7836
#define SYSTEM_TYPE_TTY	214,7925
#define SYSTEM_TYPE_CONSOLE	215,7958
#define SYSTEM_TYPE_SYSCONS	216,7994
#define SYSTEM_TYPE_SYSPTMX	217,8030
#define PTY_TYPE_MASTER	220,8112
#define PTY_TYPE_SLAVE	221,8145
#define SERIAL_TYPE_NORMAL	224,8211
#define SERIAL_TYPE_CALLOUT	225,8240

include/linux/personality.h,558
#define _PERSONALITY_H2,23
#define STICKY_TIMEOUTS	9,167
#define WHOLE_SECONDS	10,202
#define ADDR_LIMIT_32BIT	11,235
#define PER_MASK	16,388
#define PER_LINUX	17,415
#define PER_LINUX_32BIT	18,443
#define PER_SVR4	19,496
#define PER_SVR3	20,541
#define PER_SCOSVR3	21,586
#define PER_WYSEV386	22,650
#define PER_ISCR4	23,699
#define PER_BSD	24,745
#define PER_XENIX	25,772
#define PER_LINUX32	26,818
typedef void (*lcall7_func)lcall7_func29,896
struct exec_domain exec_domain37,1211
extern struct exec_domain default_exec_domain;47,1426

include/linux/if_plip.h,158
#define _LINUX_IF_PLIP_H12,347
#define	SIOCDEVPLIP	16,401
struct plipconfplipconf18,437
#define PLIP_GET_TIMEOUT	25,530
#define PLIP_SET_TIMEOUT	26,559

include/linux/serial_reg.h,2481
#define _LINUX_SERIAL_REG_H15,398
#define UART_RX	17,427
#define UART_TX	18,481
#define UART_DLL	19,536
#define UART_DLM	20,593
#define UART_IER	21,651
#define UART_IIR	22,707
#define UART_FCR	23,759
#define UART_EFR	24,811
#define UART_LCR	26,900
#define UART_MCR	27,952
#define UART_LSR	28,1005
#define UART_MSR	29,1056
#define UART_SCR	30,1108
#define UART_FCR_ENABLE_FIFO	36,1238
#define UART_FCR_CLEAR_RCVR	37,1294
#define UART_FCR_CLEAR_XMIT	38,1353
#define UART_FCR_DMA_SELECT	39,1412
#define UART_FCR_TRIGGER_MASK	40,1472
#define UART_FCR_TRIGGER_1	41,1545
#define UART_FCR_TRIGGER_4	42,1609
#define UART_FCR_TRIGGER_8	43,1673
#define UART_FCR_TRIGGER_14	44,1737
#define UART_FCR6_R_TRIGGER_8	46,1829
#define UART_FCR6_R_TRIGGER_16	47,1904
#define UART_FCR6_R_TRIGGER_24 48,1980
#define UART_FCR6_R_TRIGGER_28	49,2057
#define UART_FCR6_T_TRIGGER_16	50,2134
#define UART_FCR6_T_TRIGGER_8	51,2212
#define UART_FCR6_T_TRIGGER_24 52,2288
#define UART_FCR6_T_TRIGGER_30	53,2367
#define UART_FCR7_64BYTE	55,2472
#define UART_LCR_DLAB	63,2731
#define UART_LCR_SBC	64,2789
#define UART_LCR_SPAR	65,2839
#define UART_LCR_EPAR	66,2889
#define UART_LCR_PARITY	67,2941
#define UART_LCR_STOP	68,2990
#define UART_LCR_WLEN5 69,3063
#define UART_LCR_WLEN6 70,3117
#define UART_LCR_WLEN7 71,3171
#define UART_LCR_WLEN8 72,3225
#define UART_LSR_TEMT	77,3345
#define UART_LSR_THRE	78,3396
#define UART_LSR_BI	79,3458
#define UART_LSR_FE	80,3515
#define UART_LSR_PE	81,3568
#define UART_LSR_OE	82,3622
#define UART_LSR_DR	83,3677
#define UART_IIR_NO_INT	88,3807
#define UART_IIR_ID	89,3864
#define UART_IIR_MSI	91,3922
#define UART_IIR_THRI	92,3977
#define UART_IIR_RDI	93,4045
#define UART_IIR_RLSI	94,4101
#define UART_IER_MSI	99,4236
#define UART_IER_RLSI	100,4298
#define UART_IER_THRI	101,4369
#define UART_IER_RDI	102,4443
#define UART_IERX_SLEEP 107,4612
#define UART_MCR_LOOP	112,4734
#define UART_MCR_OUT2	113,4793
#define UART_MCR_OUT1	114,4842
#define UART_MCR_RTS	115,4891
#define UART_MCR_DTR	116,4938
#define UART_MSR_DCD	121,5052
#define UART_MSR_RI	122,5104
#define UART_MSR_DSR	123,5150
#define UART_MSR_CTS	124,5197
#define UART_MSR_DDCD	125,5243
#define UART_MSR_TERI	126,5286
#define UART_MSR_DDSR	127,5348
#define UART_MSR_DCTS	128,5391
#define UART_MSR_ANY_DELTA 129,5434
#define UART_EFR_CTS	135,5606
#define UART_EFR_RTS	136,5655
#define UART_EFR_SCD	137,5704
#define UART_EFR_ECB	138,5761

include/linux/tty_ldisc.h,140
#define _LINUX_TTY_LDISC_H2,27
struct tty_ldisc tty_ldisc103,4091
#define TTY_LDISC_MAGIC	134,5108
#define LDISC_FLAG_DEFINED	136,5140

include/linux/tty_flip.h,161
#define _LINUX_TTY_FLIP_H2,26
#define _INLINE_ 5,81
#define _INLINE_ 7,111
_INLINE_ void tty_insert_flip_char(10,154
_INLINE_ void tty_schedule_flip(20,391

include/linux/umsdos_fs.h,1593
#define LINUX_UMSDOS_FS_H2,26
#define UMS_DEBUG 5,54
#define UMSDOS_PARANOIA 7,136
#define UMSDOS_VERSION	9,163
#define UMSDOS_RELEASE	10,188
#define UMSDOS_ROOT_INO 12,214
#define UMSDOS_EMD_FILE	15,296
#define UMSDOS_EMD_NAMELEN	16,336
#define UMSDOS_PSDROOT_NAME	17,366
#define UMSDOS_PSDROOT_LEN	18,402
#	define PRINTK(PRINTK46,1071
#		define Printk(Printk48,1111
#		define Printk(Printk50,1147
struct umsdos_fake_info umsdos_fake_info55,1184
#define UMSDOS_MAXNAME	60,1241
struct umsdos_dirent umsdos_dirent64,1460
#define UMSDOS_HIDDEN	84,2260
#define UMSDOS_HLINK	85,2332
#define UMSDOS_REC_SIZE	93,2624
struct umsdos_info umsdos_info97,2707
#define UMSDOS_READDIR_DOS 114,3311
#define UMSDOS_UNLINK_DOS 115,3392
#define UMSDOS_RMDIR_DOS 116,3471
#define UMSDOS_STAT_DOS 117,3550
#define UMSDOS_CREAT_EMD 120,3679
#define UMSDOS_UNLINK_EMD 121,3740
#define UMSDOS_READDIR_EMD 122,3809
#define UMSDOS_GETVERSION 123,3880
#define UMSDOS_INIT_EMD 124,3960
#define UMSDOS_DOS_SETUP 125,4040
#define UMSDOS_RENAME_DOS 127,4127
struct umsdos_ioctl umsdos_ioctl129,4233
#define EDM_ENTRY_ISUSED(EDM_ENTRY_ISUSED168,5331
extern struct inode_operations umsdos_dir_inode_operations;176,5447
extern struct file_operations umsdos_file_operations;177,5507
extern struct inode_operations umsdos_file_inode_operations;178,5561
extern struct inode_operations umsdos_file_inode_operations_no_bmap;179,5622
extern struct inode_operations umsdos_file_inode_operations_readpage;180,5691
extern struct inode_operations umsdos_symlink_inode_operations;181,5761

include/linux/umsdos_fs_i.h,129
#define UMSDOS_FS_I_H2,22
struct dir_locking_info dir_locking_info49,1705
struct umsdos_inode_info umsdos_inode_info60,2043

include/linux/ax25.h,1205
#define	AX25_KERNEL_H7,155
#define AX25_MTU	9,178
#define AX25_MAX_DIGIS 10,199
#define AX25_WINDOW	12,226
#define AX25_T1	13,248
#define AX25_N2	14,267
#define AX25_T3	15,286
#define AX25_T2	16,305
#define	AX25_BACKOFF	17,324
#define	AX25_EXTSEQ	18,347
#define	AX25_PIDINCL	19,369
#define AX25_IDLE	20,392
#define AX25_PACLEN	21,412
#define AX25_IAMDIGI	22,435
#define AX25_KILL	24,460
#define SIOCAX25GETUID	26,482
#define SIOCAX25ADDUID	27,527
#define SIOCAX25DELUID	28,572
#define SIOCAX25NOUID	29,617
#define SIOCAX25OPTRT	30,661
#define SIOCAX25CTLCON	31,705
#define SIOCAX25GETINFO	32,750
#define SIOCAX25ADDFWD	33,796
#define SIOCAX25DELFWD	34,842
#define AX25_SET_RT_IPMODE	36,889
#define AX25_NOUID_DEFAULT	38,919
#define AX25_NOUID_BLOCK	39,948
} ax25_address;ax25_address43,1051
struct sockaddr_ax25 sockaddr_ax2545,1068
#define sax25_uid	52,1211
struct full_sockaddr_ax25 full_sockaddr_ax2554,1243
struct ax25_routes_struct ax25_routes_struct59,1353
struct ax25_route_opt_struct ax25_route_opt_struct66,1503
struct ax25_ctl_struct ax25_ctl_struct73,1610
struct ax25_info_struct ax25_info_struct83,1947
struct ax25_fwd_struct ax25_fwd_struct93,2165

include/linux/apm_bios.h,1876
#define _LINUX_APM_H2,21
typedef unsigned short	apm_event_t;apm_event_t19,665
typedef unsigned short	apm_eventinfo_t;apm_eventinfo_t20,701
#define APM_40	24,761
#define APM_CS	25,782
#define APM_CS_16	26,811
#define APM_DS	27,842
struct apm_bios_info apm_bios_info29,875
#define APM_16_BIT_SUPPORT	42,1167
#define APM_32_BIT_SUPPORT	43,1201
#define APM_IDLE_SLOWS_CLOCK	44,1235
#define APM_BIOS_DISABLED 45,1271
#define APM_BIOS_DISENGAGED 46,1310
#define APM_MAX_EVENTS	51,1392
struct apm_bios_struct apm_bios_struct56,1452
#define APM_BIOS_MAGIC	72,1748
extern struct apm_bios_info	apm_bios_info;77,1805
#define APM_STATE_READY	94,2216
#define APM_STATE_STANDBY	95,2248
#define APM_STATE_SUSPEND	96,2281
#define APM_STATE_OFF	97,2314
#define APM_STATE_BUSY	98,2344
#define APM_STATE_REJECT	99,2375
#define APM_SYS_STANDBY	104,2451
#define APM_SYS_SUSPEND	105,2483
#define APM_NORMAL_RESUME	106,2515
#define APM_CRITICAL_RESUME	107,2548
#define APM_LOW_BATTERY	108,2583
#define APM_POWER_STATUS_CHANGE	109,2615
#define APM_UPDATE_TIME	110,2654
#define APM_CRITICAL_SUSPEND	111,2686
#define APM_USER_STANDBY	112,2722
#define APM_USER_SUSPEND	113,2754
#define APM_STANDBY_RESUME	114,2786
#define APM_CAPABILITY_CHANGE 115,2820
#define APM_SUCCESS	120,2882
#define APM_DISABLED	121,2908
#define APM_CONNECTED	122,2935
#define APM_NOT_CONNECTED	123,2963
#define APM_16_CONNECTED	124,2994
#define APM_16_UNSUPPORTED	125,3024
#define APM_32_CONNECTED	126,3056
#define APM_32_UNSUPPORTED	127,3086
#define APM_BAD_DEVICE	128,3118
#define APM_BAD_PARAM	129,3147
#define APM_NOT_ENGAGED	130,3175
#define APM_BAD_FUNCTION 131,3205
#define APM_RESUME_DISABLED	132,3242
#define APM_BAD_STATE	133,3275
#define APM_NO_EVENTS	134,3303
#define APM_NOT_PRESENT	135,3331
#define APM_IOC_STANDBY	140,3411
#define APM_IOC_SUSPEND	141,3448

include/linux/mpp.h,26
#define _LINUX_MPP_H2,21

include/linux/coda.h,7240
#define _CODA_HEADER_60,2118
#define CODA_MAXSYMLINKS 70,2258
typedef unsigned long u_long;u_long75,2352
typedef unsigned int u_int;u_int76,2382
typedef unsigned short u_short;u_short77,2410
typedef u_long ino_t;ino_t78,2442
typedef u_long dev_t;dev_t79,2464
typedef void * caddr_t;caddr_t80,2486
typedef unsigned __int64 u_quad_t;u_quad_t82,2521
typedef unsigned long long u_quad_t;u_quad_t84,2563
#define inline87,2608
struct timespec timespec89,2624
typedef unsigned long long u_quad_t;u_quad_t96,2779
#define cdev_t 102,2882
#define _UQUAD_T_ 104,2972
typedef unsigned long long u_quad_t;u_quad_t105,2992
#define cdev_t 108,3042
typedef unsigned char u_int8_t;u_int8_t112,3091
struct timespec timespec113,3123
#define CODA_MAXNAMLEN 123,3273
#define CODA_MAXPATHLEN 124,3302
#define CODA_MAXSYMLINK 125,3332
#define	C_O_READ	130,3453
#define	C_O_WRITE 131,3476
#define C_O_TRUNC 132,3506
#define C_O_EXCL	133,3536
#define C_O_CREAT	134,3559
#define C_M_READ 137,3628
#define C_M_WRITE 138,3652
#define C_A_C_OK 141,3709
#define C_A_R_OK 142,3782
#define C_A_W_OK 143,3851
#define C_A_X_OK 144,3921
#define C_A_F_OK 145,3993
#define _VENUS_DIRENT_T_ 150,4084
struct venus_dirent venus_dirent151,4111
#define DIRSIZ(DIRSIZ159,4462
#define	CDT_UNKNOWN	165,4621
#define	CDT_FIFO	166,4644
#define	CDT_CHR	167,4664
#define	CDT_DIR	168,4684
#define	CDT_BLK	169,4704
#define	CDT_REG	170,4724
#define	CDT_LNK	171,4744
#define	CDT_SOCK	172,4764
#define	CDT_WHT	173,4784
#define	IFTOCDT(IFTOCDT178,4873
#define	CDTTOIF(CDTTOIF179,4922
#define _FID_T_	184,4990
typedef u_long VolumeId;VolumeId185,5008
typedef u_long VnodeId;VnodeId186,5033
typedef u_long Unique_t;Unique_t187,5057
typedef u_long FileVersion;FileVersion188,5082
#define _VICEFID_T_	192,5139
typedef struct ViceFid ViceFid193,5161
} ViceFid;ViceFid197,5247
static __inline__ ino_t  coda_f2i(202,5298
#define coda_f2i(coda_f2i213,5579
#define u_int32_t 219,5715
#define _VUID_T_224,5772
typedef u_int32_t vuid_t;vuid_t225,5789
typedef u_int32_t vgid_t;vgid_t226,5815
#define _CODACRED_T_230,5884
struct coda_cred coda_cred231,5905
#define _VENUS_VATTR_T_242,6218
enum coda_vtype	coda_vtype246,6286
enum coda_vtype	{ C_VNON,246,6286
enum coda_vtype	{ C_VNON, C_VREG,246,6286
enum coda_vtype	{ C_VNON, C_VREG, C_VDIR,246,6286
enum coda_vtype	{ C_VNON, C_VREG, C_VDIR, C_VBLK,246,6286
enum coda_vtype	{ C_VNON, C_VREG, C_VDIR, C_VBLK, C_VCHR,246,6286
enum coda_vtype	{ C_VNON, C_VREG, C_VDIR, C_VBLK, C_VCHR, C_VLNK,246,6286
enum coda_vtype	{ C_VNON, C_VREG, C_VDIR, C_VBLK, C_VCHR, C_VLNK, C_VSOCK,246,6286
enum coda_vtype	{ C_VNON, C_VREG, C_VDIR, C_VBLK, C_VCHR, C_VLNK, C_VSOCK, C_VFIFO,246,6286
enum coda_vtype	{ C_VNON, C_VREG, C_VDIR, C_VBLK, C_VCHR, C_VLNK, C_VSOCK, C_VFIFO, C_VBAD 246,6286
struct coda_vattr coda_vattr248,6381
#define CODA_ROOT	273,7256
#define CODA_SYNC	274,7276
#define CODA_OPEN	275,7296
#define CODA_CLOSE	276,7316
#define CODA_IOCTL	277,7337
#define CODA_GETATTR	278,7358
#define CODA_SETATTR	279,7381
#define CODA_ACCESS	280,7404
#define CODA_LOOKUP	281,7426
#define CODA_CREATE	282,7449
#define CODA_REMOVE	283,7472
#define CODA_LINK	284,7495
#define CODA_RENAME	285,7516
#define CODA_MKDIR	286,7539
#define CODA_RMDIR	287,7561
#define CODA_READDIR	288,7583
#define CODA_SYMLINK	289,7607
#define CODA_READLINK	290,7631
#define CODA_FSYNC	291,7656
#define CODA_INACTIVE	292,7678
#define CODA_VGET	293,7703
#define CODA_SIGNAL	294,7724
#define CODA_REPLACE	295,7747
#define CODA_FLUSH 296,7771
#define CODA_PURGEUSER 297,7799
#define CODA_ZAPFILE 298,7827
#define CODA_ZAPDIR 299,7855
#define CODA_PURGEFID 300,7883
#define CODA_OPEN_BY_PATH 301,7911
#define CODA_RESOLVE 302,7940
#define CODA_REINTEGRATE 303,7968
#define CODA_NCALLS 304,7996
#define DOWNCALL(DOWNCALL306,8020
#define VC_MAXDATASIZE	308,8098
#define VC_MAXMSGSIZE 309,8130
#define CIOC_KERNEL_VERSION 312,8255
#define CODA_KERNEL_VERSION 315,8364
#define CODA_KERNEL_VERSION 317,8440
#define CODA_KERNEL_VERSION 320,8536
struct coda_in_hdr coda_in_hdr325,8614
struct coda_out_hdr coda_out_hdr335,8999
struct coda_root_out coda_root_out342,9127
struct coda_root_in coda_root_in347,9200
struct coda_open_in coda_open_in355,9323
struct coda_open_out coda_open_out361,9409
struct coda_close_in coda_close_in369,9516
struct coda_close_out coda_close_out375,9603
struct coda_ioctl_in coda_ioctl_in380,9678
struct coda_ioctl_out coda_ioctl_out389,9839
struct coda_getattr_in coda_getattr_in397,9977
struct coda_getattr_out coda_getattr_out402,10051
struct coda_setattr_in coda_setattr_in409,10165
struct coda_setattr_out coda_setattr_out415,10267
struct coda_access_in coda_access_in420,10352
struct coda_access_out coda_access_out426,10440
#define CLU_CASE_SENSITIVE 432,10518
#define CLU_CASE_INSENSITIVE 433,10554
struct  coda_lookup_in coda_lookup_in436,10610
struct coda_lookup_out coda_lookup_out443,10760
struct coda_create_in coda_create_in451,10870
struct coda_create_out coda_create_out460,11044
struct coda_remove_in coda_remove_in468,11174
struct coda_remove_out coda_remove_out474,11291
struct coda_link_in coda_link_in479,11373
struct coda_link_out coda_link_out486,11599
struct coda_rename_in coda_rename_in492,11682
struct coda_rename_out coda_rename_out500,11818
struct coda_mkdir_in coda_mkdir_in505,11894
struct coda_mkdir_out coda_mkdir_out512,12041
struct coda_rmdir_in coda_rmdir_in520,12169
struct coda_rmdir_out coda_rmdir_out526,12285
struct coda_readdir_in coda_readdir_in531,12362
struct coda_readdir_out coda_readdir_out538,12467
struct coda_symlink_in coda_symlink_in545,12614
struct coda_symlink_out coda_symlink_out553,12791
struct coda_readlink_in coda_readlink_in558,12871
struct coda_readlink_out coda_readlink_out563,12946
struct coda_fsync_in coda_fsync_in571,13094
struct coda_fsync_out coda_fsync_out576,13166
struct coda_inactive_in coda_inactive_in581,13251
struct coda_vget_in coda_vget_in587,13343
struct coda_vget_out coda_vget_out592,13414
struct coda_purgeuser_out coda_purgeuser_out605,13711
struct coda_zapfile_out coda_zapfile_out612,13861
struct coda_zapdir_out coda_zapdir_out619,14004
struct coda_zapvnode_out coda_zapvnode_out626,14150
struct coda_purgefid_out coda_purgefid_out634,14321
struct coda_rdwr_in coda_rdwr_in640,14419
struct coda_rdwr_out coda_rdwr_out650,14602
struct coda_replace_out coda_replace_out660,14800
struct coda_open_by_path_in coda_open_by_path_in667,14966
struct coda_open_by_path_out coda_open_by_path_out673,15060
#define CODA_NOCACHE 683,15331
union inputArgs inputArgs685,15373
union outputArgs outputArgs710,16288
union coda_downcalls coda_downcalls732,17126
#define PIOCPARM_MASK 748,17540
struct ViceIoctl ViceIoctl749,17573
struct PioctlData PioctlData756,17852
struct PioctlData PioctlData763,17976
#define	CODA_CONTROL	770,18082
#define CODA_CONTROLLEN 771,18115
#define	CTL_VOL	772,18151
#define	CTL_VNO	773,18172
#define	CTL_UNI	774,18193
#define CTL_INO 775,18214
#define	CTL_FILE	776,18249
#define	IS_CTL_FID(IS_CTL_FID779,18286

include/linux/cyclades.h,10618
#define _LINUX_CYCLADES_H57,1963
struct cyclades_monitor cyclades_monitor59,1990
struct cyclades_idle_stats cyclades_idle_stats71,2361
#define CYCLADES_MAGIC 82,2869
#define CYGETMON 84,2901
#define CYGETTHRESH 85,2942
#define CYSETTHRESH 86,2983
#define CYGETDEFTHRESH 87,3024
#define CYSETDEFTHRESH 88,3065
#define CYGETTIMEOUT 89,3106
#define CYSETTIMEOUT 90,3147
#define CYGETDEFTIMEOUT 91,3188
#define CYSETDEFTIMEOUT 92,3229
#define CYSETRFLOW	93,3270
#define CYGETRFLOW	94,3299
#define CYSETRTSDTR_INV	95,3328
#define CYGETRTSDTR_INV	96,3362
#define CYZSETPOLLCYCLE	97,3396
#define CYZGETPOLLCYCLE	98,3430
#define CYGETCD1400VER	99,3464
#define CYGETCARDINFO	100,3497
#define	CYSETWAIT	101,3529
#define	CYGETWAIT	102,3557
#define CZIOC 106,3640
#define CZ_NBOARDS 107,3675
#define CZ_BOOT_START 108,3712
#define CZ_BOOT_DATA 109,3749
#define CZ_BOOT_END 110,3786
#define CZ_TEST 111,3823
#define CZ_DEF_POLL	113,3861
#define MAX_BOARD 115,3890
#define MAX_DEV 116,3949
#define	CYZ_MAX_SPEED	117,4013
#define	CYZ_FIFO_SIZE	119,4043
#define CYZ_BOOT_NWORDS 121,4069
struct CYZ_BOOT_CTRL CYZ_BOOT_CTRL122,4099
typedef unsigned long	ucdouble;ucdouble142,4665
typedef unsigned int	uclong;uclong143,4721
typedef unsigned long	uclong;uclong145,4781
typedef unsigned short	ucshort;ucshort147,4843
typedef unsigned char	ucchar;ucchar148,4899
#define	DP_WINDOW_SIZE	154,4985
#define	ZE_DP_WINDOW_SIZE	155,5047
#define	CTRL_WINDOW_SIZE	157,5133
struct	CUSTOM_REG CUSTOM_REG165,5368
struct RUNTIME_9060 RUNTIME_9060192,6541
#define	WIN_RAM	225,7937
#define	WIN_CREG	226,8002
#define	TIMER_BY_1M	230,8110
#define	TIMER_BY_256K	231,8162
#define	TIMER_BY_128K	232,8218
#define	TIMER_BY_32K	233,8274
#define	MAX_CHAN	248,8635
#define ID_ADDRESS	252,8742
#define	ZFIRM_ID	253,8805
#define	ZFIRM_HLT	254,8858
#define	ZFIRM_RST	255,8928
#define	ZF_TINACT_DEF	257,8994
#define	ZF_TINACT	259,9074
struct	FIRM_ID FIRM_ID261,9107
#define	C_OS_LINUX	268,9252
#define	C_CH_DISABLE	272,9333
#define	C_CH_TXENABLE	273,9391
#define	C_CH_RXENABLE	274,9449
#define	C_CH_ENABLE	275,9507
#define	C_CH_LOOPBACK	276,9566
#define	C_PR_NONE	280,9648
#define	C_PR_ODD	281,9688
#define C_PR_EVEN	282,9726
#define C_PR_MARK	283,9766
#define C_PR_SPACE	284,9806
#define C_PR_PARITY	285,9848
#define	C_PR_DISCARD	287,9880
#define C_PR_IGNORE	288,9952
#define C_DL_CS5	292,10060
#define C_DL_CS6	293,10088
#define C_DL_CS7	294,10116
#define C_DL_CS8	295,10144
#define	C_DL_CS	296,10172
#define C_DL_1STOP	297,10200
#define C_DL_15STOP	298,10230
#define C_DL_2STOP	299,10261
#define	C_DL_STOP	300,10291
#define	C_IN_DISABLE	304,10354
#define	C_IN_TXBEMPTY	305,10417
#define	C_IN_TXLOWWM	306,10472
#define	C_IN_RXHIWM	307,10530
#define	C_IN_RXNNDT	308,10587
#define	C_IN_MDCD	309,10647
#define	C_IN_MDSR	310,10699
#define	C_IN_MRI	311,10751
#define	C_IN_MCTS	312,10801
#define	C_IN_RXBRK	313,10853
#define	C_IN_PR_ERROR	314,10904
#define	C_IN_FR_ERROR	315,10956
#define C_IN_OVR_ERROR 316,11007
#define C_IN_RXOFL	317,11067
#define C_IN_IOCTLW	318,11127
#define	C_FL_OXX	322,11211
#define	C_FL_IXX	323,11274
#define C_FL_OIXANY	324,11337
#define	C_FL_SWFLOW	325,11400
#define	C_FS_TXIDLE	329,11451
#define	C_FS_SENDING	330,11521
#define	C_FS_SWFLOW	331,11580
#define	C_RS_DCD	335,11692
#define	C_RS_DSR	336,11729
#define	C_RS_RI	337,11767
#define	C_RS_CTS	338,11804
#define	C_RS_RTS	339,11842
#define	C_RS_DTR	340,11880
#define	C_CM_RESET	344,11950
#define	C_CM_IOCTL	345,12001
#define	C_CM_IOCTLW	346,12048
#define	C_CM_IOCTLM	347,12112
#define	C_CM_SENDXOFF	348,12166
#define	C_CM_SENDXON	349,12210
#define C_CM_CLFLOW	350,12252
#define	C_CM_SENDBRK	351,12312
#define	C_CM_INTBACK	352,12356
#define	C_CM_SET_BREAK	353,12404
#define	C_CM_CLR_BREAK	354,12451
#define	C_CM_CMD_DONE	355,12499
#define	C_CM_TINACT	356,12555
#define	C_CM_IRQ_ENBL	357,12612
#define	C_CM_IRQ_DSBL	358,12678
#define	C_CM_ACK_ENBL	359,12745
#define	C_CM_ACK_DSBL	360,12814
#define	C_CM_FLUSH_RX	361,12879
#define	C_CM_FLUSH_TX	362,12931
#define	C_CM_TXBEMPTY	364,12984
#define	C_CM_TXLOWWM	365,13037
#define	C_CM_RXHIWM	366,13095
#define	C_CM_RXNNDT	367,13153
#define	C_CM_MDCD	368,13208
#define	C_CM_MDSR	369,13255
#define	C_CM_MRI	370,13302
#define	C_CM_MCTS	371,13347
#define	C_CM_RXBRK	372,13394
#define	C_CM_PR_ERROR	373,13440
#define	C_CM_FR_ERROR	374,13487
#define C_CM_OVR_ERROR 375,13533
#define C_CM_RXOFL	376,13593
#define	C_CM_CMDERROR	377,13653
#define	C_CM_FATAL	378,13701
#define	C_CM_HW_RESET	379,13744
struct CH_CTRL CH_CTRL387,13975
struct	BUF_CTRL	BUF_CTRL412,14786
struct BOARD_CTRL BOARD_CTRL432,15462
struct ZFW_CTRL ZFW_CTRL462,16235
#define cy_writeb(cy_writeb481,16618
#define cy_writew(cy_writew482,16695
#define cy_writel(cy_writel483,16772
#define cy_readb(cy_readb485,16850
#define cy_readw(cy_readw486,16886
#define cy_readl(cy_readl487,16922
struct cyclades_card cyclades_card491,16990
struct cyclades_chip cyclades_chip501,17330
struct cyclades_port cyclades_port514,17586
#define Cy_EVENT_READ_PROCESS	564,19057
#define Cy_EVENT_WRITE_WAKEUP	565,19090
#define Cy_EVENT_HANGUP	566,19123
#define Cy_EVENT_BREAK	567,19151
#define Cy_EVENT_OPEN_WAKEUP	568,19178
#define Cy_EVENT_SHUTDOWN_WAKEUP	569,19210
#define	CLOSING_WAIT_DELAY	571,19246
#define CY_CLOSING_WAIT_NONE	572,19279
#define CY_CLOSING_WAIT_INF	573,19314
#define CyMAX_CHIPS_PER_CARD	576,19346
#define CyMAX_CHAR_FIFO	577,19377
#define CyPORTS_PER_CHIP	578,19405
#define	CD1400_MAX_SPEED	579,19432
#define	CyISA_Ywin	581,19465
#define CyPCI_Ywin 583,19492
#define CyPCI_Yctl 584,19519
#define CyPCI_Zctl 585,19544
#define CyPCI_Zwin 586,19581
#define CyPCI_Ze_win 587,19609
#define CD1400_REV_G	591,19679
#define CD1400_REV_J	592,19705
#define CyRegSize 594,19732
#define Cy_HwReset 595,19759
#define Cy_ClrIntr 596,19786
#define Cy_EpldRev 597,19813
#define CyGFRCR	601,19865
#define      CyRevE	602,19891
#define CyCAR	603,19917
#define      CyCHAN_0	604,19941
#define      CyCHAN_1	605,19971
#define      CyCHAN_2	606,20001
#define      CyCHAN_3	607,20031
#define CyGCR	608,20061
#define      CyCH0_SERIAL	609,20085
#define      CyCH0_PARALLEL	610,20118
#define CySVRR	611,20153
#define      CySRModem	612,20178
#define      CySRTransmit	613,20209
#define      CySRReceive	614,20242
#define CyRICR	615,20274
#define CyTICR	616,20299
#define CyMICR	617,20324
#define      CyICR0	618,20349
#define      CyICR1	619,20377
#define      CyICR2	620,20405
#define      CyICR3	621,20433
#define CyRIR	622,20461
#define CyTIR	623,20485
#define CyMIR	624,20509
#define      CyIRDirEq	625,20533
#define      CyIRBusy	626,20564
#define      CyIRUnfair	627,20594
#define      CyIRContext	628,20626
#define      CyIRChannel	629,20658
#define CyPPR 630,20690
#define      CyCLOCK_20_1MS	631,20715
#define      CyCLOCK_25_1MS	632,20750
#define      CyCLOCK_25_5MS	633,20785
#define      CyCLOCK_60_1MS	634,20820
#define      CyCLOCK_60_2MS	635,20855
#define CyRIVR	639,20916
#define CyTIVR	640,20941
#define CyMIVR	641,20966
#define      CyIVRMask 642,20991
#define      CyIVRRxEx 643,21021
#define      CyIVRRxOK 644,21051
#define      CyIVRTxOK 645,21081
#define      CyIVRMdmOK 646,21111
#define CyTDR	647,21142
#define CyRDSR	648,21166
#define      CyTIMEOUT	649,21191
#define      CySPECHAR	650,21222
#define      CyBREAK	651,21253
#define      CyPARITY	652,21282
#define      CyFRAME	653,21312
#define      CyOVERRUN	654,21341
#define CyMISR	655,21372
#define CyEOSRR	657,21435
#define CyLIVR	661,21487
#define      CyMscsr	662,21512
#define      CyTdsr	663,21541
#define      CyRgdsr	664,21569
#define      CyRedsr	665,21598
#define CyCCR	666,21627
#define      CyCHAN_RESET	668,21666
#define      CyCHIP_RESET	669,21699
#define      CyFlushTransFIFO	670,21732
#define      CyCOR_CHANGE	672,21784
#define      CyCOR1ch	673,21817
#define      CyCOR2ch	674,21847
#define      CyCOR3ch	675,21877
#define      CySEND_SPEC_1	677,21922
#define      CySEND_SPEC_2	678,21956
#define      CySEND_SPEC_3	679,21990
#define      CySEND_SPEC_4	680,22024
#define      CyCHAN_CTL	682,22073
#define      CyDIS_RCVR	683,22105
#define      CyENB_RCVR	684,22137
#define      CyDIS_XMTR	685,22169
#define      CyENB_XMTR	686,22201
#define CySRER	687,22233
#define      CyMdmCh	688,22258
#define      CyRxData	689,22287
#define      CyTxRdy	690,22317
#define      CyTxMpty	691,22346
#define      CyNNDT	692,22376
#define CyCOR1	693,22404
#define      CyPARITY_NONE	694,22429
#define      CyPARITY_0	695,22463
#define      CyPARITY_1	696,22495
#define      CyPARITY_E	697,22527
#define      CyPARITY_O	698,22559
#define      Cy_1_STOP	699,22591
#define      Cy_1_5_STOP	700,22622
#define      Cy_2_STOP	701,22654
#define      Cy_5_BITS	702,22685
#define      Cy_6_BITS	703,22716
#define      Cy_7_BITS	704,22747
#define      Cy_8_BITS	705,22778
#define CyCOR2	706,22809
#define      CyIXM	707,22834
#define      CyTxIBE	708,22861
#define      CyETC	709,22890
#define      CyAUTO_TXFL	710,22917
#define      CyLLM	711,22949
#define      CyRLM	712,22976
#define      CyRtsAO	713,23003
#define      CyCtsAE	714,23032
#define      CyDsrAE	715,23061
#define CyCOR3	716,23090
#define      CySPL_CH_DRANGE	717,23115
#define      CySPL_CH_DET1	718,23189
#define      CyFL_CTRL_TRNSP	720,23343
#define      CySPL_CH_DET2	721,23412
#define      CyREC_FIFO	723,23566
#define CyCOR4	724,23628
#define CyCOR5	725,23653
#define CyCCSR	726,23678
#define      CyRxEN	727,23703
#define      CyRxFloff	728,23731
#define      CyRxFlon	729,23762
#define      CyTxEN	730,23792
#define      CyTxFloff	731,23820
#define      CyTxFlon	732,23851
#define CyRDCR	733,23881
#define CySCHR1	734,23906
#define CySCHR2 735,23932
#define CySCHR3	736,23958
#define CySCHR4	737,23984
#define CySCRL	738,24010
#define CySCRH	739,24035
#define CyLNC	740,24060
#define CyMCOR1 741,24084
#define CyMCOR2	742,24110
#define CyRTPR	743,24136
#define CyMSVR1	744,24161
#define CyMSVR2	745,24187
#define      CyDSR	746,24213
#define      CyCTS	747,24240
#define      CyRI	748,24267
#define      CyDCD	749,24293
#define      CyDTR 750,24320
#define      CyRTS 751,24359
#define CyPVSR	752,24398
#define CyRBPR	753,24423
#define CyRCOR	754,24448
#define CyTBPR	755,24473
#define CyTCOR	756,24498
#define	CyPLX_VER	760,24548
#define	PLX_9050	761,24575
#define	PLX_9060	762,24597
#define	PLX_9080	763,24619

include/linux/swap.h,1295
#define _LINUX_SWAP_H2,22
#define SWAP_FLAG_PREFER	6,68
#define SWAP_FLAG_PRIO_MASK	7,137
#define SWAP_FLAG_PRIO_SHIFT	8,172
#define MAX_SWAPFILES 10,204
union swap_header swap_header12,229
#define __swapoffset(__swapoffset34,604
#define MAX_SWAP_BADPAGES 35,674
#define SWP_USED	42,822
#define SWP_WRITEOK	43,841
#define SWAP_CLUSTER_MAX 45,864
#define SWAP_MAP_MAX	47,893
#define SWAP_MAP_BAD	48,921
struct swap_info_struct swap_info_struct50,950
extern int nr_swap_pages;66,1324
extern int nr_free_pages;67,1350
extern atomic_t nr_async_pages;68,1376
extern struct inode swapper_inode;69,1408
extern unsigned long page_cache_size;70,1443
extern int buffermem;71,1481
#define read_swap_cache(read_swap_cache105,2532
extern unsigned int nr_swapfiles;114,2850
extern struct swap_info_struct swap_info[115,2884
struct swap_list_t swap_list_t119,3047
extern struct swap_list_t swap_list;123,3169
#define SHM_SWP_TYPE 132,3386
#define SWAP_CACHE_INFO138,3468
extern unsigned long swap_cache_add_total;141,3516
extern unsigned long swap_cache_del_total;142,3559
extern unsigned long swap_cache_find_total;143,3602
extern unsigned long swap_cache_find_success;144,3646
extern inline unsigned long in_swap_cache(147,3700
static inline int is_page_shared(160,4084

include/linux/modsetver.h,243
#define __SYMBOL_VERSION(__SYMBOL_VERSION3,37
#define __VERSIONED_SYMBOL2(__VERSIONED_SYMBOL24,83
#define __VERSIONED_SYMBOL1(__VERSIONED_SYMBOL15,130
#define __VERSIONED_SYMBOL(__VERSIONED_SYMBOL6,189
#define _set_ver(_set_ver9,284

include/linux/elfcore.h,487
#define _LINUX_ELFCORE_H2,25
struct elf_siginfoelf_siginfo10,177
typedef elf_greg_t greg_t;greg_t20,342
typedef elf_gregset_t gregset_t;gregset_t21,369
typedef elf_fpregset_t fpregset_t;fpregset_t22,402
#define NGREG 23,437
struct elf_prstatuself_prstatus35,908
#define ELF_PRARGSZ	65,1853
struct elf_prpsinfoelf_prpsinfo67,1910
typedef struct elf_prstatus prstatus_t;prstatus_t83,2334
typedef struct elf_prpsinfo prpsinfo_t;prpsinfo_t84,2374
#define PRARGSZ 85,2414

include/linux/in6.h,2221
#define _LINUX_IN6_H22,597
struct in6_addrin6_addr30,679
#define s6_addr	48,1062
#define s6_addr16	49,1095
#define s6_addr32	50,1130
#define s6_addr64	51,1165
struct sockaddr_in6 sockaddr_in654,1204
struct ipv6_mreq ipv6_mreq62,1442
#define IPV6_FLOWINFO_FLOWLABEL	78,1828
#define IPV6_FLOWINFO_PRIORITY	79,1868
#define IPV6_PRIORITY_UNCHARACTERIZED	81,1908
#define IPV6_PRIORITY_FILLER	82,1953
#define IPV6_PRIORITY_UNATTENDED	83,1990
#define IPV6_PRIORITY_RESERVED1	84,2030
#define IPV6_PRIORITY_BULK	85,2070
#define IPV6_PRIORITY_RESERVED2	86,2105
#define IPV6_PRIORITY_INTERACTIVE	87,2145
#define IPV6_PRIORITY_CONTROL	88,2186
#define IPV6_PRIORITY_8	89,2224
#define IPV6_PRIORITY_9	90,2257
#define IPV6_PRIORITY_10	91,2290
#define IPV6_PRIORITY_11	92,2323
#define IPV6_PRIORITY_12	93,2356
#define IPV6_PRIORITY_13	94,2389
#define IPV6_PRIORITY_14	95,2422
#define IPV6_PRIORITY_15	96,2455
#define IPPROTO_HOPOPTS	101,2522
#define IPPROTO_ROUTING	102,2579
#define IPPROTO_FRAGMENT	103,2634
#define IPPROTO_ESP	104,2694
#define IPPROTO_AH	105,2755
#define IPPROTO_ICMPV6	106,2806
#define IPPROTO_NONE	107,2848
#define IPPROTO_DSTOPTS	108,2900
#define IPV6_TLV_PAD0	113,2988
#define IPV6_TLV_PADN	114,3013
#define IPV6_TLV_ROUTERALERT	115,3038
#define IPV6_TLV_JUMBO	116,3070
#define IPV6_ADDRFORM	122,3130
#define IPV6_PKTINFO	123,3155
#define IPV6_HOPOPTS	124,3179
#define IPV6_DSTOPTS	125,3203
#define IPV6_RTHDR	126,3227
#define IPV6_PKTOPTIONS	127,3249
#define IPV6_CHECKSUM	128,3276
#define IPV6_HOPLIMIT	129,3301
#define IPV6_NEXTHOP	130,3326
#define IPV6_AUTHHDR	131,3350
#define IPV6_RXHOPOPTS	135,3415
#define IPV6_RXDSTOPTS	136,3452
#define IPV6_RXSRCRT	137,3489
#define SCM_SRCRT	143,3558
#define IPV6_UNICAST_HOPS	145,3591
#define IPV6_MULTICAST_IF	146,3620
#define IPV6_MULTICAST_HOPS	147,3649
#define IPV6_MULTICAST_LOOP	148,3680
#define IPV6_ADD_MEMBERSHIP	149,3711
#define IPV6_DROP_MEMBERSHIP	150,3742
#define IPV6_ROUTER_ALERT	151,3774
#define IPV6_MTU_DISCOVER	152,3803
#define IPV6_MTU	153,3832
#define IPV6_RECVERR	154,3853
#define IPV6_PMTUDISC_DONT	157,3910
#define IPV6_PMTUDISC_WANT	158,3940
#define IPV6_PMTUDISC_DO	159,3970

include/linux/romfs_fs.h,735
#define __LINUX_ROMFS_FS_H2,27
#define ROMBSIZE 6,107
#define ROMBSBITS 7,135
#define ROMBMASK 8,169
#define ROMFS_MAGIC 9,199
#define ROMFS_MAXFN 11,227
#define __mkw(__mkw13,252
#define __mkl(__mkl14,303
#define __mk4(__mk415,354
#define ROMSB_WORD0 16,413
#define ROMSB_WORD1 17,456
struct romfs_super_block romfs_super_block21,529
struct romfs_inode romfs_inode31,673
#define ROMFH_TYPE 39,798
#define ROMFH_HRD 40,819
#define ROMFH_DIR 41,839
#define ROMFH_REG 42,859
#define ROMFH_SYM 43,879
#define ROMFH_BLK 44,899
#define ROMFH_CHR 45,919
#define ROMFH_SCK 46,939
#define ROMFH_FIF 47,959
#define ROMFH_EXEC 48,979
#define ROMFH_SIZE 52,1018
#define ROMFH_PAD 53,1040
#define ROMFH_MASK 54,1073

include/linux/notifier.h,855
#define _LINUX_NOTIFIER_H11,346
struct notifier_blocknotifier_block14,398
#define NOTIFY_DONE	24,566
#define NOTIFY_OK	25,612
#define NOTIFY_STOP_MASK	26,654
#define NOTIFY_BAD	27,712
extern __inline__ int notifier_chain_register(29,781
extern __inline__ int notifier_chain_unregister(47,1112
extern __inline__ int notifier_call_chain(65,1408
#define NETDEV_UP	89,2087
#define NETDEV_DOWN	90,2158
#define NETDEV_REBOOT	91,2185
#define NETDEV_CHANGE	95,2375
#define NETDEV_REGISTER 96,2437
#define NETDEV_UNREGISTER	97,2468
#define NETDEV_CHANGEMTU	98,2501
#define NETDEV_CHANGEADDR	99,2533
#define NETDEV_GOING_DOWN	100,2566
#define NETDEV_CHANGENAME	101,2599
#define SYS_DOWN	103,2633
#define SYS_RESTART	104,2685
#define SYS_HALT	105,2714
#define SYS_POWER_OFF	106,2766
extern struct notifier_block *boot_notifier_list;112,2877

include/linux/igmp.h,965
#define _LINUX_IGMP_H17,464
struct igmphdrigmphdr27,560
#define IGMP_HOST_MEMBERSHIP_QUERY	35,654
#define IGMP_HOST_MEMBERSHIP_REPORT	36,713
#define IGMP_DVMRP	37,766
#define IGMP_PIM	38,812
#define IGMP_TRACE	39,854
#define IGMP_HOST_NEW_MEMBERSHIP_REPORT 40,880
#define IGMP_HOST_LEAVE_MESSAGE 41,951
#define IGMP_MTRACE_RESP	43,990
#define IGMP_MTRACE	44,1021
#define IGMP_DELAYING_MEMBER	51,1107
#define IGMP_IDLE_MEMBER	52,1142
#define IGMP_LAZY_MEMBER	53,1173
#define IGMP_SLEEPING_MEMBER	54,1204
#define IGMP_AWAKENING_MEMBER	55,1239
#define IGMP_MINLEN	57,1276
#define IGMP_MAX_HOST_REPORT_DELAY	59,1301
#define IGMP_TIMER_SCALE	62,1403
#define IGMP_AGE_THRESHOLD	65,1524
#define IGMP_ALL_HOSTS	69,1682
#define IGMP_ALL_ROUTER 70,1725
#define IGMP_LOCAL_GROUP	71,1769
#define IGMP_LOCAL_GROUP_MASK	72,1813
struct ip_mc_socklistip_mc_socklist84,2040
struct ip_mc_listip_mc_list91,2137
extern __inline__ int ip_check_mc(104,2363

include/linux/affs_fs.h,819
#define _AFFS_FS_H2,19
#define AFFS_SUPER_MAGIC 9,116
#define AFFS_I2BSIZE(AFFS_I2BSIZE12,201
#define AFFS_I2HSIZE(AFFS_I2HSIZE15,316
#define AFFS_I2BITS(AFFS_I2BITS18,430
#define AFFS_I2FSTYPE(AFFS_I2FSTYPE21,529
struct DateStampDateStamp23,604
extern struct inode_operations	 affs_file_inode_operations;105,3961
extern struct inode_operations	 affs_file_inode_operations_ofs;106,4021
extern struct inode_operations	 affs_dir_inode_operations;107,4085
extern struct inode_operations	 affs_symlink_inode_operations;108,4144
extern struct inode_operations	 affs_chrdev_inode_operations;109,4207
extern struct inode_operations	 affs_blkdev_inode_operations;110,4269
extern struct dentry_operations	 affs_dentry_operations;112,4332
extern struct dentry_operations	 affs_dentry_operations_intl;113,4389

include/linux/lapb.h,527
#define	LAPB_KERNEL_H6,89
#define	LAPB_OK	8,112
#define	LAPB_BADTOKEN	9,132
#define	LAPB_INVALUE	10,157
#define	LAPB_CONNECTED	11,181
#define	LAPB_NOTCONNECTED	12,207
#define	LAPB_REFUSED	13,235
#define	LAPB_TIMEDOUT	14,259
#define	LAPB_NOMEM	15,284
#define	LAPB_STANDARD	17,307
#define	LAPB_EXTENDED	18,335
#define	LAPB_SLP	20,364
#define	LAPB_MLP	21,387
#define	LAPB_DTE	23,411
#define	LAPB_DCE	24,434
struct lapb_register_struct lapb_register_struct26,458
struct lapb_parms_struct lapb_parms_struct35,836

include/linux/if_tr.h,662
#define _LINUX_IF_TR_H20,751
#define TR_ALEN	25,895
#define TR_HLEN 26,949
#define AC	27,1013
#define LLC_FRAME 28,1031
#define ETH_HLEN	30,1060
#define ETH_ZLEN	31,1112
#define ETH_DATA_LEN	32,1169
#define ETH_FRAME_LEN	33,1226
#define EXTENDED_SAP 38,1328
#define UI_CMD 39,1354
struct trh_hdr trh_hdr42,1423
struct trllc trllc52,1742
struct tr_statistics tr_statistics61,1992
#define TR_RII 91,3033
#define TR_RCF_DIR_BIT 92,3053
#define TR_RCF_LEN_MASK 93,3081
#define TR_RCF_BROADCAST 94,3112
#define TR_RCF_LIMITED_BROADCAST 95,3179
#define TR_RCF_FRAME2K 96,3248
#define TR_RCF_BROADCAST_MASK 97,3276
#define TR_MAXRIFLEN 98,3313

include/linux/smb.h,1002
#define _LINUX_SMB_H10,156
enum smb_protocol smb_protocol14,204
	SMB_PROTOCOL_NONE,15,225
	SMB_PROTOCOL_CORE,16,246
	SMB_PROTOCOL_COREPLUS,17,267
	SMB_PROTOCOL_LANMAN1,18,292
	SMB_PROTOCOL_LANMAN2,19,316
	SMB_PROTOCOL_NT1 20,340
enum smb_case_hndl smb_case_hndl23,363
	SMB_CASE_DEFAULT,24,384
	SMB_CASE_LOWER,25,403
	SMB_CASE_UPPER26,420
struct smb_dskattr smb_dskattr29,440
struct smb_conn_opt smb_conn_opt36,558
#define SMB_MAXNAMELEN 65,1196
#define SMB_MAXPATHLEN 66,1223
struct smb_fattr smb_fattr71,1314
struct smb_dirent smb_dirent89,1579
enum smb_conn_state smb_conn_state97,1678
        CONN_VALID,98,1700
        CONN_INVALID,99,1756
        CONN_RETRIED 101,1885
#define SMB_READDIR_CACHE_SIZE 107,2046
#define SMB_SUPER_MAGIC 109,2088
#define SMB_SERVER(SMB_SERVER111,2134
#define SMB_INOP(SMB_INOP112,2192
#define SMB_HEADER_LEN 114,2244
#define SMB_DEF_MAX_XMIT 116,2370
#define SMB_INITIAL_PACKET_SIZE 117,2401
#define TRANS2_MAX_TRANSFER 120,2466

include/linux/smb_fs.h,1058
#define _LINUX_SMB_FS_H10,156
#define	SMB_IOC_GETMOUNTUID	17,230
#define SMB_IOC_NEWCONN 18,288
#define WVAL(WVAL24,410
#define DVAL(DVAL26,497
#define WSET(WSET28,584
#define DSET(DSET30,687
#define smb_base(smb_base34,845
extern int smb_malloced;40,951
extern int smb_current_vmalloced;41,976
smb_vmalloc(44,1032
smb_vfree(52,1180
#define smb_kmalloc(smb_kmalloc60,1292
#define smb_kfree_s(smb_kfree_s61,1330
#define smb_vmalloc(smb_vmalloc62,1368
#define smb_vfree(smb_vfree63,1404
#define SMB_F_CACHEVALID	70,1510
#define SMB_F_LOCALWRITE	71,1568
#define SMB_FIX_WIN95	76,1651
#define SMB_FIX_OLDATTR	77,1700
#define SMB_FIX_DIRATTR	78,1771
extern struct inode_operations smb_file_inode_operations;84,1947
extern struct inode_operations smb_dir_inode_operations;87,2033
smb_is_open(134,4110
struct cache_index cache_index163,5149
#define NINDEX 169,5255
struct cache_head cache_head173,5372
struct cache_entry cache_entry186,5699
struct cache_block cache_block196,5925
struct cache_dirent cache_dirent207,6126

include/linux/netrom.h,322
#define	NETROM_KERNEL_H8,229
#define NETROM_MTU	10,254
#define NETROM_T1	12,278
#define NETROM_T2	13,298
#define NETROM_N2	14,318
#define	NETROM_T4	15,338
#define	NETROM_IDLE	16,358
#define	SIOCNRDECOBS	18,381
struct nr_route_struct nr_route_struct20,425
#define	NETROM_NEIGH	21,450
#define	NETROM_NODE	22,473

include/linux/if_eql.h,890
#define _LINUX_IF_EQL_H20,509
#define EQL_DEFAULT_SLAVE_PRIORITY 24,560
#define EQL_DEFAULT_MAX_SLAVES 25,601
#define EQL_DEFAULT_MTU 26,638
#define EQL_DEFAULT_RESCHED_IVAL 27,677
#define EQL_ENSLAVE 29,717
#define EQL_EMANCIPATE 30,758
#define EQL_GETSLAVECFG 32,804
#define EQL_SETSLAVECFG 33,849
#define EQL_GETMASTRCFG 35,895
#define EQL_SETMASTRCFG 36,940
typedef struct slave slave38,986
} slave_t;slave_t45,1133
typedef struct slave_queue slave_queue47,1145
} slave_queue_t;slave_queue_t53,1274
typedef struct equalizer equalizer55,1292
} equalizer_t;equalizer_t62,1456
typedef struct master_config master_config64,1474
} master_config_t;master_config_t68,1565
typedef struct slave_config slave_config70,1585
} slave_config_t;slave_config_t73,1655
typedef struct slaving_request slaving_request75,1674
} slaving_request_t;slaving_request_t78,1747

include/linux/console.h,873
#define _LINUX_CONSOLE_H_ 15,386
#define VT100ID 23,527
#define VT102ID 24,556
struct consw consw26,584
extern struct consw *conswitchp;49,1661
extern struct consw dummy_con;51,1695
extern struct consw fb_con;52,1753
extern struct consw vga_con;53,1814
extern struct consw prom_con;54,1866
#define SM_UP 60,2050
#define SM_DOWN 61,2074
#define CM_DRAW 64,2112
#define CM_ERASE 65,2136
#define CM_MOVE 66,2160
struct console_cmdlineconsole_cmdline71,2256
#define MAX_CMDLINECONSOLES 77,2422
extern struct console_cmdline console_list[78,2452
#define CON_PRINTBUFFER	85,2638
#define CON_CONSDEV	86,2666
#define CON_ENABLED	87,2721
struct consoleconsole89,2746
extern struct console *console_drivers;106,3195
#define VESA_NO_BLANKING 109,3263
#define VESA_VSYNC_SUSPEND 110,3297
#define VESA_HSYNC_SUSPEND 111,3331
#define VESA_POWERDOWN 112,3365

include/linux/affs_fs_sb.h,641
#define _AFFS_FS_SB2,20
#define MAX_ZONES	11,137
#define AFFS_DATA_MIN_FREE	12,158
#define AFFS_HDR_MIN_FREE	13,241
#define AFFS_ZONE_SIZE	14,300
struct affs_bm_info affs_bm_info16,382
struct affs_alloc_zone affs_alloc_zone23,618
struct affs_zone affs_zone29,813
struct affs_sb_info affs_sb_info38,1137
#define SF_INTL	61,2175
#define SF_BM_VALID	62,2232
#define SF_IMMUTABLE	63,2283
#define SF_QUIET	64,2352
#define SF_SETUID	65,2417
#define SF_SETGID	66,2466
#define SF_SETMODE	67,2515
#define SF_MUFS	68,2577
#define SF_OFS	69,2633
#define SF_PREFIX	70,2678
#define SF_VERBOSE	71,2741
#define SF_READONLY	72,2802

include/linux/if_ppp.h,1862
#define _IF_PPP_H_36,1406
#define	PPP_MTU	48,1556
#define PPP_MAXMRU	49,1617
#define PPP_VERSION	50,1669
#define PPP_MAGIC	51,1697
#define PROTO_IPX	52,1762
#define PROTO_DNA_RT 53,1810
#define SC_COMP_PROT	60,1900
#define SC_COMP_AC	61,1968
#define	SC_COMP_TCP	62,2032
#define SC_NO_TCP_CCID	63,2099
#define SC_REJ_COMP_AC	64,2170
#define SC_REJ_COMP_TCP	65,2242
#define SC_CCP_OPEN	66,2314
#define SC_CCP_UP	67,2371
#define SC_ENABLE_IP	68,2439
#define SC_COMP_RUN	69,2505
#define SC_DECOMP_RUN	70,2569
#define SC_DEBUG	71,2637
#define SC_LOG_INPKT	72,2693
#define SC_LOG_OUTPKT	73,2763
#define SC_LOG_RAWIN	74,2828
#define SC_LOG_FLUSH	75,2889
#define	SC_MASK	76,2949
#define SC_XMIT_BUSY	79,3027
#define SC_RCV_ODDP	80,3085
#define SC_RCV_EVNP	81,3153
#define SC_RCV_B7_1	82,3222
#define SC_RCV_B7_0	83,3289
#define SC_DC_FERROR	84,3356
#define SC_DC_ERROR	85,3422
struct npioctl npioctl91,3522
struct ppp_option_data ppp_option_data97,3685
struct ifpppstatsreq ifpppstatsreq103,3756
struct ifpppcstatsreq ifpppcstatsreq108,3856
#define ifr__name 113,3937
#define stats_ptr 114,3982
#define	PPPIOCGFLAGS	120,4058
#define	PPPIOCSFLAGS	121,4128
#define	PPPIOCGASYNCMAP	122,4198
#define	PPPIOCSASYNCMAP	123,4261
#define	PPPIOCGUNIT	124,4324
#define	PPPIOCGRASYNCMAP 125,4389
#define	PPPIOCSRASYNCMAP 126,4461
#define	PPPIOCGMRU	127,4533
#define	PPPIOCSMRU	128,4598
#define	PPPIOCSMAXCID	129,4663
#define PPPIOCGXASYNCMAP 130,4729
#define PPPIOCSXASYNCMAP 131,4802
#define PPPIOCXFERUNIT	132,4875
#define PPPIOCSCOMPRESS	133,4936
#define PPPIOCGNPMODE	134,4998
#define PPPIOCSNPMODE	135,5069
#define PPPIOCGDEBUG	136,5140
#define PPPIOCSDEBUG	137,5203
#define PPPIOCGIDLE	138,5265
#define SIOCGPPPSTATS 140,5337
#define SIOCGPPPVER 141,5382
#define SIOCGPPPCSTATS 142,5453
#define ifr_mtu	145,5521

include/linux/smb_fs_i.h,76
#define _LINUX_SMB_FS_I10,158
struct smb_inode_info smb_inode_info18,272

include/linux/sysctl.h,8200
#define _LINUX_SYSCTL_H27,862
#define CTL_MAXNAME 29,887
struct __sysctl_args __sysctl_args31,911
#define CTL_ANY	47,1174
#define CTL_NONE	48,1217
	CTL_KERN=53,1251
	CTL_VM=54,1303
	CTL_NET=55,1335
	CTL_PROC=56,1365
	CTL_FS=57,1398
	CTL_DEBUG=58,1428
	CTL_DEV=59,1459
	KERN_OSTYPE=66,1519
	KERN_OSRELEASE=67,1565
	KERN_OSREV=68,1613
	KERN_VERSION=69,1656
	KERN_SECUREMASK=70,1706
	KERN_PROF=71,1760
	KERN_NODENAME=72,1810
	KERN_DOMAINNAME=73,1828
	KERN_SECURELVL=75,1849
	KERN_PANIC=76,1902
	KERN_REALROOTDEV=77,1944
	KERN_JAVA_INTERPRETER=79,2012
	KERN_JAVA_APPLETVIEWER=80,2074
	KERN_SPARC_REBOOT=81,2138
	KERN_CTLALTDEL=82,2191
	KERN_PRINTK=83,2250
	KERN_NAMETRANS=84,2316
	KERN_PPC_HTABRECLAIM=85,2359
	KERN_PPC_ZEROPAGED=86,2428
	KERN_PPC_POWERSAVE_NAP=87,2495
	KERN_MODPROBE=88,2559
	KERN_SG_BIG_BUFF=89,2578
	KERN_ACCT=90,2600
	KERN_PPC_L2CR=91,2656
	KERN_RTSIGNR=93,2703
	KERN_RTSIGMAX=94,2752
	KERN_SHMMAX=96,2792
	KERN_MSGMAX=97,2858
	KERN_MSGMNB=98,2920
	KERN_MSGPOOL=99,2983
	VM_SWAPCTL=106,3084
	VM_SWAPOUT=107,3138
	VM_FREEPG=108,3193
	VM_BDFLUSH=109,3247
	VM_OVERCOMMIT_MEMORY=110,3307
	VM_BUFFERMEM=111,3379
	VM_PAGECACHE=112,3440
	VM_PAGERDAEMON=113,3500
	VM_PGT_CACHE=114,3558
	VM_PAGE_CLUSTER=115,3622
	NET_CORE=122,3723
	NET_ETHER=123,3736
	NET_802=124,3750
	NET_UNIX=125,3762
	NET_IPV4=126,3775
	NET_IPX=127,3788
	NET_ATALK=128,3800
	NET_NETROM=129,3814
	NET_AX25=130,3829
	NET_BRIDGE=131,3842
	NET_ROSE=132,3858
	NET_IPV6=133,3872
	NET_X25=134,3886
	NET_TR=135,3899
	NET_DECNET=136,3911
	NET_CORE_WMEM_MAX=143,3963
	NET_CORE_RMEM_MAX=144,3985
	NET_CORE_WMEM_DEFAULT=145,4007
	NET_CORE_RMEM_DEFAULT=146,4033
	NET_CORE_MAX_BACKLOG=148,4092
	NET_CORE_FASTROUTE=149,4117
	NET_CORE_MSG_COST=150,4140
	NET_CORE_MSG_BURST=151,4162
	NET_CORE_OPTMEM_MAX=152,4185
	NET_UNIX_DESTROY_DELAY=163,4301
	NET_UNIX_DELETE_DELAY=164,4328
	NET_UNIX_MAX_DGRAM_QLEN=165,4354
	NET_IPV4_FORWARD=172,4452
	NET_IPV4_DYNADDR=173,4473
	NET_IPV4_CONF=175,4495
	NET_IPV4_NEIGH=176,4514
	NET_IPV4_ROUTE=177,4534
	NET_IPV4_FIB_HASH=178,4554
	NET_IPV4_TCP_TIMESTAMPS=180,4578
	NET_IPV4_TCP_WINDOW_SCALING=181,4607
	NET_IPV4_TCP_SACK=182,4640
	NET_IPV4_TCP_RETRANS_COLLAPSE=183,4663
	NET_IPV4_DEFAULT_TTL=184,4698
	NET_IPV4_AUTOCONFIG=185,4724
	NET_IPV4_NO_PMTU_DISC=186,4749
	NET_IPV4_TCP_SYN_RETRIES=187,4776
	NET_IPV4_IPFRAG_HIGH_THRESH=188,4806
	NET_IPV4_IPFRAG_LOW_THRESH=189,4839
	NET_IPV4_IPFRAG_TIME=190,4871
	NET_IPV4_TCP_MAX_KA_PROBES=191,4897
	NET_IPV4_TCP_KEEPALIVE_TIME=192,4929
	NET_IPV4_TCP_KEEPALIVE_PROBES=193,4962
	NET_IPV4_TCP_RETRIES1=194,4997
	NET_IPV4_TCP_RETRIES2=195,5024
	NET_IPV4_TCP_FIN_TIMEOUT=196,5051
	NET_IPV4_IP_MASQ_DEBUG=197,5081
	NET_TCP_SYNCOOKIES=198,5109
	NET_TCP_STDURG=199,5133
	NET_TCP_RFC1337=200,5153
	NET_TCP_SYN_TAILDROP=201,5174
	NET_TCP_MAX_SYN_BACKLOG=202,5200
	NET_IPV4_LOCAL_PORT_RANGE=203,5229
	NET_IPV4_ICMP_ECHO_IGNORE_ALL=204,5260
	NET_IPV4_ICMP_ECHO_IGNORE_BROADCASTS=205,5295
	NET_IPV4_ICMP_SOURCEQUENCH_RATE=206,5337
	NET_IPV4_ICMP_DESTUNREACH_RATE=207,5374
	NET_IPV4_ICMP_TIMEEXCEED_RATE=208,5410
	NET_IPV4_ICMP_PARAMPROB_RATE=209,5445
	NET_IPV4_ICMP_ECHOREPLY_RATE=210,5479
	NET_IPV4_ICMP_IGNORE_BOGUS_ERROR_RESPONSES=211,5513
	NET_IPV4_IGMP_MAX_MEMBERSHIPS=212,5561
	NET_IPV4_ROUTE_FLUSH=216,5606
	NET_IPV4_ROUTE_MIN_DELAY=217,5631
	NET_IPV4_ROUTE_MAX_DELAY=218,5660
	NET_IPV4_ROUTE_GC_THRESH=219,5689
	NET_IPV4_ROUTE_MAX_SIZE=220,5718
	NET_IPV4_ROUTE_GC_MIN_INTERVAL=221,5746
	NET_IPV4_ROUTE_GC_TIMEOUT=222,5781
	NET_IPV4_ROUTE_GC_INTERVAL=223,5811
	NET_IPV4_ROUTE_REDIRECT_LOAD=224,5842
	NET_IPV4_ROUTE_REDIRECT_NUMBER=225,5875
	NET_IPV4_ROUTE_REDIRECT_SILENCE=226,5911
	NET_IPV4_ROUTE_ERROR_COST=227,5948
	NET_IPV4_ROUTE_ERROR_BURST=228,5979
	NET_IPV4_ROUTE_GC_ELASTICITY=229,6011
	NET_IPV4_ROUTE_MTU_EXPIRES=230,6045
	NET_PROTO_CONF_ALL=235,6087
	NET_PROTO_CONF_DEFAULT=236,6111
	NET_IPV4_CONF_FORWARDING=243,6182
	NET_IPV4_CONF_MC_FORWARDING=244,6211
	NET_IPV4_CONF_PROXY_ARP=245,6243
	NET_IPV4_CONF_ACCEPT_REDIRECTS=246,6271
	NET_IPV4_CONF_SECURE_REDIRECTS=247,6306
	NET_IPV4_CONF_SEND_REDIRECTS=248,6341
	NET_IPV4_CONF_SHARED_MEDIA=249,6374
	NET_IPV4_CONF_RP_FILTER=250,6405
	NET_IPV4_CONF_ACCEPT_SOURCE_ROUTE=251,6433
	NET_IPV4_CONF_BOOTP_RELAY=252,6471
	NET_IPV4_CONF_LOG_MARTIANS=253,6502
	NET_IPV6_CONF=258,6569
	NET_IPV6_NEIGH=259,6588
	NET_IPV6_ROUTE=260,6608
	NET_IPV6_ROUTE_FLUSH=264,6638
	NET_IPV6_ROUTE_GC_THRESH=265,6663
	NET_IPV6_ROUTE_MAX_SIZE=266,6692
	NET_IPV6_ROUTE_GC_MIN_INTERVAL=267,6720
	NET_IPV6_ROUTE_GC_TIMEOUT=268,6755
	NET_IPV6_ROUTE_GC_INTERVAL=269,6785
	NET_IPV6_ROUTE_GC_ELASTICITY=270,6816
	NET_IPV6_ROUTE_MTU_EXPIRES=271,6849
	NET_IPV6_FORWARDING=275,6890
	NET_IPV6_HOP_LIMIT=276,6914
	NET_IPV6_MTU=277,6937
	NET_IPV6_ACCEPT_RA=278,6954
	NET_IPV6_ACCEPT_REDIRECTS=279,6977
	NET_IPV6_AUTOCONF=280,7007
	NET_IPV6_DAD_TRANSMITS=281,7029
	NET_IPV6_RTR_SOLICITS=282,7056
	NET_IPV6_RTR_SOLICIT_INTERVAL=283,7082
	NET_IPV6_RTR_SOLICIT_DELAY=284,7116
	NET_NEIGH_MCAST_SOLICIT=289,7201
	NET_NEIGH_UCAST_SOLICIT=290,7229
	NET_NEIGH_APP_SOLICIT=291,7257
	NET_NEIGH_RETRANS_TIME=292,7283
	NET_NEIGH_REACHABLE_TIME=293,7310
	NET_NEIGH_DELAY_PROBE_TIME=294,7339
	NET_NEIGH_GC_STALE_TIME=295,7370
	NET_NEIGH_UNRES_QLEN=296,7398
	NET_NEIGH_PROXY_QLEN=297,7423
	NET_NEIGH_ANYCAST_DELAY=298,7448
	NET_NEIGH_PROXY_DELAY=299,7477
	NET_NEIGH_LOCKTIME=300,7504
	NET_NEIGH_GC_INTERVAL=301,7528
	NET_NEIGH_GC_THRESH1=302,7555
	NET_NEIGH_GC_THRESH2=303,7581
	NET_NEIGH_GC_THRESH3=304,7607
	NET_ATALK_AARP_EXPIRY_TIME=312,7699
	NET_ATALK_AARP_TICK_TIME=313,7730
	NET_ATALK_AARP_RETRANSMIT_LIMIT=314,7759
	NET_ATALK_AARP_RESOLVE_TIME=315,7795
	NET_NETROM_DEFAULT_PATH_QUALITY=321,7865
	NET_NETROM_OBSOLESCENCE_COUNT_INITIALISER=322,7901
	NET_NETROM_NETWORK_TTL_INITIALISER=323,7947
	NET_NETROM_TRANSPORT_TIMEOUT=324,7986
	NET_NETROM_TRANSPORT_MAXIMUM_TRIES=325,8019
	NET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY=326,8058
	NET_NETROM_TRANSPORT_BUSY_DELAY=327,8101
	NET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE=328,8137
	NET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT=329,8184
	NET_NETROM_ROUTING_CONTROL=330,8229
	NET_NETROM_LINK_FAILS_COUNT=331,8261
	NET_AX25_IP_DEFAULT_MODE=336,8329
	NET_AX25_DEFAULT_MODE=337,8358
	NET_AX25_BACKOFF_TYPE=338,8384
	NET_AX25_CONNECT_MODE=339,8410
	NET_AX25_STANDARD_WINDOW=340,8436
	NET_AX25_EXTENDED_WINDOW=341,8465
	NET_AX25_T1_TIMEOUT=342,8494
	NET_AX25_T2_TIMEOUT=343,8518
	NET_AX25_T3_TIMEOUT=344,8542
	NET_AX25_IDLE_TIMEOUT=345,8566
	NET_AX25_N2=346,8593
	NET_AX25_PACLEN=347,8610
	NET_AX25_PROTOCOL=348,8631
	NET_AX25_DAMA_SLAVE_TIMEOUT=349,8654
	NET_ROSE_RESTART_REQUEST_TIMEOUT=354,8722
	NET_ROSE_CALL_REQUEST_TIMEOUT=355,8759
	NET_ROSE_RESET_REQUEST_TIMEOUT=356,8793
	NET_ROSE_CLEAR_REQUEST_TIMEOUT=357,8828
	NET_ROSE_ACK_HOLD_BACK_TIMEOUT=358,8863
	NET_ROSE_ROUTING_CONTROL=359,8898
	NET_ROSE_LINK_FAIL_TIMEOUT=360,8927
	NET_ROSE_MAX_VCS=361,8958
	NET_ROSE_WINDOW_SIZE=362,8979
	NET_ROSE_NO_ACTIVITY_TIMEOUT=363,9004
	NET_X25_RESTART_REQUEST_TIMEOUT=368,9072
	NET_X25_CALL_REQUEST_TIMEOUT=369,9108
	NET_X25_RESET_REQUEST_TIMEOUT=370,9141
	NET_X25_CLEAR_REQUEST_TIMEOUT=371,9175
	NET_X25_ACK_HOLD_BACK_TIMEOUT=372,9209
	NET_TR_RIF_TIMEOUT=378,9284
	NET_DECNET_DEF_T3_BROADCAST=383,9344
	NET_DECNET_DEF_T3_POINTTOPOINT=384,9376
	NET_DECNET_DEF_T1=385,9411
	NET_DECNET_DEF_BCT1=386,9433
	NET_DECNET_CACHETIMEOUT=387,9457
	NET_DECNET_DEBUG_LEVEL=388,9485
	FS_NRINODE=396,9565
	FS_STATINODE=397,9625
	FS_MAXINODE=398,9642
	FS_NRDQUOT=399,9715
	FS_MAXDQUOT=400,9775
	FS_NRFILE=401,9848
	FS_MAXFILE=402,9916
	FS_DENTRY=403,9997
	FS_NRSUPER=404,10011
	FS_MAXSUPER=405,10077
	DEV_CDROM=412,10213
	DEV_HWMON=413,10227
	DEV_CDROM_INFO=418,10277
typedef struct ctl_table ctl_table;ctl_table426,10408
typedef int ctl_handler ctl_handler428,10445
typedef int proc_handler proc_handler433,10600
extern ctl_handler sysctl_string;454,11350
extern ctl_handler sysctl_intvec;455,11384
struct ctl_table ctl_table506,13424
struct ctl_table_headerctl_table_header523,13897

include/linux/smb_fs_sb.h,147
#define _SMB_FS_SB10,154
#define server_from_dentry(server_from_dentry18,288
#define SB_of(SB_of19,349
struct smb_sb_info smb_sb_info22,477

include/linux/smbno.h,6849
#define _SMBNO_H_2,18
#define aRONLY	5,90
#define aHIDDEN	6,113
#define aSYSTEM	7,137
#define aVOLID	8,161
#define aDIR	9,184
#define aARCH	10,205
#define SUCCESS 13,248
#define ERRDOS 14,301
#define ERRSRV 15,377
#define ERRHRD 16,457
#define ERRCMD 17,512
#define ERRbadfunc 21,634
#define ERRbadfile 22,706
#define ERRbadpath 23,776
#define ERRnofids 24,834
#define ERRnoaccess 25,892
#define ERRbadfid 26,944
#define ERRbadmcb 27,994
#define ERRnomem 28,1064
#define ERRbadmem 29,1116
#define ERRbadenv 30,1183
#define ERRbadformat 31,1241
#define ERRbadaccess 32,1294
#define ERRbaddata 33,1350
#define ERRres 34,1424
#define ERRbaddrive 35,1471
#define ERRremcd 36,1523
#define ERRdiffdevice 37,1597
#define ERRnofiles 38,1676
#define ERRbadshare 39,1749
#define ERRlock 40,1830
#define ERRfilexists 41,1910
#define ERRundocumented1 42,1981
#define ERRbadpipe 43,2045
#define ERRpipebusy 44,2102
#define ERRpipeclosing 45,2171
#define ERRnotconnected 46,2238
#define ERRmoredata 47,2314
#define ERROR_EAS_DIDNT_FIT 48,2377
#define ERROR_EAS_NOT_SUPPORTED 49,2446
#define ERRerror 53,2563
#define ERRbadpw 54,2625
#define ERRbadtype 55,2676
#define ERRaccess 56,2723
#define ERRinvnid 57,2803
#define ERRinvnetname 58,2853
#define ERRinvdevice 59,2910
#define ERRqfull 60,2963
#define ERRqtoobig 61,3018
#define ERRinvpfid 62,3076
#define ERRsmbcmd 63,3144
#define ERRsrverror 64,3203
#define ERRfilespecs 65,3267
#define ERRbadlink 66,3342
#define ERRbadpermits 67,3389
#define ERRbadpid 68,3468
#define ERRsetattrmode 69,3515
#define ERRpaused 70,3576
#define ERRmsgoff 71,3636
#define ERRnoroom 72,3697
#define ERRrmuns 73,3755
#define ERRtimeout 74,3819
#define ERRnoresource 75,3877
#define ERRtoomanyuids 76,3957
#define ERRbaduid 77,4012
#define ERRuseMPX 78,4061
#define ERRuseSTD 79,4141
#define ERRcontMPX 80,4221
#define ERRbadPW 81,4275
#define ERRnosupport 82,4322
#define ERRnowrite 86,4391
#define ERRbadunit 87,4445
#define ERRnotready 88,4498
#define ERRbadcmd 89,4552
#define ERRdata 90,4606
#define ERRbadreq 91,4661
#define ERRseek 92,4728
#define ERRbadmedia 93,4747
#define ERRbadsector 94,4770
#define ERRnopaper 95,4794
#define ERRwrite 96,4816
#define ERRread 97,4866
#define ERRgeneral 98,4915
#define ERRwrongdisk 99,4978
#define ERRFCBunavail 100,5002
#define ERRsharebufexc 101,5027
#define ERRdiskfull 102,5087
#define SMB_ACCMASK	107,5154
#define SMB_O_RDONLY	108,5181
#define SMB_O_WRONLY	109,5209
#define SMB_O_RDWR	110,5237
#define smb_com 113,5308
#define smb_rcls 114,5326
#define smb_reh 115,5345
#define smb_err 116,5364
#define smb_flg 117,5383
#define smb_flg2 118,5402
#define smb_reb 119,5422
#define smb_tid 120,5441
#define smb_pid 121,5460
#define smb_uid 122,5479
#define smb_mid 123,5498
#define smb_wct 124,5517
#define smb_vwv 125,5536
#define smb_vwv0 126,5555
#define smb_vwv1 127,5575
#define smb_vwv2 128,5595
#define smb_vwv3 129,5615
#define smb_vwv4 130,5635
#define smb_vwv5 131,5655
#define smb_vwv6 132,5675
#define smb_vwv7 133,5695
#define smb_vwv8 134,5715
#define smb_vwv9 135,5735
#define smb_vwv10 136,5755
#define smb_vwv11 137,5776
#define smb_vwv12 138,5797
#define smb_vwv13 139,5818
#define smb_vwv14 140,5839
#define smb_tpscnt 143,5920
#define smb_tdscnt 144,5948
#define smb_mprcnt 145,5976
#define smb_mdrcnt 146,6004
#define smb_msrcnt 147,6032
#define smb_flags 148,6060
#define smb_timeout 149,6087
#define smb_pscnt 150,6116
#define smb_psoff 151,6143
#define smb_dscnt 152,6171
#define smb_dsoff 153,6199
#define smb_suwcnt 154,6227
#define smb_setup 155,6256
#define smb_setup0 156,6284
#define smb_setup1 157,6313
#define smb_setup2 158,6346
#define smb_spscnt 161,6423
#define smb_spsoff 162,6451
#define smb_spsdisp 163,6479
#define smb_sdscnt 164,6508
#define smb_sdsoff 165,6536
#define smb_sdsdisp 166,6564
#define smb_sfid 167,6593
#define smb_tprcnt 170,6650
#define smb_tdrcnt 171,6678
#define smb_prcnt 172,6706
#define smb_proff 173,6733
#define smb_prdisp 174,6760
#define smb_drcnt 175,6788
#define smb_droff 176,6815
#define smb_drdisp 177,6842
#define SMBmkdir 180,6890
#define SMBrmdir 181,6942
#define SMBopen 182,6994
#define SMBcreate 183,7039
#define SMBclose 184,7086
#define SMBflush 185,7132
#define SMBunlink 186,7178
#define SMBmv 187,7225
#define SMBgetatr 188,7272
#define SMBsetatr 189,7327
#define SMBread 190,7382
#define SMBwrite 191,7432
#define SMBlock 192,7481
#define SMBunlock 193,7532
#define SMBctemp 194,7585
#define SMBmknew 195,7642
#define SMBchkpth 196,7691
#define SMBexit 197,7747
#define SMBlseek 198,7795
#define SMBtcon 199,7835
#define SMBtconX 200,7883
#define SMBtdis 201,7936
#define SMBnegprot 202,7987
#define SMBdskattr 203,8041
#define SMBsearch 204,8096
#define SMBsplopen 205,8148
#define SMBsplwr 206,8205
#define SMBsplclose 207,8266
#define SMBsplretq 208,8324
#define SMBsends 209,8378
#define SMBsendb 210,8439
#define SMBfwdname 211,8497
#define SMBcancelf 212,8550
#define SMBgetmac 213,8600
#define SMBsendstrt 214,8652
#define SMBsendend 215,8721
#define SMBsendtxt 216,8788
#define SMBlockread	219,8878
#define SMBwriteunlock 220,8935
#define SMBreadbraw 221,8995
#define SMBwritebraw 222,9069
#define SMBwritec 223,9144
#define SMBwriteclose 224,9202
#define SMBreadBraw 227,9292
#define SMBreadBmpx 228,9345
#define SMBreadBs 229,9406
#define SMBwriteBraw 230,9476
#define SMBwriteBmpx 231,9530
#define SMBwriteBs 232,9592
#define SMBwriteC 233,9662
#define SMBsetattrE 234,9724
#define SMBgetattrE 235,9791
#define SMBlockingX 236,9858
#define SMBtrans 237,9926
#define SMBtranss 238,9997
#define SMBioctl 239,10076
#define SMBioctls 240,10120
#define SMBcopy 241,10194
#define SMBmove 242,10237
#define SMBecho 243,10280
#define SMBopenX 244,10323
#define SMBreadX 245,10372
#define SMBwriteX 246,10421
#define SMBsesssetupX 247,10471
#define SMBtconX 248,10551
#define SMBffirst 249,10608
#define SMBfunique 250,10657
#define SMBfclose 251,10707
#define SMBinvalid 252,10756
#define SMBtrans2 256,10840
#define SMBtranss2 257,10898
#define SMBfindclose 258,10975
#define SMBfindnclose 259,11045
#define SMBulogoffX 260,11121
#define TRANSACT2_OPEN 263,11212
#define TRANSACT2_FINDFIRST 264,11246
#define TRANSACT2_FINDNEXT 265,11280
#define TRANSACT2_QFSINFO 266,11314
#define TRANSACT2_SETFSINFO 267,11348
#define TRANSACT2_QPATHINFO 268,11382
#define TRANSACT2_SETPATHINFO 269,11416
#define TRANSACT2_QFILEINFO 270,11450
#define TRANSACT2_SETFILEINFO 271,11484
#define TRANSACT2_FSCTL 272,11518
#define TRANSACT2_IOCTL 273,11552
#define TRANSACT2_FINDNOTIFYFIRST 274,11589
#define TRANSACT2_FINDNOTIFYNEXT 275,11626
#define TRANSACT2_MKDIR 276,11663

include/linux/uio.h,135
#define __LINUX_UIO_H2,22
struct ioveciovec19,570
#define UIO_FASTIOV	29,775
#define UIO_MAXIOV	30,797
#define UIO_MAXIOV	32,827

include/linux/trdevice.h,33
#define _LINUX_TRDEVICE_H25,878

include/linux/scc.h,2295
#define	_SCC_H4,82
#define PA0HZP	10,160
#define EAGLE 11,236
#define PC100	12,302
#define PRIMUS	13,357
#define DRSI	14,425
#define BAYCOM	15,488
enum SCC_ioctl_cmds SCC_ioctl_cmds19,576
	SIOCSCCRESERVED 20,598
	SIOCSCCRESERVED = SIOCDEVPRIVATE,20,598
	SIOCSCCCFG,21,633
	SIOCSCCINI,22,646
	SIOCSCCCHANINI,23,659
	SIOCSCCSMEM,24,676
	SIOCSCCGKISS,25,690
	SIOCSCCSKISS,26,705
	SIOCSCCGSTAT,27,720
	SIOCSCCCAL28,735
#define SCC_MAGIC	33,771
enum L1_params L1_params37,854
	PARAM_DATA,38,871
	PARAM_TXDELAY,39,884
	PARAM_PERSIST,40,900
	PARAM_SLOTTIME,41,916
	PARAM_TXTAIL,42,933
	PARAM_FULLDUP,43,948
	PARAM_SOFTDCD,44,964
	PARAM_MUTE,45,1001
	PARAM_DTR,46,1025
	PARAM_RTS,47,1037
	PARAM_SPEED,48,1049
	PARAM_ENDDELAY,49,1063
	PARAM_GROUP,50,1091
	PARAM_IDLE,51,1105
	PARAM_MIN,52,1118
	PARAM_MAXKEY,53,1130
	PARAM_WAIT,54,1145
	PARAM_MAXDEFER,55,1158
	PARAM_TX,56,1175
	PARAM_HWEVENT 57,1186
	PARAM_RETURN 58,1207
enum FULLDUP_modes FULLDUP_modes63,1278
	KISS_DUPLEX_HALF,64,1299
	KISS_DUPLEX_FULL,65,1346
	KISS_DUPLEX_LINK,66,1415
	KISS_DUPLEX_OPTIMA	67,1486
#define TIMER_OFF	72,1590
#define NO_SUCH_PARAM	73,1642
enum HWEVENT_opts HWEVENT_opts77,1725
	HWEV_DCD_ON,78,1745
	HWEV_DCD_OFF,79,1759
	HWEV_ALL_SENT80,1774
#define RXGROUP	85,1817
#define TXGROUP	86,1885
enum CLOCK_sources CLOCK_sources90,1979
	CLK_DPLL,91,2000
	CLK_EXTERNAL,92,2045
	CLK_DIVIDER,93,2105
	CLK_BRG	95,2209
enum TX_state TX_state101,2331
	TXS_IDLE,102,2347
	TXS_BUSY,103,2397
	TXS_ACTIVE,104,2456
	TXS_NEWFRAME,105,2504
	TXS_IDLE2,106,2557
	TXS_WAIT,107,2607
	TXS_TIMEOUT	108,2654
typedef unsigned long io_port;io_port111,2707
struct scc_stat scc_stat115,2821
struct scc_modem scc_modem137,3649
struct scc_kiss_cmd scc_kiss_cmd143,3806
struct scc_hw_config scc_hw_config148,3929
struct scc_mem_config scc_mem_config167,4462
struct scc_calibrate scc_calibrate172,4534
enum {TX_OFF,179,4624
enum {TX_OFF, TX_ON}179,4624
#define VECTOR_MASK	183,4707
#define TXINT	184,4732
#define EXINT	185,4752
#define RXINT	186,4772
#define SPINT	187,4792
#define Inb(Inb190,4837
#define Outb(Outb191,4867
#define Inb(Inb193,4915
#define Outb(Outb194,4943
struct scc_kiss scc_kiss199,5037
struct scc_channel scc_channel219,6041

include/linux/smb_mount.h,113
#define _LINUX_SMB_MOUNT_H10,168
#define SMB_MOUNT_VERSION 14,222
struct smb_mount_data smb_mount_data16,251

include/linux/mroute.h,1668
#define __LINUX_MROUTE_H2,25
#define MRT_BASE	18,367
#define MRT_INIT	19,388
#define MRT_DONE	20,455
#define MRT_ADD_VIF	21,519
#define MRT_DEL_VIF	22,583
#define MRT_ADD_MFC	23,650
#define MRT_DEL_MFC	24,722
#define MRT_VERSION	25,797
#define MRT_ASSERT	26,869
#define MRT_PIM	27,933
#define SIOCGETVIFCNT	29,986
#define SIOCGETSGCNT	30,1052
#define SIOCGETRPF	31,1094
#define MAXVIFS	33,1135
typedef unsigned long vifbitmap_t;vifbitmap_t34,1156
typedef unsigned short vifi_t;vifi_t35,1232
#define ALL_VIFS	36,1263
#define VIFM_SET(VIFM_SET42,1328
#define VIFM_CLR(VIFM_CLR43,1366
#define VIFM_ISSET(VIFM_ISSET44,1405
#define VIFM_CLRALL(VIFM_CLRALL45,1444
#define VIFM_COPY(VIFM_COPY46,1475
#define VIFM_SAME(VIFM_SAME47,1520
struct vifctl vifctl54,1671
#define VIFF_TUNNEL	63,1987
#define VIFF_SRCRT	64,2029
#define VIFF_REGISTER	65,2061
struct mfcctlmfcctl71,2170
struct sioc_sg_reqsioc_sg_req87,2588
struct sioc_vif_reqsioc_vif_req100,2763
struct igmpmsgigmpmsg114,3128
extern struct sock *mroute_socket;129,3444
struct vif_devicevif_device139,3860
struct mfc_cache mfc_cache151,4276
#define MFC_QUEUED	170,4917
#define MFC_RESOLVED	171,4939
#define MFC_NOTIFY	172,4963
#define MFC_LINES	175,4987
#define MFC_HASH(MFC_HASH178,5030
#define MFC_HASH(MFC_HASH180,5096
#define MFC_ASSERT_THRESH 186,5168
#define IGMPMSG_NOCACHE	192,5277
#define IGMPMSG_WRONGVIF	193,5346
#define IGMPMSG_WHOLEPKT	194,5415
#define PIM_V1_VERSION	198,5497
#define PIM_V1_REGISTER	199,5550
#define PIM_VERSION	201,5578
#define PIM_REGISTER	202,5601
#define PIM_NULL_REGISTER	204,5626
struct pimreghdrpimreghdr208,5759

include/linux/cd1400.h,4269
#define	_CD1400_H26,1073
#define	CD1400_PORTS	32,1237
#define	CD1400_TXFIFOSIZE	37,1317
#define	CD1400_RXFIFOSIZE	38,1346
#define	FIFO_RXTHRESHOLD	44,1483
#define	FIFO_RTSTHRESHOLD	45,1510
#define	GFRCR	54,1771
#define	CAR	55,1791
#define	GCR	56,1809
#define	SVRR	57,1827
#define	RICR	58,1846
#define	TICR	59,1865
#define	MICR	60,1884
#define	RIR	61,1903
#define	TIR	62,1921
#define	MIR	63,1939
#define	PPR	64,1957
#define	RIVR	66,1976
#define	TIVR	67,1995
#define	MIVR	68,2014
#define	TDR	69,2033
#define	RDSR	70,2051
#define	MISR	71,2070
#define	EOSRR	72,2089
#define	LIVR	74,2110
#define	CCR	75,2129
#define	SRER	76,2147
#define	COR1	77,2166
#define	COR2	78,2185
#define	COR3	79,2204
#define	COR4	80,2223
#define	COR5	81,2242
#define	CCSR	82,2261
#define	RDCR	83,2280
#define	SCHR1	84,2299
#define	SCHR2	85,2319
#define	SCHR3	86,2339
#define	SCHR4	87,2359
#define	SCRL	88,2379
#define	SCRH	89,2398
#define	LNC	90,2417
#define	MCOR1	91,2435
#define	MCOR2	92,2455
#define	RTPR	93,2475
#define	MSVR1	94,2494
#define	MSVR2	95,2514
#define	PSVR	96,2534
#define	RBPR	97,2553
#define	RCOR	98,2572
#define	TBPR	99,2591
#define	TCOR	100,2610
#define	CD1400_CLK0	107,2765
#define	CD1400_CLK1	108,2787
#define	CD1400_CLK2	109,2810
#define	CD1400_CLK3	110,2834
#define	CD1400_CLK4	111,2858
#define	CD1400_NUMCLKS	113,2884
#define	PPR_SCALAR	122,3177
#define	COR1_CHL5	129,3342
#define	COR1_CHL6	130,3365
#define	COR1_CHL7	131,3388
#define	COR1_CHL8	132,3411
#define	COR1_STOP1	137,3496
#define	COR1_STOP15	138,3520
#define	COR1_STOP2	139,3545
#define	COR1_PARNONE	144,3632
#define	COR1_PARFORCE	145,3658
#define	COR1_PARENB	146,3685
#define	COR1_PARIGNORE	147,3710
#define	COR1_PARODD	149,3739
#define	COR1_PAREVEN	150,3764
#define	COR2_IXM	152,3791
#define	COR2_TXIBE	153,3813
#define	COR2_ETC	154,3837
#define	COR2_LLM	155,3859
#define	COR2_RLM	156,3881
#define	COR2_RTSAO	157,3903
#define	COR2_CTSAE	158,3927
#define	COR3_SCDRNG	160,3952
#define	COR3_SCD34	161,3977
#define	COR3_FCT	162,4001
#define	COR3_SCD12	163,4023
#define	COR4_BRKINT	168,4086
#define	COR4_IGNBRK	169,4111
#define	MSVR1_DTR	178,4373
#define	MSVR1_DSR	179,4396
#define	MSVR1_RI	180,4419
#define	MSVR1_CTS	181,4441
#define	MSVR1_DCD	182,4464
#define	MSVR2_RTS	184,4488
#define	MSVR2_DSR	185,4511
#define	MSVR2_RI	186,4534
#define	MSVR2_CTS	187,4556
#define	MSVR2_DCD	188,4579
#define	MCOR1_DCD	190,4603
#define	MCOR1_CTS	191,4626
#define	MCOR1_RI	192,4649
#define	MCOR1_DSR	193,4671
#define	MCOR2_DCD	195,4695
#define	MCOR2_CTS	196,4718
#define	MCOR2_RI	197,4741
#define	MCOR2_DSR	198,4763
#define	SRER_NNDT	205,4945
#define	SRER_TXEMPTY	206,4968
#define	SRER_TXDATA	207,4994
#define	SRER_RXDATA	208,5019
#define	SRER_MODEM	209,5044
#define	CCR_RESET	216,5214
#define	CCR_CORCHANGE	217,5237
#define	CCR_SENDCH	218,5264
#define	CCR_CHANCTRL	219,5288
#define	CCR_TXENABLE	221,5315
#define	CCR_TXDISABLE	222,5358
#define	CCR_RXENABLE	223,5402
#define	CCR_RXDISABLE	224,5445
#define	CCR_SENDSCHR1	226,5490
#define	CCR_SENDSCHR2	227,5532
#define	CCR_SENDSCHR3	228,5574
#define	CCR_SENDSCHR4	229,5616
#define	CCR_RESETCHAN	231,5659
#define	CCR_RESETFULL	232,5700
#define	CCR_TXFLUSHFIFO	233,5741
#define	CCR_MAXWAIT	235,5785
#define	ACK_TYPMASK	242,5962
#define	ACK_TYPTX	243,5987
#define	ACK_TYPMDM	244,6010
#define	ACK_TYPRXGOOD	245,6034
#define	ACK_TYPRXBAD	246,6061
#define	SVRR_RX	248,6088
#define	SVRR_TX	249,6110
#define	SVRR_MDM	250,6132
#define	ST_OVERRUN	252,6155
#define	ST_FRAMING	253,6179
#define	ST_PARITY	254,6203
#define	ST_BREAK	255,6226
#define	ST_SCHAR1	256,6248
#define	ST_SCHAR2	257,6271
#define	ST_SCHAR3	258,6294
#define	ST_SCHAR4	259,6317
#define	ST_RANGE	260,6340
#define	ST_SCHARMASK	261,6362
#define	ST_TIMEOUT	262,6388
#define	MISR_DCD	264,6413
#define	MISR_CTS	265,6435
#define	MISR_RI	266,6457
#define	MISR_DSR	267,6479
#define	CCSR_RXENABLED	274,6631
#define	CCSR_RXFLOWON	275,6659
#define	CCSR_RXFLOWOFF	276,6686
#define	CCSR_TXENABLED	277,6714
#define	CCSR_TXFLOWON	278,6742
#define	CCSR_TXFLOWOFF	279,6769
#define	ETC_CMD	286,6919
#define	ETC_STARTBREAK	287,6941
#define	ETC_DELAY	288,6969
#define	ETC_STOPBREAK	289,6992

include/linux/random.h,366
#define _LINUX_RANDOM_H8,110
#define RNDGETENTCNT	15,239
#define RNDADDTOENTCNT	18,354
#define RNDGETPOOL	21,464
#define RNDADDENTROPY	27,607
#define RNDZAPENTCNT	30,708
#define RNDCLEARPOOL	33,820
struct rand_pool_info rand_pool_info35,859
extern struct file_operations random_fops,68,1795
extern struct file_operations random_fops, urandom_fops;68,1795

include/linux/kdev_t.h,475
#define _LINUX_KDEV_T_H2,24
#define MINORBITS	64,2387
#define MINORMASK	65,2407
typedef unsigned short kdev_t;kdev_t67,2450
#define MAJOR(MAJOR69,2482
#define MINOR(MINOR70,2539
#define HASHDEV(HASHDEV71,2595
#define NODEV	72,2639
#define MKDEV(MKDEV73,2656
#define B_FREE	74,2706
static inline unsigned int kdev_t_to_nr(83,2917
static inline kdev_t to_kdev_t(87,3012
#define MAJOR(MAJOR110,3449
#define MINOR(MINOR111,3479
#define MKDEV(MKDEV112,3513

include/linux/filter.h,2035
#define __LINUX_FILTER_H__6,74
#define BPF_MAJOR_VERSION 11,161
#define BPF_MINOR_VERSION 12,189
struct sock_filter	sock_filter19,371
struct sock_fprog	sock_fprog27,580
struct sk_filtersk_filter34,740
extern __inline__ unsigned int sk_filter_len(41,889
#define BPF_CLASS(BPF_CLASS51,1057
#define         BPF_LD 52,1097
#define         BPF_LDX 53,1134
#define         BPF_ST 54,1171
#define         BPF_STX 55,1208
#define         BPF_ALU 56,1245
#define         BPF_JMP 57,1282
#define         BPF_RET 58,1319
#define         BPF_MISC 59,1356
#define BPF_SIZE(BPF_SIZE62,1414
#define         BPF_W 63,1454
#define         BPF_H 64,1491
#define         BPF_B 65,1528
#define BPF_MODE(BPF_MODE66,1565
#define         BPF_IMM 67,1605
#define         BPF_ABS 68,1642
#define         BPF_IND 69,1679
#define         BPF_MEM 70,1716
#define         BPF_LEN 71,1753
#define         BPF_MSH 72,1790
#define BPF_OP(BPF_OP75,1849
#define         BPF_ADD 76,1889
#define         BPF_SUB 77,1926
#define         BPF_MUL 78,1963
#define         BPF_DIV 79,2000
#define         BPF_OR 80,2037
#define         BPF_AND 81,2074
#define         BPF_LSH 82,2111
#define         BPF_RSH 83,2148
#define         BPF_NEG 84,2185
#define         BPF_JA 85,2222
#define         BPF_JEQ 86,2259
#define         BPF_JGT 87,2296
#define         BPF_JGE 88,2333
#define         BPF_JSET 89,2370
#define BPF_SRC(BPF_SRC90,2407
#define         BPF_K 91,2447
#define         BPF_X 92,2484
#define BPF_RVAL(BPF_RVAL95,2561
#define         BPF_A 96,2601
#define BPF_MISCOP(BPF_MISCOP99,2650
#define         BPF_TAX 100,2691
#define         BPF_TXA 101,2728
#define BPF_MAXINSNS 104,2787
#define BPF_STMT(BPF_STMT111,2892
#define BPF_JUMP(BPF_JUMP114,2978
#define BPF_MEMWORDS 120,3123
#define SKF_AD_OFF 127,3340
#define SKF_AD_PROTOCOL 128,3372
#define SKF_AD_PKTTYPE 129,3398
#define SKF_AD_IFINDEX 130,3424
#define SKF_AD_MAX 131,3450
#define SKF_NET_OFF 132,3473
#define SKF_LL_OFF 133,3507

include/linux/isdn.h,5890
#define isdn_h164,5291
#define ISDN_TTY_MAJOR 168,5333
#define ISDN_TTYAUX_MAJOR 169,5362
#define ISDN_MAJOR 170,5391
#define ISDN_MAX_DRIVERS 177,5609
#define ISDN_MAX_CHANNELS 178,5640
#define ISDN_MINOR_B 179,5671
#define ISDN_MINOR_BMAX 180,5701
#define ISDN_MINOR_CTRL 181,5751
#define ISDN_MINOR_CTRLMAX 182,5797
#define ISDN_MINOR_PPP 183,5849
#define ISDN_MINOR_PPPMAX 184,5899
#define ISDN_MINOR_STATUS 185,5951
#define IIOCNETAIF 188,6006
#define IIOCNETDIF 189,6037
#define IIOCNETSCF 190,6068
#define IIOCNETGCF 191,6099
#define IIOCNETANM 192,6130
#define IIOCNETDNM 193,6161
#define IIOCNETGNM 194,6192
#define IIOCGETSET 195,6223
#define IIOCSETSET 196,6254
#define IIOCSETVER 197,6285
#define IIOCNETHUP 198,6317
#define IIOCSETGST 199,6349
#define IIOCSETBRJ 200,6381
#define IIOCSIGPRF 201,6413
#define IIOCGETPRF 202,6445
#define IIOCSETPRF 203,6477
#define IIOCGETMAP 204,6509
#define IIOCSETMAP 205,6541
#define IIOCNETASL 206,6573
#define IIOCNETDIL 207,6605
#define IIOCGETCPS 208,6637
#define IIOCGETDVR 209,6669
#define IIOCNETALN 211,6702
#define IIOCNETDLN 212,6734
#define IIOCDBGVAR 214,6767
#define IIOCDRVCTL 216,6801
#define ISDN_NET_ENCAP_ETHER 219,6882
#define ISDN_NET_ENCAP_RAWIP 220,6918
#define ISDN_NET_ENCAP_IPTYP 221,6954
#define ISDN_NET_ENCAP_CISCOHDLC 222,6990
#define ISDN_NET_ENCAP_SYNCPPP 223,7060
#define ISDN_NET_ENCAP_UIHDLC 224,7096
#define ISDN_NET_ENCAP_CISCOHDLCK 225,7132
#define ISDN_NET_ENCAP_X25IFACE 226,7202
#define ISDN_NET_ENCAP_MAX_ENCAP 227,7282
#define ISDN_USAGE_NONE 229,7392
#define ISDN_USAGE_RAW 230,7424
#define ISDN_USAGE_MODEM 231,7456
#define ISDN_USAGE_NET 232,7488
#define ISDN_USAGE_VOICE 233,7520
#define ISDN_USAGE_FAX 234,7552
#define ISDN_USAGE_MASK 235,7584
#define ISDN_USAGE_EXCLUSIVE 236,7646
#define ISDN_USAGE_OUTGOING 237,7725
#define ISDN_MODEM_ANZREG 239,7805
#define ISDN_MSNLEN 240,7883
} isdn_ioctl_struct;isdn_ioctl_struct245,7972
} debugvar_addr;debugvar_addr251,8121
} isdn_net_ioctl_phone;isdn_net_ioctl_phone257,8217
#define NET_DV 259,8242
#define TTY_DV 260,8297
} isdn_net_ioctl_cfg;isdn_net_ioctl_cfg285,9800
#define ISDN_DRVIOCTL_MASK 334,10743
#define ISDN_SERVICE_VOICE 337,10834
#define ISDN_SERVICE_AB 338,10863
#define ISDN_SERVICE_X21 339,10896
#define ISDN_SERVICE_G4 340,10928
#define ISDN_SERVICE_BTX 341,10960
#define ISDN_SERVICE_DFUE 342,10992
#define ISDN_SERVICE_X25 343,11024
#define ISDN_SERVICE_TTX 344,11056
#define ISDN_SERVICE_MIXED 345,11088
#define ISDN_SERVICE_FW 346,11120
#define ISDN_SERVICE_GTEL 347,11152
#define ISDN_SERVICE_BTXN 348,11185
#define ISDN_SERVICE_BTEL 349,11218
#define USG_NONE(USG_NONE352,11286
#define USG_RAW(USG_RAW353,11355
#define USG_MODEM(USG_MODEM354,11423
#define USG_VOICE(USG_VOICE355,11493
#define USG_NET(USG_NET356,11563
#define USG_OUTGOING(USG_OUTGOING357,11631
#define USG_MODEMORVOICE(USG_MODEMORVOICE358,11708
#define ISDN_TIMER_RES 362,11902
#define ISDN_TIMER_02SEC 363,11989
#define ISDN_TIMER_1SEC 364,12076
#define ISDN_TIMER_RINGING 365,12163
#define ISDN_TIMER_KEEPINT 366,12250
#define ISDN_TIMER_MODEMREAD 367,12337
#define ISDN_TIMER_MODEMPLUS 368,12370
#define ISDN_TIMER_MODEMRING 369,12403
#define ISDN_TIMER_MODEMXMIT 370,12436
#define ISDN_TIMER_NETDIAL 371,12469
#define ISDN_TIMER_NETHANGUP 372,12503
#define ISDN_TIMER_IPPP 373,12536
#define ISDN_TIMER_KEEPALIVE 374,12570
#define ISDN_TIMER_FAST 375,12625
#define ISDN_TIMER_SLOW 377,12755
#define ISDN_TIMER_DTIMEOUT10 381,12948
#define ISDN_TIMER_DTIMEOUT15 382,13024
#define ISDN_GLOBAL_STOPPED 385,13120
#define ISDN_NET_CONNECTED 390,13282
#define ISDN_NET_SECURE 391,13361
#define ISDN_NET_CALLBACK 392,13440
#define ISDN_NET_CBHUP 393,13519
#define ISDN_NET_CBOUT 394,13598
#define ISDN_NET_CLONE 397,13699
#define ISDN_NET_TMP 398,13778
#define ISDN_NET_DYNAMIC 399,13857
#define ISDN_NET_MAGIC 401,13944
} isdn_net_phone;isdn_net_phone407,14105
typedef struct isdn_net_local_s isdn_net_local_s419,14523
} isdn_net_local;isdn_net_local497,19861
struct ippp_bundle ippp_bundle500,19903
typedef struct isdn_net_dev_s isdn_net_dev_s512,20458
} isdn_net_dev;isdn_net_dev525,20881
#define ISDN_ASYNC_MAGIC 531,21060
#define ISDN_ASYNC_INITIALIZED	532,21140
#define ISDN_ASYNC_CALLOUT_ACTIVE 533,21219
#define ISDN_ASYNC_NORMAL_ACTIVE 534,21299
#define ISDN_ASYNC_CLOSING	535,21379
#define ISDN_ASYNC_CTS_FLOW	536,21454
#define ISDN_ASYNC_CHECK_CD	537,21530
#define ISDN_ASYNC_HUP_NOTIFY 538,21606
#define ISDN_ASYNC_SESSION_LOCKOUT 539,21686
#define ISDN_ASYNC_PGRP_LOCKOUT 540,21766
#define ISDN_ASYNC_CALLOUT_NOHUP 541,21846
#define ISDN_ASYNC_SPLIT_TERMIOS 542,21926
#define ISDN_SERIAL_XMIT_SIZE 543,22006
#define ISDN_SERIAL_XMIT_MAX 544,22086
#define ISDN_SERIAL_TYPE_NORMAL 545,22166
#define ISDN_SERIAL_TYPE_CALLOUT 546,22211
typedef struct isdn_audio_skb isdn_audio_skb555,22564
} isdn_audio_skb;isdn_audio_skb558,22647
#define ISDN_AUDIO_SKB_DLECOUNT(ISDN_AUDIO_SKB_DLECOUNT560,22666
#define ISDN_AUDIO_SKB_LOCK(ISDN_AUDIO_SKB_LOCK561,22745
typedef struct atemu atemu565,22868
} atemu;atemu579,23836
typedef struct modem_info modem_info582,23911
} modem_info;modem_info631,26945
#define ISDN_MODEM_WINSIZE 633,26960
} modem;modem644,27515
#define NUM_RCV_BUFFS 651,27686
#define PPP_HARD_HDR_LEN 652,27715
struct sqqueue sqqueue656,27767
struct mpqueue mpqueue664,27887
struct ippp_buf_queue ippp_buf_queue673,28029
struct ippp_struct ippp_struct680,28198
#define V110_BUFSIZE 715,29224
} isdn_v110_stream;isdn_v110_stream735,30422
} infostruct;infostruct744,30649
} driver;driver767,32099
typedef struct isdn_devt isdn_devt770,32133
} isdn_dev;isdn_dev802,34434
extern isdn_dev *dev;804,34447
#define MIN(MIN807,34491
#define MAX(MAX808,34520

include/linux/rpcsock.h,425
#define _LINUX_RPCSOCK_H9,152
#define RPC_MAXREQS	26,895
#define RPC_CWNDSCALE	27,919
#define RPC_MAXCWND	28,946
#define RPC_INITCWND	30,1043
#define RPC_CONGESTED(RPC_CONGESTED31,1079
#define RPC_HDRSIZE	36,1249
struct rpc_timeout rpc_timeout41,1323
struct rpc_ioreq rpc_ioreq52,1500
typedef void	(*rpc_callback_fn_t)rpc_callback_fn_t68,1836
struct rpc_wait rpc_wait74,2008
struct rpc_sock rpc_sock88,2284

include/linux/module.h,2682
#define _LINUX_MODULE_H8,140
#  define _set_ver(_set_ver13,212
#  define MODVERSIONS15,262
#   define _set_ver(_set_ver18,364
struct kernel_symkernel_sym29,636
struct module_symbolmodule_symbol35,747
struct module_refmodule_ref41,815
struct modulemodule51,990
struct module_infomodule_info87,1832
#define MOD_UNINITIALIZED	97,1967
#define MOD_RUNNING	98,1995
#define MOD_DELETED	99,2018
#define MOD_AUTOCLEAN	100,2041
#define MOD_VISITED 101,2066
#define MOD_USED_ONCE	102,2091
#define MOD_JUST_FREED	103,2117
#define QM_MODULES	107,2186
#define QM_DEPS	108,2207
#define QM_REFS	109,2226
#define QM_SYMBOLS	110,2245
#define QM_INFO	111,2266
#define mod_member_present(mod_member_present117,2491
#define GET_USE_COUNT(GET_USE_COUNT123,2667
#define __MOD_INC_USE_COUNT(__MOD_INC_USE_COUNT127,2776
#define __MOD_DEC_USE_COUNT(__MOD_DEC_USE_COUNT129,2893
#define __MOD_IN_USE(__MOD_IN_USE131,2996
#define __MODULE_STRING_1(__MODULE_STRING_1137,3187
#define __MODULE_STRING(__MODULE_STRING138,3219
#define MODULE_AUTHOR(MODULE_AUTHOR149,3520
#define MODULE_DESCRIPTION(MODULE_DESCRIPTION153,3648
#define MODULE_SUPPORTED_DEVICE(MODULE_SUPPORTED_DEVICE159,3833
#define MODULE_PARM(MODULE_PARM176,4341
#define MODULE_PARM_DESC(MODULE_PARM_DESC181,4492
extern struct module __this_module;192,4875
#define MOD_INC_USE_COUNT	194,4912
#define MOD_DEC_USE_COUNT	195,4974
#define MOD_IN_USE	196,5036
const char __module_kernel_version[200,5136
const char __module_using_checksums[203,5262
#define MODULE_AUTHOR(MODULE_AUTHOR210,5395
#define MODULE_DESCRIPTION(MODULE_DESCRIPTION211,5423
#define MODULE_SUPPORTED_DEVICE(MODULE_SUPPORTED_DEVICE212,5456
#define MODULE_PARM(MODULE_PARM213,5494
#define MODULE_PARM_DESC(MODULE_PARM_DESC214,5524
#define MOD_INC_USE_COUNT	218,5582
#define MOD_DEC_USE_COUNT	219,5625
#define MOD_IN_USE	220,5668
extern struct module *module_list;222,5691
#define __EXPORT_SYMBOL(__EXPORT_SYMBOL243,6317
#define EXPORT_SYMBOL(EXPORT_SYMBOL244,6396
#define EXPORT_SYMBOL_NOVERS(EXPORT_SYMBOL_NOVERS245,6470
#define __EXPORT_SYMBOL(__EXPORT_SYMBOL249,6582
#define EXPORT_SYMBOL(EXPORT_SYMBOL250,6615
#define EXPORT_SYMBOL_NOVERS(EXPORT_SYMBOL_NOVERS251,6642
#define __EXPORT_SYMBOL(__EXPORT_SYMBOL257,6863
#define EXPORT_SYMBOL(EXPORT_SYMBOL258,6930
#define EXPORT_SYMBOL_NOVERS(EXPORT_SYMBOL_NOVERS259,6992
#define __EXPORT_SYMBOL(__EXPORT_SYMBOL263,7067
#define EXPORT_SYMBOL(EXPORT_SYMBOL271,7376
#define EXPORT_SYMBOL(EXPORT_SYMBOL273,7453
#define EXPORT_SYMBOL_NOVERS(EXPORT_SYMBOL_NOVERS276,7552
#define EXPORT_NO_SYMBOLS 282,7716
#define EXPORT_NO_SYMBOLS284,7790

include/linux/nls.h,69
struct nls_unicode nls_unicode1,0
struct nls_table nls_table6,67

include/linux/amigaffs.h,2405
#define AMIGAFFS_H2,19
#define GET_END_PTR(GET_END_PTR17,454
#define AFFS_GET_HASHENTRY(AFFS_GET_HASHENTRY18,525
#define AFFS_BLOCK(AFFS_BLOCK19,626
#define FILE_END(FILE_END21,724
#define ROOT_END(ROOT_END22,793
#define DIR_END(DIR_END23,862
#define LINK_END(LINK_END24,929
#define ROOT_END_S(ROOT_END_S25,999
#define DATA_FRONT(DATA_FRONT26,1071
#define DIR_FRONT(DIR_FRONT27,1130
#define affs_bread	30,1231
#define affs_brelse	31,1256
#define BO_EXBITS	34,1307
#define BO_EXBITS	36,1360
#define FS_OFS	41,1449
#define FS_FFS	42,1476
#define FS_INTLOFS	43,1503
#define FS_INTLFFS	44,1533
#define FS_DCOFS	45,1563
#define FS_DCFFS	46,1591
#define MUFS_FS	47,1619
#define MUFS_OFS	48,1662
#define MUFS_FFS	49,1706
#define MUFS_INTLOFS	50,1750
#define MUFS_INTLFFS	51,1798
#define MUFS_DCOFS	52,1846
#define MUFS_DCFFS	53,1892
#define T_SHORT	55,1939
#define T_LIST	56,1958
#define T_DATA	57,1977
#define ST_LINKFILE	59,1996
#define ST_FILE	60,2019
#define ST_ROOT	61,2039
#define ST_USERDIR	62,2058
#define ST_SOFTLINK	63,2079
#define ST_LINKDIR	64,2101
struct root_frontroot_front66,2123
struct root_endroot_end76,2251
struct dir_frontdir_front89,2478
struct dir_enddir_end98,2589
struct file_frontfile_front117,2872
struct file_endfile_end128,3017
struct hlink_fronthlink_front148,3350
struct hlink_endhlink_end156,3443
struct slink_frontslink_front175,3728
struct data_frontdata_front184,3868
#define FIBF_OTR_READ	197,4070
#define FIBF_OTR_WRITE	198,4100
#define FIBF_OTR_EXECUTE	199,4131
#define FIBF_OTR_DELETE	200,4163
#define FIBF_GRP_READ	201,4195
#define FIBF_GRP_WRITE	202,4225
#define FIBF_GRP_EXECUTE	203,4256
#define FIBF_GRP_DELETE	204,4288
#define FIBF_SCRIPT	206,4321
#define FIBF_PURE	207,4349
#define FIBF_ARCHIVE	208,4401
#define FIBF_READ	209,4472
#define FIBF_WRITE	210,4521
#define FIBF_EXECUTE	211,4571
#define FIBF_DELETE	212,4644
#define FIBF_OWNER	214,4696
#define AFFS_UMAYWRITE(AFFS_UMAYWRITE216,4756
#define AFFS_UMAYREAD(AFFS_UMAYREAD217,4851
#define AFFS_UMAYEXECUTE(AFFS_UMAYEXECUTE218,4900
#define AFFS_GMAYWRITE(AFFS_GMAYWRITE219,4955
#define AFFS_GMAYREAD(AFFS_GMAYREAD221,5071
#define AFFS_GMAYEXECUTE(AFFS_GMAYEXECUTE222,5124
#define AFFS_OMAYWRITE(AFFS_OMAYWRITE223,5179
#define AFFS_OMAYREAD(AFFS_OMAYREAD225,5295
#define AFFS_OMAYEXECUTE(AFFS_OMAYEXECUTE226,5348

include/linux/blk.h,6511
#define _BLK_H2,15
extern spinlock_t io_request_lock;15,268
#define NR_REQUEST	22,453
#define IN_ORDER(IN_ORDER30,757
extern int rd_doload;73,1915
extern int rd_prompt;74,1977
extern int rd_image_start;75,2047
#define INITRD_MINOR 79,2137
extern unsigned long initrd_start,81,2215
extern unsigned long initrd_start,initrd_end;81,2215
extern int mount_initrd;82,2261
extern int initrd_below_start_ok;83,2329
#define RO_IOCTLS(RO_IOCTLS88,2457
#define DEVICE_NR(DEVICE_NR103,2884
#define DEVICE_ON(DEVICE_ON104,2940
#define DEVICE_OFF(DEVICE_OFF105,2980
#define DEVICE_NAME 106,3021
#define DEVICE_NAME 111,3098
#define DEVICE_REQUEST 112,3128
#define DEVICE_NR(DEVICE_NR113,3162
#define DEVICE_ON(DEVICE_ON114,3204
#define DEVICE_OFF(DEVICE_OFF115,3231
#define DEVICE_NO_RANDOM116,3258
#define DEVICE_NAME 121,3336
#define DEVICE_REQUEST 122,3364
#define DEVICE_NR(DEVICE_NR123,3401
#define DEVICE_ON(DEVICE_ON124,3443
#define DEVICE_OFF(DEVICE_OFF125,3469
#define DEVICE_NAME 131,3573
#define DEVICE_INTR 132,3602
#define DEVICE_REQUEST 133,3632
#define DEVICE_NR(DEVICE_NR134,3669
#define DEVICE_ON(DEVICE_ON135,3752
#define DEVICE_OFF(DEVICE_OFF136,3778
#define DEVICE_NAME 141,3906
#define DEVICE_INTR 142,3938
#define DEVICE_TIMEOUT 143,3964
#define TIMEOUT_VALUE 144,3996
#define DEVICE_REQUEST 145,4025
#define DEVICE_NR(DEVICE_NR146,4062
#define DEVICE_ON(DEVICE_ON147,4107
#define DEVICE_OFF(DEVICE_OFF148,4133
#define DEVICE_NAME 152,4196
#define DEVICE_INTR 153,4227
#define TIMEOUT_VALUE 154,4255
#define DEVICE_REQUEST 155,4284
#define DEVICE_NR(DEVICE_NR156,4321
#define DEVICE_ON(DEVICE_ON157,4417
#define DEVICE_OFF(DEVICE_OFF158,4443
#define DEVICE_NAME 163,4598
#define DEVICE_REQUEST 164,4644
#define DEVICE_NR(DEVICE_NR165,4681
#define DEVICE_ON(DEVICE_ON166,4723
#define DEVICE_OFF(DEVICE_OFF167,4749
#define DEVICE_NAME 171,4814
#define DEVICE_INTR 172,4845
#define DEVICE_NR(DEVICE_NR173,4873
#define DEVICE_ON(DEVICE_ON174,4922
#define DEVICE_OFF(DEVICE_OFF175,4948
#define DEVICE_NAME 179,5014
#define DEVICE_INTR 180,5043
#define DEVICE_REQUEST 181,5069
#define DEVICE_NR(DEVICE_NR182,5106
#define DEVICE_ON(DEVICE_ON183,5148
#define DEVICE_OFF(DEVICE_OFF184,5174
#define DEVICE_NAME 188,5237
#define DEVICE_REQUEST 189,5267
#define DEVICE_NR(DEVICE_NR190,5304
#define DEVICE_ON(DEVICE_ON191,5351
#define DEVICE_OFF(DEVICE_OFF192,5377
#define DEVICE_NAME 196,5440
#define DEVICE_REQUEST 197,5472
#define DEVICE_NR(DEVICE_NR198,5514
#define DEVICE_ON(DEVICE_ON199,5561
#define DEVICE_OFF(DEVICE_OFF200,5587
#define DEVICE_NAME 204,5655
#define DEVICE_REQUEST 205,5684
#define DEVICE_NR(DEVICE_NR206,5725
#define DEVICE_ON(DEVICE_ON207,5767
#define DEVICE_OFF(DEVICE_OFF208,5793
#define DEVICE_NAME 212,5922
#define DEVICE_INTR 213,5949
#define DEVICE_REQUEST 214,5977
#define DEVICE_NR(DEVICE_NR215,6016
#define DEVICE_ON(DEVICE_ON216,6063
#define DEVICE_OFF(DEVICE_OFF217,6089
#define DEVICE_NAME 221,6158
#define DEVICE_REQUEST 223,6228
#define DEVICE_NR(DEVICE_NR224,6266
#define DEVICE_ON(DEVICE_ON225,6308
#define DEVICE_OFF(DEVICE_OFF226,6334
#define DEVICE_NAME 230,6405
#define DEVICE_REQUEST 232,6476
#define DEVICE_NR(DEVICE_NR233,6515
#define DEVICE_ON(DEVICE_ON234,6557
#define DEVICE_OFF(DEVICE_OFF235,6583
#define DEVICE_NAME 239,6655
#define DEVICE_REQUEST 240,6709
#define DEVICE_NR(DEVICE_NR241,6749
#define DEVICE_ON(DEVICE_ON242,6791
#define DEVICE_OFF(DEVICE_OFF243,6817
#define DEVICE_NAME 247,6890
#define DEVICE_REQUEST 248,6944
#define DEVICE_NR(DEVICE_NR249,6985
#define DEVICE_ON(DEVICE_ON250,7027
#define DEVICE_OFF(DEVICE_OFF251,7053
#define DEVICE_NAME 255,7126
#define DEVICE_REQUEST 256,7180
#define DEVICE_NR(DEVICE_NR257,7221
#define DEVICE_ON(DEVICE_ON258,7263
#define DEVICE_OFF(DEVICE_OFF259,7289
#define DEVICE_NAME 263,7362
#define DEVICE_REQUEST 264,7416
#define DEVICE_NR(DEVICE_NR265,7457
#define DEVICE_ON(DEVICE_ON266,7499
#define DEVICE_OFF(DEVICE_OFF267,7525
#define DEVICE_NAME 271,7593
#define DEVICE_REQUEST 272,7629
#define DEVICE_NR(DEVICE_NR273,7669
#define DEVICE_ON(DEVICE_ON274,7711
#define DEVICE_OFF(DEVICE_OFF275,7737
#define DEVICE_NAME 279,7805
#define DEVICE_INTR 280,7839
#define DEVICE_REQUEST 281,7869
#define DEVICE_NR(DEVICE_NR282,7910
#define DEVICE_ON(DEVICE_ON283,7952
#define DEVICE_OFF(DEVICE_OFF284,7978
#define DEVICE_NAME 288,8048
#define DEVICE_REQUEST 289,8084
#define DEVICE_NR(DEVICE_NR290,8123
#define DEVICE_ON(DEVICE_ON291,8165
#define DEVICE_OFF(DEVICE_OFF292,8191
#define DEVICE_NAME 295,8257
#define DEVICE_REQUEST 296,8304
#define DEVICE_NR(DEVICE_NR297,8344
#define DEVICE_ON(DEVICE_ON298,8386
#define DEVICE_OFF(DEVICE_OFF299,8412
#define DEVICE_NAME 303,8480
#define DEVICE_REQUEST 304,8524
#define DEVICE_NR(DEVICE_NR305,8564
#define DEVICE_ON(DEVICE_ON306,8606
#define DEVICE_OFF(DEVICE_OFF307,8632
#define DEVICE_NAME 311,8699
#define DEVICE_REQUEST 312,8739
#define DEVICE_NR(DEVICE_NR313,8778
#define DEVICE_ON(DEVICE_ON314,8820
#define DEVICE_OFF(DEVICE_OFF315,8846
#define DEVICE_NAME 319,8909
#define DEVICE_REQUEST 320,8939
#define DEVICE_NR(DEVICE_NR321,8973
#define DEVICE_ON(DEVICE_ON322,9015
#define DEVICE_OFF(DEVICE_OFF323,9042
#define DEVICE_NAME 327,9101
#define DEVICE_REQUEST 328,9127
#define DEVICE_NR(DEVICE_NR329,9162
#define DEVICE_ON(DEVICE_ON330,9216
#define DEVICE_OFF(DEVICE_OFF331,9243
#define DEVICE_NAME 335,9308
#define DEVICE_INTR 336,9339
#define DEVICE_REQUEST 337,9366
#define DEVICE_NR(DEVICE_NR338,9404
#define DEVICE_ON(DEVICE_ON339,9451
#define DEVICE_OFF(DEVICE_OFF340,9477
#define DEVICE_NAME 344,9542
#define DEVICE_INTR 345,9573
#define DEVICE_REQUEST 346,9600
#define DEVICE_NR(DEVICE_NR347,9638
#define DEVICE_ON(DEVICE_ON348,9685
#define DEVICE_OFF(DEVICE_OFF349,9711
#define DEVICE_NAME 353,9770
#define DEVICE_REQUEST 354,9796
#define DEVICE_NR(DEVICE_NR355,9834
#define DEVICE_ON(DEVICE_ON356,9876
#define DEVICE_OFF(DEVICE_OFF357,9903
#define CURRENT 365,10042
#define DEVICE_NAME 369,10122
#define CURRENT_DEV 372,10160
#define SET_TIMER 380,10299
#define CLEAR_TIMER 384,10425
#define SET_INTR(SET_INTR387,10485
#define SET_INTR(SET_INTR395,10585
#define CLEAR_INTR 402,10713
#define CLEAR_INTR404,10753
#define INIT_REQUEST 407,10780
static void end_request(437,11706

include/linux/arcdevice.h,1964
#define _LINUX_ARCDEVICE_H20,707
#define ARC_20020 27,810
#define ARC_RIM_I 28,834
#define ARC_90xx 29,858
#define ARC_90xx_IO 30,882
#define MAX_ARCNET_DEVS 32,907
#define DETECT_RECONFIGS49,1613
#define RECON_THRESHOLD 63,2126
#define TX_TIMEOUT 72,2506
#define D_NORMAL	95,3222
#define D_EXTRA	96,3275
#define	D_INIT	97,3334
#define D_INIT_REASONS	98,3384
#define D_DURING	100,3520
#define D_TX	101,3581
#define D_RX	102,3622
#define D_SKB	103,3663
#define ARCNET_DEBUG_MAX 106,3728
#define ARCNET_DEBUG 110,3821
extern int arcnet_debug;112,3868
#define BUGLVL(BUGLVL115,3934
#define BUGMSG2(BUGMSG2116,3993
#define BUGMSG(BUGMSG117,4073
#define SETMASK 124,4256
#define RESETtime 130,4453
#define MTU	140,4804
#define MinTU	141,4849
#define XMTU	142,4898
#define TXFREEflag	145,4987
#define TXACKflag 146,5050
#define RECONflag 147,5118
#define TESTflag 148,5184
#define RESETflag 149,5240
#define RES1flag 150,5301
#define RES2flag 151,5380
#define NORXflag 152,5459
#define AUTOINCflag 155,5581
#define IOMAPflag 156,5654
#define ENABLE16flag 157,5734
#define NOTXcmd 164,6056
#define NORXcmd 165,6122
#define TXcmd 166,6185
#define RXcmd 167,6250
#define CONFIGcmd 168,6312
#define CFLAGScmd 169,6379
#define TESTcmd 170,6437
#define RESETclear 173,6545
#define CONFIGclear 174,6606
#define TESTload 177,6716
#define TESTvalue 180,6847
#define RXbcasts 183,6947
#define NORMALconf 186,7061
#define EXTconf 187,7126
#define EnableReceiver(EnableReceiver191,7241
#define JIFFER(JIFFER195,7306
union ArcPacketArcPacket198,7422
struct ClientDataClientData209,7690
#define EXTRA_CLIENTDATA 222,8084
struct S_ClientDataS_ClientData229,8274
#define S_EXTRA_CLIENTDATA 241,8628
struct IncomingIncoming247,8824
struct OutgoingOutgoing255,9083
struct arcnet_local arcnet_local268,9464
#define arcnet_dump_skb(arcnet_dump_skb333,11862
#define arcnet_dump_packet(arcnet_dump_packet340,12072

include/linux/if_pppvar.h,169
#define NP_IP	61,2652
#define NP_IPX	62,2693
#define NP_AT	63,2730
#define NP_IPV6	64,2772
#define NUM_NP	65,2815
#define OBUFSIZE	67,2855
struct ppp ppp73,2958

include/linux/ncp.h,2485
#define _LINUX_NCP_H10,126
#define NCP_PTYPE 15,197
#define NCP_PORT 16,237
#define NCP_ALLOC_SLOT_REQUEST 18,280
#define NCP_REQUEST 19,322
#define NCP_DEALLOC_SLOT_REQUEST 20,364
struct ncp_request_header ncp_request_header22,407
#define NCP_REPLY 32,712
#define NCP_POSITIVE_ACK 33,754
struct ncp_reply_header ncp_reply_header35,797
#define NCP_VOLNAME_LEN 46,1155
#define NCP_NUMBER_OF_VOLUMES 47,1184
struct ncp_volume_info ncp_volume_info48,1219
#define aRONLY 60,1521
#define aHIDDEN 61,1560
#define aSYSTEM 62,1599
#define aEXECUTE 63,1638
#define aDIR 64,1677
#define aARCH 65,1716
#define AR_READ 67,1756
#define AR_WRITE 68,1793
#define AR_EXCLUSIVE 69,1830
#define NCP_FILE_ID_LEN 71,1868
#define NW_NS_DOS 74,1925
#define NW_NS_MAC 75,1949
#define NW_NS_NFS 76,1973
#define NW_NS_FTAM 77,1997
#define NW_NS_OS2 78,2021
#define RIM_NAME	81,2087
#define RIM_SPACE_ALLOCATED 82,2131
#define RIM_ATTRIBUTES	83,2182
#define RIM_DATA_SIZE	84,2232
#define RIM_TOTAL_SIZE	85,2281
#define RIM_EXT_ATTR_INFO 86,2331
#define RIM_ARCHIVE	87,2382
#define RIM_MODIFY	88,2429
#define RIM_CREATION	89,2475
#define RIM_OWNING_NAMESPACE 90,2523
#define RIM_DIRECTORY	91,2574
#define RIM_RIGHTS	92,2623
#define RIM_ALL 93,2669
#define RIM_COMPRESSED_INFO 94,2713
#define OC_MODE_OPEN	97,2789
#define OC_MODE_TRUNCATE 98,2817
#define OC_MODE_REPLACE 99,2848
#define OC_MODE_CREATE	100,2879
#define OC_ACTION_NONE	103,2936
#define OC_ACTION_OPEN	104,2967
#define OC_ACTION_CREATE 105,2998
#define OC_ACTION_TRUNCATE 106,3030
#define OC_ACTION_REPLACE 107,3062
#define AR_READ_ONLY	111,3147
#define AR_WRITE_ONLY	112,3178
#define AR_DENY_READ	113,3210
#define AR_DENY_WRITE	114,3241
#define AR_COMPATIBILITY 115,3273
#define AR_WRITE_THROUGH 116,3307
#define AR_OPEN_COMPRESSED 117,3341
struct nw_info_struct nw_info_struct120,3383
#define DM_ATTRIBUTES	150,4605
#define DM_CREATE_DATE	151,4651
#define DM_CREATE_TIME	152,4698
#define DM_CREATOR_ID	153,4745
#define DM_ARCHIVE_DATE 154,4791
#define DM_ARCHIVE_TIME 155,4839
#define DM_ARCHIVER_ID	156,4887
#define DM_MODIFY_DATE	157,4934
#define DM_MODIFY_TIME	158,4981
#define DM_MODIFIER_ID	159,5028
#define DM_LAST_ACCESS_DATE	160,5075
#define DM_INHERITED_RIGHTS_MASK 161,5126
#define DM_MAXIMUM_SPACE	162,5181
struct nw_modify_dos_info nw_modify_dos_info164,5230
struct nw_file_info nw_file_info181,5896
struct nw_search_sequence nw_search_sequence190,6121

include/linux/ppp-comp.h,1565
#define _NET_PPP_COMP_H43,1804
#define DO_BSD_COMPRESS	51,1954
#define DO_DEFLATE	54,2045
#define DO_PREDICTOR_1	56,2107
#define DO_PREDICTOR_2	57,2132
struct compressor compressor63,2225
#define DECOMP_ERROR	123,4175
#define DECOMP_FATALERROR	124,4236
#define CCP_CONFREQ	130,4323
#define CCP_CONFACK	131,4345
#define CCP_TERMREQ	132,4367
#define CCP_TERMACK	133,4389
#define CCP_RESETREQ	134,4411
#define CCP_RESETACK	135,4435
#define CCP_MAX_OPTION_LENGTH	141,4500
#define CCP_CODE(CCP_CODE147,4568
#define CCP_ID(CCP_ID148,4600
#define CCP_LENGTH(CCP_LENGTH149,4630
#define CCP_HDRLEN	150,4681
#define CCP_OPT_CODE(CCP_OPT_CODE152,4704
#define CCP_OPT_LENGTH(CCP_OPT_LENGTH153,4739
#define CCP_OPT_MINLEN	154,4776
#define CI_BSD_COMPRESS	160,4844
#define CILEN_BSD_COMPRESS	161,4910
#define BSD_NBITS(BSD_NBITS164,5045
#define BSD_VERSION(BSD_VERSION165,5111
#define BSD_CURRENT_VERSION	166,5177
#define BSD_MAKE_OPT(BSD_MAKE_OPT167,5237
#define BSD_MIN_BITS	169,5284
#define BSD_MAX_BITS	170,5343
#define CI_DEFLATE	176,5439
#define CI_DEFLATE_DRAFT	177,5494
#define CILEN_DEFLATE	178,5561
#define DEFLATE_MIN_SIZE	180,5621
#define DEFLATE_MAX_SIZE	181,5648
#define DEFLATE_METHOD_VAL	182,5676
#define DEFLATE_SIZE(DEFLATE_SIZE183,5705
#define DEFLATE_METHOD(DEFLATE_METHOD184,5762
#define DEFLATE_MAKE_OPT(DEFLATE_MAKE_OPT185,5801
#define DEFLATE_CHK_SEQUENCE	187,5891
#define CI_PREDICTOR_1	193,5998
#define CILEN_PREDICTOR_1	194,6060
#define CI_PREDICTOR_2	195,6122
#define CILEN_PREDICTOR_2	196,6184

include/linux/pagemap.h,811
#define _LINUX_PAGEMAP_H2,25
static inline unsigned long page_address(15,208
#define PAGE_HASH_BITS 20,326
#define PAGE_HASH_SIZE 21,352
#define PAGE_AGE_VALUE 23,398
extern unsigned long page_cache_size;25,425
extern struct page * page_hash_table[26,508
static inline unsigned long _page_hashfn(34,781
#define i 36,868
#define o 37,958
#define s(s38,991
#define page_hash(page_hash45,1099
static inline struct page * __find_page(47,1177
static inline struct page *find_page(67,1575
static inline void remove_page_from_hash_queue(72,1724
static inline void __add_page_to_hash_queue(83,1982
static inline void add_page_to_hash_queue(92,2198
static inline void remove_page_from_inode_queue(97,2367
static inline void add_page_to_inode_queue(113,2720
static inline void wait_on_page(126,3024

include/linux/ppp_defs.h,1357
#define _PPP_DEFS_H_43,1773
#define PPP_HDRLEN	48,1826
#define PPP_FCSLEN	49,1884
#define PPP_MRU	50,1926
#define PPP_ADDRESS(PPP_ADDRESS52,1994
#define PPP_CONTROL(PPP_CONTROL53,2036
#define PPP_PROTOCOL(PPP_PROTOCOL54,2078
#define	PPP_ALLSTATIONS	59,2184
#define	PPP_UI	60,2250
#define	PPP_FLAG	61,2300
#define	PPP_ESCAPE	62,2342
#define	PPP_TRANS	63,2400
#define PPP_IP	68,2498
#define PPP_AT	69,2543
#define PPP_IPX	70,2589
#define	PPP_VJC_COMP	71,2630
#define	PPP_VJC_UNCOMP	72,2680
#define PPP_IPV6	73,2734
#define PPP_COMP	74,2790
#define PPP_IPCP	75,2836
#define PPP_ATCP	76,2886
#define PPP_IPXCP	77,2943
#define PPP_IPV6CP	78,2995
#define PPP_CCP	79,3049
#define PPP_LCP	80,3108
#define PPP_PAP	81,3160
#define PPP_LQR	82,3223
#define PPP_CHAP	83,3282
#define PPP_CBCP	84,3351
#define PPP_INITFCS	90,3448
#define PPP_GOODFCS	91,3499
#define PPP_FCS(PPP_FCS92,3553
typedef __u32		ext_accm[ext_accm98,3691
enum NPmode NPmode103,3777
    NPMODE_PASS,104,3791
    NPMODE_DROP,105,3839
    NPMODE_ERROR,106,3888
    NPMODE_QUEUE	107,3929
struct pppstat	pppstat113,4022
struct vjstat vjstat129,4559
struct compstat compstat140,5059
struct ppp_stats ppp_stats155,5599
struct ppp_comp_stats ppp_comp_stats160,5732
struct ppp_idle ppp_idle169,5992
#define __P(__P176,6166
#define __P(__P178,6189

include/linux/swapctl.h,625
#define _LINUX_SWAPCTL_H2,25
typedef struct buffer_mem_v1buffer_mem_v17,96
} buffer_mem_v1;buffer_mem_v112,211
typedef buffer_mem_v1 buffer_mem_t;buffer_mem_t13,228
extern buffer_mem_t buffer_mem;14,264
extern buffer_mem_t page_cache;15,296
typedef struct freepages_v1freepages_v117,329
} freepages_v1;freepages_v122,417
typedef freepages_v1 freepages_t;freepages_t23,433
extern freepages_t freepages;24,467
typedef struct pager_daemon_v1pager_daemon_v126,498
} pager_daemon_v1;pager_daemon_v131,610
typedef pager_daemon_v1 pager_daemon_t;pager_daemon_t32,629
extern pager_daemon_t pager_daemon;33,669

include/linux/ncp_fs.h,2420
#define _LINUX_NCP_FS_H9,99
struct ncp_ioctl_request ncp_ioctl_request23,307
struct ncp_fs_info ncp_fs_info29,395
struct ncp_sign_initncp_sign_init41,692
struct ncp_lock_ioctlncp_lock_ioctl47,760
#define NCP_LOCK_LOG	49,784
#define NCP_LOCK_SH	50,807
#define NCP_LOCK_EX	51,829
#define NCP_LOCK_CLEAR	52,851
#define NCP_LOCK_DEFAULT_TIMEOUT	57,947
#define NCP_LOCK_MAX_TIMEOUT	58,983
struct ncp_setroot_ioctlncp_setroot_ioctl62,1036
struct ncp_objectname_ioctlncp_objectname_ioctl69,1120
#define NCP_AUTH_NONE	71,1150
#define NCP_AUTH_BIND	72,1177
#define NCP_AUTH_NDS	73,1204
struct ncp_privatedata_ioctlncp_privatedata_ioctl79,1347
#define	NCP_IOC_NCPREQUEST	85,1431
#define	NCP_IOC_GETMOUNTUID	86,1498
#define	NCP_IOC_GETMOUNTUID_INT	91,1673
#define NCP_IOC_CONN_LOGGED_IN 95,1748
#define NCP_GET_FS_INFO_VERSION 97,1801
#define NCP_IOC_GET_FS_INFO 98,1837
#define NCP_IOC_SIGN_INIT	100,1912
#define NCP_IOC_SIGN_WANTED	101,1974
#define NCP_IOC_SET_SIGN_WANTED	102,2021
#define NCP_IOC_LOCKUNLOCK	104,2073
#define NCP_IOC_GETROOT	106,2138
#define NCP_IOC_SETROOT	107,2203
#define NCP_IOC_GETOBJECTNAME	109,2269
#define NCP_IOC_SETOBJECTNAME	110,2343
#define NCP_IOC_GETPRIVATEDATA	111,2416
#define NCP_IOC_SETPRIVATEDATA	112,2493
#define NCP_PACKET_SIZE 117,2636
#define NCP_MAXPATHLEN 119,2666
#define NCP_MAXNAMELEN 120,2693
#define DEBUG_NCP 128,2806
#define DPRINTK(DPRINTK131,2851
#define DPRINTK(DPRINTK133,2915
#define DDPRINTK(DDPRINTK137,2974
#define DDPRINTK(DDPRINTK139,3039
#define NCP_READDIR_CACHE_SIZE 145,3162
#define NCP_MAX_RPC_TIMEOUT 147,3204
struct ncpfs_i ncpfs_i154,3452
struct ncpfs_inode_info ncpfs_inode_info169,3896
#define NCP_SUPER_MAGIC 175,4026
#define NCP_SBP(NCP_SBP178,4060
#define NCP_SERVER(NCP_SERVER180,4135
#define NCP_FINFO(NCP_FINFO182,4244
extern int ncp_malloced;188,4368
extern int ncp_current_malloced;189,4393
 ncp_kmalloc(192,4448
static inline void ncp_kfree_s(199,4580
#define ncp_kmalloc(ncp_kmalloc207,4719
#define ncp_kfree_s(ncp_kfree_s208,4757
extern struct inode_operations ncp_dir_inode_operations;221,5246
extern struct inode_operations ncp_file_inode_operations;240,5980
static inline void str_upper(249,6237
static inline void str_lower(259,6380
static inline int ncp_namespace(269,6523
static inline int ncp_preserve_case(275,6686
static inline int ncp_case_sensitive(290,7020

include/linux/if_frad.h,1261
#define _FRAD_H_25,883
struct dlci_adddlci_add34,1078
#define DLCI_GET_CONF	40,1143
#define DLCI_SET_CONF	41,1186
struct dlci_conf dlci_conf48,1415
#define DLCI_GET_SLAVE	66,1735
#define DLCI_IGNORE_CIR_OUT	69,1815
#define DLCI_ACCOUNT_CIR_IN	70,1850
#define DLCI_BUFFER_IF	71,1885
#define DLCI_VALID_FLAGS	73,1917
#define DLCI_RET_OK	76,2015
#define DLCI_RET_ERR	77,2041
#define DLCI_RET_DROP	78,2068
#define FRAD_GET_CONF	81,2147
#define FRAD_SET_CONF	82,2186
#define FRAD_LAST_IOCTL	84,2230
struct frad_conf frad_conf91,2436
#define FRAD_STATION_CPE	114,2786
#define FRAD_STATION_NODE	115,2818
#define FRAD_TX_IGNORE_CIR	117,2852
#define FRAD_RX_ACCOUNT_CIR	118,2886
#define FRAD_DROP_ABORTED	119,2921
#define FRAD_BUFFERIF	120,2954
#define FRAD_STATS	121,2984
#define FRAD_MCI	122,3011
#define FRAD_AUTODLCI	123,3036
#define FRAD_VALID_FLAGS	124,3066
#define FRAD_CLOCK_INT	126,3099
#define FRAD_CLOCK_EXT	127,3130
struct frhdrfrhdr132,3230
#define IP_NLPID 143,3543
#define FRAD_I_UI	147,3624
#define FRAD_P_PADDING	149,3649
#define FRAD_P_Q933	150,3678
#define FRAD_P_SNAP	151,3704
#define FRAD_P_CLNP	152,3730
#define FRAD_P_IP	153,3756
struct dlci_localdlci_local155,3781
struct frad_localfrad_local166,4043

include/linux/mount.h,211
#define _LINUX_MOUNT_H12,277
#define DQUOT_USR_ENABLED	14,301
#define DQUOT_GRP_ENABLED	15,363
struct quota_mount_optionsquota_mount_options17,427
struct vfsmountvfsmount27,862
#define MNT_FORCE	44,1384

include/linux/smp_lock.h,226
#define __LINUX_SMPLOCK_H2,26
#define lock_kernel(lock_kernel6,70
#define unlock_kernel(unlock_kernel7,111
#define release_kernel_lock(release_kernel_lock8,154
#define reacquire_kernel_lock(reacquire_kernel_lock9,210

include/linux/ncp_fs_i.h,225
#define _LINUX_NCP_FS_I9,92
enum ncp_inode_state ncp_inode_state15,160
	NCP_INODE_VALID 16,183
	NCP_INODE_LOOKED_UP,17,235
	NCP_INODE_CACHED,18,284
	NCP_INODE_INVALID19,347
struct ncp_inode_info ncp_inode_info25,415

include/linux/wrapper.h,1367
#define _WRAPPER_H_2,20
#define wait_handle 3,40
#define file_handle 4,78
#define inode_handle 5,110
#define select_table_handle 6,144
#define vm_area_handle 7,185
#define file_operation_handle 8,230
#define connect_wrapper(connect_wrapper10,277
#define current_got_fatal_signal(current_got_fatal_signal11,306
#define current_set_timeout(current_set_timeout12,367
#define module_interruptible_sleep_on 14,424
#define module_wake_up 15,485
#define module_select_wait 16,516
#define module_register_chrdev 17,555
#define module_unregister_chrdev 18,602
#define module_register_blkdev 19,653
#define module_unregister_blkdev 20,700
#define inode_get_rdev(inode_get_rdev22,752
#define inode_get_count(inode_get_count23,788
#define inode_inc_count(inode_inc_count24,826
#define inode_dec_count(inode_dec_count25,866
#define file_get_flags(file_get_flags27,907
#define vma_set_inode(vma_set_inode29,945
#define vma_get_flags(vma_get_flags30,988
#define vma_get_offset(vma_get_offset31,1025
#define vma_get_start(vma_get_start32,1064
#define vma_get_end(vma_get_end33,1101
#define vma_get_page_prot(vma_get_page_prot34,1134
#define mem_map_reserve(mem_map_reserve36,1180
#define mem_map_unreserve(mem_map_unreserve37,1247
#define mem_map_inc_count(mem_map_inc_count38,1318
#define mem_map_dec_count(mem_map_dec_count39,1379

include/linux/ncp_fs_sb.h,223
#define _NCP_FS_SB9,97
#define NCP_DEFAULT_BUFSIZE 16,191
#define NCP_DEFAULT_OPTIONS 17,224
struct ncp_server ncp_server19,286
static inline int ncp_conn_valid(78,1708
static inline void ncp_invalidate_conn(83,1818

include/linux/quota.h,1652
#define _LINUX_QUOTA_40,2035
#define dbtob(dbtob47,2149
#define btodb(btodb48,2180
#define fs_to_dq_blocks(fs_to_dq_blocks54,2333
#define MAX_IQ_TIME 65,2794
#define MAX_DQ_TIME 66,2848
#define MAXQUOTAS 68,2903
#define USRQUOTA 69,2923
#define GRPQUOTA 70,2979
#define INITQFNAMES 75,3102
#define QUOTAFILENAME 81,3204
#define QUOTAGROUP 82,3234
extern int nr_dquots,84,3262
extern int nr_dquots, nr_free_dquots;84,3262
extern int max_dquots;85,3300
extern int dquot_root_squash;86,3323
#define NR_DQHASH 88,3354
#define NR_DQUOTS 89,3417
#define SUBCMDMASK 97,3759
#define SUBCMDSHIFT 98,3786
#define QCMD(QCMD99,3808
#define Q_QUOTAON 101,3883
#define Q_QUOTAOFF 102,3929
#define Q_GETQUOTA 103,3976
#define Q_SETQUOTA 104,4029
#define Q_SETUSE 105,4082
#define Q_SYNC 106,4124
#define Q_SETQLIM 107,4195
#define Q_GETSTATS 108,4238
#define Q_RSQUASH 109,4290
struct dqblk dqblk116,4528
#define	dq_bhardlimit	130,5037
#define	dq_bsoftlimit	131,5081
#define	dq_curblocks	132,5125
#define	dq_ihardlimit	133,5167
#define	dq_isoftlimit	134,5211
#define	dq_curinodes	135,5255
#define	dq_btime	136,5297
#define	dq_itime	137,5331
#define dqoff(dqoff139,5366
struct dqstats dqstats141,5433
#define MAX_QUOTA_MESSAGE 158,5720
#define DQ_LOCKED 160,5750
#define DQ_WANT 161,5801
#define DQ_MOD 162,5852
#define DQ_BLKS 163,5911
#define DQ_INODES 164,5984
#define DQ_FAKE 165,6059
struct dquot dquot167,6114
#define NODQUOT 187,6949
#define QUOTA_SYSCALL 192,7023
#define SET_QUOTA 193,7054
#define SET_USE 194,7085
#define SET_QLIMIT 195,7116
#define QUOTA_OK 197,7148
#define NO_QUOTA 198,7176

include/linux/ncp_mount.h,273
#define _LINUX_NCP_MOUNT_H9,105
#define NCP_MOUNT_VERSION 16,233
#define NCP_MOUNT_SOFT 19,285
#define NCP_MOUNT_INTR 20,315
#define NCP_MOUNT_STRONG 21,345
#define NCP_MOUNT_NO_OS2 22,419
#define NCP_MOUNT_NO_NFS 23,451
struct ncp_mount_data ncp_mount_data25,484

include/linux/baycom.h,151
#define _BAYCOM_H8,175
struct baycom_debug_data baycom_debug_data15,311
struct baycom_ioctl baycom_ioctl21,402
#define BAYCOMCTL_GETDEBUG 33,605

include/linux/md.h,2513
#define _MD_H18,621
#define MD_MAJOR_VERSION	29,894
#define MD_MINOR_VERSION	30,922
#define MD_PATCHLEVEL_VERSION	31,951
#define MD_DEFAULT_DISK_READAHEAD	33,985
#define REGISTER_DEV 36,1046
#define START_MD 37,1087
#define STOP_MD 38,1128
#define REGISTER_DEV_NEW	39,1169
#define FAULT_SHIFT 51,1485
#define PERSONALITY_SHIFT 52,1513
#define FACTOR_MASK 54,1543
#define FAULT_MASK 55,1582
#define PERSONALITY_MASK 56,1621
#define MD_RESERVED 58,1661
#define LINEAR 59,1711
#define STRIPED 60,1764
#define RAID0 61,1817
#define RAID1 62,1851
#define RAID5 63,1904
#define MAX_PERSONALITY 64,1957
#define MD_RESERVED_BYTES	92,2791
#define MD_RESERVED_SECTORS	93,2830
#define MD_RESERVED_BLOCKS	94,2885
#define MD_NEW_SIZE_SECTORS(MD_NEW_SIZE_SECTORS96,2947
#define MD_NEW_SIZE_BLOCKS(MD_NEW_SIZE_BLOCKS97,3036
#define MD_SB_BYTES	99,3123
#define MD_SB_WORDS	100,3150
#define MD_SB_BLOCKS	101,3190
#define MD_SB_SECTORS	102,3240
#define	MD_SB_GENERIC_OFFSET	107,3337
#define MD_SB_PERSONALITY_OFFSET	108,3369
#define MD_SB_DISKS_OFFSET	109,3405
#define MD_SB_DESCRIPTOR_OFFSET	110,3437
#define MD_SB_GENERIC_CONSTANT_WORDS	112,3475
#define MD_SB_GENERIC_STATE_WORDS	113,3515
#define MD_SB_GENERIC_WORDS	114,3552
#define MD_SB_PERSONALITY_WORDS	115,3640
#define MD_SB_DISKS_WORDS	116,3676
#define MD_SB_DESCRIPTOR_WORDS	117,3707
#define MD_SB_RESERVED_WORDS	118,3742
#define MD_SB_EQUAL_WORDS	119,3872
#define MD_SB_DISKS	120,3967
#define MD_FAULTY_DEVICE	125,4077
#define MD_ACTIVE_DEVICE	126,4142
#define MD_SYNC_DEVICE	127,4222
typedef struct md_device_descriptor_s md_device_descriptor_s129,4292
} md_descriptor_t;md_descriptor_t136,4625
#define MD_SB_MAGIC	138,4645
#define MD_SB_CLEAN	143,4710
#define MD_SB_ERRORS	144,4733
typedef struct md_superblock_s md_superblock_s146,4758
} md_superblock_t;md_superblock_t196,6371
#define SUPPORT_RECONSTRUCTION	209,6609
#define MAX_REAL 211,6643
#define MAX_MD_DEV 212,6711
#define FACTOR(FACTOR214,6763
#define MAX_FAULT(MAX_FAULT215,6822
#define PERSONALITY(PERSONALITY216,6885
#define FACTOR_SHIFT(FACTOR_SHIFT218,6950
struct real_devreal_dev220,6999
#define SPARE_INACTIVE	233,7295
#define SPARE_WRITE	234,7320
#define SPARE_ACTIVE	235,7342
struct md_personalitymd_personality237,7366
struct md_devmd_dev262,8405
struct md_thread md_thread274,8604
#define THREAD_WAKEUP 283,8781
extern struct md_dev md_dev[285,8807
extern int md_size[286,8848
extern int md_maxreadahead[287,8880

include/linux/lists.h,607
#define DLNODE(DLNODE5,50
#define DNODE_SINGLE(DNODE_SINGLE11,172
#define DNODE_NULL 12,215
#define DLIST_INIT(DLIST_INIT14,241
#define DLIST_NEXT(DLIST_NEXT18,375
#define DLIST_PREV(DLIST_PREV19,419
#define DLIST_INSERT_AFTER(DLIST_INSERT_AFTER21,464
#define DLIST_INSERT_BEFORE(DLIST_INSERT_BEFORE28,715
#define DLIST_DELETE(DLIST_DELETE35,967
#define QUEUE_INIT(QUEUE_INIT46,1237
#define QUEUE_FIRST(QUEUE_FIRST49,1352
#define QUEUE_LAST(QUEUE_LAST50,1415
#define QUEUE_EMPTY(QUEUE_EMPTY51,1477
#define QUEUE_ENTER(QUEUE_ENTER55,1637
#define QUEUE_REMOVE(QUEUE_REMOVE62,1895

include/linux/nbd.h,681
#define LINUX_NBD_H2,20
#define NBD_SET_SOCK	4,41
#define NBD_SET_BLKSIZE	5,77
#define NBD_SET_SIZE	6,116
#define NBD_DO_IT	7,152
#define NBD_CLEAR_SOCK	8,185
#define NBD_CLEAR_QUE	9,223
#define NBD_PRINT_DEBUG	10,260
#define NBD_SET_SIZE_BLOCKS	11,299
#define LOCAL_END_REQUEST18,413
extern int requests_in;23,480
extern int requests_out;24,504
nbd_end_request(28,550
#define MAX_NBD 38,730
struct nbd_device nbd_device40,751
#define NBD_READ_ONLY 44,841
#define NBD_WRITE_NOCHK 45,870
#define NBD_INITIALISED 46,901
#define NBD_REQUEST_MAGIC 60,1309
#define NBD_REPLY_MAGIC 61,1346
struct nbd_request nbd_request68,1546
struct nbd_reply nbd_reply80,1709

include/linux/isdnif.h,2927
#define isdnif_h117,3753
#define ISDN_PTYPE_UNKNOWN 122,3819
#define ISDN_PTYPE_1TR6 123,3879
#define ISDN_PTYPE_EURO 124,3939
#define ISDN_PTYPE_LEASED 125,3999
#define ISDN_PTYPE_NI1 126,4059
#define ISDN_PTYPE_MAX 127,4119
#define ISDN_PROTO_L2_X75I 132,4228
#define ISDN_PROTO_L2_X75UI 133,4301
#define ISDN_PROTO_L2_X75BUI 134,4374
#define ISDN_PROTO_L2_HDLC 135,4447
#define ISDN_PROTO_L2_TRANS 136,4520
#define ISDN_PROTO_L2_X25DTE 137,4593
#define ISDN_PROTO_L2_X25DCE 138,4666
#define ISDN_PROTO_L2_V11096 139,4739
#define ISDN_PROTO_L2_V11019 140,4812
#define ISDN_PROTO_L2_V11038 141,4885
#define ISDN_PROTO_L2_MAX 142,4958
#define ISDN_PROTO_L3_TRANS 147,5080
#define ISDN_PROTO_L3_MAX 148,5147
#define ISDN_CMD_IOCTL 158,5310
#define ISDN_CMD_DIAL 159,5388
#define ISDN_CMD_ACCEPTD 160,5466
#define ISDN_CMD_ACCEPTB 161,5544
#define ISDN_CMD_HANGUP 162,5622
#define ISDN_CMD_CLREAZ 163,5700
#define ISDN_CMD_SETEAZ 164,5778
#define ISDN_CMD_GETEAZ 165,5856
#define ISDN_CMD_SETSIL 166,5934
#define ISDN_CMD_GETSIL 167,6012
#define ISDN_CMD_SETL2 168,6090
#define ISDN_CMD_GETL2 169,6168
#define ISDN_CMD_SETL3 170,6246
#define ISDN_CMD_GETL3 171,6324
#define ISDN_CMD_LOCK 172,6402
#define ISDN_CMD_UNLOCK 173,6480
#define ISDN_CMD_SUSPEND 174,6558
#define ISDN_CMD_RESUME 175,6636
#define ISDN_STAT_STAVAIL 182,6799
#define ISDN_STAT_ICALL 183,6876
#define ISDN_STAT_RUN 184,6953
#define ISDN_STAT_STOP 185,7030
#define ISDN_STAT_DCONN 186,7107
#define ISDN_STAT_BCONN 187,7184
#define ISDN_STAT_DHUP 188,7261
#define ISDN_STAT_BHUP 189,7338
#define ISDN_STAT_CINF 190,7415
#define ISDN_STAT_LOAD 191,7492
#define ISDN_STAT_UNLOAD 192,7569
#define ISDN_STAT_BSENT 193,7646
#define ISDN_STAT_NODCH 194,7723
#define ISDN_STAT_ADDCH 195,7800
#define ISDN_STAT_CAUSE 196,7877
#define ISDN_STAT_L1ERR 197,7954
#define ISDN_STAT_L1ERR_SEND 202,8067
#define ISDN_STAT_L1ERR_RECV 203,8098
#define ISDN_FEATURE_L2_X75I 209,8200
#define ISDN_FEATURE_L2_X75UI 210,8263
#define ISDN_FEATURE_L2_X75BUI 211,8327
#define ISDN_FEATURE_L2_HDLC 212,8392
#define ISDN_FEATURE_L2_TRANS 213,8455
#define ISDN_FEATURE_L2_X25DTE 214,8519
#define ISDN_FEATURE_L2_X25DCE 215,8584
#define ISDN_FEATURE_L2_V11096 216,8649
#define ISDN_FEATURE_L2_V11019 217,8714
#define ISDN_FEATURE_L2_V11038 218,8779
#define ISDN_FEATURE_L2_MASK 220,8845
#define ISDN_FEATURE_L2_SHIFT 221,8911
#define ISDN_FEATURE_L3_TRANS 224,8962
#define ISDN_FEATURE_L3_MASK 226,9028
#define ISDN_FEATURE_L3_SHIFT 227,9095
#define ISDN_FEATURE_P_UNKNOWN 230,9149
#define ISDN_FEATURE_P_1TR6 231,9215
#define ISDN_FEATURE_P_EURO 232,9278
#define ISDN_FEATURE_P_NI1 233,9341
#define ISDN_FEATURE_P_MASK 235,9404
#define ISDN_FEATURE_P_SHIFT 236,9473
typedef struct setup_parm setup_parm238,9511
} setup_parm;setup_parm245,9863
} isdn_ctrl;isdn_ctrl261,10437
} isdn_if;isdn_if357,13521

include/linux/isdn_ppp.h,708
#define _LINUX_ISDN_PPP_H2,26
#define CALLTYPE_INCOMING 7,136
#define CALLTYPE_OUTGOING 8,166
#define CALLTYPE_CALLBACK 9,196
struct pppcallinfopppcallinfo11,227
#define PPPIOCGCALLINFO 19,347
#define PPPIOCBUNDLE 20,405
#define PPPIOCGMPFLAGS 21,446
#define PPPIOCSMPFLAGS 22,487
#define PPPIOCSMPMTU 23,528
#define PPPIOCSMPMRU 24,569
#define PPPIOCGCOMPRESSORS 25,610
#define PPPIOCSCOMPRESSOR 26,665
#define PPP_MP 28,710
#define PPP_LINK_COMP 29,741
#define SC_MP_PROT 31,773
#define SC_REJ_MP_PROT 32,809
#define SC_OUT_SHORT_SEQ 33,845
#define SC_IN_SHORT_SEQ 34,881
#define MP_END_FRAG 36,918
#define MP_BEGIN_FRAG 37,946
struct isdn_ppp_compressor isdn_ppp_compressor44,1112

include/linux/acct.h,343
#define _LINUX_ACCT_H16,471
typedef __u16	comp_t;comp_t26,699
#define ACCT_COMM	35,887
struct acctacct37,909
#define AFORK	66,1974
#define ASU	67,2036
#define ACOMPAT	68,2091
#define ACORE	69,2167
#define AXSIG	70,2209
#define AHZ	72,2263
#define acct_auto_close(acct_auto_close82,2445
#define acct_process(acct_process83,2489

include/linux/icmpv6.h,1484
#define _LINUX_ICMPV6_H2,24
struct icmp6hdr icmp6hdr6,77
#define icmp6_identifier	59,1184
#define icmp6_sequence	60,1240
#define icmp6_pointer	61,1293
#define icmp6_mtu	62,1342
#define icmp6_unused	63,1387
#define icmp6_maxdelay	64,1435
#define icmp6_router	65,1485
#define icmp6_solicited	66,1537
#define icmp6_override	67,1595
#define icmp6_ndiscreserved	68,1651
#define icmp6_hop_limit	69,1711
#define icmp6_addrconf_managed	70,1767
#define icmp6_addrconf_other	71,1827
#define icmp6_rt_lifetime	72,1883
#define ICMPV6_DEST_UNREACH	76,1947
#define ICMPV6_PKT_TOOBIG	77,1978
#define ICMPV6_TIME_EXCEED	78,2007
#define ICMPV6_PARAMPROB	79,2037
#define ICMPV6_INFOMSG_MASK	81,2066
#define ICMPV6_ECHO_REQUEST	83,2101
#define ICMPV6_ECHO_REPLY	84,2134
#define ICMPV6_MGM_QUERY	85,2165
#define ICMPV6_MGM_REPORT 86,2195
#define ICMPV6_MGM_REDUCTION 87,2232
#define ICMPV6_NOROUTE	92,2314
#define ICMPV6_ADM_PROHIBITED	93,2341
#define ICMPV6_NOT_NEIGHBOUR	94,2374
#define ICMPV6_ADDR_UNREACH	95,2406
#define ICMPV6_PORT_UNREACH	96,2437
#define ICMPV6_EXC_HOPLIMIT	101,2503
#define ICMPV6_EXC_FRAGTIME	102,2534
#define ICMPV6_HDR_FIELD	107,2604
#define ICMPV6_UNK_NEXTHDR	108,2632
#define ICMPV6_UNK_OPTION	109,2662
#define ICMPV6_FILTER	115,2734
#define ICMPV6_FILTER_BLOCK	121,2786
#define ICMPV6_FILTER_PASS	122,2817
#define ICMPV6_FILTER_BLOCKOTHERS	123,2847
#define ICMPV6_FILTER_PASSONLY	124,2883
struct icmp6_filter icmp6_filter126,2918

include/linux/sdla.h,6418
#define SDLA_H24,751
#define SDLA_TYPES27,786
#define SDLA_S502A	28,805
#define SDLA_S502E	29,831
#define SDLA_S503	30,857
#define SDLA_S507	31,882
#define SDLA_S508	32,907
#define SDLA_S509	33,932
#define SDLA_UNKNOWN	34,957
#define SDLA_S508_PORT_V35	37,1024
#define SDLA_S508_PORT_RS232	38,1057
#define SDLA_CPU_3M	41,1114
#define SDLA_CPU_5M	42,1141
#define SDLA_CPU_7M	43,1168
#define SDLA_CPU_8M	44,1195
#define SDLA_CPU_10M	45,1222
#define SDLA_CPU_16M	46,1250
#define SDLA_CPU_12M	47,1278
#define SDLA_IDENTIFY	50,1333
#define SDLA_CPUSPEED	51,1379
#define SDLA_PROTOCOL	52,1425
#define SDLA_CLEARMEM	54,1472
#define SDLA_WRITEMEM	55,1518
#define SDLA_READMEM	56,1564
struct sdla_mem sdla_mem58,1610
#define SDLA_START	64,1674
#define SDLA_STOP	65,1717
#define SDLA_NMIADDR	68,1805
#define SDLA_CONF_ADDR	69,1835
#define SDLA_S502A_NMIADDR	70,1867
#define SDLA_CODE_BASEADDR	71,1902
#define SDLA_WINDOW_SIZE	72,1937
#define SDLA_ADDR_MASK	73,1970
#define SDLA_MAX_DATA	76,2042
#define SDLA_MAX_MTU	77,2071
#define SDLA_MAX_DLCI	78,2132
struct sdla_conf sdla_conf81,2203
struct sdla_dlci_conf sdla_dlci_conf101,2536
#define SDLA_CONTROL_WND	122,2892
#define SDLA_502_CMD_BUF	124,2926
#define SDLA_502_RCV_BUF	125,2959
#define	SDLA_502_TXN_AVAIL	126,2992
#define SDLA_502_RCV_AVAIL	127,3027
#define SDLA_502_EVENT_FLAGS	128,3062
#define SDLA_502_MDM_STATUS	129,3099
#define SDLA_502_IRQ_INTERFACE	130,3135
#define SDLA_502_IRQ_PERMISSION	131,3174
#define SDLA_502_DATA_OFS	132,3214
#define SDLA_508_CMD_BUF	134,3249
#define SDLA_508_TXBUF_INFO	135,3282
#define SDLA_508_RXBUF_INFO	136,3318
#define SDLA_508_EVENT_FLAGS	137,3354
#define SDLA_508_MDM_STATUS	138,3391
#define SDLA_508_IRQ_INTERFACE	139,3427
#define SDLA_508_IRQ_PERMISSION	140,3466
#define SDLA_508_TSE_OFFSET	141,3506
#define SDLA_EVENT_STATUS	144,3561
#define SDLA_EVENT_DLCI_STATUS	145,3593
#define SDLA_EVENT_BAD_DLCI	146,3630
#define SDLA_EVENT_LINK_DOWN	147,3664
#define SDLA_INTR_RX	150,3724
#define SDLA_INTR_TX	151,3752
#define SDLA_INTR_MODEM	152,3780
#define SDLA_INTR_COMPLETE	153,3811
#define SDLA_INTR_STATUS	154,3844
#define SDLA_INTR_TIMER	155,3875
#define SDLA_DLCI_DELETED	158,3930
#define SDLA_DLCI_ACTIVE	159,3962
#define SDLA_DLCI_WAITING	160,3993
#define SDLA_DLCI_NEW	161,4025
#define SDLA_DLCI_INCLUDED	162,4054
#define	SDLA_INFORMATION_WRITE	165,4114
#define	SDLA_INFORMATION_READ	166,4151
#define SDLA_ISSUE_IN_CHANNEL_SIGNAL	167,4187
#define	SDLA_SET_DLCI_CONFIGURATION	168,4229
#define	SDLA_READ_DLCI_CONFIGURATION	169,4270
#define	SDLA_DISABLE_COMMUNICATIONS	170,4312
#define	SDLA_ENABLE_COMMUNICATIONS	171,4353
#define	SDLA_READ_DLC_STATUS	172,4393
#define	SDLA_READ_DLC_STATISTICS	173,4428
#define	SDLA_FLUSH_DLC_STATISTICS	174,4466
#define	SDLA_LIST_ACTIVE_DLCI	175,4505
#define	SDLA_FLUSH_INFORMATION_BUFFERS	176,4541
#define	SDLA_ADD_DLCI	177,4585
#define	SDLA_DELETE_DLCI	178,4614
#define	SDLA_ACTIVATE_DLCI	179,4645
#define	SDLA_DEACTIVATE_DLCI	180,4678
#define	SDLA_READ_MODEM_STATUS	181,4713
#define	SDLA_SET_MODEM_STATUS	182,4750
#define	SDLA_READ_COMMS_ERR_STATS	183,4786
#define SDLA_FLUSH_COMMS_ERR_STATS	184,4825
#define	SDLA_READ_CODE_VERSION	185,4865
#define SDLA_SET_IRQ_TRIGGER	186,4902
#define SDLA_GET_IRQ_TRIGGER	187,4937
#define SDLA_ICS_LINK_VERIFY	190,5003
#define SDLA_ICS_STATUS_ENQ	191,5038
#define SDLA_MODEM_DTR_HIGH	194,5098
#define SDLA_MODEM_RTS_HIGH	195,5132
#define SDLA_MODEM_DCD_HIGH	196,5166
#define SDLA_MODEM_CTS_HIGH	197,5200
#define SDLA_MODEM_DCD_LOW	200,5275
#define SDLA_MODEM_CTS_LOW	201,5308
#define SDLA_RET_OK	204,5361
#define SDLA_RET_COMMUNICATIONS	205,5388
#define SDLA_RET_CHANNEL_INACTIVE	206,5426
#define SDLA_RET_DLCI_INACTIVE	207,5465
#define SDLA_RET_DLCI_CONFIG	208,5502
#define SDLA_RET_BUF_TOO_BIG	209,5537
#define SDLA_RET_NO_DATA	210,5572
#define SDLA_RET_BUF_OVERSIZE	211,5603
#define SDLA_RET_CIR_OVERFLOW	212,5639
#define SDLA_RET_NO_BUFS	213,5675
#define SDLA_RET_TIMEOUT	214,5706
#define SDLA_RET_MODEM	215,5737
#define SDLA_RET_CHANNEL_OFF	216,5767
#define SDLA_RET_CHANNEL_ON	217,5802
#define SDLA_RET_DLCI_STATUS	218,5836
#define SDLA_RET_DLCI_UNKNOWN 219,5871
#define SDLA_RET_COMMAND_INVALID 220,5913
#define SDLA_DIRECT_RECV	223,5982
#define SDLA_TX_NO_EXCEPT	224,6015
#define SDLA_NO_ICF_MSGS	225,6049
#define SDLA_TX50_RX50	226,6082
#define SDLA_TX70_RX30	227,6114
#define SDLA_TX30_RX70	228,6146
#define SDLA_IRQ_RECEIVE	231,6205
#define SDLA_IRQ_TRANSMIT	232,6236
#define SDLA_IRQ_MODEM_STAT	233,6268
#define SDLA_IRQ_COMMAND	234,6302
#define SDLA_IRQ_CHANNEL	235,6333
#define SDLA_IRQ_TIMER	236,6364
#define SDLA_8K_WINDOW	239,6435
#define SDLA_S502_SEG_A	240,6465
#define SDLA_S502_SEG_C	241,6496
#define SDLA_S502_SEG_D	242,6527
#define SDLA_S502_SEG_E	243,6558
#define SDLA_S507_SEG_A	244,6589
#define SDLA_S507_SEG_B	245,6620
#define SDLA_S507_SEG_C	246,6651
#define SDLA_S507_SEG_E	247,6682
#define SDLA_S508_SEG_A	248,6713
#define SDLA_S508_SEG_C	249,6744
#define SDLA_S508_SEG_D	250,6775
#define SDLA_S508_SEG_E	251,6806
#define SDLA_IO_EXTENTS	254,6872
#define SDLA_REG_CONTROL	256,6905
#define SDLA_REG_PC_WINDOW	257,6936
#define SDLA_REG_Z80_WINDOW 258,7009
#define SDLA_REG_Z80_CONTROL	259,7085
#define SDLA_S502_STS	261,7157
#define SDLA_S508_GNRL	262,7222
#define SDLA_S508_STS	263,7284
#define SDLA_S508_IDR	264,7338
#define SDLA_S502A_START	267,7419
#define SDLA_S502A_INTREQ	268,7470
#define SDLA_S502A_INTEN	269,7502
#define SDLA_S502A_HALT	270,7533
#define SDLA_S502A_NMI	271,7584
#define SDLA_S502E_CPUEN	273,7645
#define SDLA_S502E_ENABLE	274,7676
#define SDLA_S502E_INTACK	275,7708
#define SDLA_S507_ENABLE	277,7742
#define SDLA_S507_IRQ3	278,7773
#define SDLA_S507_IRQ4	279,7803
#define SDLA_S507_IRQ5	280,7833
#define SDLA_S507_IRQ7	281,7863
#define SDLA_S507_IRQ10	282,7893
#define SDLA_S507_IRQ11	283,7924
#define SDLA_S507_IRQ12	284,7955
#define SDLA_S507_IRQ15	285,7986
#define SDLA_HALT	287,8019
#define SDLA_CPUEN	288,8044
#define SDLA_MEMEN	289,8070
#define SDLA_S507_EPROMWR	290,8096
#define SDLA_S507_EPROMCLK	291,8128
#define SDLA_S508_INTRQ	292,8161
#define SDLA_S508_INTEN	293,8192
struct sdla_cmd sdla_cmd295,8224
struct intr_info intr_info308,8718
struct buf_info buf_info317,9000
struct buf_entry buf_entry327,9392

include/linux/if_packet.h,556
#define __LINUX_IF_PACKET_H2,28
struct sockaddr_pktsockaddr_pkt4,57
struct sockaddr_llsockaddr_ll11,175
#define PACKET_HOST	24,407
#define PACKET_BROADCAST	25,444
#define PACKET_MULTICAST	26,486
#define PACKET_OTHERHOST	27,530
#define PACKET_OUTGOING	28,581
#define PACKET_LOOPBACK	30,681
#define PACKET_FASTROUTE	31,740
#define PACKET_ADD_MEMBERSHIP	35,821
#define PACKET_DROP_MEMBERSHIP	36,854
struct packet_mreqpacket_mreq38,889
#define PACKET_MR_MULTICAST	46,1012
#define PACKET_MR_PROMISC	47,1042
#define PACKET_MR_ALLMULTI	48,1070

include/linux/comstats.h,353
#define	_COMSTATS_H26,1069
} comstats_t;comstats_t68,2092
#define	COM_MAXPANELS	75,2179
} companel_t;companel_t82,2309
} combrd_t;combrd_t96,2600
#define	COM_GETPORTSTATS	104,2695
#define	COM_CLRPORTSTATS	105,2732
#define	COM_GETBRDSTATS	106,2769
#define	COM_READPORT	114,2976
#define	COM_READBOARD	115,3010
#define	COM_READPANEL	116,3045

include/linux/raid0.h,128
#define _RAID0_H2,17
struct strip_zonestrip_zone4,35
struct raid0_hashraid0_hash13,316
struct raid0_dataraid0_data18,376

include/linux/posix_types.h,371
#define _LINUX_POSIX_TYPES_H2,29
# define NULL	11,250
#define __NFDBITS	30,882
#define __FD_SETSIZE	33,949
#define __FDSET_LONGS	36,997
#define	__FDELT(__FDELT39,1060
#define	__FDMASK(__FDMASK42,1114
} __kernel_fd_set;__kernel_fd_set46,1220
typedef void (*__kernel_sighandler_t)__kernel_sighandler_t49,1273
typedef int __kernel_key_t;__kernel_key_t52,1349

include/linux/istallion.h,350
#define	_ISTALLION_H26,1098
#define	STL_MAXBRDS	32,1250
#define	STL_MAXPANELS	33,1273
#define	STL_MAXPORTS	34,1298
#define	STL_MAXCHANS	35,1323
#define	STL_MAXDEVS	36,1364
} stliport_t;stliport_t90,2696
typedef struct stlibrd stlibrd96,2863
} stlibrd_t;stlibrd_t124,3579
#define	STLI_PORTMAGIC	130,3652
#define	STLI_BOARDMAGIC	131,3686

include/linux/stallion.h,555
#define	_STALLION_H26,1084
#define	STL_MAXBRDS	32,1235
#define	STL_MAXPANELS	33,1258
#define	STL_MAXBANKS	34,1283
#define	STL_PORTSPERPANEL	35,1307
#define	STL_MAXPORTS	36,1336
#define	STL_MAXDEVS	37,1361
} stlrq_t;stlrq_t59,2149
typedef struct stlport stlport70,2616
} stlport_t;stlport_t105,3343
typedef struct stlpanel stlpanel107,3357
} stlpanel_t;stlpanel_t119,3633
typedef struct stlbrd stlbrd121,3648
} stlbrd_t;stlbrd_t145,4201
#define	STL_PORTMAGIC	151,4273
#define	STL_PANELMAGIC	152,4306
#define	STL_BOARDMAGIC	153,4340

include/linux/if_strip.h,73
#define __LINUX_STRIP_H19,590
} MetricomAddress;MetricomAddress23,647

include/linux/rose.h,1171
#define	ROSE_KERNEL_H8,224
#define ROSE_MTU	10,247
#define ROSE_MAX_DIGIS 12,269
#define	ROSE_DEFER	14,295
#define ROSE_T1	15,316
#define	ROSE_T2	16,335
#define	ROSE_T3	17,354
#define	ROSE_IDLE	18,373
#define	ROSE_QBITINCL	19,393
#define	ROSE_HOLDBACK	20,417
#define	SIOCRSGCAUSE	22,442
#define	SIOCRSSCAUSE	23,485
#define	SIOCRSL2CALL	24,528
#define	SIOCRSSL2CALL	25,571
#define	SIOCRSACCEPT	26,615
#define	SIOCRSCLRRT	27,658
#define	SIOCRSGL2CALL	28,700
#define	SIOCRSGFACILITIES	29,744
#define	ROSE_DTE_ORIGINATED	31,792
#define	ROSE_NUMBER_BUSY	32,825
#define	ROSE_INVALID_FACILITY	33,855
#define	ROSE_NETWORK_CONGESTION	34,890
#define	ROSE_OUT_OF_ORDER	35,927
#define	ROSE_ACCESS_BARRED	36,958
#define	ROSE_NOT_OBTAINABLE	37,990
#define	ROSE_REMOTE_PROCEDURE	38,1023
#define	ROSE_LOCAL_PROCEDURE	39,1058
#define	ROSE_SHIP_ABSENT	40,1092
} rose_address;rose_address44,1161
struct sockaddr_rose sockaddr_rose46,1178
struct full_sockaddr_rose full_sockaddr_rose54,1330
struct rose_route_struct rose_route_struct62,1512
struct rose_cause_struct rose_cause_struct71,1698
struct rose_facilities_struct rose_facilities_struct76,1778

include/linux/dcache.h,739
#define __LINUX_DCACHE_H2,25
#define D_MAXLEN 15,234
#define IS_ROOT(IS_ROOT17,257
struct qstr qstr23,437
#define init_name_hash(init_name_hash30,571
static __inline__ unsigned long partial_name_hash(33,672
static __inline__ unsigned long end_name_hash(40,952
static __inline__ unsigned int full_name_hash(48,1170
#define DNAME_INLINE_LEN 56,1394
struct dentry dentry58,1423
struct dentry_operations dentry_operations79,2262
#define DCACHE_AUTOFS_PENDING 98,2954
#define DCACHE_NFSFS_RENAMED 99,3029
static __inline__ void d_drop(117,3654
static __inline__ int dname_external(123,3775
#define shrink_dcache(shrink_dcache141,4323
static __inline__ void d_add(163,5045
static __inline__ struct dentry * dget(183,5742

include/linux/ufs_fs_i.h,78
#define _LINUX_UFS_FS_I_H14,361
struct ufs_inode_info ufs_inode_info16,388

include/linux/miscdevice.h,598
#define _LINUX_MISCDEVICE_H2,28
#define BUSMOUSE_MINOR 4,57
#define PSMOUSE_MINOR 5,82
#define MS_BUSMOUSE_MINOR 6,107
#define ATIXL_BUSMOUSE_MINOR 7,135
#define AMIGAMOUSE_MINOR 8,166
#define ATARIMOUSE_MINOR 9,193
#define SUN_MOUSE_MINOR 10,220
#define APOLLO_MOUSE_MINOR 11,246
#define PC110PAD_MINOR 12,275
#define MAC_MOUSE_MINOR 13,300
#define WATCHDOG_MINOR	14,327
#define TEMP_MINOR	15,380
#define RTC_MINOR 16,429
#define SUN_OPENPROM_MINOR 17,451
#define NVRAM_MINOR 18,482
#define I2O_MINOR 19,506
#define MISC_DYNAMIC_MINOR 20,528
struct miscdevice miscdevice24,589

include/linux/fb.h,4221
#define _LINUX_FB_H2,20
#define FB_MAJOR	8,106
#define FB_MODES_SHIFT	10,127
#define FB_NUM_MINORS	11,184
#define FB_MAX	12,242
#define GET_FB_IDX(GET_FB_IDX13,299
#define FBIOGET_VSCREENINFO	17,392
#define FBIOPUT_VSCREENINFO	18,427
#define FBIOGET_FSCREENINFO	19,462
#define FBIOGETCMAP	20,497
#define FBIOPUTCMAP	21,525
#define FBIOPAN_DISPLAY	22,553
#define FBIOGET_CON2FBMAP	27,745
#define FBIOPUT_CON2FBMAP	28,778
#define FB_TYPE_PACKED_PIXELS	30,812
#define FB_TYPE_PLANES	31,865
#define FB_TYPE_INTERLEAVED_PLANES	32,921
#define FB_TYPE_TEXT	33,983
#define FB_AUX_TEXT_MDA	35,1031
#define FB_AUX_TEXT_CGA	36,1080
#define FB_AUX_TEXT_S3_MMIO	37,1136
#define FB_AUX_TEXT_MGA_STEP16	38,1189
#define FB_AUX_TEXT_MGA_STEP8	39,1275
#define FB_VISUAL_MONO01	41,1361
#define FB_VISUAL_MONO10	42,1420
#define FB_VISUAL_TRUECOLOR	43,1479
#define FB_VISUAL_PSEUDOCOLOR	44,1527
#define FB_VISUAL_DIRECTCOLOR	45,1592
#define FB_VISUAL_STATIC_PSEUDOCOLOR	46,1644
#define FB_ACCEL_NONE	48,1712
#define FB_ACCEL_ATARIBLITT	49,1767
#define FB_ACCEL_AMIGABLITT	50,1818
#define FB_ACCEL_S3_TRIO64	51,1883
#define FB_ACCEL_NCR_77C32BLT	52,1947
#define FB_ACCEL_S3_VIRGE	53,2014
#define FB_ACCEL_ATI_MACH64GX	54,2076
#define FB_ACCEL_DEC_TGA	55,2136
#define FB_ACCEL_ATI_MACH64CT	56,2184
#define FB_ACCEL_ATI_MACH64VT	57,2244
#define FB_ACCEL_ATI_MACH64GT	58,2312
#define FB_ACCEL_SUN_CREATOR	59,2381
#define FB_ACCEL_SUN_CGSIX	60,2441
#define FB_ACCEL_SUN_LEO	61,2487
#define FB_ACCEL_IMS_TWINTURBO	62,2534
#define FB_ACCEL_3DLABS_PERMEDIA2 63,2590
#define FB_ACCEL_MATROX_MGA2064W 64,2652
#define FB_ACCEL_MATROX_MGA1064SG 65,2722
#define FB_ACCEL_MATROX_MGA2164W 66,2793
#define FB_ACCEL_MATROX_MGA2164W_AGP 67,2866
#define FB_ACCEL_MATROX_MGAG100	68,2943
#define FB_ACCEL_MATROX_MGAG200	69,3014
#define FB_ACCEL_SUN_CG14	70,3085
#define FB_ACCEL_SUN_BWTWO	71,3137
#define FB_ACCEL_SUN_CGTHREE	72,3186
#define FB_ACCEL_SUN_TCX	73,3239
struct fb_fix_screeninfo fb_fix_screeninfo75,3285
struct fb_bitfield fb_bitfield100,4489
#define FB_NONSTD_HAM	107,4677
#define FB_ACTIVATE_NOW	109,4738
#define FB_ACTIVATE_NXTOPEN	110,4802
#define FB_ACTIVATE_TEST	111,4860
#define FB_ACTIVATE_MASK 112,4924
#define FB_ACTIVATE_VBL	114,4978
#define FB_CHANGE_CMAP_VBL 115,5047
#define FB_ACTIVATE_ALL	116,5110
#define FB_ACCELF_TEXT	118,5177
#define FB_SYNC_HOR_HIGH_ACT	120,5233
#define FB_SYNC_VERT_HIGH_ACT	121,5298
#define FB_SYNC_EXT	122,5362
#define FB_SYNC_COMP_HIGH_ACT	123,5406
#define FB_SYNC_BROADCAST	124,5473
#define FB_SYNC_ON_GREEN	127,5623
#define FB_VMODE_NONINTERLACED 129,5672
#define FB_VMODE_INTERLACED	130,5727
#define FB_VMODE_DOUBLE	131,5774
#define FB_VMODE_MASK	132,5819
#define FB_VMODE_YWRAP	134,5847
#define FB_VMODE_SMOOTH_XPAN	135,5910
#define FB_VMODE_CONUPDATE	136,5988
struct fb_var_screeninfo fb_var_screeninfo138,6049
struct fb_cmap fb_cmap176,7405
struct fb_con2fbmap fb_con2fbmap185,7609
struct fb_monspecs fb_monspecs190,7671
struct fb_ops fb_ops212,8082
struct display display247,9419
struct fb_info fb_info296,11544
#define FBINFO_FLAG_MODULE	300,11637
#define FBINFO_FLAG_DEFAULT	319,12375
#define FBINFO_FLAG_DEFAULT	321,12428
struct fbgen_hwswitch fbgen_hwswitch330,12686
struct fb_info_gen fb_info_gen351,13689
struct fb_videomode fb_videomode395,15194
extern int num_registered_fb;409,15601
extern struct fb_info *registered_fb[410,15631
extern char con2fb_map[411,15677
extern struct display fb_display[414,15747
#define VESA_NO_BLANKING	432,16453
#define VESA_VSYNC_SUSPEND	433,16480
#define VESA_HSYNC_SUSPEND	434,16509
#define VESA_POWERDOWN	435,16538
#define FBCMD_GET_CURRENTPAR	441,16597
#define FBCMD_SET_CURRENTPAR	442,16637
#define FBIOGET_FCURSORINFO 453,16751
#define FBIOGET_VCURSORINFO 454,16790
#define FBIOPUT_VCURSORINFO 455,16829
#define FBIOGET_CURSORSTATE 456,16868
#define FBIOPUT_CURSORSTATE 457,16907
struct fb_fix_cursorinfo fb_fix_cursorinfo460,16948
struct fb_var_cursorinfo fb_var_cursorinfo469,17288
struct fb_cursorstate fb_cursorstate477,17433
#define FB_CURSOR_OFF	483,17506
#define FB_CURSOR_ON	484,17531
#define FB_CURSOR_FLASH	485,17555

include/linux/affs_fs_i.h,224
#define _AFFS_FS_I2,19
#define AFFS_MAX_PREALLOC	7,89
#define AFFS_KCSIZE	8,145
struct key_cache key_cache10,224
#define EC_SIZE	20,634
struct ext_cache ext_cache22,702
struct affs_inode_info affs_inode_info31,931

include/linux/ufs_fs_sb.h,491
#define __LINUX_UFS_FS_SB_H15,383
struct ufs_buffer_head ufs_buffer_head23,537
struct ufs_cg_private_info ufs_cg_private_info29,708
struct ufs_sb_private_info ufs_sb_private_info48,1557
#define UFS_MAX_GROUP_LOADED 113,4511
#define UFS_CGNO_EMPTY 114,4542
struct ufs_sb_info ufs_sb_info116,4581
struct ufs_super_block_first ufs_super_block_first136,5090
struct ufs_super_block_second ufs_super_block_second193,6080
struct ufs_super_block_third ufs_super_block_third202,6247

include/linux/x25.h,854
#define	X25_KERNEL_H6,103
#define	SIOCX25GSUBSCRIP	8,125
#define	SIOCX25SSUBSCRIP	9,173
#define	SIOCX25GFACILITIES	10,221
#define	SIOCX25SFACILITIES	11,271
#define	SIOCX25GCALLUSERDATA	12,321
#define	SIOCX25SCALLUSERDATA	13,373
#define	SIOCX25GCAUSEDIAG	14,425
#define	X25_QBITINCL	19,514
#define	X25_PS16	24,574
#define	X25_PS32	25,594
#define	X25_PS64	26,614
#define	X25_PS128	27,634
#define	X25_PS256	28,655
#define	X25_PS512	29,676
#define	X25_PS1024	30,697
#define	X25_PS2048	31,720
#define	X25_PS4096	32,743
} x25_address;x25_address40,918
struct sockaddr_x25 sockaddr_x2545,1009
struct x25_subscrip_struct x25_subscrip_struct53,1168
struct x25_route_struct x25_route_struct61,1287
struct x25_facilities x25_facilities70,1416
struct x25_calluserdata x25_calluserdata80,1607
struct x25_causediag x25_causediag88,1747

include/linux/lp_intern.h,33
#define _LINUX_LP_INTERN_H_2,28

include/linux/lp_m68k.h,911
#define _LINUX_LP_H2,20
#define MAX_LP 20,560
#define LP_EXIST 26,702
#define LP_BUSY	27,726
#define LP_ABORT 28,750
#define LP_CAREFUL 29,774
#define LP_ABORTOPEN 30,800
#define LP_INIT_CHAR 40,1252
#define LP_INIT_WAIT 49,1584
#define LP_INIT_TIME 61,2130
#define LPCHAR 64,2175
#define LPTIME 65,2234
#define LPABORT 66,2293
#define LPSETIRQ 68,2405
#define LPGETIRQ 70,2495
#define LPWAIT 71,2553
#define LPCAREFUL 72,2612
#define LPABORTOPEN 75,2798
#define LPGETSTATUS 77,2928
#define LPRESET 78,2981
#define LP_TIMEOUT_INTERRUPT	84,3216
#define LP_TIMEOUT_POLLED	85,3255
#define LP_BUFFER_SIZE 88,3293
enum lp_type lp_type90,3330
LP_UNKNOWN 91,3346
LP_AMIGA 92,3362
LP_ATARI 93,3376
LP_MFC 94,3390
LP_IOEXT 95,3402
LP_MVME167 96,3416
LP_BVME6000 97,3432
struct lp_struct lp_struct104,3568
extern struct lp_struct *lp_table[127,4264
extern unsigned int lp_irq;128,4307

include/linux/vmalloc.h,65
#define __LINUX_VMALLOC_H2,26
struct vm_struct vm_struct9,127

include/linux/affs_hardblocks.h,225
#define	AFFS_HARDBLOCKS_H2,26
struct RigidDiskBlock RigidDiskBlock6,116
#define	IDNAME_RIGIDDISK	45,945
struct PartitionBlock PartitionBlock47,995
#define	IDNAME_PARTITION	62,1250
#define RDB_ALLOCATION_LIMIT	64,1300

include/linux/ipv6_route.h,530
#define _LINUX_IPV6_ROUTE_H14,389
	RTA_IPV6_UNSPEC,18,425
	RTA_IPV6_HOPLIMIT,19,443
#define	RTA_IPV6_MAX 22,467
#define RTF_DEFAULT	25,508
#define RTF_ALLONLINK	26,570
#define RTF_ADDRCONF	27,638
#define RTF_NONEXTHOP	29,698
#define RTF_EXPIRES	30,759
#define RTF_CACHE	32,791
#define RTF_FLOW	33,840
#define RTF_POLICY	34,897
#define RTF_LOCAL	36,949
struct in6_rtmsg in6_rtmsg38,979
#define RTMSG_NEWDEVICE	51,1264
#define RTMSG_DELDEVICE	52,1294
#define RTMSG_NEWROUTE	53,1324
#define RTMSG_DELROUTE	54,1353

include/linux/file.h,198
#define __LINUX_FILE_H6,92
extern inline struct file * fcheck_task(14,294
extern inline struct file * fcheck(26,549
extern inline struct file * fget(35,717
extern inline void fd_install(47,901

include/linux/auto_fs.h,681
#define _LINUX_AUTO_FS_H15,497
#define AUTOFS_PROTO_VERSION 23,647
typedef unsigned int autofs_wqt_t;autofs_wqt_t41,1199
typedef unsigned long autofs_wqt_t;autofs_wqt_t43,1240
enum autofs_packet_type autofs_packet_type46,1284
	autofs_ptype_missing,47,1310
	autofs_ptype_expire,48,1369
struct autofs_packet_hdr autofs_packet_hdr51,1431
struct autofs_packet_missing autofs_packet_missing56,1563
struct autofs_packet_expire autofs_packet_expire63,1703
#define AUTOFS_IOC_READY 69,1802
#define AUTOFS_IOC_FAIL 70,1847
#define AUTOFS_IOC_CATATONIC 71,1892
#define AUTOFS_IOC_PROTOVER 72,1937
#define AUTOFS_IOC_SETTIMEOUT 73,1987
#define AUTOFS_IOC_EXPIRE 74,2048

include/linux/hdlcdrv.h,2058
#define _HDLCDRV_H8,197
struct hdlcdrv_params hdlcdrv_params15,334
struct hdlcdrv_channel_params hdlcdrv_channel_params25,456
struct hdlcdrv_old_channel_state hdlcdrv_old_channel_state34,868
struct hdlcdrv_channel_state hdlcdrv_channel_state40,949
struct hdlcdrv_ioctl hdlcdrv_ioctl50,1133
#define HDLCDRVCTL_GETMODEMPAR 69,1519
#define HDLCDRVCTL_SETMODEMPAR 70,1558
#define HDLCDRVCTL_MODEMPARMASK 71,1597
#define HDLCDRVCTL_GETCHANNELPAR 72,1666
#define HDLCDRVCTL_SETCHANNELPAR 73,1705
#define HDLCDRVCTL_OLDGETSTAT 74,1744
#define HDLCDRVCTL_CALIBRATE 75,1783
#define HDLCDRVCTL_GETSTAT 76,1822
#define HDLCDRVCTL_GETSAMPLES 81,1912
#define HDLCDRVCTL_GETBITS 82,1951
#define HDLCDRVCTL_GETMODE 87,2054
#define HDLCDRVCTL_SETMODE 88,2093
#define HDLCDRVCTL_MODELIST 89,2132
#define HDLCDRVCTL_DRIVERNAME 90,2171
#define HDLCDRV_PARMASK_IOBASE 95,2290
#define HDLCDRV_PARMASK_IRQ 96,2333
#define HDLCDRV_PARMASK_DMA 97,2376
#define HDLCDRV_PARMASK_DMA2 98,2419
#define HDLCDRV_PARMASK_SERIOBASE 99,2462
#define HDLCDRV_PARMASK_PARIOBASE 100,2505
#define HDLCDRV_PARMASK_MIDIIOBASE 101,2548
#define HDLCDRV_MAGIC 111,2765
#define HDLCDRV_IFNAMELEN 112,2803
#define HDLCDRV_HDLCBUFFER 113,2834
#define HDLCDRV_BITBUFFER 114,2912
#define HDLCDRV_DEBUG116,3056
#define HDLCDRV_MAXFLEN 119,3122
struct hdlcdrv_hdlcbuffer hdlcdrv_hdlcbuffer122,3165
struct hdlcdrv_bitbuffer hdlcdrv_bitbuffer129,3295
extern inline void hdlcdrv_add_bitbuffer(136,3425
extern inline void hdlcdrv_add_bitbuffer_word(151,3739
struct hdlcdrv_ops hdlcdrv_ops167,4190
struct hdlcdrv_state hdlcdrv_state182,4532
extern inline int hdlcdrv_hbuf_full(259,5952
extern inline int hdlcdrv_hbuf_empty(272,6304
extern inline unsigned short hdlcdrv_hbuf_get(285,6608
extern inline void hdlcdrv_hbuf_put(305,7049
extern inline void hdlcdrv_putbits(322,7466
extern inline unsigned int hdlcdrv_getbits(327,7592
extern inline void hdlcdrv_channelbit(345,7986
extern inline void hdlcdrv_setdcd(352,8169
extern inline int hdlcdrv_ptt(357,8266

include/linux/fddidevice.h,35
#define _LINUX_FDDIDEVICE_H23,836

include/linux/soundmodem.h,769
#define _SOUNDMODEM_H7,149
struct sm_debug_data sm_debug_data14,289
struct sm_diag_data sm_diag_data21,421
struct sm_mixer_data sm_mixer_data29,554
struct sm_config sm_config37,697
struct sm_ioctl sm_ioctl42,746
#define SM_DIAGMODE_OFF 57,1006
#define SM_DIAGMODE_INPUT 58,1043
#define SM_DIAGMODE_DEMOD 59,1080
#define SM_DIAGMODE_CONSTELLATION 60,1117
#define SM_DIAGFLAG_DCDGATE 65,1180
#define SM_DIAGFLAG_VALID 66,1218
#define SM_MIXER_INVALID 71,1279
#define SM_MIXER_AD1848 72,1312
#define SM_MIXER_CRYSTAL 73,1348
#define SM_MIXER_CT1335 74,1384
#define SM_MIXER_CT1345 75,1420
#define SM_MIXER_CT1745 76,1456
#define SMCTL_DIAGNOSE 81,1516
#define SMCTL_GETMIXER 82,1552
#define SMCTL_SETMIXER 83,1588
#define SMCTL_GETDEBUG 84,1624

include/linux/ipv6.h,512
#define _IPV6_H2,16
#define IPV6_MIN_MTU	9,154
struct in6_pktinfo in6_pktinfo18,292
struct in6_ifreq in6_ifreq24,366
#define IPV6_SRCRT_STRICT	30,462
#define IPV6_SRCRT_TYPE_0	31,527
struct ipv6_rt_hdr ipv6_rt_hdr36,614
struct ipv6_opt_hdr ipv6_opt_hdr49,765
#define ipv6_destopt_hdr 57,871
#define ipv6_hopopt_hdr 58,909
#define ipv6_optlen(ipv6_optlen61,966
struct rt0_hdr rt0_hdr68,1079
#define rt0_type	73,1197
struct ipv6hdr ipv6hdr83,1368
struct inet6_skb_parminet6_skb_parm110,1824

include/linux/bpqether.h,225
#define	__BPQETHER_H2,21
#define SIOCSBPQETHOPT	12,164
#define SIOCSBPQETHADDR	13,222
struct bpq_ethaddr bpq_ethaddr15,268
#define SIOCGBPQETHPARAM	26,574
#define SIOCSBPQETHPARAM	27,636
struct bpq_req bpq_req29,680

include/linux/slab.h,725
#define	_LINUX_SLAB_H8,119
typedef struct kmem_cache_s kmem_cache_t;kmem_cache_t12,167
#define	SLAB_BUFFER	18,291
#define	SLAB_ATOMIC	19,323
#define	SLAB_USER	20,355
#define	SLAB_KERNEL	21,383
#define	SLAB_NFS	22,415
#define	SLAB_DMA	23,441
#define SLAB_LEVEL_MASK	25,468
#define	SLAB_NO_GROW	26,506
#define	SLAB_DEBUG_FREE	32,698
#define	SLAB_DEBUG_INITIAL	33,776
#define	SLAB_RED_ZONE	34,853
#define	SLAB_POISON	35,920
#define	SLAB_NO_REAP	36,975
#define	SLAB_HWCACHE_ALIGN	37,1042
#define	SLAB_HIGH_PACK	39,1126
#define	SLAB_CTOR_CONSTRUCTOR	43,1222
#define SLAB_CTOR_ATOMIC	44,1298
#define	SLAB_CTOR_VERIFY	45,1370
extern kmem_cache_t	*vm_area_cachep;66,2163
extern kmem_cache_t	*mm_cachep;67,2200

include/linux/if_fddi.h,1275
#define _LINUX_IF_FDDI_H25,945
#define FDDI_K_ALEN	31,1089
#define FDDI_K_8022_HLEN	32,1147
#define FDDI_K_SNAP_HLEN	33,1211
#define FDDI_K_8022_ZLEN	34,1280
#define FDDI_K_SNAP_ZLEN	35,1350
#define FDDI_K_8022_DLEN	36,1425
#define FDDI_K_SNAP_DLEN	37,1489
#define FDDI_K_LLC_ZLEN	38,1558
#define FDDI_K_LLC_LEN	39,1626
#define FDDI_FC_K_VOID	42,1744
#define FDDI_FC_K_NON_RESTRICTED_TOKEN	43,1777
#define FDDI_FC_K_RESTRICTED_TOKEN	44,1822
#define FDDI_FC_K_SMT_MIN	45,1864
#define FDDI_FC_K_SMT_MAX	46,1898
#define FDDI_FC_K_MAC_MIN	47,1935
#define FDDI_FC_K_MAC_MAX	48,1969
#define FDDI_FC_K_ASYNC_LLC_MIN	49,2006
#define FDDI_FC_K_ASYNC_LLC_DEF	50,2045
#define FDDI_FC_K_ASYNC_LLC_MAX	51,2084
#define FDDI_FC_K_SYNC_LLC_MIN	52,2123
#define FDDI_FC_K_SYNC_LLC_MAX	53,2161
#define FDDI_FC_K_IMPLEMENTOR_MIN	54,2199
#define FDDI_FC_K_IMPLEMENTOR_MAX 55,2239
#define FDDI_FC_K_RESERVED_MIN	56,2281
#define FDDI_FC_K_RESERVED_MAX	57,2319
#define FDDI_EXTENDED_SAP	60,2394
#define FDDI_UI_CMD	61,2425
struct fddi_8022_1_hdrfddi_8022_1_hdr64,2486
struct fddi_8022_2_hdrfddi_8022_2_hdr72,2718
#define FDDI_K_OUI_LEN	81,2990
struct fddi_snap_hdrfddi_snap_hdr82,3015
struct fddihdrfddihdr92,3315
struct fddi_statisticsfddi_statistics106,3668

include/linux/romfs_fs_i.h,73
#define __ROMFS_FS_I2,21
struct romfs_inode_info romfs_inode_info6,71

include/linux/wireless.h,1482
#define _LINUX_WIRELESS_H10,180
#define WIRELESS_EXT	66,2427
#define SIOCSIWNAME	94,2997
#define SIOCGIWNAME	95,3042
#define SIOCSIWNWID	96,3085
#define SIOCGIWNWID	97,3134
#define SIOCSIWFREQ	98,3183
#define SIOCGIWFREQ	99,3239
#define SIOCSIWENCODE	100,3295
#define SIOCGIWENCODE	101,3349
#define SIOCSIWSENS	102,3403
#define SIOCGIWSENS	103,3453
#define SIOCSIWRANGE	106,3528
#define SIOCGIWRANGE	107,3574
#define SIOCSIWPRIV	108,3633
#define SIOCGIWPRIV	109,3678
#define SIOCSIWSPY	112,3770
#define SIOCGIWSPY	113,3821
#define SIOCSIWAP	116,3918
#define SIOCGIWAP	117,3986
#define SIOCGIWAPLIST	118,4054
#define SIOCSIWESSID	121,4155
#define SIOCGIWESSID	122,4215
#define SIOCIWFIRST	131,4574
#define SIOCIWLAST	132,4601
#define IW_IS_SET(IW_IS_SET135,4685
#define IW_IS_GET(IW_IS_GET136,4725
#define IW_PRIV_TYPE_MASK	145,5035
#define IW_PRIV_TYPE_NONE	146,5092
#define IW_PRIV_TYPE_BYTE	147,5125
#define IW_PRIV_TYPE_CHAR	148,5179
#define IW_PRIV_TYPE_INT	149,5236
#define IW_PRIV_TYPE_FLOAT	150,5286
#define IW_PRIV_SIZE_FIXED	152,5321
#define IW_PRIV_SIZE_MASK	154,5394
#define IW_MAX_FREQUENCIES	164,5723
#define IW_MAX_SPY	170,5981
struct	iw_freqiw_freq182,6374
struct	iw_qualityiw_quality191,6479
struct	iw_discardediw_discarded203,6762
struct	iw_encodingiw_encoding214,7010
struct	iw_statisticsiw_statistics225,7268
struct	iwreq iwreq245,7912
struct	iw_rangeiw_range296,9067
struct	iw_priv_argsiw_priv_args325,9873

include/linux/lp_mfc.h,30
#define _LINUX_LP_MFC_H_2,25

include/linux/romfs_fs_sb.h,68
#define __ROMFS_FS_SB2,22
struct romfs_sb_info romfs_sb_info6,82

include/linux/mca.h,258
#define _LINUX_MCA_H7,117
extern int  MCA_bus;13,331
#define MCA_MAX_SLOT_NR 17,489
#define MCA_NOTFOUND	30,1004
#define MCA_INTEGSCSI	31,1030
#define MCA_INTEGVIDEO	32,1070
#define MCA_NUMADAPTERS 36,1196
typedef int (*MCA_ProcFn)MCA_ProcFn76,2738

include/linux/netbeui.h,103
#define _LINUX_NETBEUI_H2,25
#define NB_NAME_LEN	6,74
struct sockaddr_netbeuisockaddr_netbeui9,171

include/linux/if_ltalk.h,103
#define __LINUX_LTALK_H2,24
#define LTALK_HLEN	4,49
#define LTALK_MTU	5,71
#define LTALK_ALEN	6,94

include/linux/netlink.h,1484
#define __LINUX_NETLINK_H2,26
#define NETLINK_ROUTE	4,53
#define NETLINK_SKIP	5,107
#define NETLINK_USERSOCK	6,161
#define NETLINK_FIREWALL	7,235
#define NETLINK_ARPD	8,288
#define NETLINK_ROUTE6	9,312
#define NETLINK_IP6_FW	10,373
#define NETLINK_TAPBASE	11,400
#define MAX_LINKS 13,457
struct sockaddr_nlsockaddr_nl15,481
struct nlmsghdrnlmsghdr23,673
#define NLM_F_REQUEST	34,947
#define NLM_F_MULTI	35,1002
#define NLM_F_ACK	36,1075
#define NLM_F_ECHO	37,1129
#define NLM_F_ROOT	40,1209
#define NLM_F_MATCH	41,1258
#define NLM_F_ATOMIC	42,1310
#define NLM_F_DUMP	43,1355
#define NLM_F_REPLACE	46,1431
#define NLM_F_EXCL	47,1484
#define NLM_F_CREATE	48,1542
#define NLM_F_APPEND	49,1604
#define NLMSG_ALIGNTO	60,1825
#define NLMSG_ALIGN(NLMSG_ALIGN61,1849
#define NLMSG_LENGTH(NLMSG_LENGTH62,1923
#define NLMSG_SPACE(NLMSG_SPACE63,1994
#define NLMSG_DATA(NLMSG_DATA64,2050
#define NLMSG_NEXT(NLMSG_NEXT65,2117
#define NLMSG_OK(NLMSG_OK67,2263
#define NLMSG_PAYLOAD(NLMSG_PAYLOAD69,2385
#define NLMSG_NOOP	71,2457
#define NLMSG_ERROR	72,2497
#define NLMSG_DONE	73,2535
#define NLMSG_OVERRUN	74,2579
struct nlmsgerrnlmsgerr76,2624
#define NET_MAJOR 82,2681
struct netlink_skb_parmsnetlink_skb_parms86,2771
#define NETLINK_CB(NETLINK_CB96,2941
#define NETLINK_CREDS(NETLINK_CREDS97,3009
#define NLMSG_GOODSIZE 116,3873
struct netlink_callbacknetlink_callback119,3948
__nlmsg_put(130,4199
#define NLMSG_PUT(NLMSG_PUT144,4518

include/linux/sdla_fr.h,4543
#define	_SDLA_FR_H22,1032
#    define	PACKED	39,1557
#  define	PACKED42,1628
#define	FR_MB_VECTOR	49,1720
#define	FR502_RX_VECTOR	50,1776
#define	FR502_MBOX_OFFS	51,1847
#define	FR508_MBOX_OFFS	52,1903
#define	FR502_FLAG_OFFS	53,1955
#define	FR508_FLAG_OFFS	54,2017
#define	FR502_RXMB_OFFS	55,2079
#define	FR508_TXBC_OFFS	56,2150
#define	FR508_RXBC_OFFS	57,2214
#define FR502_MAX_DATA	60,2305
#define FR508_MAX_DATA	61,2366
typedef struct fr_cmdfr_cmd68,2621
} fr_cmd_t;fr_cmd_t78,3114
#define	FR_WRITE	81,3157
#define	FR_READ	82,3180
#define	FR_ISSUE_IS_FRAME	83,3203
#define FR_SET_CONFIG	84,3234
#define FR_READ_CONFIG	85,3262
#define FR_COMM_DISABLE	86,3291
#define FR_COMM_ENABLE	87,3321
#define FR_READ_STATUS	88,3350
#define FR_READ_STATISTICS	89,3379
#define FR_FLUSH_STATISTICS	90,3411
#define	FR_LIST_ACTIVE_DLCI	91,3444
#define FR_FLUSH_DATA_BUFFERS	92,3477
#define	FR_ADD_DLCI	93,3512
#define	FR_DELETE_DLCI	94,3538
#define	FR_ACTIVATE_DLCI	95,3567
#define	FR_DEACTIVATE_DLCI	96,3597
#define FR_READ_MODEM_STATUS	97,3629
#define FR_SET_MODEM_STATUS	98,3663
#define FR_READ_ERROR_STATS	99,3696
#define FR_FLUSH_ERROR_STATS	100,3729
#define FR_READ_DLCI_IB_MAPPING 101,3763
#define FR_READ_CODE_VERSION	102,3800
#define	FR_SET_INTR_MODE	103,3834
#define	FR_READ_INTR_MODE	104,3864
#define FRRES_OK	107,3925
#define	FRRES_DISABLED	108,3984
#define	FRRES_INOPERATIVE	109,4046
#define	FRRES_DLCI_INACTIVE	110,4103
#define	FRRES_DLCI_INVALID	111,4159
#define	FRRES_TOO_LONG	112,4220
#define	FRRES_TOO_MANY	113,4249
#define	FRRES_CIR_OVERFLOW	114,4278
#define	FRRES_BUFFER_OVERFLOW	115,4347
#define	FRRES_MODEM_FAILURE	116,4382
#define	FRRES_CHANNEL_DOWN	117,4444
#define	FRRES_CHANNEL_UP	118,4509
#define	FRRES_DLCI_CHANGE	119,4570
#define	FRRES_DLCI_MISMATCH	120,4639
#define	FRRES_INVALID_CMD	121,4672
#define	FRATTR_124,4753
typedef struct fr_mboxfr_mbox132,5033
} fr_mbox_t;fr_mbox_t137,5232
typedef struct	fr502_flagsfr502_flags143,5437
} fr502_flags_t;fr502_flags_t153,5902
typedef struct	fr508_flagsfr508_flags159,6111
} fr508_flags_t;fr508_flags_t169,6582
#define	FR_EVENT_STATUS	172,6628
#define	FR_EVENT_DLC_STATUS	173,6690
#define	FR_EVENT_BAD_DLCI	174,6747
#define	FR_EVENT_LINK_DOWN	175,6808
#define	FR_MDM_DCD	178,6892
#define	FR_MDM_CTS	179,6939
#define	FR_INTR_RXRDY	182,7026
#define	FR_INTR_TXRDY	183,7069
#define	FR_INTR_MODEM	184,7112
#define	FR_INTR_READY	185,7177
#define	FR_INTR_DLC	186,7239
#define	FR_INTR_TIMER	187,7289
typedef struct	fr_buf_infofr_buf_info193,7548
} fr_buf_info_t;fr_buf_info_t201,7953
typedef struct	fr_buf_ctlfr_buf_ctl209,8259
} fr_buf_ctl_t;fr_buf_ctl_t218,8655
typedef struct	fr_conffr_conf223,8834
} fr_conf_t;fr_conf_t242,9655
#define	FRCFG_STATION_CPE	245,9698
#define	FRCFG_STATION_NODE	246,9726
#define	FRCFG_IGNORE_TX_CIR	249,9783
#define	FRCFG_IGNORE_RX_CIR	250,9818
#define	FRCFG_DONT_RETRANSMIT	251,9853
#define	FRCFG_IGNORE_CBS	252,9890
#define	FRCFG_THROUGHPUT	253,9922
#define	FRCFG_DIRECT_RX	254,9990
#define	FRCFG_AUTO_CONFIG	255,10057
#define	FRCFG_BAUD_1200	258,10155
#define	FRCFG_BAUD_2400	259,10183
#define	FRCFG_BAUD_4800	260,10211
#define	FRCFG_BAUD_9600	261,10239
#define	FRCFG_BAUD_19200	262,10267
#define	FRCFG_BAUD_38400	263,10295
#define	FRCFG_BAUD_56000	264,10323
#define	FRCFG_BAUD_64000	265,10351
#define	FRCFG_BAUD_128000	266,10379
#define	FRCFG_MODE_EXT_CLK	269,10436
#define	FRCFG_MODE_INT_CLK	270,10470
#define	FRCFG_MODE_V35	271,10504
#define	FRCFG_MODE_RS232	272,10551
typedef struct	fr_dlc_conffr_dlc_conf278,10782
} fr_dlc_conf_t;fr_dlc_conf_t287,11142
typedef struct fr502_intr_ctlfr502_intr_ctl294,11386
} fr502_intr_ctl_t;fr502_intr_ctl_t298,11546
typedef struct fr508_intr_ctlfr508_intr_ctl305,11793
} fr508_intr_ctl_t;fr508_intr_ctl_t312,12123
typedef struct	fr_dlc_Statusfr_dlc_Status318,12307
} fr_dlc_status_t;fr_dlc_status_t326,12539
#define	FR_LINK_INOPER	329,12582
#define	FR_LINK_OPER	330,12647
#define	FR_DLCI_DELETED	331,12673
#define	FR_DLCI_ACTIVE	332,12740
#define	FR_DLCI_WAITING	333,12768
#define	FR_DLCI_NEW	334,12797
#define	FR_DLCI_REPORT	335,12822
typedef struct	fr_link_statfr_link_stat342,13045
} fr_link_stat_t;fr_link_stat_t372,14427
typedef struct	fr_dlci_statfr_dlci_stat379,14632
} fr_dlci_stat_t;fr_dlci_stat_t393,15228
typedef struct	fr_comm_statfr_comm_stat399,15432
} fr_comm_stat_t;fr_comm_stat_t410,15886
#define	FR_ISF_LVE	415,16034
#define	FR_ISF_FSE	416,16094

include/linux/sdla_ppp.h,4891
#define	_SDLA_PPP_H17,741
#    define	PACKED	34,1267
#  define	PACKED37,1338
#define	PPP502_MB_VECT	45,1455
#define	PPP502_MB_OFFS	46,1513
#define	PPP502_FLG_OFFS	47,1564
#define	PPP502_BUF_OFFS	48,1616
#define	PPP508_MB_VECT	50,1679
#define	PPP508_MB_OFFS	51,1737
#define	PPP508_FLG_OFFS	52,1783
#define	PPP508_BUF_OFFS	53,1840
#define PPP_MAX_DATA	55,1903
typedef struct ppp_cmdppp_cmd62,2154
} ppp_cmd_t;ppp_cmd_t68,2401
#define PPP_READ_CODE_VERSION	71,2445
#define PPP_SET_CONFIG	72,2509
#define PPP_READ_CONFIG	73,2538
#define	PPP_SET_INTR_FLAGS	74,2568
#define	PPP_READ_INTR_FLAGS	75,2600
#define	PPP_SET_INBOUND_AUTH	76,2633
#define	PPP_SET_OUTBOUND_AUTH	77,2667
#define	PPP_GET_CONNECTION_INFO	78,2702
#define PPP_COMM_ENABLE	80,2740
#define PPP_COMM_DISABLE	81,2797
#define	PPP_SEND_SIGN_FRAME	82,2827
#define	PPP_READ_SIGN_RESPONSE	83,2860
#define	PPP_DATALINE_MONITOR	84,2896
#define PPP_READ_STATISTICS	86,2931
#define PPP_FLUSH_STATISTICS	87,2990
#define PPP_READ_ERROR_STATS	88,3024
#define PPP_FLUSH_ERROR_STATS	89,3058
#define PPP_READ_PACKET_STATS	90,3093
#define PPP_FLUSH_PACKET_STATS	91,3128
#define PPP_READ_LCP_STATS	92,3164
#define PPP_FLUSH_LCP_STATS	93,3196
#define PPP_READ_LPBK_STATS	94,3229
#define PPP_FLUSH_LPBK_STATS	95,3262
#define PPP_READ_IPCP_STATS	96,3296
#define PPP_FLUSH_IPCP_STATS	97,3329
#define PPP_READ_IPXCP_STATS	98,3363
#define PPP_FLUSH_IPXCP_STATS	99,3397
#define PPP_READ_PAP_STATS	100,3432
#define PPP_FLUSH_PAP_STATS	101,3464
#define PPP_READ_CHAP_STATS	102,3497
#define PPP_FLUSH_CHAP_STATS	103,3530
#define PPPRES_OK	106,3594
#define	PPPRES_INVALID_STATE	107,3654
typedef struct ppp_mboxppp_mbox113,3900
} ppp_mbox_t;ppp_mbox_t118,4110
typedef struct	ppp_flagsppp_flags125,4308
} ppp_flags_t;ppp_flags_t138,4922
#define	PPP_INTR_RXRDY	141,4960
#define	PPP_INTR_TXRDY	142,5004
#define	PPP_INTR_MODEM	143,5048
#define	PPP_INTR_CMD	144,5114
#define	PPP_INTR_DISC	145,5175
#define	PPP_INTR_OPEN	146,5232
#define	PPP_INTR_DROP_DTR	147,5281
#define	PPP_MDM_DCD	150,5368
#define	PPP_MDM_CTS	151,5416
typedef struct	ppp502_buf_infoppp502_buf_info158,5647
} ppp502_buf_info_t;ppp502_buf_info_t167,6089
typedef struct	ppp508_buf_infoppp508_buf_info174,6293
} ppp508_buf_info_t;ppp508_buf_info_t185,6879
typedef struct	ppp_buf_ctlppp_buf_ctl190,7026
} ppp_buf_ctl_t;ppp_buf_ctl_t203,7526
typedef struct	ppp502_confppp502_conf208,7703
} ppp502_conf_t;ppp502_conf_t234,9223
typedef struct	ppp508_confppp508_conf239,9400
} ppp508_conf_t;ppp508_conf_t266,10964
#define	PPP_BITRATE_1200	269,11007
#define	PPP_BITRATE_2400	270,11037
#define	PPP_BITRATE_4800	271,11067
#define	PPP_BITRATE_9600	272,11097
#define	PPP_BITRATE_19200	273,11127
#define	PPP_BITRATE_38400	274,11158
#define	PPP_BITRATE_45000	275,11189
#define	PPP_BITRATE_56000	276,11220
#define	PPP_BITRATE_64000	277,11251
#define	PPP_BITRATE_74000	278,11282
#define	PPP_BITRATE_112000	279,11313
#define	PPP_BITRATE_128000	280,11345
#define	PPP_BITRATE_156000	281,11377
#define	PPP_IGNORE_TX_ABORT	284,11451
#define	PPP_ENABLE_TX_STATS	285,11523
#define	PPP_ENABLE_RX_STATS	286,11583
#define	PPP_ENABLE_TIMESTAMP	287,11643
#define	PPP_LOCAL_IP_LOCAL	290,11728
#define	PPP_LOCAL_IP_REMOTE	291,11760
#define	PPP_REMOTE_IP_LOCAL	292,11793
#define	PPP_REMOTE_IP_REMOTE	293,11826
#define	PPP_REMOTE_IPX_NETNO	296,11889
#define	PPP_REMOTE_IPX_LOCAL	297,11923
#define	PPP_REMOTE_IPX_REMOTE	298,11957
#define	PPP_IPX_ROUTE_RIP_SAP	299,11992
#define	PPP_IPX_ROUTE_NLSP	300,12027
#define	PPP_IPX_ROUTE_DEFAULT	301,12059
#define	PPP_IPX_CONF_COMPLETE	302,12094
#define	PPP_IPX_ENABLE	303,12129
typedef struct	ppp502_get_confppp502_get_conf308,12321
} ppp502_get_conf_t;ppp502_get_conf_t313,12537
typedef struct	ppp508_get_confppp508_get_conf318,12721
} ppp508_get_conf_t;ppp508_get_conf_t324,12990
typedef struct ppp502_Statsppp502_Stats329,13172
} ppp502_Stats_t;ppp502_Stats_t338,13513
typedef struct ppp508_statsppp508_stats343,13692
} ppp508_stats_t;ppp508_stats_t352,14029
typedef struct	ppp_err_statsppp_err_stats357,14207
} ppp_err_stats_t;ppp_err_stats_t369,14856
typedef struct	ppp_pkt_statsppp_pkt_stats374,15029
} ppp_pkt_stats_t;ppp_pkt_stats_t395,15882
typedef struct	ppp_lcp_statsppp_lcp_stats400,16049
} ppp_lcp_stats_t;ppp_lcp_stats_t429,17758
typedef struct	ppp_lpbk_statsppp_lpbk_stats434,17937
} ppp_lpbk_stats_t;ppp_lpbk_stats_t445,18411
typedef struct	ppp_prot_statsppp_prot_stats451,18614
} ppp_prot_stats_t;ppp_prot_stats_t473,19874
typedef struct	ppp_pap_statsppp_pap_stats478,20042
} ppp_pap_stats_t;ppp_pap_stats_t491,20757
typedef struct	ppp_chap_statsppp_chap_stats496,20926
} ppp_chap_stats_t;ppp_chap_stats_t513,21891
typedef struct	ppp_conn_infoppp_conn_info518,22072
} ppp_conn_info_t;ppp_conn_info_t531,22627

include/linux/ps2esdi.h,2023
#define _PS2ESDI_H_2,20
#define NRML_ESDI_ID 4,41
#define INTG_ESDI_ID 5,69
#define PRIMARY_IO_BASE 7,98
#define ALT_IO_BASE 8,129
#define ESDI_CMD_INT 10,157
#define ESDI_STT_INT 11,190
#define ESDI_CONTROL 12,223
#define ESDI_STATUS 13,256
#define ESDI_ATTN 14,289
#define ESDI_INTRPT 15,322
#define STATUS_ENABLED 17,356
#define STATUS_ALTERNATE 18,387
#define STATUS_BUSY 19,418
#define STATUS_STAT_AVAIL 20,449
#define STATUS_INTR 21,480
#define STATUS_RESET_FAIL 22,511
#define STATUS_CMD_INF	23,542
#define CTRL_SOFT_RESET 25,573
#define CTRL_HARD_RESET 26,604
#define CTRL_EOI 27,635
#define CTRL_ENABLE_DMA 28,666
#define CTRL_ENABLE_INTR 29,697
#define CTRL_DISABLE_INTR 30,728
#define ATT_EOI 32,761
#define CONFIG_IS 35,866
#define CONFIG_ZD 36,913
#define CONFIG_SF 37,954
#define CONFIG_FR 38,997
#define CONFIG_RT 39,1036
#define PORT_SYS_A 41,1074
#define PORT_DMA_FN 42,1100
#define PORT_DMA_EX 43,1126
#define ON 45,1153
#define OFF 46,1184
#define LITE_ON 47,1215
#define LITE_OFF 48,1269
#define FAIL 50,1328
#define SUCCES 51,1343
#define INT_CMD_COMPLETE 53,1361
#define INT_CMD_ECC 54,1391
#define INT_CMD_RETRY 55,1421
#define INT_CMD_FORMAT 56,1451
#define INT_CMD_ECC_RETRY 57,1481
#define INT_CMD_WARNING 58,1512
#define INT_CMD_ABORT 59,1542
#define INT_RESET 60,1572
#define INT_TRANSFER_REQ 61,1602
#define INT_CMD_FAILED 62,1632
#define INT_DMA_ERR 63,1662
#define INT_CMD_BLK_ERR 64,1692
#define INT_ATTN_ERROR 65,1722
#define DMA_MASK_CHAN 67,1753
#define DMA_UNMASK_CHAN 68,1780
#define DMA_WRITE_ADDR 69,1809
#define DMA_WRITE_TC 70,1837
#define DMA_WRITE_MODE 71,1863
#define CMD_GET_DEV_CONFIG 73,1892
#define CMD_READ 74,1924
#define CMD_WRITE 75,1948
#define DMA_READ_16 76,1973
#define DMA_WRITE_16 77,1998
#define MB 80,2026
#define SECT_SIZE 81,2047
#define ERROR 83,2073
#define OK 84,2089
#define HDIO_GETGEO 86,2103
#define FALSE 88,2131
#define TRUE 89,2147
struct ps2esdi_geometry ps2esdi_geometry91,2168

include/linux/sdla_x25.h,8780
#define	_SDLA_X25_H16,710
#    define	PACKED	34,1240
#  define	PACKED37,1311
#define	X25_MAX_CHAN	45,1455
#define	X25_MAX_DATA	46,1519
#define	X25_MBOX_OFFS	51,1620
#define	X25_RXMBOX_OFFS	52,1677
#define	X25_STATUS_OFFS	53,1730
typedef struct X25CmdX25Cmd60,1976
} TX25Cmd;TX25Cmd72,2480
#define X25_SET_GLOBAL_VARS	78,2577
#define X25_READ_MODEM_STATUS	79,2641
#define X25_READ_CODE_VERSION	80,2701
#define X25_TRACE_CONFIGURE	81,2771
#define X25_READ_TRACE_DATA	82,2835
#define	X25_SET_INTERRUPT_MODE	83,2890
#define	X25_READ_INTERRUPT_MODE	84,2962
#define X25_HDLC_LINK_CONFIGURE	86,3078
#define X25_HDLC_LINK_OPEN	87,3150
#define X25_HDLC_LINK_CLOSE	88,3213
#define X25_HDLC_LINK_SETUP	89,3268
#define X25_HDLC_LINK_DISC	90,3325
#define X25_HDLC_LINK_STATUS	91,3384
#define X25_HDLC_READ_STATS	92,3446
#define X25_HDLC_FLUSH_STATS	93,3513
#define X25_HDLC_READ_COMM_ERR	94,3583
#define X25_HDLC_FLUSH_COMM_ERR	95,3648
#define X25_HDLC_FLUSH_BUFFERS	96,3714
#define X25_HDLC_SPRVS_CNT_STAT 97,3786
#define X25_HDLC_SEND_UI_FRAME	98,3859
#define X25_HDLC_WRITE	99,3935
#define X25_HDLC_READ	100,3998
#define X25_HDLC_READ_CONFIG	101,4060
#define X25_HDLC_SET_CONFIG	102,4124
#define X25_READ	104,4228
#define X25_WRITE	105,4274
#define X25_PLACE_CALL	106,4321
#define X25_ACCEPT_CALL	107,4376
#define X25_CLEAR_CALL	108,4433
#define X25_CLEAR_CONFRM	109,4479
#define X25_RESET	110,4546
#define X25_RESET_CONFRM	111,4602
#define X25_RESTART	112,4669
#define X25_RESTART_CONFRM	113,4729
#define X25_INTERRUPT	114,4800
#define X25_INTERRUPT_CONFRM	115,4864
#define X25_REGISTRATION_RQST	116,4936
#define X25_REGISTRATION_CONFRM	117,5010
#define X25_IS_DATA_AVAILABLE	118,5084
#define X25_INCOMING_CALL_CTL	119,5146
#define X25_CONFIGURE_PVC	120,5216
#define X25_GET_ACTIVE_CHANNELS	121,5267
#define X25_READ_CHANNEL_CONFIG	122,5340
#define X25_FLUSH_DATA_BUFFERS	123,5416
#define X25_READ_HISTORY_TABLE	124,5488
#define X25_HISTORY_TABLE_CTL	125,5558
#define	X25_GET_TX_D_BIT_STATUS	126,5630
#define	X25_READ_STATISTICS	127,5707
#define	X25_FLUSH_STATISTICS	128,5773
#define	X25_READ_CONFIGURATION	129,5841
#define	X25_SET_CONFIGURATION	130,5914
#define X25RES_OK	136,6070
#define X25RES_ERROR	137,6094
#define X25RES_LINK_NOT_IN_ABM	138,6121
#define X25RES_LINK_CLOSED	139,6187
#define X25RES_INVAL_LENGTH	140,6219
#define X25RES_INVAL_CMD	141,6252
#define X25RES_UNNUMBERED_FRAME	142,6282
#define X25RES_FRM_REJECT_MODE	143,6351
#define X25RES_MODEM_FAILURE	144,6422
#define X25RES_N2_RETRY_LIMIT	145,6485
#define X25RES_INVAL_LCN	146,6559
#define X25RES_INVAL_STATE	147,6626
#define X25RES_INVAL_DATA_LEN	148,6697
#define X25RES_NOT_READY	149,6758
#define X25RES_NETWORK_DOWN	150,6827
#define X25RES_CHANNEL_IN_USE	151,6860
#define X25RES_REGST_NOT_SUPPRT	152,6934
#define X25RES_INVAL_FORMAT	153,7004
#define X25RES_D_BIT_NOT_SUPPRT	154,7065
#define X25RES_FACIL_NOT_SUPPRT	155,7139
#define X25RES_INVAL_CALL_ARG	156,7210
#define X25RES_INVAL_CALL_DATA	157,7276
#define X25RES_ASYNC_PACKET	158,7343
#define X25RES_PROTO_VIOLATION	159,7411
#define X25RES_PKT_TIMEOUT	160,7481
#define X25RES_PKT_RETRY_LIMIT	161,7540
#define X25RES_LINK_DISC	163,7657
#define X25RES_LINK_IN_ABM	164,7710
#define X25RES_NO_DATA	165,7765
#define X25RES_TRACE_INACTIVE	166,7825
#define X25RES_LINK_IS_OPEN	167,7882
#define X25RES_LINK_IS_DISC	168,7936
#define X25RES_LINK_IS_CLOSED	169,7990
#define X25RES_INVAL_PARAM	170,8047
#define X25RES_INVAL_CONFIG	171,8103
#define X25CMD_Q_BIT_MASK	176,8207
#define X25CMD_D_BIT_MASK	177,8238
#define X25CMD_M_BIT_MASK	178,8269
#define ASE_CLEAR_RQST	184,8382
#define ASE_RESET_RQST	185,8411
#define ASE_RESTART_RQST	186,8440
#define ASE_INTERRUPT	187,8470
#define ASE_DTE_REGISTR_RQST	188,8498
#define ASE_CALL_RQST	189,8532
#define ASE_CALL_ACCEPTED	190,8560
#define ASE_CLEAR_CONFRM	191,8591
#define ASE_RESET_CONFRM	192,8621
#define ASE_RESTART_CONFRM	193,8651
#define ASE_INTERRUPT_CONFRM	194,8683
#define ASE_DCE_REGISTR_CONFRM	195,8717
#define ASE_DIAGNOSTIC	196,8753
#define ASE_CALL_AUTO_CLEAR	197,8782
#define AUTO_RESPONSE_FLAG	198,8815
#define TOE_RESTART_RQST	200,8884
#define TOE_CALL_RQST	201,8914
#define TOE_CLEAR_RQST	202,8942
#define TOE_RESET_RQST	203,8971
#define PVE_CLEAR_RQST	205,9037
#define PVE_RESET_RQST	206,9066
#define PVE_RESTART_RQST	207,9095
#define PVE_DIAGNOSTIC	208,9125
typedef struct X25MboxX25Mbox215,9359
} TX25Mbox;TX25Mbox220,9541
typedef struct X25TimeStampX25TimeStamp225,9667
} TX25TimeStamp;TX25TimeStamp232,9836
typedef struct X25StatusX25Status239,10043
} TX25Status;TX25Status251,10653
#define X25_RX_INTR	256,10711
#define X25_TX_INTR	257,10760
#define X25_MODEM_INTR	258,10810
#define X25_EVENT_INTR	259,10877
#define X25_CMD_INTR	260,10942
#define X25_HDLC_ABM	265,11045
#define X25_RX_READY	266,11097
#define X25_TRACE_READY	267,11149
#define X25_EVENT_IND	268,11205
#define X25_TX_READY	269,11267
#define X25_XFER_MODE	274,11372
#define X25_TXWIN_OPEN	275,11438
#define X25_RXBUF_MASK	276,11493
typedef struct X25GlobalVarsX25GlobalVars286,11950
} TX25GlobalVars;TX25GlobalVars291,12153
#define X25_RAISE_DTR	296,12214
#define X25_DROP_DTR	297,12241
typedef struct X25ModemStatusX25ModemStatus302,12385
} TX25ModemStatus;TX25ModemStatus305,12472
#define X25_CTS_MASK	310,12534
#define X25_DCD_MASK	311,12560
typedef struct X25LinkStatusX25LinkStatus316,12703
} TX25LinkStatus;TX25LinkStatus323,13032
#define	X25_STATION_DTE	328,13094
#define X25_STATION_DCE	329,13155
typedef struct HdlcStatsHdlcStats334,13332
} THdlcStats;THdlcStats353,14453
typedef struct HdlcCommErrHdlcCommErr358,14586
} THdlcCommErr;THdlcCommErr370,15255
typedef struct X25ConfigX25Config375,15415
} TX25Config;TX25Config415,17141
typedef struct X25ChanAlloc	X25ChanAlloc420,17275
} TX25ChanAlloc;TX25ChanAlloc430,17870
typedef struct X25ChanCfg	X25ChanCfg432,17888
} TX25ChanCfg;TX25ChanCfg437,18144
#define	X25_PVC 442,18200
#define	X25_SVC_IN	443,18233
#define	X25_SVC_TWOWAY	444,18276
#define	X25_SVC_OUT	445,18322
typedef struct X25StatsX25Stats450,18482
} TX25Stats;TX25Stats484,20470
typedef struct X25EventLogX25EventLog489,20602
} TX25EventLog;TX25EventLog497,20965
#define X25LOG_INCOMING	502,21022
#define X25LOG_APPLICATION 503,21052
#define X25LOG_AUTOMATIC	504,21085
#define X25LOG_ERROR	505,21115
#define X25LOG_TIMEOUT	506,21142
#define X25LOG_RECOVERY	507,21171
#define X25LOG_CALL_RQST	512,21244
#define X25LOG_CALL_ACCEPTED	513,21274
#define X25LOG_CLEAR_RQST	514,21308
#define X25LOG_CLEAR_CONFRM	515,21339
#define X25LOG_RESET_RQST	516,21372
#define X25LOG_RESET_CONFRM	517,21403
#define X25LOG_RESTART_RQST	518,21436
#define X25LOG_RESTART_COMFRM	519,21469
#define X25LOG_DIAGNOSTIC	520,21504
#define X25LOG_DTE_REG_RQST	521,21535
#define X25LOG_DTE_REG_COMFRM	522,21568
typedef struct X25TraceCfgX25TraceCfg527,21719
} TX25TraceCfg;TX25TraceCfg531,21884
#define X25_TRC_ENABLE	536,21942
#define X25_TRC_TIMESTAMP	537,22003
#define X25_TRC_DELAY	538,22073
#define X25_TRC_DATA	539,22139
#define X25_TRC_SUPERVISORY	540,22203
#define X25_TRC_ASYNCHRONOUS	541,22278
#define X25_TRC_HDLC	542,22351
#define X25_TRC_READ	543,22414
typedef struct X25Trace	X25Trace548,22595
} TX25Trace;TX25Trace556,23008
#define X25_TRC_TYPE_MASK	561,23062
#define X25_TRC_TYPE_RX_FRAME	562,23121
#define X25_TRC_TYPE_TX_FRAME	563,23183
#define X25_TRC_TYPE_ERR_FRAME	564,23242
#define X25_TRC_ERROR_MASK	566,23297
#define X25_TRCERR_RX_ABORT	567,23357
#define X25_TRCERR_RX_BADCRC	568,23416
#define X25_TRCERR_RX_OVERRUN	569,23474
#define X25_TRCERR_RX_TOO_LONG	570,23538
#define X25_TRCERR_TX_ABORT	571,23609
#define X25_TRCERR_TX_UNDERRUN	572,23681
typedef struct HDLCFrame	HDLCFrame578,23977
} THDLCFrame;THDLCFrame583,24171
typedef struct X25Pkt	X25Pkt585,24186
} TX25Pkt;TX25Pkt591,24447
#define	X25_Q_BIT_MASK	596,24501
#define	X25_D_BIT_MASK	597,24560
#define	X25_M_BITS_MASK	598,24626
#define	X25_LCN_MSB_MASK	599,24679
#define	X25PKT_DATA	604,24787
#define	X25PKT_SUPERVISORY	605,24836
#define	X25PKT_CALL_RQST	606,24898
#define	X25PKT_CALL_ACCEPTED	607,24956
#define	X25PKT_CLEAR_RQST	608,25020
#define	X25PKT_CLEAR_CONFRM	609,25082
#define	X25PKT_RESET_RQST	610,25140
#define	X25PKT_RESET_CONFRM	611,25202
#define	X25PKT_RESTART_RQST	612,25260
#define	X25PKT_RESTART_CONFRM	613,25326
#define	X25PKT_INTERRUPT	614,25388
#define	X25PKT_INTERRUPT_CONFRM	615,25434
#define	X25PKT_DIAGNOSTIC	616,25500
#define	X25PKT_REGISTR_RQST	617,25548
#define	X25PKT_REGISTR_CONFRM	618,25608
#define	X25PKT_RR_MASKED	619,25675
#define	X25PKT_RNR_MASKED	620,25746

include/linux/watchdog.h,697
#define	WATCHDOG_IOCTL_BASE	11,156
struct watchdog_info watchdog_info13,189
#define	WDIOC_GETSUPPORT	19,375
#define	WDIOC_GETSTATUS	20,451
#define	WDIOC_GETBOOTSTATUS	21,510
#define	WDIOC_GETTEMP	22,572
#define	WDIOC_SETOPTIONS	23,629
#define	WDIOC_KEEPALIVE	24,688
#define	WDIOF_UNKNOWN	26,748
#define	WDIOS_UNKNOWN	27,799
#define	WDIOF_OVERHEAT	29,853
#define	WDIOF_FANFAULT	30,916
#define	WDIOF_EXTERN1	31,964
#define	WDIOF_EXTERN2	32,1017
#define	WDIOF_POWERUNDER	33,1070
#define	WDIOF_CARDRESET	34,1130
#define WDIOF_POWEROVER	35,1198
#define	WDIOF_KEEPALIVEPING	36,1255
#define	WDIOS_DISABLECARD	38,1319
#define	WDIOS_ENABLECARD	39,1386
#define	WDIOS_TEMPPANIC	40,1451

include/linux/sdladrv.h,156
#define	_SDLADRV_H19,856
#define	SDLA_MAXIORANGE	21,876
#define	SDLA_WINDOWSIZE	22,931
typedef struct sdlahwsdlahw30,1256
} sdlahw_t;sdlahw_t44,1817

include/linux/sdlasfm.h,827
#define	_SDLASFM_H20,919
#define	SFM_VERSION	24,1019
#define	SFM_SIGNATURE	25,1041
#define	SFM_IMAGE_SIZE	28,1115
#define	SFM_DESCR_LEN	29,1184
#define	SFM_MAX_SDLA	30,1249
#define SDLA_S502A	33,1334
#define SDLA_S502E	34,1358
#define SDLA_S503	35,1382
#define SDLA_S508	36,1405
#define SDLA_S507	37,1428
#define SDLA_S509	38,1451
#define	SFID_CALIB502	50,1723
#define	SFID_STRM502	51,1750
#define	SFID_STRM508	52,1776
#define	SFID_BSC502	53,1802
#define	SFID_SDLC502	54,1827
#define	SFID_HDLC502	55,1853
#define	SFID_X25_502	56,1879
#define	SFID_X25_508	57,1905
#define	SFID_FR502	58,1931
#define	SFID_FR508	59,1955
#define	SFID_PPP502	60,1979
#define	SFID_PPP508	61,2004
typedef struct	sfm_info	sfm_info65,2110
} sfm_info_t;sfm_info_t78,2758
typedef struct sfm	sfm80,2773
} sfm_t;sfm_t89,3176

include/linux/wanpipe.h,947
#define	_WANPIPE_H29,1347
#define	PACKED	36,1427
#define	WANPIPE_MAGIC	39,1474
#define	WANPIPE_DUMP	42,1573
#define	WANPIPE_EXEC	43,1638
typedef struct sdla_dump	sdla_dump49,1751
} sdla_dump_t;sdla_dump_t55,1974
typedef struct sdla_exec	sdla_exec57,1990
} sdla_exec_t;sdla_exec_t62,2156
typedef struct wum_headerwum_header66,2200
} wum_header_t;wum_header_t72,2418
typedef struct global_statsglobal_stats78,2624
} global_stats_t;global_stats_t98,3228
typedef struct load_sharingload_sharing105,3494
} load_sharing_t;load_sharing_t109,3592
#define INTR_TEST_MODE	112,3652
#define	WUM_SIGNATURE_L	114,3681
#define	WUM_SIGNATURE_H	115,3716
#define	WUM_KILL	117,3752
#define	WUM_EXEC	118,3774
#define min(min127,4043
#define max(max130,4099
#define	is_digit(is_digit133,4144
#define	is_alpha(is_alpha134,4214
#define	is_hex_digit(is_hex_digit136,4337
typedef struct sdlasdla146,4723
} sdla_t;sdla_t204,6877

include/linux/wanrouter.h,3036
#define	_ROUTER_H32,1691
#define	ROUTER_NAME	34,1710
#define	ROUTER_VERSION	35,1774
#define	ROUTER_RELEASE	36,1821
#define	ROUTER_IOCTL	37,1884
#define	ROUTER_MAGIC	38,1932
enum router_ioctlsrouter_ioctls41,2063
	ROUTER_SETUP	43,2084
	ROUTER_SETUP	= ROUTER_IOCTL<43,2084
	ROUTER_DOWN,44,2140
	ROUTER_STAT,45,2180
	ROUTER_IFNEW,46,2221
	ROUTER_IFDEL,47,2259
	ROUTER_IFSTAT,48,2300
	ROUTER_USER	49,2346
	ROUTER_USER	= (ROUTER_IOCTL<49,2346
	ROUTER_USER_MAX	50,2411
	ROUTER_USER_MAX	= (ROUTER_IOCTL<50,2411
#define	NLPID_IP	54,2510
#define	NLPID_SNAP	55,2565
#define	NLPID_CLNP	56,2627
#define	NLPID_ESIS	57,2670
#define	NLPID_ISIS	58,2713
#define	NLPID_Q933	59,2756
#define	WAN_IFNAME_SZ	62,2819
#define	WAN_DRVNAME_SZ	63,2883
#define	WAN_ADDRESS_SZ	64,2950
#define UDP_PTPIPE_TYPE 67,3053
#define UDP_FPIPE_TYPE	68,3083
#define UDP_DRVSTATS_TYPE 69,3112
#define UDP_INVALID_TYPE 70,3144
#define CMD_OK	73,3203
#define CMD_TIMEOUT	74,3256
#define UDP_PKT_FRM_STACK	77,3344
#define UDP_PKT_FRM_NETWORK	78,3375
#define MAX_INTR_TEST_COUNTER	81,3446
#define CRITICAL_IN_ISR	84,3522
#define CRITICAL_INTR_HANDLED	85,3552
typedef struct wan_x25_confwan_x25_conf92,3794
} wan_x25_conf_t;wan_x25_conf_t114,4978
typedef struct wan_fr_confwan_fr_conf119,5130
} wan_fr_conf_t;wan_fr_conf_t129,5583
typedef struct wan_ppp_confwan_ppp_conf134,5726
} wan_ppp_conf_t;wan_ppp_conf_t148,6293
typedef struct wandev_confwandev_conf153,6454
} wandev_conf_t;wandev_conf_t185,7845
#define	WANCONFIG_X25	188,7893
#define	WANCONFIG_FR	189,7935
#define	WANCONFIG_PPP	190,7983
#define	WANOPT_OFF	196,8100
#define	WANOPT_ON	197,8121
#define	WANOPT_NO	198,8141
#define	WANOPT_YES	199,8161
#define	WANOPT_RS232	202,8207
#define	WANOPT_V35	203,8230
#define	WANOPT_NRZ	206,8280
#define	WANOPT_NRZI	207,8301
#define	WANOPT_FM0	208,8323
#define	WANOPT_FM1	209,8344
#define	WANOPT_POINTTOPOINT	212,8390
#define	WANOPT_MULTIDROP	213,8444
#define	WANOPT_EXTERNAL	216,8533
#define	WANOPT_INTERNAL	217,8559
#define	WANOPT_DTE	220,8608
#define	WANOPT_DCE	221,8630
#define	WANOPT_CPE	222,8652
#define	WANOPT_NODE	223,8674
#define	WANOPT_SECONDARY	224,8697
#define	WANOPT_PRIMARY	225,8724
#define	WANOPT_PERMANENT	228,8776
#define	WANOPT_SWITCHED	229,8827
#define	WANOPT_ONDEMAND	230,8892
#define	WANOPT_FR_ANSI	233,8999
#define	WANOPT_FR_Q933	234,9051
#define	WANOPT_FR_LMI	235,9094
typedef struct wandev_statwandev_stat240,9262
} wandev_stat_t;wandev_stat_t268,10492
enum wan_stateswan_states271,10532
	WAN_UNCONFIGURED,273,10550
	WAN_DISCONNECTED,274,10606
	WAN_CONNECTING,275,10660
	WAN_CONNECTED,276,10710
	WAN_LIMIT	277,10761
#define	WAN_MODEM_CTS	281,10832
#define	WAN_MODEM_DCD	282,10883
#define	WAN_MODEM_DTR	283,10934
#define	WAN_MODEM_RTS	284,10985
typedef struct wanif_confwanif_conf289,11195
} wanif_conf_t;wanif_conf_t302,11797
typedef struct wan_devicewan_device315,12264
} wan_device_t;wan_device_t359,14351
extern wan_device_t* router_devlist;378,15061

include/linux/awe_voice.h,9073
#define AWE_VOICE_H26,933
#define SAMPLE_TYPE_AWE32	29,980
#define _PATCHKEY(_PATCHKEY33,1037
typedef struct awe_patch_info awe_patch_info41,1286
#define AWE_PATCH	AWE_PATCH43,1357
#define AWE_LOAD_INFO	AWE_LOAD_INFO51,1627
#define AWE_LOAD_DATA	AWE_LOAD_DATA52,1672
#define AWE_OPEN_PATCH	AWE_OPEN_PATCH53,1719
#define AWE_CLOSE_PATCH	AWE_CLOSE_PATCH54,1765
#define AWE_UNLOAD_PATCH	AWE_UNLOAD_PATCH55,1803
#define AWE_REPLACE_DATA	AWE_REPLACE_DATA56,1841
#define AWE_MAP_PRESET	AWE_MAP_PRESET57,1908
#define AWE_PROBE_DATA	AWE_PROBE_DATA59,2014
#define AWE_LOAD_CHORUS_FX	AWE_LOAD_CHORUS_FX60,2060
#define AWE_LOAD_REVERB_FX	AWE_LOAD_REVERB_FX61,2130
} awe_patch_info;awe_patch_info69,2362
#define AWE_PATCH_INFO_SIZE	72,2416
#define AWE_PATCH_NAME_LEN	79,2620
typedef struct _awe_open_parm _awe_open_parm81,2651
#define AWE_PAT_TYPE_MISC	AWE_PAT_TYPE_MISC83,2724
#define AWE_PAT_TYPE_GM	AWE_PAT_TYPE_GM84,2752
#define AWE_PAT_TYPE_GS	AWE_PAT_TYPE_GS85,2779
#define AWE_PAT_TYPE_MT32	AWE_PAT_TYPE_MT3286,2806
#define AWE_PAT_TYPE_XG	AWE_PAT_TYPE_XG87,2834
#define AWE_PAT_TYPE_SFX	AWE_PAT_TYPE_SFX88,2861
#define AWE_PAT_TYPE_GUS	AWE_PAT_TYPE_GUS89,2888
#define AWE_PAT_TYPE_MAP	AWE_PAT_TYPE_MAP90,2915
#define AWE_PAT_LOCKED	AWE_PAT_LOCKED92,2943
#define AWE_PAT_SHARED	AWE_PAT_SHARED93,2996
} awe_open_parm;awe_open_parm97,3099
#define AWE_OPEN_PARM_SIZE	100,3151
typedef struct _awe_voice_parm _awe_voice_parm108,3436
} awe_voice_parm;awe_voice_parm130,4734
typedef struct _awe_voice_parm_block _awe_voice_parm_block132,4753
} awe_voice_parm_block;awe_voice_parm_block154,5733
#define AWE_VOICE_PARM_SIZE	156,5758
typedef struct _awe_voice_info _awe_voice_info160,5829
#define AWE_MODE_ROMSOUND	AWE_MODE_ROMSOUND167,6156
#define AWE_MODE_STEREO	AWE_MODE_STEREO168,6190
#define AWE_MODE_LOOPING	AWE_MODE_LOOPING169,6218
#define AWE_MODE_NORELEASE	AWE_MODE_NORELEASE170,6246
#define AWE_MODE_INIT_PARM	AWE_MODE_INIT_PARM171,6291
} awe_voice_info;awe_voice_info185,6925
#define AWE_VOICE_INFO_SIZE	188,6979
typedef struct _awe_voice_rec_hdr _awe_voice_rec_hdr200,7372
#define AWE_WR_APPEND	AWE_WR_APPEND205,7589
#define AWE_WR_EXCLUSIVE	AWE_WR_EXCLUSIVE206,7634
#define AWE_WR_REPLACE	AWE_WR_REPLACE207,7690
} awe_voice_rec_hdr;awe_voice_rec_hdr208,7748
#define AWE_VOICE_REC_SIZE	211,7803
typedef struct _awe_voice_rec_patch _awe_voice_rec_patch214,7907
} awe_voice_rec_patch;awe_voice_rec_patch218,8016
#define AWE_INFOARRAY_SIZE	223,8112
#define AWE_INFOARRAY_SIZE	225,8147
typedef struct _awe_voice_rec _awe_voice_rec228,8184
} awe_voice_rec;awe_voice_rec234,8430
typedef struct awe_sample_info awe_sample_info242,8654
#define AWE_SAMPLE_8BITS	AWE_SAMPLE_8BITS250,9009
#define AWE_SAMPLE_UNSIGNED	AWE_SAMPLE_UNSIGNED251,9061
#define AWE_SAMPLE_NO_BLANK	AWE_SAMPLE_NO_BLANK252,9119
#define AWE_SAMPLE_SINGLESHOT	AWE_SAMPLE_SINGLESHOT253,9181
#define AWE_SAMPLE_BIDIR_LOOP	AWE_SAMPLE_BIDIR_LOOP254,9240
#define AWE_SAMPLE_STEREO_LEFT	AWE_SAMPLE_STEREO_LEFT255,9301
#define AWE_SAMPLE_STEREO_RIGHT	AWE_SAMPLE_STEREO_RIGHT256,9359
#define AWE_SAMPLE_REVERSE_LOOP AWE_SAMPLE_REVERSE_LOOP257,9419
} awe_sample_info;awe_sample_info262,9628
#define AWE_SAMPLE_INFO_SIZE	265,9684
typedef struct awe_voice_map awe_voice_map272,9900
} awe_voice_map;awe_voice_map275,10031
#define AWE_VOICE_MAP_SIZE	277,10049
#define _AWE_DEBUG_MODE	284,10262
#define _AWE_REVERB_MODE	285,10293
#define _AWE_CHORUS_MODE	286,10324
#define _AWE_REMOVE_LAST_SAMPLES	287,10355
#define _AWE_INITIALIZE_CHIP	288,10393
#define _AWE_SEND_EFFECT	289,10428
#define _AWE_TERMINATE_CHANNEL	290,10459
#define _AWE_TERMINATE_ALL	291,10496
#define _AWE_INITIAL_VOLUME	292,10529
#define _AWE_INITIAL_ATTEN	293,10563
#define _AWE_RESET_CHANNEL	294,10610
#define _AWE_CHANNEL_MODE	295,10643
#define _AWE_DRUM_CHANNELS	296,10675
#define _AWE_MISC_MODE	297,10708
#define _AWE_RELEASE_ALL	298,10738
#define _AWE_NOTEOFF_ALL	299,10769
#define _AWE_CHN_PRESSURE	300,10800
#define _AWE_EQUALIZER	302,10872
#define _AWE_MODE_FLAG	306,10976
#define _AWE_COOKED_FLAG	307,11006
#define _AWE_MODE_VALUE_MASK	308,11057
#define _AWE_SET_CMD(_AWE_SET_CMD312,11163
#define _AWE_CMD(_AWE_CMD321,11427
#define _AWE_CMD_NOW(_AWE_CMD_NOW327,11592
#define AWE_DEBUG_MODE(AWE_DEBUG_MODE335,11857
#define AWE_REVERB_MODE(AWE_REVERB_MODE337,11964
#define AWE_CHORUS_MODE(AWE_CHORUS_MODE339,12073
#define AWE_RESET_CHANNEL(AWE_RESET_CHANNEL342,12168
#define AWE_RESET_CONTROL(AWE_RESET_CONTROL343,12246
#define AWE_SEND_EFFECT(AWE_SEND_EFFECT346,12360
#define AWE_ADD_EFFECT(AWE_ADD_EFFECT347,12454
#define AWE_UNSET_EFFECT(AWE_UNSET_EFFECT348,12556
#define AWE_SEND_LAYER_EFFECT(AWE_SEND_LAYER_EFFECT350,12682
#define AWE_ADD_LAYER_EFFECT(AWE_ADD_LAYER_EFFECT351,12805
#define AWE_UNSET_LAYER_EFFECT(AWE_UNSET_LAYER_EFFECT352,12932
#define AWE_TERMINATE_CHANNEL(AWE_TERMINATE_CHANNEL355,13095
#define AWE_TERMINATE_ALL(AWE_TERMINATE_ALL357,13210
#define AWE_RELEASE_ALL(AWE_RELEASE_ALL359,13330
#define AWE_NOTEOFF_ALL(AWE_NOTEOFF_ALL361,13445
#define AWE_INITIAL_VOLUME(AWE_INITIAL_VOLUME364,13546
#define AWE_INITIAL_ATTEN 365,13632
#define AWE_SET_ATTEN(AWE_SET_ATTEN367,13705
#define AWE_SET_CHANNEL_MODE(AWE_SET_CHANNEL_MODE370,13831
#define AWE_PLAY_INDIRECT	371,13915
#define AWE_PLAY_MULTI	372,13979
#define AWE_PLAY_DIRECT	373,14033
#define AWE_PLAY_MULTI2	374,14091
#define AWE_DRUM_CHANNELS(AWE_DRUM_CHANNELS377,14216
#define AWE_EQUALIZER(AWE_EQUALIZER380,14396
#define AWE_REMOVE_LAST_SAMPLES(AWE_REMOVE_LAST_SAMPLES383,14516
#define AWE_INITIALIZE_CHIP(AWE_INITIALIZE_CHIP385,14649
#define AWE_MISC_MODE(AWE_MISC_MODE388,14789
#define AWE_EXCLUSIVE_SOUND(AWE_EXCLUSIVE_SOUND390,14906
#define AWE_SET_GUS_BANK(AWE_SET_GUS_BANK392,15021
#define AWE_REALTIME_PAN(AWE_REALTIME_PAN394,15152
#define AWE_KEY_PRESSURE(AWE_KEY_PRESSURE397,15304
#define AWE_CHN_PRESSURE(AWE_CHN_PRESSURE398,15384
#define	AWE_REVERB_ROOM1	403,15562
#define AWE_REVERB_ROOM2	404,15589
#define	AWE_REVERB_ROOM3	405,15616
#define	AWE_REVERB_HALL1	406,15643
#define	AWE_REVERB_HALL2	407,15670
#define	AWE_REVERB_PLATE	408,15697
#define	AWE_REVERB_DELAY	409,15724
#define	AWE_REVERB_PANNINGDELAY 410,15751
#define AWE_REVERB_PREDEFINED	411,15785
#define AWE_REVERB_NUMBERS	413,15861
typedef struct awe_reverb_fx_rec awe_reverb_fx_rec415,15892
} awe_reverb_fx_rec;awe_reverb_fx_rec417,15954
#define AWE_CHORUS_1	422,16075
#define	AWE_CHORUS_2	423,16099
#define	AWE_CHORUS_3	424,16123
#define	AWE_CHORUS_4	425,16147
#define	AWE_CHORUS_FEEDBACK	426,16171
#define	AWE_CHORUS_FLANGER	427,16201
#define	AWE_CHORUS_SHORTDELAY	428,16230
#define	AWE_CHORUS_SHORTDELAY2	429,16262
#define AWE_CHORUS_PREDEFINED	430,16295
#define AWE_CHORUS_NUMBERS	432,16371
typedef struct awe_chorus_fx_rec awe_chorus_fx_rec434,16402
} awe_chorus_fx_rec;awe_chorus_fx_rec440,16762
/* 0*/	AWE_MD_EXCLUSIVE_OFF,446,16883
/* 1*/	AWE_MD_EXCLUSIVE_ON,447,16927
/* 2*/	AWE_MD_VERSION,448,16970
/* 3*/	AWE_MD_EXCLUSIVE_SOUND,449,17010
/* 4*/	AWE_MD_REALTIME_PAN,450,17082
/* 5*/	AWE_MD_GUS_BANK,451,17156
/* 6*/	AWE_MD_KEEP_EFFECT,452,17226
/* 7*/	AWE_MD_ZERO_ATTEN,453,17296
/* 8*/	AWE_MD_CHN_PRIOR,454,17367
/* 9*/	AWE_MD_MOD_SENSE,455,17446
/*10*/	AWE_MD_DEF_PRESET,456,17516
/*11*/	AWE_MD_DEF_BANK,457,17587
/*12*/	AWE_MD_DEF_DRUM,458,17654
/*13*/	AWE_MD_TOGGLE_DRUM_BANK,459,17724
/*14*/	AWE_MD_NEW_VOLUME_CALC,460,17803
/*15*/	AWE_MD_CHORUS_MODE,461,17877
/*16*/	AWE_MD_REVERB_MODE,462,17939
/*17*/	AWE_MD_BASS_LEVEL,463,18001
/*18*/	AWE_MD_TREBLE_LEVEL,464,18061
/*19*/	AWE_MD_DEBUG_MODE,465,18125
/*20*/	AWE_MD_PAN_EXCHANGE,466,18186
	AWE_MD_END,467,18260
/* 0*/	AWE_FX_ENV1_DELAY,476,18416
/* 1*/	AWE_FX_ENV1_ATTACK,477,18461
/* 2*/	AWE_FX_ENV1_HOLD,478,18510
/* 3*/	AWE_FX_ENV1_DECAY,479,18557
/* 4*/	AWE_FX_ENV1_RELEASE,480,18605
/* 5*/	AWE_FX_ENV1_SUSTAIN,481,18655
/* 6*/	AWE_FX_ENV1_PITCH,482,18705
/* 7*/	AWE_FX_ENV1_CUTOFF,483,18751
/* 8*/	AWE_FX_ENV2_DELAY,486,18832
/* 9*/	AWE_FX_ENV2_ATTACK,487,18877
/*10*/	AWE_FX_ENV2_HOLD,488,18927
/*11*/	AWE_FX_ENV2_DECAY,489,18975
/*12*/	AWE_FX_ENV2_RELEASE,490,19024
/*13*/	AWE_FX_ENV2_SUSTAIN,491,19075
/*14*/	AWE_FX_LFO1_DELAY,494,19170
/*15*/	AWE_FX_LFO1_FREQ,495,19216
/*16*/	AWE_FX_LFO1_VOLUME,496,19264
/*17*/	AWE_FX_LFO1_PITCH,497,19314
/*18*/	AWE_FX_LFO1_CUTOFF,498,19361
/*19*/	AWE_FX_LFO2_DELAY,501,19442
/*20*/	AWE_FX_LFO2_FREQ,502,19488
/*21*/	AWE_FX_LFO2_PITCH,503,19536
/*22*/	AWE_FX_INIT_PITCH,506,19624
/*23*/	AWE_FX_CHORUS,507,19676
/*24*/	AWE_FX_REVERB,508,19739
/*25*/	AWE_FX_CUTOFF,509,19802
/*26*/	AWE_FX_FILTERQ,510,19846
/*27*/	AWE_FX_SAMPLE_START,513,19926
/*28*/	AWE_FX_LOOP_START,514,19974
/*29*/	AWE_FX_LOOP_END,515,20020
/*30*/	AWE_FX_COARSE_SAMPLE_START,516,20064
/*31*/	AWE_FX_COARSE_LOOP_START,517,20130
/*32*/	AWE_FX_COARSE_LOOP_END,518,20194
/*33*/	AWE_FX_ATTEN,519,20257
	AWE_FX_END,521,20301

include/linux/digi1.h,1134
#define	TIOCMODG	4,99
#define	TIOCMODS	5,159
#define	TIOCMSET	9,250
#define	TIOCMGET	10,310
#define	TIOCMBIC	14,401
#define	TIOCMBIS	15,461
#define	TIOCSDTR	19,552
#define	TIOCCDTR	20,598
#define DIGI_GETA	26,851
#define DIGI_SETA	28,904
#define DIGI_SETAW	29,955
#define DIGI_SETAF	30,1014
#define	DIGI_GETFLOW	32,1081
#define	DIGI_SETFLOW	34,1178
#define	DIGI_GETAFLOW	36,1275
#define	DIGI_SETAFLOW	38,1374
#define	DIGI_GETINFO	41,1473
#define	DIGI_POLLER	42,1534
#define	DIGI_INIT	43,1595
struct	digiflow_struct digiflow_struct45,1657
typedef struct digiflow_struct digiflow_t;digiflow_t51,1791
#define DIGI_IXON	57,2011
#define DIGI_FAST	58,2066
#define RTSPACE	59,2115
#define CTSPACE	60,2169
#define DSRPACE	61,2224
#define DCDPACE	62,2279
#define DTRPACE	63,2334
#define DIGI_FORCEDCD	64,2388
#define	DIGI_ALTPIN	65,2439
#define	DIGI_AIXON	66,2500
#define NORMAL 72,2732
#define PCI_CTL 73,2750
#define SIZE8 75,2769
#define SIZE16 76,2786
#define SIZE32 77,2803
struct digi_struct digi_struct82,3029
typedef struct digi_struct digi_t;digi_t87,3108
struct digi_info digi_info89,3144

include/linux/parport.h,4215
#define _PARPORT_H_4,88
#define PARPORT_MAX 9,191
#define PARPORT_IRQ_NONE 12,236
#define PARPORT_DMA_NONE 13,265
#define PARPORT_IRQ_AUTO 14,294
#define PARPORT_DMA_AUTO 15,323
#define PARPORT_DISABLE 16,352
#define PARPORT_IRQ_PROBEONLY 17,381
#define PARPORT_CONTROL_STROBE 19,415
#define PARPORT_CONTROL_AUTOFD 20,453
#define PARPORT_CONTROL_INIT 21,491
#define PARPORT_CONTROL_SELECT 22,529
#define PARPORT_CONTROL_INTEN 23,567
#define PARPORT_CONTROL_DIRECTION 24,606
#define PARPORT_STATUS_ERROR 26,646
#define PARPORT_STATUS_SELECT 27,684
#define PARPORT_STATUS_PAPEROUT 28,723
#define PARPORT_STATUS_ACK 29,762
#define PARPORT_STATUS_BUSY 30,801
} parport_device_class;parport_device_class47,1408
#define PARPORT_MODE_PCSPP	54,1626
#define PARPORT_MODE_PCPS2	55,1668
#define PARPORT_MODE_PCEPP	56,1703
#define PARPORT_MODE_PCECP	57,1738
#define PARPORT_MODE_PCECPEPP	58,1773
#define PARPORT_MODE_PCECR	59,1811
#define PARPORT_MODE_PCECPPS2	60,1873
#define PARPORT_NEED_GENERIC_OPS71,2097
struct pc_parport_state pc_parport_state76,2173
struct parport_state parport_state81,2241
struct parport_operations parport_operations90,2399
struct parport_device_info parport_device_info133,4301
struct pardevice pardevice155,5071
struct parport_dir parport_dir175,5608
struct parport parport185,5967
#define parport_in_use(parport_in_use226,7145
extern __inline__ int parport_yield(277,9389
extern __inline__ int parport_yield_blocking(289,9739
extern __inline__ void parport_generic_irq(301,10080
#define PARPORT_DEV_TRAN	317,10557
#define PARPORT_DEV_LURK	318,10616
#define PARPORT_DEV_EXCL	319,10680
#define PARPORT_FLAG_COMA	321,10743
#define PARPORT_FLAG_EXCL	322,10777
#define parport_write_data(parport_write_data346,11940
#define parport_read_data(parport_read_data347,12010
#define parport_write_control(parport_write_control348,12077
#define parport_read_control(parport_read_control349,12150
#define parport_frob_control(parport_frob_control350,12220
#define parport_write_econtrol(parport_write_econtrol351,12294
#define parport_read_econtrol(parport_read_econtrol352,12368
#define parport_frob_econtrol(parport_frob_econtrol353,12439
#define parport_write_status(parport_write_status354,12514
#define parport_read_status(parport_read_status355,12586
#define parport_write_fifo(parport_write_fifo356,12655
#define parport_read_fifo(parport_read_fifo357,12725
#define parport_change_mode(parport_change_mode358,12792
#define parport_release_resources(parport_release_resources359,12863
#define parport_claim_resources(parport_claim_resources360,12938
#define parport_epp_write_data(parport_epp_write_data361,13011
#define parport_epp_read_data(parport_epp_read_data362,13080
#define parport_epp_write_addr(parport_epp_write_addr363,13146
#define parport_epp_read_addr(parport_epp_read_addr364,13220
#define parport_epp_check_timeout(parport_epp_check_timeout365,13291
#define parport_write_data(parport_write_data370,13466
#define parport_read_data(parport_read_data371,13535
#define parport_write_control(parport_write_control372,13601
#define parport_read_control(parport_read_control373,13673
#define parport_frob_control(parport_frob_control374,13742
#define parport_write_econtrol(parport_write_econtrol375,13815
#define parport_read_econtrol(parport_read_econtrol376,13888
#define parport_frob_econtrol(parport_frob_econtrol377,13958
#define parport_write_status(parport_write_status378,14032
#define parport_read_status(parport_read_status379,14103
#define parport_write_fifo(parport_write_fifo380,14171
#define parport_read_fifo(parport_read_fifo381,14240
#define parport_change_mode(parport_change_mode382,14306
#define parport_release_resources(parport_release_resources383,14376
#define parport_claim_resources(parport_claim_resources384,14450
#define parport_epp_write_data(parport_epp_write_data385,14522
#define parport_epp_read_data(parport_epp_read_data386,14595
#define parport_epp_write_addr(parport_epp_write_addr387,14665
#define parport_epp_read_addr(parport_epp_read_addr388,14738
#define parport_epp_check_timeout(parport_epp_check_timeout389,14808

include/linux/lockd/bind.h,129
#define LINUX_LOCKD_BIND_H10,196
struct nlmsvc_binding nlmsvc_binding22,420
extern struct nlmsvc_binding *	nlmsvc_ops;33,709

include/linux/lockd/debug.h,404
#define LINUX_LOCKD_DEBUG_H10,152
# define LOCKD_DEBUG	21,307
# define ifdebug(ifdebug26,401
# define ifdebug(ifdebug28,462
#define NLMDBG_SVC	40,604
#define NLMDBG_CLIENT	41,631
#define NLMDBG_CLNTLOCK	42,661
#define NLMDBG_SVCLOCK	43,693
#define NLMDBG_MONITOR	44,724
#define NLMDBG_CLNTSUBS	45,755
#define NLMDBG_SVCSUBS	46,787
#define NLMDBG_HOSTCACHE	47,818
#define NLMDBG_ALL	48,850

include/linux/lockd/lockd.h,672
#define LINUX_LOCKD_LOCKD_H10,171
#define LOCKD_VERSION	25,436
#define LOCKD_DFLT_TIMEO	30,516
struct nlm_host nlm_host35,623
#define NLMCLNT_OHSIZE	59,1546
struct nlm_rqst nlm_rqst60,1607
struct nlm_file nlm_file72,1931
#define NLM_NEVER	87,2479
struct nlm_block nlm_block88,2519
#define NLM_ACT_CHECK	106,3194
#define NLM_ACT_MARK	107,3242
#define NLM_ACT_UNLOCK	108,3286
extern struct rpc_program	nlm_program;113,3365
extern struct svc_procedure	nlmsvc_procedures[114,3404
extern unsigned long		nlmsvc_grace_period;115,3453
extern unsigned long		nlmsvc_timeout;116,3496
nlmsvc_file_inode(167,5336
nlm_cmp_addr(176,5508
nlm_compare_locks(186,5760

include/linux/lockd/nlm.h,959
#define LINUX_LOCKD_NLM_H10,184
# define NLM_OFFSET_MAX	14,275
# define NLM_OFFSET_MAX	16,317
	NLM_LCK_GRANTED 21,406
	NLM_LCK_DENIED,22,428
	NLM_LCK_DENIED_NOLOCKS,23,445
	NLM_LCK_BLOCKED,24,470
	NLM_LCK_DENIED_GRACE_PERIOD,25,488
#define NLM_PROGRAM	28,522
#define NLMPROC_NULL	30,551
#define NLMPROC_TEST	31,575
#define NLMPROC_LOCK	32,599
#define NLMPROC_CANCEL	33,623
#define NLMPROC_UNLOCK	34,649
#define NLMPROC_GRANTED	35,675
#define NLMPROC_TEST_MSG	36,702
#define NLMPROC_LOCK_MSG	37,729
#define NLMPROC_CANCEL_MSG	38,756
#define NLMPROC_UNLOCK_MSG	39,785
#define NLMPROC_GRANTED_MSG	40,814
#define NLMPROC_TEST_RES	41,845
#define NLMPROC_LOCK_RES	42,873
#define NLMPROC_CANCEL_RES	43,901
#define NLMPROC_UNLOCK_RES	44,931
#define NLMPROC_GRANTED_RES	45,961
#define NLMPROC_SHARE	46,992
#define NLMPROC_UNSHARE	47,1018
#define NLMPROC_NM_LOCK	48,1046
#define NLMPROC_FREE_ALL	49,1074
#define NLMPROC_NSM_NOTIFY	50,1102

include/linux/lockd/share.h,70
#define LINUX_LOCKD_SHARE_H10,168
struct nlm_share nlm_share15,237

include/linux/lockd/sm_inter.h,377
#define LINUX_LOCKD_SM_INTER_H10,184
#define SM_PROGRAM	12,216
#define SM_VERSION	13,242
#define SM_STAT	14,263
#define SM_MON	15,282
#define SM_UNMON	16,300
#define SM_UNMON_ALL	17,319
#define SM_SIMU_CRASH	18,342
#define SM_NOTIFY	19,366
#define SM_MAXSTRLEN	21,387
struct nsm_args nsm_args26,457
struct nsm_res nsm_res36,609
extern u32	nsm_local_state;43,733

include/linux/lockd/xdr.h,460
#define LOCKD_XDR_H10,156
extern u32	nlm_granted,16,253
extern u32	nlm_granted, nlm_lck_denied,16,253
extern u32	nlm_granted, nlm_lck_denied, nlm_lck_denied_nolocks,16,253
		nlm_lck_blocked,17,317
		nlm_lck_blocked, nlm_lck_denied_grace_period;17,317
struct nlm_lock nlm_lock20,397
struct nlm_cookienlm_cookie32,592
struct nlm_args nlm_args41,715
struct nlm_res nlm_res55,915
struct nlm_reboot nlm_reboot64,1052
#define NLMSVC_XDRSIZE	74,1192

include/linux/nfs3.h,3033
#define _LINUX_NFS3_H5,59
#define NFS3_PORT	10,141
#define NFS3_MAXDATA	11,165
#define NFS3_MAXPATHLEN	12,192
#define NFS3_MAXNAMLEN	13,226
#define NFS3_MAXGROUPS	14,259
#define NFS3_FHSIZE	15,286
#define NFS3_COOKIESIZE	16,318
#define NFS3_FIFO_DEV	17,345
#define NFS3MODE_FMT	18,373
#define NFS3MODE_DIR	19,403
#define NFS3MODE_CHR	20,433
#define NFS3MODE_BLK	21,463
#define NFS3MODE_REG	22,493
#define NFS3MODE_LNK	23,523
#define NFS3MODE_SOCK	24,553
#define NFS3MODE_FIFO	25,584
enum nfs3_stat nfs3_stat28,618
	NFS3_OK	29,635
	NFS3ERR_PERM	30,651
	NFS3ERR_NOENT	31,671
	NFS3ERR_IO	32,692
	NFS3ERR_NXIO	33,710
	NFS3ERR_EAGAIN	34,730
	NFS3ERR_ACCES	35,753
	NFS3ERR_EXIST	36,775
	NFS3ERR_XDEV	37,797
	NFS3ERR_NODEV	38,837
	NFS3ERR_NOTDIR	39,859
	NFS3ERR_ISDIR	40,882
	NFS3ERR_INVAL	41,904
	NFS3ERR_FBIG	42,945
	NFS3ERR_NOSPC	43,966
	NFS3ERR_ROFS	44,988
	NFS3ERR_MLINK	45,1009
	NFS3ERR_NAMETOOLONG	46,1050
	NFS3ERR_NOTEMPTY	47,1077
	NFS3ERR_DQUOT	48,1101
	NFS3ERR_STALE	49,1123
	NFS3ERR_REMOTE	50,1145
	NFS3ERR_BADHANDLE	51,1187
	NFS3ERR_NOT_SYNC	52,1226
	NFS3ERR_BAD_COOKIE	53,1264
	NFS3ERR_NOTSUPP	54,1304
	NFS3ERR_TOOSMALL	55,1342
	NFS3ERR_SERVERFAULT	56,1380
	NFS3ERR_BADTYPE	57,1421
	NFS3ERR_JUKEBOX	58,1459
enum nfs3_ftype nfs3_ftype61,1501
	NF3NON 62,1519
	NF3REG 63,1533
	NF3DIR 64,1547
	NF3BLK 65,1561
	NF3CHR 66,1575
	NF3LNK 67,1589
	NF3SOCK 68,1603
	NF3FIFO 69,1617
	NF3BAD 70,1664
#define NFS3_VERSION	73,1681
#define NFSPROC_NULL	74,1705
#define NFSPROC_GETATTR	75,1729
#define NFSPROC_SETATTR	76,1756
#define NFSPROC_ROOT	77,1783
#define NFSPROC_LOOKUP	78,1807
#define NFSPROC_READLINK	79,1833
#define NFSPROC_READ	80,1860
#define NFSPROC_WRITECACHE	81,1884
#define NFSPROC_WRITE	82,1913
#define NFSPROC_CREATE	83,1938
#define NFSPROC_REMOVE	84,1964
#define NFSPROC_RENAME	85,1991
#define NFSPROC_LINK	86,2018
#define NFSPROC_SYMLINK	87,2043
#define NFSPROC_MKDIR	88,2071
#define NFSPROC_RMDIR	89,2097
#define NFSPROC_READDIR	90,2123
#define NFSPROC_STATFS	91,2151
struct nfs3_fh nfs3_fh95,2238
struct nfs3_fattr nfs3_fattr100,2301
struct nfs3_wcc_attr nfs3_wcc_attr117,2583
struct nfs3_wcc_data nfs3_wcc_data123,2675
struct nfs3_sattr nfs3_sattr128,2761
struct nfs3_entry nfs3_entry138,2909
struct nfs3_fsinfo nfs3_fsinfo146,3020
struct nfs3_sattrargs nfs3_sattrargs156,3154
struct nfs3_diropargs nfs3_diropargs161,3231
struct nfs3_readargs nfs3_readargs166,3302
struct nfs3_writeargs nfs3_writeargs173,3402
struct nfs3_createargs nfs3_createargs180,3508
struct nfs3_renameargs nfs3_renameargs186,3607
struct nfs3_linkargs nfs3_linkargs193,3734
struct nfs3_symlinkargs nfs3_symlinkargs199,3834
struct nfs3_readdirargs nfs3_readdirargs206,3965
struct nfs3_diropok nfs3_diropok213,4075
struct nfs3_readres nfs3_readres218,4150
struct nfs3_readlinkres nfs3_readlinkres223,4225
struct nfs3_readdirres nfs3_readdirres230,4338
struct nfs3_fh nfs3_fh238,4446
struct nfs3_wcc_attr nfs3_wcc_attr243,4508

include/linux/b1lli.h,1716
#define _B1LLI_H_35,894
typedef struct avmb1_t4file avmb1_t4file39,950
} avmb1_t4file;avmb1_t4file42,1012
typedef struct avmb1_loaddef avmb1_loaddef44,1029
} avmb1_loaddef;avmb1_loaddef47,1094
typedef struct avmb1_loadandconfigdef avmb1_loadandconfigdef49,1112
} avmb1_loadandconfigdef;avmb1_loadandconfigdef53,1218
typedef struct avmb1_resetdef avmb1_resetdef55,1245
} avmb1_resetdef;avmb1_resetdef57,1289
typedef struct avmb1_getdef avmb1_getdef59,1308
} avmb1_getdef;avmb1_getdef63,1381
typedef struct avmb1_carddef avmb1_carddef68,1437
} avmb1_carddef;avmb1_carddef71,1489
#define AVM_CARDTYPE_B1	73,1507
#define AVM_CARDTYPE_T1	74,1533
#define AVM_CARDTYPE_M1	75,1559
#define AVM_CARDTYPE_M2	76,1585
typedef struct avmb1_extcarddef avmb1_extcarddef78,1612
} avmb1_extcarddef;avmb1_extcarddef82,1689
#define	AVMB1_LOAD	84,1710
#define AVMB1_ADDCARD	85,1757
#define AVMB1_RESETCARD	86,1803
#define	AVMB1_LOAD_AND_CONFIG	87,1849
#define	AVMB1_ADDCARD_WITH_TYPE	88,1917
#define AVMB1_GET_CARDINFO	89,1987
#define CARD_FREE	97,2073
#define CARD_DETECTED	98,2093
#define CARD_LOADING	99,2117
#define CARD_INITSTATE	100,2140
#define CARD_RUNNING	101,2165
#define CARD_ACTIVE	102,2188
#define	AVMB1_PORTLEN	106,2230
#define AVM_MAXVERSION	108,2258
#define AVM_NBCHAN	109,2283
#define AVM_NAPPS	111,2305
#define AVM_NPLCI	112,2326
#define AVM_NNCCI	113,2346
typedef struct avmb1_card avmb1_card119,2395
} avmb1_card;avmb1_card135,2777
#define	VER_DRIVER	141,2812
#define	VER_CARDTYPE	142,2833
#define	VER_HWID	143,2856
#define	VER_SERIAL	144,2875
#define	VER_OPTION	145,2896
#define	VER_PROTO	146,2917
#define	VER_PROFILE	147,2937
#define	VER_CAPI	148,2959

include/linux/consolemap.h,96
#define LAT1_MAP 6,88
#define GRAF_MAP 7,107
#define IBMPC_MAP 8,126
#define USER_MAP 9,146

include/linux/capi.h,901
#define __LINUX_CAPI_H__22,423
typedef struct capi_register_params capi_register_params34,579
} capi_register_params;capi_register_params38,814
#define	CAPI_REGISTER	40,839
#define CAPI_MANUFACTURER_LEN	46,938
#define	CAPI_GET_MANUFACTURER	48,973
typedef struct capi_version capi_version54,1070
} capi_version;capi_version59,1192
#define CAPI_GET_VERSION	61,1209
#define CAPI_SERIAL_LEN	67,1298
#define CAPI_GET_SERIAL	68,1325
typedef struct capi_profile capi_profile74,1412
} capi_profile;capi_profile83,1810
#define CAPI_GET_PROFILE	85,1827
typedef struct capi_manufacturer_cmd capi_manufacturer_cmd87,1889
} capi_manufacturer_cmd;capi_manufacturer_cmd90,1961
#define CAPI_MANUFACTURER_CMD	96,2020
#define CAPI_GET_ERRCODE	104,2244
#define CAPI_INSTALLED	109,2317
typedef union capi_ioctl_struct capi_ioctl_struct116,2480
} capi_ioctl_struct;capi_ioctl_struct125,2723

include/linux/epca.h,1452
#define XEMPORTS 1,0
#define XEPORTS 2,26
#define MAX_ALLOC 4,53
#define MAXBOARDS 6,80
#define FEPCODESEG 7,103
#define FEPCODE 8,131
#define BIOSCODE 9,159
#define MISCGLOBAL 11,188
#define NPORT 12,216
#define MBOX 13,244
#define PORTBASE 14,272
#define INVALID_BOARD_TYPE 18,347
#define INVALID_NUM_PORTS 19,380
#define INVALID_MEM_BASE 20,413
#define INVALID_PORT_BASE 21,446
#define INVALID_BOARD_STATUS 22,479
#define INVALID_ALTPIN 23,513
#define FEPCLR 28,593
#define FEPMEM 29,618
#define FEPRST 30,643
#define FEPINT 31,668
#define	FEPMASK 32,693
#define	FEPWIN 33,718
#define PCXE 35,744
#define PCXEVE 36,762
#define PCXEM 37,780
#define EISAXEM 38,801
#define PC64XE 39,819
#define PCXI 40,837
#define PCIXEM 41,855
#define PCICX 42,873
#define PCIXR 43,891
#define PCIXRJ 44,909
#define EPCA_NUM_TYPES 45,928
static char *board_desc[48,955
#define STARTC 63,1116
#define STOPC 64,1140
#define IAIXON 65,1164
#define TXSTOPPED 68,1193
#define LOWWAIT 69,1216
#define EMPTYWAIT 70,1239
#define RXSTOPPED 71,1262
#define TXBUSY 72,1285
#define DISABLED 74,1310
#define ENABLED 75,1331
#define OFF 76,1352
#define ON 77,1373
#define FEPTIMEOUT 79,1395
#define SERIAL_TYPE_NORMAL 80,1423
#define SERIAL_TYPE_CALLOUT 81,1453
#define SERIAL_TYPE_INFO 82,1483
#define EPCA_EVENT_HANGUP 83,1513
#define EPCA_MAGIC 84,1543
struct channel channel86,1584
struct board_info	board_info149,3139

include/linux/sc26198.h,9453
#define	_SC26198_H25,1012
#define	SC26198_PORTS	31,1180
#define	SC26198_MASTERCLOCK	36,1286
#define	SC26198_DCLK	37,1324
#define	SC26198_CCLK	38,1368
#define	SC26198_BCLK	39,1416
#define	SC26198_TXFIFOSIZE	44,1523
#define	SC26198_RXFIFOSIZE	45,1553
#define	TSTR	53,1782
#define	GCCR	54,1801
#define	ICR	55,1820
#define	WDTRCR	56,1838
#define	IVR	57,1859
#define	BRGTRUA	58,1877
#define	GPOSR	59,1899
#define	GPOC	60,1919
#define	UCIR	61,1938
#define	CIR	62,1957
#define	BRGTRUB	63,1975
#define	GRXFIFO	64,1997
#define	GTXFIFO	65,2019
#define	GCCR2	66,2041
#define	BRGTRLA	67,2061
#define	GPOR	68,2083
#define	GPOD	69,2102
#define	BRGTCR	70,2121
#define	GICR	71,2142
#define	BRGTRLB	72,2161
#define	GIBCR	73,2183
#define	GITR	74,2203
#define	MR0	81,2402
#define	MR1	82,2420
#define	IOPCR	83,2438
#define	BCRBRK	84,2458
#define	BCRCOS	85,2479
#define	BCRX	86,2500
#define	BCRA	87,2519
#define	XONCR	88,2538
#define	XOFFCR	89,2558
#define	ARCR	90,2579
#define	RXCSR	91,2598
#define	TXCSR	92,2618
#define	MR2	93,2638
#define	SR	94,2656
#define SCCR	95,2673
#define	ISR	96,2692
#define	IMR	97,2710
#define	TXFIFO	98,2728
#define	RXFIFO	99,2749
#define	IPR	100,2770
#define	IOPIOR	101,2788
#define	XISR	102,2809
#define	SC26198_PORTREG(SC26198_PORTREG109,3022
#define	GCCR_NOACK	116,3236
#define	GCCR_IVRACK	117,3261
#define	GCCR_IVRCHANACK	118,3287
#define	GCCR_IVRTYPCHANACK	119,3317
#define	GCCR_ASYNCCYCLE	120,3349
#define	GCCR_SYNCCYCLE	121,3379
#define	MR0_ADDRNONE	128,3533
#define	MR0_AUTOWAKE	129,3560
#define	MR0_AUTODOZE	130,3587
#define	MR0_AUTOWAKEDOZE	131,3614
#define	MR0_SWFNONE	132,3644
#define	MR0_SWFTX	133,3670
#define	MR0_SWFRX	134,3694
#define	MR0_SWFRXTX	135,3718
#define	MR0_TXMASK	136,3744
#define	MR0_TXEMPTY	137,3769
#define	MR0_TXHIGH	138,3795
#define	MR0_TXHALF	139,3820
#define	MR0_TXRDY	140,3845
#define	MR0_ADDRNT	141,3869
#define	MR0_ADDRT	142,3894
#define	MR0_SWFNT	143,3918
#define	MR0_SWFT	144,3942
#define	MR1_CS5	149,4009
#define	MR1_CS6	150,4032
#define	MR1_CS7	151,4055
#define	MR1_CS8	152,4078
#define	MR1_PAREVEN	153,4101
#define	MR1_PARODD	154,4127
#define	MR1_PARENB	155,4152
#define	MR1_PARFORCE	156,4177
#define	MR1_PARNONE	157,4204
#define	MR1_PARSPECIAL	158,4230
#define	MR1_ERRCHAR	159,4259
#define	MR1_ERRBLOCK	160,4285
#define	MR1_ISRUNMASKED	161,4312
#define	MR1_ISRMASKED	162,4342
#define	MR1_AUTORTS	163,4370
#define	MR2_STOP1	168,4440
#define	MR2_STOP15	169,4464
#define	MR2_STOP2	170,4489
#define	MR2_STOP916	171,4513
#define	MR2_RXFIFORDY	172,4539
#define	MR2_RXFIFOHALF	173,4567
#define	MR2_RXFIFOHIGH	174,4596
#define	MR2_RXFIFOFULL	175,4625
#define	MR2_AUTOCTS	176,4654
#define	MR2_TXRTS	177,4680
#define	MR2_MODENORM	178,4704
#define	MR2_MODEAUTOECHO	179,4731
#define	MR2_MODELOOP	180,4761
#define	MR2_MODEREMECHO	181,4788
#define	BRG_50	188,4953
#define	BRG_75	189,4975
#define	BRG_150	190,4997
#define	BRG_200	191,5020
#define	BRG_300	192,5043
#define	BRG_450	193,5066
#define	BRG_600	194,5089
#define	BRG_900	195,5112
#define	BRG_1200	196,5135
#define	BRG_1800	197,5158
#define	BRG_2400	198,5181
#define	BRG_3600	199,5204
#define	BRG_4800	200,5227
#define	BRG_7200	201,5250
#define	BRG_9600	202,5273
#define	BRG_14400	203,5296
#define	BRG_19200	204,5320
#define	BRG_28200	205,5344
#define	BRG_38400	206,5368
#define	BRG_57600	207,5392
#define	BRG_115200	208,5416
#define	BRG_230400	209,5441
#define	BRG_GIN0	210,5466
#define	BRG_GIN1	211,5489
#define	BRG_CT0	212,5512
#define	BRG_CT1	213,5535
#define	BRG_RX2TX316	214,5558
#define	BRG_RX2TX31	215,5585
#define	SC26198_MAXBAUD	217,5612
#define	CR_NULL	224,5774
#define	CR_ADDRNORMAL	225,5797
#define	CR_RXRESET	226,5825
#define	CR_TXRESET	227,5850
#define	CR_CLEARRXERR	228,5875
#define	CR_BREAKRESET	229,5903
#define	CR_TXSTARTBREAK	230,5931
#define	CR_TXSTOPBREAK	231,5961
#define	CR_RTSON	232,5990
#define	CR_RTSOFF	233,6013
#define	CR_ADDRINIT	234,6037
#define	CR_RXERRBLOCK	235,6063
#define	CR_TXSENDXON	236,6091
#define	CR_TXSENDXOFF	237,6118
#define	CR_GANGXONSET	238,6146
#define	CR_GANGXOFFSET	239,6174
#define	CR_GANGXONINIT	240,6203
#define	CR_GANGXOFFINIT	241,6232
#define	CR_HOSTXON	242,6262
#define	CR_HOSTXOFF	243,6287
#define	CR_CANCELXOFF	244,6313
#define	CR_ADDRRESET	245,6341
#define	CR_RESETALLPORTS	246,6368
#define	CR_RESETALL	247,6398
#define	CR_RXENABLE	249,6425
#define	CR_TXENABLE	250,6451
#define	SR_RXRDY	257,6594
#define	SR_RXFULL	258,6617
#define	SR_TXRDY	259,6641
#define	SR_TXEMPTY	260,6664
#define	SR_RXOVERRUN	261,6689
#define	SR_RXPARITY	262,6716
#define	SR_RXFRAMING	263,6742
#define	SR_RXBREAK	264,6769
#define	SR_RXERRS	266,6795
#define	IR_TXRDY	273,7021
#define	IR_RXRDY	274,7044
#define	IR_RXBREAK	275,7067
#define	IR_XONXOFF	276,7092
#define	IR_ADDRRECOG	277,7117
#define	IR_RXWATCHDOG	278,7144
#define	IR_IOPORT	279,7172
#define	IVR_CHANMASK	286,7333
#define	IVR_TYPEMASK	287,7360
#define	IVR_CONSTMASK	288,7387
#define	IVR_RXDATA	290,7416
#define	IVR_RXBADDATA	291,7441
#define	IVR_TXDATA	292,7469
#define	IVR_OTHER	293,7494
#define	BRGCTCR_DISABCLK0	300,7654
#define	BRGCTCR_ENABCLK0	301,7685
#define	BRGCTCR_DISABCLK1	302,7715
#define	BRGCTCR_ENABCLK1	303,7746
#define	BRGCTCR_0SCLK16	305,7777
#define	BRGCTCR_0SCLK32	306,7807
#define	BRGCTCR_0SCLK64	307,7837
#define	BRGCTCR_0SCLK128	308,7867
#define	BRGCTCR_0X1	309,7897
#define	BRGCTCR_0X12	310,7923
#define	BRGCTCR_0IO1A	311,7950
#define	BRGCTCR_0GIN0	312,7978
#define	BRGCTCR_1SCLK16	314,8007
#define	BRGCTCR_1SCLK32	315,8037
#define	BRGCTCR_1SCLK64	316,8067
#define	BRGCTCR_1SCLK128	317,8097
#define	BRGCTCR_1X1	318,8127
#define	BRGCTCR_1X12	319,8153
#define	BRGCTCR_1IO1B	320,8180
#define	BRGCTCR_1GIN1	321,8208
#define	WDTRCR_ENABALL	328,8361
#define	XISR_TXCHARMASK	335,8518
#define	XISR_TXCHARNORMAL	336,8548
#define	XISR_TXWAIT	337,8579
#define	XISR_TXXOFFPEND	338,8605
#define	XISR_TXXONPEND	339,8635
#define	XISR_TXFLOWMASK	341,8665
#define	XISR_TXNORMAL	342,8695
#define	XISR_TXSTOPPEND	343,8723
#define	XISR_TXSTARTED	344,8753
#define	XISR_TXSTOPPED	345,8782
#define	XISR_RXFLOWMASK	347,8812
#define	XISR_RXFLOWNONE	348,8842
#define	XISR_RXXONSENT	349,8872
#define	XISR_RXXOFFSENT	350,8901
#define	XISR_RXXONGOT	352,8932
#define	XISR_RXXOFFGOT	353,8960
#define	CIR_TYPEMASK	360,9109
#define	CIR_TYPEOTHER	361,9136
#define	CIR_TYPETX	362,9164
#define	CIR_TYPERXGOOD	363,9189
#define	CIR_TYPERXBAD	364,9218
#define	CIR_RXDATA	366,9247
#define	CIR_RXBADDATA	367,9272
#define	CIR_TXDATA	368,9300
#define	CIR_CHANMASK	370,9326
#define	CIR_CNTMASK	371,9353
#define	CIR_SUBTYPEMASK	373,9380
#define	CIR_SUBNONE	374,9410
#define	CIR_SUBCOS	375,9436
#define	CIR_SUBADDR	376,9461
#define	CIR_SUBXONXOFF	377,9487
#define	CIR_SUBBREAK	378,9516
#define	GICR_CHANMASK	385,9673
#define	GICR_COUNTMASK	392,9834
#define	GITR_RXMASK	399,9990
#define	GITR_RXNONE	400,10016
#define	GITR_RXBADDATA	401,10042
#define	GITR_RXGOODDATA	402,10071
#define	GITR_TXDATA	403,10101
#define	GITR_SUBTYPEMASK	405,10128
#define	GITR_SUBNONE	406,10158
#define	GITR_SUBCOS	407,10185
#define	GITR_SUBADDR	408,10211
#define	GITR_SUBXONXOFF	409,10238
#define	GITR_SUBBREAK	410,10268
#define	IPR_CTS	417,10416
#define	IPR_DTR	418,10439
#define	IPR_RTS	419,10462
#define	IPR_DCD	420,10485
#define	IPR_CTSCHANGE	421,10508
#define	IPR_DTRCHANGE	422,10536
#define	IPR_RTSCHANGE	423,10564
#define	IPR_DCDCHANGE	424,10592
#define	IPR_CHANGEMASK	426,10621
#define	IOPR_CTS	433,10781
#define	IOPR_DTR	434,10804
#define	IOPR_RTS	435,10827
#define	IOPR_DCD	436,10850
#define	IOPR_CTSCOS	437,10873
#define	IOPR_DTRCOS	438,10899
#define	IOPR_RTSCOS	439,10925
#define	IOPR_DCDCOS	440,10951
#define	IOPCR_SETCTS	447,11101
#define	IOPCR_SETDTR	448,11128
#define	IOPCR_SETRTS	449,11155
#define	IOPCR_SETDCD	450,11182
#define	IOPCR_SETSIGS	452,11210
#define	GPORS_TXC1XA	459,11425
#define	GPORS_TXC16XA	460,11452
#define	GPORS_RXC16XA	461,11480
#define	GPORS_TXC16XB	462,11508
#define	GPORS_GPOR3	463,11536
#define	GPORS_GPOR2	464,11562
#define	GPORS_GPOR1	465,11588
#define	GPORS_GPOR0	466,11614
#define	GPOR_0	473,11765
#define	GPOR_1	474,11787
#define	GPOR_2	475,11809
#define	GPOR_3	476,11831
#define	GPORC_0NONE	483,11984
#define	GPORC_0GIN0	484,12010
#define	GPORC_0GIN1	485,12036
#define	GPORC_0IO3A	486,12062
#define	GPORC_1NONE	488,12089
#define	GPORC_1GIN0	489,12115
#define	GPORC_1GIN1	490,12141
#define	GPORC_1IO3C	491,12167
#define	GPORC_2NONE	493,12194
#define	GPORC_2GIN0	494,12220
#define	GPORC_2GIN1	495,12246
#define	GPORC_2IO3E	496,12272
#define	GPORC_3NONE	498,12299
#define	GPORC_3GIN0	499,12325
#define	GPORC_3GIN1	500,12351
#define	GPORC_3IO3G	501,12377
#define	GPOD_0MASK	508,12533
#define	GPOD_0SET1	509,12558
#define	GPOD_0SET0	510,12583
#define	GPOD_0SETR0	511,12608
#define	GPOD_0SETIO3B	512,12634
#define	GPOD_1MASK	514,12663
#define	GPOD_1SET1	515,12688
#define	GPOD_1SET0	516,12713
#define	GPOD_1SETR0	517,12738
#define	GPOD_1SETIO3D	518,12764
#define	GPOD_2MASK	520,12793
#define	GPOD_2SET1	521,12818
#define	GPOD_2SET0	522,12843
#define	GPOD_2SETR0	523,12868
#define	GPOD_2SETIO3F	524,12894
#define	GPOD_3MASK	526,12923
#define	GPOD_3SET1	527,12948
#define	GPOD_3SET0	528,12973
#define	GPOD_3SETR0	529,12998
#define	GPOD_3SETIO3H	530,13024

include/linux/nfsd/auth.h,391
#define LINUX_NFSD_AUTH_H11,207
#define nfsd_luid(nfsd_luid15,253
#define nfsd_lgid(nfsd_lgid16,293
#define nfsd_ruid(nfsd_ruid17,333
#define nfsd_rgid(nfsd_rgid18,373
#define UGID_BITS	30,630
#define UGID_SHIFT	31,669
#define UGID_MASK	32,691
#define UGID_NRENTRIES	33,734
#define UGID_NONE	34,796
typedef struct svc_uidmap svc_uidmap36,837
} svc_uidmap;svc_uidmap41,1009

include/linux/nfsd/cache.h,339
#define NFSCACHE_H11,215
struct svc_cacherep svc_cacherep20,388
#define c_replbuf	38,840
#define c_replstat	39,872
	RC_UNUSED,43,938
	RC_INPROG,44,950
	RC_DONE45,962
	RC_DROPIT,50,1002
	RC_REPLY,51,1014
	RC_DOIT,52,1025
	RC_INTR53,1035
	RC_NOCACHE,63,1254
	RC_REPLSTAT,64,1267
	RC_REPLBUFF,65,1281
#define RC_DELAY	71,1378

include/linux/nfsd/nfsfh.h,754
#define NFSD_FH_H15,424
struct nfs_fhbase nfs_fhbase29,744
#define NFS_FH_PADDING	38,966
struct knfs_fh knfs_fh39,1031
#define fh_dcookie	44,1115
#define fh_ino	45,1153
#define fh_dirino	46,1185
#define fh_dev	47,1222
#define fh_xdev	48,1254
#define fh_xino	49,1288
extern inline __u32 kdev_t_to_u32(56,1397
extern inline kdev_t u32_to_kdev_t(61,1469
extern inline __u32 ino_t_to_u32(66,1544
extern inline ino_t u32_to_ino_t(71,1614
typedef struct svc_fh svc_fh80,1835
} svc_fh;svc_fh90,2328
#define SVCFH_DENTRY(SVCFH_DENTRY95,2375
#define SVCFH_INO(SVCFH_INO96,2417
#define SVCFH_DEV(SVCFH_DEV97,2463
fh_copy(114,2913
fh_init(127,3241
fh_lock(137,3372
fh_unlock(167,4016
#define fh_put(fh_put187,4388
__fh_put(190,4462

include/linux/nfsd/const.h,1374
#define __NFSCONST_H__10,160
#define NFSSVC_MAXVERS	22,387
#define NFSSVC_MAXBLKSIZE	27,478
#define NFS2_MAXPATHLEN	29,510
#define NFS2_MAXNAMLEN	30,540
#define NFS2_FHSIZE	31,568
#define NFS2_COOKIESIZE	32,600
#define NFS3_MAXPATHLEN	34,628
#define NFS3_MAXNAMLEN	35,662
#define NFS3_FHSIZE	36,695
#define NFS3_COOKIEVERFSIZE	37,727
#define NFS3_CREATEVERFSIZE	38,757
#define NFS3_WRITEVERFSIZE	39,787
# define NFS_SUPER_MAGIC	44,860
#define NFS_OK	53,1177
#define NFSERR_PERM	54,1209
#define NFSERR_NOENT	55,1245
#define NFSERR_IO	56,1282
#define NFSERR_NXIO	57,1316
#define NFSERR_ACCES	58,1352
#define NFSERR_EXIST	59,1390
#define NFSERR_XDEV	60,1428
#define NFSERR_NODEV	61,1465
#define NFSERR_NOTDIR	62,1503
#define NFSERR_ISDIR	63,1542
#define NFSERR_INVAL	64,1580
#define NFSERR_FBIG	65,1618
#define NFSERR_NOSPC	66,1655
#define NFSERR_ROFS	67,1693
#define NFSERR_MLINK	68,1730
#define NFSERR_NAMETOOLONG	69,1768
#define NFSERR_NOTEMPTY	70,1811
#define NFSERR_DQUOT	71,1852
#define NFSERR_STALE	72,1890
#define NFSERR_REMOTE	73,1928
#define NFSERR_WFLUSH	74,1967
#define NFSERR_BADHANDLE	75,2006
#define NFSERR_NOT_SYNC	76,2050
#define NFSERR_BAD_COOKIE	77,2094
#define NFSERR_NOTSUPP	78,2139
#define NFSERR_TOOSMALL	79,2182
#define NFSERR_SERVERFAULT	80,2226
#define NFSERR_BADTYPE	81,2272
#define NFSERR_JUKEBOX	82,2315

include/linux/nfsd/debug.h,486
#define LINUX_NFSD_DEBUG_H10,166
# define NFSD_DEBUG	19,304
#define NFSDDBG_SOCK	25,363
#define NFSDDBG_FH	26,392
#define NFSDDBG_EXPORT	27,419
#define NFSDDBG_SVC	28,450
#define NFSDDBG_PROC	29,478
#define NFSDDBG_FILEOP	30,507
#define NFSDDBG_AUTH	31,538
#define NFSDDBG_REPCACHE	32,567
#define NFSDDBG_XDR	33,599
#define NFSDDBG_LOCKD	34,627
#define NFSDDBG_ALL	35,657
#define NFSDDBG_NOCHANGE	36,685
#  define ifdebug(ifdebug42,772
#  define ifdebug(ifdebug44,837

include/linux/nfsd/export.h,849
#define NFSD_EXPORT_H11,228
#define NFSCLNT_IDMAX	21,397
#define NFSCLNT_ADDRMAX	22,425
#define NFSCLNT_KEYMAX	23,453
#define NFSEXP_READONLY	28,505
#define NFSEXP_INSECURE_PORT	29,537
#define NFSEXP_ROOTSQUASH	30,573
#define NFSEXP_ALLSQUASH	31,606
#define NFSEXP_ASYNC	32,638
#define NFSEXP_GATHERED_WRITES	33,667
#define NFSEXP_UIDMAP	34,705
#define NFSEXP_KERBEROS	35,735
#define NFSEXP_SUNSECURE	36,788
#define NFSEXP_CROSSMNT	37,820
#define NFSEXP_ALLFLAGS	38,873
#define NFSCLNT_EXPMAX	44,990
struct svc_client svc_client46,1018
struct svc_export svc_export56,1260
#define EX_SECURE(EX_SECURE69,1538
#define EX_ISSYNC(EX_ISSYNC70,1606
#define EX_RDONLY(EX_RDONLY71,1666
#define EX_CROSSMNT(EX_CROSSMNT72,1726
#define EX_SUNSECURE(EX_SUNSECURE73,1787
#define EX_WGATHER(EX_WGATHER74,1850
exp_checkaddr(95,2447

include/linux/nfsd/nfsd.h,1277
#define LINUX_NFSD_NFSD_H11,209
#define NFSD_VERSION	27,510
#define MAY_NOP	34,669
#define MAY_SATTR	35,689
#define MAY_TRUNC	36,710
#define MAY_CREATE	40,870
#define MAY_REMOVE	41,911
struct readdir_cd readdir_cd46,1003
typedef int		(*encode_dent_fn)encode_dent_fn56,1241
typedef int (*nfsd_dirop_t)nfsd_dirop_t58,1333
extern struct svc_procedure	nfsd_procedures2[63,1442
extern struct svc_program	nfsd_program;64,1490
#define makedev(makedev125,3519
extern u32	nfs_ok,132,3714
		nfserr_perm,133,3733
		nfserr_noent,134,3748
		nfserr_io,135,3764
		nfserr_nxio,136,3777
		nfserr_acces,137,3792
		nfserr_exist,138,3808
		nfserr_xdev,139,3824
		nfserr_nodev,140,3839
		nfserr_notdir,141,3855
		nfserr_isdir,142,3872
		nfserr_inval,143,3888
		nfserr_fbig,144,3904
		nfserr_nospc,145,3919
		nfserr_rofs,146,3935
		nfserr_mlink,147,3950
		nfserr_nametoolong,148,3966
		nfserr_dquot,149,3988
		nfserr_stale,150,4004
		nfserr_remote,151,4020
		nfserr_badhandle,152,4037
		nfserr_notsync,153,4057
		nfserr_badcookie,154,4075
		nfserr_notsupp,155,4095
		nfserr_toosmall,156,4113
		nfserr_serverfault,157,4132
		nfserr_badtype,158,4154
		nfserr_jukebox;159,4172
extern struct timeval	nfssvc_boot;164,4224
extern int		nfsd_nservers;169,4298

include/linux/nfsd/stats.h,160
#define LINUX_NFSD_STATS_H10,160
struct nfsd_stats nfsd_stats12,188
extern struct nfsd_stats	nfsdstats;25,604
extern struct svc_stat		nfsd_svcstats;26,640

include/linux/nfsd/syscall.h,890
#define NFSD_SYSCALL_H10,191
#define NFSCTL_VERSION	24,487
#define NFSCTL_SVC	29,576
#define NFSCTL_ADDCLIENT	30,630
#define NFSCTL_DELCLIENT	31,682
#define NFSCTL_EXPORT	32,737
#define NFSCTL_UNEXPORT	33,790
#define NFSCTL_UGIDUPDATE	34,847
#define NFSCTL_GETFH	35,912
#define NFSCTL_GETFD	36,976
struct nfsctl_svc nfsctl_svc39,1052
struct nfsctl_client nfsctl_client45,1150
struct nfsctl_export nfsctl_export55,1381
struct nfsctl_uidmap nfsctl_uidmap66,1623
struct nfsctl_fhparm nfsctl_fhparm77,1834
struct nfsctl_fdparm nfsctl_fdparm85,1969
struct nfsctl_arg nfsctl_arg94,2115
#define ca_svc	105,2398
#define ca_client	106,2422
#define ca_export	107,2451
#define ca_umap	108,2480
#define ca_getfh	109,2506
#define ca_getfd	110,2533
#define ca_authd	111,2560
#define ca_debug	112,2587
union nfsctl_res nfsctl_res115,2618
#define sys_nfsservctl	127,2873

include/linux/nfsd/xdr.h,834
#define LINUX_NFSD_H8,123
struct nfsd_fhandle nfsd_fhandle13,191
struct nfsd_sattrargs nfsd_sattrargs17,237
struct nfsd_diropargs nfsd_diropargs22,307
struct nfsd_readargs nfsd_readargs28,383
struct nfsd_writeargs nfsd_writeargs35,483
struct nfsd_createargs nfsd_createargs44,613
struct nfsd_renameargs nfsd_renameargs51,712
struct nfsd_linkargs nfsd_linkargs60,843
struct nfsd_symlinkargs nfsd_symlinkargs67,942
struct nfsd_readdirargs nfsd_readdirargs76,1075
struct nfsd_attrstat nfsd_attrstat82,1158
struct nfsd_diropres nfsd_diropres86,1205
struct nfsd_readlinkres nfsd_readlinkres90,1253
struct nfsd_readres nfsd_readres94,1295
struct nfsd_readdirres nfsd_readdirres99,1364
struct nfsd_statfsres nfsd_statfsres103,1407
union nfsd_xdrstore nfsd_xdrstore110,1520
#define NFSSVC_XDRSIZE	122,1824

include/linux/nfsd/xdr3.h,1425
#define LINUX_NFSD_XDR3_H10,161
struct nfsd3_sattrargs nfsd3_sattrargs14,217
struct nfsd3_diropargs nfsd3_diropargs20,309
struct nfsd3_accessargs nfsd3_accessargs26,386
struct nfsd3_readargs nfsd3_readargs31,459
struct nfsd3_writeargs nfsd3_writeargs37,540
struct nfsd3_createargs nfsd3_createargs46,659
struct nfsd3_mknodargs nfsd3_mknodargs55,795
struct nfsd3_renameargs nfsd3_renameargs64,933
struct nfsd3_linkargs nfsd3_linkargs73,1065
struct nfsd3_symlinkargs nfsd3_symlinkargs80,1165
struct nfsd3_readdirargs nfsd3_readdirargs89,1299
struct nfsd3_commitargs nfsd3_commitargs97,1419
struct nfsd3_attrstat nfsd3_attrstat103,1502
struct nfsd3_lookupres nfsd3_lookupres108,1567
struct nfsd3_accessres nfsd3_accessres114,1657
struct nfsd3_readlinkres nfsd3_readlinkres120,1740
struct nfsd3_readres nfsd3_readres126,1822
struct nfsd3_writeres nfsd3_writeres133,1921
struct nfsd3_createres nfsd3_createres140,2027
struct nfsd3_renameres nfsd3_renameres146,2116
struct nfsd3_linkres nfsd3_linkres152,2204
struct nfsd3_readdirres nfsd3_readdirres158,2289
struct nfsd3_statfsres nfsd3_statfsres164,2377
struct nfsd3_fsinfores nfsd3_fsinfores170,2465
struct nfsd3_pathconfres nfsd3_pathconfres183,2689
struct nfsd3_commitres nfsd3_commitres191,2836
struct nfsd3_fhandle2 nfsd3_fhandle2197,2931
union nfsd3_xdrstore nfsd3_xdrstore206,3079
#define NFS3_SVC_XDRSIZE	231,3903

include/linux/ipsec.h,508
#define _LINUX_IPSEC_H14,376
#define IPSEC_LEVEL_NONE	26,635
#define IPSEC_LEVEL_DEFAULT	27,696
#define IPSEC_LEVEL_USE	30,851
#define IPSEC_LEVEL_REQUIRE	31,920
#define IPSEC_LEVEL_UNIQUE	32,980
#define RCV_SEC	38,1110
#define RCV_AUTH	39,1158
#define RCV_CRYPT	40,1205
#define RCV_TUNNEL	41,1249
#define SND_SEC	42,1293
#define SND_AUTH	43,1349
#define SND_CRYPT	44,1395
#define SND_TUNNEL	45,1419
extern __inline__ int ipsec_sk_policy(52,1528
extern __inline__ int ipsec_sk_policy(62,1781

include/linux/sunrpc/auth.h,495
#define _LINUX_SUNRPC_AUTH_H10,181
#define UNX_MAXNODENAME	18,323
struct rpc_cred rpc_cred23,385
#define RPCAUTH_CRED_LOCKED	33,628
#define RPCAUTH_CRED_UPTODATE	34,663
#define RPCAUTH_CRED_DEAD	35,700
#define RPC_CREDCACHE_NR	40,773
struct rpc_auth rpc_auth41,800
#define RPC_AUTH_PROC_CREDS	52,1211
struct rpc_authops rpc_authops59,1356
extern struct rpc_authops	authunix_ops;76,1858
extern struct rpc_authops	authnull_ops;77,1898
extern struct rpc_authops	authdes_ops;79,1966

include/linux/sunrpc/clnt.h,771
#define _LINUX_SUNRPC_CLNT_H10,199
struct rpc_portmap rpc_portmap22,464
struct rpc_clnt rpc_clnt32,600
#define cl_timeout	59,1591
#define cl_prog	60,1628
#define cl_vers	61,1662
#define cl_port	62,1696
#define cl_prot	63,1730
#define RPC_MAXVERSION	68,1800
struct rpc_program rpc_program69,1826
struct rpc_version rpc_version77,2070
struct rpc_procinfo rpc_procinfo86,2263
#define rpcproc_bufsiz(rpcproc_bufsiz94,2519
#define rpcproc_encode(rpcproc_encode95,2591
#define rpcproc_decode(rpcproc_decode96,2663
#define rpcproc_name(rpcproc_name97,2735
#define rpcproc_count(rpcproc_count98,2807
#define RPC_CONGESTED(RPC_CONGESTED100,2878
#define RPC_PEERADDR(RPC_PEERADDR101,2943
#define rpc_call(rpc_call127,3983
rpc_set_timeout(131,4114

include/linux/sunrpc/stats.h,255
#define _LINUX_SUNRPC_STATS_H10,179
struct rpc_stat rpc_stat15,264
struct svc_stat svc_stat29,477
extern inline void svc_proc_unregister(62,1256
extern inline struct proc_dir_entry*svc_proc_register(63,1313
extern inline int svc_proc_read(68,1406

include/linux/sunrpc/debug.h,944
#define _LINUX_SUNRPC_DEBUG_H_10,176
#define  RPC_DEBUG18,302
#define RPCDBG_XPRT	24,380
#define RPCDBG_CALL	25,408
#define RPCDBG_DEBUG	26,436
#define RPCDBG_NFS	27,465
#define RPCDBG_AUTH	28,492
#define RPCDBG_PMAP	29,520
#define RPCDBG_SCHED	30,548
#define RPCDBG_SVCSOCK	31,577
#define RPCDBG_SVCDSP	32,608
#define RPCDBG_MISC	33,638
#define RPCDBG_ALL	34,666
extern unsigned int		rpc_debug;42,761
extern unsigned int		nfs_debug;43,793
extern unsigned int		nfsd_debug;44,825
extern unsigned int		nlm_debug;45,858
#define dprintk(dprintk48,898
# define ifdebug(ifdebug52,987
# define dfprintk(dfprintk53,1040
# define RPC_IFDEBUG(RPC_IFDEBUG54,1118
# define dfprintk(dfprintk56,1151
# define RPC_IFDEBUG(RPC_IFDEBUG57,1198
# define pprintk(pprintk61,1249
# define pprintk(pprintk63,1297
#define CTL_SUNRPC	82,1787
	CTL_RPCDEBUG 85,1856
	CTL_NFSDEBUG,86,1875
	CTL_NFSDDEBUG,87,1890
	CTL_NLMDEBUG,88,1906

include/linux/sunrpc/msg_prot.h,1014
#define _LINUX_SUNRPC_MSGPROT_H_8,137
#define RPC_VERSION 12,253
enum rpc_auth_flavor rpc_auth_flavor14,276
	RPC_AUTH_NULL 15,299
	RPC_AUTH_UNIX 16,320
	RPC_AUTH_SHORT 17,341
	RPC_AUTH_DES 18,362
	RPC_AUTH_KRB 19,383
enum rpc_msg_type rpc_msg_type22,408
	RPC_CALL 23,428
	RPC_REPLY 24,443
enum rpc_reply_stat rpc_reply_stat27,462
	RPC_MSG_ACCEPTED 28,484
	RPC_MSG_DENIED 29,507
enum rpc_accept_stat rpc_accept_stat32,531
	RPC_SUCCESS 33,554
	RPC_PROG_UNAVAIL 34,572
	RPC_PROG_MISMATCH 35,595
	RPC_PROC_UNAVAIL 36,619
	RPC_GARBAGE_ARGS 37,642
	RPC_SYSTEM_ERR 38,665
enum rpc_reject_stat rpc_reject_stat41,689
	RPC_MISMATCH 42,712
	RPC_AUTH_ERROR 43,731
enum rpc_auth_stat rpc_auth_stat46,755
	RPC_AUTH_OK 47,776
	RPC_AUTH_BADCRED 48,794
	RPC_AUTH_REJECTEDCRED 49,817
	RPC_AUTH_BADVERF 50,845
	RPC_AUTH_REJECTEDVERF 51,868
	RPC_AUTH_TOOWEAK 52,896
#define RPC_PMAP_PROGRAM	55,922
#define RPC_PMAP_VERSION	56,954
#define RPC_PMAP_PORT	57,981
#define RPC_MAXNETNAMELEN	59,1009

include/linux/sunrpc/sched.h,1166
#define _LINUX_SUNRPC_SCHED_H_10,182
struct rpc_task rpc_task25,492
#define tk_auth	73,2044
#define tk_xprt	74,2081
typedef void			(*rpc_action)rpc_action76,2119
#define RPC_TASK_RUNNING	81,2194
#define RPC_TASK_ASYNC	82,2244
#define RPC_TASK_CALLBACK	83,2299
#define RPC_TASK_SWAPPER	84,2355
#define RPC_TASK_SETUID	85,2413
#define RPC_TASK_CHILD	86,2470
#define RPC_CALL_REALUID	87,2531
#define RPC_CALL_MAJORSEEN	88,2589
#define RPC_TASK_ROOTCREDS	89,2649
#define RPC_TASK_DYNAMIC	90,2707
#define RPC_TASK_KILLED	91,2766
#define RPC_TASK_NFSWRITE	92,2821
#define RPC_IS_RUNNING(RPC_IS_RUNNING94,2879
#define RPC_IS_ASYNC(RPC_IS_ASYNC95,2940
#define RPC_IS_SETUID(RPC_IS_SETUID96,2998
#define RPC_IS_CHILD(RPC_IS_CHILD97,3057
#define RPC_IS_SWAPPER(RPC_IS_SWAPPER98,3115
#define RPC_DO_CALLBACK(RPC_DO_CALLBACK99,3176
#define RPC_DO_ROOTOVERRIDE(RPC_DO_ROOTOVERRIDE100,3239
#define RPC_ASSASSINATED(RPC_ASSASSINATED101,3307
struct rpc_wait_queue rpc_wait_queue106,3408
# define RPC_INIT_WAITQ(RPC_INIT_WAITQ114,3519
# define RPC_INIT_WAITQ(RPC_INIT_WAITQ116,3590
rpc_malloc(156,5129
rpc_exit(162,5254
rpc_qname(170,5397

include/linux/sunrpc/svc.h,506
#define SUNRPC_SVC_H11,159
struct svc_serv svc_serv27,609
#define RPCSVC_MAXPAYLOAD	46,1263
#define RPCSVC_MAXIOV	68,2250
struct svc_buf svc_buf69,2321
#define svc_getlong(svc_getlong80,2631
#define svc_putlong(svc_putlong81,2705
struct svc_rqst svc_rqst88,2918
struct svc_program svc_program125,4137
struct svc_version svc_version138,4513
typedef int	(*svc_procfunc)svc_procfunc153,4924
struct svc_procedure svc_procedure154,4996
typedef void		(*svc_thread_fn)svc_thread_fn168,5473

include/linux/sunrpc/svcauth.h,140
#define _LINUX_SUNRPC_SVCAUTH_H_10,187
struct svc_cred svc_cred16,276
#define NGRPS	33,689
struct authunix_parms authunix_parms34,707

include/linux/sunrpc/svcsock.h,65
#define SUNRPC_SVCSOCK_H10,164
struct svc_sock svc_sock18,294

include/linux/sunrpc/types.h,341
#define _LINUX_SUNRPC_TYPES_H_10,178
struct rpc_listitem	rpc_listitem19,368
__rpc_append_list(25,475
__rpc_insert_list(41,787
__rpc_remove_list(48,926
#define rpc_insert_list(rpc_insert_list63,1188
#define rpc_append_list(rpc_append_list65,1299
#define rpc_remove_list(rpc_remove_list67,1410
#define signalled(signalled73,1543

include/linux/sunrpc/xdr.h,710
#define _SUNRPC_XDR_H_8,123
#define XDR_QUADLEN(XDR_QUADLEN17,218
#define XDR_MAX_NETOBJ	23,360
struct xdr_netobj xdr_netobj24,389
typedef int	(*kxdrproc_t)kxdrproc_t34,639
extern u32	xdr_zero,40,840
extern u32	xdr_zero, xdr_one,40,840
extern u32	xdr_zero, xdr_one, xdr_two;40,840
extern u32	rpc_success,42,880
		rpc_prog_unavail,43,904
		rpc_prog_mismatch,44,924
		rpc_proc_unavail,45,945
		rpc_garbage_args,46,965
		rpc_system_err;47,985
extern u32	rpc_auth_ok,49,1004
		rpc_autherr_badcred,50,1028
		rpc_autherr_rejectedcred,51,1051
		rpc_autherr_badverf,52,1079
		rpc_autherr_rejectedverf,53,1102
		rpc_autherr_tooweak,54,1130
		rpc_autherr_dropit;55,1153
xdr_adjust_iovec(72,1630

include/linux/sunrpc/xprt.h,752
#define _LINUX_SUNRPC_XPRT_H10,196
#define MAX_IOVEC	20,372
#define RPC_MAXCONG	41,1256
#define RPC_MAXREQS	42,1280
#define RPC_CWNDSCALE	43,1319
#define RPC_MAXCWND	44,1346
#define RPC_INITCWND	45,1397
#define RPCXPRT_CONGESTED(RPCXPRT_CONGESTED46,1433
#define RPC_MAX_UDP_TIMEOUT	50,1561
#define RPC_MAX_TCP_TIMEOUT	51,1596
#define RPC_CALLHDRSIZE	56,1736
#define RPC_REPHDRSIZE	57,1763
struct rpc_timeout rpc_timeout62,1834
struct rpc_iov rpc_iov75,2174
struct rpc_rqst rpc_rqst84,2322
#define rq_svec	117,3078
#define rq_snr	118,3114
#define rq_slen	119,3148
#define rq_rvec	120,3184
#define rq_rnr	121,3220
#define rq_rlen	122,3254
struct rpc_xprt rpc_xprt124,3291
#define tcp_reclen	182,5205
#define tcp_xid	183,5244

include/linux/console_struct.h,454
#define NPAR 12,316
struct vc_data vc_data14,333
struct vc vc87,3689
extern struct vc vc_cons 95,3891
#define CUR_DEF	97,3936
#define CUR_NONE	98,3955
#define CUR_UNDERLINE	99,3974
#define CUR_LOWER_THIRD	100,3998
#define CUR_LOWER_HALF	101,4024
#define CUR_TWO_THIRDS	102,4049
#define CUR_BLOCK	103,4074
#define CUR_HWMASK	104,4094
#define CUR_SWMASK	105,4118
#define CUR_DEFAULT 107,4145
#define CON_IS_VISIBLE(CON_IS_VISIBLE109,4180

include/linux/amifd.h,224
#define _AMIFD_H2,17
#define FD_MAX_UNITS 8,105
#define FLOPPY_MAX_SECTORS	9,159
struct fd_data_type fd_data_type13,248
struct fd_drive_type fd_drive_type29,579
struct amiga_floppy_struct amiga_floppy_struct44,1315

include/linux/kernelcapi.h,1197
#define __KERNEL_CAPI_H__21,446
#define CAPI_MAXAPPL	23,473
#define CAPI_MAXCONTR	26,549
#define CAPI_MAXDATAWINDOW	29,623
struct capi_interface capi_interface33,672
#define	KCI_CONTRUP	55,1507
#define	KCI_CONTRDOWN	56,1529
struct capi_interface_user capi_interface_user58,1554
#define CAPI_NOERROR 68,1836
#define CAPI_TOOMANYAPPLS	70,1886
#define CAPI_LOGBLKSIZETOSMALL	71,1922
#define CAPI_BUFFEXECEEDS64K 72,1970
#define CAPI_MSGBUFSIZETOOSMALL	73,2017
#define CAPI_ANZLOGCONNNOTSUPPORTED	74,2066
#define CAPI_REGRESERVED	75,2111
#define CAPI_REGBUSY 76,2146
#define CAPI_REGOSRESOURCEERR	77,2186
#define CAPI_REGNOTINSTALLED 78,2233
#define CAPI_REGCTRLERNOTSUPPORTEXTEQUIP 79,2280
#define CAPI_REGCTRLERONLYSUPPORTEXTEQUIP 80,2329
#define CAPI_ILLAPPNR	82,2379
#define CAPI_ILLCMDORSUBCMDORMSGTOSMALL 83,2419
#define CAPI_SENDQUEUEFULL	84,2468
#define CAPI_RECEIVEQUEUEEMPTY	85,2505
#define CAPI_RECEIVEOVERFLOW 86,2553
#define CAPI_UNKNOWNNOTPAR	87,2600
#define CAPI_MSGBUSY 88,2637
#define CAPI_MSGOSRESOURCEERR	89,2677
#define CAPI_MSGNOTINSTALLED 90,2724
#define CAPI_MSGCTRLERNOTSUPPORTEXTEQUIP 91,2771
#define CAPI_MSGCTRLERONLYSUPPORTEXTEQUIP 92,2820

include/linux/dlists.h,340
#define DLISTS_H2,17
#define DEF_GENERIC_INSERT(DEF_GENERIC_INSERT23,675
#define DEF_INSERT(DEF_INSERT40,1111
#define DEF_APPEND(DEF_APPEND44,1261
#define DEF_INSERT_MIDDLE(DEF_INSERT_MIDDLE49,1520
#define DEF_REMOVE(DEF_REMOVE59,1810
#define DEF_LIN_INSERT(DEF_LIN_INSERT84,2610
#define DEF_LIN_REMOVE(DEF_LIN_REMOVE95,2901

include/linux/nubus.h,707
struct nubus_slotnubus_slot2,1
#define NUBUS_DEVICE_PRESENT	5,38
#define NUBUS_DEVICE_ACTIVE	6,69
#define NUBUS_DEVICE_IRQ	7,99
struct nbnamevec nbnamevec23,391
struct nubus_dirnubus_dir29,437
struct nubus_direntnubus_dirent37,518
struct nubus_typenubus_type45,652
#define NUBUS_CAT_BOARD	53,732
#define NUBUS_CAT_DISPLAY	54,765
#define NUBUS_CAT_NETWORK	55,799
#define NUBUS_CAT_COMMUNICATIONS	56,833
#define NUBUS_CAT_FONT	57,873
#define NUBUS_CAT_CPU	58,905
#define RES_ID_TYPE	60,937
#define RES_ID_NAME	61,965
#define RES_ID_BOARD_DIR	62,993
#define RES_ID_FLAGS	63,1025
struct nubus_device_specifiernubus_device_specifier65,1055
extern __inline void *nubus_slot_addr(86,1922

include/linux/digiFep1.h,1084
#define CSTART 2,1
#define CMAX 3,29
#define ISTART 4,57
#define IMAX 5,85
#define CIN 6,113
#define GLOBAL 7,141
#define EIN 8,169
#define FEPSTAT 9,197
#define CHANSTRUCT 10,225
#define RXTXBUF 11,254
struct global_data global_data14,285
struct board_chan board_chan27,498
#define SRXLWATER 101,1852
#define SRXHWATER 102,1880
#define STOUT 103,1908
#define PAUSETX 104,1936
#define RESUMETX 105,1964
#define SAUXONOFFC 106,1992
#define SENDBREAK 107,2020
#define SETMODEM 108,2048
#define SETIFLAGS 109,2076
#define SONOFFC 110,2104
#define STXLWATER 111,2132
#define PAUSERX 112,2160
#define RESUMERX 113,2188
#define SETBUFFER 114,2216
#define SETCOOKED 115,2244
#define SETHFLOW 116,2272
#define SETCTRLFLAGS 117,2300
#define SETVNEXT 118,2328
#define BREAK_IND 122,2359
#define LOWTX_IND 123,2389
#define EMPTYTX_IND 124,2419
#define DATA_IND 125,2449
#define MODEMCHG_IND 126,2479
#define FEP_HUPCL 128,2510
#define RTS 130,2543
#define CD 131,2562
#define DSR 132,2581
#define CTS 133,2600
#define RI 134,2619
#define DTR 135,2638

include/linux/pg.h,191
#define PG_MAGIC	37,1664
#define PG_RESET	38,1685
#define PG_COMMAND	39,1706
#define PG_MAX_DATA	41,1730
struct pg_write_hdr pg_write_hdr43,1757
struct pg_read_hdr pg_read_hdr53,2014

include/linux/digiPCI.h,459
#define	PCIMAX 4,212
#define	PCI_VENDOR_DIGI	7,269
#define	PCI_DEVICE_EPC	8,301
#define	PCI_DEVICE_RIGHTSWITCH 9,332
#define	PCI_DEVICE_XEM	10,389
#define	PCI_DEVICE_XR	11,420
#define	PCI_DEVICE_CX	12,450
#define	PCI_DEVICE_XRJ	13,480
#define	PCI_DEVICE_EPCJ	14,539
#define PCI_BIOS_SIZE	25,899
#define PCI_RAM_SIZE	28,978
#define PCI_MEM_SIZE	31,1040
#define PCI_IO_OFFSET 34,1111
#define MEMOUTB(MEMOUTB36,1148
#define MEMINB(MEMINB37,1266

include/linux/reboot.h,478
#define _LINUX_REBOOT_H2,24
#define	LINUX_REBOOT_MAGIC1	8,112
#define	LINUX_REBOOT_MAGIC2	9,151
#define	LINUX_REBOOT_MAGIC2A	10,189
#define	LINUX_REBOOT_MAGIC2B	11,227
#define	LINUX_REBOOT_CMD_RESTART	25,716
#define	LINUX_REBOOT_CMD_HALT	26,760
#define	LINUX_REBOOT_CMD_CAD_ON	27,802
#define	LINUX_REBOOT_CMD_CAD_OFF	28,846
#define	LINUX_REBOOT_CMD_POWER_OFF	29,890
#define	LINUX_REBOOT_CMD_RESTART2	30,936
extern struct notifier_block *reboot_notifier_list;37,1031

include/linux/epcaconfig.h,81
#define NUMCARDS 1,0
#define NBDEVS 2,19
struct board_info static_boards[4,37

include/linux/kbd_diacr.h,107
#define _DIACR_H2,17
extern struct kbdiacr accent_table[5,57
extern unsigned int accent_table_size;6,95

include/linux/kbd_kern.h,1706
#define _KBD_KERN_H2,20
extern int shift_state;7,99
extern char *func_table[9,124
extern char func_buf[10,162
extern char *funcbufptr;11,186
extern int funcbufsize,12,211
extern int funcbufsize, funcbufleft;12,211
struct kbd_struct kbd_struct23,566
#define VC_SHIFTLOCK	28,728
#define VC_ALTGRLOCK	29,780
#define VC_CTRLLOCK	30,832
#define VC_ALTLOCK	31,885
#define VC_SHIFTLLOCK	32,933
#define VC_SHIFTRLOCK	33,988
#define VC_CTRLLLOCK	34,1043
#define VC_CTRLRLOCK	35,1096
#define LED_SHOW_FLAGS 39,1264
#define LED_SHOW_IOCTL 40,1320
#define LED_SHOW_MEM 41,1386
#define VC_SCROLLOCK	45,1549
#define VC_NUMLOCK	46,1595
#define VC_CAPSLOCK	47,1640
#define VC_XLATE	50,1731
#define VC_MEDIUMRAW	51,1788
#define VC_RAW	52,1843
#define VC_UNICODE	53,1887
#define VC_APPLIC	56,1956
#define VC_CKMODE	57,2003
#define VC_REPEAT	58,2045
#define VC_CRLF	59,2087
#define VC_META	60,2153
extern struct kbd_struct kbd_table[63,2217
extern int do_poke_blanked_console;70,2392
extern inline void show_console(72,2429
extern inline void set_console(78,2524
extern inline void set_leds(84,2610
extern inline int vc_kbd_mode(89,2672
extern inline int vc_kbd_led(94,2782
extern inline void set_vc_kbd_mode(99,2894
extern inline void set_vc_kbd_led(104,2999
extern inline void clr_vc_kbd_mode(109,3106
extern inline void clr_vc_kbd_led(114,3214
extern inline void chg_vc_kbd_lock(119,3324
extern inline void chg_vc_kbd_slock(124,3429
extern inline void chg_vc_kbd_mode(129,3536
extern inline void chg_vc_kbd_led(134,3641
#define U(U139,3748
extern unsigned int keymap_count;152,4013
extern task_queue con_task_queue;156,4065
extern inline void con_schedule_flip(158,4100

include/linux/kbd_ll.h,65
#define _KBD_LL_H6,95
extern struct pt_regs *kbd_pt_regs;8,114

include/linux/i2c.h,737
#define I2C_H2,14
#define I2C_BUS_MAX 25,814
#define I2C_DRIVER_MAX 26,873
#define I2C_DEVICE_MAX 27,932
#define I2C_DRIVERID_MSP3400 33,1057
#define I2C_DRIVERID_TUNER 34,1092
#define I2C_DRIVERID_VIDEOTEXT	35,1127
#define I2C_BUSID_BT848	37,1162
struct i2c_driver i2c_driver56,1722
#  define LOCK_FLAGS 92,2887
#  define LOCK_I2C_BUS(LOCK_I2C_BUS93,2929
#  define UNLOCK_I2C_BUS(UNLOCK_I2C_BUS94,3003
#  define LOCK_FLAGS96,3089
#  define LOCK_I2C_BUS(LOCK_I2C_BUS97,3110
#  define UNLOCK_I2C_BUS(UNLOCK_I2C_BUS98,3170
# define LOCK_FLAGS 101,3246
# define LOCK_I2C_BUS(LOCK_I2C_BUS102,3287
# define UNLOCK_I2C_BUS(UNLOCK_I2C_BUS103,3347
struct i2c_bus i2c_bus106,3415
struct i2c_device i2c_device139,4282

include/linux/list.h,436
#define _LINUX_LIST_H2,22
struct list_head list_head16,404
#define LIST_HEAD(LIST_HEAD20,459
#define INIT_LIST_HEAD(INIT_LIST_HEAD23,528
static __inline__ void __list_add(33,788
static __inline__ void list_add(46,1035
static __inline__ void __list_del(58,1339
static __inline__ void list_del(65,1474
static __inline__ int list_empty(70,1575
static __inline__ void list_splice(78,1704
#define list_entry(list_entry94,2017

include/linux/selection.h,357
#define _LINUX_SELECTION_H_8,130
extern int sel_cons;12,189
#define video_num_columns	21,546
#define video_num_lines	22,603
#define video_size_row	23,659
#define can_do_color	24,718
extern int console_blanked;26,780
extern unsigned char color_table[28,809
extern int default_red[29,845
extern int default_grn[30,871
extern int default_blu[31,897

include/linux/sysrq.h,174
extern int emergency_sync_scheduled;25,565
#define EMERG_SYNC 27,603
#define EMERG_REMOUNT 28,624
#define CHECK_EMERGENCY_SYNC	33,706
#define CHECK_EMERGENCY_SYNC37,802

include/linux/vt_kern.h,448
#define _VT_KERN_H2,19
#define BROKEN_GRAPHICS_PROGRAMS 21,643
extern struct vt_struct vt_struct24,686
} *vt_cons[31,884
#define vc_resize_all(vc_resize_all44,1212
#define vc_resize_con(vc_resize_con45,1278
#define update_screen(update_screen59,1836
#define switch_screen(switch_screen60,1881
extern unsigned int video_font_height;84,2642
extern unsigned int default_font_height;85,2681
extern unsigned int video_scan_lines;86,2722

include/linux/sound.h,0

include/linux/ghash.h,220
#define _GHASH_H11,254
#define DEF_HASH_FUZZY_STRUCTS(DEF_HASH_FUZZY_STRUCTS15,316
#define DEF_HASH_FUZZY(DEF_HASH_FUZZY30,580
#define DEF_HASH_STRUCTS(DEF_HASH_STRUCTS156,3263
#define DEF_HASH(DEF_HASH168,3455

include/linux/rocket.h,756
struct rocket_config rocket_config6,107
struct rocket_ports rocket_ports15,224
#define ROCKET_CALLOUT_NOHUP 25,353
#define ROCKET_FORCE_CD	26,396
#define ROCKET_HUP_NOTIFY	27,432
#define ROCKET_SPLIT_TERMIOS	28,469
#define ROCKET_SPD_MASK	29,509
#define ROCKET_SPD_HI	30,545
#define ROCKET_SPD_VHI	31,616
#define ROCKET_SPD_SHI	32,688
#define ROCKET_SPD_WARP	33,760
#define ROCKET_SAK	34,840
#define ROCKET_SESSION_LOCKOUT	35,871
#define ROCKET_PGRP_LOCKOUT	36,913
#define ROCKET_FLAGS	38,954
#define ROCKET_USR_MASK 40,988
#define ROCKET_CLOSING_WAIT_NONE	46,1133
#define ROCKET_CLOSING_WAIT_INF	47,1172
#define RCKP_GET_STRUCT	52,1244
#define RCKP_GET_CONFIG	53,1280
#define RCKP_SET_CONFIG	54,1316
#define RCKP_GET_PORTS	55,1352

include/linux/fat_cvf.h,175
#define _FAT_CVF2,17
#define CVF_USE_READPAGE 4,35
struct cvf_formatcvf_format6,69
extern struct cvf_format *cvf_formats[46,2029
extern int cvf_format_use_count[47,2070

include/linux/rtnetlink.h,6216
#define __LINUX_RTNETLINK_H2,28
#define RTNL_DEBUG 7,111
#define RTM_BASE	16,215
#define	RTM_NEWLINK	18,238
#define	RTM_DELLINK	19,271
#define	RTM_GETLINK	20,304
#define	RTM_NEWADDR	22,338
#define	RTM_DELADDR	23,371
#define	RTM_GETADDR	24,404
#define	RTM_NEWROUTE	26,438
#define	RTM_DELROUTE	27,472
#define	RTM_GETROUTE	28,506
#define	RTM_NEWNEIGH	30,542
#define	RTM_DELNEIGH	31,577
#define	RTM_GETNEIGH	32,612
#define	RTM_NEWRULE	34,648
#define	RTM_DELRULE	35,682
#define	RTM_GETRULE	36,716
#define	RTM_NEWQDISC	38,751
#define	RTM_DELQDISC	39,786
#define	RTM_GETQDISC	40,821
#define	RTM_NEWTCLASS	42,857
#define	RTM_DELTCLASS	43,893
#define	RTM_GETTCLASS	44,929
#define	RTM_NEWTFILTER	46,966
#define	RTM_DELTFILTER	47,1003
#define	RTM_GETTFILTER	48,1040
#define	RTM_MAX	50,1078
struct rtattrrtattr58,1272
#define RTA_ALIGNTO	66,1380
#define RTA_ALIGN(RTA_ALIGN67,1402
#define RTA_OK(RTA_OK68,1470
#define RTA_NEXT(RTA_NEXT70,1582
#define RTA_LENGTH(RTA_LENGTH72,1722
#define RTA_SPACE(RTA_SPACE73,1789
#define RTA_DATA(RTA_DATA74,1839
#define RTA_PAYLOAD(RTA_PAYLOAD75,1905
struct rtmsgrtmsg84,2115
	RTN_UNSPEC,103,2492
	RTN_UNICAST,104,2505
	RTN_LOCAL,105,2550
	RTN_BROADCAST,106,2585
	RTN_ANYCAST,108,2662
	RTN_MULTICAST,110,2739
	RTN_BLACKHOLE,111,2779
	RTN_UNREACHABLE,112,2810
	RTN_PROHIBIT,113,2863
	RTN_THROW,114,2913
	RTN_NAT,115,2951
	RTN_XRESOLVE,116,2991
#define RTN_MAX 119,3039
#define RTPROT_UNSPEC	124,3090
#define RTPROT_REDIRECT	125,3114
#define RTPROT_KERNEL	127,3213
#define RTPROT_BOOT	128,3270
#define RTPROT_STATIC	129,3327
#define RTPROT_GATED	138,3657
#define RTPROT_RA	139,3704
#define RTPROT_MRT	140,3760
#define RTPROT_ZEBRA	141,3798
#define RTPROT_BIRD	142,3834
enum rt_scope_trt_scope_t155,4265
	RT_SCOPE_UNIVERSE=157,4283
	RT_SCOPE_SITE=159,4332
	RT_SCOPE_LINK=160,4352
	RT_SCOPE_HOST=161,4372
	RT_SCOPE_NOWHERE=162,4392
#define RTM_F_NOTIFY	167,4435
#define RTM_F_CLONED	168,4497
#define RTM_F_EQUALIZE	169,4553
enum rt_class_trt_class_t173,4648
	RT_TABLE_UNSPEC=175,4666
	RT_TABLE_DEFAULT=177,4712
	RT_TABLE_MAIN=178,4735
	RT_TABLE_LOCAL=179,4755
#define RT_TABLE_MAX 181,4778
enum rtattr_type_trtattr_type_t187,4851
	RTA_UNSPEC,189,4872
	RTA_DST,190,4885
	RTA_SRC,191,4895
	RTA_IIF,192,4905
	RTA_OIF,193,4915
	RTA_GATEWAY,194,4925
	RTA_PRIORITY,195,4939
	RTA_PREFSRC,196,4954
	RTA_METRICS,197,4968
	RTA_MULTIPATH,198,4982
	RTA_PROTOINFO,199,4998
	RTA_FLOW,200,5014
	RTA_CACHEINFO201,5025
#define RTA_MAX 204,5044
#define RTM_RTA(RTM_RTA206,5075
#define RTM_PAYLOAD(RTM_PAYLOAD207,5164
struct rtnexthoprtnexthop218,5533
#define RTNH_F_DEAD	228,5677
#define RTNH_F_PERVASIVE	229,5742
#define RTNH_F_ONLINK	230,5803
#define RTNH_ALIGNTO	234,5894
#define RTNH_ALIGN(RTNH_ALIGN235,5917
#define RTNH_OK(RTNH_OK236,5988
#define RTNH_NEXT(RTNH_NEXT238,6105
#define RTNH_LENGTH(RTNH_LENGTH239,6199
#define RTNH_SPACE(RTNH_SPACE240,6271
#define RTNH_DATA(RTNH_DATA241,6324
struct rta_cacheinforta_cacheinfo245,6425
	RTAX_UNSPEC,258,6621
	RTAX_LOCK,259,6635
	RTAX_MTU,260,6647
	RTAX_WINDOW,261,6658
	RTAX_RTT,262,6672
	RTAX_HOPS,263,6683
	RTAX_SSTHRESH,264,6695
	RTAX_CWND,265,6711
#define RTAX_MAX 268,6727
struct ifaddrmsgifaddrmsg276,6847
	IFA_UNSPEC,287,7079
	IFA_ADDRESS,288,7092
	IFA_LOCAL,289,7106
	IFA_LABEL,290,7118
	IFA_BROADCAST,291,7130
	IFA_ANYCAST,292,7146
	IFA_CACHEINFO293,7160
#define IFA_MAX 296,7179
#define IFA_F_SECONDARY	300,7227
#define IFA_F_DEPRECATED	302,7258
#define IFA_F_TENTATIVE	303,7288
#define IFA_F_PERMANENT	304,7318
struct ifa_cacheinfoifa_cacheinfo306,7349
#define IFA_RTA(IFA_RTA313,7416
#define IFA_PAYLOAD(IFA_PAYLOAD314,7509
struct ndmsgndmsg328,7960
	NDA_UNSPEC,341,8156
	NDA_DST,342,8169
	NDA_LLADDR,343,8179
	NDA_CACHEINFO344,8192
#define NDA_MAX 347,8211
#define NDA_RTA(NDA_RTA349,8242
#define NDA_PAYLOAD(NDA_PAYLOAD350,8331
#define NTF_PROXY	356,8431
#define NTF_ROUTER	357,8472
#define NUD_INCOMPLETE	363,8537
#define NUD_REACHABLE	364,8565
#define NUD_STALE	365,8592
#define NUD_DELAY	366,8615
#define NUD_PROBE	367,8638
#define NUD_FAILED	368,8661
#define NUD_NOARP	371,8705
#define NUD_PERMANENT	372,8728
#define NUD_NONE	373,8755
struct nda_cacheinfonda_cacheinfo376,8779
struct rtgenmsgrtgenmsg388,8956
struct ifinfomsgifinfomsg402,9223
	IFLA_UNSPEC,414,9470
	IFLA_ADDRESS,415,9484
	IFLA_BROADCAST,416,9499
	IFLA_IFNAME,417,9516
	IFLA_MTU,418,9530
	IFLA_LINK,419,9541
	IFLA_QDISC,420,9553
	IFLA_STATS421,9566
#define IFLA_MAX 425,9583
#define IFLA_RTA(IFLA_RTA427,9612
#define IFLA_PAYLOAD(IFLA_PAYLOAD428,9706
struct tcmsgtcmsg463,10847
	TCA_UNSPEC,476,11030
	TCA_KIND,477,11043
	TCA_OPTIONS,478,11054
	TCA_STATS,479,11068
	TCA_XSTATS,480,11080
	TCA_RATE,481,11093
#define TCA_MAX 484,11108
#define TCA_RTA(TCA_RTA486,11134
#define TCA_PAYLOAD(TCA_PAYLOAD487,11223
#define RTATTR_MAX	492,11338
#define RTMGRP_LINK	496,11401
#define RTMGRP_NOTIFY	497,11424
#define RTMGRP_NEIGH	498,11449
#define RTMGRP_TC	499,11473
#define RTMGRP_IPV4_IFADDR	501,11495
#define RTMGRP_IPV4_MROUTE	502,11527
#define RTMGRP_IPV4_ROUTE	503,11559
#define RTMGRP_IPV6_IFADDR	505,11591
#define RTMGRP_IPV6_MROUTE	506,11624
#define RTMGRP_IPV6_ROUTE	507,11657
extern atomic_t rtnl_rlockct;513,11758
extern struct wait_queue *rtnl_wait;514,11788
extern __inline__ int rtattr_strcmp(516,11826
extern struct sock *rtnl;525,12102
struct rtnetlink_linkrtnetlink_link527,12129
extern struct rtnetlink_link * rtnetlink_links[533,12282
#define RTA_PUT(RTA_PUT539,12592
extern unsigned long rtnl_wlockct;543,12764
extern __inline__ int rtnl_shlock_nowait(564,13657
extern __inline__ void rtnl_shlock(574,13833
extern __inline__ int rtnl_exlock_nowait(584,14060
extern __inline__ void rtnl_exlock(593,14237
extern __inline__ void rtnl_shunlock(600,14343
#define rtnl_shunlock(rtnl_shunlock615,14668
extern __inline__ void rtnl_exunlock(629,15017
extern __inline__ void rtnl_shlock(637,15124
extern __inline__ void rtnl_shunlock(644,15258
extern __inline__ void rtnl_exlock(650,15370
extern __inline__ void rtnl_exunlock(654,15416

include/linux/if_tunnel.h,390
#define _IF_TUNNEL_H_2,22
#define SIOCGETTUNNEL 4,45
#define SIOCADDTUNNEL 5,90
#define SIOCDELTUNNEL 6,135
#define SIOCCHGTUNNEL 7,180
#define GRE_CSUM	9,226
#define GRE_ROUTING	10,268
#define GRE_KEY	11,313
#define GRE_SEQ	12,355
#define GRE_STRICT	13,397
#define GRE_REC	14,441
#define GRE_FLAGS	15,483
#define GRE_VERSION	16,526
struct ip_tunnel_parmip_tunnel_parm18,572

include/linux/if_shaper.h,395
#define __LINUX_SHAPER_H2,25
#define SHAPER_QLEN	6,70
#define SHAPER_LATENCY	13,293
#define SHAPER_MAXSLIP	14,323
#define SHAPER_BURST	15,348
struct shapershaper17,405
#define SHAPER_SET_DEV	46,1207
#define SHAPER_SET_SPEED	47,1238
#define SHAPER_GET_DEV	48,1270
#define SHAPER_GET_SPEED	49,1301
struct shaperconfshaperconf51,1334
#define ss_speed 59,1429
#define ss_name 60,1461

include/linux/nvram.h,81
#define _LINUX_NVRAM_H2,23
#define NVRAM_INIT	7,97
#define	NVRAM_SETCKS	8,172

include/linux/joystick.h,3239
#define _LINUX_JOYSTICK_H2,26
#define JS_VERSION	37,1153
#define JS_EVENT_BUTTON	43,1239
#define JS_EVENT_AXIS	44,1299
#define JS_EVENT_INIT	45,1348
struct js_event js_event47,1407
#define JSIOCGVERSION	58,1619
#define JSIOCGAXES	60,1693
#define JSIOCGBUTTONS	61,1762
#define JSIOCGNAME(JSIOCGNAME62,1837
#define JSIOCSCORR	64,1931
#define JSIOCGCORR	65,2012
#define JS_CORR_NONE	71,2148
#define JS_CORR_BROKEN	72,2200
struct js_corr js_corr74,2248
#define JS_RETURN	84,2353
#define JS_TRUE	85,2400
#define JS_FALSE	86,2420
#define JS_X_0	87,2440
#define JS_Y_0	88,2462
#define JS_X_1	89,2484
#define JS_Y_1	90,2506
#define JS_MAX	91,2528
#define JS_DEF_TIMEOUT	93,2548
#define JS_DEF_CORR	94,2579
#define JS_DEF_TIMELIMIT	95,2602
#define JS_SET_CAL	97,2632
#define JS_GET_CAL	98,2654
#define JS_SET_TIMEOUT	99,2676
#define JS_GET_TIMEOUT	100,2702
#define JS_SET_TIMELIMIT	101,2728
#define JS_GET_TIMELIMIT	102,2755
#define JS_GET_ALL	103,2782
#define JS_SET_ALL	104,2804
struct JS_DATA_TYPE JS_DATA_TYPE106,2827
struct JS_DATA_SAVE_TYPE JS_DATA_SAVE_TYPE112,2883
#define JS_BUFF_SIZE	127,3094
#define KERNEL_VERSION(KERNEL_VERSION132,3197
#define JS_HAS_RDTSC 144,3510
#define JS_HAS_RDTSC 149,3665
#define JS_HAS_RDTSC 151,3716
#define JS_HAS_RDTSC 154,3752
#define __initdata156,3804
#define __init157,3823
#define __cli 158,3838
#define __save_flags(__save_flags159,3856
#define __restore_flags(__restore_flags160,3902
#define spin_lock_irqsave(spin_lock_irqsave161,3954
#define spin_unlock_irqrestore(spin_unlock_irqrestore162,4033
#define spin_lock_init(spin_lock_init163,4095
typedef struct { int something; } spinlock_t;spinlock_t164,4138
#define SPIN_LOCK_UNLOCKED 165,4184
#define MODULE_AUTHOR(MODULE_AUTHOR166,4217
#define MODULE_PARM(MODULE_PARM167,4242
#define MODULE_SUPPORTED_DEVICE(MODULE_SUPPORTED_DEVICE168,4267
#define signal_pending(signal_pending169,4302
#define USE_PARPORT177,4443
#define JS_PAR_DATA_IN(JS_PAR_DATA_IN182,4517
#define JS_PAR_DATA_OUT(JS_PAR_DATA_OUT183,4570
#define JS_PAR_STATUS(JS_PAR_STATUS184,4630
#define JS_PAR_CTRL_IN(JS_PAR_CTRL_IN185,4684
#define JS_PAR_CTRL_OUT(JS_PAR_CTRL_OUT186,4740
#define JS_PAR_ECTRL_OUT(JS_PAR_ECTRL_OUT187,4803
#define JS_PAR_DATA_IN(JS_PAR_DATA_IN189,4874
#define JS_PAR_DATA_OUT(JS_PAR_DATA_OUT190,4907
#define JS_PAR_STATUS(JS_PAR_STATUS191,4946
#define JS_PAR_CTRL_IN(JS_PAR_CTRL_IN192,4980
#define JS_PAR_CTRL_OUT(JS_PAR_CTRL_OUT193,5015
#define JS_PAR_ECTRL_OUT(JS_PAR_ECTRL_OUT194,5056
#define JS_PAR_STATUS_INVERT	197,5110
#define JS_PAR_CTRL_INVERT	198,5146
typedef int (*js_read_func)js_read_func206,5223
typedef unsigned int (*js_time_func)js_time_func207,5291
typedef int (*js_delta_func)js_delta_func208,5335
typedef int (*js_ops_func)js_ops_func209,5397
struct js_data js_data211,5446
struct js_dev js_dev216,5494
struct js_list js_list235,5830
struct js_port js_port242,5920
extern unsigned int js_time_speed;258,6140
extern js_time_func js_get_time;259,6175
extern js_delta_func js_delta;260,6208
extern unsigned int js_time_speed_a;262,6240
extern js_time_func js_get_time_a;263,6277
extern js_delta_func js_delta_a;264,6312

include/linux/hfmodem.h,2015
#define _HFMODEM_H30,1195
#define HFMODEM_MINOR 44,1534
#define HFMODEM_SRATE 46,1569
#define HFMODEM_MAXBITS 47,1603
#define HFMODEM_MINBAUD 48,1677
#define HFMODEM_MAXBAUD 49,1711
#define HFMODEM_MAXCORRLEN 50,1745
typedef unsigned long hfmodem_time_t;hfmodem_time_t54,1904
typedef int hfmodem_soft_t;hfmodem_soft_t55,1942
typedef unsigned long hfmodem_id_t;hfmodem_id_t56,1970
struct hfmodem_ioctl_fsk_tx_request hfmodem_ioctl_fsk_tx_request60,2084
struct hfmodem_ioctl_fsk_rx_request hfmodem_ioctl_fsk_rx_request70,2266
struct hfmodem_ioctl_mixer_params hfmodem_ioctl_mixer_params80,2459
struct hfmodem_ioctl_sample_params hfmodem_ioctl_sample_params86,2533
#define HFMODEM_IOCTL_FSKTXREQUEST 91,2598
#define HFMODEM_IOCTL_FSKRXREQUEST 92,2686
#define HFMODEM_IOCTL_CLEARRQ 93,2774
#define HFMODEM_IOCTL_GETCURTIME 94,2825
#define HFMODEM_IOCTL_WAITRQ 95,2892
#define HFMODEM_IOCTL_MIXERPARAMS 96,2957
#define HFMODEM_IOCTL_SAMPLESTART 97,3043
#define HFMODEM_IOCTL_SAMPLEFINISHED 98,3130
#define DMA_MODE_AUTOINIT 105,3305
#define NR_DEVICE 107,3342
#define HFMODEM_FRAGSAMPLES 109,3363
#define HFMODEM_FRAGSIZE 110,3411
#define HFMODEM_NUMFRAGS 111,3463
#define HFMODEM_EXCESSFRAGS 112,3493
#define HFMODEM_NUMRXSLOTS 114,3524
#define HFMODEM_NUMTXSLOTS 115,3554
#define HFMODEM_CORRELATOR_CACHE 117,3584
enum slot_st slot_st119,3620
enum slot_st { ss_unused 119,3620
enum slot_st { ss_unused = 0, ss_ready,119,3620
enum slot_st { ss_unused = 0, ss_ready, ss_oper,119,3620
enum slot_st { ss_unused = 0, ss_ready, ss_oper, ss_retired 119,3620
typedef int hfmodem_conv_t;hfmodem_conv_t120,3683
struct hfmodem_state hfmodem_state122,3712
struct hfmodem_correlator_cache hfmodem_correlator_cache199,5159
struct hfmodem_scops hfmodem_scops206,5305
extern const char hfmodem_drvname[247,7107
extern const char hfmodem_drvinfo[248,7144
extern struct hfmodem_state hfmodem_state[250,7182
extern struct hfmodem_correlator_cache hfmodem_correlator_cache[251,7236

include/linux/if_arcnet.h,514
#define _LINUX_IF_ARCNET_H20,702
#define ARC_P_IP	28,815
#define ARC_P_ARP	29,848
#define ARC_P_RARP	30,882
#define ARC_P_IPX	31,917
#define ARC_P_NOVELL_EC	32,951
#define ARC_P_IP_RFC1051 35,1025
#define ARC_P_ARP_RFC1051 36,1066
#define ARC_P_ETHER	39,1140
#define ARC_P_DATAPOINT_BOOT	42,1216
#define ARC_P_DATAPOINT_MOUNT	43,1282
#define ARC_P_POWERLAN_BEACON	44,1314
#define ARC_P_POWERLAN_BEACON2	45,1381
#define ARC_P_LANSOFT	46,1416
#define ARC_P_ATALK	47,1470
struct archdr archdr54,1540

include/linux/coda_linux.h,1195
#define _LINUX_CODA_FS13,383
extern struct inode_operations coda_dir_inode_operations;26,650
extern struct inode_operations coda_file_inode_operations;27,708
extern struct inode_operations coda_ioctl_inode_operations;28,767
extern struct inode_operations coda_symlink_inode_operations;29,827
extern struct file_operations coda_dir_operations;31,890
extern struct file_operations coda_file_operations;32,941
extern struct file_operations coda_ioctl_operations;33,993
extern int coda_debug;42,1314
extern int coda_print_entry;43,1337
extern int coda_access_cache;44,1366
#define NB_SFS_SIZ 72,2527
#define D_SUPER 84,2758
#define D_INODE 85,2821
#define D_FILE 86,2887
#define D_CACHE 87,2912
#define D_MALLOC 88,2958
#define D_CNODE 89,3023
#define D_UPCALL 90,3046
#define D_PSDEV 91,3102
#define D_PIOCTL 92,3127
#define D_SPECIAL 93,3150
#define D_TIMING 94,3173
#define D_DOWNCALL 95,3196
#define CDEBUG(CDEBUG97,3222
#define ENTRY 104,3605
#define EXIT 107,3710
#define CHECK_CNODE(CHECK_CNODE110,3814
#define CODA_ALLOC(CODA_ALLOC112,3857
#define CODA_FREE(CODA_FREE127,4791
static __inline__ struct ViceFid *coda_i2f(131,5053
#define ITOC(ITOC136,5156

include/linux/openpic.h,2961
#define _LINUX_OPENPIC_H27,802
#define OPENPIC_MAX_SOURCES	40,1034
#define OPENPIC_MAX_PROCESSORS	41,1067
#define OPENPIC_NUM_TIMERS	43,1102
#define OPENPIC_NUM_IPI	44,1131
#define OPENPIC_NUM_PRI	45,1158
#define OPENPIC_NUM_VECTORS	46,1186
#define OPENPIC_VEC_SOURCE 53,1259
#define OPENPIC_VEC_TIMER 54,1312
#define OPENPIC_VEC_IPI 55,1365
#define OPENPIC_VEC_SPURIOUS 56,1418
typedef struct _OpenPIC_Reg _OpenPIC_Reg63,1543
} OpenPIC_Reg;OpenPIC_Reg66,1632
typedef struct _OpenPIC_Processor _OpenPIC_Processor73,1697
} OpenPIC_Processor;OpenPIC_Processor110,2625
typedef struct _OpenPIC_Timer _OpenPIC_Timer117,2688
} OpenPIC_Timer;OpenPIC_Timer122,2919
typedef struct _OpenPIC_Global _OpenPIC_Global129,2979
} OpenPIC_Global;OpenPIC_Global166,4059
typedef struct _OpenPIC_Source _OpenPIC_Source173,4130
} OpenPIC_Source;OpenPIC_Source176,4264
struct OpenPIC OpenPIC183,4329
extern volatile struct OpenPIC *OpenPIC;206,4786
extern u_int OpenPIC_NumInitSenses;207,4827
extern u_char *OpenPIC_InitSenses;208,4863
#define OPENPIC_CURRENT_TASK_PRIORITY_MASK	215,4955
#define OPENPIC_WHO_AM_I_ID_MASK	221,5052
#define OPENPIC_FEATURE_LAST_SOURCE_MASK	227,5151
#define OPENPIC_FEATURE_LAST_SOURCE_SHIFT	228,5203
#define OPENPIC_FEATURE_LAST_PROCESSOR_MASK	229,5248
#define OPENPIC_FEATURE_LAST_PROCESSOR_SHIFT	230,5303
#define OPENPIC_FEATURE_VERSION_MASK	231,5350
#define OPENPIC_CONFIG_RESET	237,5456
#define OPENPIC_CONFIG_8259_PASSTHROUGH_DISABLE	238,5498
#define OPENPIC_CONFIG_BASE_MASK	239,5557
#define OPENPIC_VENDOR_ID_STEPPING_MASK	245,5658
#define OPENPIC_VENDOR_ID_STEPPING_SHIFT	246,5710
#define OPENPIC_VENDOR_ID_DEVICE_ID_MASK	247,5754
#define OPENPIC_VENDOR_ID_DEVICE_ID_SHIFT	248,5806
#define OPENPIC_VENDOR_ID_VENDOR_ID_MASK	249,5850
#define OPENPIC_MASK	255,5953
#define OPENPIC_ACTIVITY	256,5988
#define OPENPIC_PRIORITY_MASK	257,6042
#define OPENPIC_PRIORITY_SHIFT	258,6085
#define OPENPIC_VECTOR_MASK	259,6121
#define OPENPIC_SENSE_POLARITY	266,6215
#define OPENPIC_SENSE_LEVEL	267,6273
#define OPENPIC_COUNT_MASK	274,6356
#define OPENPIC_TIMER_TOGGLE	275,6396
#define OPENPIC_TIMER_COUNT_INHIBIT	276,6438
#define IPI_Dispatch(IPI_Dispatch284,6571
#define Current_Task_Priority	285,6618
#define Who_Am_I	287,6696
#define Interrupt_Acknowledge	290,6753
#define EOI	292,6818
#define Feature_Reporting0	295,6866
#define Feature_Reporting1	296,6918
#define Global_Configuration0	297,6970
#define Global_Configuration1	298,7028
#define Vendor_Specific(Vendor_Specific299,7086
#define Vendor_Identification	300,7138
#define Processor_Initialization	301,7196
#define IPI_Vector_Priority(IPI_Vector_Priority302,7259
#define Spurious_Vector	303,7319
#define Timer_Frequency	304,7366
#define Current_Count	307,7436
#define Base_Count	308,7479
#define Vector_Priority	309,7516
#define Destination	310,7563
#define Vector_Priority	313,7636
#define Destination	314,7683

include/linux/prctl.h,60
#define _LINUX_PRCTL_H2,23
#define PR_SET_PDEATHSIG 6,100

include/linux/ftape-header-segment.h,1541
#define _FTAPE_HEADER_SEGMENT_H2,32
#define FT_SIGNATURE 31,1114
#define FT_FMT_CODE 32,1165
#define FT_REV_LEVEL 33,1190
#define FT_HSEG_1 34,1270
#define FT_HSEG_2 35,1350
#define FT_FRST_SEG 36,1430
#define FT_LAST_SEG 37,1510
#define FT_FMT_DATE 38,1590
#define FT_WR_DATE 39,1670
#define FT_SPT 40,1750
#define FT_TPC 41,1830
#define FT_FHM 42,1910
#define FT_FTM 43,1990
#define FT_FSM 44,2070
#define FT_LABEL 45,2150
#define FT_LABEL_DATE 46,2230
#define FT_LABEL_SZ 47,2310
#define FT_CMAP_START 48,2359
#define FT_FMT_ERROR 49,2439
#define FT_SEG_CNT 52,2547
#define FT_INIT_DATE 55,2680
#define FT_FMT_CNT 56,2752
#define FT_FSL_CNT 57,2824
#define FT_MK_CODE 58,2896
#define FT_LOT_CODE 59,2968
#define FT_6_HSEG_1 60,3040
#define FT_6_HSEG_2 61,3112
#define FT_6_FRST_SEG 62,3184
#define FT_6_LAST_SEG 63,3256
#define FT_FSL 65,3329
#define FT_HEADER_END 66,3355
#define FT_HSEG_MAGIC 77,3682
#define FT_D2G_MAGIC 78,3715
#define FT_YEAR_SHIFT 81,3795
#define FT_YEAR_MASK 82,3820
#define FT_YEAR_0 83,3853
#define FT_YEAR_MAX 84,3880
#define FT_YEAR(FT_YEAR85,3906
#define FT_TIME_SHIFT 87,3980
#define FT_TIME_MASK 88,4006
#define FT_TIME_MAX 89,4041
#define FT_TIME(FT_TIME90,4104
#define FT_TIME_STAMP(FT_TIME_STAMP93,4196
} ft_format_type;ft_format_type104,4695
#define FT_FSL_SIZE 107,4758
#define FT_FSL_MAX_ENTRIES 108,4822
typedef struct ft_fsl_entry ft_fsl_entry110,4878
} __attribute__ __attribute__113,4937
#define FT_FSL_TIME_STAMP(FT_FSL_TIME_STAMP119,5076

include/linux/raid1.h,129
#define _RAID1_H2,17
struct mirror_info mirror_info6,58
struct raid1_data raid1_data21,234
struct raid1_bh raid1_bh38,704

include/linux/serialP.h,347
#define _LINUX_SERIALP_H11,228
struct async_icount async_icount28,591
struct serial_state serial_state34,708
struct async_struct async_struct54,1100
#define SERIAL_MAGIC 90,2052
#define SSTATE_MAGIC 91,2080
#define SERIAL_XMIT_SIZE 96,2179
#define RS_EVENT_WRITE_WAKEUP	102,2326
struct rs_multiport_struct rs_multiport_struct107,2433

include/linux/raid5.h,707
#define _RAID5_H2,17
struct disk_info disk_info8,100
struct stripe_head stripe_head17,212
#define PHASE_BEGIN	44,1503
#define PHASE_READ_OLD	45,1526
#define PHASE_WRITE	46,1552
#define PHASE_READ	47,1575
#define PHASE_COMPLETE	48,1597
#define METHOD_NONE	53,1647
#define RECONSTRUCT_WRITE	54,1670
#define READ_MODIFY_WRITE	55,1698
#define STRIPE_LOCKED	60,1750
#define STRIPE_ERROR	61,1775
#define STRIPE_NONE	66,1826
#define	STRIPE_WRITE	67,1849
#define STRIPE_READ	68,1873
struct raid5_data raid5_data70,1897
#define ALGORITHM_LEFT_ASYMMETRIC	105,2655
#define ALGORITHM_RIGHT_ASYMMETRIC	106,2691
#define ALGORITHM_LEFT_SYMMETRIC	107,2728
#define ALGORITHM_RIGHT_SYMMETRIC	108,2763

include/linux/in_route.h,572
#define _LINUX_IN_ROUTE_H2,26
#define RTCF_DEAD	6,85
#define RTCF_ONLINK	7,115
#define RTCF_NOPMTUDISC 10,191
#define RTCF_NOTIFY	12,233
#define RTCF_DIRECTDST	13,264
#define RTCF_REDIRECTED	14,298
#define RTCF_TPROXY	15,333
#define RTCF_FAST	17,365
#define RTCF_MASQ	18,394
#define RTCF_SNAT	19,423
#define RTCF_DOREDIRECT 20,452
#define RTCF_DIRECTSRC	21,487
#define RTCF_DNAT	22,521
#define RTCF_BROADCAST	23,550
#define RTCF_MULTICAST	24,584
#define RTCF_REJECT	25,618
#define RTCF_LOCAL	26,649
#define RTCF_NAT	28,680
#define RT_TOS(RT_TOS30,720

include/linux/ftape-vendors.h,279
#define _FTAPE_VENDORS_H2,25
} wake_up_types;wake_up_types38,1221
} wakeup_method;wakeup_method43,1350
#define WAKEUP_METHODS 48,1514
} vendor_struct;vendor_struct61,1956
#define UNKNOWN_VENDOR 63,1974
#define QIC117_VENDORS 65,2003
#define QIC117_MAKE_CODES 112,4974

include/linux/coda_opstats.h,977
#define CFS_MOUNT_STATS 13,260
#define CFS_UMOUNT_STATS 14,287
#define CFS_ROOT_STATS 15,314
#define CFS_STATFS_STATS 16,341
#define CFS_SYNC_STATS 17,368
#define CFS_VGET_STATS 18,395
#define CFS_VFSOPS_SIZE 19,422
#define CFS_OPEN_STATS 48,1513
#define CFS_CLOSE_STATS 49,1542
#define CFS_RDWR_STATS 50,1571
#define CFS_IOCTL_STATS 51,1600
#define CFS_SELECT_STATS 52,1629
#define CFS_GETATTR_STATS 53,1658
#define CFS_SETATTR_STATS 54,1687
#define CFS_ACCESS_STATS 55,1716
#define CFS_READLINK_STATS 56,1745
#define CFS_FSYNC_STATS 57,1774
#define CFS_INACTIVE_STATS 58,1803
#define CFS_LOOKUP_STATS 59,1833
#define CFS_CREATE_STATS 60,1863
#define CFS_REMOVE_STATS 61,1893
#define CFS_LINK_STATS 62,1923
#define CFS_RENAME_STATS 63,1953
#define CFS_MKDIR_STATS 64,1983
#define CFS_RMDIR_STATS 65,2013
#define CFS_SYMLINK_STATS 66,2043
#define CFS_READDIR_STATS 67,2073
#define CFS_VNODEOPS_SIZE 68,2103
struct cfs_op_stats cfs_op_stats76,2182

include/linux/inetdevice.h,1083
#define _LINUX_INETDEVICE_H2,28
struct ipv4_devconfipv4_devconf6,76
extern struct ipv4_devconf ipv4_devconf;22,335
struct in_devicein_device24,377
#define IN_DEV_FORWARD(IN_DEV_FORWARD35,642
#define IN_DEV_MFORWARD(IN_DEV_MFORWARD36,701
#define IN_DEV_RPFILTER(IN_DEV_RPFILTER37,794
#define IN_DEV_SOURCE_ROUTE(IN_DEV_SOURCE_ROUTE38,879
#define IN_DEV_BOOTP_RELAY(IN_DEV_BOOTP_RELAY39,987
#define IN_DEV_LOG_MARTIANS(IN_DEV_LOG_MARTIANS41,1079
#define IN_DEV_PROXY_ARP(IN_DEV_PROXY_ARP42,1173
#define IN_DEV_SHARED_MEDIA(IN_DEV_SHARED_MEDIA43,1258
#define IN_DEV_TX_REDIRECTS(IN_DEV_TX_REDIRECTS44,1352
#define IN_DEV_SEC_REDIRECTS(IN_DEV_SEC_REDIRECTS45,1450
#define IN_DEV_RX_REDIRECTS(IN_DEV_RX_REDIRECTS47,1554
struct in_ifaddrin_ifaddr53,1802
extern __inline__ int inet_ifa_match(81,2753
extern __inline__ int bad_mask(90,2921
#define for_primary_ifa(for_primary_ifa100,3083
#define for_ifa(for_ifa103,3239
#define endfor_ifa(endfor_ifa107,3351
extern __inline__ __u32 inet_make_mask(111,3406
extern __inline__ int inet_mask_len(118,3528

include/linux/coda_psdev.h,715
#define __CODA_PSDEV_H2,23
#define CODA_PSDEV_MAJOR 4,47
#define MAX_CODADEVS 5,75
extern struct venus_comm coda_upc_comm;7,130
extern struct coda_sb_info coda_super_info;8,170
#define CODA_SUPER_MAGIC	9,214
struct coda_sb_infocoda_sb_info11,251
struct venus_comm venus_comm24,656
static inline struct coda_sb_info *coda_sbp(34,903
extern int coda_hard;86,3173
extern unsigned long coda_timeout;87,3195
struct upc_req upc_req88,3230
#define REQ_ASYNC 100,3627
#define REQ_READ 101,3650
#define REQ_WRITE 102,3673
struct coda_upcallstats coda_upcallstats108,3719
extern struct coda_upcallstats coda_callstats;114,3878
static inline void clstats(116,3926
static inline void badclstats(125,4149

include/linux/qic117.h,1406
#define _QIC117_H2,18
} qic117_cmd_t;qic117_cmd_t105,3523
} qic_compatibility;qic_compatibility109,3595
} command_types;command_types113,3662
struct qic117_command_table qic117_command_table115,3680
#define QIC117_COMMANDS 124,3797
#define QIC_STATUS_READY	182,7620
#define QIC_STATUS_ERROR	183,7680
#define QIC_STATUS_CARTRIDGE_PRESENT 185,7775
#define QIC_STATUS_WRITE_PROTECT 186,7839
#define QIC_STATUS_NEW_CARTRIDGE 187,7907
#define QIC_STATUS_REFERENCED	189,8016
#define QIC_STATUS_AT_BOT	191,8107
#define QIC_STATUS_AT_EOT	193,8196
#define QIC_CONFIG_RATE_MASK	199,8350
#define QIC_CONFIG_RATE_SHIFT	200,8384
#define QIC_CONFIG_RATE_250	201,8416
#define QIC_CONFIG_RATE_500	202,8446
#define QIC_CONFIG_RATE_1000	203,8476
#define QIC_CONFIG_RATE_2000	204,8507
#define QIC_CONFIG_RATE_4000 205,8538
#define QIC_CONFIG_LONG	207,8606
#define QIC_CONFIG_80	208,8669
#define QIC_TAPE_STD_MASK 214,8784
#define QIC_TAPE_QIC40 215,8821
#define QIC_TAPE_QIC80 216,8851
#define QIC_TAPE_QIC3020 217,8881
#define QIC_TAPE_QIC3010 218,8913
#define QIC_TAPE_LEN_MASK	220,8946
#define QIC_TAPE_205FT	221,8977
#define QIC_TAPE_307FT	222,9006
#define QIC_TAPE_VARIABLE	223,9035
#define QIC_TAPE_1100FT	224,9066
#define QIC_TAPE_FLEX	225,9096
#define QIC_TAPE_WIDE	227,9125
#define QIC_TOP_TAPE_LEN	232,9245
} ftape_error;ftape_error241,9469
#define QIC117_ERRORS 243,9485

include/linux/videodev.h,4394
#define __LINUX_VIDEODEV_H2,27
struct video_devicevideo_device13,194
#define VIDEO_MAJOR	36,943
#define VFL_TYPE_GRABBER	39,1034
#define VFL_TYPE_VBI	40,1061
#define VFL_TYPE_RADIO	41,1085
#define VFL_TYPE_VTX	42,1111
#define VID_TYPE_CAPTURE	48,1205
#define VID_TYPE_TUNER	49,1250
#define VID_TYPE_TELETEXT	50,1291
#define VID_TYPE_OVERLAY	51,1339
#define VID_TYPE_CHROMAKEY	52,1398
#define VID_TYPE_CLIPPING	53,1455
#define VID_TYPE_FRAMERAM	54,1499
#define VID_TYPE_SCALES	55,1563
#define VID_TYPE_MONOCHROME	56,1607
#define VID_TYPE_SUBCAPTURE	57,1661
struct video_capabilityvideo_capability59,1734
struct video_channelvideo_channel72,2003
#define VIDEO_VC_TUNER	78,2084
#define VIDEO_VC_AUDIO	79,2136
#define VIDEO_TYPE_TV	81,2200
#define VIDEO_TYPE_CAMERA	82,2225
struct video_tunervideo_tuner86,2299
#define VIDEO_TUNER_PAL	92,2408
#define VIDEO_TUNER_NTSC	93,2435
#define VIDEO_TUNER_SECAM	94,2462
#define VIDEO_TUNER_LOW	95,2490
#define VIDEO_TUNER_NORM	96,2540
#define VIDEO_TUNER_STEREO_ON	97,2593
#define VIDEO_MODE_PAL	99,2698
#define VIDEO_MODE_NTSC	100,2724
#define VIDEO_MODE_SECAM	101,2751
#define VIDEO_MODE_AUTO	102,2778
struct video_picturevideo_picture106,2860
#define VIDEO_PALETTE_GREY	115,3065
#define VIDEO_PALETTE_HI240	116,3117
#define VIDEO_PALETTE_RGB565	117,3175
#define VIDEO_PALETTE_RGB24	118,3227
#define VIDEO_PALETTE_RGB32	119,3273
#define VIDEO_PALETTE_RGB555	120,3320
#define VIDEO_PALETTE_YUV422	121,3371
#define VIDEO_PALETTE_YUYV	122,3423
#define VIDEO_PALETTE_UYVY	123,3452
#define VIDEO_PALETTE_YUV420	124,3526
#define VIDEO_PALETTE_YUV411	125,3558
#define VIDEO_PALETTE_RAW	126,3611
#define VIDEO_PALETTE_YUV422P	127,3666
#define VIDEO_PALETTE_YUV411P	128,3722
#define VIDEO_PALETTE_YUV420P	129,3778
#define VIDEO_PALETTE_YUV410P	130,3834
#define VIDEO_PALETTE_PLANAR	131,3890
#define VIDEO_PALETTE_COMPONENT 132,3952
struct video_audiovideo_audio135,4023
#define VIDEO_AUDIO_MUTE	141,4146
#define VIDEO_AUDIO_MUTABLE	142,4173
#define VIDEO_AUDIO_VOLUME	143,4203
#define VIDEO_AUDIO_BASS	144,4232
#define VIDEO_AUDIO_TREBLE	145,4259
#define VIDEO_SOUND_MONO	147,4309
#define VIDEO_SOUND_STEREO	148,4336
#define VIDEO_SOUND_LANG1	149,4365
#define VIDEO_SOUND_LANG2	150,4393
struct video_clipvideo_clip156,4542
struct video_windowvideo_window163,4661
#define VIDEO_WINDOW_INTERLACE	171,4849
#define VIDEO_CLIP_BITMAP	172,4882
#define VIDEO_CLIPMAP_SIZE	174,4974
struct video_capturevideo_capture177,5017
#define VIDEO_CAPTURE_ODD	183,5209
#define VIDEO_CAPTURE_EVEN	184,5253
struct video_buffervideo_buffer187,5287
struct video_mmapvideo_mmap195,5376
struct video_keyvideo_key202,5535
#define VIDEO_MAX_FRAME	209,5587
struct video_mbufvideo_mbuf211,5616
#define 	VIDEO_NO_UNIT	219,5738
struct video_unitvideo_unit222,5769
#define VIDIOCGCAP	231,5950
#define VIDIOCGCHAN	232,6029
#define VIDIOCSCHAN	233,6117
#define VIDIOCGTUNER	234,6190
#define VIDIOCSTUNER	235,6271
#define VIDIOCGPICT	236,6370
#define VIDIOCSPICT	237,6453
#define VIDIOCCAPTURE	238,6536
#define VIDIOCGWIN	239,6603
#define VIDIOCSWIN	240,6691
#define VIDIOCGFBUF	241,6835
#define VIDIOCSFBUF	242,6913
#define VIDIOCKEY	243,7003
#define VIDIOCGFREQ	244,7167
#define VIDIOCSFREQ	245,7233
#define VIDIOCGAUDIO	246,7299
#define VIDIOCSAUDIO	247,7375
#define VIDIOCSYNC	248,7459
#define VIDIOCMCAPTURE	249,7529
#define VIDIOCGMBUF	250,7604
#define VIDIOCGUNIT	251,7687
#define VIDIOCGCAPTURE	252,7766
#define VIDIOCSCAPTURE	253,7848
#define BASE_VIDIOCPRIVATE	255,7943
#define VID_HARDWARE_BT848	258,8003
#define VID_HARDWARE_QCAM_BW	259,8032
#define VID_HARDWARE_PMS	260,8063
#define VID_HARDWARE_QCAM_C	261,8090
#define VID_HARDWARE_PSEUDO	262,8120
#define VID_HARDWARE_SAA5249	263,8150
#define VID_HARDWARE_AZTECH	264,8181
#define VID_HARDWARE_SF16MI	265,8211
#define VID_HARDWARE_RTRACK	266,8241
#define VID_HARDWARE_ZOLTRIX	267,8271
#define VID_HARDWARE_SAA7146 268,8303
#define VID_HARDWARE_VIDEUM	269,8338
#define VID_HARDWARE_RTRACK2	270,8402
#define VID_HARDWARE_PERMEDIA2	271,8434
#define VID_HARDWARE_RIVA128	272,8497
#define VID_HARDWARE_PLANB	273,8557
#define VID_HARDWARE_BROADWAY	274,8623
#define VID_HARDWARE_GEMTEK	275,8679
#define VID_HARDWARE_TYPHOON	276,8710
#define VID_HARDWARE_VINO	277,8742
struct video_initvideo_init283,8834

include/linux/zftape.h,399
#define _ZFTAPE_H2,18
#define ZFTAPE_VERSION 31,1038
#define ZFTAPE_LABEL 35,1117
#define ZFT_Q80_MODE	38,1256
#define ZFT_ZIP_MODE	39,1287
#define ZFT_RAW_MODE	40,1318
#define ZFT_MINOR_OP_MASK	41,1349
#define ZFT_MINOR_MASK	44,1436
struct mtblksz mtblksz49,1551
#define MTIOC_ZFTAPE_GETBLKSZ 52,1595
extern inline __s64 zft_div_blksz(59,1711
extern inline __s64 zft_mul_blksz(69,1918

include/linux/ntfs_fs.h,30
#define _LINUX_NTFS_FS_H2,25

include/linux/adfs_fs.h,1072
#define _ADFS_FS_H2,19
struct adfs_discrecord adfs_discrecord12,150
#define ADFS_DISCRECORD	35,775
#define ADFS_DR_OFFSET	36,808
#define ADFS_DR_SIZE	37,840
#define ADFS_SUPER_MAGIC	38,866
#define ADFS_FREE_FRAG	39,899
#define ADFS_BAD_FRAG	40,926
#define ADFS_ROOT_FRAG	41,952
struct adfs_dirheader adfs_dirheader46,1007
#define ADFS_NEWDIR_SIZE	51,1092
#define ADFS_OLDDIR_SIZE	52,1122
#define ADFS_NUM_DIR_ENTRIES	53,1152
struct adfs_direntry adfs_direntry58,1213
#define ADFS_NAME_LEN 60,1257
#define ADFS_NDA_OWNER_READ	66,1377
#define ADFS_NDA_OWNER_WRITE	67,1414
#define ADFS_NDA_LOCKED	68,1452
#define ADFS_NDA_DIRECTORY	69,1486
#define ADFS_NDA_EXECUTE	70,1522
#define ADFS_NDA_PUBLIC_READ	71,1556
#define ADFS_NDA_PUBLIC_WRITE	72,1594
#define ADFS_MAX_NAME_LEN	75,1637
struct adfs_idir_entry adfs_idir_entry76,1667
union adfs_dirtail adfs_dirtail90,2029
extern inline int adfs_checkbblk(119,2729
extern struct inode_operations adfs_dir_inode_operations;169,4463
extern struct inode_operations adfs_file_inode_operations;172,4535

include/linux/ntfs_fs_i.h,1181
#define _LINUX_NTFS_FS_I_H2,27
#define NTFS_INTEGRAL_TYPES10,244
typedef u8  ntfs_u8;ntfs_u811,272
typedef u16 ntfs_u16;ntfs_u1612,293
typedef u32 ntfs_u32;ntfs_u3213,315
typedef u64 ntfs_u64;ntfs_u6414,337
typedef s8  ntfs_s8;ntfs_s815,359
typedef s16 ntfs_s16;ntfs_s1616,380
typedef s32 ntfs_s32;ntfs_s3217,402
typedef s64 ntfs_s64;ntfs_s6418,424
#define NTMODE_T22,471
typedef __kernel_mode_t ntmode_t;ntmode_t23,488
#define NTFS_UID_T26,548
typedef __kernel_uid_t ntfs_uid_t;ntfs_uid_t27,567
#define NTFS_GID_T30,628
typedef __kernel_gid_t ntfs_gid_t;ntfs_gid_t31,647
#define NTFS_SIZE_T34,709
typedef __kernel_size_t ntfs_size_t;ntfs_size_t35,729
#define NTFS_TIME_T38,793
typedef __kernel_time_t ntfs_time_t;ntfs_time_t39,813
#define NTFS_WCHAR_T44,908
typedef unsigned short     ntfs_wchar_t;ntfs_wchar_t45,929
#define NTFS_OFFSET_T49,1017
typedef unsigned long long ntfs_offset_t;ntfs_offset_t50,1039
#define NTFS_TIME64_T54,1120
typedef unsigned long long ntfs_time64_t;ntfs_time64_t55,1142
#define NTFS_CLUSTER_T59,1293
typedef unsigned int ntfs_cluster_t;ntfs_cluster_t60,1316
struct ntfs_inode_info{ntfs_inode_info64,1412

include/linux/pkt_sched.h,2261
#define __LINUX_PKT_SCHED_H2,28
#define TC_PRIO_BESTEFFORT	17,602
#define TC_PRIO_FILLER	18,632
#define TC_PRIO_BULK	19,659
#define TC_PRIO_INTERACTIVE_BULK	20,684
#define TC_PRIO_INTERACTIVE	21,719
#define TC_PRIO_CONTROL	22,750
#define TC_PRIO_MAX	24,779
struct tc_statstc_stats30,933
struct tc_estimatortc_estimator43,1343
#define TC_H_MAJ_MASK 66,1991
#define TC_H_MIN_MASK 67,2027
#define TC_H_MAJ(TC_H_MAJ68,2063
#define TC_H_MIN(TC_H_MIN69,2103
#define TC_H_MAKE(TC_H_MAKE70,2143
#define TC_H_UNSPEC	72,2217
#define TC_H_ROOT	73,2242
struct tc_ratespectc_ratespec75,2275
struct tc_fifo_qopttc_fifo_qopt87,2448
#define TCQ_PRIO_BANDS	94,2563
struct tc_prio_qopttc_prio_qopt96,2590
struct tc_csz_qopttc_csz_qopt104,2742
struct tc_csz_copttc_csz_copt112,3029
	TCA_CSZ_UNSPEC,124,3188
	TCA_CSZ_PARMS,125,3205
	TCA_CSZ_RTAB,126,3221
	TCA_CSZ_PTAB,127,3236
struct tc_tbf_qopttc_tbf_qopt132,3274
	TCA_TBF_UNSPEC,143,3406
	TCA_TBF_PARMS,144,3423
	TCA_TBF_RTAB,145,3439
	TCA_TBF_PTAB,146,3454
struct tc_sfq_qopttc_sfq_qopt156,3557
	TCA_RED_UNSPEC,178,4083
	TCA_RED_PARMS,179,4100
	TCA_RED_STAB,180,4116
struct tc_red_qopttc_red_qopt183,4135
#define TC_CBQ_MAXPRIO	195,4513
#define TC_CBQ_MAXLEVEL	196,4539
#define TC_CBQ_DEF_EWMA	197,4566
struct tc_cbq_lssopttc_cbq_lssopt199,4594
#define TCF_CBQ_LSS_BOUNDED	203,4662
#define TCF_CBQ_LSS_ISOLATED	204,4692
#define TCF_CBQ_LSS_FLAGS	207,4774
#define TCF_CBQ_LSS_EWMA	208,4802
#define TCF_CBQ_LSS_MAXIDLE	209,4829
#define TCF_CBQ_LSS_MINIDLE	210,4859
#define TCF_CBQ_LSS_OFFTIME	211,4889
#define TCF_CBQ_LSS_AVPKT	212,4922
struct tc_cbq_wrropttc_cbq_wrropt219,5023
struct tc_cbq_ovltc_cbq_ovl229,5181
#define	TC_CBQ_OVL_CLASSIC	232,5226
#define	TC_CBQ_OVL_DELAY	233,5255
#define	TC_CBQ_OVL_LOWPRIO	234,5282
#define	TC_CBQ_OVL_DROP	235,5311
#define	TC_CBQ_OVL_RCLASSIC	236,5338
struct tc_cbq_policetc_cbq_police241,5415
struct tc_cbq_fopttc_cbq_fopt248,5512
struct tc_cbq_xstatstc_cbq_xstats255,5587
	TCA_CBQ_UNSPEC,265,5695
	TCA_CBQ_LSSOPT,266,5712
	TCA_CBQ_WRROPT,267,5729
	TCA_CBQ_FOPT,268,5746
	TCA_CBQ_OVL_STRATEGY,269,5761
	TCA_CBQ_RATE,270,5784
	TCA_CBQ_RTAB,271,5799
	TCA_CBQ_POLICE,272,5814
#define TCA_CBQ_MAX	275,5835

include/linux/qnx4_fs.h,1152
#define _LINUX_QNX4_FS_H11,340
#define QNX4_ROOT_INO 15,395
#define _MAX_XTNTS_PER_XBLK	17,420
#define QNX4_FILE_USED 19,471
#define QNX4_FILE_MODIFIED 20,508
#define QNX4_FILE_BUSY 21,545
#define QNX4_FILE_LINK 22,582
#define QNX4_FILE_INODE 23,619
#define QNX4_FILE_FSYSCLEAN 24,656
#define QNX4_I_MAP_SLOTS	26,694
#define QNX4_Z_MAP_SLOTS	27,721
#define QNX4_SUPER_MAGIC	28,749
#define QNX4_VALID_FS	29,805
#define QNX4_ERROR_FS	30,851
#define QNX4_BLOCK_SIZE 31,902
#define QNX4_DIR_ENTRY_SIZE 32,969
#define QNX4_XBLK_ENTRY_SIZE 33,1028
#define QNX4_INODES_PER_BLOCK 34,1088
#define _SHORT_NAME_MAX 37,1161
#define QNX4_NAME_MAX 38,1195
struct qnx4_inode_entry qnx4_inode_entry43,1288
struct qnx4_link_info qnx4_link_info62,1620
struct qnx4_xblk qnx4_xblk70,1783
struct qnx4_super_block qnx4_super_block81,2017
#define QNX4_DEBUG 90,2197
#define QNX4DEBUG(QNX4DEBUG93,2234
#define QNX4DEBUG(QNX4DEBUG95,2270
extern struct inode_operations qnx4_file_inode_operations;107,2752
extern struct inode_operations qnx4_dir_inode_operations;108,2811
extern struct inode_operations qnx4_symlink_inode_operations;109,2869

include/linux/coda_proc.h,438
#define _CODA_PROC_H13,184
struct coda_vfs_stats coda_vfs_stats39,796
struct coda_upcall_stats_entry coda_upcall_stats_entry69,1190
struct coda_permission_stats coda_permission_stats79,1347
struct coda_cache_inv_statscoda_cache_inv_stats86,1447
extern struct coda_vfs_stats		coda_vfs_stat;98,1646
extern struct coda_permission_stats	coda_permission_stat;99,1691
extern struct coda_cache_inv_stats	coda_cache_inv_stat;100,1749

include/linux/kmod.h,46
#define request_module(request_module10,118

include/linux/coda_cache.h,547
#define _CFSNC_HEADER_11,284
struct coda_cache coda_cache17,374
struct cfsnc_statistics cfsnc_statistics40,1115
#define CFSNC_FIND	62,1575
#define CFSNC_REMOVE	63,1608
#define CFSNC_INIT	64,1643
#define CFSNC_ENTER	65,1676
#define CFSNC_LOOKUP	66,1710
#define CFSNC_ZAPPFID	67,1745
#define CFSNC_ZAPFID	68,1781
#define CFSNC_ZAPVNODE	69,1816
#define CFSNC_ZAPFILE	70,1853
#define CFSNC_PURGEUSER	71,1889
#define CFSNC_FLUSH	72,1927
#define CFSNC_PRINTCFSNC	73,1962
#define CFSNC_PRINTSTATS	74,2001
#define CFSNC_REPLACE	75,2040

include/linux/hfs_fs_i.h,78
#define _LINUX_HFS_FS_I_H12,308
struct hfs_inode_info hfs_inode_info19,421

include/linux/concap.h,172
#define _LINUX_CONCAP_H4,81
struct concap_proto{concap_proto27,804
struct concap_device_ops{concap_device_ops45,1380
struct concap_proto_ops{concap_proto_ops62,1883

include/linux/byteorder/big_endian.h,1958
#define _LINUX_BYTEORDER_BIG_ENDIAN_H2,38
#define __BIG_ENDIAN 5,98
#define __BIG_ENDIAN_BITFIELD8,161
#define __constant_htonl(__constant_htonl13,234
#define __constant_ntohl(__constant_ntohl14,275
#define __constant_htons(__constant_htons15,316
#define __constant_ntohs(__constant_ntohs16,357
#define __cpu_to_le64(__cpu_to_le6417,398
#define __le64_to_cpu(__le64_to_cpu18,437
#define __cpu_to_le32(__cpu_to_le3219,476
#define __le32_to_cpu(__le32_to_cpu20,515
#define __cpu_to_le16(__cpu_to_le1621,554
#define __le16_to_cpu(__le16_to_cpu22,593
#define __cpu_to_be64(__cpu_to_be6423,632
#define __be64_to_cpu(__be64_to_cpu24,670
#define __cpu_to_be32(__cpu_to_be3225,708
#define __be32_to_cpu(__be32_to_cpu26,746
#define __cpu_to_be16(__cpu_to_be1627,784
#define __be16_to_cpu(__be16_to_cpu28,822
#define __cpu_to_le64p(__cpu_to_le64p29,860
#define __le64_to_cpup(__le64_to_cpup30,901
#define __cpu_to_le32p(__cpu_to_le32p31,942
#define __le32_to_cpup(__le32_to_cpup32,983
#define __cpu_to_le16p(__cpu_to_le16p33,1024
#define __le16_to_cpup(__le16_to_cpup34,1065
#define __cpu_to_be64p(__cpu_to_be64p35,1106
#define __be64_to_cpup(__be64_to_cpup36,1147
#define __cpu_to_be32p(__cpu_to_be32p37,1188
#define __be32_to_cpup(__be32_to_cpup38,1229
#define __cpu_to_be16p(__cpu_to_be16p39,1270
#define __be16_to_cpup(__be16_to_cpup40,1311
#define __cpu_to_le64s(__cpu_to_le64s41,1352
#define __le64_to_cpus(__le64_to_cpus42,1393
#define __cpu_to_le32s(__cpu_to_le32s43,1434
#define __le32_to_cpus(__le32_to_cpus44,1475
#define __cpu_to_le16s(__cpu_to_le16s45,1516
#define __le16_to_cpus(__le16_to_cpus46,1557
#define __cpu_to_be64s(__cpu_to_be64s47,1598
#define __be64_to_cpus(__be64_to_cpus48,1640
#define __cpu_to_be32s(__cpu_to_be32s49,1682
#define __be32_to_cpus(__be32_to_cpus50,1724
#define __cpu_to_be16s(__cpu_to_be16s51,1766
#define __be16_to_cpus(__be16_to_cpus52,1808

include/linux/byteorder/generic.h,1395
#define _LINUX_BYTEORDER_GENERIC_H2,35
#define cpu_to_le64 87,3126
#define le64_to_cpu 88,3160
#define cpu_to_le32 89,3194
#define le32_to_cpu 90,3228
#define cpu_to_le16 91,3262
#define le16_to_cpu 92,3296
#define cpu_to_be64 93,3330
#define be64_to_cpu 94,3364
#define cpu_to_be32 95,3398
#define be32_to_cpu 96,3432
#define cpu_to_be16 97,3466
#define be16_to_cpu 98,3500
#define cpu_to_le64p 99,3534
#define le64_to_cpup 100,3570
#define cpu_to_le32p 101,3606
#define le32_to_cpup 102,3642
#define cpu_to_le16p 103,3678
#define le16_to_cpup 104,3714
#define cpu_to_be64p 105,3750
#define be64_to_cpup 106,3786
#define cpu_to_be32p 107,3822
#define be32_to_cpup 108,3858
#define cpu_to_be16p 109,3894
#define be16_to_cpup 110,3930
#define cpu_to_le64s 111,3966
#define le64_to_cpus 112,4002
#define cpu_to_le32s 113,4038
#define le32_to_cpus 114,4074
#define cpu_to_le16s 115,4110
#define le16_to_cpus 116,4146
#define cpu_to_be64s 117,4182
#define be64_to_cpus 118,4218
#define cpu_to_be32s 119,4254
#define be32_to_cpus 120,4290
#define cpu_to_be16s 121,4326
#define be16_to_cpus 122,4362
#define ___htonl(___htonl157,5373
#define ___htons(___htons158,5410
#define ___ntohl(___ntohl159,5447
#define ___ntohs(___ntohs160,5484
#define htonl(htonl162,5522
#define htons(htons163,5568
#define ntohl(ntohl164,5597
#define ntohs(ntohs165,5643

include/linux/byteorder/little_endian.h,1969
#define _LINUX_BYTEORDER_LITTLE_ENDIAN_H2,41
#define __LITTLE_ENDIAN 5,107
#define __LITTLE_ENDIAN_BITFIELD8,176
#define __constant_htonl(__constant_htonl13,252
#define __constant_ntohl(__constant_ntohl14,295
#define __constant_htons(__constant_htons15,338
#define __constant_ntohs(__constant_ntohs16,381
#define __cpu_to_le64(__cpu_to_le6417,424
#define __le64_to_cpu(__le64_to_cpu18,462
#define __cpu_to_le32(__cpu_to_le3219,500
#define __le32_to_cpu(__le32_to_cpu20,538
#define __cpu_to_le16(__cpu_to_le1621,576
#define __le16_to_cpu(__le16_to_cpu22,614
#define __cpu_to_be64(__cpu_to_be6423,652
#define __be64_to_cpu(__be64_to_cpu24,691
#define __cpu_to_be32(__cpu_to_be3225,730
#define __be32_to_cpu(__be32_to_cpu26,769
#define __cpu_to_be16(__cpu_to_be1627,808
#define __be16_to_cpu(__be16_to_cpu28,847
#define __cpu_to_le64p(__cpu_to_le64p29,886
#define __le64_to_cpup(__le64_to_cpup30,927
#define __cpu_to_le32p(__cpu_to_le32p31,968
#define __le32_to_cpup(__le32_to_cpup32,1009
#define __cpu_to_le16p(__cpu_to_le16p33,1050
#define __le16_to_cpup(__le16_to_cpup34,1091
#define __cpu_to_be64p(__cpu_to_be64p35,1132
#define __be64_to_cpup(__be64_to_cpup36,1173
#define __cpu_to_be32p(__cpu_to_be32p37,1214
#define __be32_to_cpup(__be32_to_cpup38,1255
#define __cpu_to_be16p(__cpu_to_be16p39,1296
#define __be16_to_cpup(__be16_to_cpup40,1337
#define __cpu_to_le64s(__cpu_to_le64s41,1378
#define __le64_to_cpus(__le64_to_cpus42,1420
#define __cpu_to_le32s(__cpu_to_le32s43,1462
#define __le32_to_cpus(__le32_to_cpus44,1504
#define __cpu_to_le16s(__cpu_to_le16s45,1546
#define __le16_to_cpus(__le16_to_cpus46,1588
#define __cpu_to_be64s(__cpu_to_be64s47,1630
#define __be64_to_cpus(__be64_to_cpus48,1671
#define __cpu_to_be32s(__cpu_to_be32s49,1712
#define __be32_to_cpus(__be32_to_cpus50,1753
#define __cpu_to_be16s(__cpu_to_be16s51,1794
#define __be16_to_cpus(__be16_to_cpus52,1835

include/linux/byteorder/swab.h,1473
#define _LINUX_BYTEORDER_SWAB_H2,32
#define ___swab16(___swab1621,605
#define ___swab32(___swab3225,726
#define ___swab64(___swab6431,957
#  define __arch__swab16(__arch__swab1646,1625
#  define __arch__swab32(__arch__swab3249,1696
#  define __arch__swab64(__arch__swab6452,1767
#  define __arch__swab16p(__arch__swab16p56,1840
#  define __arch__swab32p(__arch__swab32p59,1915
#  define __arch__swab64p(__arch__swab64p62,1990
#  define __arch__swab16s(__arch__swab16s66,2066
#  define __arch__swab32s(__arch__swab32s69,2166
#  define __arch__swab64s(__arch__swab64s72,2266
#  define __swab16(__swab1680,2443
#  define __swab32(__swab3284,2542
#  define __swab64(__swab6488,2641
#  define __swab16(__swab1693,2746
#  define __swab32(__swab3294,2781
#  define __swab64(__swab6495,2816
extern __inline__ __const__ __u16 __fswab16(99,2875
extern __inline__ __u16 __swab16p(103,2959
extern __inline__ void __swab16s(107,3035
extern __inline__ __const__ __u32 __fswab32(112,3110
extern __inline__ __u32 __swab32p(116,3194
extern __inline__ void __swab32s(120,3270
extern __inline__ __const__ __u64 __fswab64(126,3374
extern __inline__ __u64 __swab64p(136,3632
extern __inline__ void __swab64s(140,3708
#define swab16 147,3842
#define swab32 148,3866
#define swab64 149,3890
#define swab16p 150,3914
#define swab32p 151,3940
#define swab64p 152,3966
#define swab16s 153,3992
#define swab32s 154,4018
#define swab64s 155,4044

include/linux/byteorder/swabb.h,1028
#define _LINUX_BYTEORDER_SWABB_H2,33
#define ___swahw32(___swahw3229,907
#define ___swahb32(___swahb3233,1041
#  define __arch__swahw32(__arch__swahw3242,1280
#  define __arch__swahb32(__arch__swahb3245,1354
#  define __arch__swahw32p(__arch__swahw32p49,1430
#  define __arch__swahb32p(__arch__swahb32p52,1508
#  define __arch__swahw32s(__arch__swahw32s56,1587
#  define __arch__swahb32s(__arch__swahb32s59,1690
#  define __swahw32(__swahw3267,1869
#  define __swahb32(__swahb3271,1971
#  define __swahw32(__swahw3276,2079
#  define __swahb32(__swahb3277,2116
extern __inline__ __const__ __u32 __fswahw32(81,2177
extern __inline__ __u32 __swahw32p(85,2263
extern __inline__ void __swahw32s(89,2341
extern __inline__ __const__ __u32 __fswahb32(95,2419
extern __inline__ __u32 __swahb32p(99,2505
extern __inline__ void __swahb32s(103,2583
#define swahw32 115,2777
#define swahb32 116,2803
#define swahw32p 117,2829
#define swahb32p 118,2857
#define swahw32s 119,2885
#define swahb32s 120,2913

include/linux/byteorder/pdp_endian.h,1981
#define _LINUX_BYTEORDER_PDP_ENDIAN_H2,38
#define __PDP_ENDIAN 24,910
#define __PDP_ENDIAN_BITFIELD27,973
#define __constant_htonl(__constant_htonl33,1081
#define __constant_ntohl(__constant_ntohl34,1125
#define __constant_htons(__constant_htons35,1169
#define __constant_ntohs(__constant_ntohs36,1212
#define __cpu_to_le64(__cpu_to_le6437,1255
#define __le64_to_cpu(__le64_to_cpu38,1293
#define __cpu_to_le32(__cpu_to_le3239,1331
#define __le32_to_cpu(__le32_to_cpu40,1372
#define __cpu_to_le16(__cpu_to_le1641,1413
#define __le16_to_cpu(__le16_to_cpu42,1450
#define __cpu_to_be64(__cpu_to_be6443,1487
#define __be64_to_cpu(__be64_to_cpu44,1525
#define __cpu_to_be32(__cpu_to_be3245,1563
#define __be32_to_cpu(__be32_to_cpu46,1603
#define __cpu_to_be16(__cpu_to_be1647,1643
#define __be16_to_cpu(__be16_to_cpu48,1682
#define __cpu_to_le64p(__cpu_to_le64p49,1721
#define __le64_to_cpup(__le64_to_cpup50,1760
#define __cpu_to_le32p(__cpu_to_le32p51,1799
#define __le32_to_cpup(__le32_to_cpup52,1842
#define __cpu_to_le16p(__cpu_to_le16p53,1885
#define __le16_to_cpup(__le16_to_cpup54,1926
#define __cpu_to_be64p(__cpu_to_be64p55,1967
#define __be64_to_cpup(__be64_to_cpup56,2006
#define __cpu_to_be32p(__cpu_to_be32p57,2045
#define __be32_to_cpup(__be32_to_cpup58,2087
#define __cpu_to_be16p(__cpu_to_be16p59,2129
#define __be16_to_cpup(__be16_to_cpup60,2170
#define __cpu_to_le64s(__cpu_to_le64s61,2211
#define __le64_to_cpus(__le64_to_cpus62,2250
#define __cpu_to_le32s(__cpu_to_le32s63,2289
#define __le32_to_cpus(__le32_to_cpus64,2332
#define __cpu_to_le16s(__cpu_to_le16s65,2375
#define __le16_to_cpus(__le16_to_cpus66,2417
#define __cpu_to_be64s(__cpu_to_be64s67,2459
#define __be64_to_cpus(__be64_to_cpus68,2498
#define __cpu_to_be32s(__cpu_to_be32s69,2537
#define __be32_to_cpus(__be32_to_cpus70,2579
#define __cpu_to_be16s(__cpu_to_be16s71,2621
#define __be16_to_cpus(__be16_to_cpus72,2662

include/linux/ntfs_fs_sb.h,72
#define _LINUX_NTFS_FS_SB_H2,28
struct ntfs_sb_info{ntfs_sb_info4,57

include/linux/coda_fs_i.h,263
#define _LINUX_CODA_FS_I9,105
#define CODA_CNODE_MAGIC 18,225
struct coda_inode_info coda_inode_info22,297
#define C_VATTR 36,1004
#define C_PURGE 37,1065
#define C_ZAPDIR 38,1091
#define C_DYING 39,1118
#define C_INITED 40,1176
#define C_FLUSH 41,1203

include/linux/wavefront.h,9373
#define __wavefront_h__2,24
     You will not be able to compile this file correctly without gcc,15,354
     of 22 bytes,17,503
     the case on the original platform, MS-DOS). If this is not done,18,575
     still have the same 24,890
#define NUM_MIDIKEYS 42,1471
#define NUM_MIDICHANNELS 46,1543
typedef short INT16;INT1656,1929
typedef unsigned short UINT16;UINT1657,1950
typedef int INT32;INT3258,1981
typedef unsigned int UINT32;UINT3259,2000
typedef char CHAR8;CHAR860,2029
typedef unsigned char UCHAR8;UCHAR861,2049
#define WFC_DEBUG_DRIVER 68,2221
#define WFC_FX_IOCTL 69,2263
#define WFC_PATCH_STATUS 70,2305
#define WFC_PROGRAM_STATUS 71,2347
#define WFC_SAMPLE_STATUS 72,2389
#define WFC_DISABLE_INTERRUPTS 73,2431
#define WFC_ENABLE_INTERRUPTS 74,2473
#define WFC_INTERRUPT_STATUS 75,2515
#define WFC_ROMSAMPLES_RDONLY 76,2557
#define WFC_IDENTIFY_SLOT_TYPE 77,2599
#define WFC_DOWNLOAD_SAMPLE	82,2675
#define WFC_DOWNLOAD_BLOCK	83,2709
#define WFC_DOWNLOAD_MULTISAMPLE	84,2742
#define WFC_DOWNLOAD_SAMPLE_ALIAS	85,2780
#define WFC_DELETE_SAMPLE	86,2819
#define WFC_REPORT_FREE_MEMORY	87,2851
#define WFC_DOWNLOAD_PATCH	88,2888
#define WFC_DOWNLOAD_PROGRAM	89,2921
#define WFC_SET_SYNTHVOL	90,2956
#define WFC_SET_NVOICES	91,2987
#define WFC_DOWNLOAD_DRUM	92,3018
#define WFC_GET_SYNTHVOL	93,3050
#define WFC_GET_NVOICES	94,3081
#define WFC_DISABLE_CHANNEL	95,3112
#define WFC_ENABLE_CHANNEL	96,3146
#define WFC_MISYNTH_OFF	97,3179
#define WFC_MISYNTH_ON	98,3210
#define WFC_FIRMWARE_VERSION	99,3240
#define WFC_GET_NSAMPLES	100,3275
#define WFC_DISABLE_DRUM_PROGRAM	101,3306
#define WFC_UPLOAD_PATCH	102,3344
#define WFC_UPLOAD_PROGRAM	103,3375
#define WFC_SET_TUNING	104,3408
#define WFC_GET_TUNING	105,3438
#define WFC_VMIDI_ON	106,3468
#define WFC_VMIDI_OFF	107,3496
#define WFC_MIDI_STATUS	108,3525
#define WFC_GET_CHANNEL_STATUS	109,3556
#define WFC_DOWNLOAD_SAMPLE_HEADER	110,3593
#define WFC_UPLOAD_SAMPLE_HEADER	111,3633
#define WFC_UPLOAD_MULTISAMPLE	112,3671
#define WFC_UPLOAD_SAMPLE_ALIAS	113,3708
#define WFC_IDENTIFY_SAMPLE_TYPE	114,3746
#define WFC_DOWNLOAD_EDRUM_PROGRAM	115,3784
#define WFC_UPLOAD_EDRUM_PROGRAM	116,3824
#define WFC_SET_EDRUM_CHANNEL	117,3862
#define WFC_INSTOUT_LEVELS	118,3898
#define WFC_PEAKOUT_LEVELS	119,3931
#define WFC_REPORT_CHANNEL_PROGRAMS	120,3964
#define WFC_HARDWARE_VERSION	121,4005
#define WFC_UPLOAD_SAMPLE_PARAMS	122,4040
#define WFC_DOWNLOAD_OS	123,4078
#define WFC_NOOP 124,4109
#define WF_MAX_SAMPLE 126,4155
#define WF_MAX_PATCH 127,4183
#define WF_MAX_PROGRAM 128,4211
#define WF_SECTION_MAX 130,4240
#define WF_PROGRAM_BYTES 136,4434
#define WF_PATCH_BYTES 137,4462
#define WF_SAMPLE_BYTES 138,4489
#define WF_SAMPLE_HDR_BYTES 139,4516
#define WF_ALIAS_BYTES 140,4547
#define WF_DRUM_BYTES 141,4573
#define WF_MSAMPLE_BYTES 142,4597
#define WF_ACK 144,4653
#define WF_DMA_ACK 145,4677
#define WF_MIDI_VIRTUAL_ENABLED 149,4740
#define WF_MIDI_VIRTUAL_IS_EXTERNAL 150,4776
#define WF_MIDI_IN_TO_SYNTH_DISABLED 151,4816
#define WF_SYNTH_SLOT 155,4937
#define WF_INTERNAL_MIDI_SLOT 156,4969
#define WF_EXTERNAL_MIDI_SLOT 157,5001
#define WF_EXTERNAL_SWITCH 165,5317
#define WF_INTERNAL_SWITCH 166,5350
#define WF_DEBUG_CMD 170,5407
#define WF_DEBUG_DATA 171,5432
#define WF_DEBUG_LOAD_PATCH 172,5458
#define WF_DEBUG_IO 173,5490
#define WF_WAVEPATCH_VERSION 177,5550
#define WF_MAX_COMMENT 178,5626
#define WF_NUM_LAYERS 179,5687
#define WF_NAME_LENGTH 180,5722
#define WF_SOURCE_LENGTH 181,5758
#define BankFileID 183,5796
#define DrumkitFileID 184,5826
#define ProgramFileID 185,5859
struct wf_envelopewf_envelope187,5893
typedef struct wf_envelope wavefront_envelope;wavefront_envelope222,6497
struct wf_lfowf_lfo224,6545
typedef struct wf_lfo wavefront_lfo;wavefront_lfo245,6887
struct wf_patchwf_patch247,6925
typedef struct wf_patch wavefront_patch;wavefront_patch300,7939
struct wf_layerwf_layer302,7981
typedef struct wf_layer wavefront_layer;wavefront_layer317,8218
struct wf_programwf_program319,8260
typedef struct wf_program wavefront_program;wavefront_program323,8325
struct wf_sample_offsetwf_sample_offset325,8371
typedef struct wf_sample_offset wavefront_sample_offset;wavefront_sample_offset331,8464
#define WF_ST_SAMPLE 335,8562
#define WF_ST_MULTISAMPLE 336,8590
#define WF_ST_ALIAS 337,8618
#define WF_ST_EMPTY 338,8646
#define WF_ST_DRUM 342,8691
#define WF_ST_PROGRAM 343,8719
#define WF_ST_PATCH 344,8747
#define WF_ST_SAMPLEHDR 345,8775
#define WF_ST_MASK 347,8804
#define WF_SLOT_USED 353,8931
#define WF_SLOT_FILLED 354,9008
#define WF_SLOT_ROM 355,9039
#define WF_SLOT_MASK 357,9071
#define WF_CH_MONO 361,9128
#define WF_CH_LEFT 362,9150
#define WF_CH_RIGHT 363,9172
#define LINEAR_16BIT 367,9217
#define WHITE_NOISE 368,9240
#define LINEAR_8BIT 369,9263
#define MULAW_8BIT 370,9286
#define WF_SAMPLE_IS_8BIT(WF_SAMPLE_IS_8BIT372,9310
#define WF_SET_CHANNEL(WF_SET_CHANNEL408,10533
#define WF_GET_CHANNEL(WF_GET_CHANNEL413,10665
typedef struct wf_sample wf_sample416,10763
} wavefront_sample;wavefront_sample429,11182
typedef struct wf_multisample wf_multisample431,11203
} wavefront_multisample;wavefront_multisample434,11338
typedef struct wf_alias wf_alias436,11364
} wavefront_alias;wavefront_alias464,12607
typedef struct wf_drum wf_drum466,12627
} wavefront_drum;wavefront_drum476,12862
typedef struct wf_drumkit wf_drumkit478,12881
} wavefront_drumkit;wavefront_drumkit480,12948
typedef struct wf_channel_programs wf_channel_programs482,12970
} wavefront_channel_programs;wavefront_channel_programs484,13045
#define WF_CHANNEL_STATUS(WF_CHANNEL_STATUS490,13207
typedef union wf_any wf_any492,13272
} wavefront_any;wavefront_any499,13443
typedef struct wf_patch_info wf_patch_info508,13778
#define WAVEFRONT_FIND_FREE_SAMPLE_SLOT WAVEFRONT_FIND_FREE_SAMPLE_SLOT518,14143
} wavefront_patch_info;wavefront_patch_info541,14884
#define WF_MAX_READ 548,15072
#define WF_MAX_WRITE 549,15122
typedef struct wavefront_control wavefront_control557,15367
} wavefront_control;wavefront_control562,15659
#define WFCTL_WFCMD 564,15681
#define WFCTL_LOAD_SPP 565,15708
#define WF_MOD_LFO1 569,15759
#define WF_MOD_LFO2 570,15786
#define WF_MOD_ENV1 571,15813
#define WF_MOD_ENV2 572,15840
#define WF_MOD_KEYBOARD 573,15867
#define WF_MOD_LOGKEY 574,15894
#define WF_MOD_VELOCITY 575,15921
#define WF_MOD_LOGVEL 576,15948
#define WF_MOD_RANDOM 577,15975
#define WF_MOD_PRESSURE 578,16002
#define WF_MOD_MOD_WHEEL 579,16029
#define WF_MOD_1 580,16057
#define WF_MOD_BREATH 581,16100
#define WF_MOD_2 582,16128
#define WF_MOD_FOOT 583,16167
#define WF_MOD_4 584,16195
#define WF_MOD_VOLUME 585,16232
#define WF_MOD_7 586,16260
#define WF_MOD_PAN 587,16299
#define WF_MOD_10 588,16327
#define WF_MOD_EXPR 589,16363
#define WF_MOD_11 590,16391
typedef struct wf_fx_info wf_fx_info594,16456
} wavefront_fx_info;wavefront_fx_info597,16588
#define WFFX_SETOUTGAIN	606,16919
#define WFFX_SETSTEREOOUTGAIN	607,16954
#define WFFX_SETREVERBIN1GAIN	608,16987
#define WFFX_SETREVERBIN2GAIN	609,17020
#define WFFX_SETREVERBIN3GAIN	610,17053
#define WFFX_SETCHORUSINPORT	611,17086
#define WFFX_SETREVERBIN1PORT	612,17118
#define WFFX_SETREVERBIN2PORT	613,17151
#define WFFX_SETREVERBIN3PORT	614,17184
#define WFFX_SETEFFECTPORT	615,17217
#define WFFX_SETAUXPORT	616,17247
#define WFFX_SETREVERBTYPE	617,17283
#define WFFX_SETREVERBDELAY	618,17314
#define WFFX_SETCHORUSLFO	619,17346
#define WFFX_SETCHORUSPMD	620,17376
#define WFFX_SETCHORUSAMD	621,17406
#define WFFX_SETEFFECT	622,17436
#define WFFX_SETBASEALL	623,17471
#define WFFX_SETREVERBALL	624,17507
#define WFFX_SETCHORUSALL	625,17537
#define WFFX_SETREVERBDEF	626,17567
#define WFFX_SETCHORUSDEF	627,17597
#define WFFX_DELAYSETINGAIN	628,17627
#define WFFX_DELAYSETFBGAIN	629,17659
#define WFFX_DELAYSETFBLPF	630,17698
#define WFFX_DELAYSETGAIN	631,17729
#define WFFX_DELAYSETTIME	632,17759
#define WFFX_DELAYSETFBTIME	633,17789
#define WFFX_DELAYSETALL	634,17821
#define WFFX_DELAYSETDEF	635,17850
#define WFFX_SDELAYSETINGAIN	636,17879
#define WFFX_SDELAYSETFBGAIN	637,17912
#define WFFX_SDELAYSETFBLPF	638,17945
#define WFFX_SDELAYSETGAIN	639,17977
#define WFFX_SDELAYSETTIME	640,18008
#define WFFX_SDELAYSETFBTIME	641,18039
#define WFFX_SDELAYSETALL	642,18072
#define WFFX_SDELAYSETDEF	643,18102
#define WFFX_DEQSETINGAIN	644,18132
#define WFFX_DEQSETFILTER	645,18162
#define WFFX_DEQSETALL	646,18192
#define WFFX_DEQSETDEF	647,18227
#define WFFX_MUTE	648,18262
#define WFFX_FLANGESETBALANCE	649,18292
#define WFFX_FLANGESETDELAY	650,18334
#define WFFX_FLANGESETDWFFX_TH	651,18366
#define WFFX_FLANGESETFBGAIN	652,18401
#define WFFX_FLANGESETINGAIN	653,18434
#define WFFX_FLANGESETLFO	654,18467
#define WFFX_FLANGESETALL	655,18497
#define WFFX_FLANGESETDEF	656,18527
#define WFFX_PITCHSETSHIFT	657,18557
#define WFFX_PITCHSETBALANCE	658,18588
#define WFFX_PITCHSETALL	659,18621
#define WFFX_PITCHSETDEF	660,18650
#define WFFX_SRSSETINGAIN	661,18679
#define WFFX_SRSSETSPACE	662,18709
#define WFFX_SRSSETCENTER	663,18738
#define WFFX_SRSSETGAIN	664,18768
#define WFFX_SRSSETMODE	665,18804
#define WFFX_SRSSETDEF	666,18840
#define WFFX_MEMSET 673,19079

include/linux/hfs_fs_sb.h,225
#define _LINUX_HFS_FS_SB_H12,322
typedef int (*hfs_namein_fn)hfs_namein_fn17,395
typedef void (*hfs_nameout_fn)hfs_nameout_fn18,459
typedef void (*hfs_ifill_fn)hfs_ifill_fn19,530
struct hfs_sb_info hfs_sb_info26,674

include/linux/adfs_fs_i.h,72
#define _ADFS_FS_I8,101
struct adfs_inode_info adfs_inode_info13,169

include/linux/hfs_sysdep.h,2509
#define _HFS_SYSDEP_H18,575
extern struct timezone sys_tz;28,752
#define offsetof(offsetof31,800
typedef __u8            hfs_u8;hfs_u834,916
typedef __u16           hfs_u16;hfs_u1635,948
typedef __u32           hfs_u32;hfs_u3236,981
typedef __s8            hfs_s8;hfs_s837,1014
typedef __s16           hfs_s16;hfs_s1638,1046
typedef __s32           hfs_s32;hfs_s3239,1079
typedef unsigned char hfs_byte_t;hfs_byte_t42,1156
typedef unsigned char hfs_word_t[hfs_word_t43,1190
typedef unsigned char hfs_lword_t[hfs_lword_t44,1227
#define hfs_warn(hfs_warn47,1332
#define hfs_error(hfs_error48,1404
extern long int hfs_alloc;52,1520
extern inline void *hfs_malloc(55,1555
extern inline void hfs_free(63,1787
extern inline hfs_u32 hfs_from_utc(78,2272
extern inline hfs_s32 hfs_to_utc(83,2368
extern inline hfs_u32 hfs_time(88,2461
typedef struct wait_queue *hfs_wait_queue;hfs_wait_queue96,2585
extern inline void hfs_init_waitqueue(98,2629
extern inline void hfs_sleep_on(102,2726
extern inline void hfs_wake_up(106,2804
extern inline void hfs_relinquish(110,2880
typedef struct super_block *hfs_sysmdb;hfs_sysmdb118,2961
extern inline void hfs_mdb_dirty(120,3002
extern inline char *hfs_mdb_name(124,3082
typedef struct dentry *hfs_sysentry[hfs_sysentry132,3198
typedef struct buffer_head *hfs_buffer;hfs_buffer137,3260
#define HFS_BAD_BUFFER 139,3301
extern inline int hfs_buffer_ok(144,3437
extern inline void hfs_buffer_put(148,3519
extern inline void hfs_buffer_dirty(152,3594
extern inline void hfs_buffer_sync(156,3685
extern inline void *hfs_buffer_data(166,3898
#	define BITNR(BITNR177,4054
#		define __constant_htonl(__constant_htonl179,4113
#		define __constant_htons(__constant_htons182,4187
#	define BITNR(BITNR185,4260
#		define __constant_htonl(__constant_htonl187,4318
#		define __constant_htons(__constant_htons194,4708
extern inline int hfs_clear_bit(202,4969
extern inline int hfs_set_bit(206,5082
extern inline int hfs_test_bit(210,5191
#define hfs_get_hs(hfs_get_hs232,6071
#define hfs_get_ns(hfs_get_ns233,6124
#define hfs_get_hl(hfs_get_hl234,6172
#define hfs_get_nl(hfs_get_nl235,6237
#define hfs_get_ahl(hfs_get_ahl236,6295
#define hfs_get_anl(hfs_get_anl237,6349
#define hfs_put_hs(hfs_put_hs238,6398
#define hfs_put_ns(hfs_put_ns239,6473
#define hfs_put_hl(hfs_put_hl240,6543
#define hfs_put_nl(hfs_put_nl241,6619
#define hfs_put_ahl(hfs_put_ahl242,6690
#define hfs_put_anl(hfs_put_anl243,6766

include/linux/if_ec.h,460
#define __LINUX_IF_EC4,61
struct ec_addrec_addr8,164
struct sockaddr_ecsockaddr_ec14,280
#define ECTYPE_PACKET_RECEIVED	24,521
#define ECTYPE_TRANSMIT_STATUS	25,577
#define ECTYPE_TRANSMIT_OK	28,675
#define ECTYPE_TRANSMIT_NOT_LISTENING	29,705
#define ECTYPE_TRANSMIT_NET_ERROR	30,745
#define ECTYPE_TRANSMIT_NO_CLOCK	31,781
#define ECTYPE_TRANSMIT_LINE_JAMMED	32,816
#define ECTYPE_TRANSMIT_NOT_PRESENT	33,854
struct econet_opteconet_opt37,912

include/linux/uts.h,141
#define _LINUX_UTS_H2,21
#define UTS_SYSNAME 8,113
#define UTS_MACHINE 12,169
#define UTS_NODENAME 16,228
#define UTS_DOMAINNAME 20,316

include/linux/parport_pc.h,1192
#define __LINUX_PARPORT_PC_H2,29
#define ECONTROL 8,144
#define CONFIGB 9,167
#define CONFIGA 10,190
#define EPPDATA 11,213
#define EPPADDR 12,234
#define CONTROL 13,255
#define STATUS 14,276
#define DATA 15,297
extern __inline__ void parport_pc_write_epp(20,380
extern __inline__ unsigned char parport_pc_read_epp(25,492
extern __inline__ void parport_pc_write_epp_addr(30,598
extern __inline__ unsigned char parport_pc_read_epp_addr(35,715
extern __inline__ int parport_pc_check_epp_timeout(40,826
extern __inline__ unsigned char parport_pc_read_configb(48,991
extern __inline__ void parport_pc_write_data(53,1101
extern __inline__ unsigned char parport_pc_read_data(58,1211
extern __inline__ void parport_pc_write_control(63,1315
extern __inline__ unsigned char parport_pc_read_control(68,1431
extern __inline__ unsigned char parport_pc_frob_control(73,1541
extern __inline__ void parport_pc_write_status(80,1764
extern __inline__ unsigned char parport_pc_read_status(85,1878
extern __inline__ void parport_pc_write_econtrol(90,1986
extern __inline__ unsigned char parport_pc_read_econtrol(95,2104
extern __inline__ unsigned char parport_pc_frob_econtrol(100,2216

include/linux/adfs_fs_sb.h,67
#define _ADFS_FS_SB8,103
struct adfs_sb_info adfs_sb_info15,205

include/linux/capability.h,2295
#define _LINUX_CAPABILITY_H10,216
#define _LINUX_CAPABILITY_VERSION 26,785
typedef struct __user_cap_header_struct __user_cap_header_struct28,832
} *cap_user_header_t;cap_user_header_t31,900
typedef struct __user_cap_data_struct __user_cap_data_struct33,924
} *cap_user_data_t;cap_user_data_t37,1041
typedef struct kernel_cap_struct kernel_cap_struct45,1154
} kernel_cap_t;kernel_cap_t47,1201
typedef __u32 kernel_cap_t;kernel_cap_t51,1225
#define _USER_CAP_HEADER_SIZE 55,1264
#define _KERNEL_CAP_T_SIZE 56,1313
#define CAP_CHOWN 69,1581
#define CAP_DAC_OVERRIDE 75,1761
#define CAP_DAC_READ_SEARCH 81,1997
#define CAP_FOWNER 87,2243
#define CAP_FSETID 96,2669
#define CAP_FS_MASK 100,2776
#define CAP_KILL 106,2993
#define CAP_SETGID 112,3144
#define CAP_SETUID 117,3289
#define CAP_SETPCAP 127,3489
#define CAP_LINUX_IMMUTABLE 131,3591
#define CAP_NET_BIND_SERVICE 135,3675
#define CAP_NET_BROADCAST 139,3755
#define CAP_NET_ADMIN 154,4316
#define CAP_NET_RAW 159,4415
#define CAP_IPC_LOCK 165,4581
#define CAP_IPC_OWNER 169,4651
#define CAP_SYS_MODULE 173,4724
#define CAP_SYS_RAWIO 177,4789
#define CAP_SYS_CHROOT 181,4851
#define CAP_SYS_PTRACE 185,4921
#define CAP_SYS_PACCT 189,5003
#define CAP_SYS_ADMIN 230,6814
#define CAP_SYS_BOOT 234,6876
#define CAP_SYS_NICE 242,7145
#define CAP_SYS_RESOURCE 254,7633
#define CAP_SYS_TIME 260,7779
#define CAP_SYS_TTY_CONFIG 265,7883
#define to_cap_t(to_cap_t275,8010
#define cap_t(cap_t276,8036
#define to_cap_t(to_cap_t280,8069
#define cap_t(cap_t281,8093
#define CAP_EMPTY_SET 285,8123
#define CAP_FULL_SET 286,8163
#define CAP_INIT_EFF_SET 287,8204
#define CAP_INIT_INH_SET 288,8273
#define CAP_TO_MASK(CAP_TO_MASK290,8343
#define cap_raise(cap_raise291,8377
#define cap_lower(cap_lower292,8439
#define cap_raised(cap_raised293,8501
static inline kernel_cap_t cap_combine(295,8564
static inline kernel_cap_t cap_intersect(302,8722
static inline kernel_cap_t cap_drop(309,8882
static inline kernel_cap_t cap_invert(316,9044
#define cap_isclear(cap_isclear323,9175
#define cap_issubset(cap_issubset324,9216
#define cap_clear(cap_clear326,9274
#define cap_set_full(cap_set_full327,9334
#define cap_mask(cap_mask328,9394
#define cap_is_fs_cap(cap_is_fs_cap330,9465

include/linux/videotext.h,1230
#define _VTX_H2,15
#define VTXIOCGETINFO 15,237
#define VTXIOCCLRPAGE 16,326
#define VTXIOCCLRFOUND 17,381
#define VTXIOCPAGEREQ 18,460
#define VTXIOCGETSTAT 19,513
#define VTXIOCGETPAGE 20,576
#define VTXIOCSTOPDAU 21,641
#define VTXIOCPUTPAGE 22,705
#define VTXIOCSETDISP 23,768
#define VTXIOCPUTSTAT 24,817
#define VTXIOCCLRCACHE 25,885
#define VTXIOCSETVIRT 26,963
#define SAA5243 33,1093
#define SAA5246 34,1111
#define SAA5249 35,1129
#define SAA5248 36,1147
#define XSTV5346 37,1165
vtx_info_t;vtx_info_t46,1511
#define MIN_UNIT 53,1625
#define MIN_TEN 54,1651
#define HR_UNIT 55,1677
#define HR_TEN 56,1703
#define PG_UNIT 57,1729
#define PG_TEN 58,1755
#define PG_HUND 59,1781
#define PGMASK_MAX 60,1807
#define PGMASK_PAGE 61,1833
#define PGMASK_HOUR 62,1882
#define PGMASK_MINUTE 63,1921
vtx_pagereq_t;vtx_pagereq_t76,2417
#define VTX_PAGESIZE 83,2486
#define VTX_VIRTUALSIZE 84,2517
vtx_pageinfo_t;vtx_pageinfo_t104,3282
} vtxdisp_t;vtxdisp_t113,3416
#define TUNIOCGETINFO 121,3457
#define TUNIOCRESET 122,3540
#define TUNIOCSETFREQ 123,3589
#define TUNIOCGETFREQ 124,3659
#define TUNIOCSETCHAN 125,3729
#define TUNIOCGETCHAN 126,3785
} tuner_info_t;tuner_info_t141,4491

include/linux/devpts_fs.h,248
#define _LINUX_DEVPTS_FS_H 20,696
#define unix98_max_ptys 30,888
unsigned int unix98_max_ptys 37,1109
extern unsigned int unix98_max_ptys;45,1371
devpts_pty_new(50,1459
devpts_pty_kill(57,1590
devpts_pty_new(67,1753
devpts_pty_kill(70,1817

include/linux/securebits.h,204
#define _LINUX_SECUREBITS_H 2,28
#define SECUREBITS_DEFAULT 4,59
extern unsigned securebits;6,98
#define SECURE_NOROOT 14,495
#define SECURE_NO_SETUID_FIXUP 19,731
#define issecure(issecure26,1002

include/linux/if_hippi.h,494
#define _LINUX_IF_HIPPI_H23,814
#define HIPPI_ALEN	31,903
#define HIPPI_HLEN	32,961
#define HIPPI_ZLEN	33,1005
#define HIPPI_DATA_LEN	34,1065
#define HIPPI_FRAME_LEN	35,1126
#define HIPPI_EXTENDED_SAP	41,1265
#define HIPPI_UI_CMD	42,1297
struct hipnet_statisticshipnet_statistics53,1427
struct hippi_fp_hdrhippi_fp_hdr79,2214
struct hippi_le_hdrhippi_le_hdr110,3009
#define HIPPI_OUI_LEN	136,3635
struct hippi_snap_hdrhippi_snap_hdr141,3766
struct hippi_hdrhippi_hdr150,4027

include/linux/hippidevice.h,36
#define _LINUX_HIPPIDEVICE_H24,884

include/linux/vt_buffer.h,601
#define _LINUX_VT_BUFFER_H_14,441
#define scr_writew(scr_writew23,575
#define scr_readw(scr_readw24,623
#define scr_memcpyw(scr_memcpyw25,657
#define scr_memmovew(scr_memmovew26,702
#define VT_BUF_HAVE_MEMCPYW27,749
#define VT_BUF_HAVE_MEMMOVEW28,777
#define scr_memcpyw_from(scr_memcpyw_from29,806
#define scr_memcpyw_to(scr_memcpyw_to30,856
#define VT_BUF_HAVE_MEMCPYF31,904
extern inline void scr_memsetw(35,968
extern inline void scr_memcpyw(44,1126
extern inline void scr_memmovew(53,1305
extern inline void scr_memcpyw_from(68,1566
extern inline void scr_memcpyw_to(75,1704

include/linux/pkt_cls.h,1670
#define __LINUX_PKT_CLS_H2,26
struct tc_policetc_police4,53
#define TC_POLICE_UNSPEC	8,103
#define TC_POLICE_OK	9,133
#define TC_POLICE_RECLASSIFY	10,157
#define TC_POLICE_SHOT	11,188
	TCA_POLICE_UNSPEC,22,328
	TCA_POLICE_TBF,23,348
	TCA_POLICE_RATE,24,365
	TCA_POLICE_PEAKRATE,25,383
	TCA_POLICE_AVRATE,26,405
	TCA_POLICE_RESULT27,425
#define TCA_POLICE_RESULT 28,444
#define TCA_POLICE_MAX 31,492
#define TC_U32_HTID(TC_U32_HTID35,553
#define TC_U32_USERHTID(TC_U32_USERHTID36,593
#define TC_U32_HASH(TC_U32_HASH37,641
#define TC_U32_NODE(TC_U32_NODE38,681
#define TC_U32_KEY(TC_U32_KEY39,716
#define TC_U32_UNSPEC	40,752
#define TC_U32_ROOT	41,776
	TCA_U32_UNSPEC,45,817
	TCA_U32_CLASSID,46,834
	TCA_U32_HASH,47,852
	TCA_U32_LINK,48,867
	TCA_U32_DIVISOR,49,882
	TCA_U32_SEL,50,900
	TCA_U32_POLICE,51,914
#define TCA_U32_MAX 54,935
struct tc_u32_keytc_u32_key56,971
struct tc_u32_seltc_u32_sel64,1048
#define TC_U32_TERMINAL	82,1268
#define TC_U32_OFFSET	83,1295
#define TC_U32_VAROFFSET	84,1320
#define TC_U32_EAT	85,1347
#define TC_U32_MAXDEPTH 87,1370
	TCA_RSVP_UNSPEC,94,1424
	TCA_RSVP_CLASSID,95,1442
	TCA_RSVP_DST,96,1461
	TCA_RSVP_SRC,97,1476
	TCA_RSVP_PINFO,98,1491
	TCA_RSVP_POLICE,99,1508
#define TCA_RSVP_MAX 102,1530
struct tc_rsvp_gpitc_rsvp_gpi104,1568
struct tc_rsvp_pinfotc_rsvp_pinfo111,1631
	TCA_ROUTE4_UNSPEC,124,1784
	TCA_ROUTE4_CLASSID,125,1804
	TCA_ROUTE4_TO,126,1825
	TCA_ROUTE4_FROM,127,1841
	TCA_ROUTE4_IIF,128,1859
	TCA_ROUTE4_POLICE,129,1876
#define TCA_ROUTE4_MAX 132,1900
	TCA_FW_UNSPEC,139,1967
	TCA_FW_CLASSID,140,1983
	TCA_FW_POLICE,141,2000
#define TCA_FW_MAX 144,2020

include/linux/quotaops.h,968
#define _LINUX_QUOTAOPS_11,278
extern __inline__ void DQUOT_INIT(40,1278
extern __inline__ void DQUOT_DROP(46,1423
extern __inline__ int DQUOT_PREALLOC_BLOCK(54,1591
extern __inline__ int DQUOT_ALLOC_BLOCK(64,1857
extern __inline__ int DQUOT_ALLOC_INODE(74,2120
extern __inline__ void DQUOT_FREE_BLOCK(85,2377
extern __inline__ void DQUOT_FREE_INODE(91,2567
extern __inline__ int DQUOT_TRANSFER(97,2708
#define DQUOT_SYNC(DQUOT_SYNC116,3276
#define DQUOT_OFF(DQUOT_OFF117,3321
#define DQUOT_INIT(DQUOT_INIT124,3414
#define DQUOT_DROP(DQUOT_DROP125,3458
#define DQUOT_PREALLOC_BLOCK(DQUOT_PREALLOC_BLOCK126,3502
#define DQUOT_ALLOC_BLOCK(DQUOT_ALLOC_BLOCK127,3550
#define DQUOT_ALLOC_INODE(DQUOT_ALLOC_INODE128,3595
#define DQUOT_FREE_BLOCK(DQUOT_FREE_BLOCK129,3637
#define DQUOT_FREE_INODE(DQUOT_FREE_INODE130,3694
#define DQUOT_SYNC(DQUOT_SYNC131,3747
#define DQUOT_OFF(DQUOT_OFF132,3790
#define DQUOT_TRANSFER(DQUOT_TRANSFER137,3891

include/linux/linux_logo.h,839
unsigned char linux_logo_red[23,744
unsigned char linux_logo_red[] __initdata 23,744
unsigned char linux_logo_green[53,2131
unsigned char linux_logo_green[] __initdata 53,2131
unsigned char linux_logo_blue[83,3520
unsigned char linux_logo_blue[] __initdata 83,3520
unsigned char linux_logo[113,4908
unsigned char linux_logo[] __initdata 113,4908
unsigned char linux_logo_bw[920,44990
unsigned char linux_logo_bw[] __initdata 920,44990
unsigned char linux_logo16_red[1027,50076
unsigned char linux_logo16_red[] __initdata 1027,50076
unsigned char linux_logo16_green[1032,50231
unsigned char linux_logo16_green[] __initdata 1032,50231
unsigned char linux_logo16_blue[1037,50388
unsigned char linux_logo16_blue[] __initdata 1037,50388
unsigned char linux_logo16[1042,50544
unsigned char linux_logo16[] __initdata 1042,50544

include/linux/errqueue.h,350
#define _LINUX_ERRQUEUE_H 2,26
struct sock_extended_errsock_extended_err6,82
#define SO_EE_ORIGIN_NONE	17,228
#define SO_EE_ORIGIN_LOCAL	18,256
#define SO_EE_ORIGIN_ICMP	19,285
#define SO_EE_ORIGIN_ICMP6	20,313
#define SO_EE_OFFENDER(SO_EE_OFFENDER22,343
#define SKB_EXT_ERR(SKB_EXT_ERR25,418
struct sock_exterr_skbsock_exterr_skb27,485

include/linux/hayesesp.h,1950
#define HAYESESP_H2,19
struct hayes_esp_config hayes_esp_config4,39
#define ESP_DMA_CHANNEL 16,227
#define ESP_RX_TRIGGER 17,255
#define ESP_TX_TRIGGER 18,285
#define ESP_FLOW_OFF 19,315
#define ESP_FLOW_ON 20,346
#define ESP_RX_TMOUT 21,376
#define ESP_PIO_THRESHOLD 22,406
#define ESP_IN_MAJOR	24,436
#define ESP_OUT_MAJOR	25,490
#define ESPC_SCALE 26,546
#define UART_ESI_BASE	27,568
#define UART_ESI_SID	28,595
#define UART_ESI_RX	29,621
#define UART_ESI_TX	30,646
#define UART_ESI_CMD1	31,671
#define UART_ESI_CMD2	32,698
#define UART_ESI_STAT1	33,725
#define UART_ESI_STAT2	34,753
#define UART_ESI_RWS	35,781
#define UART_IER_DMA_TMOUT	37,808
#define UART_IER_DMA_TC	38,840
#define ESI_SET_IRQ	40,871
#define ESI_SET_DMA_TMOUT	41,897
#define ESI_SET_SRV_MASK	42,928
#define ESI_SET_ERR_MASK	43,958
#define ESI_SET_FLOW_CNTL	44,988
#define ESI_SET_FLOW_CHARS	45,1019
#define ESI_SET_FLOW_LVL	46,1051
#define ESI_SET_TRIGGER	47,1081
#define ESI_SET_RX_TIMEOUT	48,1111
#define ESI_SET_FLOW_TMOUT	49,1143
#define ESI_WRITE_UART	50,1175
#define ESI_READ_UART	51,1204
#define ESI_SET_MODE	52,1232
#define ESI_GET_ERR_STAT	53,1259
#define ESI_GET_UART_STAT	54,1289
#define ESI_GET_RX_AVAIL	55,1320
#define ESI_GET_TX_AVAIL	56,1350
#define ESI_START_DMA_RX	57,1380
#define ESI_START_DMA_TX	58,1410
#define ESI_ISSUE_BREAK	59,1440
#define ESI_FLUSH_RX	60,1470
#define ESI_FLUSH_TX	61,1497
#define ESI_SET_BAUD	62,1524
#define ESI_SET_ENH_IRQ	63,1551
#define ESI_SET_REINTR	64,1581
#define ESI_SET_PRESCALAR	65,1610
#define ESI_NO_COMMAND	66,1641
#define ESP_STAT_RX_TIMEOUT	68,1671
#define ESP_STAT_DMA_RX	69,1704
#define ESP_STAT_DMA_TX	70,1734
#define ESP_STAT_NEVER_DMA 71,1764
#define ESP_STAT_USE_PIO 72,1801
#define ESP_EVENT_WRITE_WAKEUP	74,1839
#define ESP_MAGIC	75,1872
#define ESP_XMIT_SIZE	76,1898
struct esp_struct esp_struct78,1927
struct esp_pio_buffer esp_pio_buffer118,3113

include/linux/amifdreg.h,1017
#define _LINUX_AMIFDREG_H2,26
#define DSKRDY 8,88
#define DSKTRACK0 9,150
#define DSKPROT 10,220
#define DSKCHANGE 11,286
#define DSKMOTOR 17,387
#define DSKSEL3 18,447
#define DSKSEL2 19,513
#define DSKSEL1 20,579
#define DSKSEL0 21,645
#define DSKSIDE 22,711
#define DSKDIREC 23,790
#define DSKSTEP 24,871
#define DSKBYT 30,980
#define DMAON 31,1060
#define DISKWRITE 32,1119
#define WORDEQUAL 33,1194
#define ADK_SETCLR 41,1339
#define ADK_PRECOMP1 43,1400
#define ADK_PRECOMP0 44,1468
#define ADK_MFMPREC 45,1548
#define ADK_WORDSYNC 46,1621
#define ADK_MSBSYNC 47,1687
#define ADK_FAST 48,1768
#define DSKLEN_DMAEN 54,1869
#define DSKLEN_WRITE 55,1901
#define DSKINDEX 61,1963
#define MFM_SYNC 67,2035
#define FD_RECALIBRATE	70,2130
#define FD_SEEK	71,2181
#define FD_READ	72,2221
#define FD_WRITE	73,2282
#define FD_SENSEI	74,2330
#define FD_SPECIFY	75,2383
#define FD_FORMAT	76,2430
#define FD_VERSION	77,2477
#define FD_CONFIGURE	78,2525
#define FD_PERPENDICULAR	79,2583

include/linux/bitops.h,243
#define _LINUX_BITOPS_H2,24
extern __inline__ int generic_ffs(11,226
extern __inline__ unsigned int generic_hweight32(45,631
extern __inline__ unsigned int generic_hweight16(54,1022
extern __inline__ unsigned int generic_hweight8(62,1318

include/linux/dio.h,3878
#define _LINUX_DIO_H14,434
#define DIO_IDOFF 34,1379
#define DIO_IPLOFF 35,1453
#define DIO_SECIDOFF 36,1534
#define DIOII_SIZEOFF 37,1610
#define DIO_IHPIBADDR 43,1915
#define DIO_IHPIBSCODE 44,1945
#define CONFIG_IHPIB 50,2202
#define DIO_ISIHPIB(DIO_ISIHPIB52,2292
#define DIO_ISIHPIB(DIO_ISIHPIB54,2353
#define DIO_VIRADDRBASE 57,2390
#define DIO_BASE 59,2480
#define DIO_END 60,2553
#define DIO_DEVSIZE 61,2624
#define DIOII_BASE 63,2700
#define DIOII_END 64,2776
#define DIOII_DEVSIZE 65,2850
#define DIO_SCMAX 70,3063
#define DIOII_SCBASE 71,3113
#define DIO_SCINHOLE(DIO_SCINHOLE72,3170
#define DIO_ID(DIO_ID75,3297
#define DIO_SECID(DIO_SECID76,3352
#define DIO_IPL(DIO_IPL79,3448
#define DIOII_SIZE(DIOII_SIZE84,3620
#define DIO_SIZE(DIO_SIZE87,3755
#define DIO_ENCODE_ID(DIO_ENCODE_ID94,4096
#define DIO_NEEDSSECID(DIO_NEEDSSECID96,4253
#define DIO_ID_DCA0 99,4382
#define DIO_DESC_DCA0 100,4431
#define DIO_ID_DCA0REM 101,4474
#define DIO_DESC_DCA0REM 102,4523
#define DIO_ID_DCA1 103,4572
#define DIO_DESC_DCA1 104,4621
#define DIO_ID_DCA1REM 105,4664
#define DIO_DESC_DCA1REM 106,4713
#define DIO_ID_DCM 107,4762
#define DIO_DESC_DCM 108,4815
#define DIO_ID_DCMREM 109,4860
#define DIO_DESC_DCMREM 110,4913
#define DIO_ID_LAN 111,4964
#define DIO_DESC_LAN 112,5010
#define DIO_ID_FHPIB 113,5044
#define DIO_DESC_FHPIB 114,5104
#define DIO_ID_NHPIB 115,5153
#define DIO_DESC_NHPIB 116,5218
#define DIO_ID_IHPIB 117,5255
#define DIO_DESC_IHPIB 118,5341
#define DIO_ID_SCSI0 119,5380
#define DIO_DESC_SCSI0 120,5427
#define DIO_ID_SCSI1 121,5465
#define DIO_DESC_SCSI1 122,5506
#define DIO_ID_SCSI2 123,5544
#define DIO_DESC_SCSI2 124,5585
#define DIO_ID_SCSI3 125,5623
#define DIO_DESC_SCSI3 126,5664
#define DIO_ID_FBUFFER 127,5702
#define DIO_DESC_FBUFFER 128,5791
#define DIO_ID_MISC0 130,5925
#define DIO_DESC_MISC0 131,5967
#define DIO_ID_MISC1 132,5999
#define DIO_DESC_MISC1 133,6041
#define DIO_ID_PARALLEL 134,6073
#define DIO_DESC_PARALLEL 135,6126
#define DIO_ID_MISC2 136,6172
#define DIO_DESC_MISC2 137,6223
#define DIO_ID_MISC3 138,6264
#define DIO_DESC_MISC3 139,6323
#define DIO_ID_MISC4 140,6372
#define DIO_DESC_MISC4 141,6413
#define DIO_ID_MISC5 142,6444
#define DIO_DESC_MISC5 143,6486
#define DIO_ID_MISC6 144,6518
#define DIO_DESC_MISC6 145,6560
#define DIO_ID_MISC7 146,6592
#define DIO_DESC_MISC7 147,6639
#define DIO_ID_MISC8 148,6676
#define DIO_DESC_MISC8 149,6726
#define DIO_ID_MISC9 150,6766
#define DIO_DESC_MISC9 151,6808
#define DIO_ID_MISC10 152,6840
#define DIO_DESC_MISC10 153,6882
#define DIO_ID_MISC11 154,6915
#define DIO_DESC_MISC11 155,6957
#define DIO_ID_MISC12 156,6990
#define DIO_DESC_MISC12 157,7032
#define DIO_ID_MISC13 158,7065
#define DIO_DESC_MISC13 159,7105
#define DIO_ID_VME 160,7136
#define DIO_DESC_VME 161,7190
#define DIO_ID_DCL 162,7232
#define DIO_DESC_DCL 163,7281
#define DIO_ID_DCLREM 164,7322
#define DIO_DESC_DCLREM 165,7371
#define DIO_ID2_GATORBOX 167,7473
#define DIO_DESC2_GATORBOX 168,7535
#define DIO_ID2_TOPCAT 169,7603
#define DIO_DESC2_TOPCAT 170,7669
#define DIO_ID2_RENAISSANCE 171,7741
#define DIO_DESC2_RENAISSANCE 172,7806
#define DIO_ID2_LRCATSEYE 173,7877
#define DIO_DESC2_LRCATSEYE 174,7933
#define DIO_ID2_HRCCATSEYE 175,7992
#define DIO_DESC2_HRCCATSEYE 176,8056
#define DIO_ID2_HRMCATSEYE 177,8122
#define DIO_DESC2_HRMCATSEYE 178,8184
#define DIO_ID2_DAVINCI 179,8249
#define DIO_DESC2_DAVINCI 180,8310
#define DIO_ID2_XXXCATSEYE 181,8377
#define DIO_DESC2_XXXCATSEYE 182,8426
#define DIO_ID2_HYPERION 183,8477
#define DIO_DESC2_HYPERION 184,8534
#define DIO_ID2_XGENESIS 185,8597
#define DIO_DESC2_XGENESIS 186,8667
#define DIO_ID2_TIGER 187,8724
#define DIO_DESC2_TIGER 188,8790
#define DIO_ID2_YGENESIS 189,8843
#define DIO_DESC2_YGENESIS 190,8913

include/linux/atari_rootsec.h,116
#define _LINUX_ATARI_ROOTSEC_H2,31
struct partition_infopartition_info14,368
struct rootsectorrootsector22,577

include/linux/qnx4_fs_i.h,73
#define _QNX4_FS_I12,329
struct qnx4_inode_info qnx4_inode_info19,409

include/linux/qnx4_fs_sb.h,68
#define _QNX4_FS_SB12,336
struct qnx4_sb_info qnx4_sb_info20,429

include/linux/qnxtypes.h,346
#define _QNX4TYPES_H13,327
typedef unsigned short _nxtnt_t;_nxtnt_t15,349
typedef unsigned char _ftype_t;_ftype_t16,382
} _xtnt_t;_xtnt_t21,465
typedef unsigned short muid_t;muid_t23,477
typedef unsigned short mgid_t;mgid_t24,508
typedef unsigned long qnx_off_t;qnx_off_t25,539
typedef unsigned short qnx_nlink_t;qnx_nlink_t26,572

include/linux/ip_masq.h,1245
#define _LINUX_IP_MASQ_H7,129
struct ip_masq_user ip_masq_user17,281
#define IP_MASQ_USER_F_LISTEN	30,665
#define IP_MASQ_USER_F_DEAD	31,732
#define IP_MASQ_USER_F_FORCE	32,784
struct ip_masq_timeout ip_masq_timeout34,841
#define IP_FWD_RANGE 56,1177
#define IP_FWD_PORT	57,1202
#define IP_FWD_DIRECT	58,1225
#define IP_AUTOFW_ACTIVE	60,1251
#define IP_AUTOFW_USETIME	61,1278
#define IP_AUTOFW_SECURE	62,1306
struct ip_autofw_user ip_autofw_user66,1397
struct ip_portfw_user ip_portfw_user85,1707
struct ip_mfw_user ip_mfw_user95,1961
#define IP_MASQ_MFW_SCHED	104,2273
#define IP_FW_MASQCTL_MAX 106,2305
#define IP_MASQ_TNAME_MAX 107,2335
struct ip_masq_ctl ip_masq_ctl109,2366
#define IP_MASQ_CTL_BSIZE 122,2642
#define IP_MASQ_TARGET_CORE	124,2703
#define IP_MASQ_TARGET_MOD	125,2733
#define IP_MASQ_TARGET_USER	126,2799
#define IP_MASQ_TARGET_LAST	127,2830
#define IP_MASQ_CMD_NONE	129,2861
#define IP_MASQ_CMD_INSERT	130,2904
#define IP_MASQ_CMD_ADD	131,2933
#define IP_MASQ_CMD_SET	132,2960
#define IP_MASQ_CMD_DEL	133,2987
#define IP_MASQ_CMD_GET	134,3014
#define IP_MASQ_CMD_FLUSH	135,3041
#define IP_MASQ_CMD_LIST	136,3069
#define IP_MASQ_CMD_ENABLE	137,3132
#define IP_MASQ_CMD_DISABLE	138,3161

include/linux/serial167.h,2889
struct cyclades_monitor cyclades_monitor9,99
struct cyclades_port cyclades_port25,516
#define CYCLADES_MAGIC 62,1648
#define CYGETMON 64,1680
#define CYGETTHRESH 65,1721
#define CYSETTHRESH 66,1762
#define CYGETDEFTHRESH 67,1803
#define CYSETDEFTHRESH 68,1844
#define CYGETTIMEOUT 69,1885
#define CYSETTIMEOUT 70,1926
#define CYGETDEFTIMEOUT 71,1967
#define CYSETDEFTIMEOUT 72,2008
#define Cy_EVENT_READ_PROCESS	78,2166
#define Cy_EVENT_WRITE_WAKEUP	79,2198
#define Cy_EVENT_HANGUP	80,2230
#define Cy_EVENT_BREAK	81,2257
#define Cy_EVENT_OPEN_WAKEUP	82,2283
#define CyMaxChipsPerCard 86,2317
#define CyGFRCR 90,2376
#define CyCCR	91,2407
#define      CyCLR_CHAN	92,2429
#define      CyINIT_CHAN	93,2461
#define      CyCHIP_RESET	94,2493
#define      CyENB_XMTR	95,2526
#define      CyDIS_XMTR	96,2558
#define      CyENB_RCVR	97,2590
#define      CyDIS_RCVR	98,2622
#define CyCAR	99,2654
#define CyIER	100,2676
#define      CyMdmCh	101,2698
#define      CyRxExc	102,2727
#define      CyRxData	103,2756
#define      CyTxMpty	104,2786
#define      CyTxRdy	105,2816
#define CyLICR	106,2845
#define CyRISR	107,2868
#define      CyTIMEOUT	108,2891
#define      CySPECHAR	109,2922
#define      CyOVERRUN	110,2953
#define      CyPARITY	111,2984
#define      CyFRAME	112,3014
#define      CyBREAK	113,3043
#define CyREOIR	114,3072
#define CyTEOIR	115,3096
#define CyMEOIR	116,3120
#define      CyNOTRANS	117,3144
#define CyRFOC	118,3175
#define CyRDR	119,3198
#define CyTDR	120,3220
#define CyMISR	121,3242
#define CyRISR	122,3265
#define CyTISR	123,3288
#define CyMSVR1	124,3311
#define CyMSVR2	125,3335
#define      CyDSR	126,3359
#define      CyDCD	127,3386
#define      CyCTS	128,3413
#define      CyDTR	129,3440
#define      CyRTS	130,3467
#define CyRTPRL	131,3494
#define CyRTPRH	132,3518
#define CyCOR1	133,3542
#define      CyPARITY_NONE	134,3565
#define      CyPARITY_E	135,3599
#define      CyPARITY_O	136,3631
#define      Cy_5_BITS	137,3663
#define      Cy_6_BITS	138,3694
#define      Cy_7_BITS	139,3725
#define      Cy_8_BITS	140,3756
#define CyCOR2	141,3787
#define      CyETC	142,3810
#define      CyCtsAE	143,3837
#define CyCOR3	144,3866
#define      Cy_1_STOP	145,3889
#define      Cy_2_STOP	146,3920
#define CyCOR4	147,3951
#define      CyREC_FIFO	148,3974
#define CyCOR5	149,4036
#define CyCOR6	150,4059
#define CyCOR7	151,4082
#define CyRBPR	152,4105
#define CyRCOR	153,4128
#define CyTBPR	154,4151
#define CyTCOR	155,4174
#define CySCHR1	156,4197
#define CySCHR2 157,4221
#define CyTPR	158,4245
#define CyPILR1	159,4267
#define CyPILR2	160,4291
#define CyPILR3	161,4315
#define CyCMR	162,4339
#define      CyASYNC	163,4361
#define CyLICR 164,4390
#define CyLIVR 165,4421
#define CySCRL	166,4452
#define CySCRH	167,4475
#define CyTFTC	168,4498
#define CyMAX_CHAR_FIFO	173,4562

include/linux/isicom.h,1976
#define _LINUX_ISICOM_H2,24
#define		__MultiTech	12,155
#define		MIOCTL_LOAD_FIRMWARE	13,186
#define         MIOCTL_READ_FIRMWARE 14,237
#define         MIOCTL_XFER_CTRL	15,298
#define         MIOCTL_RESET_CARD	16,352
#define		DATA_SIZE	18,408
}	exec_record;exec_record23,507
}	bin_header;bin_header29,622
}	bin_frame;bin_frame37,799
#define		YES	41,832
#define		NO	42,847
#define		ISILOAD_MISC_MINOR	44,862
#define		ISILOAD_NAME	45,911
#define		ISICOM_NAME	52,991
#define		ISICOM_NMAJOR	58,1076
#define		ISICOM_CMAJOR	59,1117
#define		ISICOM_MAGIC	60,1158
#define		WAKEUP_CHARS	62,1200
#define		TX_SIZE	63,1252
#define		BOARD_COUNT	65,1277
#define		PORT_COUNT	66,1300
#define		SERIAL_TYPE_NORMAL	68,1338
#define		SERIAL_TYPE_CALLOUT	69,1368
#define		ISICOM_CS5	73,1426
#define		ISICOM_CS6	74,1454
#define		ISICOM_CS7	75,1482
#define		ISICOM_CS8	76,1510
#define		ISICOM_1SB	80,1556
#define		ISICOM_2SB	81,1584
#define		ISICOM_NOPAR	85,1627
#define		ISICOM_ODPAR	86,1657
#define		ISICOM_EVPAR	87,1687
#define		ISICOM_CTSRTS	91,1738
#define		ISICOM_INITIATE_XONXOFF	92,1767
#define		ISICOM_RESPOND_XONXOFF	93,1805
#define InterruptTheCard(InterruptTheCard95,1843
#define ClearInterrupt(ClearInterrupt96,1896
#define	BOARD(BOARD98,1946
#define MIN(MIN99,1989
#define		ISICOM_KILLTX	103,2065
#define		ISICOM_KILLRX	104,2094
#define		FIRMWARE_LOADED	108,2157
#define		BOARD_ACTIVE	109,2190
#define		ISI_CTS	113,2254
#define		ISI_DSR	114,2280
#define		ISI_RI	115,2306
#define		ISI_DCD	116,2331
#define		ISI_DTR	117,2357
#define		ISI_RTS	118,2383
#define		ISI_TXOK	121,2411
struct	isi_board isi_board123,2440
struct	isi_port isi_port134,2708
extern inline void raise_dtr(164,3310
extern inline void drop_dtr(184,3867
extern inline void raise_rts(203,4423
extern inline void drop_rts(222,4980
extern inline void raise_dtr_rts(241,5535
extern inline void drop_dtr_rts(260,6115
extern inline void kill_queue(280,6695

include/linux/smp.h,680
#define __LINUX_SMP_H2,22
extern int smp_threads_ready;47,740
extern int smp_num_cpus;49,771
extern volatile unsigned long smp_msg_data;51,797
extern volatile int smp_src_cpu;52,841
extern volatile int smp_msg_id;53,874
#define MSG_ALL_BUT_SELF	55,907
#define MSG_ALL	56,965
#define MSG_INVALIDATE_TLB	58,991
#define MSG_STOP_CPU	59,1063
#define MSG_RESCHEDULE	62,1157
#define MSG_MTRR_CHANGE 63,1228
#define smp_num_cpus	71,1371
#define smp_processor_id(smp_processor_id72,1396
#define hard_smp_processor_id(hard_smp_processor_id73,1426
#define smp_threads_ready	74,1461
#define kernel_lock(kernel_lock75,1490
#define cpu_logical_map(cpu_logical_map76,1512

include/linux/firewall.h,401
#define __LINUX_FIREWALL_H2,27
#define FW_QUEUE	10,135
#define FW_BLOCK	11,154
#define FW_ACCEPT	12,173
#define FW_REJECT	13,193
#define FW_REDIRECT	14,216
#define FW_MASQUERADE	15,238
#define FW_SKIP	16,262
struct firewall_opsfirewall_ops18,282
extern __inline__ int call_fw_firewall(44,1476
extern __inline__ int call_in_firewall(49,1612
extern __inline__ int call_out_firewall(54,1748

include/linux/dtlk.h,696
#define TRACE_TXT(TRACE_TXT3,7
#define TRACE_CHR(TRACE_CHR12,132
#define DTLK_MINOR	20,223
#define DTLK_IO_EXTENT	21,244
#define DTLK_INTERROGATE 24,313
#define DTLK_STATUS 25,384
#define DTLK_CLEAR 28,450
#define DTLK_MAX_RETRIES 30,495
#define TTS_READABLE 33,572
#define TTS_SPEAKING 35,685
#define TTS_SPEAKING2 40,899
#define TTS_WRITABLE 43,1023
#define TTS_ALMOST_FULL 49,1335
#define TTS_ALMOST_EMPTY 54,1557
#define LPC_5220_NORMAL 62,1822
#define LPC_5220_FAST 63,1897
#define LPC_D6_NORMAL 64,1968
#define LPC_D6_FAST 65,2039
#define LPC_SPEAKING 69,2196
#define LPC_BUFFER_LOW 72,2328
#define LPC_BUFFER_EMPTY 77,2545
struct dtlk_settingsdtlk_settings83,2769

include/linux/synclink.h,5039
#define _SYNCLINK_H_11,227
#define BOOLEAN 13,249
#define TRUE 14,269
#define FALSE 15,284
#define BIT0	17,301
#define BIT1	18,321
#define BIT2	19,341
#define BIT3	20,361
#define BIT4	21,381
#define BIT5	22,401
#define BIT6	23,421
#define BIT7	24,441
#define BIT8	25,461
#define BIT9	26,481
#define BIT10	27,501
#define BIT11	28,522
#define BIT12	29,543
#define BIT13	30,564
#define BIT14	31,585
#define BIT15	32,606
#define BIT16	33,627
#define BIT17	34,652
#define BIT18	35,677
#define BIT19	36,702
#define BIT20	37,727
#define BIT21	38,752
#define BIT22	39,777
#define BIT23	40,802
#define BIT24	41,827
#define BIT25	42,852
#define BIT26	43,877
#define BIT27	44,902
#define BIT28	45,927
#define BIT29	46,952
#define BIT30	47,977
#define BIT31	48,1002
#define HDLC_MAX_FRAME_SIZE	51,1029
#define MAX_ASYNC_TRANSMIT	52,1062
#define ASYNC_PARITY_NONE	54,1095
#define ASYNC_PARITY_EVEN	55,1124
#define ASYNC_PARITY_ODD	56,1153
#define ASYNC_PARITY_SPACE	57,1181
#define HDLC_FLAG_UNDERRUN_ABORT7	59,1212
#define HDLC_FLAG_UNDERRUN_ABORT15	60,1253
#define HDLC_FLAG_UNDERRUN_FLAG	61,1295
#define HDLC_FLAG_UNDERRUN_CRC	62,1335
#define HDLC_FLAG_SHARE_ZERO	63,1374
#define HDLC_FLAG_AUTO_CTS	64,1411
#define HDLC_FLAG_AUTO_DCD	65,1446
#define HDLC_FLAG_AUTO_RTS	66,1481
#define HDLC_FLAG_RXC_DPLL	67,1516
#define HDLC_FLAG_RXC_BRG	68,1551
#define HDLC_FLAG_TXC_DPLL	69,1585
#define HDLC_FLAG_TXC_BRG	70,1620
#define HDLC_FLAG_DPLL_DIV8	71,1654
#define HDLC_FLAG_DPLL_DIV16	72,1690
#define HDLC_FLAG_DPLL_DIV32	73,1727
#define HDLC_CRC_NONE	75,1765
#define HDLC_CRC_16_CCITT	76,1791
#define HDLC_TXIDLE_FLAGS	78,1821
#define HDLC_TXIDLE_ALT_ZEROS_ONES	79,1850
#define HDLC_TXIDLE_ZEROS	80,1887
#define HDLC_TXIDLE_ONES	81,1916
#define HDLC_TXIDLE_ALT_MARK_SPACE	82,1944
#define HDLC_TXIDLE_SPACE	83,1981
#define HDLC_TXIDLE_MARK	84,2010
#define HDLC_ENCODING_NRZ	86,2039
#define HDLC_ENCODING_NRZB	87,2069
#define HDLC_ENCODING_NRZI_MARK	88,2100
#define HDLC_ENCODING_NRZI_SPACE	89,2136
#define HDLC_ENCODING_BIPHASE_MARK	90,2172
#define HDLC_ENCODING_BIPHASE_SPACE	91,2210
#define HDLC_ENCODING_BIPHASE_LEVEL	92,2249
#define HDLC_ENCODING_DIFF_BIPHASE_LEVEL	93,2288
#define HDLC_PREAMBLE_LENGTH_8BITS	95,2332
#define HDLC_PREAMBLE_LENGTH_16BITS	96,2369
#define HDLC_PREAMBLE_LENGTH_32BITS	97,2407
#define HDLC_PREAMBLE_LENGTH_64BITS	98,2445
#define HDLC_PREAMBLE_PATTERN_NONE	100,2484
#define HDLC_PREAMBLE_PATTERN_ZEROS	101,2521
#define HDLC_PREAMBLE_PATTERN_FLAGS	102,2559
#define HDLC_PREAMBLE_PATTERN_10	103,2597
#define HDLC_PREAMBLE_PATTERN_01	104,2632
#define HDLC_PREAMBLE_PATTERN_ONES	105,2667
#define MGSL_MODE_ASYNC	107,2705
#define MGSL_MODE_HDLC	108,2732
#define MGSL_BUS_TYPE_ISA	110,2759
#define MGSL_BUS_TYPE_EISA	111,2787
#define MGSL_BUS_TYPE_PCI	112,2816
typedef struct _MGSL_PARAMS_MGSL_PARAMS114,2845
} MGSL_PARAMS, *PMGSL_PARAMS;PMGSL_PARAMS138,3567
#define MICROGATE_VENDOR_ID 140,3598
#define SYNCLINK_DEVICE_ID 141,3633
#define MGSL_MAX_SERIAL_NUMBER 142,3667
#define DiagStatus_OK	148,3738
#define DiagStatus_AddressFailure	149,3765
#define DiagStatus_AddressConflict	150,3802
#define DiagStatus_IrqFailure	151,3840
#define DiagStatus_IrqConflict	152,3874
#define DiagStatus_DmaFailure	153,3909
#define DiagStatus_DmaConflict	154,3943
#define DiagStatus_PciAdapterNotFound	155,3978
#define DiagStatus_CantAssignPciResources	156,4019
#define DiagStatus_CantAssignPciMemAddr	157,4063
#define DiagStatus_CantAssignPciIoAddr	158,4106
#define DiagStatus_CantAssignPciIrq	159,4149
#define DiagStatus_MemoryError	160,4189
#define SerialSignal_DCD 162,4226
#define SerialSignal_TXD 163,4297
#define SerialSignal_RI 164,4362
#define SerialSignal_RXD 165,4428
#define SerialSignal_CTS 166,4492
#define SerialSignal_RTS 167,4557
#define SerialSignal_DSR 168,4624
#define SerialSignal_DTR 169,4690
struct mgsl_icount mgsl_icount175,4831
#define DEBUG_LEVEL_DATA	194,5132
#define DEBUG_LEVEL_ERROR 195,5159
#define DEBUG_LEVEL_INFO 196,5188
#define DEBUG_LEVEL_BH 197,5217
#define DEBUG_LEVEL_ISR	198,5246
#define MgslEvent_DsrActive	204,5327
#define MgslEvent_DsrInactive	205,5362
#define MgslEvent_Dsr	206,5399
#define MgslEvent_CtsActive	207,5429
#define MgslEvent_CtsInactive	208,5464
#define MgslEvent_Cts	209,5501
#define MgslEvent_DcdActive	210,5531
#define MgslEvent_DcdInactive	211,5566
#define MgslEvent_Dcd	212,5603
#define MgslEvent_RiActive	213,5633
#define MgslEvent_RiInactive	214,5667
#define MgslEvent_Ri	215,5703
#define MgslEvent_ExitHuntMode	216,5732
#define MgslEvent_IdleReceived	217,5770
#define MGSL_MAGIC_IOC	231,6299
#define MGSL_IOCSPARAMS	232,6326
#define MGSL_IOCGPARAMS	233,6394
#define MGSL_IOCSTXIDLE	234,6462
#define MGSL_IOCGTXIDLE	235,6509
#define MGSL_IOCTXENABLE	236,6556
#define MGSL_IOCRXENABLE	237,6603
#define MGSL_IOCTXABORT	238,6650
#define MGSL_IOCGSTATS	239,6697
#define MGSL_IOCWAITEVENT	240,6743
#define MGSL_IOCCLRMODCOUNT	241,6791

include/net/arp.h,108
#define _ARP_H3,42
extern struct neigh_table arp_tbl;8,112
extern struct neigh_ops arp_broken_ops;22,719

include/net/ax25.h,3210
#define _AX25_H 8,98
#define	AX25_T1CLAMPLO 12,166
#define	AX25_T1CLAMPHI 13,194
#define	AX25_BPQ_HEADER_LEN	15,231
#define	AX25_KISS_HEADER_LEN	16,263
#define	AX25_HEADER_LEN	18,296
#define	AX25_ADDR_LEN	19,325
#define	AX25_DIGI_HEADER_LEN	20,351
#define	AX25_MAX_HEADER_LEN	21,414
#define AX25_P_ROSE	24,510
#define AX25_P_IP	25,537
#define AX25_P_ARP	26,562
#define AX25_P_TEXT 27,588
#define AX25_P_NETROM 28,616
#define	AX25_P_SEGMENT	29,646
#define	AX25_SEG_REM	32,712
#define	AX25_SEG_FIRST	33,740
#define AX25_CBIT	35,771
#define AX25_EBIT	36,823
#define AX25_HBIT	37,881
#define AX25_SSSID_SPARE	39,935
#define AX25_ESSID_SPARE	40,1011
#define AX25_DAMA_FLAG	41,1087
#define	AX25_COND_ACK_PENDING	43,1165
#define	AX25_COND_REJECT	44,1201
#define	AX25_COND_PEER_RX_BUSY	45,1232
#define	AX25_COND_OWN_RX_BUSY	46,1269
#define	AX25_COND_DAMA_MODE	47,1305
#define	AX25_I	56,1476
#define	AX25_S	57,1523
#define	AX25_RR	58,1570
#define	AX25_RNR	59,1614
#define	AX25_REJ	60,1662
#define	AX25_U	61,1698
#define	AX25_SABM	62,1744
#define	AX25_SABME	63,1805
#define	AX25_DISC	64,1876
#define	AX25_DM	65,1917
#define	AX25_UA	66,1964
#define	AX25_FRMR	67,2016
#define	AX25_UI	68,2059
#define	AX25_PF	70,2112
#define	AX25_EPF	71,2175
#define AX25_ILLEGAL	73,2239
#define	AX25_POLLOFF	75,2309
#define	AX25_POLLON	76,2333
#define AX25_COMMAND	79,2377
#define AX25_RESPONSE	80,2401
	AX25_STATE_0,85,2471
	AX25_STATE_1,86,2486
	AX25_STATE_2,87,2501
	AX25_STATE_3,88,2516
	AX25_STATE_489,2531
#define AX25_MODULUS 92,2549
#define	AX25_EMODULUS	93,2604
	AX25_PROTO_STD_SIMPLEX,96,2669
	AX25_PROTO_STD_DUPLEX,97,2694
	AX25_PROTO_DAMA_SLAVE,98,2718
	AX25_PROTO_DAMA_MASTER99,2742
	AX25_VALUES_IPDEFMODE,103,2777
	AX25_VALUES_AXDEFMODE,104,2817
	AX25_VALUES_BACKOFF,105,2875
	AX25_VALUES_CONMODE,106,2933
	AX25_VALUES_WINDOW,107,3017
	AX25_VALUES_EWINDOW,108,3083
	AX25_VALUES_T1,109,3150
	AX25_VALUES_T2,110,3199
	AX25_VALUES_T3,111,3248
	AX25_VALUES_IDLE,112,3297
	AX25_VALUES_N2,113,3348
	AX25_VALUES_PACLEN,114,3389
	AX25_VALUES_PROTOCOL,115,3426
	AX25_VALUES_DS_TIMEOUT,116,3490
	AX25_MAX_VALUES	117,3540
#define	AX25_DEF_IPDEFMODE	120,3613
#define	AX25_DEF_AXDEFMODE	121,3659
#define	AX25_DEF_BACKOFF	122,3703
#define	AX25_DEF_CONMODE	123,3753
#define	AX25_DEF_WINDOW	124,3811
#define	AX25_DEF_EWINDOW	125,3855
#define	AX25_DEF_T1	126,3912
#define	AX25_DEF_T2	127,3957
#define	AX25_DEF_T3	128,4001
#define	AX25_DEF_N2	129,4048
#define AX25_DEF_IDLE	130,4086
#define AX25_DEF_PACLEN	131,4140
#define	AX25_DEF_PROTOCOL	132,4188
#define AX25_DEF_DS_TIMEOUT	133,4258
typedef struct ax25_uid_assoc ax25_uid_assoc135,4331
} ax25_uid_assoc;ax25_uid_assoc139,4428
} ax25_digi;ax25_digi146,4587
typedef struct ax25_route ax25_route148,4601
} ax25_route;ax25_route154,4742
} ax25_dama_info;ax25_dama_info160,4909
typedef struct ax25_dev ax25_dev166,4986
} ax25_dev;ax25_dev175,5266
typedef struct ax25_cb ax25_cb177,5279
} ax25_cb;ax25_cb197,5938
extern ax25_cb *volatile ax25_list;200,5966
extern ax25_address null_ax25_address;215,6707
extern ax25_dev *ax25_dev_list;226,7260
extern int  ax25_uid_policy;339,12065

include/net/datalink.h,78
#define _NET_INET_DATALINK_H_2,30
struct datalink_proto datalink_proto4,61

include/net/checksum.h,134
#define _CHECKSUM_H27,814
static __inline__ unsigned short int csum_ipv6_magic(37,987
unsigned int csum_and_copy_from_user 97,2182

include/net/atalkcall.h,0

include/net/tcp.h,5963
#define _TCP_H19,666
#define TCP_HTABLE_SIZE	30,986
#define TCP_LHTABLE_SIZE	33,1095
#define TCP_BHTABLE_SIZE	36,1241
extern struct sock *tcp_established_hash[42,1457
extern struct sock *tcp_listening_hash[43,1516
struct tcp_bind_bucket tcp_bind_bucket76,3176
#define TCPB_FLAG_LOCKED	79,3248
#define TCPB_FLAG_FASTREUSE	80,3280
#define TCPB_FLAG_GOODSOCKNUM	81,3315
extern struct tcp_bind_bucket *tcp_bound_hash[88,3444
extern kmem_cache_t *tcp_bucket_cachep;89,3509
extern int tcp_port_rover;92,3668
#define TCP_NUM_REGS	95,3730
extern struct sock *tcp_regs[96,3755
#define TCP_RHASH_FN(TCP_RHASH_FN98,3800
#define TCP_RHASH(TCP_RHASH100,3887
#define TCP_SK_RHASH_FN(TCP_SK_RHASH_FN101,3948
#define TCP_SK_RHASH(TCP_SK_RHASH102,4010
static __inline__ void tcp_reg_zap(104,4076
static __inline__ int tcp_bhashfn(114,4245
static __inline__ void tcp_sk_bindify(119,4339
struct tcp_tw_bucket tcp_tw_bucket149,5233
extern kmem_cache_t *tcp_timewait_cachep;184,6109
#define TCP_COMBINED_PORTS(TCP_COMBINED_PORTS188,6204
#define TCP_COMBINED_PORTS(TCP_COMBINED_PORTS191,6324
#define TCP_V4_ADDR_COOKIE(TCP_V4_ADDR_COOKIE197,6470
#define TCP_V4_ADDR_COOKIE(TCP_V4_ADDR_COOKIE200,6614
#define TCP_IPV4_MATCH(TCP_IPV4_MATCH203,6756
#define TCP_V4_ADDR_COOKIE(TCP_V4_ADDR_COOKIE208,7029
#define TCP_IPV4_MATCH(TCP_IPV4_MATCH209,7082
#define TCP_IPV6_MATCH(TCP_IPV6_MATCH216,7384
static __inline__ int tcp_lhashfn(224,7811
static __inline__ int tcp_sk_listen_hashfn(229,7908
#define NETHDR_SIZE	235,8045
#define MAX_SYN_SIZE	243,8258
#define MAX_FIN_SIZE	244,8340
#define BASE_ACK_SIZE	245,8417
#define MAX_ACK_SIZE	246,8471
#define MAX_RESET_SIZE	247,8548
#define MAX_TCPHEADER_SIZE 248,8627
#define MAX_WINDOW	254,8833
#define MIN_WINDOW	255,8859
#define MAX_ACK_BACKLOG	256,8883
#define MAX_DELAY_ACK	257,8909
#define TCP_WINDOW_DIFF	258,8933
#define URG_VALID	261,8985
#define URG_NOTYET	262,9010
#define URG_READ	263,9036
#define TCP_RETR1	265,9061
#define TCP_RETR2	271,9201
#define TCP_TIMEOUT_LEN	276,9298
#define TCP_TIMEWAIT_LEN 277,9364
#define TCP_FIN_TIMEOUT 279,9480
#define TCP_ACK_TIME	281,9558
#define TCP_DONE_TIME	282,9628
#define TCP_WRITE_TIME	284,9730
#define TCP_TIMEOUT_INIT 286,9836
#define TCP_SYN_RETRIES	287,9905
#define TCP_PROBEWAIT_LEN 289,10010
#define TCP_KEEPALIVE_TIME 292,10148
#define TCP_KEEPALIVE_PROBES	293,10204
#define TCP_KEEPALIVE_PERIOD 294,10268
#define TCP_SYNACK_PERIOD	296,10343
#define TCP_QUICK_TRIES	297,10421
#define TCP_BUCKETGC_PERIOD	301,10600
#define TCP_TWKILL_SLOTS	304,10669
#define TCP_TWKILL_PERIOD	305,10733
#define TCPOPT_NOP	311,10810
#define TCPOPT_EOL	312,10846
#define TCPOPT_MSS	313,10889
#define TCPOPT_WINDOW	314,10942
#define TCPOPT_SACK_PERM 315,10988
#define TCPOPT_SACK 316,11049
#define TCPOPT_TIMESTAMP	317,11106
#define TCPOLEN_MSS 323,11202
#define TCPOLEN_WINDOW 324,11235
#define TCPOLEN_SACK_PERM 325,11268
#define TCPOLEN_TIMESTAMP 326,11301
#define TCPOLEN_TSTAMP_ALIGNED	329,11383
#define TCPOLEN_WSCALE_ALIGNED	330,11418
#define TCPOLEN_SACKPERM_ALIGNED	331,11452
#define TCPOLEN_SACK_BASE	332,11487
#define TCPOLEN_SACK_BASE_ALIGNED	333,11516
#define TCPOLEN_SACK_PERBLOCK	334,11552
struct or_calltable or_calltable338,11608
struct tcp_v4_open_req tcp_v4_open_req344,11791
struct tcp_v6_open_req tcp_v6_open_req351,11940
struct open_request open_request360,12103
extern kmem_cache_t *tcp_openreq_cachep;392,12909
#define tcp_openreq_alloc(tcp_openreq_alloc394,12951
#define tcp_openreq_free(tcp_openreq_free395,13029
struct tcp_func tcp_func409,13531
extern __inline int before(459,14596
extern __inline int after(464,14691
extern __inline int between(471,14801
extern struct proto tcp_prot;477,14907
extern struct tcp_mib tcp_statistics;478,14937
#define     tcp_reset_msl_timer(tcp_reset_msl_timer606,19025
extern struct timer_list	tcp_slow_timer;621,19527
struct tcp_sl_timer tcp_sl_timer623,19569
#define TCP_SLT_SYNACK	630,19690
#define TCP_SLT_KEEPALIVE	631,19716
#define TCP_SLT_TWKILL	632,19744
#define TCP_SLT_BUCKETGC	633,19770
#define TCP_SLT_MAX	634,19797
extern struct tcp_sl_timer tcp_slt_array[636,19821
static __inline__ unsigned int tcp_current_mss(644,20051
static __inline__ u32 tcp_receive_window(663,20641
extern __inline__ u16 tcp_select_window(683,21258
extern __inline__ int tcp_raise_window(710,22002
struct tcp_skb_cb tcp_skb_cb726,22584
#define TCPCB_FLAG_FIN	741,23040
#define TCPCB_FLAG_SYN	742,23069
#define TCPCB_FLAG_RST	743,23098
#define TCPCB_FLAG_PSH	744,23127
#define TCPCB_FLAG_ACK	745,23156
#define TCPCB_FLAG_URG	746,23185
#define TCPCB_SACKED_ACKED	749,23264
#define TCPCB_SACKED_RETRANS	750,23328
#define TCP_SKB_CB(TCP_SKB_CB756,23486
static __inline__ int tcp_packets_in_flight(772,24117
static __inline__ int tcp_snd_test(780,24361
static __inline__ void tcp_push_pending_frames(815,25447
#define tcp_enter_quickack_mode(tcp_enter_quickack_mode831,25887
#define tcp_exit_quickack_mode(tcp_exit_quickack_mode832,25950
#define tcp_in_quickack_mode(tcp_in_quickack_mode833,26013
extern __inline const int tcp_connected(842,26356
static __inline__ u16 tcp_v4_check(852,26577
static char *statename[862,26822
static __inline__ void tcp_set_state(869,27000
static __inline__ void tcp_build_and_update_options(899,27657
extern __inline__ void tcp_syn_build_options(929,28625
extern __inline__ void tcp_select_initial_window(969,30410
extern __inline__ void tcp_synq_unlink(1003,31451
extern __inline__ void tcp_synq_queue(1010,31670
extern __inline__ void tcp_synq_init(1017,31846
extern __inline__ void tcp_inc_slow_timer(1024,32038
extern __inline__ void tcp_dec_slow_timer(1036,32247
static __inline__ void tcp_sk_unbindify(1044,32436
extern const char timer_bug_msg[1054,32728
static inline void tcp_clear_xmit_timer(1056,32764
static inline int tcp_timer_is_set(1079,33194

include/net/ip.h,946
#define _IP_H23,763
struct inet_skb_parminet_skb_parm41,1071
#define IPSKB_MASQUERADED	47,1209
#define IPSKB_TRANSLATED	48,1237
#define IPSKB_FORWARDED	49,1264
struct ipcm_cookieipcm_cookie52,1295
#define IPCB(IPCB59,1370
struct ip_ra_chainip_ra_chain61,1426
extern struct ip_ra_chain *ip_ra_chain;68,1535
#define IP_CE	71,1592
#define IP_DF	72,1641
#define IP_MF	73,1693
#define IP_OFFSET	74,1745
#define IP_FRAG_TIME	76,1801
extern int		ip_id_count;99,2714
struct ip_reply_arg ip_reply_arg114,3108
struct ipv4_configipv4_config127,3475
extern struct ipv4_config ipv4_config;134,3555
extern struct ip_mib	ip_statistics;135,3594
extern struct linux_mib	net_statistics;136,3630
extern int sysctl_local_port_range[138,3671
extern __inline__ int ip_finish_output(140,3711
extern __inline__ void ip_send(162,4233
int ip_decrease_ttl(171,4411
int ip_dont_fragment(182,4639
extern __inline__ void ip_eth_mc_map(193,4896

include/net/rarp.h,21
#define _RARP_H3,44

include/net/sock.h,1948
#define _SOCK_H34,1290
#define MIN_WRITE_SPACE	90,2732
struct unix_opt unix_opt93,2804
struct netlink_opt netlink_opt109,3091
struct ipx_opt ipx_opt122,3419
struct ipv6_pinfo ipv6_pinfo139,3838
struct raw6_opt raw6_opt178,4566
struct raw_opt raw_opt188,4776
struct tcp_sack_block tcp_sack_block194,4886
struct tcp_opt tcp_opt199,4948
#define SOCK_DEBUGGING344,9559
#define SOCK_DEBUG(SOCK_DEBUG346,9604
#define SOCK_DEBUG(SOCK_DEBUG348,9711
struct sock sock351,9767
struct proto proto536,15101
#define TIME_WRITE	589,16753
#define TIME_RETRANS	590,16793
#define TIME_DACK	591,16839
#define TIME_CLOSE	592,16883
#define TIME_KEEPOPEN	593,16904
#define TIME_DESTROY	594,16928
#define TIME_DONE	595,16951
#define TIME_PROBE0	596,17015
#define SOCK_DESTROY_TIME 599,17061
#define PROT_SOCK	602,17160
#define SHUTDOWN_MASK	604,17184
#define RCV_SHUTDOWN	605,17208
#define SEND_SHUTDOWN	606,17231
#define SOCKHASH_LOCK(SOCKHASH_LOCK611,17345
#define SOCKHASH_UNLOCK(SOCKHASH_UNLOCK612,17388
static __inline__ void add_to_prot_sklist(617,17540
static __inline__ void del_from_prot_sklist(636,17980
static inline void lock_sock(660,18686
static inline void release_sock(675,19070
static __inline__ int min(688,19399
static __inline__ int max(695,19495
extern __inline__ int sk_filter(791,23128
extern __inline__ void sk_filter_release(804,23423
extern __inline__ void sk_filter_charge(814,23646
extern __inline__ void skb_set_owner_w(831,24091
extern __inline__ void skb_set_owner_r(838,24264
extern __inline__ int sock_queue_rcv_skb(846,24438
extern __inline__ int sock_queue_err_skb(869,25079
extern __inline__ int sock_error(887,25558
extern __inline__ unsigned long sock_wspace(893,25654
extern __inline__ int sock_writeable(909,26010
extern struct sock *timer_base;918,26154
extern __inline__ int gfp_any(924,26338
#define NETDEBUG(NETDEBUG934,26475
#define NETDEBUG(NETDEBUG936,26518

include/net/ax25call.h,0

include/net/netrom.h,1845
#define _NETROM_H 8,102
#define	NR_NETWORK_LEN	11,148
#define	NR_TRANSPORT_LEN	12,176
#define	NR_PROTO_IP	14,205
#define	NR_PROTOEXT	16,233
#define	NR_CONNREQ	17,260
#define	NR_CONNACK	18,286
#define	NR_DISCREQ	19,312
#define	NR_DISCACK	20,338
#define	NR_INFO	21,364
#define	NR_INFOACK	22,388
#define	NR_CHOKE_FLAG	24,415
#define	NR_NAK_FLAG	25,444
#define	NR_MORE_FLAG	26,471
	NR_STATE_0,30,542
	NR_STATE_1,31,555
	NR_STATE_2,32,568
	NR_STATE_333,581
#define	NR_COND_ACK_PENDING	36,597
#define	NR_COND_REJECT	37,631
#define	NR_COND_PEER_RX_BUSY	38,661
#define	NR_COND_OWN_RX_BUSY	39,696
#define NR_DEFAULT_T1	41,731
#define NR_DEFAULT_T2	42,805
#define NR_DEFAULT_N2	43,877
#define	NR_DEFAULT_T4	44,932
#define	NR_DEFAULT_IDLE	45,998
#define	NR_DEFAULT_WINDOW	46,1071
#define	NR_DEFAULT_OBS	47,1131
#define	NR_DEFAULT_QUAL	48,1196
#define	NR_DEFAULT_TTL	49,1263
#define	NR_DEFAULT_ROUTING	50,1324
#define	NR_DEFAULT_FAILS	51,1382
#define NR_MODULUS 53,1447
#define NR_MAX_WINDOW_SIZE	54,1473
#define	NR_MAX_PACKET_SIZE	55,1544
} nr_cb;nr_cb75,2207
struct nr_neigh nr_neigh77,2217
struct nr_route nr_route90,2481
struct nr_node nr_node96,2586
extern int  sysctl_netrom_default_path_quality;106,2772
extern int  sysctl_netrom_obsolescence_count_initialiser;107,2820
extern int  sysctl_netrom_network_ttl_initialiser;108,2878
extern int  sysctl_netrom_transport_timeout;109,2929
extern int  sysctl_netrom_transport_maximum_tries;110,2974
extern int  sysctl_netrom_transport_acknowledge_delay;111,3025
extern int  sysctl_netrom_transport_busy_delay;112,3080
extern int  sysctl_netrom_transport_requested_window_size;113,3128
extern int  sysctl_netrom_transport_no_activity_timeout;114,3187
extern int  sysctl_netrom_routing_control;115,3244
extern int  sysctl_netrom_link_fails_count;116,3287

include/net/icmp.h,118
#define	_ICMP_H19,669
extern struct icmp_err icmp_err_convert[27,786
extern struct icmp_mib icmp_statistics;28,829

include/net/af_unix.h,414
#define __LINUX_NET_AFUNIX_H2,29
extern struct proto_ops unix_proto_ops;4,110
typedef struct sock unix_socket;unix_socket7,241
#define UNIX_HASH_SIZE	10,302
extern unix_socket *unix_socket_table[12,329
#define forall_unix_sockets(forall_unix_sockets14,387
struct unix_addressunix_address17,537
struct unix_skb_parmsunix_skb_parms25,637
#define UNIXCB(UNIXCB32,799
#define UNIXCREDS(UNIXCREDS33,860

include/net/route.h,570
#define _ROUTE_H24,869
#define RT_HASH_DIVISOR	36,1109
#define RT_CACHE_BUBBLE_THRESHOLD	42,1277
#define RTO_ONLINK	45,1320
#define RTO_TPROXY	46,1344
#define RTO_CONN	49,1410
#define RTO_CONN	51,1444
struct rt_keyrt_key54,1471
struct rtablertable67,1625
extern struct rtable 	*rt_hash_table[97,2115
struct ip_rt_acctip_rt_acct99,2171
extern struct ip_rt_acct ip_rt_acct[107,2267
extern __inline__ void ip_rt_put(126,3153
extern __u8 ip_tos2prio[132,3247
extern __inline__ char rt_tos2priority(134,3277
extern __inline__ int ip_route_connect(139,3369

include/net/dst.h,720
#define _NET_DST_H9,151
#define RT_CACHE_DEBUG	20,337
#define RT_CACHE_DEBUG	22,369
#define DST_GC_MIN	25,403
#define DST_GC_INC	26,429
#define DST_GC_MAX	27,455
struct dst_entrydst_entry31,501
struct dst_opsdst_ops65,1143
extern struct dst_entry * dst_garbage_list;84,1584
extern atomic_t	dst_total;85,1628
struct dst_entry * dst_clone(88,1674
void dst_release(96,1798
void dst_release_irqwait(107,2050
struct dst_entry * dst_check(116,2183
struct dst_entry * dst_reroute(125,2397
void dst_free(139,2777
extern __inline__ void dst_confirm(150,2937
extern __inline__ void dst_negative_advice(156,3043
extern __inline__ void dst_link_failure(163,3233
extern __inline__ void dst_set_expires(170,3414

include/net/protocol.h,367
#define _PROTOCOL_H25,815
#define MAX_INET_PROTOS	33,974
struct inet_protocol inet_protocol37,1074
struct inet6_protocol inet6_protocol49,1406
extern struct inet_protocol *inet_protocol_base;66,1789
extern struct inet_protocol *inet_protos[67,1838
extern struct inet6_protocol *inet6_protocol_base;70,1955
extern struct inet6_protocol *inet6_protos[71,2006

include/net/ipip.h,94
#define __NET_IPIP_H 2,21
#define IPTUNNEL_ERR_TIMEO	7,119
struct ip_tunnelip_tunnel9,155

include/net/raw.h,135
#define _RAW_H18,626
extern struct proto raw_prot;21,643
#define RAWV4_HTABLE_SIZE	30,917
extern struct sock *raw_v4_htable[31,959

include/net/udp.h,160
#define _UDP_H23,787
#define UDP_HTABLE_SIZE	27,827
extern struct sock *udp_hash[33,1028
#define UDP_NO_CHECK	37,1123
extern struct proto udp_prot;40,1148

include/net/ipxcall.h,0

include/net/nrcall.h,0

include/net/p8022.h,26
#define _NET_P8022_H2,21

include/net/p8022call.h,0

include/net/psnap.h,26
#define _NET_PSNAP_H2,21

include/net/psnapcall.h,0

include/net/snmp.h,256
#define _SNMP_H20,600
struct ip_mibip_mib28,845
struct ipv6_mibipv6_mib51,1447
struct icmp_mibicmp_mib77,2177
struct icmpv6_mibicmpv6_mib107,3069
struct tcp_mibtcp_mib144,4142
struct udp_mibudp_mib162,4581
struct linux_mib linux_mib170,4724

include/net/lapb.h,1384
#define _LAPB_H 2,16
#define	LAPB_HEADER_LEN	5,58
#define	LAPB_ACK_PENDING_CONDITION	7,125
#define	LAPB_REJECT_CONDITION	8,165
#define	LAPB_PEER_RX_BUSY_CONDITION	9,201
#define	LAPB_I	12,273
#define	LAPB_S	13,319
#define	LAPB_U	14,365
#define	LAPB_RR	16,411
#define	LAPB_RNR	17,454
#define	LAPB_REJ	18,501
#define	LAPB_SABM	20,537
#define	LAPB_SABME	21,597
#define	LAPB_DISC	22,667
#define	LAPB_DM	23,707
#define	LAPB_UA	24,753
#define	LAPB_FRMR	25,804
#define LAPB_ILLEGAL	27,847
#define	LAPB_SPF	29,916
#define	LAPB_EPF	30,977
#define	LAPB_FRMR_W	32,1039
#define	LAPB_FRMR_X	33,1092
#define	LAPB_FRMR_Y	34,1140
#define	LAPB_FRMR_Z	35,1189
#define	LAPB_POLLOFF	37,1236
#define	LAPB_POLLON	38,1259
#define LAPB_COMMAND	41,1299
#define LAPB_RESPONSE	42,1322
#define	LAPB_ADDR_A	44,1347
#define	LAPB_ADDR_B	45,1372
#define	LAPB_ADDR_C	46,1397
#define	LAPB_ADDR_D	47,1422
	LAPB_STATE_0,51,1490
	LAPB_STATE_1,52,1531
	LAPB_STATE_2,53,1578
	LAPB_STATE_3,54,1628
	LAPB_STATE_4	55,1670
#define	LAPB_DEFAULT_MODE	58,1714
#define	LAPB_DEFAULT_WINDOW	59,1779
#define	LAPB_DEFAULT_T1	60,1826
#define	LAPB_DEFAULT_T2	61,1876
#define	LAPB_DEFAULT_N2	62,1926
#define	LAPB_SMODULUS	64,1972
#define	LAPB_EMODULUS	65,1996
struct lapb_frame lapb_frame70,2070
typedef struct lapb_cb lapb_cb81,2372
} lapb_cb;lapb_cb103,2913
#define	LAPB_DEBUG	148,4523

include/net/slhc.h,26
#define __NET_SLHC_H2,21

include/net/ip_masq.h,2614
#define _IP_MASQ_H7,130
#define MAX_MASQ_APP_PORTS 20,408
#define PORT_MASQ_BEGIN	27,535
#define PORT_MASQ_END	28,565
#define MASQUERADE_EXPIRE_TCP 30,611
#define MASQUERADE_EXPIRE_TCP_FIN 31,654
#define MASQUERADE_EXPIRE_UDP 32,697
#define MASQUERADE_EXPIRE_ICMP 37,865
#define IP_MASQ_MOD_CTL	39,909
#define IP_MASQ_USER_CTL	40,940
#define IP_MASQ_TAB_SIZE	44,991
#define IP_MASQ_F_NO_DADDR	46,1021
#define IP_MASQ_F_NO_DPORT 47,1081
#define IP_MASQ_F_NO_SADDR	48,1149
#define IP_MASQ_F_NO_SPORT	49,1212
#define IP_MASQ_F_DLOOSE	51,1276
#define IP_MASQ_F_NO_REPLY	52,1339
#define IP_MASQ_F_HASHED	54,1412
#define IP_MASQ_F_OUT_SEQ 55,1470
#define IP_MASQ_F_IN_SEQ 56,1547
#define IP_MASQ_F_MPORT	58,1624
#define IP_MASQ_F_USER	59,1689
struct ip_masq_seq ip_masq_seq66,1841
struct ip_masq ip_masq75,2131
struct ip_fw_masq ip_fw_masq98,2983
union ip_masq_tphdr ip_masq_tphdr104,3086
extern atomic_t ip_masq_free_ports[117,3294
struct ip_masq_hook ip_masq_hook143,4110
extern struct ip_masq *ip_masq_m_tab[148,4229
extern struct ip_masq *ip_masq_s_tab[149,4285
extern struct ip_masq_hook *ip_masq_user_hook;151,4392
struct ip_masq_appip_masq_app159,4584
static __inline__ struct ip_masq * ip_masq_in_get_iph(213,6451
static __inline__ struct ip_masq * ip_masq_out_get_iph(221,6697
extern rwlock_t __ip_masq_lock;232,6993
#define read_lock_bh(read_lock_bh235,7041
#define read_unlock_bh(read_unlock_bh237,7129
#define write_lock_bh(write_lock_bh239,7218
#define write_unlock_bh(write_unlock_bh241,7307
#define read_lock_bh(read_lock_bh244,7404
#define read_unlock_bh(read_unlock_bh245,7449
#define write_lock_bh(write_lock_bh246,7494
#define write_unlock_bh(write_unlock_bh247,7540
#define IP_MASQ_DEBUG(IP_MASQ_DEBUG260,7703
#define IP_MASQ_DEBUG(IP_MASQ_DEBUG265,7877
#define IP_MASQ_INFO(IP_MASQ_INFO268,7939
#define IP_MASQ_ERR(IP_MASQ_ERR271,8008
#define IP_MASQ_WARNING(IP_MASQ_WARNING274,8075
static __inline__ int masq_proto_num(295,8675
static __inline__ const char *masq_proto_name(306,8938
	IP_MASQ_S_NONE 320,9239
	IP_MASQ_S_ESTABLISHED,321,9260
	IP_MASQ_S_SYN_SENT,322,9284
	IP_MASQ_S_SYN_RECV,323,9305
	IP_MASQ_S_FIN_WAIT,324,9326
	IP_MASQ_S_TIME_WAIT,325,9347
	IP_MASQ_S_CLOSE,326,9369
	IP_MASQ_S_CLOSE_WAIT,327,9387
	IP_MASQ_S_LAST_ACK,328,9410
	IP_MASQ_S_LISTEN,329,9431
	IP_MASQ_S_UDP,330,9450
	IP_MASQ_S_ICMP,331,9466
	IP_MASQ_S_LAST332,9483
struct ip_masq_timeout_table ip_masq_timeout_table335,9503
static __inline__ void ip_masq_timeout_attach(341,9600
static __inline__ void ip_masq_timeout_detach(347,9764

include/net/br.h,2706
#define Zero 6,87
#define One	7,105
#define FALSE 11,167
#define TRUE	12,185
#define Disabled	16,250
#define Listening	17,288
#define Learning	18,327
#define Forwarding	19,365
#define Blocking	20,405
#define No_of_ports 22,444
#define All_ports 25,526
#define FDB_TIMEOUT	30,633
#define BRIDGE_MAX_AGE	38,947
#define BRIDGE_HELLO_TIME	39,974
#define BRIDGE_FORWARD_DELAY	40,1002
#define HOLD_TIME	41,1034
#define MAX_MCAST_PER_PERIOD 44,1116
#define MCAST_HOLD_TIME	45,1150
#define Default_path_cost 47,1218
#define Message_age_increment 53,1352
#define No_port 55,1385
} bridge_id_t;bridge_id_t72,1804
#define BRIDGE_PRIORITY	74,1820
#define BRIDGE_ID_ULA	75,1860
#define BRIDGE_ID	76,1893
#define TOPOLOGY_CHANGE	82,2120
#define TOPOLOGY_CHANGE_ACK	83,2150
#define BRIDGE_BPDU_8021_CONFIG_SIZE 84,2183
#define BRIDGE_BPDU_8021_CONFIG_FLAG_OFFSET	85,2250
#define BRIDGE_BPDU_8021_PROTOCOL_ID 86,2297
#define BRIDGE_BPDU_8021_PROTOCOL_VERSION_ID 87,2336
#define BRIDGE_LLC1_HS 88,2383
#define BRIDGE_LLC1_DSAP 89,2408
#define BRIDGE_LLC1_SSAP 90,2438
#define BRIDGE_LLC1_CTRL 91,2468
} Config_bpdu;Config_bpdu107,3064
#define config_bpdu_hton(config_bpdu_hton110,3103
#define config_bpdu_hton(config_bpdu_hton118,3583
#define config_bpdu_ntoh 120,3628
} Tcn_bpdu;Tcn_bpdu129,3840
#define BPDU_TYPE_CONFIG	131,3853
#define BPDU_TYPE_TOPO_CHANGE	132,3880
} Bridge_data;Bridge_data150,4707
} Port_data;Port_data165,5311
} Timer;Timer174,5541
struct fdb fdb176,5551
#define FDB_ENT_VALID	182,5676
struct fdb_info fdb_info195,6029
struct fdb_info_hdr fdb_info_hdr201,6151
#define IS_BRIDGED	207,6297
#define BR_MAX_PROTOCOLS 210,6323
#define BR_MAX_PROT_STATS 211,6351
#define BR_ACCEPT 214,6432
#define BR_REJECT 215,6452
} br_stats_counter;br_stats_counter243,7129
struct br_stat br_stat245,7150
#define BR_UP	258,7564
#define BR_DEBUG	259,7609
#define BR_PROT_STATS	260,7657
#define BR_STP_DISABLED	261,7720
struct br_cf br_cf263,7790
#define	BRCMD_BRIDGE_ENABLE	270,7887
#define	BRCMD_BRIDGE_DISABLE	271,7917
#define	BRCMD_PORT_ENABLE	272,7948
#define	BRCMD_PORT_DISABLE	273,7994
#define	BRCMD_SET_BRIDGE_PRIORITY	274,8041
#define	BRCMD_SET_PORT_PRIORITY	275,8099
#define	BRCMD_SET_PATH_COST	276,8168
#define	BRCMD_DISPLAY_FDB	277,8229
#define	BRCMD_ENABLE_DEBUG	278,8275
#define	BRCMD_DISABLE_DEBUG	279,8304
#define BRCMD_SET_POLICY	280,8335
#define BRCMD_EXEMPT_PROTOCOL	281,8407
#define BRCMD_ENABLE_PROT_STATS	282,8483
#define BRCMD_DISABLE_PROT_STATS 283,8518
#define BRCMD_ZERO_PROT_STATS	284,8554
#define BRCMD_TOGGLE_STP	285,8587
extern struct br_stat br_stats;303,9263
extern Port_data port_info[304,9295

include/net/ip6_route.h,460
#define _NET_IP6_ROUTE_H2,25
#define IP6_RT_PRIO_FW	4,51
#define IP6_RT_PRIO_USER	5,78
#define IP6_RT_PRIO_ADDRCONF	6,108
#define IP6_RT_PRIO_KERN	7,141
#define IP6_RT_FLOW_MASK	8,170
struct pol_chain pol_chain15,270
extern struct rt6_info	ip6_null_entry;22,374
extern int ip6_rt_max_size;24,414
extern int ip6_rt_gc_min;25,442
extern int ip6_rt_gc_timeout;26,468
extern int ip6_rt_gc_interval;27,498
extern __inline__ void ip6_dst_store(95,2568

include/net/slhc_vj.h,679
#define _SLHC_H2,16
#define SL_TYPE_IP 84,3514
#define SL_TYPE_UNCOMPRESSED_TCP 85,3538
#define SL_TYPE_COMPRESSED_TCP 86,3576
#define SL_TYPE_ERROR 87,3612
#define NEW_C	90,3687
#define NEW_I	91,3751
#define NEW_S	92,3770
#define NEW_A	93,3789
#define NEW_W	94,3808
#define NEW_U	95,3827
#define SPECIAL_I 98,3892
#define SPECIAL_D 99,3964
#define SPECIALS_MASK 100,4034
#define TCP_PUSH_BIT 102,4083
typedef __u8 byte_t;byte_t115,4398
typedef __u32 int32;int32116,4419
struct cstate cstate124,4724
#define NULLSLSTATE	133,5001
struct slcompress slcompress138,5123
#define SLF_TOSS	150,5544
#define NULLSLCOMPR	167,6230
#define __ARGS(__ARGS169,6274

include/net/ipv6.h,1497
#define _NET_IPV6_H16,436
#define NEXTHDR_HOP	27,595
#define NEXTHDR_TCP	28,650
#define NEXTHDR_UDP	29,692
#define NEXTHDR_IPV6	30,735
#define NEXTHDR_ROUTING	31,779
#define NEXTHDR_FRAGMENT	32,829
#define NEXTHDR_ESP	33,896
#define NEXTHDR_AUTH	34,958
#define NEXTHDR_ICMP	35,1012
#define NEXTHDR_NONE	36,1058
#define NEXTHDR_DEST	37,1104
#define NEXTHDR_MAX	39,1164
#define IPV6_DEFAULT_HOPLIMIT 43,1192
#define IPV6_DEFAULT_MCASTHOPS	44,1227
#define IPV6_ADDR_ANY	57,1409
#define IPV6_ADDR_UNICAST 59,1441
#define IPV6_ADDR_MULTICAST 60,1482
#define IPV6_ADDR_ANYCAST	61,1523
#define IPV6_ADDR_LOOPBACK	63,1558
#define IPV6_ADDR_LINKLOCAL	64,1593
#define IPV6_ADDR_SITELOCAL	65,1629
#define IPV6_ADDR_COMPATv4	67,1666
#define IPV6_ADDR_SCOPE_MASK	69,1702
#define IPV6_ADDR_MAPPED	71,1740
#define IPV6_ADDR_RESERVED	72,1773
struct frag_hdr frag_hdr78,1870
extern struct ipv6_mib		ipv6_statistics;89,2034
extern struct icmpv6_mib	icmpv6_statistics;90,2075
extern struct udp_mib		udp_stats_in6;91,2119
struct ip6_ra_chainip6_ra_chain93,2158
extern struct ip6_ra_chain	*ip6_ra_chain;101,2281
struct ipv6_txoptionsipv6_txoptions108,2426
#define IPV6_FRAG_TIMEOUT	142,3330
typedef int		(*inet_getfrag_t)inet_getfrag_t148,3428
extern __inline__ int ipv6_addr_scope(156,3616
extern __inline__ int ipv6_addr_cmp(161,3735
extern __inline__ void ipv6_addr_copy(166,3885
extern __inline__ void ipv6_addr_set(172,4059
extern __inline__ int ipv6_addr_any(183,4294

include/net/spx.h,943
#define __NET_SPX_H2,20
struct spxhdrspxhdr6,63
#define SPX_DTYPE_ECONN	9,104
#define SPX_DTYPE_ECACK	10,148
struct ipxspxhdripxspxhdr18,307
#define	SPX_SYS_PKT_LEN	23,369
struct spx_optspx_opt26,439
#define CCTL_SPXII_XHD 52,1274
#define CCTL_SPX_UNKNOWN 53,1333
#define CCTL_SPXII_NEG 54,1391
#define CCTL_SPXII 55,1444
#define CCTL_EOM 56,1495
#define CCTL_URG 57,1555
#define CCTL_ACK 58,1633
#define CCTL_CTL 59,1686
#define CCTL_SYS 60,1740
#define SPX_CLOSED	63,1837
#define	SPX_CONNECTING	64,1858
#define SPX_CONNECTED	65,1883
#define DATA	68,1947
#define ACK	69,1973
#define WDACK	70,2002
#define CONACK	71,2031
#define	CONREQ	72,2077
#define WDREQ	73,2119
#define	DISCON	74,2152
#define	DISACK	75,2195
#define RETRAN	76,2242
#define TQUEUE	77,2291
#define VERIFY_TIMEOUT 84,2427
#define ABORT_TIMEOUT 85,2458
#define RETRY_COUNT 88,2523
#define RETRY_TIME 89,2550
#define MAX_RETRY_DELAY 90,2581

include/net/addrconf.h,621
#define _ADDRCONF_H2,20
#define RETRANS_TIMER	4,41
#define MAX_RTR_SOLICITATIONS	6,67
#define RTR_SOLICITATION_INTERVAL	7,100
#define ADDR_CHECK_FREQUENCY	9,142
struct prefix_info prefix_info11,182
#define IN6_ADDR_HSIZE	41,678
static __inline__ u8 ipv6_addr_hash(94,2336
static __inline__ int ipv6_devindex_hash(111,2714
extern __inline__ void addrconf_addr_solict_mult_old(120,2876
extern __inline__ void addrconf_addr_solict_mult_new(128,3115
extern __inline__ void ipv6_addr_all_nodes(138,3394
extern __inline__ void ipv6_addr_all_routers(145,3562
extern __inline__ int ipv6_addr_is_multicast(152,3732

include/net/llc.h,956
#define LLC_MODULE3,27
typedef struct llc_struct llc;llc5,47
typedef struct llc_struct *llcptr;llcptr6,78
struct llc_structllc_struct12,158
#define P_TIMER 47,1129
#define REJ_TIMER 48,1155
#define ACK_TIMER 49,1181
#define BUSY_TIMER 50,1208
#define TIMER_IDLE 53,1333
#define TIMER_RUNNING 54,1359
#define TIMER_EXPIRED 55,1385
#define MODE_ADM 76,1912
#define MODE_ABM 77,1931
#define LLC_CONN_INDICATION	80,1996
#define LLC_CONN_CONFIRM	81,2066
#define LLC_DATA_INDIC	82,2131
#define LLC_DISC_INDICATION	83,2157
#define LLC_RESET_INDIC_LOC	84,2187
#define LLC_RESET_INDIC_REM	85,2218
#define LLC_RST_CONFIRM	86,2249
#define LLC_FRMR_RECV	87,2277
#define LLC_FRMR_SENT	88,2304
#define LLC_REMOTE_BUSY	89,2331
#define LLC_REMOTE_NOTBUSY	90,2360
#define LLC_TEST_INDICATION	91,2392
#define LLC_XID_INDICATION	92,2425
#define LLC_UI_DATA	93,2457
#define ADD_TO_RTQ(ADD_TO_RTQ105,2764
#define ADD_TO_ATQ(ADD_TO_ATQ106,2817

include/net/if_inet6.h,798
#define _NET_IF_INET6_H16,432
#define ADDR_PERMANENT	22,563
#define DAD_COMPLETE	24,592
#define DAD_INCOMPLETE	25,618
#define DAD_STATUS	26,646
#define ADDR_STATUS	28,671
#define ADDR_DEPRECATED 29,696
#define ADDR_INVALID	30,725
#define IF_RA_RCVD	34,754
#define IF_RS_SENT	35,778
struct inet6_ifaddr inet6_ifaddr39,822
struct ipv6_mc_socklistipv6_mc_socklist62,1198
#define MAF_TIMER_RUNNING	69,1300
#define MAF_LAST_REPORTER	70,1331
#define MAF_LOADED	71,1362
struct ifmcaddr6ifmcaddr673,1388
#define	IFA_HOST	84,1589
#define	IFA_LINK	85,1625
#define	IFA_SITE	86,1662
#define	IFA_GLOBAL	87,1699
struct ipv6_devconfipv6_devconf89,1727
struct inet6_dev inet6_dev105,1968
extern struct ipv6_devconf ipv6_devconf;118,2178
extern __inline__ void ipv6_eth_mc_map(120,2220

include/net/inet_common.h,121
#define _INET_COMMON_H2,23
extern struct proto_ops		inet_stream_ops;4,47
extern struct proto_ops		inet_dgram_ops;5,89

include/net/transp_v6.h,220
#define _TRANSP_V6_H2,21
extern struct proto rawv6_prot;12,125
extern struct proto udpv6_prot;13,157
extern struct proto tcpv6_prot;14,189
#define		LOOPBACK4_IPV6	34,702
extern struct tcp_func	ipv4_specific;39,801

include/net/rose.h,2656
#define _ROSE_H 8,98
#define	ROSE_ADDR_LEN	11,140
#define	ROSE_MIN_LEN	13,167
#define	ROSE_GFI	15,193
#define	ROSE_Q_BIT	16,217
#define	ROSE_D_BIT	17,243
#define	ROSE_M_BIT	18,269
#define	ROSE_CALL_REQUEST	20,296
#define	ROSE_CALL_ACCEPTED	21,328
#define	ROSE_CLEAR_REQUEST	22,361
#define	ROSE_CLEAR_CONFIRMATION	23,394
#define	ROSE_DATA	24,432
#define	ROSE_INTERRUPT	25,457
#define	ROSE_INTERRUPT_CONFIRMATION	26,487
#define	ROSE_RR	27,528
#define	ROSE_RNR	28,552
#define	ROSE_REJ	29,576
#define	ROSE_RESET_REQUEST	30,600
#define	ROSE_RESET_CONFIRMATION	31,633
#define	ROSE_REGISTRATION_REQUEST	32,671
#define	ROSE_REGISTRATION_CONFIRMATION	33,710
#define	ROSE_RESTART_REQUEST	34,754
#define	ROSE_RESTART_CONFIRMATION	35,789
#define	ROSE_DIAGNOSTIC	36,828
#define	ROSE_ILLEGAL	37,859
	ROSE_STATE_0,42,931
	ROSE_STATE_1,43,960
	ROSE_STATE_2,44,1006
	ROSE_STATE_3,45,1057
	ROSE_STATE_4,46,1094
	ROSE_STATE_5	47,1145
#define ROSE_DEFAULT_T0	50,1196
#define ROSE_DEFAULT_T1	51,1261
#define ROSE_DEFAULT_T2	52,1326
#define	ROSE_DEFAULT_T3	53,1391
#define	ROSE_DEFAULT_HB	54,1456
#define	ROSE_DEFAULT_IDLE	55,1520
#define	ROSE_DEFAULT_ROUTING	56,1594
#define	ROSE_DEFAULT_FAIL_TIMEOUT	57,1654
#define	ROSE_DEFAULT_MAXVC	58,1739
#define	ROSE_DEFAULT_WINDOW_SIZE	59,1813
#define ROSE_MODULUS 61,1876
#define	ROSE_MAX_PACKET_SIZE	62,1902
#define	ROSE_COND_ACK_PENDING	64,1964
#define	ROSE_COND_PEER_RX_BUSY	65,2000
#define	ROSE_COND_OWN_RX_BUSY	66,2037
#define	FAC_NATIONAL	68,2074
#define	FAC_CCITT	69,2102
#define	FAC_NATIONAL_RAND	71,2128
#define	FAC_NATIONAL_FLAGS	72,2160
#define	FAC_NATIONAL_DEST_DIGI	73,2193
#define	FAC_NATIONAL_SRC_DIGI	74,2230
#define	FAC_NATIONAL_FAIL_CALL	75,2266
#define	FAC_NATIONAL_FAIL_ADD	76,2303
#define	FAC_NATIONAL_DIGIS	77,2339
#define	FAC_CCITT_DEST_NSAP	79,2374
#define	FAC_CCITT_SRC_NSAP	80,2408
struct rose_neigh rose_neigh82,2442
struct rose_node rose_node99,2787
struct rose_route rose_route108,2957
} rose_cb;rose_cb139,3890
extern ax25_address rose_callsign;142,3918
extern int  sysctl_rose_restart_request_timeout;143,3953
extern int  sysctl_rose_call_request_timeout;144,4002
extern int  sysctl_rose_reset_request_timeout;145,4048
extern int  sysctl_rose_clear_request_timeout;146,4095
extern int  sysctl_rose_no_activity_timeout;147,4142
extern int  sysctl_rose_ack_hold_back_timeout;148,4187
extern int  sysctl_rose_routing_control;149,4234
extern int  sysctl_rose_link_fail_timeout;150,4275
extern int  sysctl_rose_maximum_vcs;151,4318
extern int  sysctl_rose_window_size;152,4355
extern struct rose_neigh *rose_loopback_neigh;195,6223

include/net/x25.h,2426
#define _X25_H 8,106
#define	X25_ADDR_LEN	11,146
#define	X25_MAX_L2_LEN	13,173
#define	X25_STD_MIN_LEN	15,218
#define	X25_EXT_MIN_LEN	16,246
#define	X25_GFI_SEQ_MASK	18,275
#define	X25_GFI_STDSEQ	19,306
#define	X25_GFI_EXTSEQ	20,336
#define	X25_Q_BIT	22,367
#define	X25_D_BIT	23,392
#define	X25_STD_M_BIT	24,417
#define	X25_EXT_M_BIT	25,446
#define	X25_CALL_REQUEST	27,476
#define	X25_CALL_ACCEPTED	28,507
#define	X25_CLEAR_REQUEST	29,539
#define	X25_CLEAR_CONFIRMATION	30,571
#define	X25_DATA	31,608
#define	X25_INTERRUPT	32,632
#define	X25_INTERRUPT_CONFIRMATION	33,661
#define	X25_RR	34,701
#define	X25_RNR	35,724
#define	X25_REJ	36,748
#define	X25_RESET_REQUEST	37,772
#define	X25_RESET_CONFIRMATION	38,804
#define	X25_REGISTRATION_REQUEST	39,841
#define	X25_REGISTRATION_CONFIRMATION	40,879
#define	X25_RESTART_REQUEST	41,922
#define	X25_RESTART_CONFIRMATION	42,956
#define	X25_DIAGNOSTIC	43,994
#define	X25_ILLEGAL	44,1024
#define	X25_COND_ACK_PENDING	48,1104
#define	X25_COND_OWN_RX_BUSY	49,1138
#define	X25_COND_PEER_RX_BUSY	50,1172
	X25_STATE_0,54,1250
	X25_STATE_1,55,1277
	X25_STATE_2,56,1321
	X25_STATE_3,57,1370
	X25_STATE_4	58,1405
	X25_LINK_STATE_0,62,1464
	X25_LINK_STATE_1,63,1483
	X25_LINK_STATE_2,64,1502
	X25_LINK_STATE_365,1521
#define X25_DEFAULT_T20	68,1543
#define X25_DEFAULT_T21	69,1604
#define X25_DEFAULT_T22	70,1665
#define	X25_DEFAULT_T23	71,1726
#define	X25_DEFAULT_T2	72,1787
#define	X25_DEFAULT_WINDOW_SIZE	74,1857
#define	X25_DEFAULT_PACKET_SIZE	75,1919
#define	X25_DEFAULT_THROUGHPUT	76,1988
#define	X25_DEFAULT_REVERSE	77,2051
#define X25_SMODULUS 79,2118
#define	X25_EMODULUS	80,2143
#define	X25_FAC_CLASS_MASK	86,2208
#define	X25_FAC_CLASS_A	88,2241
#define	X25_FAC_CLASS_B	89,2271
#define	X25_FAC_CLASS_C	90,2301
#define	X25_FAC_CLASS_D	91,2331
#define	X25_FAC_REVERSE	93,2362
#define	X25_FAC_THROUGHPUT	94,2392
#define	X25_FAC_PACKET_SIZE	95,2424
#define	X25_FAC_WINDOW_SIZE	96,2457
#define	X25_MAX_FAC_LEN	98,2491
#define	X25_MAX_CUD_LEN	99,2542
struct x25_route x25_route101,2572
struct x25_neigh x25_neigh108,2776
} x25_cb;x25_cb135,3553
extern int  sysctl_x25_restart_request_timeout;138,3579
extern int  sysctl_x25_call_request_timeout;139,3627
extern int  sysctl_x25_reset_request_timeout;140,3672
extern int  sysctl_x25_clear_request_timeout;141,3718
extern int  sysctl_x25_ack_holdback_timeout;142,3764

include/net/x25call.h,0

include/net/rosecall.h,0

include/net/ipx.h,621
#define _NET_INET_IPX_H_11,223
} ipx_address;ipx_address22,404
#define ipx_broadcast_node	24,420
#define ipx_this_node 25,474
struct ipxhdripxhdr27,522
#define IPX_NO_CHECKSUM	30,594
#define IPX_TYPE_UNKNOWN	34,735
#define IPX_TYPE_RIP	35,765
#define IPX_TYPE_SAP	36,812
#define IPX_TYPE_SPX	37,859
#define IPX_TYPE_NCP	38,905
#define IPX_TYPE_PPROP	39,968
typedef struct ipx_interface ipx_interface46,1178
}	ipx_interface;ipx_interface66,1628
typedef struct ipx_route ipx_route68,1646
}	ipx_route;ipx_route74,1822
#define IPX_MIN_EPHEMERAL_SOCKET	76,1836
#define IPX_MAX_EPHEMERAL_SOCKET	77,1876

include/net/ndisc.h,747
#define _NDISC_H2,17
#define NDISC_ROUTER_SOLICITATION	8,90
#define NDISC_ROUTER_ADVERTISEMENT	9,128
#define NDISC_NEIGHBOUR_SOLICITATION	10,167
#define NDISC_NEIGHBOUR_ADVERTISEMENT	11,208
#define NDISC_REDIRECT	12,250
#define ND_OPT_SOURCE_LL_ADDR	18,305
#define ND_OPT_TARGET_LL_ADDR	19,338
#define ND_OPT_PREFIX_INFO	20,371
#define ND_OPT_REDIRECT_HDR	21,401
#define ND_OPT_MTU	22,432
#define MAX_RTR_SOLICITATION_DELAY	24,456
#define ND_REACHABLE_TIME	26,495
#define ND_RETRANS_TIMER	27,530
#define ND_MIN_RANDOM_FACTOR	29,560
#define ND_MAX_RANDOM_FACTOR	30,596
extern struct neigh_table nd_tbl;40,785
struct nd_msg nd_msg42,820
struct ra_msg ra_msg52,1042
extern __inline__ struct neighbour * ndisc_get_neigh(104,2307

include/net/flow.h,579
#define _NET_FLOW_H8,91
struct flowi flowi10,112
#define fl6_dst	24,321
#define fl6_src	25,355
#define fl4_dst	26,389
#define fl4_src	27,423
#define FLOWR_NODECISION	46,620
#define FLOWR_SELECT	47,680
#define FLOWR_CLEAR	48,737
#define FLOWR_ERROR	49,793
struct fl_acc_args fl_acc_args51,817
#define FL_ARG_FORWARD	55,851
#define FL_ARG_ORIGIN	56,876
struct pkt_filter pkt_filter68,1012
#define FLR_INPUT	76,1135
#define FLR_OUTPUT	77,1156
struct flow_filter flow_filter79,1179
struct flow_rule flow_rule87,1282
struct flow_rule_ops flow_rule_ops92,1363

include/net/neighbour.h,1150
#define _NET_NEIGHBOUR_H2,25
#define NTF_PROXY	20,351
#define NTF_ROUTER	21,392
#define NUD_INCOMPLETE	27,457
#define NUD_REACHABLE	28,485
#define NUD_STALE	29,512
#define NUD_DELAY	30,535
#define NUD_PROBE	31,558
#define NUD_FAILED	32,581
#define NUD_NOARP	35,625
#define NUD_PERMANENT	36,648
#define NUD_NONE	37,675
#define NUD_IN_TIMER	49,946
#define NUD_VALID	50,1004
#define NUD_CONNECTED	51,1092
struct neigh_parmsneigh_parms53,1155
struct neigh_statisticsneigh_statistics79,1574
struct neighbourneighbour87,1720
struct neigh_opsneigh_ops110,2201
struct pneigh_entrypneigh_entry122,2558
#define NEIGH_HASHMASK	129,2648
#define PNEIGH_HASHMASK	130,2677
struct neigh_tableneigh_table137,2748
extern __inline__ void neigh_release(210,5672
extern __inline__ struct neighbour * neigh_clone(216,5827
extern __inline__ void neigh_confirm(223,5963
neigh_lookup(230,6109
extern __inline__ int neigh_is_connected(239,6313
extern __inline__ int neigh_is_valid(244,6424
extern __inline__ int neigh_event_send(249,6527
extern __inline__ void neigh_table_lock(257,6755
extern __inline__ void neigh_table_unlock(263,6869

include/net/rawv6.h,99
#define _NET_RAWV6_H2,21
#define RAWV6_HTABLE_SIZE	6,62
extern struct sock *raw_v6_htable[7,104

include/net/lapbcall.h,0

include/net/ip_fib.h,1260
#define _NET_IP_FIB_H17,599
struct kern_rtakern_rta21,649
struct fib_nhfib_nh37,931
struct fib_infofib_info57,1250
#define FIB_MAX_METRICS 66,1429
#define fib_mtu 68,1503
#define fib_window 69,1543
#define fib_rtt 70,1589
#define fib_dev	76,1730
struct fib_resultfib_result84,1827
#define FIB_RES_NH(FIB_RES_NH99,2075
#define FIB_RES_RESET(FIB_RES_RESET100,2133
#define FIB_RES_NH(FIB_RES_NH104,2219
#define FIB_RES_RESET(FIB_RES_RESET105,2266
#define FIB_RES_PREFSRC(FIB_RES_PREFSRC109,2334
#define FIB_RES_GW(FIB_RES_GW110,2416
#define FIB_RES_DEV(FIB_RES_DEV111,2466
#define FIB_RES_OIF(FIB_RES_OIF112,2517
struct fib_tablefib_table114,2569
extern struct fib_table *local_table;138,3446
extern struct fib_table *main_table;139,3484
extern __inline__ struct fib_table *fib_get_table(141,3522
extern __inline__ struct fib_table *fib_new_table(148,3654
extern __inline__ int fib_lookup(153,3744
extern __inline__ void fib_select_default(161,3970
#define local_table 168,4229
#define main_table 169,4278
extern struct fib_table * fib_tables[171,4326
extern __inline__ struct fib_table *fib_get_table(175,4504
extern __inline__ struct fib_table *fib_new_table(183,4628
extern __inline__ void fib_combine_itag(241,7264

include/net/ip6_fib.h,920
#define _IP6_FIB_H14,380
struct fib6_nodefib6_node26,541
struct rt6keyrt6key47,804
struct rt6_infort6_info53,859
#define rt6i_dev	60,943
#define rt6i_nexthop	61,972
#define rt6i_expires	62,1011
#define rt6i_flowr	78,1292
#define rt6i_filter	79,1332
struct fib6_walker_tfib6_walker_t85,1433
extern struct fib6_walker_t fib6_walker_list;96,1647
extern __inline__ void fib6_walker_link(98,1694
extern __inline__ void fib6_walker_unlink(106,1868
struct rt6_statistics rt6_statistics113,2016
#define RTN_TL_ROOT	121,2227
#define RTN_ROOT	122,2254
#define RTN_RTINFO	123,2301
#define RTPRI_FIREWALL	130,2407
#define RTPRI_FLOW	131,2468
#define RTPRI_KERN_CTL	132,2525
#define RTPRI_USER_MIN	134,2581
#define RTPRI_USER_MAX	135,2637
#define RTPRI_KERN_DFLT	137,2695
#define	MAX_FLOW_BACKTRACE	139,2754
typedef void			(*f_pnode)f_pnode142,2786
extern struct fib6_node		ip6_routing_table;144,2844

include/net/scm.h,253
#define __LINUX_NET_SCM_H2,26
#define SCM_MAX_FD	7,137
struct scm_fp_listscm_fp_list9,170
struct scm_cookiescm_cookie15,238
static __inline__ void scm_destroy(27,675
static __inline__ int scm_send(33,782
static __inline__ void scm_recv(45,1099

include/net/llc_frame.h,684
} frame_type, *frameptr;frameptr56,1726
#define IS_UFRAME(IS_UFRAME60,1785
#define IS_IFRAME(IS_IFRAME62,1856
#define IS_SFRAME(IS_SFRAME64,1906
#define IS_RSP(IS_RSP66,1978
#define I_CMD	75,2232
#define RR_CMD	76,2249
#define RNR_CMD	77,2267
#define REJ_CMD	78,2286
#define DISC_CMD	79,2305
#define SABME_CMD	80,2324
#define I_RSP	81,2344
#define RR_RSP	82,2361
#define RNR_RSP	83,2379
#define REJ_RSP	84,2398
#define UA_RSP	85,2417
#define DM_RSP	86,2436
#define FRMR_RSP	87,2455
#define BAD_FRAME	90,2499
#define NO_FRAME	91,2520
#define UI_CMD	94,2581
#define XID_CMD	95,2600
#define TEST_CMD	96,2620
#define XID_RSP	97,2640
#define TEST_RSP	98,2660

include/net/llc_name.h,23
char *frame_names[1,0

include/net/llc_state.h,23
char *state_names[1,0

include/net/llccall.h,0

include/net/netbeuicall.h,0

include/net/pkt_sched.h,2980
#define __NET_PKT_SCHED_H2,26
#define PSCHED_GETTIMEOFDAY	4,53
#define PSCHED_JIFFIES 5,83
#define PSCHED_CPU 6,110
#define PSCHED_CLOCK_SOURCE	8,134
struct qdisc_walkerqdisc_walker16,263
struct Qdisc_class_opsQdisc_class_ops24,392
struct Qdisc_opsQdisc_ops46,1252
struct Qdisc_headQdisc_head66,1788
extern struct Qdisc_head qdisc_head;71,1838
struct QdiscQdisc73,1876
#define TCQ_F_BUILTIN	79,2040
#define TCQ_F_THROTTLED	80,2064
struct qdisc_rate_tableqdisc_rate_table101,2529
typedef struct timeval	psched_time_t;psched_time_t150,4030
typedef long		psched_tdiff_t;psched_tdiff_t151,4068
#define PSCHED_GET_TIME(PSCHED_GET_TIME153,4099
#define PSCHED_US2JIFFIE(PSCHED_US2JIFFIE154,4156
#define PSCHED_EXPORTLIST 156,4229
#define PSCHED_EXPORTLIST 160,4344
typedef u64	psched_time_t;psched_time_t162,4411
typedef long	psched_tdiff_t;psched_tdiff_t163,4438
extern psched_time_t	psched_time_base;165,4468
#define PSCHED_JSCALE 170,4565
#define PSCHED_JSCALE 172,4607
#define PSCHED_JSCALE 174,4638
#define PSCHED_EXPORTLIST_2177,4670
#define PSCHED_WATCHER 181,4723
extern PSCHED_WATCHER psched_time_mark;183,4761
#define PSCHED_GET_TIME(PSCHED_GET_TIME185,4802
#define PSCHED_EXPORTLIST_1 187,4926
#define PSCHED_GET_TIME(PSCHED_GET_TIME192,5058
#define PSCHED_EXPORTLIST_1 194,5127
#define PSCHED_US2JIFFIE(PSCHED_US2JIFFIE198,5165
extern psched_tdiff_t psched_clock_per_hz;202,5287
extern int psched_clock_scale;203,5330
#define PSCHED_EXPORTLIST_2 205,5362
#define PSCHED_US2JIFFIE(PSCHED_US2JIFFIE208,5492
#define PSCHED_GET_TIME(PSCHED_GET_TIME212,5609
#define PSCHED_WATCHER 220,5792
extern PSCHED_WATCHER psched_time_mark;222,5820
#define PSCHED_GET_TIME(PSCHED_GET_TIME224,5861
#define PSCHED_EXPORTLIST_1 232,6132
#define PSCHED_TDIFF(PSCHED_TDIFF246,6509
#define PSCHED_TDIFF_SAFE(PSCHED_TDIFF_SAFE265,6934
#define PSCHED_TLESS(PSCHED_TLESS281,7332
#define PSCHED_TADD2(PSCHED_TADD2285,7474
#define PSCHED_TADD(PSCHED_TADD293,7712
#define PSCHED_SET_PASTPERFECT(PSCHED_SET_PASTPERFECT304,7978
#define PSCHED_IS_PASTPERFECT(PSCHED_IS_PASTPERFECT305,8029
#define	PSCHED_AUDIT_TDIFF(PSCHED_AUDIT_TDIFF307,8081
#define PSCHED_TDIFF(PSCHED_TDIFF311,8159
#define PSCHED_TDIFF_SAFE(PSCHED_TDIFF_SAFE312,8212
#define PSCHED_TLESS(PSCHED_TLESS320,8386
#define PSCHED_TADD2(PSCHED_TADD2321,8433
#define PSCHED_TADD(PSCHED_TADD322,8501
#define PSCHED_SET_PASTPERFECT(PSCHED_SET_PASTPERFECT323,8550
#define PSCHED_IS_PASTPERFECT(PSCHED_IS_PASTPERFECT324,8594
#define	PSCHED_AUDIT_TDIFF(PSCHED_AUDIT_TDIFF325,8638
struct tcf_policetcf_police329,8677
extern __inline__ void tcf_police_release(355,9239
extern struct Qdisc noop_qdisc;361,9361
extern struct Qdisc_ops noop_qdisc_ops;362,9393
extern struct Qdisc_ops pfifo_qdisc_ops;363,9433
extern struct Qdisc_ops bfifo_qdisc_ops;364,9474
extern __inline__ void qdisc_wakeup(388,10450
extern __inline__ unsigned psched_mtu(399,10679

include/net/ip6_fw.h,315
#define __NET_IP6_FW_H2,23
#define IP6_FW_LISTHEAD	4,47
#define IP6_FW_ACCEPT	5,79
#define IP6_FW_REJECT	6,109
#define IP6_FW_DEBUG	8,140
#define IP6_FW_MSG_ADD	10,164
#define IP6_FW_MSG_DEL	11,190
#define IP6_FW_MSG_REPORT	12,216
struct ip6_fw_msg ip6_fw_msg18,283
struct ip6_fw_rule ip6_fw_rule44,600

include/net/ipconfig.h,377
extern __u32 root_server_addr;9,145
extern u8 root_server_path[10,176
extern u32 ic_myaddr;11,206
extern u32 ic_servaddr;12,228
extern u32 ic_gateway;13,252
extern u32 ic_netmask;14,275
extern int ic_enable;15,298
extern int ic_host_name_set;16,320
extern int ic_set_manually;17,349
extern int ic_proto_enabled;18,377
#define IC_BOOTP 20,407
#define IC_RARP 21,426

include/net/ip_masq_mod.h,247
#define IP_MASQ_MOD_NOP 17,284
#define IP_MASQ_MOD_ACCEPT	18,311
#define IP_MASQ_MOD_REJECT	19,340
struct ip_masq_mod ip_masq_mod21,371
static __inline__ void ip_masq_mod_dec_nent(73,2385
static __inline__ void ip_masq_mod_inc_nent(79,2540

include/net/profile.h,2183
#define _NET_PROFILE_H_ 3,79
struct net_profile_slotnet_profile_slot12,233
extern atomic_t net_profile_active;24,434
extern struct timeval net_profile_adjust;25,470
extern __inline__ void  net_profile_stamp(31,629
extern __inline__ void  net_profile_accumulate(38,794
extern __inline__ void  net_profile_sub(54,1367
extern __inline__ void  net_profile_add(64,1677
extern __u32 alpha_lo;77,2015
extern long alpha_hi;78,2038
extern __inline__ void  net_profile_stamp(82,2116
extern __inline__ void  net_profile_accumulate(93,2368
extern __inline__ void  net_profile_sub(115,2923
extern __inline__ void  net_profile_add(129,3230
extern __inline__ void  net_profile_stamp(145,3552
extern __inline__ void  net_profile_accumulate(156,3922
extern __inline__ void  net_profile_sub(178,4452
extern __inline__ void  net_profile_add(192,4754
extern __inline__ void net_profile_enter(209,5068
extern __inline__ void net_profile_leave_irq(222,5313
extern __inline__ void net_profile_leave(243,5806
#define NET_PROFILE_ENTER(NET_PROFILE_ENTER263,6226
#define NET_PROFILE_LEAVE(NET_PROFILE_LEAVE264,6294
#define NET_PROFILE_LEAVE_IRQ(NET_PROFILE_LEAVE_IRQ265,6362
#define NET_PROFILE_SKB_CLEAR(NET_PROFILE_SKB_CLEAR267,6439
#define NET_PROFILE_SKB_INIT(NET_PROFILE_SKB_INIT271,6511
#define NET_PROFILE_SKB_PASSED(NET_PROFILE_SKB_PASSED275,6590
#define NET_PROFILE_DECL(NET_PROFILE_DECL283,6872
#define NET_PROFILE_DEFINE(NET_PROFILE_DEFINE286,6956
#define NET_PROFILE_REGISTER(NET_PROFILE_REGISTER289,7048
#define NET_PROFILE_UNREGISTER(NET_PROFILE_UNREGISTER290,7122
#define NET_PROFILE_ENTER(NET_PROFILE_ENTER298,7366
#define NET_PROFILE_LEAVE(NET_PROFILE_LEAVE299,7428
#define NET_PROFILE_LEAVE_IRQ(NET_PROFILE_LEAVE_IRQ300,7490
#define NET_PROFILE_SKB_CLEAR(NET_PROFILE_SKB_CLEAR301,7556
#define NET_PROFILE_SKB_INIT(NET_PROFILE_SKB_INIT302,7621
#define NET_PROFILE_SKB_PASSED(NET_PROFILE_SKB_PASSED303,7685
#define NET_PROFILE_DECL(NET_PROFILE_DECL304,7757
#define NET_PROFILE_DEFINE(NET_PROFILE_DEFINE305,7788
#define NET_PROFILE_REGISTER(NET_PROFILE_REGISTER306,7821
#define NET_PROFILE_UNREGISTER(NET_PROFILE_UNREGISTER307,7886

include/net/spxcall.h,0

include/net/pkt_cls.h,275
#define __NET_PKT_CLS_H2,24
struct tcf_resulttcf_result12,161
struct tcf_prototcf_proto18,222
struct tcf_walkertcf_walker34,515
struct tcf_proto_opstcf_proto_ops42,646
extern __inline__ int tc_classify(66,1457
extern __inline__ unsigned long cls_set_class(80,1806

include/net/irda/crc.h,148
#define IR_CRC_H15,469
#define INIT_FCS 19,513
#define GOOD_FCS 20,564
#define IR_FCS(IR_FCS23,677
extern __u16 const irda_crc16_table[28,873

include/net/irda/dongle.h,83
#define DONGLE_H26,995
} DONGLE_T;DONGLE_T38,1217
struct dongle dongle40,1230

include/net/irda/ircomm_common.h,1794
} IRCOMM_STATE;IRCOMM_STATE33,1139
} IRCOMM_EVENT;IRCOMM_EVENT53,1514
#define IRCOMM_MAGIC 56,1532
#define COMM_INIT_CTRL_PARAM 57,1575
#define COMM_CTRL_MIN 58,1661
#define COMM_HEADER_SIZE 59,1731
#define COMM_DEFAULT_DATA_SIZE 60,1812
#define IRCOMM_MAX_CONNECTION 61,1847
#define IAS_PARAM 63,1910
#define CONTROL_CHANNEL 64,1944
#define UNKNOWN 68,1981
#define DEFAULT 70,2103
#define THREE_WIRE_RAW	71,2164
#define THREE_WIRE	72,2205
#define NINE_WIRE	73,2242
#define CENTRONICS	74,2278
#define SERIAL	76,2316
#define PARALLEL	77,2350
#define SERVICETYPE 80,2387
#define PORT_TYPE 81,2412
#define PORT_NAME 82,2435
#define FIXED_PORT_NAME 83,2458
#define DATA_RATE 85,2488
#define DATA_FORMAT 86,2511
#define FLOW_CONTROL 87,2536
#define XON_XOFF_CHAR 88,2562
#define ENQ_ACK_CHAR 89,2589
#define LINESTATUS 90,2615
#define BREAK_SIGNAL 91,2639
#define DTELINE_STATE 93,2666
#define DCELINE_STATE 94,2693
#define POLL_FOR_LINE_SETTINGS 95,2720
#define STATUS_QUERY 97,2757
#define SET_BUSY_TIMEOUT 98,2783
#define IEEE1284_MODE_SUPPORT 99,2813
#define IEEE1284_DEVICEID 100,2848
#define IEEE1284_MODE 101,2879
#define IEEE1284_ECP_EPP_DATA_TRANSFER 102,2906
#define TX_READY 104,2951
#define TX_BUSY 105,3022
#define USE_RTS 110,3127
#define USE_CTS 111,3173
#define USE_DTR 112,3218
#define DELTA_DTR 116,3302
#define DELTA_RTS 117,3325
#define MCR_DTR 118,3348
#define MCR_RTS 119,3369
#define DELTA_CTS 123,3428
#define DELTA_DSR 124,3451
#define DELTA_RI 125,3474
#define DELTA_DCD 126,3498
#define MSR_CTS 127,3521
#define MSR_DSR 128,3544
#define MSR_RI 129,3567
#define MSR_DCD 130,3591
#define LSR_OE 134,3649
#define LSR_PE 135,3706
#define LSR_FE 136,3762
#define LSR_BI 137,3817
struct ircomm_cb{ircomm_cb140,3878

include/net/irda/irda.h,1375
#define IRDA_H26,991
#define TRUE 32,1073
#define FALSE 36,1111
#define ALIGN 39,1135
#define PACK 40,1174
extern __u32 irda_debug;45,1299
#define IRDA_DEBUG 47,1325
#define DEBUG(DEBUG49,1347
#define ASSERT(ASSERT50,1421
#define DEBUG(DEBUG56,1594
#define ASSERT(ASSERT57,1620
static unsigned int check_skb 61,1696
#define SK_FREED_SKB 63,1740
#define SK_GOOD_SKB 64,1775
#define SK_HEAD_SKB 65,1810
#define IS_SKB(IS_SKB73,1942
#define IS_SKB_HEAD(IS_SKB_HEAD81,2086
#define ALLOC_SKB_MAGIC(ALLOC_SKB_MAGIC83,2152
#define FREE_SKB_MAGIC(FREE_SKB_MAGIC87,2248
#define IS_SKB(IS_SKB94,2362
#define IS_SKB_HEAD(IS_SKB_HEAD96,2407
#define ALLOC_SKB_MAGIC(ALLOC_SKB_MAGIC97,2433
#define FREE_SKB_MAGIC(FREE_SKB_MAGIC98,2463
#define IRTTY_MAGIC 105,2627
#define LAP_MAGIC 106,2661
#define LMP_MAGIC 107,2695
#define LMP_LSAP_MAGIC 108,2729
#define LMP_LAP_MAGIC 109,2764
#define IRDA_DEVICE_MAGIC 110,2798
#define IAS_MAGIC 111,2833
#define TTP_MAGIC 112,2866
#define TTP_TSAP_MAGIC 113,2902
#define IROBEX_MAGIC 114,2936
#define HB_MAGIC 115,2972
#define IRLAN_MAGIC 116,3007
#define IAS_OBJECT_MAGIC 117,3040
#define IAS_ATTRIB_MAGIC 118,3075
#define IAS_DEVICE_ID 120,3111
#define IAS_PNP_ID 121,3140
#define IAS_OBEX_ID 122,3169
#define IAS_IRLAN_ID 123,3199
#define IAS_IRCOMM_ID 124,3229
#define IAS_IRLPT_ID 125,3258

include/net/irda/irda_device.h,381
#define IRDA_DEVICE_H29,1171
#define IFF_SIR 39,1409
#define IFF_MIR 40,1457
#define IFF_FIR 41,1505
#define IFF_PIO 42,1553
#define IFF_DMA	43,1613
#define IFF_DONGLE 44,1671
#define IO_XMIT 46,1739
#define IO_RECV 47,1760
struct chipio_t chipio_t50,1807
struct iobuff_t iobuff_t65,2359
struct irda_device irda_device87,3172
extern hashbin_t *irda_device;125,4315

include/net/irda/irdacall.h,0

include/net/irda/iriap.h,560
#define IRIAP_H26,1038
#define LST 37,1261
#define ACK 38,1278
#define IAS_SERVER 40,1296
#define IAS_CLIENT 41,1317
#define GET_INFO_BASE 44,1360
#define GET_OBJECTS 45,1392
#define GET_VALUE 46,1424
#define GET_VALUE_BY_CLASS 47,1456
#define GET_OBJECT_INFO 48,1488
#define GET_ATTRIB_NAMES 49,1520
#define IAS_SUCCESS 51,1553
#define IAS_CLASS_UNKNOWN 52,1582
#define IAS_ATTRIB_UNKNOWN 53,1611
typedef void (*CONFIRM_CALLBACK)CONFIRM_CALLBACK55,1641
struct iriap_cb iriap_cb58,1734
static inline void iriap_start_watchdog_timer(106,3068

include/net/irda/iriap_event.h,98
#define IRIAP_FSM_H26,1012
} IRIAP_STATE;IRIAP_STATE56,1422
} IRIAP_EVENT;IRIAP_EVENT66,1617

include/net/irda/irias_object.h,335
#define LM_IAS_OBJECT_H26,1008
#define IAS_MISSING 31,1093
#define IAS_INTEGER 32,1115
#define IAS_OCT_SEQ 33,1137
#define IAS_STRING 34,1159
struct ias_object ias_object39,1207
struct ias_value ias_value51,1374
struct ias_attrib ias_attrib67,1639
extern struct ias_value missing;96,2761
extern hashbin_t *objects;97,2794

include/net/irda/irlan_common.h,1677
#define IRLAN_H26,1033
#define IRLAN_MTU 36,1216
#define IRLAN_TIMEOUT 37,1246
#define CMD_GET_PROVIDER_INFO 40,1304
#define CMD_GET_MEDIA_CHAR 41,1338
#define CMD_OPEN_DATA_CHANNEL 42,1372
#define CMD_CLOSE_DATA_CHAN 43,1406
#define CMD_RECONNECT_DATA_CHAN 44,1440
#define CMD_FILTER_OPERATION 45,1474
#define RSP_SUCCESS 48,1530
#define RSP_INSUFFICIENT_RESOURCES 49,1568
#define RSP_INVALID_COMMAND_FORMAT 50,1606
#define RSP_COMMAND_NOT_SUPPORTED 51,1644
#define RSP_PARAM_NOT_SUPPORTED 52,1682
#define RSP_VALUE_NOT_SUPPORTED 53,1720
#define RSP_NOT_OPEN 54,1758
#define RSP_AUTHENTICATION_REQUIRED 55,1796
#define RSP_INVALID_PASSWORD 56,1834
#define RSP_PROTOCOL_ERROR 57,1872
#define RSP_ASYNCHRONOUS_ERROR 58,1910
#define MEDIA_802_3 61,1967
#define MEDIA_802_5 62,1989
#define DATA_CHAN 65,2036
#define FILTER_TYPE 66,2058
#define FILTER_MODE 67,2080
#define IRLAN_DIRECTED 70,2122
#define IRLAN_FUNCTIONAL 71,2152
#define IRLAN_GROUP 72,2182
#define IRLAN_MAC_FRAME 73,2212
#define IRLAN_MULTICAST 74,2242
#define IRLAN_BROADCAST 75,2272
#define IRLAN_IPX_SOCKET 76,2302
#define ALL 79,2352
#define FILTER 80,2370
#define NONE 81,2388
#define GET 84,2431
#define CLEAR 85,2449
#define ADD 86,2467
#define REMOVE 87,2485
#define DYNAMIC 88,2503
#define ACCESS_DIRECT 91,2541
#define ACCESS_PEER 92,2566
#define ACCESS_HOSTED 93,2591
#define IRLAN_BYTE 95,2617
#define IRLAN_SHORT 96,2640
#define IRLAN_ARRAY 97,2663
#define IRLAN_MAX_HEADER 99,2687
struct irlan_client_cb irlan_client_cb104,2772
struct irlan_provider_cb irlan_provider_cb128,3087
struct irlan_cb irlan_cb151,3465
extern hashbin_t *irlan;208,5581

include/net/irda/irlan_eth.h,28
#define IRLAN_ETH_H26,1001

include/net/irda/irlan_event.h,134
#define IRLAN_EVENT_H26,1024
} IRLAN_STATE;IRLAN_STATE45,1297
} IRLAN_EVENT;IRLAN_EVENT68,1756
extern char *irlan_state[70,1772

include/net/irda/irlap.h,909
#define IRLAP_H26,1033
#define LAP_RELIABLE 37,1248
#define LAP_UNRELIABLE 38,1273
#define LAP_ADDR_HEADER 40,1299
#define LAP_CTRL_HEADER 41,1353
#define LAP_COMP_HEADER 42,1407
#  define LAP_HEADER 45,1497
#  define IRDA_COMPRESSED 46,1573
#  define IRDA_NORMAL 47,1601
#define LAP_HEADER 49,1635
#define BROADCAST 52,1698
#define CBROADCAST 53,1759
#define XID_FORMAT 54,1824
#define LAP_WINDOW_SIZE 56,1882
#define MAX_CONNECTIONS 57,1908
#define NR_EXPECTED 59,1935
#define NR_UNEXPECTED 60,1961
#define NR_INVALID 61,1987
#define NS_EXPECTED 63,2014
#define NS_UNEXPECTED 64,2040
#define NS_INVALID 65,2066
#define irda_compress 72,2223
#define irda_comp_free 73,2280
#define irda_decompress 74,2339
#define irda_decomp_free 75,2401
#define irda_incomp 76,2464
struct irda_compressor irda_compressor78,2523
struct irlap_cb irlap_cb87,2665
extern hashbin_t *irlap;183,5350

include/net/irda/irlap_event.h,179
#define IRLAP_EVENT_H26,1017
} IRLAP_STATE;IRLAP_STATE49,1533
} IRLAP_EVENT;IRLAP_EVENT89,2195
struct irlap_info irlap_info94,2269
extern const char *irlap_state[114,2736

include/net/irda/irlmp.h,1282
#define IRLMP_H26,1046
#define LSAP_MASK 38,1279
#define LSAP_IAS 39,1306
#define LSAP_ANY 40,1333
#define DEV_ADDR_ANY 42,1361
#define TSAP_IRLAN 45,1446
#define LSAP_IRLPT 46,1473
#define TSAP_IROBEX 47,1500
#define TSAP_IRCOMM 48,1527
#define LMP_HEADER 50,1555
#define LMP_CONTROL_HEADER 51,1618
#define LMP_MAX_HEADER 52,1648
#define LM_MAX_CONNECTIONS 54,1701
#define HINT_PNP 57,1778
#define HINT_PDA 58,1808
#define HINT_COMPUTER 59,1838
#define HINT_PRINTER 60,1868
#define HINT_MODEM 61,1898
#define HINT_FAX 62,1928
#define HINT_LAN 63,1958
#define HINT_EXTENSION 64,1988
#define HINT_TELEPHONY 67,2088
#define HINT_FILE_SERVER 68,2118
#define HINT_COMM 69,2148
#define HINT_MESSAGE 70,2178
#define HINT_HTTP 71,2208
#define HINT_OBEX 72,2238
#define LM_IDLE_TIMEOUT 74,2269
} SERVICE;SERVICE87,2437
#define S_END 89,2449
#define CLIENT 91,2469
#define SERVER 92,2486
typedef void (*DISCOVERY_CALLBACK)DISCOVERY_CALLBACK94,2504
struct irlmp_registration irlmp_registration96,2555
struct lsap_cb lsap_cb110,2843
struct lap_cb lap_cb137,3511
} CACHE_ENTRY;CACHE_ENTRY169,4224
struct irlmp_cb irlmp_cb174,4276
extern char *lmp_reasons[244,6609
extern int sysctl_discovery_slots;245,6637
extern struct irlmp_cb *irlmp;246,6672

include/net/irda/irlap_comp.h,100
#define IRLAP_COMP_H26,1003
#define CI_BZIP2 30,1054
extern hashbin_t *irlap_compressors;32,1094

include/net/irda/irlmp_event.h,254
#define IRLMP_EVENT_H26,1040
} IRLMP_STATE;IRLMP_STATE38,1346
} LSAP_STATE;LSAP_STATE48,1797
} IRLMP_EVENT;IRLMP_EVENT76,2338
struct irlmp_event irlmp_event82,2455
extern const char *irlmp_state[98,2629
extern const char *irlsap_state[99,2663

include/net/irda/irlap_frame.h,1029
#define IRLAP_FRAME_H26,1048
#define INVALID 35,1213
#define SNRM_CMD 38,1267
#define DISC_CMD 39,1321
#define XID_CMD 40,1361
#define TEST_CMD 41,1422
#define RNRM_RSP 44,1484
#define UA_RSP 45,1542
#define FRMR_RSP 46,1598
#define DM_RSP 47,1640
#define RD_RSP 48,1685
#define XID_RSP 49,1736
#define TEST_RSP 50,1797
#define RR 53,1860
#define REJ 54,1903
#define RNR 55,1939
#define SREJ 56,1986
#define I_FRAME 59,2055
#define UI_FRAME 60,2103
#define CMD_FRAME 62,2156
#define RSP_FRAME 63,2180
#define PF_BIT 65,2205
#define IR_S 67,2247
#define IR_RR 68,2310
#define IR_RNR 69,2369
#define IR_REJ 70,2432
#define IR_U 71,2483
#define IR_SNRM 72,2545
#define IR_DISC 74,2621
#define IR_DM 75,2676
#define IR_UA 76,2738
#define IR_FRMR 77,2805
#define IR_UI 78,2862
struct xid_frame xid_frame80,2930
struct test_frame test_frame92,3483
struct ua_frame ua_frame100,3714
struct i_frame i_frame109,3972
struct snrm_frame snrm_frame115,4110
struct irlap_skb_cb irlap_skb_cb125,4412

include/net/irda/irlmp_frame.h,209
#define IRMLP_FRAME_H26,1017
#define CONNECT_CMD 31,1087
#define CONNECT_CNF 32,1115
#define DISCONNECT 33,1143
#define ACCESSMODE_CMD 34,1171
#define ACCESSMODE_CNF 35,1199
#define CONTROL_BIT 37,1228

include/net/irda/irlpt_cli.h,72
#define IRLPT_CLIENT_H27,1024
extern hashbin_t *irlpt_clients;47,1502

include/net/irda/irmod.h,1259
#define IRMOD_H26,1029
#define IRMGR_IOC_MAGIC 34,1160
#define IRMGR_IOCTNPC 35,1188
#define IRMGR_IOC_MAXNR 36,1238
} IRMGR_EVENT;IRMGR_EVENT53,1585
struct irmanager_event irmanager_event58,1669
typedef void (*TODO_CALLBACK)TODO_CALLBACK67,1795
struct irda_event irda_event73,1959
struct irda_todo irda_todo82,2113
struct irda_cb irda_cb93,2284
} irda_address;irda_address105,2555
struct sockaddr_irda sockaddr_irda107,2572
} __u16_host_order;__u16_host_order122,2967
struct irda_statisticsirda_statistics127,3036
} LOCK_STATUS;LOCK_STATUS163,4502
} LINK_STATUS;LINK_STATUS172,4644
} LAP_REASON;LAP_REASON181,5022
} LM_REASON;LM_REASON199,5799
#define LM_UNKNOWN 200,5812
#define CS_ASCII 205,5918
#define	CS_ISO_8859_1 206,5946
#define	CS_ISO_8859_2 207,5974
#define	CS_ISO_8859_3 208,6002
#define	CS_ISO_8859_4 209,6030
#define	CS_ISO_8859_5 210,6058
#define	CS_ISO_8859_6 211,6086
#define	CS_ISO_8859_7 212,6114
#define	CS_ISO_8859_8 213,6142
#define	CS_ISO_8859_9 214,6170
#define CS_UNICODE 215,6198
#define DISCOVERY 220,6312
struct discovery_t discovery_t221,6349
typedef enum { FLOW_STOP, FLOW_START } LOCAL_FLOW;LOCAL_FLOW237,6949
struct notify_t notify_t242,7079
#define NOTIFY_MAX_NAME 260,7788

include/net/irda/irobex.h,502
#define IROBEX_H26,998
#define LOW_THRESHOLD 37,1207
#define HIGH_THRESHOLD 38,1236
#define IROBEX_MAX_QUEUE 39,1265
struct irobex_ioc_t irobex_ioc_t42,1346
#define IROBEX_IOC_MAGIC 46,1390
#define IROBEX_IOCSCONNECT 48,1420
#define IROBEX_IOCSDISCONNECT 49,1479
#define IROBEX_IOC_MAXNR 50,1538
#define IROBEX_MAX_HEADER 52,1566
} OBEX_STATE;OBEX_STATE60,1889
struct irobex_cb irobex_cb62,1904
inline void irobex_start_watchdog_timer(103,2810
extern struct irobex_cb *irobex;109,3004

include/net/irda/irttp.h,653
#define IRTTP_H26,1046
#define TTP_MAX_CONNECTIONS 36,1228
#define TTP_HEADER 37,1278
#define TTP_HEADER_WITH_SAR 38,1311
#define TTP_PARAMETERS 39,1344
#define TTP_MORE 40,1380
#define DEFAULT_INITIAL_CREDIT 42,1417
#define LOW_THRESHOLD 44,1452
#define HIGH_THRESHOLD 45,1478
#define TTP_MAX_QUEUE 46,1504
#define P_NORMAL 49,1577
#define P_HIGH 50,1599
#define SAR_DISABLE 52,1622
struct tsap_cb tsap_cb58,1744
struct irttp_cb irttp_cb102,3188
static __inline__ void irttp_no_reassemble(131,4132
static __inline __u32 irttp_get_saddr(136,4227
static __inline __u32 irttp_get_daddr(141,4329
extern struct irttp_cb *irttp;146,4431

include/net/irda/irport.h,340
#define IRPORT_H27,1041
#define SPEED_DEFAULT 35,1175
#define SPEED_MAX 36,1202
#define PORT_UNKNOWN 41,1280
#define PORT_8250 42,1306
#define PORT_16450 43,1332
#define PORT_16550 44,1358
#define PORT_16550A 45,1384
#define PORT_CIRRUS 46,1410
#define PORT_16650 47,1436
#define PORT_MAX 48,1462
#define FRAME_MAX_SIZE 50,1491

include/net/irda/irqueue.h,483
#define QUEUE_H36,1320
#define NAME_SIZE 38,1337
#define HB_NOLOCK 43,1385
#define HB_GLOBAL 44,1410
#define HB_LOCAL 45,1435
#define HB_SORTED 46,1460
#define HASHBIN_SIZE 51,1509
#define HASHBIN_MASK 52,1534
typedef void (*FREE_FUNC)FREE_FUNC54,1562
#define GET_HASHBIN(GET_HASHBIN59,1620
#define QUEUE 61,1665
struct queue_t queue_t62,1694
typedef struct hashbin_t hashbin_t70,1792
} hashbin_t;hashbin_t78,1977
extern __inline__ int  hashbin_get_size(101,2777

include/net/irda/irtty.h,215
#define IRTTY_H26,997
#define IRTTY_IOC_MAGIC 38,1212
#define IRTTY_IOCTDONGLE 39,1240
#define IRTTY_IOC_MAXNR 40,1290
#define N_IRDA 43,1334
struct dongle_q dongle_q46,1414
struct irtty_cb irtty_cb52,1471

include/net/irda/timer.h,297
#define TIMER_H27,1016
#define POLL_TIMEOUT 38,1240
#define FINAL_TIMEOUT 39,1314
#define WD_TIMEOUT 45,1502
#define MEDIABUSY_TIMEOUT 46,1545
#define SLOT_TIMEOUT 52,1729
#define QUERY_TIMEOUT 53,1764
#define WATCHDOG_TIMEOUT 55,1800
typedef void (*TIMER_CALLBACK)TIMER_CALLBACK57,1864

include/net/irda/irvtd.h,237
#define IRCOMM_H21,775
#define IRVTD_MAGIC 32,962
#define COMM_MAX_TTY 33,1007
#define IRVTD_RX_QUEUE_HIGH 34,1030
#define IRVTD_RX_QUEUE_LOW 35,1061
struct icounter_struct icounter_struct45,1309
struct irvtd_cb irvtd_cb50,1396

include/net/irda/irvtd_driver.h,1667
#define VSP_TYPE_NORMAL 26,851
#define VSP_TYPE_CALLOUT 27,879
#define IRCOMM_MAJOR 28,907
#define IRVTD_MINOR 30,1045
#define IRVTD_CALLOUT_MINOR 31,1068
#define IRVTD_TYPE_NORMAL 33,1100
#define IRVTD_TYPE_CALLOUT 34,1129
#define IRCOMM_HEADER 37,1161
#define IRCOMM_RESERVE 38,1192
#define IRVTD_ASYNC_HUP_NOTIFY 48,1393
#define IRVTD_ASYNC_SAK	53,1590
#define IRVTD_ASYNC_SPLIT_TERMIOS 55,1663
#define IRVTD_ASYNC_SPD_MASK	57,1747
#define IRVTD_ASYNC_SPD_HI	58,1783
#define IRVTD_ASYNC_SPD_VHI	60,1855
#define IRVTD_ASYNC_SPD_CUST	61,1929
#define IRVTD_ASYNC_SKIP_TEST	63,2000
#define IRVTD_ASYNC_AUTO_IRQ 64,2084
#define IRVTD_ASYNC_SESSION_LOCKOUT 65,2172
#define IRVTD_ASYNC_PGRP_LOCKOUT 66,2257
#define IRVTD_ASYNC_CALLOUT_NOHUP 67,2340
#define IRVTD_ASYNC_FLAGS	69,2422
#define IRVTD_ASYNC_USR_MASK 70,2488
#define IRVTD_ASYNC_INITIALIZED	74,2651
#define IRVTD_ASYNC_CALLOUT_ACTIVE	75,2728
#define IRVTD_ASYNC_NORMAL_ACTIVE	76,2806
#define IRVTD_ASYNC_BOOT_AUTOCONF	77,2881
#define IRVTD_ASYNC_CLOSING	78,2961
#define IRVTD_ASYNC_CTS_FLOW	79,3030
#define IRVTD_ASYNC_CHECK_CD	80,3097
#define IRVTD_ASYNC_SHARE_IRQ	81,3157
#define IRVTD_ASYNC_CLOSING_WAIT_INF 84,3231
#define IRVTD_ASYNC_CLOSING_WAIT_NONE 85,3271
#define DELTA_DTR 89,3358
#define DELTA_RTS 90,3381
#define MCR_DTR 91,3404
#define MCR_RTS 92,3425
#define DELTA_CTS 94,3447
#define DELTA_DSR 95,3470
#define DELTA_RI 96,3493
#define DELTA_DCD 97,3517
#define MSR_CTS 98,3540
#define MSR_DSR 99,3563
#define MSR_RI 100,3586
#define MSR_DCD 101,3610
#define LSR_OE 103,3634
#define LSR_PE 104,3691
#define LSR_FE 105,3747
#define LSR_BI 106,3802

include/net/irda/pc87108.h,2902
#define PC87108_H29,1135
#define APEDCRC	34,1219
#define ENBNKSEL	35,1241
#define TXD 38,1276
#define RXD 39,1330
#define IER	42,1401
#define IER_RXHDL_IE 43,1450
#define IER_TXLDL_IE 44,1520
#define IER_LS_IE	45,1591
#define IER_ETXURI 46,1642
#define IER_DMA_IE	47,1689
#define IER_TXEMP_IE 48,1742
#define IER_SFIF_IE 49,1771
#define IER_TMR_IE 50,1829
#define FCR	52,1877
#define FCR_FIFO_EN 53,1914
#define FCR_RXSR 54,1963
#define FCR_TXSR 55,2017
#define FCR_RXTH	56,2071
#define FCR_TXTH	57,2129
#define EIR	59,2188
#define EIR_RXHDL_EV	60,2224
#define EIR_TXLDL_EV 61,2250
#define EIR_LS_EV	62,2279
#define EIR_DMA_EV	63,2302
#define EIR_TXEMP_EV	64,2326
#define EIR_SFIF_EV 65,2352
#define EIR_TMR_EV 66,2381
#define LCR 68,2411
#define LCR_WLS_8 69,2468
#define BSR 71,2511
#define BSR_BKSE 72,2564
#define BANK0 73,2593
#define BANK1	74,2663
#define BANK2	75,2690
#define BANK3	76,2717
#define BANK4	77,2744
#define BANK5	78,2771
#define BANK6	79,2798
#define BANK7 80,2825
#define MCR	82,2850
#define MCR_MODE_MASK	83,2896
#define MCR_UART 84,2926
#define MCR_RESERVED 85,2955
#define MCR_SHARP_IR 86,2984
#define MCR_SIR 87,3013
#define MCR_MIR 88,3042
#define MCR_FIR	89,3065
#define MCR_CEIR 90,3087
#define MCR_DMA_EN	91,3116
#define MCR_EN_IRQ	92,3140
#define MCR_TX_DFR	93,3164
#define LSR 95,3189
#define LSR_RXDA 96,3245
#define LSR_TXRDY 97,3304
#define LSR_TXEMP 98,3357
#define ASCR 100,3411
#define ASCR_RXF_TOUT 101,3484
#define ASCR_FEND_INF 102,3535
#define ASCR_S_EOT 103,3597
#define ASCT_RXBSY 104,3656
#define ASCR_TXUR 105,3699
#define ASCR_CTE 106,3754
#define BGDL 109,3821
#define BGDH 110,3895
#define ECR1	112,3971
#define ECR1_EXT_SL	113,4024
#define ECR1_DMANF	114,4076
#define ECR1_DMATH 115,4119
#define ECR1_DMASWP	116,4148
#define EXCR2	118,4189
#define EXCR2_TFSIZ	119,4209
#define EXCR2_RFSIZ	120,4258
#define TXFLV 122,4308
#define RXFLV 123,4357
#define MID	126,4420
#define TMRL 129,4452
#define TMRH 130,4502
#define IRCR1 131,4553
#define IRCR1_TMR_EN 132,4616
#define TFRLL	134,4665
#define TFRLH	135,4685
#define RFRLL	136,4705
#define RFRLH	137,4725
#define IRCR2 140,4759
#define IRCR2_MDRS 141,4822
#define IRCR2_FEND_MD 142,4878
#define FRM_ST 144,4914
#define FRM_ST_VLD 145,4967
#define FRM_ST_ERR_MSK 146,5031
#define FRM_ST_LOST_FR 147,5060
#define FRM_ST_MAX_LEN 148,5106
#define FRM_ST_PHY_ERR 149,5164
#define FRM_ST_BAD_CRC 150,5220
#define FRM_ST_OVR1 151,5250
#define FRM_ST_OVR2 152,5301
#define RFLFL 154,5363
#define RFLFH 155,5392
#define IR_CFG2	158,5435
#define IR_CFG2_DIS_CRC	159,5457
#define IRM_CR	162,5500
#define IRM_CR_IRX_MSL	163,5560
#define IRM_CR_AF_MNT 164,5588
struct st_fifo_entry st_fifo_entry167,5686
struct st_fifo st_fifo172,5736
struct pc87108 pc87108180,5861
static inline void switch_bank(189,6057

include/net/irda/qos.h,767
#define QOS_H26,1031
#define PI_BAUD_RATE 31,1099
#define PI_MAX_TURN_TIME 32,1129
#define PI_DATA_SIZE 33,1159
#define PI_WINDOW_SIZE 34,1189
#define PI_ADD_BOFS 35,1219
#define PI_MIN_TURN_TIME 36,1249
#define PI_LINK_DISC 37,1279
#define PI_COMPRESSION 38,1309
#define IR_115200_MAX 41,1366
#define IR_2400 44,1424
#define IR_9600 45,1448
#define IR_19200 46,1472
#define IR_38400 47,1496
#define IR_57600 48,1520
#define IR_115200 49,1544
#define IR_576000 50,1568
#define IR_1152000 51,1592
#define IR_4000000 54,1648
} qos_value_t;qos_value_t60,1796
struct qos_info qos_info62,1812
extern int baud_rates[80,2189
extern int data_size[81,2214
extern int min_turn_time[82,2238
extern int add_bofs[83,2266
extern int compression[84,2289

include/net/irda/smc_ircc.h,2718
static char *rcsid 2,6
#define SMC_IRCC_H6,113
#define FIR_XMIT	8,133
#define FIR_RECEIVE	9,152
#define SIR_XMIT	10,174
#define SIR_RECEIVE	11,193
#define MASTER	13,216
#define MASTER_POWERDOWN	14,238
#define MASTER_RESET	15,268
#define MASTER_INT_EN	16,295
#define MASTER_ERROR_RESET	17,323
#define IIR	21,380
#define IER	22,397
#define LSR	23,414
#define LCR_A	24,431
#define LCR_B	25,450
#define BSR	26,469
#define IIR_ACTIVE_FRAME	28,487
#define IIR_EOM 29,517
#define IIR_RAW_MODE	30,540
#define IIR_FIFO	31,567
#define IER_ACTIVE_FRAME	33,591
#define IER_EOM 34,621
#define IER_RAW_MODE	35,644
#define IER_FIFO	36,671
#define LSR_UNDER_RUN	38,695
#define LSR_OVER_RUN	39,723
#define LSR_FRAME_ERROR 40,750
#define LSR_SIZE_ERROR	41,780
#define LSR_CRC_ERROR	42,809
#define LSR_FRAME_ABORT 43,837
#define LCR_A_FIFO_RESET 45,868
#define LCR_A_FAST 46,905
#define LCR_A_GP_DATA 47,942
#define LCR_A_RAW_TX 48,979
#define LCR_A_RAW_RX 49,1016
#define LCR_A_ABORT 50,1053
#define LCR_A_DATA_DONE 51,1090
#define LCR_B_SCE_MODE_DISABLED 53,1128
#define LCR_B_SCE_MODE_TRANSMIT 54,1169
#define LCR_B_SCE_MODE_RECEIVE	55,1210
#define LCR_B_SCE_MODE_UNDEFINED	56,1250
#define LCR_B_SIP_ENABLE	57,1291
#define LCR_B_BRICK_WALL	58,1322
#define BSR_NOT_EMPTY	60,1354
#define BSR_FIFO_FULL	61,1381
#define BSR_TIMEOUT	62,1408
#define SCE_CFG_A	66,1458
#define SCE_CFG_B	67,1481
#define FIFO_THRESHOLD	68,1504
#define CFG_A_AUX_IR	70,1533
#define CFG_A_HALF_DUPLEX	71,1563
#define CFG_A_TX_POLARITY	72,1597
#define CFG_A_RX_POLARITY	73,1631
#define CFG_A_COM	75,1663
#define CFG_A_IRDA_SIR_A	76,1690
#define CFG_A_ASK_SIR	77,1723
#define CFG_A_IRDA_SIR_B	78,1754
#define CFG_A_IRDA_HDLC 79,1787
#define CFG_A_IRDA_4PPM 80,1820
#define CFG_A_CONSUMER	81,1853
#define CFG_A_RAW_IR	82,1885
#define CFG_A_OTHER	83,1915
#define IR_HDLC	85,1945
#define IR_4PPM	86,1968
#define IR_CONSUMER	87,1991
#define CFG_B_LOOPBACK	89,2018
#define CFG_B_LPBCK_TX_CRC	90,2050
#define CFG_B_NOWAIT	91,2085
#define CFB_B_STRING_MOVE	92,2115
#define CFG_B_DMA_BURST 93,2149
#define CFG_B_DMA_ENABLE	94,2182
#define CFG_B_MUX_COM	96,2213
#define CFG_B_MUX_IR	97,2244
#define CFG_B_MUX_AUX	98,2274
#define CFG_B_INACTIVE	99,2305
#define SMSC_ID_HIGH	105,2439
#define SMSC_ID_LOW	106,2478
#define CHIP_ID 107,2516
#define VERSION_NUMBER	108,2551
#define HOST_INTERFACE	109,2592
#define IR_CONTROL 112,2685
#define BOF_COUNT_LO 113,2716
#define BRICK_WALL_CNT_LO 114,2747
#define BRICK_TX_CNT_HI 115,2778
#define TX_DATA_SIZE_LO 116,2809
#define RX_DATA_SIZE_HI 117,2840
#define RX_DATA_SIZE_LO 118,2871
#define SELECT_1152 120,2903
#define CRC_SELECT 121,2935

include/net/irda/w83977af.h,338
#define W83977AF_H2,19
#define W977_EFER 4,39
#define W977_EFIR 5,63
#define W977_EFDR 6,87
#define W977_DEVICE_IR 7,111
static inline void w977_efm_enter(13,180
static inline void w977_select_device(23,328
static inline void w977_write_reg(32,473
static inline __u8 w977_read_reg(41,620
static inline void w977_efm_exit(50,753

include/net/irda/w83977af_ir.h,2482
#define W83977AF_IR_H26,992
#define ENBNKSEL	31,1080
#define APEDCRC	32,1102
#define TXW4C 33,1124
#define RXW4C 34,1153
#define RBR 37,1196
#define TBR 38,1256
#define ICR	40,1320
#define ICR_ERBRI 41,1377
#define ICR_ETBREI 42,1447
#define ICR_EUSRI	43,1509
#define ICR_EHSRI 44,1558
#define ICR_ETXURI 45,1587
#define ICR_EDMAI	46,1634
#define ICR_ETXTHI 47,1677
#define ICR_EFSFI 48,1744
#define ICR_ETMRI 49,1807
#define UFR	51,1859
#define UFR_EN_FIFO 52,1905
#define UFR_RXF_RST 53,1954
#define UFR_TXF_RST 54,2003
#define UFR_RXTL	55,2052
#define UFR_TXTL	56,2110
#define ISR	58,2169
#define ISR_RXTH_I	59,2219
#define ISR_TXEMP_I 60,2277
#define ISR_FEND_I	61,2340
#define ISR_DMA_I	62,2364
#define ISR_TXTH_I	63,2387
#define ISR_FSF_I 64,2449
#define ISR_TMR_I 65,2478
#define UCR 67,2530
#define UCR_DLS8 68,2587
#define SSR 70,2627
#define SET0 71,2680
#define SET1	72,2746
#define SET2	73,2811
#define SET3	74,2837
#define SET4	75,2863
#define SET5	76,2889
#define SET6	77,2915
#define SET7	78,2941
#define HCR	80,2968
#define HCR_MODE_MASK	81,2986
#define HCR_SIR 82,3016
#define HCR_MIR_576 83,3045
#define HCR_MIR_1152	84,3073
#define HCR_FIR	85,3099
#define HCR_EN_DMA	86,3121
#define HCR_EN_IRQ	87,3145
#define HCR_TX_WT	88,3169
#define USR 90,3193
#define USR_RDR 91,3247
#define USR_TSRE 92,3301
#define AUDR 94,3356
#define AUDR_SFEND 95,3385
#define AUDR_RXBSY 96,3436
#define AUDR_UNDR 97,3479
#define ABLL 100,3547
#define ABHL 101,3626
#define ADCR1	103,3707
#define ADCR1_ADV_SL	104,3727
#define ADCR1_D_CHSW	105,3754
#define ADCR1_DMA_F	106,3824
#define ADCR2	108,3850
#define ADCR2_TXFS32	109,3870
#define ADCR2_RXFS32	110,3896
#define RXFDTH 112,3923
#define AUID	115,3965
#define TMRL 118,3997
#define TMRH 119,4064
#define IR_MSL 121,4133
#define IR_MSL_EN_TMR 122,4189
#define TFRLL	124,4238
#define TFRLH	125,4300
#define RFRLL	126,4363
#define RFRLH	127,4422
#define FS_FO 131,4496
#define FS_FO_FSFDR 132,4549
#define FS_FO_LST_FR 133,4613
#define FS_FO_MX_LEX 134,4659
#define FS_FO_PHY_ERR 135,4717
#define FS_FO_CRC_ERR 136,4773
#define FS_FO_RX_OV 137,4803
#define FS_FO_FSF_OV 138,4854
#define FS_FO_ERR_MSK 139,4915
#define RFLFL 141,4962
#define RFLFH 142,4991
#define IR_CFG2	145,5033
#define IR_CFG2_DIS_CRC	146,5055
#define IRM_CR	149,5097
#define IRM_CR_IRX_MSL	150,5157
#define IRM_CR_AF_MNT 151,5185
static inline void switch_bank(153,5238

include/net/irda/wrapper.h,268
#define WRAPPER_H26,1027
#define BOF 33,1133
#define XBOF 34,1176
#define EOF 35,1194
#define CE 36,1231
#define STA 38,1271
#define STO 39,1305
#define IR_TRANS 41,1338
	OUTSIDE_FRAME 44,1419
	BEGIN_FRAME,45,1440
	LINK_ESCAPE,46,1455
	INSIDE_FRAME47,1470

include/net/irda/irlpt_cli_fsm.h,29
#define IRLPT_EVENT_H23,862

include/net/irda/irlpt_common.h,1180
#define IRLPT_COMMON_H28,1019
extern char *irlpt_service_type[41,1260
extern char *irlpt_port_type[42,1295
extern char *irlpt_connected[43,1327
extern char *irlpt_reasons[44,1359
extern char *irlpt_client_fsm_state[45,1389
extern char *irlpt_server_fsm_state[46,1428
extern char *irlpt_fsm_event[47,1467
extern struct wait_queue *lpt_wait;49,1500
} IRLPT_CLIENT_STATE;IRLPT_CLIENT_STATE71,2249
} IRLPT_SERVER_STATE;IRLPT_SERVER_STATE76,2327
} IRLPT_EVENT;IRLPT_EVENT93,2667
struct irlpt_info irlpt_info95,2683
#define IRLPT_MAX_PACKET 104,2803
#define IRLPT_MAX_HEADER 105,2833
#define IRLPT_MAX_DEVICES 106,2873
#define IRLPT_MAGIC 107,2901
} IRLPT_SERVER_STATUS;IRLPT_SERVER_STATUS114,3015
#define IRLPT_LSAP 116,3039
#define PI_SERVICE_TYPE	118,3069
#define IRLPT_UNKNOWN 120,3099
#define IRLPT_THREE_WIRE_RAW 121,3168
#define IRLPT_THREE_WIRE 122,3216
#define IRLPT_NINE_WIRE	123,3264
#define IRLPT_CENTRONICS 124,3312
#define IRLPT_SERVER_MODE 125,3360
#define PI_PORT_TYPE	127,3426
#define IRLPT_SERIAL	129,3453
#define IRLPT_PARALLEL	130,3492
#define PI_PORT_NAME	132,3534
#define PI_CRITICAL	134,3561
struct irlpt_cb irlpt_cb136,3587

include/net/irda/irlpt_server.h,77
#define IRLPT_SERVER_H27,1027
extern struct irlpt_cb *irlpt_server;40,1271

include/net/irda/irlpt_server_fsm.h,29
#define IRLPT_EVENT_H23,866

include/net/irda/uircc.h,2016
#define UIRCC_H27,1088
#define UIRCC_CR0 30,1142
#define UIRCC_CR0_XMIT_RST 31,1200
#define UIRCC_CR0_RECV_RST 32,1254
#define UIRCC_CR0_TMR_RST 33,1307
#define UIRCC_CR0_SYS_RST 34,1358
#define UIRCC_CR0_CARR_RST 35,1410
#define UIRCC_CR0_CNT_SWT 36,1469
#define UIRCC_CR1 38,1547
#define UIRCC_CR1_RX_DMA 39,1625
#define UIRCC_CR1_TX_DMA 40,1676
#define UIRCC_CR1_DMA_BRST 41,1727
#define UIRCC_CR1_MUST_SET 42,1781
#define UIRCC_CR2 44,1833
#define UIRCC_CR2_RECV_OVR 45,1896
#define UIRCC_CR2_RECV_FRM 46,1957
#define UIRCC_CR2_RECV_END 47,2016
#define UIRCC_CR2_TMR_OUT 48,2067
#define UIRCC_CR2_XMIT_UNR 49,2121
#define UIRCC_CR2_XMIT_END 50,2185
#define UIRCC_CR2_RECV_MASK 51,2237
#define UIRCC_CR2_XMIT_MASK 52,2270
#define UIRCC_CR3 54,2304
#define UIRCC_CR3_XMIT_EN 55,2368
#define UIRCC_CR3_TX_CRC_EN 56,2423
#define UIRCC_CR3_RECV_EN 57,2488
#define UIRCC_CR3_RX_CRC_EN 58,2542
#define UIRCC_CR3_ADDR_CMP 59,2600
#define UIRCC_CR3_MCAST_EN 60,2665
#define UIRCC_CR4 62,2722
#define UIRCC_CR5 63,2791
#define UIRCC_CR6 64,2861
#define UIRCC_CR7 65,2931
#define UIRCC_CR8 67,3003
#define UIRCC_CR9 69,3061
#define UIRCC_CR10 71,3118
#define UIRCC_CR10_SIR 72,3173
#define UIRCC_CR10_FIR 73,3225
#define UIRCC_CR11 75,3278
#define UIRCC_CR11_TMR_EN 76,3349
#define UIRCC_CR12 78,3383
#define UIRCC_CR13 79,3461
#define UIRCC_SR0 82,3576
#define UIRCC_SR0_RX_RDY 83,3648
#define UIRCC_SR0_RX_OVR 84,3707
#define UIRCC_SR0_RX_CRCFRM 85,3768
#define UIRCC_SR2 87,3837
#define UIRCC_SR3 89,3899
#define UIRCC_SR3_RX_OVR_ER 90,3964
#define UIRCC_SR3_RX_FRM_ER 91,4025
#define UIRCC_SR3_RX_EOF 92,4087
#define UIRCC_SR3_TMR_OUT 93,4147
#define UIRCC_SR3_TXUR 94,4200
#define UIRCC_SR3_TX_DONE 95,4257
#define UIRCC_SR4 97,4315
#define UIRCC_SR5 98,4389
#define UIRCC_SR8 100,4465
#define UIRCC_SR9 102,4518
#define UIRCC_SR10 104,4574
#define UIRCC_SR12 106,4634
#define UIRCC_SR13 107,4705
struct uircc_cb uircc_cb110,4815
#define CR3_SET116,4919

include/net/irda/irlan_client.h,31
#define IRLAN_CLIENT_H26,1040

include/net/irda/irlan_filter.h,31
#define IRLAN_FILTER_H26,1007

include/net/irda/irlan_provider.h,31
#define IRLAN_SERVER_H26,1042

include/scsi/scsi.h,3983
#define _LINUX_SCSI_H2,22
#define TEST_UNIT_READY 21,382
#define REZERO_UNIT 22,417
#define REQUEST_SENSE 23,452
#define FORMAT_UNIT 24,487
#define READ_BLOCK_LIMITS 25,522
#define REASSIGN_BLOCKS 26,557
#define READ_6 27,592
#define WRITE_6 28,627
#define SEEK_6 29,662
#define READ_REVERSE 30,697
#define WRITE_FILEMARKS 31,732
#define SPACE 32,767
#define INQUIRY 33,802
#define RECOVER_BUFFERED_DATA 34,837
#define MODE_SELECT 35,872
#define RESERVE 36,907
#define RELEASE 37,942
#define COPY 38,977
#define ERASE 39,1012
#define MODE_SENSE 40,1047
#define START_STOP 41,1082
#define RECEIVE_DIAGNOSTIC 42,1117
#define SEND_DIAGNOSTIC 43,1152
#define ALLOW_MEDIUM_REMOVAL 44,1187
#define SET_WINDOW 46,1223
#define READ_CAPACITY 47,1258
#define READ_10 48,1293
#define WRITE_10 49,1328
#define SEEK_10 50,1363
#define WRITE_VERIFY 51,1398
#define VERIFY 52,1433
#define SEARCH_HIGH 53,1468
#define SEARCH_EQUAL 54,1503
#define SEARCH_LOW 55,1538
#define SET_LIMITS 56,1573
#define PRE_FETCH 57,1608
#define READ_POSITION 58,1643
#define SYNCHRONIZE_CACHE 59,1678
#define LOCK_UNLOCK_CACHE 60,1713
#define READ_DEFECT_DATA 61,1748
#define MEDIUM_SCAN 62,1783
#define COMPARE 63,1818
#define COPY_VERIFY 64,1853
#define WRITE_BUFFER 65,1888
#define READ_BUFFER 66,1923
#define UPDATE_BLOCK 67,1958
#define READ_LONG 68,1993
#define WRITE_LONG 69,2028
#define CHANGE_DEFINITION 70,2063
#define WRITE_SAME 71,2098
#define READ_TOC 72,2133
#define LOG_SELECT 73,2168
#define LOG_SENSE 74,2203
#define MODE_SELECT_10 75,2238
#define MODE_SENSE_10 76,2273
#define MOVE_MEDIUM 77,2308
#define READ_12 78,2343
#define WRITE_12 79,2378
#define WRITE_VERIFY_12 80,2413
#define SEARCH_HIGH_12 81,2448
#define SEARCH_EQUAL_12 82,2483
#define SEARCH_LOW_12 83,2518
#define READ_ELEMENT_STATUS 84,2553
#define SEND_VOLUME_TAG 85,2588
#define WRITE_LONG_2 86,2623
#define GOOD 92,2684
#define CHECK_CONDITION 93,2718
#define CONDITION_GOOD 94,2752
#define BUSY 95,2786
#define INTERMEDIATE_GOOD 96,2820
#define INTERMEDIATE_C_GOOD 97,2854
#define RESERVATION_CONFLICT 98,2888
#define COMMAND_TERMINATED 99,2922
#define QUEUE_FULL 100,2956
#define STATUS_MASK 102,2991
#define NO_SENSE 108,3049
#define RECOVERED_ERROR 109,3082
#define NOT_READY 110,3115
#define MEDIUM_ERROR 111,3148
#define HARDWARE_ERROR 112,3181
#define ILLEGAL_REQUEST 113,3214
#define UNIT_ATTENTION 114,3247
#define DATA_PROTECT 115,3280
#define BLANK_CHECK 116,3313
#define COPY_ABORTED 117,3346
#define ABORTED_COMMAND 118,3379
#define VOLUME_OVERFLOW 119,3412
#define MISCOMPARE 120,3445
#define TYPE_DISK 127,3505
#define TYPE_TAPE 128,3538
#define TYPE_PROCESSOR 129,3571
#define TYPE_WORM 130,3634
#define TYPE_ROM 131,3705
#define TYPE_SCANNER 132,3738
#define TYPE_MOD 133,3771
#define TYPE_MEDIUM_CHANGER 135,3871
#define TYPE_ENCLOSURE 136,3904
#define TYPE_NO_LUN 137,3972
struct ccs_modesel_headccs_modesel_head145,4123
#define COMMAND_COMPLETE 165,4701
#define EXTENDED_MESSAGE 166,4734
#define     EXTENDED_MODIFY_DATA_POINTER 167,4767
#define     EXTENDED_SDTR 168,4816
#define     EXTENDED_EXTENDED_IDENTIFY 169,4865
#define     EXTENDED_WDTR 170,4935
#define SAVE_POINTERS 171,4984
#define RESTORE_POINTERS 172,5017
#define DISCONNECT 173,5050
#define INITIATOR_ERROR 174,5083
#define ABORT 175,5116
#define MESSAGE_REJECT 176,5149
#define NOP 177,5182
#define MSG_PARITY_ERROR 178,5215
#define LINKED_CMD_COMPLETE 179,5248
#define LINKED_FLG_CMD_COMPLETE 180,5281
#define BUS_DEVICE_RESET 181,5318
#define INITIATE_RECOVERY 183,5352
#define RELEASE_RECOVERY 184,5415
#define SIMPLE_QUEUE_TAG 186,5479
#define HEAD_OF_QUEUE_TAG 187,5512
#define ORDERED_QUEUE_TAG 188,5545
#define SCSI_IOCTL_GET_IDLUN 195,5727
#define SCSI_IOCTL_TAGGED_ENABLE 199,5827
#define SCSI_IOCTL_TAGGED_DISABLE 200,5867
#define SCSI_IOCTL_PROBE_HOST 203,5959
#define SCSI_IOCTL_GET_BUS_NUMBER 206,6043

include/scsi/scsi_ioctl.h,587
#define _SCSI_IOCTL_H 2,22
#define SCSI_IOCTL_SEND_COMMAND 4,46
#define SCSI_IOCTL_TEST_UNIT_READY 5,80
#define SCSI_IOCTL_BENCHMARK_COMMAND 6,117
#define SCSI_IOCTL_SYNC 7,156
#define SCSI_IOCTL_START_UNIT 8,221
#define SCSI_IOCTL_STOP_UNIT 9,253
#define SCSI_IOCTL_DOORLOCK 12,372
#define SCSI_IOCTL_DOORUNLOCK 13,439
#define	SCSI_REMOVAL_PREVENT	15,507
#define	SCSI_REMOVAL_ALLOW	16,538
typedef struct scsi_ioctl_command scsi_ioctl_command24,636
} Scsi_Ioctl_Command;Scsi_Ioctl_Command28,739
typedef struct scsi_idlun scsi_idlun30,762
} Scsi_Idlun;Scsi_Idlun33,828

include/scsi/scsicam.h,25
#define SCSICAM_H14,334

include/scsi/sg.h,360
#define _SCSI_GENERIC_H9,205
struct sg_headersg_header17,406
#define SG_SET_TIMEOUT 30,943
#define SG_GET_TIMEOUT 31,1013
#define SG_EMULATED_HOST 33,1078
#define SG_SET_TRANSFORM 36,1232
#define SG_GET_TRANSFORM 37,1264
#define SG_DEFAULT_TIMEOUT 39,1297
#define SG_DEFAULT_RETRIES 40,1355
#define SG_MAX_QUEUE 42,1385
#define SG_BIG_BUFF 45,1515

include/video/fbcon-afb.h,137
#define _VIDEO_FBCON_AFB_H6,88
#define FBCON_HAS_AFB12,223
#define FBCON_HAS_AFB16,288
extern struct display_switch fbcon_afb;20,325

include/video/fbcon-cfb16.h,145
#define _VIDEO_FBCON_CFB16_H6,96
#define FBCON_HAS_CFB1612,237
#define FBCON_HAS_CFB1616,306
extern struct display_switch fbcon_cfb16;20,345

include/video/fbcon-cfb2.h,141
#define _VIDEO_FBCON_CFB2_H6,93
#define FBCON_HAS_CFB212,231
#define FBCON_HAS_CFB216,298
extern struct display_switch fbcon_cfb2;20,336

include/video/fbcon-cfb24.h,145
#define _VIDEO_FBCON_CFB24_H6,96
#define FBCON_HAS_CFB2412,237
#define FBCON_HAS_CFB2416,306
extern struct display_switch fbcon_cfb24;20,345

include/video/fbcon-cfb32.h,145
#define _VIDEO_FBCON_CFB32_H6,96
#define FBCON_HAS_CFB3212,237
#define FBCON_HAS_CFB3216,306
extern struct display_switch fbcon_cfb32;20,345

include/video/fbcon-cfb4.h,141
#define _VIDEO_FBCON_CFB4_H6,93
#define FBCON_HAS_CFB412,231
#define FBCON_HAS_CFB416,298
extern struct display_switch fbcon_cfb4;20,336

include/video/fbcon-cfb8.h,141
#define _VIDEO_FBCON_CFB8_H6,93
#define FBCON_HAS_CFB812,231
#define FBCON_HAS_CFB816,298
extern struct display_switch fbcon_cfb8;20,336

include/video/fbcon-ilbm.h,144
#define _VIDEO_FBCON_ILBM_H6,102
#define FBCON_HAS_ILBM 12,242
#define FBCON_HAS_ILBM 16,311
extern struct display_switch fbcon_ilbm;20,350

include/video/fbcon-iplan2p2.h,158
#define _VIDEO_FBCON_IPLAN2P2_H6,121
#define FBCON_HAS_IPLAN2P212,271
#define FBCON_HAS_IPLAN2P216,346
extern struct display_switch fbcon_iplan2p2;20,388

include/video/fbcon-iplan2p4.h,158
#define _VIDEO_FBCON_IPLAN2P4_H6,121
#define FBCON_HAS_IPLAN2P412,271
#define FBCON_HAS_IPLAN2P416,346
extern struct display_switch fbcon_iplan2p4;20,388

include/video/fbcon-iplan2p8.h,158
#define _VIDEO_FBCON_IPLAN2P8_H6,121
#define FBCON_HAS_IPLAN2P812,271
#define FBCON_HAS_IPLAN2P816,346
extern struct display_switch fbcon_iplan2p8;20,388

include/video/fbcon-mac.h,138
#define _VIDEO_FBCON_MAC_H6,103
#define FBCON_HAS_MAC12,238
#define FBCON_HAS_MAC16,303
extern struct display_switch fbcon_mac;20,340

include/video/fbcon-mfb.h,137
#define _VIDEO_FBCON_MFB_H6,83
#define FBCON_HAS_MFB12,218
#define FBCON_HAS_MFB16,283
extern struct display_switch fbcon_mfb;20,320

include/video/fbcon-vga.h,137
#define _VIDEO_FBCON_VGA_H6,92
#define FBCON_HAS_VGA12,227
#define FBCON_HAS_VGA16,292
extern struct display_switch fbcon_vga;20,329

include/video/fbcon.h,2072
#define _VIDEO_FBCON_H12,331
struct display_switch display_switch23,543
extern struct display_switch fbcon_dummy;42,1509
#define fontheight(fontheight44,1552
#define fontheightlog(fontheightlog45,1593
#define FONTWIDTH(FONTWIDTH50,1719
#define FONTWIDTHRANGE(FONTWIDTHRANGE52,1814
#define fontwidth(fontwidth54,1858
#define fontwidthlog(fontwidthlog55,1883
#define FONTWIDTH(FONTWIDTH60,1960
#define FONTWIDTHRANGE(FONTWIDTHRANGE62,2055
#define fontwidth(fontwidth64,2120
#define fontwidthlog(fontwidthlog65,2159
#define attr_fgcol(attr_fgcol74,2268
#define attr_bgcol(attr_bgcol76,2331
#define	attr_bgcol_ec(attr_bgcol_ec78,2394
#define attr_bold(attr_bold82,2517
#define attr_reverse(attr_reverse84,2557
#define attr_underline(attr_underline86,2631
#define attr_blink(attr_blink88,2676
#define __SCROLL_YPAN	96,2784
#define __SCROLL_YWRAP	97,2813
#define __SCROLL_YMOVE	98,2843
#define __SCROLL_YREDRAW	99,2873
#define __SCROLL_YMASK	100,2904
#define __SCROLL_YFIXED	101,2934
#define __SCROLL_YNOMOVE	102,2965
#define __SCROLL_YPANREDRAW	103,2996
#define __SCROLL_YNOPARTIAL	104,3030
#define SCROLL_YREDRAW	119,3806
#define SCROLL_YNOMOVE	120,3865
#define SCROLL_YNOPARTIAL	128,4189
static __inline__ void *mymemclear_small(181,6264
static __inline__ void *mymemclear(204,6882
static __inline__ void *mymemset(246,8294
static __inline__ void *mymemmove(269,8911
static __inline__ void fast_memmove(347,12347
static __inline__ void *sun4_memset(383,13448
static __inline__ void *mymemset(391,13605
static __inline__ void *mymemclear(396,13705
static __inline__ void *mymemclear_small(401,13805
static __inline__ void fast_memmove(407,13995
static __inline__ void *mymemmove(418,14257
static __inline__ void *mymemclear_small(426,14394
static __inline__ void *mymemclear(431,14496
static __inline__ void *mymemset(436,14592
static __inline__ void fast_memmove(443,14711
static __inline__ void *mymemmove(486,15561
static __inline__ void *mymemmove(499,15871
static __inline__ void fast_memmove(504,15982

include/video/font.h,515
#define _VIDEO_FONT_H12,287
struct fbcon_font_desc fbcon_font_desc16,336
#define VGA8x8_IDX	24,447
#define VGA8x16_IDX	25,468
#define PEARL8x8_IDX	26,490
#define VGA6x11_IDX	27,513
#define SUN8x16_IDX	28,535
#define SUN12x22_IDX	29,557
#define ACORN8x8_IDX	30,580
extern struct fbcon_font_desc	font_vga_8x8,32,604
				font_vga_8x16,33,648
				font_pearl_8x8,34,667
				font_vga_6x11,35,687
				font_sun_8x16,36,706
				font_sun_12x22,37,725
				font_acorn_8x8;38,745
#define MAX_FONT_NAME	49,1050

include/video/macmodes.h,961
#define _VIDEO_MACMODES_H12,319
#define VMODE_NVRAM	20,479
#define VMODE_512_384_60I	21,502
#define VMODE_512_384_60	22,568
#define VMODE_640_480_50I	23,615
#define VMODE_640_480_60I	24,680
#define VMODE_640_480_60	25,746
#define VMODE_640_480_67	26,799
#define VMODE_640_870_75P	27,846
#define VMODE_768_576_50I	28,905
#define VMODE_800_600_56	29,970
#define VMODE_800_600_60	30,1017
#define VMODE_800_600_72	31,1065
#define VMODE_800_600_75	32,1113
#define VMODE_832_624_75	33,1161
#define VMODE_1024_768_60	34,1209
#define VMODE_1024_768_70	35,1259
#define VMODE_1024_768_75V	36,1320
#define VMODE_1024_768_75	37,1378
#define VMODE_1152_870_75	38,1428
#define VMODE_1280_960_75	39,1478
#define VMODE_1280_1024_75	40,1528
#define VMODE_MAX	41,1580
#define VMODE_CHOOSE	42,1602
#define CMODE_NVRAM	44,1628
#define CMODE_8	45,1652
#define CMODE_16	46,1691
#define CMODE_32	47,1745
#define NV_VMODE	61,2121
#define NV_CMODE	62,2146

include/video/s3blit.h,1801
#define _VIDEO_S3BLIT_H2,24
#define S3_BITBLT 5,67
#define S3_TWOPOINTLINE 6,98
#define S3_FILLEDRECT 7,129
#define S3_FIFO_EMPTY 9,161
#define S3_HDW_BUSY 10,190
#define S3_READ_SEL 14,265
#define S3_MULT_MISC 15,312
#define S3_ERR_TERM 16,359
#define S3_FRGD_COLOR 17,391
#define S3_BKGD_COLOR 18,423
#define S3_PIXEL_CNTL 19,455
#define S3_FRGD_MIX 20,502
#define S3_BKGD_MIX 21,534
#define S3_CUR_Y 22,566
#define S3_CUR_X 23,598
#define S3_DESTY_AXSTP 24,630
#define S3_DESTX_DIASTP 25,662
#define S3_MIN_AXIS_PCNT 26,694
#define S3_MAJ_AXIS_PCNT 27,741
#define S3_CMD 28,773
#define S3_GP_STAT 29,805
#define S3_ADVFUNC_CNTL 30,837
#define S3_WRT_MASK 31,869
#define S3_RD_MASK 32,901
#define S3_ALT_CURXY 35,997
#define S3_ALT_CURXY2 36,1029
#define S3_ALT_STEP 37,1061
#define S3_ALT_STEP2 38,1093
#define S3_ALT_ERR 39,1125
#define S3_ALT_CMD 40,1157
#define S3_ALT_MIX 41,1189
#define S3_ALT_PCNT 42,1221
#define S3_ALT_PAT 43,1253
#define S3_NOTCUR 46,1306
#define S3_LOGICALZERO 47,1340
#define S3_LOGICALONE 48,1374
#define S3_LEAVEASIS 49,1408
#define S3_NOTNEW 50,1442
#define S3_CURXORNEW 51,1476
#define S3_NOT_CURXORNEW 52,1510
#define S3_NEW 53,1544
#define S3_NOTCURORNOTNEW 54,1578
#define S3_CURORNOTNEW 55,1612
#define S3_NOTCURORNEW 56,1646
#define S3_CURORNEW 57,1680
#define S3_CURANDNEW 58,1714
#define S3_NOTCURANDNEW 59,1748
#define S3_CURANDNOTNEW 60,1782
#define S3_NOTCURANDNOTNEW 61,1816
#define S3_CRTC_ADR 63,1851
#define S3_CRTC_DATA 64,1881
#define S3_REG_LOCK2 66,1912
#define S3_HGC_MODE 67,1938
#define S3_HWGC_ORGX_H 69,1965
#define S3_HWGC_ORGX_L 70,1993
#define S3_HWGC_ORGY_H 71,2021
#define S3_HWGC_ORGY_L 72,2049
#define S3_HWGC_DX 73,2077
#define S3_HWGC_DY 74,2105
#define S3_LAW_CTL 77,2135

include/video/sbusfb.h,698
struct bt_regs bt_regs8,119
struct fb_info_creator fb_info_creator15,384
struct fb_info_cgsix fb_info_cgsix25,549
struct fb_info_bwtwo fb_info_bwtwo32,682
struct fb_info_cgthree fb_info_cgthree35,732
struct fb_info_tcx fb_info_tcx38,784
struct fb_info_leo fb_info_leo44,887
struct fb_info_cgfourteen fb_info_cgfourteen52,1081
struct cg_cursor cg_cursor60,1217
struct sbus_mmap_map sbus_mmap_map73,1679
#define SBUS_MMAP_FBSIZE(SBUS_MMAP_FBSIZE79,1769
#define SBUS_MMAP_EMPTY	80,1802
struct fb_info_sbusfb fb_info_sbusfb82,1838
#define sbusfbinfod(sbusfbinfod138,3732
#define sbusfbinfo(sbusfbinfo139,3801
#define CM(CM140,3860
#define SBUSFBINIT_SIZECHANGE 142,3890

init/main.c,1574
#define __KERNEL_SYSCALLS__12,366
extern char _stext,59,1389
extern char _stext, _etext;59,1389
extern char *linux_banner;60,1417
extern int console_loglevel;62,1445
extern void md_setup(338,9830
#define MAX_INIT_ARGS 344,9926
#define MAX_INIT_ENVS 345,9950
static char * envp_init[368,10558
char *get_options(370,10637
static void __init profile_setup(384,10892
static struct dev_name_struct dev_name_struct393,11035
} root_dev_names[396,11102
} root_dev_names[] __initdata 396,11102
kdev_t __init name_to_kdev_t(499,13142
static void __init root_dev_setup(518,13537
struct kernel_param kernel_param530,13921
static struct kernel_param cooked_params[535,14001
static struct kernel_param cooked_params[] __initdata 535,14001
static struct kernel_param raw_params[853,21394
static struct kernel_param raw_params[] __initdata 853,21394
static void __init ramdisk_start_setup(887,22064
static void __init load_ramdisk(893,22198
static void __init prompt_ramdisk(899,22324
static void __init ramdisk_size(905,22452
static int __init checksetup(912,22573
unsigned long loops_per_sec 942,23416
#define LPS_PREC 947,23630
void __init calibrate_delay(949,23650
static void __init parse_options(1001,25113
int cpu_idle(1070,26511
#define smp_init(smp_init1076,26562
static void __init smp_init(1087,26750
asmlinkage void __init start_kernel(1103,27003
static int do_linuxrc(1190,29214
static void __init no_initrd(1202,29452
struct task_struct *child_reaper 1208,29531
static void __init do_basic_setup(1217,29810
static int init(1346,32750

init/version.c,153
#define version(version14,225
#define version_string(version_string15,258
struct new_utsname system_utsname 19,341
const char *linux_banner 24,466

ipc/msg.c,560
static struct msqid_ds *msgque[27,610
static int msgbytes 28,650
static int msghdrs 29,675
static unsigned short msg_seq 30,699
static int used_queues 31,734
static int max_msqid 32,762
static struct wait_queue *msg_lock 33,788
void __init msg_init 35,832
static int real_msgsnd 46,1045
static int real_msgrcv 124,2810
asmlinkage int sys_msgsnd 223,5329
asmlinkage int sys_msgrcv 233,5525
static int findkey 244,5744
static int newque 260,6033
asmlinkage int sys_msgget 301,7051
static void freeque 329,7693
asmlinkage int sys_msgctl 354,8338

ipc/sem.c,715
static struct semid_ds *semary[64,3186
static int used_sems 65,3226
static struct wait_queue *sem_lock 66,3269
static int max_semid 67,3312
static unsigned short sem_seq 69,3339
void __init sem_init 71,3375
static int findkey 82,3572
static int newary 98,3859
asmlinkage int sys_semget 146,5043
static inline void append_to_queue 180,5871
static inline void prepend_to_queue 187,6079
static inline void remove_from_queue 198,6458
static int try_atomic_semop 214,6923
static void update_queue 277,8221
static int count_semncnt 314,9723
static int count_semzcnt 332,10128
static void freeary 352,10563
asmlinkage int sys_semctl 383,11433
asmlinkage int sys_semop 604,16424
void sem_exit 740,20560

ipc/shm.c,1069
static int shm_tot 29,938
static int shm_rss 30,1004
static int shm_swp 31,1083
static int max_shmid 32,1160
static struct wait_queue *shm_lock 33,1222
static struct shmid_kernel *shm_segs[34,1306
static unsigned short shm_seq 36,1353
static ulong swap_attempts 39,1456
static ulong swap_successes 40,1488
static ulong used_segs 41,1521
void __init shm_init 43,1550
static int findkey 54,1764
static int newseg 73,2128
int shmmax 129,3598
asmlinkage int sys_shmget 131,3620
static void killseg 169,4542
asmlinkage int sys_shmctl 209,5490
static struct vm_operations_struct shm_vm_ops 360,9073
static inline void insert_attach 374,9545
static inline void remove_attach 383,9853
static int shm_map 394,10158
asmlinkage int sys_shmat 443,11483
static void shm_open 558,14713
static void shm_close 581,15327
asmlinkage int sys_shmdt 600,15846
static pte_t shm_swap_in(620,16336
static unsigned long swap_id 696,18338
static unsigned long swap_idx 697,18402
int shm_swap 699,18457
static void shm_unuse_page(814,21342
void shm_unuse(831,21719

ipc/util.c,506
void __init ipc_init 21,525
int ipcperms 33,706
void sem_exit 56,1350
int shm_swap 61,1388
asmlinkage int sys_semget 66,1445
asmlinkage int sys_semop 71,1528
asmlinkage int sys_semctl 76,1624
asmlinkage int sys_msgget 81,1722
asmlinkage int sys_msgsnd 86,1794
asmlinkage int sys_msgrcv 91,1901
asmlinkage int sys_msgctl 97,2030
asmlinkage int sys_shmget 102,2121
asmlinkage int sys_shmat 107,2201
asmlinkage int sys_shmdt 112,2300
asmlinkage int sys_shmctl 117,2363
void shm_unuse(122,2454

kernel/sched.c,5069
unsigned securebits 47,1391
long tick 49,1469
int tickadj 55,1663
int time_state 65,1897
int time_status 66,1958
long time_offset 67,2012
long time_constant 68,2062
long time_tolerance 69,2111
long time_precision 70,2174
long time_maxerror 71,2226
long time_esterror 72,2289
long time_phase 73,2354
long time_freq 74,2407
long time_adj 75,2506
long time_reftime 76,2560
long time_adjust 78,2619
long time_adjust_step 79,2641
unsigned long event 81,2669
unsigned int * prof_buffer 84,2765
unsigned long prof_len 85,2800
unsigned long prof_shift 86,2828
unsigned long volatile jiffies=90,2887
struct task_struct * task[97,3037
struct kernel_stat kstat 99,3092
void scheduling_functions_start_here(101,3127
static void reschedule_idle_slow(104,3190
#define related(related170,4906
static inline void reschedule_idle(172,4979
static inline void add_to_runqueue(228,6570
static inline void del_from_runqueue(239,6792
static inline void move_last_runqueue(251,7046
static inline void move_first_runqueue(267,7414
spinlock_t scheduler_lock 294,8161
spinlock_t runqueue_lock 295,8240
rwlock_t tasklist_lock 296,8301
void wake_up_process(306,8688
static void process_timeout(319,8946
static inline int goodness(339,9537
#define TVN_BITS 386,10557
#define TVR_BITS 387,10576
#define TVN_SIZE 388,10595
#define TVR_SIZE 389,10628
#define TVN_MASK 390,10661
#define TVR_MASK 391,10693
struct timer_vec timer_vec393,10726
struct timer_vec_root timer_vec_root398,10810
static struct timer_vec tv5 403,10899
static struct timer_vec tv4 404,10936
static struct timer_vec tv3 405,10973
static struct timer_vec tv2 406,11010
static struct timer_vec_root tv1 407,11047
static struct timer_vec * const tvecs[409,11090
#define NOOF_TVECS 413,11188
static unsigned long timer_jiffies 415,11243
static inline void insert_timer(417,11284
static inline void internal_add_timer(426,11508
spinlock_t timerlist_lock 460,12654
void add_timer(462,12703
static inline int detach_timer(480,13037
void mod_timer(493,13274
int del_timer(504,13536
#define idle_task 518,13797
#define can_schedule(can_schedule519,13848
#define idle_task 523,13896
#define can_schedule(can_schedule524,13927
signed long schedule_timeout(528,13964
} aligned_data 589,15437
} aligned_data [NR_CPUS] __cacheline_aligned 589,15437
static inline void __schedule_tail 592,15507
void schedule_tail 631,16644
asmlinkage void schedule(646,17065
rwlock_t waitqueue_lock 789,20402
void __wake_up(799,20745
void __up(848,22316
#define DOWN_VAR	872,23048
#define DOWN_HEAD(DOWN_HEAD876,23150
#define DOWN_TAIL(DOWN_TAIL899,23925
void __down(905,24070
int __down_interruptible(915,24236
int __down_trylock(934,24555
#define	SLEEP_ON_VAR	939,24641
#define	SLEEP_ON_HEAD	943,24719
#define	SLEEP_ON_TAIL	949,24887
void interruptible_sleep_on(954,25042
long interruptible_sleep_on_timeout(965,25195
void sleep_on(978,25413
long sleep_on_timeout(989,25555
void scheduling_functions_end_here(1002,25762
static inline void cascade_timers(1004,25808
static inline void run_timer_list(1022,26408
static inline void run_old_timers(1049,27070
spinlock_t tqueue_lock;1067,27410
void tqueue_bh(1069,27435
void immediate_bh(1074,27489
unsigned long timer_active 1079,27550
struct timer_struct timer_table[1080,27582
unsigned long avenrun[1088,27872
static unsigned long count_active_tasks(1093,27973
static inline void calc_load(1109,28296
static void second_overflow(1133,28978
static void update_wall_time_one_tick(1248,32347
static void update_wall_time(1293,33663
static inline void do_process_times(1307,33897
static inline void do_it_virt(1324,34356
static inline void do_it_prof(1337,34635
void update_one_process(1350,34912
static void update_process_times(1360,35185
volatile unsigned long lost_ticks 1384,35701
static unsigned long lost_ticks_system 1385,35740
rwlock_t xtime_lock 1390,35870
static inline void update_times(1392,35911
static void timer_bh(1420,36489
void do_timer(1427,36576
asmlinkage unsigned int sys_alarm(1444,36904
asmlinkage int sys_getpid(1466,37539
asmlinkage int sys_getppid(1495,38695
		break;1513,38988
	return pid;1515,39000
asmlinkage int sys_getuid(1518,39016
asmlinkage int sys_geteuid(1524,39114
asmlinkage int sys_getgid(1530,39214
asmlinkage int sys_getegid(1536,39312
asmlinkage int sys_nice(1548,39588
static inline struct task_struct *find_process_by_pid(1599,40933
static int setscheduler(1608,41094
asmlinkage int sys_sched_setscheduler(1680,42591
asmlinkage int sys_sched_setparam(1686,42737
asmlinkage int sys_sched_getscheduler(1691,42852
asmlinkage int sys_sched_getparam(1716,43204
asmlinkage int sys_sched_yield(1747,43813
asmlinkage int sys_sched_get_priority_max(1760,44121
asmlinkage int sys_sched_get_priority_min(1776,44330
asmlinkage int sys_sched_rr_get_interval(1791,44529
asmlinkage int sys_nanosleep(1802,44757
static void show_task(1843,45685
char * render_sigset_t(1899,47023
void show_state(1914,47364
void __init sched_init(1933,47922

kernel/exit.c,803
extern struct task_struct *child_reaper;21,387
static void release(25,489
int session_of_pgrp(69,1429
static int will_become_orphaned_pgrp(98,2101
int is_orphaned_pgrp(118,2586
static inline int has_stopped_jobs(123,2666
static inline void forget_original_parent(141,2960
static inline void close_files(156,3306
extern kmem_cache_t *files_cachep;181,3704
static inline void __exit_files(183,3742
void exit_files(203,4179
static inline void __exit_fs(208,4245
void exit_fs(222,4467
static inline void __exit_sighand(227,4527
void exit_sighand(244,4868
static inline void __exit_mm(249,4938
void exit_mm(266,5278
static void exit_notify(275,5434
NORET_TYPE void do_exit(347,7478
asmlinkage int sys_exit(401,8972
asmlinkage int sys_wait4(406,9049
asmlinkage int sys_waitpid(500,11437

kernel/fork.c,1290
int nr_tasks=26,594
int nr_running=27,610
unsigned long int total_forks=29,629
int last_pid=30,697
kmem_cache_t *mm_cachep;33,748
kmem_cache_t *files_cachep;36,809
struct task_struct *pidhash[38,839
struct task_struct **tarray_freelist 40,881
spinlock_t taskslot_lock 41,926
#define UIDHASH_SZ	46,1076
static struct user_struct user_struct48,1114
} *uidhash[52,1214
spinlock_t uidhash_lock 54,1239
kmem_cache_t *uid_cachep;56,1286
#define uidhashfn(uidhashfn58,1313
static inline void uid_hash_insert(63,1449
static inline void uid_hash_remove(71,1673
static inline struct user_struct *uid_hash_find(78,1806
void free_uid(96,2111
int alloc_uid(111,2386
void __init uidcache_init(148,3102
static inline struct task_struct ** find_empty_process(162,3401
spinlock_t lastpid_lock 172,3660
static int get_pid(174,3707
static inline int dup_mmap(217,4642
struct mm_struct * mm_alloc(281,6192
void mm_release(320,7234
void mmput(334,7520
static inline int copy_mm(344,7700
static inline int copy_fs(387,8482
static inline int __copy_fdset(406,8954
static inline int copy_fdset(419,9207
static int copy_files(424,9321
static inline int copy_sighand(487,10715
static inline void copy_flags(502,11129
int do_fork(520,11684
void __init filescache_init(686,15616

kernel/panic.c,113
extern int C_A_D;24,484
int panic_timeout 26,503
void __init panic_setup(28,527
NORET_TYPE void panic(34,624

kernel/dma.c,188
spinlock_t dma_spin_lock 36,1288
struct dma_chan dma_chan44,1507
static struct dma_chan dma_chan_busy[49,1565
int get_dma_list(60,1723
int request_dma(75,1978
void free_dma(90,2290

kernel/signal.c,969
#define DEBUG_SIG 21,347
#define SIG_SLAB_DEBUG	24,382
#define SIG_SLAB_DEBUG	26,465
static kmem_cache_t *signal_queue_cachep;29,498
int nr_queued_signals;31,541
int max_queued_signals 32,564
void __init signals_init(34,596
flush_signals(49,856
flush_signal_handlers(72,1201
dequeue_signal(93,1637
static int ignored_signal(216,4582
send_sig_info(250,5220
force_sig_info(407,9723
kill_pg_info(431,10303
kill_sl_info(463,10899
kill_proc_info(489,11350
kill_something_info(511,11829
send_sig(542,12501
force_sig(548,12619
kill_pg(554,12706
kill_sl(560,12814
kill_proc(566,12922
notify_parent(576,13096
sys_rt_sigprocmask(642,14580
sys_rt_sigpending(698,15749
sys_rt_sigtimedwait(719,16221
sys_kill(789,17889
sys_rt_sigqueueinfo(803,18131
do_sigaction(821,18571
do_sigaltstack 890,20388
sys_sigprocmask(949,21470
sys_sigpending(998,22432
sys_rt_sigaction(1015,22779
sys_sgetmask(1047,23490
sys_ssetmask(1054,23578
sys_signal(1073,23971

kernel/printk.c,947
#define LOG_BUF_LEN	23,648
static char buf[25,677
#define DEFAULT_MESSAGE_LOGLEVEL 28,746
#define MINIMUM_CONSOLE_LOGLEVEL 31,861
#define DEFAULT_CONSOLE_LOGLEVEL 32,937
unsigned long log_size 34,1017
struct wait_queue * log_wait 35,1045
int console_loglevel 38,1122
int default_message_loglevel 39,1171
int minimum_console_loglevel 40,1228
int default_console_loglevel 41,1285
struct console *console_drivers 43,1343
static char log_buf[44,1383
static unsigned long log_start 45,1417
static unsigned long logged_chars 46,1453
struct console_cmdline console_cmdline[47,1492
static int preferred_console 48,1553
void __init console_setup(53,1649
int do_syslog(116,3216
asmlinkage int sys_syslog(219,5306
spinlock_t console_lock;227,5466
asmlinkage int printk(229,5492
void console_print(291,6782
void unblank_console(303,6980
void register_console(319,7387
int unregister_console(405,9431
void tty_write_message(430,9995

kernel/sys.c,1544
int C_A_D 22,393
struct notifier_block *reboot_notifier_list 31,557
int register_reboot_notifier(33,610
int unregister_reboot_notifier(38,732
asmlinkage int sys_ni_syscall(47,893
static int proc_sel(52,951
asmlinkage int sys_setpriority(74,1337
asmlinkage int sys_getpriority(124,2454
asmlinkage int sys_reboot(156,3278
void ctrl_alt_del(226,5049
asmlinkage int sys_setregid(254,6000
asmlinkage int sys_setgid(292,6843
extern inline void cap_emulate_setxuid(327,7849
asmlinkage int sys_setreuid(358,8978
asmlinkage int sys_setuid(420,10727
asmlinkage int sys_setresuid(456,11597
asmlinkage int sys_getresuid(495,12639
asmlinkage int sys_setresgid(509,12933
asmlinkage int sys_getresgid(535,13679
asmlinkage int sys_setfsuid(553,14193
asmlinkage int sys_setfsgid(590,15166
asmlinkage long sys_times(605,15492
asmlinkage int sys_setpgid(632,16376
asmlinkage int sys_getpgid(685,17367
asmlinkage int sys_getpgrp(704,17656
asmlinkage int sys_getsid(710,17775
asmlinkage int sys_setsid(729,18068
asmlinkage int sys_getgroups(753,18472
asmlinkage int sys_setgroups(779,18962
int in_group_p(791,19267
struct semaphore uts_sem 815,19645
asmlinkage int sys_newuname(817,19680
asmlinkage int sys_sethostname(828,19877
asmlinkage int sys_gethostname(846,20226
asmlinkage int sys_setdomainname(867,20614
asmlinkage int sys_getrlimit(886,20970
asmlinkage int sys_setrlimit(895,21190
int getrusage(931,22574
asmlinkage int sys_getrusage(968,23917
asmlinkage int sys_umask(975,24085
asmlinkage int sys_prctl(981,24196

kernel/ksyms.c,105
extern void *sys_call_table;57,1534
extern int sys_tz;59,1564
extern spinlock_t dma_spin_lock;62,1686

kernel/module.c,1033
extern struct module_symbol __start___ksymtab[22,616
extern struct module_symbol __stop___ksymtab[23,665
extern const struct exception_table_entry __start___ex_table[25,714
extern const struct exception_table_entry __stop___ex_table[26,778
static struct module kernel_module 28,842
struct module *module_list 48,1330
__initfunc(60,1617
get_mod_name(74,1866
put_mod_name(102,2407
sys_create_module(112,2533
sys_init_module(165,3459
#define bound(bound220,4981
sys_delete_module(357,8716
qm_modules(424,10102
qm_deps(459,10741
qm_refs(502,11543
qm_symbols(546,12411
qm_info(605,13498
sys_query_module(632,14118
sys_get_kernel_syms(697,15345
find_module(755,16645
free_module(774,16902
int get_module_list(820,17834
#define safe_copy_str(safe_copy_str831,18053
#define safe_copy_cstr(safe_copy_cstr837,18215
get_ksyms_list(900,19533
get_module_symbol(952,20802
sys_create_module(979,21378
sys_init_module(985,21469
sys_delete_module(991,21570
sys_query_module(997,21648
sys_get_kernel_syms(1009,21902

kernel/itimer.c,228
static unsigned long tvtojiffies(25,590
static void jiffiestotv(37,868
int do_getitimer(43,1025
asmlinkage int sys_getitimer(78,1801
void it_real_fn(92,2096
int do_setitimer(107,2439
asmlinkage int sys_setitimer(152,3453

kernel/info.c,35
asmlinkage int sys_sysinfo(16,244

kernel/time.c,644
struct timezone sys_tz 37,1154
static void do_normal_gettime(39,1189
void get_fast_time(52,1486
asmlinkage int sys_time(65,1798
asmlinkage int sys_stime(86,2270
asmlinkage int sys_gettimeofday(107,2637
inline static void warp_clock(138,3610
int do_sys_settimeofday(156,4276
asmlinkage int sys_settimeofday(182,4736
long pps_offset 199,5098
long pps_jitter 200,5147
long pps_freq 202,5211
long pps_stabil 203,5267
long pps_valid 205,5335
int pps_shift 207,5398
long pps_jitcnt 209,5462
long pps_calcnt 210,5512
long pps_errcnt 211,5562
long pps_stbcnt 212,5609
int do_adjtimex(220,5901
asmlinkage int sys_adjtimex(401,11463

kernel/exec_domain.c,333
static unsigned long ident_map[8,136
struct exec_domain default_exec_domain 15,300
static struct exec_domain *exec_domains 25,597
static asmlinkage void no_lcall7(28,663
struct exec_domain *lookup_exec_domain(54,1455
int register_exec_domain(69,1829
int unregister_exec_domain(85,2106
asmlinkage int sys_personality(101,2349

kernel/softirq.c,202
atomic_t bh_mask_count[23,593
unsigned long bh_active 24,621
unsigned long bh_mask 25,650
void (*bh_base[26,677
static inline void run_bottom_halves(41,1242
asmlinkage void do_bottom_half(57,1483

kernel/resource.c,438
#define IOTABLE_SIZE 15,236
typedef struct resource_entry_t resource_entry_t17,262
} resource_entry_t;resource_entry_t21,366
static resource_entry_t iolist 23,387
static resource_entry_t iotable[25,441
int get_ioport_list(30,543
static resource_entry_t *find_gap(46,899
void request_region(71,1395
void release_region(97,1921
int check_region(116,2247
unsigned long occupy_region(125,2511
void __init reserve_setup(183,3916

kernel/sysctl.c,3254
extern int panic_timeout;34,970
extern int console_loglevel,35,996
extern int console_loglevel, C_A_D;35,996
extern int bdf_prm[36,1032
extern int bdf_prm[], bdflush_min[36,1032
extern int bdf_prm[], bdflush_min[], bdflush_max[36,1032
extern char binfmt_java_interpreter[37,1084
extern char binfmt_java_interpreter[], binfmt_java_appletviewer[37,1084
extern int sysctl_overcommit_memory;38,1151
extern int nr_queued_signals,39,1188
extern int nr_queued_signals, max_queued_signals;39,1188
extern char modprobe_path[42,1258
extern int sg_big_buff;45,1319
extern int shmmax;48,1372
extern char reboot_command 52,1416
extern unsigned long htab_reclaim_on,55,1473
extern unsigned long htab_reclaim_on, zero_paged_on,55,1473
extern unsigned long htab_reclaim_on, zero_paged_on, powersave_nap;55,1473
extern int acct_parm[61,1680
extern int pgt_cache_water[64,1712
static ctl_table root_table[72,1955
static struct ctl_table_header root_table_header 73,1986
static ctl_table kern_table[76,2088
static ctl_table vm_table[77,2119
extern ctl_table net_table[79,2166
static ctl_table proc_table[81,2203
static ctl_table fs_table[82,2234
static ctl_table debug_table[83,2263
static ctl_table dev_table[84,2295
struct file_operations proc_sys_file_operations 95,2578
struct inode_operations proc_sys_inode_operations 110,2940
extern struct proc_dir_entry proc_sys_root;131,3370
extern int inodes_stat[136,3566
extern int dentry_stat[137,3592
static ctl_table root_table[141,3653
static ctl_table kern_table[154,4051
static ctl_table vm_table[218,6487
static ctl_table proc_table[239,7379
static ctl_table fs_table[243,7422
static ctl_table debug_table[267,8325
static ctl_table dev_table[271,8369
void __init sysctl_init(276,8414
int do_sysctl 284,8529
extern asmlinkage int sys_sysctl(317,9211
static int in_egroup_p(333,9585
static int test_perm(355,9980
static inline int ctl_perm(366,10159
static int parse_table(371,10253
int do_sysctl_strategy 413,11165
struct ctl_table_header *register_sysctl_table(461,12191
void unregister_sysctl_table(482,12718
static void register_proc_table(498,13043
static void unregister_proc_table(548,14159
static ssize_t do_rw_proc(576,14804
static ssize_t proc_readsys(607,15467
static ssize_t proc_writesys(613,15614
static int proc_sys_permission(619,15778
int proc_dostring(624,15881
static int proc_doutsstring(677,16940
static int do_proc_dointvec(687,17152
	#define TMPBUFLEN 691,17318
int proc_dointvec(778,18871
int proc_dointvec_minmax(784,19038
	#define TMPBUFLEN 788,19203
int proc_dointvec_jiffies(883,20944
int proc_dostring(891,21146
static int proc_doutsstring(897,21266
int proc_dointvec(903,21399
int proc_dointvec_minmax(909,21519
int proc_dointvec_jiffies(915,21648
int sysctl_string(929,21895
int sysctl_intvec(972,22931
int do_string 1005,23612
int do_int 1031,24150
int do_struct 1054,24661
extern asmlinkage int sys_sysctl(1081,25179
int sysctl_string(1086,25262
int sysctl_intvec(1093,25425
int proc_dostring(1100,25584
int proc_dointvec(1106,25704
int proc_dointvec_minmax(1112,25824
int proc_dointvec_jiffies(1118,25953
struct ctl_table_header * register_sysctl_table(1124,26083
void unregister_sysctl_table(1130,26193

kernel/acct.c,688
int acct_parm[62,2355
#define RESUME	63,2386
#define SUSPEND	64,2449
#define ACCT_TIMEOUT	65,2514
static volatile int acct_active 72,2680
static volatile int acct_needcheck 73,2717
static struct file *acct_file 74,2757
static struct timer_list acct_timer 75,2795
void acct_timeout(81,2985
static int check_free_space(89,3124
asmlinkage int sys_acct(149,4432
void acct_auto_close(207,5502
#define	MANTSIZE	221,5880
#define	EXPSIZE	222,5925
#define	MAXFRACT	223,5977
static comp_t encode_comp_t(225,6049
#define KSTK_EIP(KSTK_EIP260,6903
#define KSTK_ESP(KSTK_ESP261,6962
static int do_acct_process(266,7071
int acct_process(348,9226
asmlinkage int sys_acct(359,9410

kernel/kmod.c,153
#define __KERNEL_SYSCALLS__12,229
char modprobe_path[23,407
use_init_file_context(26,471
static int exec_modprobe(46,894
int request_module(94,2272

kernel/capability.c,175
spinlock_t task_capability_lock;12,276
asmlinkage int sys_capget(20,494
static void cap_set_pg(77,1919
static void cap_set_all(98,2577
asmlinkage int sys_capset(127,3572

lib/errno.c,16
int errno;7,78

lib/ctype.c,28
unsigned char _ctype[9,104

lib/string.c,518
int strnicmp(19,343
char * ___strtok 45,754
char * strcpy(48,807
char * strncpy(59,976
char * strcat(71,1170
char * strncat(85,1354
int strcmp(105,1621
int strncmp(119,1821
char * strchr(134,2053
char * strrchr(144,2212
size_t strlen(156,2449
size_t strnlen(167,2603
size_t strspn(178,2782
char * strpbrk(199,3090
char * strtok(214,3347
void * memset(236,3721
char * bcopy(248,3870
void * memcpy(260,4035
void * memmove(272,4228
int memcmp(294,4566
void * memscan(310,4910
char * strstr(325,5138

lib/vsprintf.c,396
unsigned long simple_strtoul(17,299
long simple_strtol(42,771
#define is_digit(is_digit50,997
static int skip_atoi(52,1045
#define ZEROPAD	61,1162
#define SIGN	62,1201
#define PLUS	63,1244
#define SPACE	64,1276
#define LEFT	65,1313
#define SPECIAL	66,1351
#define LARGE	67,1380
#define do_div(do_div69,1438
static char * number(75,1584
int vsprintf(145,2915
int sprintf(309,6132

lib/inflate.c,1310
#define DEBG(DEBG1,0
#define DEBG1(DEBG12,16
static char rcsid[101,5462
#define STATIC112,5690
#define slide 115,5728
struct huft huft124,6208
#define wp 155,7516
#define flush_output(flush_output156,7534
static unsigned border[159,7634
static ush cplens[161,7784
static ush cplext[165,8067
static ush cpdist[168,8273
static ush cpdext[172,8516
STATIC ulg bb;209,10065
STATIC unsigned bk;210,10121
STATIC ush mask_bits[212,10186
#define NEXTBYTE(NEXTBYTE218,10364
#define NEEDBITS(NEEDBITS219,10400
#define DUMPBITS(DUMPBITS220,10466
STATIC int lbits 256,12345
STATIC int dbits 257,12423
#define BMAX 261,12569
#define N_MAX 262,12647
STATIC unsigned hufts;265,12714
STATIC int huft_build(268,12772
STATIC int huft_free(486,20217
STATIC int inflate_codes(507,20678
STATIC int inflate_stored(616,23871
STATIC int inflate_fixed(672,25058
STATIC int inflate_dynamic(726,26342
  if 889,30362
STATIC int inflate(951,31293
static ulg crc_32_tab[1004,32384
static ulg crc 1005,32412
#define CRC_VALUE 1006,32477
makecrc(1014,32613
#define ASCII_FLAG 1047,33414
#define CONTINUATION 1048,33482
#define EXTRA_FIELD 1049,33562
#define ORIG_NAME 1050,33625
#define COMMENT 1051,33695
#define ENCRYPTED 1052,33759
#define RESERVED 1053,33820
static int gunzip(1058,33905

mm/memory.c,1350
unsigned long max_mapnr 44,1181
unsigned long num_physpages 45,1210
void * high_memory 46,1243
static inline void copy_cow_page(53,1457
mem_map_t * mem_map 62,1612
void oom(68,1770
static inline void free_one_pmd(78,2023
static inline void free_one_pgd(94,2302
int pgt_cache_water[116,2782
int check_pgt_cache(119,2860
void clear_page_tables(129,3101
void free_page_tables(150,3558
int new_page_tables(167,3828
#define PTE_TABLE_MASK	178,4008
#define PMD_TABLE_MASK	179,4066
int copy_page_range(189,4427
static inline int free_pte(300,7130
static inline void forget_pte(317,7527
static inline int zap_pte_range(325,7667
static inline int zap_pmd_range(358,8270
void zap_page_range(388,8898
static inline void zeromap_pte_range(410,9379
static inline int zeromap_pmd_range(427,9737
int zeromap_page_range(446,10191
static inline void remap_pte_range(477,11047
static inline int remap_pmd_range(501,11610
int remap_page_range(522,12125
static void put_page(550,12766
unsigned long put_dirty_page(564,13103
static int do_wp_page(615,14711
static void partial_clear(692,16665
void vmtruncate(735,17858
static int do_swap_page(779,18955
static int do_anonymous_page(807,19789
static int do_no_page(836,20759
static inline int handle_pte_fault(892,22588
int handle_mm_fault(925,23328
void make_pages_present(948,23795

mm/swap.c,225
freepages_t freepages 36,1047
int page_cluster 43,1217
atomic_t nr_async_pages 47,1423
buffer_mem_t buffer_mem 49,1466
buffer_mem_t page_cache 55,1597
pager_daemon_t pager_daemon 61,1721
void __init swap_setup(71,1977

mm/mmap.c,796
pgprot_t protection_map[34,911
kmem_cache_t *vm_area_cachep;40,1115
int sysctl_overcommit_memory;42,1146
int vm_enough_memory(47,1261
static inline void remove_shared_vm_struct(74,2114
asmlinkage unsigned long sys_brk(87,2454
static inline unsigned long vm_flags(154,4293
#define _trans(_trans156,4373
unsigned long do_mmap(172,4809
unsigned long get_unmapped_area(356,9951
#define vm_avl_empty	376,10406
struct vm_area_struct * find_vma(381,10557
struct vm_area_struct * find_vma_prev(419,11509
static int unmap_fixup(493,13819
static void free_pgtables(558,15762
int do_munmap(601,16793
asmlinkage int sys_munmap(691,19197
void build_mmap_avl(704,19463
void exit_mmap(714,19670
void insert_vm_struct(754,20646
void merge_segments 799,21989
void __init vma_init(861,23710

mm/vmalloc.c,381
static struct vm_struct * vmlist 12,153
static inline void free_area_pte(14,195
static inline void free_area_pmd(46,856
void vmfree_area_pages(70,1382
static inline int alloc_area_pte(85,1705
static inline int alloc_area_pmd(107,2187
int vmalloc_area_pages(127,2635
struct vm_struct * get_vm_area(152,3173
void vfree(177,3733
void * vmalloc(198,4181
long vread(217,4526

mm/page_alloc.c,951
int nr_swap_pages 21,452
int nr_free_pages 22,475
#define NR_MEM_LISTS 34,740
#define NR_MEM_LISTS 36,770
struct free_area_struct free_area_struct40,863
#define memory_head(memory_head46,954
static struct free_area_struct free_area[48,999
static inline void init_mem_queue(50,1056
static inline void add_mem_queue(56,1193
static inline void remove_mem_queue(66,1416
spinlock_t page_alloc_lock 91,2111
static inline void free_pages_ok(93,2161
#define list(list102,2445
void __free_page(122,2820
void free_pages(133,3080
#define MARK_USED(MARK_USED154,3542
#define CAN_DMA(CAN_DMA156,3631
#define ADDRESS(ADDRESS157,3663
#define RMQUEUE(RMQUEUE158,3718
#define EXPAND(EXPAND180,4452
int low_on_memory 192,4738
unsigned long __get_free_pages(194,4762
void show_free_areas(261,6348
#define LONG_ALIGN(LONG_ALIGN289,7114
unsigned long __init free_area_init(297,7329
void swapin_readahead(349,8938
void swap_in(390,10058

mm/mprotect.c,392
static inline void change_pte_range(14,222
static inline void change_pmd_range(41,797
static void change_protection(66,1364
static inline int mprotect_fixup_all(82,1765
static inline int mprotect_fixup_start(90,1931
static inline int mprotect_fixup_end(113,2457
static inline int mprotect_fixup_middle(136,2984
static int mprotect_fixup(171,3906
asmlinkage int sys_mprotect(197,4581

mm/filemap.c,2271
unsigned long page_cache_size 34,743
struct page * page_hash_table[35,778
#define release_page(release_page41,894
struct pio_request pio_request48,1053
static struct pio_request *pio_first 55,1174
static kmem_cache_t *pio_request_cache;56,1244
static struct wait_queue *pio_wait 57,1284
void invalidate_inode_pages(68,1581
void truncate_inode_pages(95,2147
void remove_inode_page(135,3054
int shrink_mmap(142,3194
void update_vm_cache(225,4855
static inline void add_to_page_cache(251,5383
static unsigned long try_to_read_ahead(267,5966
void __wait_on_page(306,6903
#define PROFILE_READAHEAD325,7266
#define DEBUG_READAHEAD326,7292
#define PROFILE_MAXREADCOUNT 342,7701
static unsigned long total_reada;344,7736
static unsigned long total_async;345,7770
static unsigned long total_ramax;346,7804
static unsigned long total_ralen;347,7838
static unsigned long total_rawin;348,7872
static void profile_readahead(350,7907
static inline int get_max_readahead(447,11182
static inline unsigned long generic_file_readahead(454,11393
} read_descriptor_t;read_descriptor_t570,14754
typedef int (*read_actor_t)read_actor_t572,14776
static void do_generic_file_read(582,15111
static int file_read_actor(771,20182
ssize_t generic_file_read(793,20662
static int file_send_actor(817,21125
asmlinkage ssize_t sys_sendfile(842,21729
static unsigned long filemap_nopage(936,23980
static inline int do_write_page(1075,27301
static int filemap_write_page(1102,27939
int filemap_swapout(1147,28985
static inline int filemap_sync_pte(1152,29129
static inline int filemap_sync_pte_range(1191,30055
static inline int filemap_sync_pmd_range(1221,30740
static int filemap_sync(1251,31459
static void filemap_unmap(1272,32014
static struct vm_operations_struct file_shared_mmap 1282,32307
static struct vm_operations_struct file_private_mmap 1301,32858
int generic_file_mmap(1316,33198
static int msync_interval(1347,33993
asmlinkage int sys_msync(1368,34538
generic_file_write(1443,36655
unsigned long get_cached_page(1564,39397
void put_cached_page(1597,40195
static inline void put_pio_request(1614,40617
static inline struct pio_request * get_pio_request(1623,40787
static inline void make_pio_request(1634,41028
int kpiod(1682,42456

mm/mlock.c,419
static inline int mlock_fixup_all(14,219
static inline int mlock_fixup_start(20,339
static inline int mlock_fixup_end(41,821
static inline int mlock_fixup_middle(62,1305
static int mlock_fixup(96,2182
static int do_mlock(126,2919
asmlinkage int sys_mlock(174,3912
asmlinkage int sys_munlock(207,4656
static int do_mlockall(221,4954
asmlinkage int sys_mlockall(250,5557
asmlinkage int sys_munlockall(279,6175

mm/page_io.c,222
static struct wait_queue * lock_queue 21,554
static void rw_swap_page_base(38,1362
void swap_after_unlock_page 212,6389
void rw_swap_page(236,7017
void rw_swap_page_nocache(266,7945
void rw_swap_page_nolock(296,8888

mm/vmscan.c,406
static int try_to_swap_out(34,1026
static inline int swap_out_pmd(183,5118
static inline int swap_out_pgd(215,5815
static int swap_out_vma(245,6482
static int swap_out_process(269,7089
static int swap_out(309,7935
static int do_try_to_free_pages(379,9725
void __init kswapd_setup(424,10668
static struct task_struct *kswapd_process;439,11002
int kswapd(455,11596
int try_to_free_pages(516,13421

mm/swapfile.c,602
unsigned int nr_swapfiles 20,424
struct swap_list_t swap_list 22,456
struct swap_info_struct swap_info[24,498
#define SWAPFILE_CLUSTER 26,549
static inline int scan_swap_map(28,579
unsigned long get_swap_page(68,1700
void swap_free(112,2510
static inline void unuse_pte(173,4081
static inline void unuse_pmd(198,4782
static inline void unuse_pgd(225,5421
static void unuse_vma(253,6081
static void unuse_process(265,6393
static int try_to_unuse(287,6946
asmlinkage int sys_swapoff(347,8420
int get_swaparea_info(438,10414
asmlinkage int sys_swapon(481,11443
void si_swapinfo(713,17245

mm/mremap.c,288
static inline pte_t *get_one_pte(18,285
static inline pte_t *alloc_one_pte(49,871
static inline int copy_one_pte(60,1088
static int move_one_page(76,1308
static int move_page_tables(87,1556
static inline unsigned long move_vma(123,2707
asmlinkage unsigned long sys_mremap(161,3994

mm/swap_state.c,547
struct inode swapper_inode;28,749
unsigned long swap_cache_add_total 31,801
unsigned long swap_cache_del_total 32,841
unsigned long swap_cache_find_total 33,881
unsigned long swap_cache_find_success 34,922
void show_swap_cache_info(36,966
int add_to_swap_cache(45,1169
int swap_duplicate(79,2188
int swap_count(134,3418
static inline void remove_from_swap_cache(179,4398
void delete_from_swap_cache(204,5046
void free_page_and_swap_cache(225,5536
struct page * lookup_swap_cache(246,5978
struct page * read_swap_cache_async(284,6878

mm/slab.c,4177
#define		SLAB_MGMT_CHECKS	127,6047
#define		SLAB_DEBUG_SUPPORT	128,6075
#define		SLAB_STATS	129,6105
#define		SLAB_SELFTEST	130,6128
#define	BYTES_PER_WORD	133,6207
#define	SLAB_C_MASK	138,6323
#define	SLAB_C_MASK	142,6477
#define	SLAB_C_MASK	146,6613
#define	SLAB_C_MASK	148,6690
#define	SLAB_OFFSET_BITS	161,7308
typedef struct kmem_slab_s kmem_slab_s163,7382
} kmem_slab_t;kmem_slab_t174,7772
#define	slab_align_size	177,7859
#define	kmem_slab_end(kmem_slab_end180,7957
#define	SLAB_MAGIC_ALLOC	183,8030
#define	SLAB_MAGIC_DESTROYED	184,8088
typedef struct kmem_bufctl_s kmem_bufctl_s191,8439
} kmem_bufctl_t;kmem_bufctl_t197,8588
#define	buf_nextp	200,8628
#define	buf_slabp	201,8658
#define	buf_objp	202,8688
#define	SLAB_RED_MAGIC1	208,8846
#define	SLAB_RED_MAGIC2	209,8909
#define	SLAB_POISON_BYTE	212,9002
#define	SLAB_POISON_END	213,9064
struct kmem_cache_s kmem_cache_s220,9273
#define	SLAB_CFLGS_OFF_SLAB	256,10520
#define	SLAB_CFLGS_BUFCTL	257,10594
#define	SLAB_CFLGS_GENERAL	258,10658
#define	SLAB_CFLGS_GROWN	261,10800
#define	SLAB_OFF_SLAB(SLAB_OFF_SLAB263,10871
#define	SLAB_BUFCTL(SLAB_BUFCTL264,10924
#define	SLAB_GROWN(SLAB_GROWN265,10974
#define	SLAB_STATS_INC_ACTIVE(SLAB_STATS_INC_ACTIVE268,11038
#define	SLAB_STATS_DEC_ACTIVE(SLAB_STATS_DEC_ACTIVE269,11093
#define	SLAB_STATS_INC_ALLOCED(SLAB_STATS_INC_ALLOCED270,11148
#define	SLAB_STATS_INC_GROWN(SLAB_STATS_INC_GROWN271,11209
#define	SLAB_STATS_INC_REAPED(SLAB_STATS_INC_REAPED272,11259
#define	SLAB_STATS_SET_HIGH(SLAB_STATS_SET_HIGH273,11310
#define	SLAB_STATS_INC_ERR(SLAB_STATS_INC_ERR276,11454
#define	SLAB_STATS_INC_ACTIVE(SLAB_STATS_INC_ACTIVE278,11520
#define	SLAB_STATS_DEC_ACTIVE(SLAB_STATS_DEC_ACTIVE279,11553
#define	SLAB_STATS_INC_ALLOCED(SLAB_STATS_INC_ALLOCED280,11586
#define	SLAB_STATS_INC_GROWN(SLAB_STATS_INC_GROWN281,11620
#define	SLAB_STATS_INC_REAPED(SLAB_STATS_INC_REAPED282,11652
#define	SLAB_STATS_SET_HIGH(SLAB_STATS_SET_HIGH283,11685
#define	SLAB_STATS_INC_ERR(SLAB_STATS_INC_ERR284,11716
#define	SLAB_C_MAGIC	295,11994
#define	SLAB_OBJ_MAX_ORDER	298,12078
#define	SLAB_MAX_GFP_ORDER	301,12203
#define	SLAB_MIN_OBJS_PER_SLAB	304,12327
#define	SLAB_BREAK_GFP_ORDER_HI	309,12502
#define	SLAB_BREAK_GFP_ORDER_LO	310,12536
static int slab_break_gfp_order 311,12570
#define	SLAB_SET_PAGE_CACHE(SLAB_SET_PAGE_CACHE318,12889
#define	SLAB_GET_PAGE_CACHE(SLAB_GET_PAGE_CACHE319,12958
#define	SLAB_SET_PAGE_SLAB(SLAB_SET_PAGE_SLAB320,13020
#define	SLAB_GET_PAGE_SLAB(SLAB_GET_PAGE_SLAB321,13088
typedef struct cache_sizes cache_sizes324,13199
} cache_sizes_t;cache_sizes_t327,13273
static cache_sizes_t cache_sizes[329,13291
static char *cache_sizes_name[352,13787
static	kmem_cache_t	cache_cache 371,14082
static struct semaphore	cache_chain_sem;389,14669
static	kmem_cache_t	*clock_searchp 392,14747
static kmem_cache_t	*cache_slabp 395,14875
static unsigned long bufctl_limit 400,15053
long __init kmem_cache_init(403,15141
#define	kmem_slab_offset(kmem_slab_offset407,15211
#define kmem_slab_diff(kmem_slab_diff408,15280
#define	kmem_cache_offset(kmem_cache_offset409,15353
#define kmem_cache_diff(kmem_cache_diff410,15423
void __init kmem_cache_sizes_init(457,17093
kmem_getpages(501,18428
kmem_freepages(530,19174
kmem_poison_obj(549,19673
kmem_check_poison_obj(556,19865
kmem_slab_unlink(570,20213
kmem_slab_link_end(579,20401
kmem_slab_link_free(589,20642
kmem_slab_destroy(604,21091
kmem_cache_cal_waste(656,22728
kmem_cache_create(679,23369
kmem_cache_shrink(991,32614
kmem_cache_slabmgmt(1047,34133
kmem_cache_init_objs(1075,34810
kmem_cache_grow(1135,36596
kmem_report_alloc_err(1259,40308
kmem_report_free_err(1268,40549
kmem_cache_search_dma(1281,41008
kmem_extra_free_checks(1303,41639
kmem_cache_full_free(1321,42089
kmem_cache_one_free(1334,42412
__kmem_cache_alloc(1345,42693
__kmem_cache_free(1451,45955
kmem_cache_alloc(1590,49952
kmem_cache_free(1596,50055
kmalloc(1602,50151
kfree(1616,50459
kfree_s(1661,51534
kmem_find_general_cachep(1690,52124
kmem_cache_reap(1712,52600
kmem_self_test(1840,55672
get_slabinfo(1873,56536

mm/mmap_avl.c,612
#define vm_avl_key	12,515
#define vm_avl_key_t	13,541
#define avl_maxheight	26,1021
#define heightof(heightof27,1079
static void avl_neighbours 39,1616
static void avl_rebalance 87,3078
static inline void avl_insert 164,6752
static inline void avl_insert_neighbours 191,7617
static void avl_remove 221,8596
static void printk_list 276,10449
static void printk_avl 290,10685
static char *avl_check_point 307,11057
static void avl_checkheights 310,11149
static void avl_checkleft 329,11686
static void avl_checkright 341,12074
static void avl_checkorder 353,12464
static void avl_check 364,12760

net/socket.c,1845
static struct file_operations socket_file_ops 106,3516
struct net_proto_family *net_families[125,3881
static int sockets_in_use 131,3980
#define MAX_SOCK_ADDR	138,4143
int move_addr_to_kernel(147,4403
int move_addr_to_user(158,4610
static int get_fd(185,5091
extern __inline__ struct socket *socki_lookup(224,5754
extern struct socket *sockfd_lookup(233,5907
extern __inline__ void sockfd_put(260,6373
struct socket *sock_alloc(269,6482
static int sock_no_open(304,7158
void sock_release(309,7252
int sock_sendmsg(325,7582
int sock_recvmsg(338,7829
static long long sock_lseek(356,8133
static ssize_t sock_read(366,8385
static ssize_t sock_write(399,9068
int sock_readv_writev(426,9657
int sock_ioctl(454,10384
static unsigned int sock_poll(462,10572
int sock_close(476,10833
static int sock_fasync(497,11179
int sock_wake_async(547,12044
int sock_create(571,12424
asmlinkage int sys_socket(639,13999
asmlinkage int sys_socketpair(668,14434
asmlinkage int sys_bind(738,15755
asmlinkage int sys_listen(762,16312
asmlinkage int sys_accept(790,17049
asmlinkage int sys_connect(860,18647
asmlinkage int sys_getsockname(887,19215
asmlinkage int sys_getpeername(914,19780
asmlinkage int sys_sendto(938,20374
asmlinkage int sys_send(982,21202
asmlinkage int sys_recvfrom(993,21530
asmlinkage int sys_recv(1035,22359
asmlinkage int sys_setsockopt(1045,22642
asmlinkage int sys_getsockopt(1068,23192
asmlinkage int sys_shutdown(1091,23628
asmlinkage int sys_sendmsg(1110,23900
asmlinkage int sys_recvmsg(1194,25966
int sock_fcntl(1286,28006
#define AL(AL1297,28283
static unsigned char nargs[1298,28327
asmlinkage int sys_socketcall(1311,28671
int sock_register(1395,30655
int sock_unregister(1411,31024
void __init proto_init(1420,31151
void __init sock_init(1440,31516
int socket_get_info(1502,32368

net/unix/af_unix.c,2495
#define min(min109,3867
int sysctl_unix_delete_delay 111,3905
int sysctl_unix_destroy_delay 112,3940
int sysctl_unix_max_dgram_qlen 113,3979
unix_socket *unix_socket_table[115,4017
static atomic_t unix_nr_socks 116,4067
static struct wait_queue * unix_ack_wqueue 117,4115
static struct wait_queue * unix_dgram_wqueue 118,4166
#define unix_sockets_unbound	120,4220
#define UNIX_ABSTRACT(UNIX_ABSTRACT122,4286
extern __inline__ unsigned unix_hash_fold(127,4470
#define unix_peer(unix_peer135,4601
extern __inline__ int unix_our_peer(137,4637
extern __inline__ int unix_may_send(142,4743
extern __inline__ void unix_lock(147,4879
extern __inline__ void unix_unlock(152,4966
extern __inline__ int unix_locked(157,5055
extern __inline__ void unix_release_addr(162,5151
static void unix_destruct_addr(171,5299
static int unix_mkname(185,5626
static void unix_remove_socket(212,6414
static void unix_insert_socket(226,6713
static unix_socket *unix_find_socket_byname(236,6897
static unix_socket *unix_find_socket_byinode(254,7285
static void unix_destroy_timer(275,7660
static void unix_delayed_delete(298,8105
static int unix_release_sock 306,8384
static void unix_destroy_socket(349,9366
static int unix_listen(387,10099
extern struct proto_ops unix_stream_ops;409,10730
extern struct proto_ops unix_dgram_ops;410,10771
static struct sock * unix_create1(412,10812
static int unix_create(443,11462
static int unix_release(473,12017
static int unix_autobind(487,12263
static unix_socket *unix_find_other(525,13230
static int unix_bind(559,13849
static int unix_dgram_connect(636,15603
static int unix_stream_connect(687,16548
static int unix_socketpair(807,19358
static int unix_accept(827,19761
static int unix_getname(885,20881
static void unix_detach_fds(908,21429
static void unix_destruct_fds(920,21672
static void unix_attach_fds(929,21850
static int unix_dgram_sendmsg(944,22119
static int unix_stream_sendmsg(1052,24249
static void unix_data_wait(1171,26735
static int unix_dgram_recvmsg(1181,26937
static int unix_stream_recvmsg(1259,28691
static int unix_shutdown(1393,31315
static int unix_ioctl(1419,31851
static unsigned int unix_poll(1453,32507
static void unix_stream_write_space(1485,33294
static int unix_read_proc(1495,33542
struct proto_ops unix_stream_ops 1554,34759
struct proto_ops unix_dgram_ops 1575,35078
struct net_proto_family unix_family_ops 1596,35403
int init_module(1607,35599
void cleanup_module(1641,36232

net/unix/garbage.c,339
#define GC_HEAD 87,3025
static unix_socket *gc_current=88,3063
extern inline unix_socket *unix_get_socket(90,3135
void unix_inflight(116,3636
void unix_notinflight(123,3755
extern inline unix_socket *pop_stack(135,3925
extern inline int empty_stack(142,4055
extern inline void maybe_unmark_and_push(147,4127
void unix_gc(158,4337

net/unix/sysctl_net_unix.c,463
extern int sysctl_unix_destroy_delay;20,505
extern int sysctl_unix_delete_delay;21,543
extern int sysctl_unix_max_dgram_qlen;22,580
ctl_table unix_table[24,620
static struct ctl_table_header * unix_sysctl_header;38,1045
static struct ctl_table unix_root_table[39,1098
static struct ctl_table unix_net_table[40,1141
ctl_table unix_root_table[42,1184
ctl_table unix_net_table[47,1275
void unix_sysctl_register(52,1363
void unix_sysctl_unregister(57,1465

net/protocols.c,161
#define NEED_80238,720
#define NEED_80269,1211
#define NEED_LLC74,1291
#define NEED_LLC79,1369
#define NEED_80291,1562
struct net_proto protocols[103,1690

net/802/cl2llc.c,211
int llc_data_request(53,1570
void disconnect_request(116,2923
void connect_request(143,3425
void llc_interpret_pseudo_code(176,4260
void llc_process_otype2_frame(512,11682
void llc_timer_expired(584,13206

net/802/p8022.c,336
static struct datalink_proto *p8022_list 28,1016
static struct datalink_proto *find_8022_client(38,1352
int p8022_rcv(50,1574
static void p8022_datalink_header(68,1902
static struct packet_type p8022_packet_type 81,2238
__initfunc(93,2454
struct datalink_proto *register_8022_client(99,2595
void unregister_8022_client(121,3171

net/802/p8023.c,125
static void p8023_datalink_header(27,882
struct datalink_proto *make_8023_client(38,1175
void destroy_8023_client(57,1543

net/802/tr.c,643
#define TR_SR_DEBUG 44,1492
typedef struct rif_cache_s *rif_cache;rif_cache46,1515
struct rif_cache_s rif_cache_s52,1608
#define RIF_TABLE_SIZE 62,1787
rif_cache rif_table[69,1902
#define RIF_TIMEOUT 71,1950
#define RIF_CHECK_INTERVAL 72,1979
static struct timer_list rif_timer;78,2049
int sysctl_tr_rif_timeout 80,2086
int tr_header(87,2261
int tr_rebuild_header(142,3494
unsigned short tr_type_trans(175,4236
static void tr_source_route(227,5367
static void tr_add_rif_info(310,7621
static void rif_check_expire(400,10021
int rif_get_info(443,10729
static struct proc_dir_entry tr_rif_proc 519,12577
__initfunc(527,12739

net/802/psnap.c,325
static struct datalink_proto *snap_list 23,656
static struct datalink_proto *snap_dl 24,704
static struct datalink_proto *find_snap_client(30,831
int snap_rcv(42,1083
static void snap_datalink_header(79,1711
__initfunc(92,2022
struct datalink_proto *register_snap_client(103,2265
void unregister_snap_client(130,2949

net/802/sysctl_net_802.c,97
ctl_table e802_table[17,522
extern int sysctl_tr_rif_timeout;22,575
ctl_table tr_table[23,609

net/802/hippi.c,132
void hippi_net_init(48,1369
int hippi_header(60,1596
int hippi_rebuild_header(110,2941
unsigned short hippi_type_trans(136,3482

net/802/llc_macinit.c,222
int llc_mac_data_indicate(45,1353
int register_cl2llc_client(155,3366
void unregister_cl2llc_client(185,4139
#define ALL_TYPES_8022 202,4531
__initfunc(204,4557
int init_module(213,4715
void cleanup_module(219,4770

net/802/fddi.c,99
int fddi_header(54,1575
int fddi_rebuild_header(98,2729
unsigned short fddi_type_trans(123,3446

net/802/llc_sendpdu.c,407
static unsigned char cntl_byte_encode[31,950
static unsigned char fr_length_encode[54,1435
static unsigned char cr_bit_encode[77,1920
void llc_sendpdu(111,2837
void llc_xid_request(171,4280
void llc_test_request(176,4391
void llc_unit_data_request(181,4492
void llc_sendipdu(195,4901
int llc_resend_ipdu(234,5957
struct sk_buff *llc_pull_from_atq(304,7294
int llc_free_acknowledged_skbs(315,7573

net/802/llc_utility.c,370
int llc_decode_frametype(32,977
int llc_validate_seq_nos(118,2517
static void llc_p_timer_expired(191,4005
static void llc_rej_timer_expired(196,4104
static void llc_ack_timer_expired(201,4207
static void llc_busy_timer_expired(206,4311
static void (* exp_fcn[217,4579
void llc_start_timer(225,4726
void llc_stop_timer(237,5027
void llc_cancel_timers(246,5192

net/802/pseudo/actionnm.h,32
static char *action_names[4,61

net/802/pseudo/opcodesnm.h,31
static char *opcode_names[1,0

net/802/pseudo/pseudocode.h,4689
static char pseudo_code 4,61
static short int pseudo_code_idx 88,4527
#define NOP 111,5651
#define ADM1 112,5677
#define ADM2 113,5703
#define ADM3 114,5729
#define ADM4 115,5755
#define ADM5 116,5781
#define CONN2 117,5807
#define CONN3 118,5833
#define CONN4 119,5859
#define CONN5 120,5885
#define RESWAIT1 121,5911
#define RESWAIT2 122,5937
#define RESWAIT3 123,5963
#define RESWAIT4 124,5989
#define RESWAIT5 125,6015
#define RESWAIT6 126,6041
#define RESWAIT7 127,6067
#define RESWAIT8 128,6093
#define RESCHK1 129,6119
#define RESCHK2 130,6145
#define RESCHK3 131,6171
#define RESCHK4 132,6197
#define RESCHK5 133,6223
#define RESCHK6 134,6249
#define SETUP1 135,6275
#define SETUP2 136,6301
#define SETUP3 137,6327
#define SETUP4 138,6353
#define SETUP5 139,6379
#define SETUP6 140,6405
#define SETUP7 141,6431
#define SETUP8 142,6457
#define RESET1 143,6483
#define RESET2 144,6509
#define RESET3 145,6535
#define RESET4 146,6561
#define RESET5 147,6587
#define RESET6 148,6613
#define RESET7 149,6639
#define RESET8 150,6665
#define D_CONN1 151,6691
#define D_CONN2 152,6717
#define D_CONN3 153,6743
#define D_CONN4 154,6769
#define D_CONN5 155,6795
#define D_CONN6 156,6821
#define D_CONN7 157,6847
#define ERR1 158,6873
#define ERR2 159,6899
#define ERR3 160,6925
#define ERR4 161,6951
#define ERR5 162,6977
#define ERR6 163,7003
#define ERR7 164,7029
#define ERR8 165,7055
#define SH1 166,7081
#define SH2 167,7107
#define SH3 168,7133
#define SH4 169,7159
#define SH5 170,7185
#define SH6 171,7211
#define SH7 172,7237
#define SH8 173,7263
#define SH9 174,7289
#define SH10 175,7315
#define SH11 176,7341
#define NORMAL1 177,7367
#define NORMAL2 178,7393
#define NORMAL3 179,7419
#define NORMAL4 180,7445
#define NORMAL5 181,7471
#define NORMAL6 182,7497
#define NORMAL7 183,7523
#define NORMAL8A 184,7549
#define NORMAL8B 185,7575
#define NORMAL9 186,7601
#define NORMAL10 187,7627
#define NORMAL11 188,7653
#define NORMAL12 189,7679
#define NORMAL13 190,7705
#define NORMAL14 191,7731
#define NORMAL15 192,7757
#define NORMAL16 193,7783
#define NORMAL17 194,7809
#define NORMAL18 195,7835
#define NORMAL19 196,7861
#define NORMAL20 197,7887
#define BUSY1 198,7913
#define BUSY2 199,7939
#define BUSY3 200,7965
#define BUSY4 201,7991
#define BUSY5 202,8017
#define BUSY6 203,8043
#define BUSY7 204,8069
#define BUSY8 205,8095
#define BUSY9 206,8121
#define BUSY10 207,8147
#define BUSY11 208,8173
#define BUSY12 209,8199
#define BUSY13 210,8225
#define BUSY14 211,8251
#define BUSY15 212,8277
#define BUSY16 213,8303
#define BUSY17 214,8329
#define BUSY18 215,8355
#define BUSY19 216,8381
#define BUSY20 217,8407
#define BUSY21 218,8433
#define BUSY22 219,8459
#define BUSY23 220,8485
#define BUSY24 221,8511
#define BUSY25 222,8537
#define BUSY26 223,8563
#define REJECT1 224,8589
#define REJECT2 225,8615
#define REJECT3 226,8641
#define REJECT4 227,8667
#define REJECT5 228,8693
#define REJECT6 229,8719
#define REJECT7 230,8745
#define REJECT8 231,8771
#define REJECT9 232,8797
#define REJECT10 233,8823
#define REJECT11 234,8849
#define REJECT12 235,8875
#define REJECT13 236,8901
#define REJECT14 237,8927
#define REJECT15 238,8953
#define REJECT16 239,8979
#define REJECT17 240,9005
#define REJECT18 241,9031
#define REJECT19 242,9057
#define REJECT20 243,9083
#define AWAIT1 244,9109
#define AWAIT2 245,9135
#define AWAIT3 246,9161
#define AWAIT4 247,9187
#define AWAIT5 248,9213
#define AWAIT6 249,9239
#define AWAIT7 250,9265
#define AWAIT8 251,9291
#define AWAIT9 252,9317
#define AWAIT10 253,9343
#define AWAIT11 254,9369
#define AWAIT12 255,9395
#define AWAIT13 256,9421
#define AWAIT14 257,9447
#define AWAIT_BUSY1 258,9473
#define AWAIT_BUSY2 259,9500
#define AWAIT_BUSY3 260,9527
#define AWAIT_BUSY4 261,9554
#define AWAIT_BUSY5 262,9581
#define AWAIT_BUSY6 263,9608
#define AWAIT_BUSY7 264,9635
#define AWAIT_BUSY8 265,9662
#define AWAIT_BUSY9 266,9689
#define AWAIT_BUSY10 267,9716
#define AWAIT_BUSY11 268,9744
#define AWAIT_BUSY12 269,9772
#define AWAIT_BUSY13 270,9800
#define AWAIT_BUSY14 271,9828
#define AWAIT_BUSY15 272,9856
#define AWAIT_BUSY16 273,9884
#define AWAIT_REJECT1 274,9912
#define AWAIT_REJECT2 275,9941
#define AWAIT_REJECT3 276,9970
#define AWAIT_REJECT4 277,9999
#define AWAIT_REJECT5 278,10028
#define AWAIT_REJECT6 279,10057
#define AWAIT_REJECT7 280,10086
#define AWAIT_REJECT8 281,10115
#define AWAIT_REJECT9 282,10144
#define AWAIT_REJECT10 283,10173
#define AWAIT_REJECT11 284,10203
#define AWAIT_REJECT12 285,10233
#define AWAIT_REJECT13 286,10263

net/802/transit/timertr.h,33
static char timertr_entry 7,111

net/802/transit/pdutr.h,395
#define ADM 6,93
#define CONN 7,118
#define RESET_WAIT 8,143
#define RESET_CHECK 9,168
#define SETUP 10,193
#define RESET 11,218
#define D_CONN 12,243
#define ERROR 13,268
#define NORMAL 14,293
#define BUSY 15,318
#define REJECT 16,343
#define AWAIT 17,368
#define AWAIT_BUSY 18,393
#define AWAIT_REJECT 19,418
static short int pdutr_offset 24,491
static char pdutr_entry 28,621

net/appletalk/aarp.c,1561
int sysctl_aarp_expiry_time 61,1656
int sysctl_aarp_tick_time 62,1704
int sysctl_aarp_retransmit_limit 63,1748
int sysctl_aarp_resolve_time 64,1806
struct aarp_entryaarp_entry70,1891
static struct aarp_entry *resolved[88,2554
static struct aarp_entry *resolved[AARP_HASH_SIZE], *unresolved[88,2554
static struct aarp_entry *resolved[AARP_HASH_SIZE], *unresolved[AARP_HASH_SIZE], *proxies[88,2554
static int unresolved_count=89,2661
static struct timer_list aarp_timer;95,2751
static void aarp_expire(100,2820
static void aarp_send_query(113,3032
static void aarp_send_reply(174,4352
void aarp_send_probe(233,5618
static void aarp_expire_timer(291,6816
static void aarp_kick(312,7122
static void aarp_expire_device(338,7560
static void aarp_expire_timeout(358,7828
static int aarp_device_event(380,8315
static struct aarp_entry *aarp_alloc(399,8679
static struct aarp_entry *aarp_find_entry(412,8994
void aarp_proxy_remove(428,9348
struct at_addr* aarp_proxy_find(442,9578
void aarp_send_probe_phase1(460,9924
void aarp_probe_network(484,10651
int aarp_proxy_probe_network(507,11117
int aarp_send_ddp(581,12645
static void aarp_resolved(769,16162
static int aarp_rcv(808,16914
static struct notifier_block aarp_notifier=1015,21153
static char aarp_snap_id[1021,21232
__initfunc(1024,21289
void aarp_device_down(1041,21733
int aarp_get_info(1058,22007
void aarp_cleanup_module(1151,25072
static struct proc_dir_entry proc_aarp_entries=1162,25265
void aarp_register_proc_fs(1170,25425
void aarp_unregister_proc_fs(1175,25503

net/appletalk/ddp.c,2657
#define DPRINT(DPRINT101,3161
#define DPRINT(DPRINT103,3195
struct datalink_proto *ddp_dl,111,3390
struct datalink_proto *ddp_dl, *aarp_dl;111,3390
static struct proto_ops atalk_dgram_ops;112,3431
#define min(min114,3473
static struct sock *atalk_socket_list 122,3897
extern inline void atalk_remove_socket(130,4113
extern inline void atalk_insert_socket(135,4220
static struct sock *atalk_search_socket(140,4327
static struct sock *atalk_find_socket(182,5339
extern inline void atalk_destroy_socket(209,5734
int atalk_get_info(218,5894
static struct atalk_route *atalk_router_list 274,7722
static struct atalk_iface *atalk_iface_list 275,7775
static struct atalk_route atrtr_default;276,7828
static void atif_drop_device(286,8110
static struct atalk_iface *atif_add_device(306,8452
static int atif_probe_device(334,8981
static int atif_proxy_probe_device(396,10361
struct at_addr *atalk_find_dev_addr(455,11742
static struct at_addr *atalk_find_primary(465,11903
static struct atalk_iface *atalk_find_anynet(494,12599
static struct atalk_iface *atalk_find_interface(510,12967
static struct atalk_route *atrtr_find(538,13774
struct device *atrtr_get_dev(592,14803
static void atrtr_set_default(605,14995
static int atrtr_create(618,15360
static int atrtr_delete(703,17163
void atrtr_device_down(728,17641
static inline void atalk_dev_down(751,18012
static int ddp_device_event(762,18365
int atif_ioctl(780,18693
static int atrtr_ioctl(1008,25672
int atalk_if_get_info(1038,26341
int atalk_rt_get_info(1071,27163
unsigned short atalk_checksum(1122,28634
static int atalk_create(1153,29233
static int atalk_release(1200,30059
static int atalk_pick_port(1221,30401
static int atalk_autobind(1232,30629
static int atalk_bind(1257,31164
static int atalk_connect(1315,32392
static int atalk_accept(1363,33394
static int atalk_getname(1378,33668
static int atalk_rcv(1421,34743
static int ltalk_rcv(1644,40041
static int atalk_sendmsg(1704,41384
static int atalk_recvmsg(1887,45771
static int atalk_shutdown(1945,47012
static int atalk_ioctl(1953,47126
static struct net_proto_family atalk_family_ops=2042,48864
static struct proto_ops atalk_dgram_ops=2048,48948
static struct notifier_block ddp_notifier=2070,49275
struct packet_type ltalk_packet_type=2077,49353
struct packet_type ppptalk_packet_type=2086,49433
static char ddp_snap_id[2095,49515
static struct proc_dir_entry proc_appletalk=2105,49767
static struct proc_dir_entry proc_atalk_route=2113,49928
static struct proc_dir_entry proc_atalk_iface=2121,50099
__initfunc(2132,50338
int init_module(2164,51156
void cleanup_module(2183,51573

net/appletalk/sysctl_net_atalk.c,506
extern int sysctl_aarp_expiry_time;13,336
extern int sysctl_aarp_tick_time;14,372
extern int sysctl_aarp_retransmit_limit;15,406
extern int sysctl_aarp_resolve_time;16,447
static ctl_table atalk_table[19,506
static ctl_table atalk_dir_table[31,1066
static ctl_table atalk_root_table[36,1169
static struct ctl_table_header *atalk_table_header;41,1269
void atalk_register_sysctl(43,1322
void atalk_unregister_sysctl(48,1426
void atalk_register_sysctl(54,1518
void atalk_unregister_sysctl(58,1556

net/ax25/af_ax25.c,1678
ax25_cb *volatile ax25_list 134,6132
static struct proto_ops ax25_proto_ops;136,6169
void ax25_free_cb(142,6308
static void ax25_free_sock(154,6466
static void ax25_remove_socket(162,6607
static void ax25_kill_by_device(191,7042
static int ax25_device_event(210,7380
void ax25_insert_socket(237,7893
struct sock *ax25_find_listener(254,8138
struct sock *ax25_find_socket(281,8775
ax25_cb *ax25_find_cb(305,9347
struct sock *ax25_addr_match(341,10198
void ax25_send_to_raw(361,10541
static void ax25_destroy_timer(388,11033
void ax25_destroy_socket(399,11398
static int ax25_ctl_ioctl(451,12734
void ax25_fillin_cb(542,14866
ax25_cb *ax25_create_cb(586,16171
static int ax25_setsockopt(620,16841
static int ax25_getsockopt(706,18508
static int ax25_listen(778,19720
int ax25_create(791,19980
struct sock *ax25_make_new(859,21275
static int ax25_release(928,22929
static int ax25_bind(1000,25001
static int ax25_connect(1062,26869
static int ax25_accept(1217,31100
static int ax25_getname(1275,32302
static int ax25_sendmsg(1312,33428
static int ax25_recvmsg(1452,37116
static int ax25_shutdown(1512,38737
static int ax25_ioctl(1518,38858
static int ax25_get_info(1637,42104
static struct net_proto_family ax25_family_ops 1710,43972
static struct proto_ops ax25_proto_ops 1716,44050
static struct packet_type ax25_packet_type 1740,44402
static struct notifier_block ax25_dev_notifier 1749,44534
static struct proc_dir_entry proc_ax25_route 1773,45194
static struct proc_dir_entry proc_ax25 1779,45365
static struct proc_dir_entry proc_ax25_calls 1785,45514
__initfunc(1793,45694
int init_module(1816,46347
void cleanup_module(1823,46410

net/ax25/ax25_out.c,231
ax25_cb *ax25_send_frame(61,2104
void ax25_output(137,3840
static void ax25_send_iframe(226,5886
void ax25_kick(256,6476
void ax25_transmit_buffer(338,8237
void ax25_queue_xmit(378,9107
int ax25_check_iframes_acked(396,9443

net/ax25/ax25_in.c,168
static int ax25_rx_fragment(71,2458
int ax25_rx_iframe(132,4031
static int ax25_process_rx_frame(190,5363
static int ax25_rcv(216,5944
int ax25_kiss_rcv(472,11854

net/ax25/ax25_route.c,422
static ax25_route *ax25_route_list 67,2524
static inline void ax25_route_invert(74,2712
void ax25_rt_device_down(87,2907
int ax25_rt_ioctl(116,3466
int ax25_rt_get_info(239,6947
static ax25_route *ax25_find_route(303,8239
static inline void ax25_adjust_path(338,9328
int ax25_rt_autobind(354,9584
ax25_route *ax25_rt_find_route(390,10425
struct sk_buff *ax25_rt_build_path(407,10767
void ax25_rt_free(441,11434

net/ax25/ax25_subr.c,317
void ax25_clear_queues(62,2062
void ax25_frames_acked(84,2593
void ax25_requeue_frames(100,2947
int ax25_validate_nr(122,3515
int ax25_decode(140,3861
void ax25_send_control(190,5390
void ax25_return_dm(230,6462
void ax25_calculate_t1(264,7189
void ax25_calculate_rtt(289,7506
void ax25_disconnect(304,7853

net/ax25/ax25_timer.c,631
void ax25_start_heartbeat(56,1857
void ax25_start_t1timer(67,2092
void ax25_start_t2timer(78,2335
void ax25_start_t3timer(89,2578
void ax25_start_idletimer(102,2849
void ax25_stop_heartbeat(115,3138
void ax25_stop_t1timer(120,3209
void ax25_stop_t2timer(125,3280
void ax25_stop_t3timer(130,3351
void ax25_stop_idletimer(135,3422
int ax25_t1timer_running(140,3497
unsigned long ax25_display_timer(145,3610
static void ax25_heartbeat_expiry(153,3770
static void ax25_t1timer_expiry(174,4227
static void ax25_t2timer_expiry(193,4635
static void ax25_t3timer_expiry(212,5043
static void ax25_idletimer_expiry(233,5492

net/ax25/sysctl_net_ax25.c,753
static int min_ipdefmode[13,286
static int min_axdefmode[14,343
static int min_backoff[15,400
static int min_conmode[16,454
static int min_window[17,508
static int min_ewindow[18,560
static int min_t1[19,615
static int min_t2[20,665
static int min_t3[21,715
static int min_idle[22,767
static int min_n2[23,824
static int min_paclen[24,869
static int min_proto[25,923
static int min_ds_timeout[26,973
static struct ctl_table_header *ax25_table_header;28,1042
static ctl_table *ax25_table 30,1094
static int ax25_table_size 31,1131
static ctl_table ax25_dir_table[33,1166
static ctl_table ax25_root_table[38,1255
static const ctl_table ax25_param_table[43,1353
void ax25_register_sysctl(103,3546
void ax25_unregister_sysctl(150,4896

net/ax25/ax25_ds_timer.c,292
static void ax25_ds_add_timer(51,1413
void ax25_ds_del_timer(60,1635
void ax25_ds_set_timer(65,1738
static void ax25_ds_timeout(80,2092
void ax25_ds_heartbeat_expiry(104,2687
void ax25_ds_t3timer_expiry(139,3602
void ax25_ds_idletimer_expiry(150,3898
void ax25_ds_t1_timeout(179,4694

net/ax25/ax25_addr.c,272
ax25_address null_ax25_address 49,1403
char *ax2asc(54,1518
ax25_address *asc2ax(86,1926
int ax25cmp(122,2506
int ax25digicmp(141,2893
unsigned char *ax25_addr_parse(162,3286
int ax25_addr_build(217,4379
int ax25_addr_size(274,5465
void ax25_digi_invert(285,5669

net/ax25/ax25_dev.c,271
ax25_dev *ax25_dev_list 43,1127
ax25_dev *ax25_dev_ax25dev(45,1160
ax25_dev *ax25_addr_ax25dev(56,1374
void ax25_dev_device_up(71,1720
void ax25_dev_device_down(115,3111
int ax25_fwd_ioctl(170,4076
struct device *ax25_fwd_dev(199,4644
void ax25_dev_free(217,4933

net/ax25/ax25_ds_in.c,162
static int ax25_ds_state1_machine(54,1644
static int ax25_ds_state2_machine(117,3348
static int ax25_ds_state3_machine(162,4262
int ax25_ds_frame_in(296,7531

net/ax25/ax25_iface.c,597
static struct protocol_struct protocol_struct39,1004
} *protocol_list 43,1129
static struct linkfail_struct linkfail_struct45,1155
} *linkfail_list 48,1249
static struct listen_struct listen_struct50,1275
} *listen_list 54,1380
int ax25_protocol_register(56,1404
void ax25_protocol_release(84,1951
int ax25_linkfail_register(117,2527
void ax25_linkfail_release(138,2877
int ax25_listen_register(171,3469
void ax25_listen_release(196,3898
int (*ax25_protocol_function(229,4562
int ax25_listen_mine(240,4826
void ax25_link_failed(251,5116
int ax25_protocol_is_registered(259,5317

net/ax25/ax25_ds_subr.c,323
void ax25_ds_nr_error_recovery(48,1465
void ax25_ds_enquiry_response(56,1608
void ax25_ds_establish_data_link(125,3466
static void ax25_kiss_cmd(142,3940
static int ax25_check_dama_slave(172,4672
void ax25_dev_dama_on(183,4937
void ax25_dev_dama_off(195,5141
void ax25_dama_on(207,5383
void ax25_dama_off(213,5497

net/ax25/ax25_ip.c,129
int ax25_encapsulate(58,1378
int ax25_rebuild_header(105,2519
int ax25_encapsulate(200,4541
int ax25_rebuild_header(205,4695

net/ax25/ax25_std_timer.c,195
void ax25_std_heartbeat_expiry(48,1490
void ax25_std_t2timer_expiry(80,2344
void ax25_std_t3timer_expiry(88,2524
void ax25_std_idletimer_expiry(95,2658
void ax25_std_t1timer_expiry(118,3174

net/ax25/ax25_std_in.c,212
static int ax25_std_state1_machine(69,2403
static int ax25_std_state2_machine(131,3961
static int ax25_std_state3_machine(168,4749
static int ax25_std_state4_machine(293,8000
int ax25_std_frame_in(445,11821

net/ax25/ax25_uid.c,202
static ax25_uid_assoc *ax25_uid_list 51,1297
int ax25_uid_policy 53,1343
ax25_address *ax25_findbyuid(55,1369
int ax25_uid_ioctl(67,1594
int ax25_uid_get_info(132,3130
void ax25_uid_free(172,3816

net/ax25/ax25_std_subr.c,204
void ax25_std_nr_error_recovery(51,1510
void ax25_std_establish_data_link(56,1599
void ax25_std_transmit_enquiry(73,2008
void ax25_std_enquiry_response(86,2339
void ax25_std_timeout_response(96,2616

net/core/datagram.c,272
static inline void wait_for_packet(55,1725
static inline int connection_based(73,2079
struct sk_buff *skb_recv_datagram(101,3249
void skb_free_datagram(175,5069
int skb_copy_datagram(184,5200
int skb_copy_datagram_iovec(199,5466
unsigned int datagram_poll(215,5979

net/core/dev.c,2407
NET_PROFILE_DEFINE(97,3369
struct packet_type *ptype_base[132,3981
struct packet_type *ptype_all 133,4043
atomic_t dev_lockct 140,4215
static struct notifier_block *netdev_chain=146,4284
static struct sk_buff_head backlog;153,4451
int netdev_fastroute;156,4516
int netdev_fastroute_obstacles;157,4538
struct net_fastroute_stats dev_fastroute_stat;158,4570
int netdev_nit=174,4940
void dev_add_pack(192,5597
void dev_remove_pack(221,6047
struct device *dev_get(257,6774
struct device * dev_get_by_index(269,6967
struct device *dev_getbyhwaddr(281,7160
int dev_alloc_name(299,7555
struct device *dev_alloc(314,7851
void netdev_state_change(332,8173
void dev_load(345,8375
extern inline void dev_load(353,8490
static int default_rebuild_header(357,8550
int dev_open(368,8787
static __inline__ void dev_do_clear_fastroute(426,9610
void dev_clear_fastroute(436,9820
int dev_close(451,10056
int register_netdevice_notifier(495,10761
int unregister_netdevice_notifier(500,10877
void dev_queue_xmit_nit(510,11087
void dev_loopback_xmit(561,12485
int dev_queue_xmit(576,12886
int netdev_dropping 642,14277
int netdev_max_backlog 643,14302
atomic_t netdev_rx_dropped;644,14332
int net_cpu_congestion;646,14386
int netdev_throttle_events;650,14451
static unsigned long netdev_fc_mask 651,14479
unsigned long netdev_fc_xoff 652,14520
} netdev_fc_slots[658,14626
int netdev_register_fc(660,14650
void netdev_unregister_fc(678,15040
static void netdev_wakeup(693,15316
static void dev_clear_backlog(711,15605
void netif_rx(756,16678
static inline void handle_bridge(796,17461
void net_bh(831,18224
static gifconf_func_t * gifconf_list 1032,22522
int register_gifconf(1034,22570
static int dev_ifname(1062,23313
static int dev_ifconf(1092,23899
static int sprintf_stats(1152,24967
int dev_get_info(1184,26060
static int dev_proc_stats(1224,26873
static int sprintf_wireless_stats(1268,27656
int dev_get_wireless_info(1300,28556
void dev_set_promiscuity(1342,29381
void dev_set_allmulti(1363,29923
int dev_change_flags(1374,30163
static int dev_ifsioc(1436,31709
int dev_ioctl(1590,35442
int dev_new_index(1721,38179
static int dev_boot_phase 1732,38340
int register_netdevice(1735,38373
int unregister_netdevice(1787,39750
static struct proc_dir_entry proc_net_dev 1864,41535
static struct proc_dir_entry proc_net_wireless 1874,41738
__initfunc(1883,41970

net/core/skbuff.c,630
spinlock_t skb_queue_lock 67,1904
static atomic_t net_skbcount 73,1992
static atomic_t net_allocs 74,2039
static atomic_t net_fails 75,2084
extern atomic_t ip_frag_mem;77,2130
static kmem_cache_t *skbuff_head_cache;79,2160
void skb_over_panic(87,2333
void skb_under_panic(93,2503
void show_net_buffers(99,2695
struct sk_buff *alloc_skb(119,3273
static inline void skb_headerinit(180,4546
void kfree_skbmem(205,5177
void __kfree_skb(218,5461
struct sk_buff *skb_clone(235,5861
struct sk_buff *skb_copy(264,6401
struct sk_buff *skb_realloc_headroom(313,7436
void skb_add_mtu(367,8536
void __init skb_init(376,8690

net/core/sock.c,1597
#define min(min133,5135
__u32 sysctl_wmem_max 136,5209
__u32 sysctl_rmem_max 137,5246
__u32 sysctl_wmem_default 138,5283
__u32 sysctl_rmem_default 139,5324
int sysctl_optmem_max 142,5436
int sock_setsockopt(149,5628
int sock_getsockopt(365,9779
static kmem_cache_t *sk_cachep;479,11573
struct sock *sk_alloc(486,11686
void sk_free(499,11915
void __init sk_init(521,12338
void sock_wfree(536,12593
void sock_rfree(548,12855
struct sk_buff *sock_wmalloc(559,13028
struct sk_buff *sock_rmalloc(576,13441
void *sock_kmalloc(593,13869
void sock_kfree_s(612,14275
unsigned long sock_rspace(626,14816
static void sock_wait_for_wmem(651,15600
struct sk_buff *sock_alloc_send_skb(678,16128
void __release_sock(740,17396
void sklist_remove_socket(764,17961
void sklist_insert_socket(789,18259
static void sklist_destroy_timer(810,18760
void sklist_destroy_socket(821,18986
int sock_no_dup(858,19827
int sock_no_release(865,19994
int sock_no_bind(870,20076
int sock_no_connect(875,20173
int sock_no_socketpair(881,20291
int sock_no_accept(886,20384
int sock_no_getname(891,20485
unsigned int sock_no_poll(897,20603
int sock_no_ioctl(902,20702
int sock_no_listen(907,20804
int sock_no_shutdown(912,20883
int sock_no_setsockopt(917,20960
int sock_no_getsockopt(923,21086
int sock_no_fcntl(933,21327
int sock_no_sendmsg(957,21825
int sock_no_recvmsg(963,21951
void sock_def_wakeup(975,22115
void sock_def_error_report(981,22209
void sock_def_readable(989,22349
void sock_def_write_space(997,22492
void sock_def_destruct(1012,22867
void sock_init_data(1018,22982

net/core/dev_mcast.c,169
void dev_mc_upload(67,1914
int dev_mc_delete(92,2342
int dev_mc_add(138,3287
void dev_mc_discard(183,4168
static int dev_mc_read_proc(198,4539
__initfunc(243,5388

net/core/iovec.c,200
int verify_iovec(39,1015
int memcpy_toiovec(74,1663
void memcpy_tokerneliovec(103,2131
int memcpy_fromiovec(127,2529
int memcpy_fromiovecend(155,2931
int csum_partial_copy_fromiovecend(193,3683

net/core/firewall.c,302
struct semaphore firewall_sem 16,362
static int firewall_policy[17,402
static struct firewall_ops *firewall_chain[18,438
int register_firewall(24,522
int unregister_firewall(71,1280
int call_fw_firewall(102,1726
int call_in_firewall(120,2062
int call_out_firewall(134,2353
__initfunc(155,2845

net/core/sysctl_net_core.c,406
extern int netdev_max_backlog;14,285
extern int netdev_fastroute;15,316
extern int net_msg_cost;16,345
extern int net_msg_burst;17,370
extern __u32 sysctl_wmem_max;19,397
extern __u32 sysctl_rmem_max;20,427
extern __u32 sysctl_wmem_default;21,457
extern __u32 sysctl_rmem_default;22,491
extern int sysctl_core_destroy_delay;24,526
extern int sysctl_optmem_max;25,564
ctl_table core_table[27,595

net/core/dst.c,415
struct dst_entry * dst_garbage_list;22,420
atomic_t	dst_total 23,457
static unsigned long dst_gc_timer_expires;25,495
static unsigned long dst_gc_timer_inc 26,538
static struct timer_list dst_gc_timer 29,630
atomic_t hh_count;33,740
static void dst_run_gc(36,767
static int dst_discard(67,1505
static int dst_blackhole(73,1582
void * dst_alloc(79,1661
void __dst_free(101,2118
void dst_destroy(125,2732

net/core/neighbour.c,1917
#define NEIGH_DEBUG 58,1931
#define NEIGH_PRINTK(NEIGH_PRINTK60,1954
#define NEIGH_NOPRINTK(NEIGH_NOPRINTK61,1991
#define NEIGH_PRINTK0 62,2038
#define NEIGH_PRINTK1 63,2073
#define NEIGH_PRINTK2 64,2110
#define NEIGH_PRINTK1 68,2190
#define NEIGH_PRINTK2 72,2274
static int neigh_glbl_allocs;81,2518
static struct neigh_table *neigh_tables;82,2548
static int neigh_blackhole(84,2590
unsigned long neigh_rand_reach_time(96,2867
static int neigh_forced_gc(102,2972
int neigh_ifdown(144,3952
static struct neighbour *neigh_alloc(198,5182
struct neighbour * __neigh_lookup(235,6018
struct pneigh_entry * pneigh_lookup(287,7225
int pneigh_delete(326,8049
static int pneigh_ifdown(351,8640
void neigh_destroy(378,9160
static void neigh_suspect(413,9976
static void neigh_connect(428,10280
static void neigh_sync(451,10937
static void neigh_periodic_timer(473,11428
static __inline__ int neigh_max_probes(534,12756
static void neigh_timer_handler(543,12974
int __neigh_event_send(592,14332
static __inline__ void neigh_update_hhs(644,15744
int neigh_update(668,16359
struct neighbour * neigh_event_ns(760,18645
static void neigh_hh_init(772,18936
int neigh_compat_output(810,19873
int neigh_resolve_output(826,20206
int neigh_connected_output(865,21191
static void neigh_proxy_process(883,21620
void pneigh_enqueue(911,22322
struct neigh_parms *neigh_parms_alloc(936,22938
void neigh_parms_release(956,23395
void neigh_table_init(977,23823
int neigh_table_clear(1000,24511
int neigh_delete(1028,25046
int neigh_add(1070,25961
static int neigh_fill_info(1128,27386
static int neigh_dump_table(1162,28325
int neigh_dump_info(1193,29048
void neigh_app_ns(1218,29587
static void neigh_app_notify(1238,30049
struct neigh_sysctl_tableneigh_sysctl_table1266,30528
} neigh_sysctl_template 1274,30741
int neigh_sysctl_register(1332,32745
void neigh_sysctl_unregister(1382,34359

net/core/scm.c,227
static __inline__ int scm_check_creds(45,1111
static int scm_fp_copy(57,1537
void __scm_destroy(102,2327
int __scm_send(115,2522
int put_cmsg(169,3550
void scm_detach_fds(201,4339
struct scm_fp_list *scm_fp_dup(256,5560

net/core/rtnetlink.c,908
atomic_t rtnl_rlockct;53,1424
struct wait_queue *rtnl_wait;54,1447
void rtnl_lock(57,1479
void rtnl_unlock(63,1533
int rtattr_parse(69,1593
struct sock *rtnl;83,1914
unsigned long rtnl_wlockct;85,1934
struct rtnetlink_link * rtnetlink_links[87,1963
#define _S	89,2013
#define _X	90,2062
#define _G	91,2117
static const int rtm_min[93,2149
static const int rta_max[105,2509
void __rta_fill(117,2646
int rtnetlink_send(128,2930
static int rtnetlink_fill_ifinfo(141,3234
int rtnetlink_dump_ifinfo(186,4462
int rtnetlink_dump_all(203,4845
void rtmsg_ifinfo(229,5433
static int rtnetlink_done(246,5784
rtnetlink_rcv_msg(256,6032
extern __inline__ int rtnetlink_rcv_skb(387,8854
static void rtnetlink_rcv(425,9860
static struct rtnetlink_link link_rtnetlink_table[446,10213
static int rtnetlink_event(475,10795
struct notifier_block rtnetlink_dev_notifier 489,11078
__initfunc(496,11160

net/core/filter.c,119
static u8 *load_pointer(43,1056
int sk_run_filter(64,1565
int sk_chk_filter(348,6669
int sk_attach_filter(420,8410

net/core/profile.c,804
atomic_t net_profile_active;24,488
struct timeval net_profile_adjust;25,517
struct net_profile_slot *net_profile_chain 29,581
__u32 alpha_lo;32,661
long alpha_hi;33,677
static struct timer_list alpha_timer 37,733
void alpha_tick(40,809
void net_profile_irq_adjust(50,987
static int profile_read_proc(63,1261
struct iphdr whitehole_iph;144,2961
int whitehole_count;145,2989
static int whitehole_xmit(147,3011
static struct timer_list whitehole_timer 161,3332
static struct device whitehole_dev 164,3418
static int whitehole_open(167,3532
static int whitehole_close(175,3694
static void whitehole_inject(181,3787
static struct net_device_stats *whitehole_get_stats(209,4563
__initfunc(215,4728
int net_profile_register(240,5509
int net_profile_unregister(249,5657
__initfunc(265,5917

net/core/utils.c,179
static unsigned long net_rand_seed 24,611
unsigned long net_random(26,655
void net_srandom(32,768
int net_msg_cost 38,855
int net_msg_burst 39,880
int net_ratelimit(47,1110

net/ethernet/pe2.c,84
pEII_datalink_header(8,138
make_EII_client(19,424
void destroy_EII_client(34,730

net/ethernet/eth.c,250
__initfunc(64,2123
int eth_header(96,2684
int eth_rebuild_header(149,3920
unsigned short eth_type_trans(179,4594
int eth_header_parse(230,5780
int eth_header_cache(237,5949
void eth_header_cache_update(256,6426
void eth_copy_and_sum(267,6698

net/ethernet/sysctl_net_ether.c,30
ctl_table ether_table[11,243

net/ipv4/af_inet.c,1329
#define min(min119,3844
struct linux_mib net_statistics;121,3880
static __inline__ void kill_sk_queues(145,4573
static __inline__ void kill_sk_now(168,5146
static __inline__ void kill_sk_later(182,5395
void destroy_sock(202,5911
int inet_setsockopt(243,6792
int inet_getsockopt(260,7296
static int inet_autobind(273,7593
int inet_listen(291,7919
static int inet_create(325,8715
int inet_release(462,11579
static int inet_bind(499,12485
int inet_dgram_connect(563,14544
static void inet_wait_for_connect(579,14902
int inet_stream_connect(602,15433
int inet_accept(674,17300
static int inet_getname(747,18733
int inet_recvmsg(772,19266
int inet_sendmsg(794,19789
int inet_shutdown(817,20273
unsigned int inet_poll(842,20940
static int inet_ioctl(861,21526
struct proto_ops inet_stream_ops 962,23762
struct proto_ops inet_dgram_ops 983,24064
struct net_proto_family inet_family_ops 1004,24374
static struct proc_dir_entry proc_net_rarp 1012,24492
static struct proc_dir_entry proc_net_raw 1019,24664
static struct proc_dir_entry proc_net_netstat 1025,24813
static struct proc_dir_entry proc_net_snmp 1031,24978
static struct proc_dir_entry proc_net_sockstat 1037,25131
static struct proc_dir_entry proc_net_tcp 1043,25298
static struct proc_dir_entry proc_net_udp 1049,25447
__initfunc(1065,25760

net/ipv4/ip_fw.c,2938
static struct sock *ipfwsk;142,5483
#define SLOT_NUMBER(SLOT_NUMBER146,5534
#define SLOT_NUMBER(SLOT_NUMBER148,5619
#define NUM_SLOTS 150,5666
#define SIZEOF_STRUCT_IP_CHAIN 152,5702
#define SIZEOF_STRUCT_IP_FW_KERNEL 154,5801
static unsigned int fwc_rlocks,158,5948
static unsigned int fwc_rlocks, fwc_wlocks;158,5948
#define FWC_DEBUG_LOCK(FWC_DEBUG_LOCK159,5992
#define FWC_DEBUG_UNLOCK(FWC_DEBUG_UNLOCK165,6106
#define FWC_DONT_HAVE_LOCK(FWC_DONT_HAVE_LOCK171,6218
#define FWC_HAVE_LOCK(FWC_HAVE_LOCK178,6413
#define FWC_DEBUG_LOCK(FWC_DEBUG_LOCK186,6598
#define FWC_DEBUG_UNLOCK(FWC_DEBUG_UNLOCK187,6640
#define FWC_DONT_HAVE_LOCK(FWC_DONT_HAVE_LOCK188,6684
#define FWC_HAVE_LOCK(FWC_HAVE_LOCK189,6730
#define FWC_READ_LOCK(FWC_READ_LOCK192,6808
#define FWC_WRITE_LOCK(FWC_WRITE_LOCK193,6892
#define FWC_READ_LOCK_IRQ(FWC_READ_LOCK_IRQ194,6978
#define FWC_WRITE_LOCK_IRQ(FWC_WRITE_LOCK_IRQ195,7078
#define FWC_READ_UNLOCK(FWC_READ_UNLOCK196,7180
#define FWC_WRITE_UNLOCK(FWC_WRITE_UNLOCK197,7270
#define FWC_READ_UNLOCK_IRQ(FWC_READ_UNLOCK_IRQ198,7362
#define FWC_WRITE_UNLOCK_IRQ(FWC_WRITE_UNLOCK_IRQ199,7471
struct ip_countersip_counters203,7601
struct ip_fwkernelip_fwkernel208,7678
struct ip_reent ip_reent219,8017
struct ip_chainip_chain226,8199
#define dprintf(dprintf242,8684
#define dprintf(dprintf244,8749
#define duprintf(duprintf248,8820
#define duprintf(duprintf250,8885
rwlock_t ip_fw_lock 254,8980
static struct ip_chain *ip_fw_chains;257,9059
#define IP_FW_INPUT_CHAIN 259,9099
#define IP_FW_FORWARD_CHAIN 260,9138
#define IP_FW_OUTPUT_CHAIN 261,9187
extern inline int port_match(264,9307
static int ip_rule_match(273,9585
#define FWINV(FWINV280,9754
static const char *branchname(374,12540
static void dump_packet(396,13110
static int check_label(437,14262
static struct ip_chain *find_label(449,14574
static int find_special(461,14896
static void cleanup(496,15839
ip_fw_domatch(515,16289
ip_fw_check(573,18131
static int zero_fw_chain(806,23922
static int clear_fw_chain(816,24150
static int replace_in_chain(833,24432
static int append_to_chain(854,24881
static int insert_in_chain(879,25615
static int del_num_from_chain(907,26303
static int del_rule_from_chain(940,27177
static int del_chain(1055,30751
static struct ip_chain *ip_init_chain(1086,31467
static int create_chain(1112,32181
static int change_policy(1138,32891
static struct ip_fwkernel *convert_ipfw(1147,33152
int ip_fw_ctl(1266,36897
static int dump_rule(1494,42161
static int ip_chain_procinfo(1545,43818
static int ip_chain_name_procinfo(1600,45320
int ipfw_input_check(1653,46614
int ipfw_output_check(1660,46842
int ipfw_forward_check(1667,47073
struct firewall_ops ipfw_ops=1674,47307
static struct proc_dir_entry proc_net_ipfwchains_chain 1685,47503
static struct proc_dir_entry proc_net_ipfwchains_chainnames 1691,47727
__initfunc(1699,47984

net/ipv4/arp.c,940
static struct neigh_ops arp_generic_ops 130,4452
static struct neigh_ops arp_hh_ops 142,4631
static struct neigh_ops arp_direct_ops 154,4803
struct neigh_ops arp_broken_ops 166,4948
struct neigh_table arp_tbl 178,5116
int arp_mc_map(193,5396
static int arp_constructor(212,5702
static void arp_error_report(295,7991
static void arp_solicit(301,8112
static int arp_set_predefined(340,9230
int arp_find(358,9659
int arp_bind_neighbour(398,10442
void arp_send(422,10971
static void parp_redo(521,13308
int arp_rcv(530,13442
int arp_req_set(742,19485
static unsigned arp_state_to_flags(802,20889
static int arp_req_get(816,21147
int arp_req_delete(836,21662
int arp_ioctl(885,22724
#define HBUFFERLEN 954,24125
int arp_get_info(956,24148
void arp_ifdown(1077,26961
static struct packet_type arp_packet_type 1087,27068
static struct proc_dir_entry proc_net_arp 1097,27219
__initfunc(1105,27376
char *ax2asc(1125,27713

net/ipv4/route.c,2391
#define IP_MAX_MTU	97,3346
#define RT_GC_TIMEOUT 99,3373
int ip_rt_min_delay 101,3405
int ip_rt_max_delay 102,3433
int ip_rt_gc_thresh 103,3462
int ip_rt_max_size 104,3501
int ip_rt_gc_timeout 105,3542
int ip_rt_gc_interval 106,3580
int ip_rt_gc_min_interval 107,3611
int ip_rt_redirect_number 108,3645
int ip_rt_redirect_load 109,3676
int ip_rt_redirect_silence 110,3709
int ip_rt_error_cost 111,3758
int ip_rt_error_burst 112,3785
int ip_rt_gc_elasticity 113,3815
int ip_rt_mtu_expires 114,3844
static unsigned long rt_deadline 116,3879
#define RTprint(RTprint118,3918
static struct timer_list rt_flush_timer 122,4010
static struct timer_list rt_periodic_timer 124,4090
struct dst_ops ipv4_dst_ops 139,4544
__u8 ip_tos2prio[153,4745
struct rtable 	*rt_hash_table[177,5104
static __inline__ unsigned rt_hash_code(181,5239
static int rt_cache_get_info(191,5485
static __inline__ void rt_free(252,6914
static __inline__ void rt_drop(257,6992
static __inline__ int rt_fast_clean(263,7086
static __inline__ int rt_valuable(271,7359
static __inline__ int rt_may_expire(277,7499
static void rt_check_expire(292,7790
static void rt_run_flush(334,8686
void rt_cache_flush(358,9082
static int rt_garbage_collect(412,10348
static int rt_intern_hash(523,13118
void ip_rt_redirect(596,14779
static struct dst_entry *ipv4_negative_advice(704,17355
void ip_rt_send_redirect(751,18735
static int ip_error(789,19941
static unsigned short mtu_plateau[829,20754
static __inline__ unsigned short guess_mtu(832,20854
unsigned short ip_rt_frag_needed(842,21072
static struct dst_entry * ipv4_dst_check(891,22313
static struct dst_entry * ipv4_dst_reroute(897,22428
static void ipv4_link_failure(903,22543
static int ip_rt_bug(914,22756
void ip_rt_get_source(931,23191
static void set_class_tag(946,23532
static void rt_set_nexthop(955,23748
ip_route_input_mc(995,24890
int ip_route_input_slow(1071,26876
int ip_route_input(1340,33335
int ip_route_output_slow(1395,35036
int ip_route_output(1635,41300
static int rt_fill_info(1670,42123
int inet_rtm_getroute(1771,45001
int ip_rt_dump(1842,46693
void ip_rt_multicast_event(1878,47515
static int flush_delay;1887,47617
int ipv4_sysctl_rtcache_flush(1890,47649
ctl_table ipv4_route_table[1901,47900
struct ip_rt_acct ip_rt_acct[1952,49927
static int ip_rt_acct_read(1955,49985
__initfunc(1976,50374

net/ipv4/tcp.c,1362
int sysctl_tcp_fin_timeout 425,17384
struct tcp_mib	tcp_statistics;427,17431
kmem_cache_t *tcp_openreq_cachep;429,17463
kmem_cache_t *tcp_bucket_cachep;430,17497
kmem_cache_t *tcp_timewait_cachep;431,17530
static struct open_request *tcp_find_established(438,17672
static int tcp_readable(461,18199
static unsigned int tcp_listen_poll(529,20106
#define tcp_min_write_space(tcp_min_write_space544,20436
unsigned int tcp_poll(554,20745
void tcp_write_space(610,22290
int tcp_ioctl(622,22484
static int wait_for_tcp_connect(660,23192
static inline int tcp_memory_free(694,23996
static void wait_for_tcp_memory(702,24147
#define PSH_NEEDED 729,24755
int tcp_do_sendmsg(738,24955
void tcp_read_wakeup(980,30926
static int tcp_recv_urg(994,31236
static inline void tcp_eat_skb(1063,32842
static void cleanup_rbuf(1075,33252
int tcp_recvmsg(1113,34327
static inline void tcp_check_fin_timer(1350,39785
static unsigned char new_state[1363,40180
static int tcp_close_state(1379,40739
void tcp_shutdown(1405,41506
static inline int closing(1432,42153
static void tcp_close_pending 1443,42465
void tcp_close(1466,42885
static struct open_request * wait_for_connect(1567,45597
struct sock *tcp_accept(1596,46249
int tcp_setsockopt(1650,47356
int tcp_getsockopt(1716,48980
void tcp_set_keepalive(1752,49652
void __init tcp_init(1762,49898

net/ipv4/icmp.c,1315
#define min(min286,13376
struct icmp_mib icmp_statistics;292,13435
struct icmp_err icmp_err_convert[297,13644
int sysctl_icmp_echo_ignore_all 317,14454
int sysctl_icmp_echo_ignore_broadcasts 318,14491
int sysctl_icmp_ignore_bogus_error_responses 321,14596
struct icmp_controlicmp_control327,14719
static struct icmp_control icmp_pointers[336,15032
struct icmp_bxmicmp_bxm342,15130
struct inode icmp_inode;358,15489
struct socket *icmp_socket=359,15514
#define XRLIM_BURST_FACTOR 387,16581
int xrlim_allow(388,16610
static inline int icmpv4_xrlim_allow(404,16965
static void icmp_out_count(430,17589
static int icmp_glue_bits(442,17826
static void icmp_reply(474,18702
void icmp_send(512,19806
static void icmp_unreach(667,23291
static void icmp_redirect(794,26387
static void icmp_echo(837,27476
static void icmp_timestamp(858,28030
static void icmp_address(923,30152
static void icmp_address_reply(936,30459
static void icmp_discard(961,31172
int icmp_chkaddr(980,31838
int icmp_rcv(1027,33007
static unsigned long dummy;1083,34353
int sysctl_icmp_destunreach_time 1093,34710
int sysctl_icmp_timeexceed_time 1094,34751
int sysctl_icmp_paramprob_time 1095,34791
int sysctl_icmp_echoreply_time 1096,34830
static struct icmp_control icmp_pointers[1102,34965
__initfunc(1137,36918

net/ipv4/ipip.c,1182
#define HASH_SIZE 116,4146
#define HASH(HASH117,4168
static struct device ipip_fb_tunnel_dev 122,4313
static struct ip_tunnel ipip_fb_tunnel 126,4430
static struct ip_tunnel *tunnels_r_l[130,4545
static struct ip_tunnel *tunnels_r[131,4594
static struct ip_tunnel *tunnels_l[132,4641
static struct ip_tunnel *tunnels_wc[133,4688
static struct ip_tunnel **tunnels[134,4728
static struct ip_tunnel * ipip_tunnel_lookup(136,4819
static struct ip_tunnel **ipip_bucket(160,5462
static void ipip_tunnel_unlink(179,5756
static void ipip_tunnel_link(192,5965
struct ip_tunnel * ipip_tunnel_locate(201,6096
static void ipip_tunnel_destroy(263,7385
void ipip_err(275,7621
int ipip_rcv(450,11736
static int ipip_tunnel_xmit(483,12553
ipip_tunnel_ioctl 619,15728
static struct net_device_stats *ipip_tunnel_get_stats(730,18245
static int ipip_tunnel_change_mtu(735,18373
static void ipip_tunnel_init_gen(743,18557
static int ipip_tunnel_init(765,19198
static int ipip_fb_tunnel_open(798,19919
static int ipip_fb_tunnel_close(804,20006
__initfunc(811,20101
static struct inet_protocol ipip_protocol 830,20453
int init_module(841,20875
void cleanup_module(862,21281

net/ipv4/igmp.c,1161
#define IP_MAX_MEMBERSHIPS 100,3790
#define IGMP_V1_Router_Present_Timeout	106,3915
#define IGMP_Unsolicited_Report_Interval	107,3964
#define IGMP_Query_Response_Interval	108,4013
#define IGMP_Unsolicited_Report_Count	109,4059
#define IGMP_Initial_Report_Delay	112,4102
#define IGMP_V1_SEEN(IGMP_V1_SEEN121,4439
static __inline__ void igmp_stop_timer(127,4566
static __inline__ void igmp_start_timer(135,4704
#define IGMP_SIZE 150,4965
static int igmp_send_report(152,5032
static void igmp_timer_expire(213,6381
static void igmp_heard_report(239,7009
static void igmp_heard_query(258,7365
int igmp_rcv(296,8428
static void ip_mc_filter_add(343,9476
static void ip_mc_filter_del(363,10023
static void igmp_group_dropped(372,10237
static void igmp_group_added(392,10657
void ip_mc_inc_group(419,11077
int ip_mc_dec_group(459,11890
void ip_mc_down(482,12328
void ip_mc_up(494,12529
void ip_mc_destroy_dev(508,12757
static struct in_device * ip_mc_find_dev(519,12959
int sysctl_igmp_max_memberships 544,13424
int ip_mc_join_group(546,13479
int ip_mc_leave_group(605,14629
void ip_mc_drop_socket(634,15354
int ip_mc_procinfo(650,15727

net/ipv4/devinet.c,1443
struct ipv4_devconf ipv4_devconf 61,1607
static struct ipv4_devconf ipv4_devconf_dflt 62,1662
#define rtmsg_ifa(rtmsg_ifa67,1814
static struct notifier_block *inetaddr_chain;70,1861
int inet_ifa_count;77,2176
int inet_dev_count;78,2196
static struct in_ifaddr * inet_alloc_ifa(80,2217
static __inline__ void inet_free_ifa(93,2417
struct in_device *inetdev_init(99,2530
static void inetdev_destroy(127,3234
struct in_ifaddr * inet_addr_onlink(147,3648
inet_del_ifa(159,3894
inet_insert_ifa(210,5257
inet_set_ifa(257,6419
struct in_device *inetdev_by_index(274,6776
struct in_ifaddr *inet_ifa_byprefix(283,6930
inet_rtm_deladdr(299,7285
inet_rtm_newaddr(324,8056
static __inline__ int inet_abc_len(374,9411
int devinet_ioctl(395,9713
inet_gifconf(606,14690
u32 inet_select_addr(641,15521
int register_inetaddr_notifier(681,16303
int unregister_inetaddr_notifier(686,16420
static int inetdev_event(691,16541
struct notifier_block ip_netdev_notifier=741,17710
static int inet_fill_ifaddr(749,17808
static int inet_dump_ifaddr(782,18780
static void rtmsg_ifa(815,19535
static struct rtnetlink_link inet_rtnetlink_table[835,20050
void inet_forward_change(875,20860
int devinet_sysctl_forward(895,21232
static struct devinet_sysctl_tabledevinet_sysctl_table914,21645
} devinet_sysctl 922,21876
static void devinet_sysctl_register(965,23738
static void devinet_sysctl_unregister(1002,24877
__initfunc(1013,25095

net/ipv4/udp.c,1428
struct udp_mib		udp_statistics;122,4619
struct sock *udp_hash[124,4652
static int udp_v4_verify_bind(126,4693
static inline int udp_lport_inuse(165,5572
unsigned short udp_good_socknum(177,5790
static u32 uh_cache_saddr,231,7346
static u32 uh_cache_saddr, uh_cache_daddr;231,7346
static u16 uh_cache_dport,232,7389
static u16 uh_cache_dport, uh_cache_sport;232,7389
static struct sock *uh_cache_sk 233,7432
static void udp_v4_hash(235,7473
static void udp_v4_unhash(250,7703
static void udp_v4_rehash(271,8034
struct sock *udp_v4_lookup_longway(299,8598
__inline__ struct sock *udp_v4_lookup(340,9430
#define secondlist(secondlist363,9966
#define udp_v4_proxy_loop_init(udp_v4_proxy_loop_init371,10138
#define udp_v4_proxy_loop_next(udp_v4_proxy_loop_next374,10263
static struct sock *udp_v4_proxy_lookup(377,10361
static inline struct sock *udp_v4_mcast_next(444,11825
void udp_err(477,12889
static unsigned short udp_check(563,14874
struct udpfakehdr udpfakehdr568,15067
static int udp_getfrag(584,15445
static int udp_getfrag_nosum(614,16527
int udp_sendmsg(627,16947
int udp_ioctl(805,21164
int udp_recvmsg(856,22148
int udp_connect(962,24796
static void udp_close(1016,25924
static int udp_queue_rcv_skb(1025,26112
static inline void udp_deliver(1056,26860
static int udp_v4_mcast_deliver(1067,27113
int udp_chkaddr(1102,27854
int udp_rcv(1124,28323
struct proto udp_prot 1225,30957

net/ipv4/raw.c,740
struct sock *mroute_socket=66,2195
struct sock *raw_v4_htable[69,2236
static void raw_v4_hash(71,2284
static void raw_v4_unhash(85,2520
static void raw_v4_rehash(104,2813
struct sock *raw_v4_lookup(128,3272
void raw_err 146,3744
static int raw_rcv_skb(196,4892
int raw_rcv(217,5264
struct rawfakehdr rawfakehdr228,5473
static int raw_getfrag(242,5618
static int raw_getrawfrag(252,5867
static int raw_sendmsg(277,6534
static void raw_close(403,9326
static int raw_bind(435,10226
int raw_recvmsg(463,11173
static int raw_init(509,12050
static int raw_seticmpfilter(517,12226
static int raw_geticmpfilter(526,12480
static int raw_setsockopt(541,12826
static int raw_getsockopt(557,13182
struct proto raw_prot 573,13539

net/ipv4/ipmr.c,1812
#define CONFIG_IP_PIMSM	64,1901
static struct vif_device vif_table[71,1981
static unsigned long vifc_map;72,2043
static int maxvif;73,2101
int mroute_do_assert 74,2120
int mroute_do_pim 75,2173
static struct mfc_cache *mfc_cache_array[76,2196
int cache_resolve_queue_len 77,2272
extern struct inet_protocol pim_protocol;83,2583
struct device *ipmr_new_tunnel(86,2633
static int reg_vif_num 136,3640
static struct device * reg_dev;137,3669
static int reg_vif_xmit(139,3702
static struct net_device_stats *reg_vif_get_stats(148,3972
struct device *ipmr_reg_vif(154,4099
static int vif_delete(211,5058
static void ipmr_update_threshoulds(255,5836
static void ipmr_cache_delete(281,6394
static void ipmr_cache_timer(340,7563
static void ipmr_cache_insert(350,7737
struct mfc_cache *ipmr_cache_find(361,7944
static struct mfc_cache *ipmr_cache_alloc(380,8295
static void ipmr_cache_resolve(398,8743
static int ipmr_cache_report(446,9872
static int ipmr_cache_unresolved(525,11744
int ipmr_mfc_modify(589,13072
static void mrtsock_destruct(660,14409
int ip_mroute_setsockopt(679,14849
int ip_mroute_getsockopt(860,18741
int ipmr_ioctl(897,19402
void mroute_close(948,20613
static int ipmr_device_event(972,20959
static struct notifier_block ip_mr_notifier=988,21277
static void ip_encap(1000,21536
static void ipmr_queue_xmit(1024,22053
int ipmr_find_vif(1136,25040
int ip_mr_forward(1148,25284
int ip_mr_input(1222,27211
int pim_rcv_v1(1293,28785
int pim_rcv(1337,30033
ipmr_fill_mroute(1379,31250
int ipmr_get_route(1413,32163
int ipmr_vif_info(1459,33281
int ipmr_mfc_info(1501,34168
static struct proc_dir_entry proc_net_ipmr_vif 1566,35511
static struct proc_dir_entry proc_net_ipmr_mfc 1572,35677
struct inet_protocol pim_protocol 1581,35881
__initfunc(1598,36157

net/ipv4/rarp.c,764
struct rarp_tablerarp_table79,2295
struct rarp_table *rarp_tables 89,2757
static struct packet_type rarp_packet_type 93,2876
static int initflag 102,3072
static inline void rarp_release_entry(109,3145
static void rarp_destroy(120,3340
static void rarp_destroy_dev(145,3730
static int rarp_device_event(165,4068
static struct notifier_block rarp_dev_notifier=177,4343
static int rarp_pkt_inited=183,4426
static void rarp_init_pkt 185,4458
static void rarp_end_pkt(196,4689
static int rarp_rcv(213,5056
static int rarp_req_set(300,6847
static int rarp_req_get(410,8779
int rarp_ioctl(464,9704
int rarp_get_info(500,10361
struct proc_dir_entry proc_net_rarp 562,11740
__initfunc(570,11894
int init_module(581,12043
void cleanup_module(587,12095

net/ipv4/proc.c,273
static inline void get__openreq(54,1854
static inline void get__sock(77,2557
get__netinfo(166,5443
int tcp_get_info(226,6702
int udp_get_info(231,6855
int raw_get_info(236,7008
int afinet_get_info(244,7220
int snmp_get_info(276,8019
int netstat_get_info(355,11946

net/ipv4/protocol.c,583
#define IPPROTO_PREVIOUS 48,1438
static struct inet_protocol igmp_protocol 52,1497
#define IPPROTO_PREVIOUS 64,1770
static struct inet_protocol tcp_protocol 68,1819
#define IPPROTO_PREVIOUS 80,2083
static struct inet_protocol udp_protocol 82,2123
#define IPPROTO_PREVIOUS 94,2392
static struct inet_protocol icmp_protocol 97,2433
#define IPPROTO_PREVIOUS 109,2706
struct inet_protocol *inet_protocol_base 112,2748
struct inet_protocol *inet_protos[114,2810
struct inet_protocol *inet_get_protocol(125,2949
void inet_add_protocol(143,3294
int inet_del_protocol(173,3814

net/ipv4/timer.c,85
void net_delete_timer 53,1843
void net_reset_timer 60,1948
void net_timer 70,2220

net/ipv4/utils.c,46
char *in_ntoa(49,1355
__u32 in_aton(65,1593

net/ipv4/ip_output.c,534
int sysctl_ip_dynaddr 84,2515
int ip_id_count 87,2544
__inline__ void ip_send_check(90,2621
void ip_build_and_send_pkt(99,2810
int __ip_finish_output(153,4090
int ip_mc_output(158,4170
int ip_output(209,5367
void ip_queue_xmit(234,6159
int ip_build_xmit_slow(394,10668
int ip_build_xmit(604,14723
void ip_fragment(726,17402
static int ip_reply_glue_bits(879,20666
void ip_send_reply(919,21722
static struct packet_type ip_packet_type 954,22518
static struct proc_dir_entry proc_net_igmp 967,22695
__initfunc(980,22949

net/ipv4/ip_forward.c,48
int ip_chksock(55,1443
int ip_forward(71,1691

net/ipv4/tcp_input.c,2473
#define SYNC_INIT 67,2394
#define SYNC_INIT 69,2449
extern int sysctl_tcp_fin_timeout;72,2477
int sysctl_tcp_timestamps 77,2640
int sysctl_tcp_window_scaling 78,2671
int sysctl_tcp_sack 79,2706
int sysctl_tcp_syncookies 81,2732
int sysctl_tcp_stdurg;82,2772
int sysctl_tcp_rfc1337;83,2795
static void tcp_delack_estimator(97,3441
static __inline__ void tcp_remember_ack(128,4044
static __inline__ void tcp_rtt_estimator(154,4933
static __inline__ void tcp_set_rto(187,5923
static __inline__ void tcp_bound_rto(204,6603
extern __inline__ void tcp_replace_ts_recent(213,6818
#define PAWS_24DAYS	239,7734
extern __inline__ int tcp_paws_discard(241,7780
static int __tcp_sequence(251,8135
extern __inline__ int tcp_sequence(265,8491
static void tcp_reset(274,8723
static void tcp_sacktag_write_queue(296,9190
void tcp_parse_options(344,10666
static __inline__ int tcp_fast_parse_options(438,13116
#define FLAG_DATA	460,13825
#define FLAG_WIN_UPDATE	461,13887
#define FLAG_DATA_ACKED	462,13957
#define FLAG_RETRANS_DATA_ACKED	463,14026
static __inline__ void clear_fast_retransmit(465,14109
static void tcp_fast_retrans(476,14355
static __inline__ void tcp_cong_avoid(589,18510
static int tcp_clean_rtx_queue(607,19025
static void tcp_ack_probe(661,20614
static __inline__ int should_advance_cwnd(683,21174
static void tcp_ack_saw_tstamp(712,21896
static __inline__ void tcp_ack_packets_out(749,22802
static int tcp_ack(767,23410
void tcp_timewait_kill(900,26989
int tcp_timewait_state_process(929,27969
static __inline__ void tcp_tw_hashdance(992,29842
void tcp_time_wait(1025,30872
static void tcp_fin(1095,32859
static void tcp_sack_maybe_coalesce(1154,34401
static __inline__ void tcp_sack_swap(1198,35662
static void tcp_sack_new_ofo_skb(1211,35946
static void tcp_sack_remove_skb(1280,38010
static void tcp_sack_extend(1316,39178
static void tcp_ofo_queue(1334,39697
static void tcp_data_queue(1363,40470
static int tcp_data(1476,43738
static void __tcp_data_snd_check(1519,44809
static __inline__ void tcp_data_snd_check(1533,45257
static __inline__ void tcp_measure_rcv_mss(1545,45518
static __inline__ void __tcp_ack_snd_check(1564,45923
static __inline__ void tcp_ack_snd_check(1598,46999
static void tcp_check_urg(1619,47623
static inline void tcp_urg(1660,48820
static int prune_queue(1688,49652
int tcp_rcv_established(1765,52572
struct sock *tcp_check_req(1936,57222
int tcp_rcv_state_process(2004,59009

net/ipv4/ip_fragment.c,758
int sysctl_ipfrag_high_thresh 44,1355
int sysctl_ipfrag_low_thresh 45,1397
int sysctl_ipfrag_time 47,1439
struct ipfrag ipfrag50,1510
struct ipq ipq61,1928
#define IPQ_HASHSZ	72,2348
struct ipq *ipq_hash[74,2371
#define ipqhashfn(ipqhashfn76,2406
atomic_t ip_frag_mem 79,2516
extern __inline__ void frag_kfree_skb(82,2622
extern __inline__ void frag_kfree_s(88,2745
extern __inline__ void *frag_kmalloc(94,2852
static struct ipfrag *ip_frag_create(105,3051
static inline struct ipq *ip_find(135,3771
static void ip_free(164,4609
static void ip_expire(196,5287
static void ip_evictor(221,5886
static struct ipq *ip_create(254,6730
static int ip_done(302,7981
static struct sk_buff *ip_glue(331,8643
struct sk_buff *ip_defrag(413,10777

net/ipv4/ip_input.c,231
struct ip_mib ip_statistics=155,6184
int ip_ioctl(164,6373
#define CONFIG_IP_ALWAYS_DEFRAG 175,6565
static __inline__ int icmp_filter(182,6642
int ip_call_ra_chain(197,6930
int ip_local_deliver(230,7560
int ip_rcv(387,11172

net/ipv4/ip_sockglue.c,645
#define MAX(MAX51,1235
#define IP_CMSG_PKTINFO	53,1271
#define IP_CMSG_TTL	54,1298
#define IP_CMSG_TOS	55,1321
#define IP_CMSG_RECVOPTS	56,1344
#define IP_CMSG_RETOPTS	57,1371
static void ip_cmsg_recv_pktinfo(63,1436
static void ip_cmsg_recv_ttl(80,1850
static void ip_cmsg_recv_tos(86,2005
static void ip_cmsg_recv_opts(91,2134
void ip_cmsg_recv_retopts(100,2330
void ip_cmsg_recv(118,2723
int ip_cmsg_send(147,3248
struct ip_ra_chain *ip_ra_chain;194,4671
int ip_ra_control(196,4705
void ip_icmp_error(233,5409
void ip_local_error(263,6107
int ip_recv_error(301,6906
int ip_setsockopt(374,8529
int ip_getsockopt(620,14480

net/ipv4/tcp_output.c,1113
extern int sysctl_tcp_timestamps;39,1297
extern int sysctl_tcp_window_scaling;40,1331
extern int sysctl_tcp_sack;41,1369
int sysctl_tcp_retrans_collapse 44,1468
static __inline__ void clear_delayed_acks(47,1563
static __inline__ void update_send_head(57,1796
void tcp_transmit_skb(77,2512
#define SYSCTL_FLAG_TSTAMPS	86,2770
#define SYSCTL_FLAG_WSCALE	87,2802
#define SYSCTL_FLAG_SACK	88,2833
void tcp_send_skb(160,5099
static int tcp_fragment(192,6278
int tcp_sync_mss(272,8727
void tcp_write_xmit(312,9832
u32 __tcp_select_window(412,13381
static void tcp_retrans_try_collapse(455,14664
void tcp_simple_retransmit(521,16786
static __inline__ void update_retrans_head(544,17432
int tcp_retransmit_skb(560,17928
void tcp_xmit_retransmit_queue(626,20053
void tcp_fack_retransmit(667,21144
void tcp_send_fin(698,21908
void tcp_send_active_reset(761,23987
int tcp_send_synack(790,24942
struct sk_buff * tcp_make_synack(820,25739
void tcp_connect(890,27863
void tcp_send_delayed_ack(982,30791
void tcp_send_ack(1003,31365
void tcp_write_wakeup(1048,32773
void tcp_send_probe0(1113,34871

net/ipv4/ip_options.c,259
void ip_options_build(36,1004
int ip_options_echo(84,2282
void ip_options_fragment(207,5021
int ip_options_compile(245,5768
void ip_options_undo(465,10482
int ip_options_get(492,11190
void ip_forward_options(520,11871
int ip_options_rcv_srr(565,12955

net/ipv4/tcp_timer.c,1111
int sysctl_tcp_syn_retries 25,880
int sysctl_tcp_keepalive_time 26,927
int sysctl_tcp_keepalive_probes 27,979
int sysctl_tcp_retries1 28,1035
int sysctl_tcp_retries2 29,1072
struct timer_list	tcp_slow_timer 37,1333
struct tcp_sl_timer tcp_slt_array[44,1417
const char timer_bug_msg[51,1769
void tcp_init_xmit_timers(59,2005
void tcp_reset_xmit_timer(78,2624
void tcp_clear_xmit_timers(111,3401
static int tcp_write_err(123,3679
static int tcp_write_timeout(142,4130
void tcp_delack_timer(167,4831
void tcp_probe_timer(182,5187
static __inline__ int tcp_keepopen_proc(221,6137
static void tcp_bucketgc(252,6851
int tcp_tw_death_row_slot 286,7577
static struct tcp_tw_bucket *tcp_tw_death_row[287,7608
static void tcp_twkill(292,7786
void tcp_tw_schedule(317,8391
void tcp_tw_reschedule(328,8707
void tcp_tw_deschedule(349,9303
#define MAX_KA_PROBES	379,10042
int sysctl_tcp_max_ka_probes 381,10067
static void tcp_keepalive(397,10936
void tcp_retransmit_timer(432,12026
static void tcp_syn_recv_timer(519,14593
void tcp_sltimer_handler(591,16220
void __tcp_inc_slow_timer(619,16830

net/ipv4/sysctl_net_ipv4.c,1616
#define TCP_PMTU_DISC	22,441
#define TCP_CONG_AVOID	23,505
#define TCP_DELAY_ACKS	24,576
static int boolean_min 27,646
static int boolean_max 28,674
extern int sysctl_icmp_echo_ignore_all;32,728
extern int sysctl_icmp_echo_ignore_broadcasts;33,768
extern int sysctl_icmp_ignore_bogus_error_responses;34,815
extern int sysctl_ipfrag_low_thresh;37,894
extern int sysctl_ipfrag_high_thresh;38,931
extern int sysctl_ipfrag_time;39,970
extern int sysctl_ip_dynaddr;42,1025
extern int sysctl_ip_masq_debug;45,1077
extern int sysctl_tcp_timestamps;47,1111
extern int sysctl_tcp_window_scaling;48,1145
extern int sysctl_tcp_sack;49,1183
extern int sysctl_tcp_retrans_collapse;50,1211
extern int sysctl_tcp_keepalive_time;51,1251
extern int sysctl_tcp_keepalive_probes;52,1289
extern int sysctl_tcp_max_ka_probes;53,1329
extern int sysctl_tcp_retries1;54,1366
extern int sysctl_tcp_retries2;55,1398
extern int sysctl_tcp_fin_timeout;56,1430
extern int sysctl_tcp_syncookies;57,1465
extern int sysctl_tcp_syn_retries;58,1499
extern int sysctl_tcp_stdurg;59,1534
extern int sysctl_tcp_rfc1337;60,1564
extern int sysctl_tcp_syn_taildrop;61,1595
extern int sysctl_max_syn_backlog;62,1632
extern int sysctl_icmp_destunreach_time;65,1687
extern int sysctl_icmp_timeexceed_time;66,1728
extern int sysctl_icmp_paramprob_time;67,1768
extern int sysctl_icmp_echoreply_time;68,1807
extern int sysctl_igmp_max_memberships;71,1865
int tcp_retr1_max 73,1906
struct ipv4_config ipv4_config;75,1933
extern ctl_table ipv4_route_table[77,1966
int ipv4_sysctl_forward(82,2033
ctl_table ipv4_table[97,2335

net/ipv4/ip_masq.c,3048
int sysctl_ip_masq_debug 83,3090
int ip_masq_get_debug_level(88,3149
struct ip_masq_hook *ip_masq_user_hook 93,3218
static struct ip_masq_timeout_table masq_timeout_table 99,3355
#define MASQUERADE_EXPIRE_RETRY 119,3946
static const char * state_name_table[121,4032
#define mNO 137,4573
#define mES 138,4600
#define mSS 139,4634
#define mSR 140,4665
#define mFW 141,4696
#define mTW 142,4727
#define mCL 143,4759
#define mCW 144,4787
#define mLA 145,4820
#define mLI 146,4851
struct masq_tcp_states_t masq_tcp_states_t148,4881
const char * ip_masq_state_name(152,4971
struct masq_tcp_states_t masq_tcp_states 159,5099
static __inline__ int masq_tcp_state_idx(175,5799
static int masq_set_state_timeout(196,6099
static int masq_tcp_state(218,6529
static int masq_set_state(251,7400
int ip_masq_listen(267,7804
extern int sysctl_ip_dynaddr;276,7954
rwlock_t __ip_masq_lock 281,8007
static __inline__ const __u8 icmp_type_request(290,8167
#define icmp_id(icmp_id307,8614
#define icmp_hv_req(icmp_hv_req309,8719
#define icmp_hv_rep(icmp_hv_rep311,8851
static __u16 masq_port 317,9024
static spinlock_t masq_port_lock 319,9081
#define PORT_MASQ_MUL 338,9662
#define PORT_MASQ_MUL 340,9692
atomic_t ip_masq_free_ports[346,9787
atomic_t mport_count 356,10208
struct ip_masq *ip_masq_m_tab[378,10817
struct ip_masq *ip_masq_s_tab[379,10866
static struct ip_fw_masq ip_masq_dummy 386,10973
struct ip_fw_masq *ip_masq_expire 393,11126
#define MASQ_DADDR_PASS	402,11356
#define MASQ_DPORT_PASS	403,11418
#define CONFIG_IP_MASQ_LOOSE_DEFAULT 408,11530
static void __ip_masq_set_expire(417,11719
ip_masq_hash_key(433,12031
static int ip_masq_hash(444,12281
static int ip_masq_unhash(480,13203
static struct ip_masq * __ip_masq_in_get(534,14934
static struct ip_masq * __ip_masq_out_get(584,16499
static struct ip_masq * __ip_masq_getbym(654,18271
struct ip_masq * ip_masq_out_get(674,18725
struct ip_masq * ip_masq_in_get(687,19036
static __inline__ void __ip_masq_put(700,19345
void ip_masq_put(705,19434
static void masq_expire(724,19791
static __u16 get_next_mport(794,21219
struct ip_masq * ip_masq_new(817,21708
static __inline__ int proto_doff(1001,26271
int ip_fw_masquerade(1037,27047
int ip_fw_unmasq_icmp(1317,34106
int ip_fw_masq_icmp(1377,35613
static struct sk_buff * masq_skb_cow(1609,42127
int ip_fw_demasq_icmp(1635,42801
int ip_fw_demasquerade(1866,49046
void ip_masq_control_add(2108,54891
void ip_masq_control_del(2123,55433
struct ip_masq * ip_masq_control_get(2146,56189
static int ip_msqhst_procinfo(2157,56341
int ip_fw_masq_timeouts(2237,57935
static int ip_masq_user_check_hook(2266,58588
static int ip_masq_user_info(2279,58885
static int ip_masq_user_ctl(2292,59183
int ip_masq_uctl(2306,59497
static struct proc_dir_entry	*proc_net_ip_masq 2345,60316
static void ip_masq_proc_count(2348,60386
int ip_masq_proc_register(2357,60519
void ip_masq_proc_unregister(2364,60739
__initfunc(2373,60967
u32 ip_masq_select_addr(2393,61439
__initfunc(2401,61588

net/ipv4/ip_masq_app.c,967
#define IP_MASQ_APP_TAB_SIZE 42,1034
#define IP_MASQ_APP_HASH(IP_MASQ_APP_HASH44,1093
#define IP_MASQ_APP_TYPE(IP_MASQ_APP_TYPE45,1173
#define IP_MASQ_APP_PORT(IP_MASQ_APP_PORT46,1232
#define IP_MASQ_APP_PROTO(IP_MASQ_APP_PROTO47,1288
struct ip_masq_app *ip_masq_app_base[58,1515
int register_ip_masq_app(65,1647
int unregister_ip_masq_app(90,2261
struct ip_masq_app * ip_masq_app_get(128,3533
static __inline__ int ip_masq_app_bind_chg(151,4075
struct ip_masq_app * ip_masq_bind_app(176,4863
int ip_masq_unbind_app(213,5821
static __inline__ void masq_fix_seq(233,6276
static __inline__ void masq_fix_ack_seq(262,7057
static __inline__ void masq_seq_update(292,8109
int ip_masq_app_pkt_out(311,8709
int ip_masq_app_pkt_in(374,10342
int ip_masq_app_getinfo(435,11830
static struct proc_dir_entry proc_net_ip_masq_app 476,13052
__initfunc(488,13266
static struct sk_buff * skb_replace(503,13642
struct sk_buff * ip_masq_skb_replace(580,16099

net/ipv4/ip_masq_ftp.c,404
static int ports[60,1852
struct ip_masq_app *masq_incarnations[61,1950
static int debug=67,2060
static int masq_ftp_pasv;74,2201
masq_ftp_init_1 77,2239
masq_ftp_done_1 84,2363
masq_ftp_out 91,2480
masq_ftp_in 230,6123
struct ip_masq_app ip_masq_ftp 313,8218
__initfunc(328,8631
int ip_masq_ftp_done(357,9314
EXPORT_NO_SYMBOLS;378,9722
int init_module(380,9742
void cleanup_module(387,9853

net/ipv4/ip_masq_irc.c,471
int ports[62,1939
struct ip_masq_app *masq_incarnations[63,2032
static int debug=68,2141
#define NUM_DCCPROTO 79,2305
struct dccproto dccproto81,2329
struct dccproto dccprotos[88,2400
#define MAXMATCHLEN 95,2551
masq_irc_init_1 98,2585
masq_irc_done_1 105,2709
masq_irc_out 112,2826
struct ip_masq_app ip_masq_irc 288,6624
__initfunc(303,7021
int ip_masq_irc_done(333,7709
EXPORT_NO_SYMBOLS;355,8118
int init_module(357,8138
void cleanup_module(364,8249

net/ipv4/ip_masq_raudio.c,508
#define TOLOWER(TOLOWER85,3136
#define ISDIGIT(ISDIGIT86,3210
struct raudio_priv_data raudio_priv_data88,3261
int ports[108,3803
struct ip_masq_app *masq_incarnations[109,3904
static int debug=115,4014
masq_raudio_init_1 123,4146
masq_raudio_done_1 142,4623
masq_raudio_out 151,4820
masq_rtsp_out 287,8078
struct ip_masq_app ip_masq_raudio 498,12291
__initfunc(513,12722
int ip_masq_raudio_done(542,13420
EXPORT_NO_SYMBOLS;563,13837
int init_module(565,13857
void cleanup_module(572,13971

net/ipv4/tcp_ipv4.c,2661
extern int sysctl_tcp_timestamps;66,2023
extern int sysctl_tcp_window_scaling;67,2057
extern int sysctl_tcp_sack;68,2095
extern int sysctl_tcp_syncookies;69,2123
extern int sysctl_ip_dynaddr;70,2157
extern __u32 sysctl_wmem_max;71,2187
extern __u32 sysctl_rmem_max;72,2217
#define ICMP_MIN_LENGTH 75,2298
struct inode tcp_inode;78,2362
struct socket *tcp_socket=79,2386
struct sock *tcp_established_hash[93,2893
struct tcp_bind_bucket *tcp_bound_hash[98,3068
struct sock *tcp_listening_hash[104,3300
struct sock *tcp_regs[107,3374
int sysctl_local_port_range[114,3548
int tcp_port_rover 115,3597
static __inline__ int tcp_hashfn(117,3631
static __inline__ int tcp_sk_hashfn(123,3799
void tcp_bucket_unlock(134,4050
struct tcp_bind_bucket *tcp_bucket_create(154,4490
static __inline__ int tcp_bucket_check(177,5037
static int tcp_v4_verify_bind(189,5310
unsigned short tcp_good_socknum(263,7358
static void tcp_v4_hash(296,8042
static void tcp_v4_unhash(312,8366
static void tcp_v4_rehash(326,8607
static struct sock *tcp_v4_lookup_listener(363,9529
static inline struct sock *__tcp_v4_lookup(400,10356
__inline__ struct sock *tcp_v4_lookup(435,11451
static struct sock *tcp_v4_proxy_lookup(446,11846
static inline __u32 tcp_v4_init_sequence(521,13424
static int tcp_v4_unique_address(536,13999
int tcp_v4_connect(562,14686
static int tcp_v4_sendmsg(658,17115
static struct open_request *tcp_v4_search_req(692,17926
static inline void do_pmtu_discovery(725,18763
void tcp_v4_err(776,20489
#define no_flags 786,20752
void tcp_v4_send_check(942,24680
static void tcp_v4_send_reset(963,25391
static struct sock *tcp_v4_search_proxy_openreq(1021,26827
int tcp_chkaddr(1046,27430
static void tcp_v4_send_synack(1081,28238
static void tcp_v4_or_free(1128,29410
static inline void syn_flood_warning(1134,29566
tcp_v4_save_options(1150,29954
int sysctl_max_syn_backlog 1175,30623
struct or_calltable or_ipv4 1177,30659
#define BACKLOG(BACKLOG1183,30752
#define BACKLOGMAX(BACKLOGMAX1184,30822
int tcp_v4_conn_request(1186,30869
#define want_cookie 1196,31147
struct sock *tcp_create_openreq_child(1302,33808
struct sock * tcp_v4_syn_recv_sock(1436,37687
static void tcp_v4_rst_req(1508,39709
static inline struct sock *tcp_v4_hnd_req(1533,40498
int tcp_v4_do_rcv(1563,41176
int tcp_v4_rcv(1624,42534
int tcp_v4_rebuild_header(1715,44708
static struct sock * tcp_v4_get_sock(1794,46630
static void v4_addr2sockaddr(1800,46824
struct tcp_func ipv4_specific 1809,47051
static int tcp_v4_init_sock(1827,47424
static int tcp_v4_destroy_sock(1859,48118
struct proto tcp_prot 1888,48866
__initfunc(1922,49805

net/ipv4/ip_nat_dumb.c,19
ip_do_nat(49,1341

net/ipv4/ip_masq_quake.c,455
#define DEBUG_CONFIG_IP_MASQ_QUAKE 36,967
} QUAKEHEADER;QUAKEHEADER43,1208
struct quake_priv_data quake_priv_data45,1224
masq_quake_init_1 51,1327
masq_quake_done_1 67,1722
masq_quake_in 76,1903
masq_quake_out 161,3483
struct ip_masq_app ip_masq_quake 263,5469
struct ip_masq_app ip_masq_quakenew 273,5855
__initfunc(288,6286
int ip_masq_quake_done(298,6502
EXPORT_NO_SYMBOLS;305,6667
int init_module(307,6687
void cleanup_module(314,6800

net/ipv4/syncookies.c,357
extern int sysctl_tcp_syncookies;24,671
static unsigned long tcp_lastsynq_overflow;26,706
static __u16 const msstab[33,919
#define NUM_MSS 45,1085
__u32 cookie_v4_init_sequence(51,1268
#define COUNTER_TRIES 77,2077
static inline int cookie_check(82,2216
extern struct or_calltable or_ipv4;99,2658
get_cookie_sock(102,2723
cookie_v4_check(117,3037

net/ipv4/fib_frontend.c,1052
#define FFprint(FFprint48,1339
#define RT_TABLE_MIN 52,1418
struct fib_table *local_table;54,1454
struct fib_table *main_table;55,1485
#define RT_TABLE_MIN 59,1523
struct fib_table *fib_tables[61,1547
struct fib_table *__fib_new_table(63,1594
void fib_flush(78,1791
fib_get_procinfo(110,2453
struct device * ip_dev_find(147,3248
unsigned inet_addr_type(162,3527
int fib_validate_source(191,4259
int ip_rt_ioctl(246,5516
int ip_rt_ioctl(288,6447
static int inet_check_attr(297,6547
int inet_rtm_delroute(313,6866
int inet_rtm_newroute(328,7222
int inet_dump_fib(343,7580
static void fib_magic(381,8474
static void fib_add_ifaddr(423,9498
static void fib_del_ifaddr(462,10694
#define LOCAL_OK	470,10966
#define BRD_OK	471,10985
#define BRD0_OK	472,11003
#define BRD1_OK	473,11022
static void fib_disable_ip(531,12624
static int fib_inetaddr_event(539,12775
static int fib_netdev_event(563,13298
struct notifier_block fib_inetaddr_notifier 595,13905
struct notifier_block fib_netdev_notifier 601,13988
__initfunc(607,14067

net/ipv4/fib_hash.c,1609
#define FTprint(FTprint46,1293
} fn_key_t;fn_key_t60,1599
} fn_hash_idx_t;fn_hash_idx_t64,1641
struct fib_nodefib_node66,1659
#define FIB_INFO(FIB_INFO70,1733
#define FN_S_ZOMBIE	78,1852
#define FN_S_ACCESSED	79,1874
static int fib_hash_zombies;81,1899
struct fn_zonefn_zone83,1929
#define FZ_HASHMASK(FZ_HASHMASK91,2174
#define FZ_MASK(FZ_MASK95,2268
struct fn_hashfn_hash102,2446
static __inline__ fn_hash_idx_t fn_hash(108,2529
#define fz_key_0(fz_key_0118,2752
#define fz_prefix(fz_prefix119,2793
static __inline__ fn_key_t fz_key(121,2834
static __inline__ struct fib_node ** fz_chain_p(128,2956
static __inline__ struct fib_node * fz_chain(133,3089
extern __inline__ int fn_key_eq(138,3218
extern __inline__ int fn_key_leq(143,3307
#define FZ_MAX_DIVISOR 148,3397
static __inline__ void fn_rebuild_zone(152,3463
static void fn_rehash_zone(172,3890
static void fn_free_node(213,4807
fn_new_zone(221,4953
fn_hash_lookup(262,5899
static int fn_hash_last_dflt=305,6854
static int fib_detect_death(307,6888
fn_hash_select_default(331,7423
#define FIB_SCAN(FIB_SCAN389,8679
#define FIB_SCAN_KEY(FIB_SCAN_KEY392,8759
#define FIB_SCAN_TOS(FIB_SCAN_TOS396,8909
#define FIB_SCAN_TOS(FIB_SCAN_TOS398,8978
#define rtmsg_fib(rtmsg_fib409,9295
fn_hash_insert(414,9351
fn_hash_delete(591,12928
fn_flush_list(681,14871
static int fn_hash_flush(702,15252
static int fn_hash_get_info(723,15681
fn_hash_dump_bucket(767,16549
fn_hash_dump_zone(792,17173
static int fn_hash_dump(814,17689
static void rtmsg_fib(834,18201
struct fib_table * fib_hash_init(862,18988

net/ipv4/fib_rules.c,780
#define FRprintk(FRprintk50,1389
struct fib_rulefib_rule52,1413
static struct fib_rule default_rule 77,1836
static struct fib_rule main_rule 78,1924
static struct fib_rule local_rule 79,2015
static struct fib_rule *fib_rules 81,2101
int inet_rtm_delrule(83,2151
static struct fib_table *fib_empty_table(118,3319
int inet_rtm_newrule(129,3497
u32 fib_rules_map_destination(212,5767
u32 fib_rules_policy(218,5927
u32 fib_rules_tclass(239,6481
static void fib_rules_detach(248,6592
static void fib_rules_attach(258,6766
int fib_lookup(268,6979
void fib_select_default(320,8120
static int fib_rules_event(330,8440
struct notifier_block fib_rules_notifier 342,8702
extern __inline__ int inet_fill_rule(350,8804
int inet_dump_rules(397,10043
__initfunc(416,10382

net/ipv4/fib_semantics.c,1059
#define FSprintk(FSprintk46,1294
static struct fib_info 	*fib_info_list;48,1318
#define for_fib_info(for_fib_info50,1359
#define endfor_fib_info(endfor_fib_info53,1457
#define for_nexthops(for_nexthops57,1520
#define change_nexthops(change_nexthops60,1658
#define for_nexthops(for_nexthops67,1914
#define change_nexthops(change_nexthops70,2032
#define endfor_nexthops(endfor_nexthops75,2205
} fib_props[82,2277
void fib_release_info(103,2989
extern __inline__ int nh_comp(116,3269
extern __inline__ struct fib_info * fib_find_info(137,3799
int ip_fib_check_default(159,4462
static u32 fib_get_attr32(175,4797
fib_count_nexthops(186,5026
fib_get_nhs(202,5316
int fib_nh_match(227,6011
static int fib_check_nh(321,8798
fib_create_info(380,10169
fib_semantic_match(532,13616
u32 __fib_res_prefsrc(580,14517
fib_dump_info(588,14672
fib_convert_rtentry(670,17026
int fib_sync_down(824,20937
int fib_sync_up(868,21802
void fib_select_multipath(905,22467
static unsigned fib_flag_trans(955,23346
void fib_node_get_info(971,23718

net/ipv4/ip_gre.c,1251
static struct device ipgre_fb_tunnel_dev 120,4337
static struct ip_tunnel ipgre_fb_tunnel 124,4456
#define HASH_SIZE 146,4963
#define HASH(HASH147,4985
static struct ip_tunnel *tunnels[149,5028
#define tunnels_r_l	151,5077
#define tunnels_r	152,5110
#define tunnels_l	153,5141
#define tunnels_wc	154,5172
static struct ip_tunnel * ipgre_tunnel_lookup(158,5270
static struct ip_tunnel **ipgre_bucket(192,6198
static void ipgre_tunnel_link(210,6525
static void ipgre_tunnel_unlink(219,6658
static struct ip_tunnel * ipgre_tunnel_locate(232,6869
static void ipgre_tunnel_destroy(294,8233
void ipgre_err(305,8419
int ipgre_rcv(520,13697
static int ipgre_tunnel_xmit(599,15622
ipgre_tunnel_ioctl 822,20805
static struct net_device_stats *ipgre_tunnel_get_stats(948,23631
static int ipgre_tunnel_change_mtu(953,23760
static int ipgre_header(992,25016
static int ipgre_open(1020,25636
static int ipgre_close(1045,26210
static void ipgre_tunnel_init_gen(1059,26518
static int ipgre_tunnel_init(1081,27172
static int ipgre_fb_tunnel_open(1143,28573
static int ipgre_fb_tunnel_close(1149,28661
__initfunc(1156,28757
static struct inet_protocol ipgre_protocol 1178,29216
int init_module(1194,29699
void cleanup_module(1215,30112

net/ipv4/ipconfig.c,2315
#define DBG(DBG47,1259
#define DBG(DBG49,1289
#define CONF_BASE_TIMEOUT	53,1388
#define CONF_RETRIES	54,1454
#define CONF_TIMEOUT_RANDOM	55,1497
#define CONF_TIMEOUT_MULT	56,1568
#define CONF_TIMEOUT_MAX	57,1628
static char user_dev_name[60,1715
static char user_dev_name[IFNAMSIZ] __initdata 60,1715
u32 ic_myaddr __initdata 61,1811
u32 ic_servaddr __initdata 62,1872
u32 ic_gateway __initdata 63,1938
u32 ic_netmask __initdata 64,2004
int ic_enable __initdata 65,2076
int ic_host_name_set __initdata 66,2149
int ic_set_manually __initdata 67,2223
u32 root_server_addr __initdata 69,2300
u8 root_server_path[70,2377
u8 root_server_path[256] __initdata 70,2377
#define CONFIG_IP_PNP_DYNAMIC74,2518
static int ic_proto_enabled __initdata 76,2549
static int ic_got_reply __initdata 84,2717
static int ic_proto_enabled __initdata 88,2804
static int ic_proto_have_if __initdata 92,2857
struct ic_device ic_device98,2929
static struct ic_device *ic_first_dev __initdata 105,3032
static struct device *ic_dev __initdata 106,3114
static int __init ic_open_devs(108,3186
static void __init ic_close_devs(157,4528
set_sockaddr(179,4925
static int __init ic_dev_ioctl(186,5069
static int __init ic_route_ioctl(197,5265
static int __init ic_setup_if(212,5513
static int __init ic_setup_routes(238,6297
static int __init ic_defaults(268,7094
static struct packet_type rarp_packet_type __initdata 306,7996
static inline void ic_rarp_init(314,8154
static inline void ic_rarp_cleanup(319,8231
ic_rarp_recv(328,8373
static void __init ic_rarp_send(387,9879
struct bootp_pkt bootp_pkt407,10199
#define BOOTP_REQUEST 427,10939
#define BOOTP_REPLY 428,10963
static u32 ic_bootp_xid;430,10986
static struct packet_type bootp_packet_type __initdata 434,11104
static void __init ic_bootp_init_ext(446,11324
static inline void ic_bootp_init(474,11823
static inline void ic_bootp_cleanup(485,12019
static void __init ic_bootp_send_if(494,12156
static void __init ic_bootp_send(549,13709
static int __init ic_bootp_string(562,13936
static void __init ic_do_bootp_ext(577,14165
static int __init ic_bootp_recv(615,15041
static int __init ic_dynamic(696,16939
int __init ip_auto_config(809,19573
static int __init ic_proto_name(885,21932
void __init ip_auto_config_setup(911,22379

net/ipv4/ip_masq_autofw.c,1414
#define IP_AUTOFW_EXPIRE	41,1076
struct ip_autofw ip_autofw44,1180
static int debug=64,1472
static struct ip_autofw * ip_autofw_hosts 72,1558
static struct ip_masq_mod * mmod_self 73,1608
static __inline__ struct ip_autofw * ip_autofw_check_range 79,1719
static __inline__ struct ip_autofw * ip_autofw_check_port 102,2369
static __inline__ struct ip_autofw * ip_autofw_check_direct 116,2663
static __inline__ void ip_autofw_update_out 130,2949
static __inline__ void ip_autofw_update_in 153,3422
static __inline__ void ip_autofw_expire(165,3658
static __inline__ int ip_autofw_add(178,3905
static __inline__ int ip_autofw_del(202,4492
static __inline__ int ip_autofw_flush(230,5261
static int autofw_ctl(251,5638
static int autofw_out_update(273,6093
static struct ip_masq * autofw_out_create(284,6404
static int autofw_in_update(303,6868
static int autofw_in_rule(311,7139
static struct ip_masq * autofw_in_create(319,7460
static int autofw_procinfo(344,8228
static struct proc_dir_entry autofw_proc_entry 385,9129
#define proc_ent 392,9279
#define proc_ent 395,9344
#define	autofw_in_update 399,9375
#define autofw_out_rule 400,9405
#define autofw_mod_init 401,9434
#define autofw_mod_done 402,9463
static struct ip_masq_mod autofw_mod 404,9493
__initfunc(422,9838
int ip_autofw_done(427,9936
EXPORT_NO_SYMBOLS;433,10025
int init_module(435,10045
void cleanup_module(442,10126

net/ipv4/ip_masq_cuseeme.c,493
} cu_header;cu_header70,1958
}oc_header;oc_header79,2186
} client_info;client_info85,2358
static int ports[92,2506
struct ip_masq_app *masq_incarnations[93,2606
static int debug=99,2720
masq_cuseeme_init_1 106,2851
masq_cuseeme_done_1 113,2979
masq_cuseeme_out 120,3100
masq_cuseeme_in 141,3732
struct ip_masq_app ip_masq_cuseeme 182,4878
__initfunc(198,5282
int ip_masq_cuseeme_done(229,6020
EXPORT_NO_SYMBOLS;249,6425
int init_module(251,6445
void cleanup_module(258,6560

net/ipv4/ip_masq_mod.c,690
static spinlock_t masq_mod_lock 37,923
struct ip_masq_mod * ip_masq_mod_reg_base 43,1031
struct ip_masq_mod * ip_masq_mod_lkp_base 50,1237
int ip_masq_mod_register_proc(52,1288
void ip_masq_mod_unregister_proc(74,1673
int ip_masq_mod_lkp_unlink(88,1919
int ip_masq_mod_lkp_link(106,2296
int register_ip_masq_mod(117,2495
int unregister_ip_masq_mod(135,2859
int ip_masq_mod_in_rule(173,3763
int ip_masq_mod_out_rule(192,4173
struct ip_masq * ip_masq_mod_in_create(211,4586
struct ip_masq * ip_masq_mod_out_create(226,4935
int ip_masq_mod_in_update(241,5288
int ip_masq_mod_out_update(260,5728
struct ip_masq_mod * ip_masq_mod_getbyname(279,6171
int ip_masq_mod_ctl(298,6566

net/ipv4/ip_masq_portfw.c,1162
#define IP_PORTFW_PORT_MIN 31,715
#define IP_PORTFW_PORT_MAX 32,744
struct ip_portfw ip_portfw34,778
static struct ip_masq_mod *mmod_self 42,974
static int debug=47,1069
static spinlock_t portfw_lock 55,1152
static struct list_head portfw_list[58,1212
static __inline__ int portfw_idx(59,1252
static __inline__ int ip_portfw_del(72,1458
static __inline__ void ip_portfw_flush(105,2323
static __inline__ struct ip_portfw *ip_portfw_lookup(132,2851
static __inline__ int ip_portfw_edit(162,3507
static __inline__ int ip_portfw_add(197,4217
static __inline__ int portfw_ctl(245,5138
static int portfw_procinfo(313,6420
static struct proc_dir_entry portfw_proc_entry 367,7862
#define proc_ent 375,8081
#define proc_ent 378,8146
static int portfw_in_rule(381,8176
static struct ip_masq * portfw_in_create(400,8833
#define portfw_in_update	457,10042
#define portfw_out_rule	458,10072
#define portfw_out_create	459,10102
#define portfw_out_update	460,10133
static struct ip_masq_mod portfw_mod 462,10165
__initfunc(482,10534
int ip_portfw_done(489,10700
EXPORT_NO_SYMBOLS;495,10789
int init_module(497,10809
void cleanup_module(504,10890

net/ipv4/ip_masq_user.c,619
static int debug=36,710
static void masq_user_k2u(46,894
static int ip_masq_user_maddr(59,1188
static int ip_masq_user_new(113,2348
static int ip_masq_user_del(171,3359
static struct ip_masq * ip_masq_user_locked_get 209,4133
static int ip_masq_user_get(237,4775
static int ip_masq_user_set(255,5046
static int ip_masq_user_ctl(283,5455
static int ip_masq_user_info(343,6631
#define ip_masq_user_info	428,8512
static struct ip_masq_hook ip_masq_user 431,8551
int ip_masq_user_init(436,8637
int ip_masq_user_done(444,8768
EXPORT_NO_SYMBOLS;453,8903
int init_module(454,8922
void cleanup_module(461,9006

net/ipv4/ip_masq_vdolive.c,420
struct vdolive_priv_data vdolive_priv_data38,1085
static int ports[50,1350
struct ip_masq_app *masq_incarnations[51,1450
static int debug=57,1564
masq_vdolive_init_1 64,1695
masq_vdolive_done_1 82,2138
masq_vdolive_out 91,2337
struct ip_masq_app ip_masq_vdolive 215,5883
__initfunc(230,6302
int ip_masq_vdolive_done(258,6993
EXPORT_NO_SYMBOLS;279,7398
int init_module(281,7418
void cleanup_module(288,7533

net/ipv4/ip_masq_mfw.c,1464
static struct ip_masq_mod *mmod_self 35,861
static int debug=37,934
struct ip_masq_mfw_host ip_masq_mfw_host55,1398
#define IP_MASQ_MFW_HSIZE	65,1541
struct ip_masq_mfw ip_masq_mfw71,1662
static struct semaphore mfw_sema 82,1908
static rwlock_t mfw_lock 84,1965
static struct ip_masq_mfw *ip_masq_mfw_table[87,2018
static __inline__ int mfw_hash_val(89,2084
static struct ip_masq_mfw *__mfw_get(99,2222
static int __mfw_add(119,2580
static struct ip_masq_mfw * mfw_new(135,2856
static void mfw_host_to_user(155,3197
static struct ip_masq_mfw_host * mfw_host_new(166,3431
static int mfw_addhost(188,3935
static int mfw_delhost(209,4398
static int __mfw_edithost(242,5050
static void mfw_destroy(269,5619
static int __mfw_del(280,5780
static struct ip_masq_mfw_host * __mfw_sched(308,6268
static struct ip_masq_mfw_host * mfw_lookup(342,7061
static int mfw_procinfo(361,7390
static struct proc_dir_entry mfw_proc_entry 428,8750
#define proc_ent 436,8916
#define proc_ent 439,8978
static void mfw_flush(443,9009
static int mfw_ctl(492,10119
static int mfw_in_rule(671,13460
static struct ip_masq * mfw_in_create(683,13718
#define mfw_in_update	725,14612
#define mfw_out_rule	726,14639
#define mfw_out_create	727,14665
#define mfw_out_update	728,14693
static struct ip_masq_mod mfw_mod 730,14722
__initfunc(749,15063
int ip_mfw_done(754,15155
EXPORT_NO_SYMBOLS;760,15238
int init_module(762,15258
void cleanup_module(769,15336

net/ipx/af_ipx.c,3650
static unsigned char	ipxcfg_max_hops 108,4125
static char		ipxcfg_auto_select_primary 109,4168
static char		ipxcfg_auto_create_interfaces 110,4213
static struct datalink_proto	*p8022_datalink 113,4285
static struct datalink_proto	*pEII_datalink 114,4339
static struct datalink_proto	*p8023_datalink 115,4393
static struct datalink_proto	*pSNAP_datalink 116,4447
static struct proto_ops ipx_dgram_ops;118,4502
static struct net_proto_family *spx_family_ops;120,4542
static ipx_route 	*ipx_routes 122,4591
static ipx_interface	*ipx_interfaces 123,4631
static ipx_interface	*ipx_primary_net 124,4677
static ipx_interface	*ipx_internal_net 125,4724
static int ipxcfg_set_auto_create(127,4773
static int ipxcfg_set_auto_select(142,4985
static int ipxcfg_get_config_data(151,5157
void ipx_remove_socket(173,5994
static void ipx_destroy_socket(217,6811
static void ipxitf_clear_primary_net(234,7187
static ipx_interface *ipxitf_find_using_phys(242,7363
static ipx_interface *ipxitf_find_using_net(254,7602
static void ipxitf_insert_socket(268,7863
static struct sock *ipxitf_find_socket(284,8165
static struct sock *ipxitf_find_internal_socket(298,8410
static void ipxitf_down(319,8808
static int ipxitf_device_event(366,9812
static int ipxitf_def_skb_handler(386,10156
static int ipxitf_demux_socket(401,10432
static int ipxitf_demux_socket(450,11432
static struct sk_buff *ipxitf_adjust_skbuff(582,14753
static int ipxitf_send(608,15317
static int ipxitf_add_local_route(708,17803
static int ipxitf_rcv(716,18033
static void ipxitf_insert(847,21364
static int ipxitf_create_internal(869,21741
static int ipx_map_frame_type(902,22650
static int ipxitf_create(922,22963
static int ipxitf_delete(1025,25542
static ipx_interface *ipxitf_auto_create(1059,26158
static int ipxitf_ioctl(1115,27335
static ipx_route *ipxrtr_lookup(1203,29433
static int ipxrtr_add_route(1213,29587
static void ipxrtr_del_routes(1246,30249
static int ipxrtr_create(1262,30507
static int ipxrtr_delete(1274,30803
static __u16 ipx_set_checksum(1304,31275
static int ipxrtr_route_packet(1347,32245
int ipxrtr_route_skb(1436,34628
static int ipxrtr_ioctl(1459,35041
static const char *ipx_frame_name(1498,35896
static const char *ipx_device_name(1522,36230
static int ipx_interface_get_info(1529,36419
static int ipx_get_info(1573,37829
static int ipx_rt_get_info(1655,40198
static int ipx_setsockopt(1707,41671
static int ipx_getsockopt(1740,42173
static int ipx_create(1780,42757
static int ipx_release(1815,43550
static unsigned short ipx_first_free_socketnum(1835,43845
static int ipx_bind(1855,44285
static int ipx_connect(1956,46775
static int ipx_accept(2010,48153
static int ipx_getname(2021,48328
int ipx_rcv(2070,49372
static int ipx_sendmsg(2113,50301
static int ipx_recvmsg(2176,51843
static int ipx_shutdown(2249,53457
static int ipx_ioctl(2254,53536
int ipx_register_spx(2341,55351
int ipx_unregister_spx(2353,55623
static struct net_proto_family ipx_family_ops 2364,55769
static struct proto_ops ipx_dgram_ops 2369,55844
static struct packet_type ipx_8023_packet_type 2391,56184
static struct packet_type ipx_dix_packet_type 2401,56326
static struct notifier_block ipx_dev_notifier=2410,56464
struct proc_dir_entry ipx_procinfo 2423,56794
struct proc_dir_entry ipx_if_procinfo 2428,56935
struct proc_dir_entry ipx_rt_procinfo 2433,57110
static unsigned char ipx_8022_type 2439,57276
static unsigned char ipx_snap_id[2440,57319
void ipx_proto_init(2442,57389
int ipx_if_offset(2473,58363
static void ipx_proto_finito(2503,59120
int init_module(2542,59914
void cleanup_module(2548,59977

net/ipx/sysctl_net_ipx.c,28
ctl_table ipx_table[11,234

net/ipx/af_spx.c,1151
static struct proto_ops *ipx_operations;41,1347
static struct proto_ops spx_operations;42,1388
static __u16  connids;43,1428
static int spx_sock_init(54,1803
static int spx_create(84,2707
static int spx_shutdown(117,3312
void spx_close_socket(122,3398
void spx_destroy_socket(132,3605
static int spx_release(152,4176
static int spx_listen(177,4657
static int spx_accept(204,5388
static int spx_connect(264,6861
static inline unsigned long spx_calc_rtt(339,9088
static int spx_route_skb(348,9297
static int spx_transmit(394,10245
static void spx_watchdog(487,13053
static void spx_retransmit(508,13524
static int spx_retransmit_chk(545,14439
void spx_rcv(580,15214
static int spx_sendmsg(690,18335
static int spx_recvmsg(733,19417
static int spx_bind(811,21510
static int spx_getname 818,21692
static int spx_ioctl 826,21912
static int spx_setsockopt(834,22093
static int spx_getsockopt(842,22318
static struct proto_ops spx_operations 850,22544
static struct net_proto_family spx_family_ops=870,22956
void spx_proto_init(877,23031
void spx_proto_finito(893,23444
int init_module(901,23524
void cleanup_module(907,23595

net/netrom/af_netrom.c,2224
int nr_ndevs 69,2176
int sysctl_netrom_default_path_quality 71,2195
int sysctl_netrom_obsolescence_count_initialiser 72,2264
int sysctl_netrom_network_ttl_initialiser 73,2332
int sysctl_netrom_transport_timeout 74,2400
int sysctl_netrom_transport_maximum_tries 75,2467
int sysctl_netrom_transport_acknowledge_delay 76,2534
int sysctl_netrom_transport_busy_delay 77,2601
int sysctl_netrom_transport_requested_window_size 78,2668
int sysctl_netrom_transport_no_activity_timeout 79,2739
int sysctl_netrom_routing_control 80,2808
int sysctl_netrom_link_fails_count 81,2880
static unsigned short circuit 83,2951
static struct sock *volatile nr_list 85,2991
static struct proto_ops nr_proto_ops;87,3037
static void nr_free_sock(89,3076
static struct sock *nr_alloc_sock(96,3158
static void nr_remove_socket(122,3558
static void nr_kill_by_device(151,3987
static int nr_device_event(164,4219
static void nr_insert_socket(180,4530
static struct sock *nr_find_listener(196,4779
static struct sock *nr_find_socket(218,5186
static struct sock *nr_find_peer(241,5604
static unsigned short nr_find_next_circuit(264,6064
static void nr_destroy_timer(291,6418
void nr_destroy_socket(302,6783
static int nr_setsockopt(347,7860
static int nr_getsockopt(398,8741
static int nr_listen(447,9528
static int nr_create(461,9816
static struct sock *nr_make_new(501,10766
static int nr_release(549,11855
static int nr_bind(591,12696
static int nr_connect(645,14094
static int nr_accept(745,16471
static int nr_getname(798,17454
int nr_rx_frame(822,18179
static int nr_sendmsg(977,22024
static int nr_recvmsg(1066,24182
static int nr_shutdown(1109,25149
static int nr_ioctl(1114,25226
static int nr_get_info(1176,26529
static struct net_proto_family nr_family_ops 1246,28397
static struct proto_ops nr_proto_ops 1252,28474
static struct notifier_block nr_dev_notifier 1273,28754
static struct proc_dir_entry proc_net_nr 1279,28850
static struct proc_dir_entry proc_net_nr_neigh 1285,28996
static struct proc_dir_entry proc_net_nr_nodes 1291,29166
static struct device *dev_nr;1299,29345
__initfunc(1301,29376
EXPORT_NO_SYMBOLS;1340,30356
int init_module(1348,30615
void cleanup_module(1355,30676

net/netrom/nr_dev.c,365
#define __NO_VERSION__23,794
int nr_rx_ip(61,1609
static int nr_rebuild_header(87,2068
static int nr_rebuild_header(130,2813
static int nr_header(137,2887
static int nr_set_mac_address(169,3629
static int nr_open(182,3911
static int nr_close(194,4083
static int nr_xmit(206,4255
static struct net_device_stats *nr_get_stats(241,4739
int nr_init(246,4855

net/netrom/nr_out.c,261
void nr_output(47,1330
static void nr_send_iframe(94,2567
void nr_send_nak_frame(110,2887
void nr_kick(134,3421
void nr_transmit_buffer(195,4732
void nr_establish_data_link(229,5529
void nr_enquiry_response(245,5824
void nr_check_iframes_acked(262,6227

net/netrom/nr_in.c,188
static int nr_queue_rx_frame(52,1673
static int nr_state1_machine(91,2682
static int nr_state2_machine(128,3627
static int nr_state3_machine(155,4136
int nr_process_rx_frame(282,7530

net/netrom/nr_subr.c,248
void nr_clear_queues(45,1212
void nr_frames_acked(67,1774
void nr_requeue_frames(88,2377
int nr_validate_nr(105,2754
int nr_in_rx_window(122,3062
void nr_write_internal(139,3437
void nr_transmit_refusal(232,5755
void nr_disconnect(280,6796

net/netrom/nr_route.c,761
static unsigned int nr_neigh_no 53,1599
static struct nr_node  *nr_node_list 55,1637
static struct nr_neigh *nr_neigh_list 56,1683
static int nr_add_node(64,1883
static void nr_remove_node(258,6929
static void nr_remove_neigh(287,7382
static int nr_del_node(324,8106
static int nr_add_neigh(374,9187
static int nr_del_neigh(423,10388
static int nr_dec_obs(447,11016
void nr_rt_device_down(502,11882
static struct device *nr_ax25_dev_get(547,12730
struct device *nr_dev_first(563,13013
struct device *nr_dev_get(578,13355
static ax25_digi *nr_call_to_digi(589,13622
int nr_rt_ioctl(611,14024
void nr_link_failed(671,15556
int nr_route_frame(695,16214
int nr_nodes_get_info(753,17830
int nr_neigh_get_info(803,18881
void nr_rt_free(859,20048

net/netrom/nr_timer.c,555
void nr_start_t1timer(48,1357
void nr_start_t2timer(59,1662
void nr_start_t4timer(70,1967
void nr_start_idletimer(81,2272
void nr_start_heartbeat(94,2634
void nr_stop_t1timer(105,2855
void nr_stop_t2timer(110,2937
void nr_stop_t4timer(115,3019
void nr_stop_idletimer(120,3101
void nr_stop_heartbeat(125,3187
int nr_t1timer_running(130,3256
static void nr_heartbeat_expiry(136,3393
static void nr_t2timer_expiry(169,4253
static void nr_t4timer_expiry(179,4492
static void nr_idletimer_expiry(186,4644
static void nr_t1timer_expiry(210,5078

net/netrom/sysctl_net_netrom.c,637
static int min_quality[17,365
static int min_obs[18,420
static int min_ttl[19,475
static int min_t1[20,530
static int max_t1[21,567
static int min_n2[22,606
static int min_t2[23,661
static int max_t2[24,698
static int min_t4[25,736
static int max_t4[26,773
static int min_window[27,813
static int min_idle[28,868
static int max_idle[29,905
static int min_route[30,946
static int min_fails[31,999
static struct ctl_table_header *nr_table_header;33,1054
static ctl_table nr_table[35,1104
static ctl_table nr_dir_table[72,3586
static ctl_table nr_root_table[77,3681
__initfunc(82,3775
void nr_unregister_sysctl(87,3882

net/netrom/nr_loopback.c,311
static struct sk_buff_head loopback_queue;26,656
static struct timer_list loopback_timer;27,699
void nr_loopback_init(31,783
static int nr_loopback_running(38,886
int nr_loopback_queue(43,998
static void nr_set_loopback_timer(63,1308
static void nr_loopback_timer(74,1531
void nr_loopback_clear(95,1966

net/netsyms.c,169
extern struct net_proto_family inet_family_ops;47,984
extern int tcp_tw_death_row_slot;57,1233
extern int sysctl_max_syn_backlog;95,2281
PSCHED_EXPORTLIST;492,13028

net/sysctl_net.c,367
extern ctl_table ipv4_table[20,441
extern ctl_table ipx_table[24,498
extern ctl_table core_table[27,536
extern ctl_table unix_table[30,587
extern ctl_table ether_table[34,644
extern ctl_table ether_table[], e802_table[34,644
extern ctl_table bridge_table[38,719
extern ctl_table ipv6_table[42,779
extern ctl_table tr_table[46,835
ctl_table net_table[49,872

net/ipv6/addrconf.c,2630
#define ACONF_DEBUG 59,1361
#define ADBG(ADBG62,1405
#define ADBG(ADBG64,1436
static struct inet6_ifaddr		*inet6_addr_lst[75,1681
static struct inet6_dev		*inet6_dev_lst[80,1774
static atomic_t			addr_list_lock 82,1832
static struct timer_list addr_chk_timer 86,1922
static __inline__ void addrconf_lock(108,2583
static __inline__ void addrconf_unlock(114,2680
struct ipv6_devconf ipv6_devconf 127,3108
static struct ipv6_devconf ipv6_devconf_dflt 141,3513
int ipv6_addr_type(155,3930
static struct inet6_dev * ipv6_add_dev(211,5419
static struct inet6_dev * ipv6_find_idev(250,6289
static void addrconf_forward_change(264,6552
struct inet6_dev * ipv6_get_idev(277,6799
ipv6_add_addr(292,7084
static void ipv6_del_addr(325,7781
int ipv6_get_saddr(379,8825
struct inet6_ifaddr * ipv6_get_lladdr(466,10474
struct inet6_ifaddr * ipv6_chk_addr(488,10926
void addrconf_dad_failure(512,11443
static void addrconf_join_solict(522,11672
static void addrconf_leave_solict(539,12050
static int ipv6_generate_eui64(558,12455
addrconf_prefix_route(580,12805
static void addrconf_add_mroute(606,13593
static void sit_route_add(621,14001
static void addrconf_add_lroute(638,14371
static struct inet6_dev *addrconf_add_dev(646,14572
void addrconf_prefix_rcv(661,14856
int addrconf_set_dstaddr(800,18102
static int inet6_addr_add(856,19173
static int inet6_addr_del(887,19783
int addrconf_add_ifaddr(922,20570
int addrconf_del_ifaddr(939,20896
static void sit_add_v4_addrs(956,21221
static void init_loopback(1019,22662
static void addrconf_add_linklocal(1046,23179
static void addrconf_dev_config(1060,23474
static void addrconf_sit_config(1096,24246
int addrconf_notify(1121,24721
static int addrconf_ifdown(1181,25826
static void addrconf_rs_timer(1248,27036
static void addrconf_dad_start(1297,28121
static void addrconf_dad_timer(1330,28883
static void addrconf_dad_completed(1365,29700
static int iface_proc_info(1403,30686
struct proc_dir_entry iface_proc_entry 1453,31578
void addrconf_verify(1466,31805
inet6_rtm_deladdr(1515,32764
inet6_rtm_newaddr(1537,33317
static int inet6_fill_ifaddr(1558,33860
static int inet6_dump_ifaddr(1600,35053
static void inet6_ifa_notify(1634,35772
static struct rtnetlink_link inet6_rtnetlink_table[1653,36296
static void ipv6_ifa_notify(1672,36726
int addrconf_sysctl_forward(1694,37228
static struct addrconf_sysctl_tableaddrconf_sysctl_table1727,37952
} addrconf_sysctl 1735,38189
static void addrconf_sysctl_register(1785,39891
static void addrconf_sysctl_unregister(1822,41048
__initfunc(1839,41301
void addrconf_cleanup(1880,42143

net/ipv6/icmp.c,728
#define __NO_VERSION__28,670
struct icmpv6_mib icmpv6_statistics;61,1363
struct socket *icmpv6_socket;67,1442
static struct inet6_protocol icmpv6_protocol 71,1530
struct icmpv6_msg icmpv6_msg82,1773
static int icmpv6_getfrag(96,1921
void icmpv6_param_prob(138,3047
static int is_ineligible(160,3649
int sysctl_icmpv6_time 178,4091
static inline int icmpv6_xrlim_allow(183,4169
static __inline__ int opt_unrec(228,5293
void icmpv6_send(239,5505
static void icmpv6_echo_reply(355,8136
static void icmpv6_notify(400,9242
int icmpv6_rcv(457,10587
int __init icmpv6_init(590,13966
void icmpv6_cleanup(623,14718
static struct icmp6_err icmp6_err630,14859
} tab_unreach[633,14907
int icmpv6_err_convert(641,15143

net/ipv6/af_inet6.c,831
static int unloadable 59,1394
extern struct proto_ops inet6_stream_ops;69,1689
extern struct proto_ops inet6_dgram_ops;70,1731
static int inet6_create(87,2250
static int inet6_bind(188,4449
static int inet6_release(258,6379
int inet6_destroy_sock(279,6933
static int inet6_getname(307,7414
static int inet6_ioctl(337,8211
struct proto_ops inet6_stream_ops 396,9492
struct proto_ops inet6_dgram_ops 417,9958
struct net_proto_family inet6_family_ops 438,10429
static struct proc_dir_entry proc_net_raw6 444,10525
static struct proc_dir_entry proc_net_tcp6 450,10678
static struct proc_dir_entry proc_net_udp6 456,10831
static struct proc_dir_entry proc_net_sockstat6 462,10984
static struct proc_dir_entry proc_net_snmp6 468,11155
int ipv6_unload(477,11357
int init_module(491,11664
void cleanup_module(581,13460

net/ipv6/ipv6_sockglue.c,387
struct ipv6_mib ipv6_statistics=51,1315
struct packet_type ipv6_packet_type 52,1354
static struct notifier_block ipv6_dev_notf 64,1549
struct ip6_ra_chain *ip6_ra_chain;70,1628
int ip6_ra_control(72,1664
int ipv6_setsockopt(112,2483
int ipv6_getsockopt(334,6912
__initfunc(404,8291
__initfunc(409,8370
void ipv6_packet_cleanup(415,8481
void ipv6_netdev_notif_cleanup(420,8554

net/ipv6/tcp_ipv6.c,1898
extern int sysctl_max_syn_backlog;45,1042
static struct tcp_func ipv6_mapped;59,1536
static struct tcp_func ipv6_specific;60,1572
static __inline__ int tcp_v6_hashfn(63,1677
static __inline__ int tcp_v6_sk_hashfn(72,1933
static int tcp_v6_verify_bind(86,2447
static void tcp_v6_hash(162,4637
static void tcp_v6_unhash(185,5159
static void tcp_v6_rehash(199,5400
static struct sock *tcp_v6_lookup_listener(230,6022
static inline struct sock *__tcp_v6_lookup(268,6952
#define tcp_v6_lookup(tcp_v6_lookup311,8317
static __inline__ u16 tcp_v6_check(313,8408
static __u32 tcp_v6_init_sequence(321,8630
static int tcp_v6_unique_address(339,9030
static __inline__ int tcp_v6_iif(367,9833
static int tcp_v6_connect(373,9975
static int tcp_v6_sendmsg(535,13580
void tcp_v6_err(571,14348
static void tcp_v6_send_synack(703,17439
static void tcp_v6_or_free(757,18930
static struct or_calltable or_ipv6 765,19092
static int ipv6_opt_accepted(771,19192
#define BACKLOG(BACKLOG785,19607
#define BACKLOGMAX(BACKLOGMAX786,19677
static int tcp_v6_conn_request(791,19830
static void tcp_v6_send_check(880,22284
static struct sock * tcp_v6_syn_recv_sock(891,22602
static void tcp_v6_send_reset(1034,26153
static struct open_request *tcp_v6_search_req(1104,27711
static void tcp_v6_rst_req(1131,28504
static inline struct sock *tcp_v6_hnd_req(1153,29092
static int tcp_v6_do_rcv(1182,29736
int tcp_v6_rcv(1309,32924
static int tcp_v6_rebuild_header(1392,34531
static struct sock * tcp_v6_get_sock(1429,35277
static void tcp_v6_xmit(1442,35643
static void v6_addr2sockaddr(1484,36565
static struct tcp_func ipv6_specific 1494,36878
static struct tcp_func ipv6_mapped 1513,37193
static int tcp_v6_init_sock(1531,37576
static int tcp_v6_destroy_sock(1563,38248
struct proto tcpv6_prot 1598,39063
static struct inet6_protocol tcpv6_protocol 1630,40007
__initfunc(1641,40251

net/ipv6/datagram.c,154
void ipv6_icmp_error(35,854
void ipv6_local_error(66,1621
int ipv6_recv_error(104,2478
int datagram_recv_ctl(184,4377
int datagram_send_ctl(225,5733

net/ipv6/exthdrs.c,1085
struct hdrtype_prochdrtype_proc49,1197
struct tlvtype_proctlvtype_proc63,1430
int ip6_tlvopt_unknown(75,1635
static int ip6_parse_tlv(101,2240
struct tlvtype_proc tlvprocdestopt_lst[153,3135
static u8 *ipv6_dest_opt(158,3244
static u8 *ipv6_nodata(178,3755
static u8* ipv6_routing_header(188,3944
ipv6_invert_rthdr(312,6928
static u8 *ipv6_auth_hdr(377,8827
struct hdrtype_proc hdrproc_lst[399,9423
u8 *ipv6_parse_exthdrs(411,9699
static int ipv6_hop_ra(436,10203
static int ipv6_hop_jumbo(450,10494
struct tlvtype_proc tlvprochopopt_lst[482,11177
u8 * ipv6_parse_hopopts(488,11312
u8 *ipv6_build_rthdr(506,11805
static u8 *ipv6_build_exthdr(530,12397
static u8 *ipv6_build_authhdr(540,12683
u8 *ipv6_build_nfrag_opts(551,12974
u8 *ipv6_build_frag_opts(587,13906
static void ipv6_push_rthdr(596,14186
static void ipv6_push_exthdr(621,14782
static void ipv6_push_authhdr(630,15039
void ipv6_push_nfrag_opts(639,15300
void ipv6_push_frag_opts(651,15648
ipv6_dup_options(660,15901
static __inline__ int ipv6_ext_hdr(687,16513
u8 *ipv6_skip_exthdr(742,18715

net/ipv6/ip6_fib.c,1918
#define RT6_DEBUG 35,816
#define BUG_TRAP(BUG_TRAP39,884
#define BUG_TRAP(BUG_TRAP41,1016
#define RT6_TRACE(RT6_TRACE45,1082
#define RT6_TRACE(RT6_TRACE47,1133
struct rt6_statistics	rt6_stats;50,1184
enum fib_walk_state_tfib_walk_state_t52,1218
	FWS_S,55,1270
	FWS_L,57,1285
	FWS_R,58,1293
	FWS_C,59,1301
	FWS_U60,1309
struct fib6_cleaner_tfib6_cleaner_t63,1320
#define FWS_INIT 71,1457
#define SUBTREE(SUBTREE72,1480
#define FWS_INIT 74,1522
#define SUBTREE(SUBTREE75,1545
static __u32	rt_sernum	88,1966
static struct timer_list ip6_fib_timer 90,1995
static struct fib6_walker_t fib6_walker_list 97,2079
#define FOR_WALKERS(FOR_WALKERS101,2172
static __inline__ u32 fib6_new_sernum(103,2269
static __inline__ int addr_match(122,2595
static __inline__ int addr_bit_set(152,3083
static __inline__ int addr_diff(164,3339
static __inline__ struct fib6_node * node_alloc(209,4160
static __inline__ void node_free(221,4396
static __inline__ void rt6_release(227,4493
static struct fib6_node * fib6_add_1(242,4786
static int fib6_add_rt2node(431,7957
static __inline__ void fib6_start_gc(490,9104
int fib6_add(506,9500
struct lookup_args lookup_args608,11514
static struct fib6_node * fib6_lookup_1(613,11627
struct fib6_node * fib6_lookup(675,12541
static struct fib6_node * fib6_locate_1(704,13102
struct fib6_node * fib6_locate(734,13646
static struct rt6_info * fib6_find_prefix(767,14235
static void fib6_repair_tree(789,14614
static void fib6_del_route(886,16831
int fib6_del(926,17645
int fib6_walk_continue(979,18960
int fib6_walk(1053,20262
static int fib6_clean_node(1067,20465
void fib6_clean_tree(1103,21238
static int fib6_prune_clone(1120,21548
static void fib6_prune_clones(1130,21715
static struct fib6_gc_argsfib6_gc_args1139,21870
} gc_args;1143,21928
static int fib6_age(1145,21940
void fib6_run_gc(1178,22610
void fib6_gc_cleanup(1199,23010

net/ipv6/raw.c,795
struct sock *raw_v6_htable[44,1009
static void raw_v6_hash(46,1057
static void raw_v6_unhash(60,1293
static void raw_v6_rehash(79,1586
static __inline__ int inet6_mc_check(102,1987
struct sock *raw_v6_lookup(115,2298
static int rawv6_bind(145,3052
void rawv6_err(184,4168
static inline int rawv6_rcv_skb(215,5002
int rawv6_rcv(235,5500
int rawv6_recvmsg(250,5760
struct rawv6_fakehdr rawv6_fakehdr302,6771
static int rawv6_getfrag(311,6904
static int rawv6_frag_cksum(319,7131
static int rawv6_sendmsg(360,7987
static int rawv6_seticmpfilter(469,10348
static int rawv6_geticmpfilter(486,10735
static int rawv6_setsockopt(510,11220
static int rawv6_getsockopt(553,12000
static void rawv6_close(600,12853
static int rawv6_init_sk(611,13104
struct proto rawv6_prot 616,13163

net/ipv6/ndisc.c,1394
#define ND_DEBUG 27,678
#define ND_PRINTK(ND_PRINTK29,698
#define ND_NOPRINTK(ND_NOPRINTK30,743
#define ND_PRINTK0 31,787
#define ND_PRINTK1 32,816
#define ND_PRINTK2 33,847
#define ND_PRINTK1 36,914
#define ND_PRINTK2 40,986
#define __NO_VERSION__43,1023
static struct socket *ndisc_socket;76,1699
static struct neigh_ops ndisc_generic_ops 85,2099
static struct neigh_ops ndisc_hh_ops 97,2285
static struct neigh_ops ndisc_direct_ops 110,2465
struct neigh_table nd_tbl 122,2613
#define NDISC_OPT_SPACE(NDISC_OPT_SPACE137,2964
static u8 *ndisc_fill_option(139,3011
int ndisc_mc_map(153,3309
static int ndisc_constructor(170,3664
static int pndisc_constructor(218,4970
static void pndisc_destructor(237,5432
ndisc_build_ll_hdr(258,5888
void ndisc_send_na(295,6665
void ndisc_send_ns(358,8332
void ndisc_send_rs(421,9891
static u8 * ndisc_find_option(473,11160
static void ndisc_error_report(494,11506
static void ndisc_solicit(504,11704
static void ndisc_update(536,12646
static void ndisc_router_discovery(542,12839
static void ndisc_redirect_rcv(706,16389
void ndisc_send_redirect(771,18079
ndisc_recv_ns(889,20718
static __inline__ int ndisc_recv_na(900,21020
static void pndisc_redo(914,21476
int ndisc_rcv(920,21570
int ndisc_get_info(1078,25541
struct proc_dir_entry ndisc_proc_entry 1144,27169
__initfunc(1156,27366
void ndisc_cleanup(1205,28473

net/ipv6/udp.c,795
struct udp_mib udp_stats_in6;47,1086
static int udp_v6_verify_bind(52,1256
static void udp_v6_hash(93,2278
static void udp_v6_unhash(108,2508
static void udp_v6_rehash(127,2794
static struct sock *udp_v6_lookup(150,3178
int udpv6_connect(199,4205
static void udpv6_close(312,6629
int udpv6_recvmsg(330,6983
void udpv6_err(421,9420
static inline int udpv6_queue_rcv_skb(456,10230
static __inline__ int inet6_mc_check(480,10887
static struct sock *udp_v6_mcast_next(492,11140
static void udpv6_mcast_deliver(530,12049
int udpv6_rcv(564,12789
struct udpv6fakehdr udpv6fakehdr669,15092
static int udpv6_getfrag(682,15240
static int udpv6_sendmsg(730,16241
static struct inet6_protocol udpv6_protocol 837,18843
struct proto udpv6_prot 849,19087
void __init udpv6_init(881,20000

net/ipv6/ip6_input.c,165
int ipv6_rcv(41,971
static __inline__ int icmpv6_filter(96,2129
static struct sock * ipv6_raw_deliver(111,2513
int ip6_input(162,3432
int ip6_mc_input(236,4970

net/ipv6/sit.c,1209
#define __NO_VERSION__17,526
#define HASH_SIZE 53,1307
#define HASH(HASH54,1329
static struct device ipip6_fb_tunnel_dev 59,1476
static struct ip_tunnel ipip6_fb_tunnel 63,1595
static struct ip_tunnel *tunnels_r_l[67,1711
static struct ip_tunnel *tunnels_r[68,1760
static struct ip_tunnel *tunnels_l[69,1807
static struct ip_tunnel *tunnels_wc[70,1854
static struct ip_tunnel **tunnels[71,1894
static struct ip_tunnel * ipip6_tunnel_lookup(73,1985
static struct ip_tunnel ** ipip6_bucket(97,2629
static void ipip6_tunnel_unlink(115,2924
static void ipip6_tunnel_link(128,3135
struct ip_tunnel * ipip6_tunnel_locate(137,3268
static void ipip6_tunnel_destroy(198,4558
void ipip6_err(211,4807
int ipip6_rcv(354,8239
static int ipip6_tunnel_xmit(387,9066
ipip6_tunnel_ioctl 547,12710
static struct net_device_stats *ipip6_tunnel_get_stats(657,15194
static int ipip6_tunnel_change_mtu(662,15323
static void ipip6_tunnel_init_gen(670,15518
static int ipip6_tunnel_init(692,16162
static int ipip6_fb_tunnel_open(727,16944
static int ipip6_fb_tunnel_close(733,17032
__initfunc(740,17128
static struct inet_protocol sit_protocol 760,17503
void sit_cleanup(771,17628
__initfunc(778,17743

net/ipv6/reassembly.c,690
int sysctl_ip6frag_high_thresh 44,1031
int sysctl_ip6frag_low_thresh 45,1074
int sysctl_ip6frag_time 46,1116
atomic_t ip6_frag_mem 48,1162
struct ipv6_frag ipv6_frag50,1203
struct frag_queue frag_queue64,1373
#define FIRST_IN	77,1696
#define LAST_IN	78,1716
static struct frag_queue ipv6_frag_queue 83,1776
extern __inline__ void frag_kfree_skb(91,1947
extern __inline__ void frag_kfree_s(97,2071
extern __inline__ void *frag_kmalloc(103,2179
static void frag_prune(127,2717
u8* ipv6_reassembly(143,3078
static void fq_free(186,4074
static void frag_expire(207,4428
static void create_frag_entry(246,5219
static void reasm_queue(298,6430
static u8* reasm_frag(398,8773

net/ipv6/mcast.c,989
#define __NO_VERSION__18,512
#define MCAST_DEBUG 47,1149
#define MDBG(MDBG50,1193
#define MDBG(MDBG52,1224
static struct socket *igmp6_socket;55,1248
#define IGMP6_UNSOLICITED_IVAL	61,1437
static struct ifmcaddr6		*inet6_mcast_lst[66,1531
int ipv6_sock_mc_join(72,1633
int ipv6_sock_mc_drop(126,2699
void ipv6_sock_mc_close(149,3280
static int igmp6_group_added(165,3652
static int igmp6_group_dropped(180,3976
int ipv6_dev_mc_inc(199,4361
static void ipv6_mca_remove(247,5286
int ipv6_dev_mc_dec(269,5671
int ipv6_chk_mcast_addr(297,6216
static void igmp6_group_queried(316,6559
int igmp6_event_query(339,7111
int igmp6_event_report(384,8109
void igmp6_send(427,9033
static void igmp6_join_group(496,10908
static void igmp6_leave_group(520,11467
void igmp6_timer_handler(538,11845
void ipv6_mc_down(549,12104
void ipv6_mc_up(567,12423
void ipv6_mc_destroy_dev(587,12807
static int igmp6_read_proc(610,13223
__initfunc(660,14235
void igmp6_cleanup(701,15166

net/ipv6/protocol.c,211
struct inet6_protocol *inet6_protocol_base 34,948
struct inet6_protocol *inet6_protos[35,999
struct inet6_protocol *inet6_get_protocol(41,1068
void inet6_add_protocol(54,1363
int inet6_del_protocol(82,1884

net/ipv6/sysctl_net_ipv6.c,362
extern ctl_table ipv6_route_table[14,263
ctl_table ipv6_table[18,323
static struct ctl_table_header *ipv6_sysctl_header;24,434
static struct ctl_table ipv6_root_table[25,486
static struct ctl_table ipv6_net_table[26,529
ctl_table ipv6_root_table[29,573
ctl_table ipv6_net_table[34,671
void ipv6_sysctl_register(39,766
void ipv6_sysctl_unregister(44,868

net/ipv6/proc.c,355
static int get__netinfo6(30,1067
int tcp6_get_info(151,4615
int udp6_get_info(156,4773
int raw6_get_info(161,4931
int afinet6_get_info(166,5089
struct snmp6_itemsnmp6_item183,5621
} snmp6_list[187,5675
#define SNMP6_GEN(SNMP6_GEN189,5752
#define SNMP6_GEN(SNMP6_GEN223,6761
#define SNMP6_GEN(SNMP6_GEN253,7788
int afinet6_get_snmp(262,7962

net/ipv6/ip6_fw.c,818
static unsigned long ip6_fw_rule_cnt;33,812
static struct ip6_fw_rule ip6_fw_rule_list 34,850
struct flow_rule_ops ip6_fw_ops 43,1017
static struct rt6_info ip6_fw_null_entry 48,1073
static struct fib6_node ip6_fw_fib 56,1348
static void ip6_rule_add(62,1465
static void ip6_rule_del(76,1714
static __inline__ struct ip6_fw_rule * ip6_fwrule_alloc(89,1937
static __inline__ void ip6_fwrule_free(103,2184
static __inline__ int port_match(108,2265
static int ip6_fw_accept_trans(116,2410
static int ip6_fw_accept(201,3925
static struct dst_entry * ip6_fw_dup(230,4444
int ip6_fw_reject(257,5011
int ip6_fw_discard(273,5288
int ip6_fw_msg_add(280,5415
static int ip6_fw_msgrcv(338,6559
static void ip6_fw_destroy(368,7058
#define ip6_fw_init 374,7170
__initfunc(377,7210
void module_cleanup(385,7341

net/ipv6/route.c,3333
#define RT6_DEBUG 52,1162
#define RDBG(RDBG55,1202
#define RT6_TRACE(RT6_TRACE56,1227
#define RDBG(RDBG58,1278
#define RT6_TRACE(RT6_TRACE59,1294
#define BUG_TRAP(BUG_TRAP63,1364
#define BUG_TRAP(BUG_TRAP65,1496
int ip6_rt_max_size 69,1544
int ip6_rt_gc_min_interval 70,1572
int ip6_rt_gc_timeout 71,1607
int ip6_rt_gc_interval 72,1638
int ip6_rt_gc_elasticity 73,1670
int ip6_rt_mtu_expires 74,1700
struct dst_ops ip6_dst_ops 86,2164
struct rt6_info ip6_null_entry 99,2351
struct fib6_node ip6_routing_table 112,2707
int	ip6_rt_policy 119,2857
struct pol_chain *rt6_pol_list 121,2881
#define ip6_rt_policy 133,3225
static __inline__ struct rt6_info *rt6_device_match(140,3283
static struct rt6_info *rt6_dflt_pointer 168,3797
static struct rt6_info *rt6_best_dflt(170,3847
struct rt6_info *rt6_lookup(244,5217
static int rt6_ins(264,5682
static struct rt6_info *rt6_cow(275,5831
static __inline__ struct rt6_info *rt6_flow_lookup_in(317,6654
static __inline__ struct rt6_info *rt6_flow_lookup_out(332,6990
#define BACKTRACK(BACKTRACK348,7333
void ip6_route_input(361,7588
struct dst_entry * ip6_route_output(422,8836
static struct dst_entry *ip6_dst_check(494,10300
static struct dst_entry *ip6_dst_reroute(507,10548
static struct dst_entry *ip6_negative_advice(517,10766
static void ip6_link_failure(529,10989
static int ip6_dst_gc(545,11391
static void ipv6_wash_prefix(573,12033
static int ipv6_get_mtu(584,12250
static int ipv6_get_hoplimit(595,12418
int ip6_route_add(610,12617
int ip6_del_rt(743,15909
int ip6_route_del(755,16060
static int rt6_msgrcv(794,16889
static void rt6_sndrtmsg(830,17508
void rt6_sndmsg(845,17823
void rt6_redirect(889,18711
void rt6_pmtu_discovery(999,21452
static struct rt6_info * ip6_rt_copy(1071,23250
struct rt6_info *rt6_get_dflt_router(1102,24077
struct rt6_info *rt6_add_dflt_router(1121,24455
void rt6_purge_dflt_routers(1138,24911
int ipv6_route_ioctl(1159,25254
int ip6_pkt_discard(1202,25994
int ip6_rt_addr_add(1214,26200
int ip6_rt_addr_del(1248,27051
static int rt6_flow_match_in(1265,27354
static int rt6_flow_match_out(1295,27849
static struct rt6_info *rt6_flow_lookup(1314,28131
static int fib6_ifdown(1378,29298
void rt6_ifdown(1388,29510
struct rt6_mtu_change_argrt6_mtu_change_arg1393,29610
static int rt6_mtu_change_route(1399,29678
void rt6_mtu_change(1414,30105
static int inet6_rtm_to_rtmsg(1425,30323
int inet6_rtm_delroute(1465,31583
int inet6_rtm_newroute(1475,31817
struct rt6_rtnl_dump_argrt6_rtnl_dump_arg1485,32051
static int rt6_fill_node(1491,32134
static int rt6_dump_route(1584,34980
static int fib6_dump_node(1592,35244
static int fib6_dump_done(1610,35555
int inet6_dump_fib(1628,35869
int inet6_rtm_getroute(1678,36959
void inet6_rt_notify(1740,38440
#define RT6_INFO_LEN 1767,38999
struct rt6_proc_argrt6_proc_arg1769,39057
static int rt6_info_route(1778,39145
static int rt6_proc_info(1832,40448
extern struct rt6_statistics rt6_stats;1858,40930
static int rt6_proc_stats(1860,40971
static struct proc_dir_entry proc_rt6_info 1883,41450
static struct proc_dir_entry proc_rt6_stats 1889,41609
static int flush_delay;1899,41825
int ipv6_sysctl_rtcache_flush(1902,41857
ctl_table ipv6_route_table[1917,42203
__initfunc(1948,43308
void ip6_route_cleanup(1960,43547

net/ipv6/ip6_output.c,335
static u32	ipv6_fragmentation_id 46,1107
int ip6_output(48,1146
int ip6_xmit(101,2418
int ip6_nd_hdr(184,4508
static struct ipv6hdr * ip6_bld_1(214,5213
static __inline__ u8 * ipv6_build_fraghdr(236,5825
static int ip6_frag_xmit(252,6233
int ip6_build_xmit(426,10233
int ip6_call_ra_chain(611,14842
int ip6_forward(635,15280

net/bridge/br.c,4245
#define min(min77,2573
static unsigned char bridge_ula[147,5830
static Bridge_data     bridge_info;148,5914
Port_data       port_info[149,5969
struct fdb	*newfdb[152,6088
int allocated_fdb_cnt 153,6119
int max_mcast_per_period 156,6189
int mcast_hold_time	157,6238
static Config_bpdu	config_bpdu;160,6351
static Tcn_bpdu		tcn_bpdu;161,6383
static unsigned char	port_priority[162,6410
static unsigned char	user_port_state[163,6457
static Timer    hello_timer;165,6507
static Timer    tcn_timer;166,6557
static Timer    topology_change_timer;167,6605
static Timer    message_age_timer[168,6664
static Timer    forward_delay_timer[169,6729
static Timer    hold_timer[170,6796
unsigned int fdb_aging_time 173,6902
struct br_stat br_stats;175,6947
#define br_stats_cnt 176,6972
static struct timer_list tl;178,7015
static struct notifier_block br_dev_notifier=185,7234
#define BR_PROTOCOL_HASH(BR_PROTOCOL_HASH199,7593
int br_protocol_ok(203,7698
static int br_add_exempt_protocol(230,8328
static int br_set_policy(246,8823
static void transmit_config(267,9421
static int root_bridge(312,10919
static int supersedes_port_info(318,11057
static void record_config_information(355,12121
static void record_config_timeout_values(364,12542
static void config_bpdu_generation(372,12830
static int designated_port(385,13180
static void reply(397,13422
static void transmit_tcn(402,13526
static void configuration_update(411,13741
static void root_selection(419,13929
static void designated_port_selection(503,16528
static void become_designated_port(542,17612
static void port_state_selection(555,18031
static void make_forwarding(588,19082
static void topology_change_detection(596,19329
static void topology_change_acknowledged(613,19896
static void acknowledge_topology_change(623,20173
static void make_blocking(629,20342
static void set_port_state(649,20820
static void received_config_bpdu(654,20911
static void received_tcn_bpdu(697,22195
static void hello_timer_expiry(713,22640
static void message_age_timer_expiry(719,22775
static void forward_delay_timer_expiry(749,23677
static int designated_for_some_port(768,24188
static void tcn_timer_expiry(785,24519
static void topology_change_timer_expiry(791,24661
static void hold_timer_expiry(798,24838
int br_tree_get_info(808,25156
struct proc_dir_entry proc_net_bridge=833,25725
__initfunc(840,25886
static inline unsigned short make_port_id(901,27876
static void br_init_port(906,27986
static void enable_port(918,28458
static void disable_port(924,28603
static void set_bridge_priority(949,29521
static void set_port_priority(978,30493
static void set_path_cost(1001,31113
static void br_tick(1009,31400
static void start_hello_timer(1045,32181
static void stop_hello_timer(1051,32274
static int hello_timer_expired(1056,32343
static void start_tcn_timer(1066,32532
static void stop_tcn_timer(1072,32619
static int tcn_timer_expired(1077,32684
static void start_topology_change_timer(1088,32873
static void stop_topology_change_timer(1094,32996
static int topology_change_timer_expired(1099,33085
static void start_message_age_timer(1110,33327
static void stop_message_age_timer(1116,33501
static int message_age_timer_expired(1121,33598
static void start_forward_delay_timer(1131,33842
static void stop_forward_delay_timer(1137,33984
static int forward_delay_timer_expired(1142,34085
static void start_hold_timer(1152,34343
static void stop_hold_timer(1158,34458
static int hold_timer_expired(1163,34541
static struct sk_buff *alloc_bridge_skb(1175,34765
static int send_config_bpdu(1236,36475
static int send_tcn_bpdu(1276,37516
static int br_device_event(1298,37933
int br_receive_frame(1382,40272
int br_tx_frame(1480,42645
static void br_add_local_mac(1531,43820
static inline int mcast_quench(1562,44608
static int br_learn(1581,45023
void requeue_fdb(1632,46360
static int br_drop(1666,46966
static int br_dev_drop(1676,47090
static int br_forward(1691,47470
static int br_flood(1811,50299
static int find_port(1845,51083
static int br_port_cost(1860,51329
static void br_bpdu(1875,51725
struct fdb_info *get_fdb_info(1918,53044
int br_ioctl(1961,53960
static int br_cmp(2135,59184

net/bridge/br_tree.c,752
#define _DEBUG_AVL13,244
static struct fdb fdb_head;27,758
static struct fdb *fhp 28,786
static struct fdb **fhpp 29,822
static int fdb_inited 30,855
#define avl_br_empty	49,1352
#define avl_maxheight	53,1471
#define heightof(heightof54,1497
static int fdb_init(63,1958
struct fdb *br_avl_find_addr(72,2133
static void br_avl_rebalance 127,3354
struct fdb *br_avl_insert 214,7268
static int br_avl_remove 286,9363
static void printk_avl 341,11139
static char *avl_check_point 365,11615
static void avl_checkheights 368,11707
static void avl_checkleft 387,12238
static void avl_checkright 399,12620
static void avl_checkorder 411,13004
static int addr_cmp(423,13302
void sprintf_avl 435,13535
void br_avl_delete_by_port(481,14550

net/bridge/sysctl_net_bridge.c,31
ctl_table bridge_table[11,242

net/econet/econet.c,1521
static struct proto_ops econet_ops;48,1192
static struct sock *econet_sklist;49,1228
static spinlock_t aun_queue_lock;51,1264
static struct socket *udpsock;54,1327
#define AUN_PORT	55,1358
struct aunhdraunhdr57,1383
static unsigned long aun_seq 66,1538
static struct sk_buff_head aun_queue;69,1623
static struct timer_list ab_cleanup_timer;70,1661
struct ec_cbec_cb75,1770
struct ec_deviceec_device90,2102
static struct ec_device *edevlist 97,2284
static spinlock_t edevlist_lock;99,2327
static __inline__ struct ec_device *__edev_get(105,2420
static struct ec_device *edev_get(120,2696
static int econet_recvmsg(135,3031
static int econet_bind(201,4448
static void tx_result(227,5028
static void ec_tx_done(256,5712
static int econet_sendmsg(268,6007
static int econet_getname(468,10660
static void econet_destroy_timer(486,11100
static int econet_release(505,11466
static int econet_create(547,12237
static int ec_dev_ioctl(590,13059
static int econet_ioctl(659,14611
static struct net_proto_family econet_family_ops 720,15881
static struct proto_ops econet_ops 725,15965
static struct sock *ec_listening_socket(750,16364
static void aun_send_response(774,16851
static void aun_incoming(815,17746
static void aun_tx_ack(874,19304
static void aun_data_available(906,20032
static void ab_cleanup(960,21221
__initfunc(984,21784
static int econet_notifier(1030,22792
struct notifier_block econet_netdev_notifier=1061,23477
void cleanup_module(1068,23570
int init_module(1080,23816

net/lapb/lapb_iface.c,799
static lapb_cb *volatile lapb_list 43,1116
static void lapb_free_cb(49,1258
static void lapb_remove_cb(59,1396
static void lapb_insert_cb(88,1823
static lapb_cb *lapb_tokentostruct(104,2099
static lapb_cb *lapb_create_cb(118,2331
int lapb_register(145,2886
int lapb_unregister(165,3233
int lapb_getparms(184,3505
int lapb_setparms(212,4205
int lapb_connect_request(248,4906
int lapb_disconnect_request(274,5343
int lapb_data_request(318,6334
int lapb_data_received(335,6659
void lapb_connect_confirmation(347,6859
void lapb_connect_indication(353,7036
void lapb_disconnect_confirmation(359,7207
void lapb_disconnect_indication(365,7393
int lapb_data_indication(371,7573
int lapb_data_transmit(383,7788
__initfunc(404,8266
int init_module(413,8548
void cleanup_module(420,8611

net/lapb/lapb_in.c,242
static void lapb_state0_machine(44,1158
static void lapb_state1_machine(124,3458
static void lapb_state2_machine(216,5968
static void lapb_state3_machine(288,7926
static void lapb_state4_machine(533,15011
void lapb_data_input(604,16961

net/lapb/lapb_out.c,292
static void lapb_send_iframe(43,1167
void lapb_kick(73,1839
void lapb_transmit_buffer(124,3008
void lapb_establish_data_link(164,3905
void lapb_enquiry_response(185,4445
void lapb_timeout_response(196,4721
void lapb_check_iframes_acked(207,4998
void lapb_check_need_response(221,5271

net/lapb/lapb_timer.c,246
void lapb_start_t1timer(42,1112
void lapb_start_t2timer(53,1355
void lapb_stop_t1timer(64,1598
void lapb_stop_t2timer(69,1669
int lapb_t1timer_running(74,1740
static void lapb_t2timer_expiry(79,1853
static void lapb_t1timer_expiry(89,2084

net/lapb/lapb_subr.c,222
void lapb_clear_queues(41,1019
void lapb_frames_acked(57,1399
void lapb_requeue_frames(76,1835
int lapb_validate_nr(98,2403
void lapb_decode(119,2833
void lapb_send_control(205,5672
void lapb_transmit_frmr(241,6569

net/x25/af_x25.c,1849
int sysctl_x25_restart_request_timeout 53,1513
int sysctl_x25_call_request_timeout 54,1571
int sysctl_x25_reset_request_timeout 55,1629
int sysctl_x25_clear_request_timeout 56,1687
int sysctl_x25_ack_holdback_timeout 57,1745
static struct sock *volatile x25_list 59,1803
static struct proto_ops x25_proto_ops;61,1850
static x25_address null_x25_address 63,1890
int x25_addr_ntoa(65,1950
int x25_addr_aton(102,2695
static void x25_remove_socket(142,3508
static void x25_kill_by_device(172,3941
static int x25_device_event(185,4222
static void x25_insert_socket(212,4769
static struct sock *x25_find_listener(229,5018
struct sock *x25_find_socket(253,5521
unsigned int x25_new_lci(275,5920
static void x25_destroy_timer(295,6208
void x25_destroy_socket(306,6575
static int x25_setsockopt(350,7604
static int x25_getsockopt(375,8031
static int x25_listen(408,8559
static struct sock *x25_alloc_socket(422,8848
static int x25_create(452,9417
static struct sock *x25_make_new(488,10352
static int x25_release(526,11209
static int x25_bind(564,11984
static int x25_connect(589,12470
static int x25_accept(678,14712
static int x25_getname(732,15725
int x25_rx_call_request(751,16191
static int x25_sendmsg(847,18257
static int x25_recvmsg(982,21737
static int x25_shutdown(1053,23374
static int x25_ioctl(1058,23452
static int x25_get_info(1180,26660
struct net_proto_family x25_family_ops 1238,28177
static struct proto_ops x25_proto_ops 1243,28245
static struct packet_type x25_packet_type 1264,28535
struct notifier_block x25_dev_notifier 1273,28675
void x25_kill_by_neigh(1278,28744
static struct proc_dir_entry proc_net_x25 1289,28967
static struct proc_dir_entry proc_net_x25_routes 1295,29117
__initfunc(1303,29305
EXPORT_NO_SYMBOLS;1325,29769
int init_module(1330,29918
void cleanup_module(1350,30297

net/x25/sysctl_net_x25.c,287
static int min_timer[16,361
static int max_timer[17,398
static struct ctl_table_header *x25_table_header;19,436
static ctl_table x25_table[21,487
static ctl_table x25_dir_table[40,1608
static ctl_table x25_root_table[45,1699
__initfunc(50,1795
void x25_unregister_sysctl(55,1905

net/x25/x25_dev.c,207
static int x25_receive_data(50,1399
int x25_lapb_receive_frame(98,2377
int x25_llc_receive_frame(145,3257
void x25_establish_link(163,3654
void x25_terminate_link(192,4177
void x25_send_frame(221,4700

net/x25/x25_link.c,689
static struct x25_neigh *x25_neigh_list 45,1270
static void x25_start_t20timer(52,1409
static void x25_t20timer_expiry(63,1682
static void x25_stop_t20timer(72,1862
void x25_link_control(80,2010
void x25_transmit_restart_request(114,2873
void x25_transmit_restart_confirmation(143,3441
void x25_transmit_diagnostic(170,3973
void x25_transmit_clear_request(199,4579
void x25_transmit_link(225,5152
void x25_link_established(251,5731
void x25_link_terminated(270,6124
void x25_link_device_up(280,6337
static void x25_remove_neigh(303,6866
void x25_link_device_down(340,7526
struct x25_neigh *x25_get_neigh(356,7831
int x25_subscr_ioctl(370,8135
void x25_link_free(412,9156

net/x25/x25_in.c,233
static int x25_queue_rx_frame(45,1295
static int x25_state1_machine(94,2616
static int x25_state2_machine(143,3958
static int x25_state3_machine(168,4492
static int x25_state4_machine(298,8277
int x25_process_rx_frame(328,9007

net/x25/x25_timer.c,352
void x25_start_heartbeat(47,1357
void x25_stop_heartbeat(58,1580
void x25_start_t2timer(63,1650
void x25_start_t21timer(74,1951
void x25_start_t22timer(85,2254
void x25_start_t23timer(96,2557
void x25_stop_timer(107,2860
unsigned long x25_display_timer(112,2940
static void x25_heartbeat_expiry(121,3146
static void x25_timer_expiry(159,4152

net/x25/x25_route.c,363
static struct x25_route *x25_route_list 48,1343
static int x25_add_route(53,1419
static void x25_remove_route(79,2172
static int x25_del_route(108,2649
void x25_route_device_down(125,3110
struct device *x25_dev_get(141,3438
struct device *x25_get_route(161,3794
int x25_route_ioctl(182,4247
int x25_routes_get_info(214,5095
void x25_route_free(257,5933

net/x25/x25_out.c,164
static int x25_pacsize_to_bytes(43,1217
void x25_output(59,1438
static void x25_send_iframe(111,2795
void x25_kick(127,3226
void x25_enquiry_response(201,5022

net/x25/x25_subr.c,214
void x25_clear_queues(46,1290
void x25_frames_acked(72,1963
void x25_requeue_frames(91,2474
int x25_validate_nr(113,3023
void x25_write_internal(134,3474
int x25_decode(265,6854
void x25_disconnect(331,8561

net/x25/x25_facilities.c,145
int x25_parse_facilities(46,1284
int x25_create_facilities(109,2754
int x25_negotiate_facilities(147,3846
void x25_limit_facilities(207,5458

net/rose/af_rose.c,2316
int rose_ndevs 60,1708
int sysctl_rose_restart_request_timeout 62,1730
int sysctl_rose_call_request_timeout 63,1789
int sysctl_rose_reset_request_timeout 64,1848
int sysctl_rose_clear_request_timeout 65,1907
int sysctl_rose_no_activity_timeout 66,1966
int sysctl_rose_ack_hold_back_timeout 67,2027
int sysctl_rose_routing_control 68,2086
int sysctl_rose_link_fail_timeout 69,2150
int sysctl_rose_maximum_vcs 70,2219
int sysctl_rose_window_size 71,2281
static struct sock *volatile rose_list 73,2350
static struct proto_ops rose_proto_ops;75,2398
ax25_address rose_callsign;77,2439
char *rose2asc(82,2512
int rosecmp(104,3048
int rosecmpm(118,3287
static void rose_free_sock(140,3671
static struct sock *rose_alloc_sock(147,3755
static void rose_remove_socket(173,4182
void rose_kill_by_neigh(203,4660
static void rose_kill_by_device(219,5023
static int rose_device_event(235,5367
static void rose_insert_socket(258,5803
static struct sock *rose_find_listener(274,6055
struct sock *rose_find_socket(302,6828
unsigned int rose_new_lci(324,7232
static void rose_destroy_timer(349,7774
void rose_destroy_socket(360,8143
static int rose_setsockopt(403,9193
static int rose_getsockopt(462,10231
static int rose_listen(519,11166
static int rose_create(536,11635
static struct sock *rose_make_new(574,12456
static int rose_release(622,13546
static int rose_bind(667,14504
static int rose_connect(725,16065
static int rose_accept(845,19442
static int rose_getname(899,20446
int rose_rx_call_request(949,22264
static int rose_sendmsg(1028,24700
#define ROSE_PACLEN 1136,27773
static int rose_recvmsg(1190,28953
static int rose_shutdown(1254,30732
static int rose_ioctl(1259,30811
static int rose_get_info(1367,33648
static struct net_proto_family rose_family_ops 1437,35513
static struct proto_ops rose_proto_ops 1442,35591
static struct notifier_block rose_dev_notifier 1463,35895
static struct proc_dir_entry proc_net_rose 1469,35995
static struct proc_dir_entry proc_net_rose_neigh 1475,36147
static struct proc_dir_entry proc_net_rose_nodes 1481,36324
static struct proc_dir_entry proc_net_rose_routes 1487,36501
static struct device *dev_rose;1495,36691
__initfunc(1497,36724
EXPORT_NO_SYMBOLS;1540,37854
int init_module(1548,38097
void cleanup_module(1555,38160

net/rose/rose_dev.c,344
#define __NO_VERSION__19,547
int rose_rx_ip(55,1337
static int rose_header(83,1845
static int rose_rebuild_header(100,2193
static int rose_set_mac_address(133,2807
static int rose_open(146,3084
static int rose_close(158,3254
static int rose_xmit(170,3425
static struct net_device_stats *rose_get_stats(205,3910
int rose_init(210,4028

net/rose/rose_link.c,595
void rose_start_ftimer(45,1200
void rose_start_t0timer(56,1474
void rose_stop_ftimer(67,1761
void rose_stop_t0timer(72,1842
int rose_ftimer_running(77,1925
int rose_t0timer_running(82,2048
static void rose_ftimer_expiry(87,2174
static void rose_t0timer_expiry(91,2231
static int rose_send_frame(107,2597
static int rose_link_up(126,3136
void rose_link_rx_restart(143,3539
void rose_transmit_restart_request(179,4469
void rose_transmit_restart_confirmation(208,5090
void rose_transmit_diagnostic(235,5668
void rose_transmit_clear_request(264,6312
void rose_transmit_link(290,6955

net/rose/rose_in.c,239
static int rose_state1_machine(55,1722
static int rose_state2_machine(91,2680
static int rose_state3_machine(118,3305
static int rose_state4_machine(227,6674
static int rose_state5_machine(263,7636
int rose_process_rx_frame(275,7968

net/rose/rose_timer.c,432
void rose_start_heartbeat(46,1252
void rose_start_t1timer(57,1477
void rose_start_t2timer(68,1786
void rose_start_t3timer(79,2095
void rose_start_hbtimer(90,2404
void rose_start_idletimer(101,2713
void rose_stop_heartbeat(114,3093
void rose_stop_timer(119,3164
void rose_stop_idletimer(124,3246
static void rose_heartbeat_expiry(129,3336
static void rose_timer_expiry(163,4257
static void rose_idletimer_expiry(190,4909

net/rose/rose_out.c,99
static void rose_send_iframe(46,1255
void rose_kick(59,1550
void rose_enquiry_response(121,2973

net/rose/rose_route.c,1195
static unsigned int rose_neigh_no 52,1461
static struct rose_node  *rose_node_list 54,1501
static struct rose_neigh *rose_neigh_list 55,1551
static struct rose_route *rose_route_list 56,1601
struct rose_neigh *rose_loopback_neigh 58,1652
static int rose_add_node(66,1857
static void rose_remove_node(192,5221
static void rose_remove_neigh(221,5699
static void rose_remove_route(260,6487
static int rose_del_node(298,7229
int rose_add_loopback_neigh(350,8501
int rose_add_loopback_node(384,9406
void rose_del_loopback_node(418,10268
void rose_rt_device_down(436,10721
void rose_route_device_down(480,11525
static int rose_clear_routes(498,11968
struct device *rose_ax25_dev_get(526,12517
struct device *rose_dev_first(542,12794
struct device *rose_dev_get(557,13132
struct rose_route *rose_route_free_lci(568,13399
struct rose_neigh *rose_get_neigh(583,13823
int rose_rt_ioctl(615,14494
static void rose_del_route_by_neigh(651,15390
void rose_link_failed(697,16719
void rose_link_device_down(717,17200
int rose_route_frame(732,17548
int rose_nodes_get_info(932,23431
int rose_neigh_get_info(984,24496
int rose_routes_get_info(1039,25876
void rose_rt_free(1098,27234

net/rose/rose_subr.c,373
void rose_clear_queues(45,1202
void rose_frames_acked(61,1595
void rose_requeue_frames(77,2021
int rose_validate_nr(99,2573
void rose_write_internal(117,2936
int rose_decode(216,5233
static int rose_parse_national(254,6059
static int rose_parse_ccitt(323,7812
int rose_parse_facilities(372,8780
int rose_create_facilities(412,9622
void rose_disconnect(506,11867

net/rose/sysctl_net_rose.c,497
static int min_timer[14,305
static int max_timer[15,341
static int min_idle[16,379
static int max_idle[17,415
static int min_route[18,455
static int min_ftimer[19,505
static int max_ftimer[20,542
static int min_maxvcs[21,580
static int min_window[22,633
static struct ctl_table_header *rose_table_header;24,685
static ctl_table rose_table[26,737
static ctl_table rose_dir_table[60,2858
static ctl_table rose_root_table[65,2953
__initfunc(70,3051
void rose_unregister_sysctl(75,3164

net/rose/rose_loopback.c,325
static struct sk_buff_head loopback_queue;26,666
static struct timer_list loopback_timer;27,709
void rose_loopback_init(31,795
static int rose_loopback_running(38,900
int rose_loopback_queue(43,1014
static void rose_set_loopback_timer(63,1358
static void rose_loopback_timer(74,1585
void rose_loopback_clear(112,2465

net/wanrouter/wanmain.c,817
#define min(min53,2591
#define max(max56,2647
static char fullname[91,3428
static char copyright[92,3468
static char modname[93,3538
wan_device_t * router_devlist	94,3600
static int devcnt	95,3671
static unsigned char oui_ether[101,3776
static unsigned char oui_802_2[103,3839
int wanrouter_init(108,3920
int init_module	146,4578
void cleanup_module 163,4938
int register_wan_device(191,5439
int unregister_wan_device(251,6647
int wanrouter_encapsulate 297,7530
unsigned short wanrouter_type_trans 339,8408
int wanrouter_ioctl(388,9608
static int device_setup 458,10926
static int device_shutdown 513,11910
static int device_stat 537,12336
static int device_new_if 566,13053
static int device_del_if 628,14471
static wan_device_t* find_device 650,14920
static int delete_interface 676,15651

net/wanrouter/wanproc.c,1158
#define min(min40,1681
#define max(max43,1737
#define	PROC_BUFSZ	46,1782
typedef struct wan_stat_entrywan_stat_entry50,1928
} wan_stat_entry_t;wan_stat_entry_t56,2104
static char name_root[82,2815
static char name_conf[83,2854
static char name_stat[84,2890
static struct file_operations router_fops 99,3251
static struct inode_operations router_inode 114,3597
static struct file_operations wandev_fops 139,4084
static struct inode_operations wandev_inode 154,4439
static struct proc_dir_entry proc_router 183,4938
static struct proc_dir_entry proc_router_conf 206,5389
static struct proc_dir_entry proc_router_stat 229,5843
static char conf_hdr[249,6273
static char stat_hdr[253,6393
__initfunc(266,6581
void wanrouter_proc_cleanup 282,6853
int wanrouter_proc_add 293,7105
int wanrouter_proc_delete(313,7615
static int router_proc_perms 327,7900
static ssize_t router_proc_read(347,8425
static int config_get_info(386,9177
static int status_get_info(418,9866
static int wandev_get_info(473,11096
__initfunc(540,12875
void wanrouter_proc_cleanup(545,12933
int wanrouter_proc_add(550,12981
int wanrouter_proc_delete(555,13042

net/sunrpc/auth.c,672
# define RPCDBG_FACILITY	17,305
#define RPC_MAXFLAVOR	20,350
static struct rpc_authops *	auth_flavors[22,375
rpcauth_register(29,555
rpcauth_unregister(42,806
rpcauth_create(55,1073
rpcauth_destroy(66,1306
rpcauth_init_credcache(75,1427
rpcauth_free_credcache(85,1637
rpcauth_gc_credcache(107,2093
rpcauth_insert_credcache(140,2819
rpcauth_lookup_credcache(155,3179
rpcauth_remove_credcache(188,3831
rpcauth_lookupcred(205,4146
rpcauth_matchcred(213,4344
rpcauth_holdcred(223,4600
rpcauth_releasecred(232,4805
rpcauth_marshcred(251,5257
rpcauth_checkverf(262,5539
rpcauth_refreshcred(272,5781
rpcauth_invalcred(283,6050
rpcauth_uptodatecred(292,6284

net/sunrpc/clnt.c,767
#define RPC_SLACK_SPACE	36,1129
# define RPCDBG_FACILITY	39,1198
static struct wait_queue *	destroy_wait 42,1243
rpc_create_client(70,2328
rpc_shutdown_client(133,4028
rpc_destroy_client(155,4528
rpc_release_client(176,4891
rpc_default_callback(196,5323
void rpc_clnt_sigmask(206,5491
void rpc_clnt_sigunmask(226,6138
rpc_do_call(240,6448
rpc_call_setup(287,7437
rpc_restart_call(305,7822
call_bind(319,8094
call_reserve(333,8328
call_reserveresult(364,9047
call_allocate(405,10141
call_encode(438,10881
call_transmit(487,12156
call_receive(501,12410
call_status(526,12990
call_timeout(568,14078
call_reconnect(625,15506
call_decode(642,15847
call_refresh(693,17220
call_refreshresult(708,17571
call_header(724,17884
call_verify(746,18479

net/sunrpc/auth_null.c,248
# define RPCDBG_FACILITY	17,318
nul_create(21,388
nul_destroy(38,785
nul_create_cred(48,974
nul_destroy_cred(67,1281
nul_match(76,1406
nul_marshal(85,1521
nul_refresh(99,1744
nul_validate(105,1832
struct rpc_authops	authnull_ops 121,2129

net/sunrpc/pmap_clnt.c,626
# define RPCDBG_FACILITY	24,509
#define PMAP_SET	27,554
#define PMAP_UNSET	28,574
#define PMAP_GETPORT	29,596
extern struct rpc_program	pmap_program;33,746
rpc_getport(40,913
rpc_getport_external(86,2036
pmap_getport_done(113,2703
rpc_register(140,3451
pmap_create(177,4375
xdr_error(205,4985
xdr_encode_mapping(211,5068
xdr_decode_port(225,5450
xdr_decode_bool(232,5586
static struct rpc_procinfo	pmap_procedures[238,5707
static struct rpc_version	pmap_version2 253,6112
static struct rpc_version *	pmap_version[257,6183
static struct rpc_stat		pmap_stats;263,6265
struct rpc_program	pmap_program 265,6302

net/sunrpc/auth_unix.c,506
#define NFS_NGROUPS	16,317
struct unx_cred unx_cred17,340
#define uc_uid	23,465
#define uc_count	24,497
#define uc_flags	25,532
#define uc_expire	26,567
#define UNX_CRED_EXPIRE	28,605
#define UNX_WRITESLACK	30,641
# define RPCDBG_FACILITY	33,713
unx_create(37,783
unx_destroy(55,1208
unx_create_cred(63,1380
authunix_fake_cred(101,2294
unx_destroy_cred(123,2828
unx_match(134,3078
unx_marshal(166,3874
unx_refresh(208,4841
unx_validate(215,4980
struct rpc_authops	authunix_ops 233,5383

net/sunrpc/stats.c,419
#define __NO_VERSION__15,440
#define RPCDBG_FACILITY	24,634
static struct proc_dir_entry	*proc_net_rpc 26,671
rpc_proc_read(32,758
svc_proc_read(79,1743
do_register(127,2895
rpc_proc_register(140,3200
rpc_proc_unregister(146,3305
svc_proc_register(152,3412
svc_proc_unregister(158,3520
rpc_proc_init(164,3608
rpc_proc_exit(180,3885
void rpc_modcount(198,4298
init_module(207,4415
cleanup_module(217,4520

net/sunrpc/svcsock.c,816
#define RPCDBG_FACILITY	46,1422
svc_serv_enqueue(60,1784
svc_serv_dequeue(69,1950
svc_release_skb(78,2120
svc_sock_enqueue(97,2580
svc_sock_dequeue(140,3697
svc_sock_received(163,4137
svc_sock_accepted(184,4614
svc_sock_release(201,5010
svc_wake_up(220,5376
svc_sendto(238,5677
svc_recv_available(280,6571
svc_recvfrom(297,6895
svc_udp_data_ready(337,7820
svc_udp_recvfrom(353,8152
svc_udp_sendto(403,9381
svc_udp_init(428,10029
svc_tcp_state_change1(442,10301
svc_tcp_state_change2(465,10792
svc_tcp_data_ready(481,11138
svc_tcp_accept(503,11573
svc_tcp_recvfrom(583,13612
svc_tcp_sendto(693,16324
svc_tcp_init(709,16771
svc_recv(735,17307
svc_drop(820,19272
svc_send(830,19436
svc_setup_socket(857,20031
svc_create_socket(912,21268
svc_delete_socket(960,22359
svc_makesock(999,23090

net/sunrpc/sunrpc_syms.c,29
#define __NO_VERSION__9,143

net/sunrpc/sched.c,1546
#define __KERNEL_SYSCALLS__14,302
#define RPCDBG_FACILITY	25,537
static int			rpc_task_id 26,575
#define GFP_RPC	32,675
static struct rpc_wait_queue	schedq 42,968
static struct rpc_wait_queue	childq 48,1171
static struct rpc_wait_queue	delay_queue 53,1306
static struct rpc_task *	all_tasks 58,1426
static struct wait_queue *	rpciod_idle 63,1501
static struct wait_queue *	rpciod_killer 64,1548
static struct semaphore		rpciod_sema 65,1597
static unsigned int		rpciod_users 66,1643
static pid_t			rpciod_pid 67,1682
static int			rpc_inhibit 68,1713
static u32			swap_buffer[73,1806
static int			swap_buffer_used 74,1848
rpc_add_wait_queue(85,2166
rpc_remove_wait_queue(112,2739
rpc_add_timer(129,3085
rpc_del_timer(155,3846
rpc_make_runnable(171,4200
void rpciod_wake_up(198,4801
__rpc_sleep_on(214,5151
rpc_sleep_on(248,5852
__rpc_wake_up(261,6195
__rpc_default_timer(287,6793
rpc_wake_up_task(299,7020
rpc_wake_up_next(312,7238
rpc_wake_up(330,7584
rpc_wake_up_status(344,7837
rpc_delay(362,8189
__rpc_atrun(369,8341
__rpc_execute(379,8513
rpc_execute(491,11258
__rpc_schedule(514,11690
rpc_allocate(565,13080
rpc_free(596,13727
rpc_init_task(609,13905
rpc_new_task(648,14892
rpc_release_task(675,15497
rpc_find_parent(722,16487
rpc_child_exit(735,16741
rpc_new_child(750,17043
rpc_run_child(767,17359
rpc_killall_tasks(783,17752
static struct semaphore rpciod_running 800,18183
rpciod(806,18293
rpciod_killall(873,19691
rpciod_up(897,20192
rpciod_down(930,20885
void rpc_show_tasks(977,21985

net/sunrpc/svc.c,288
#define __KERNEL_SYSCALLS__9,134
#define RPCDBG_FACILITY	23,471
#define RPC_PARANOIA 24,509
svc_create(30,583
svc_destroy(58,1161
svc_init_buffer(86,1791
svc_release_buffer(106,2166
svc_create_thread(116,2286
svc_exit_thread(149,2995
svc_register(171,3431
svc_process(210,4210

net/sunrpc/svcauth.c,266
#define RPCDBG_FACILITY	16,353
typedef void	(*auth_fn_t)auth_fn_t21,431
#define RPC_SVCAUTH_MAX	32,745
static auth_fn_t	authtab[37,806
svc_authenticate(44,898
svc_auth_register(66,1341
svc_auth_unregister(75,1502
svcauth_null(82,1608
svcauth_unix(114,2410

net/sunrpc/svcauth_des.c,264
#define RPCDBG_FACILITY	16,323
struct des_cred des_cred26,716
#define ADN_FULLNAME	35,933
#define ADN_NICKNAME	36,957
#define DES_REPLAY_SLACK	42,1079
static int			in_keycall 48,1196
#define FAIL(FAIL50,1226
svcauth_des(57,1340
get_cred_byname(203,5233

net/sunrpc/sysctl.c,458
unsigned int	rpc_debug 26,555
unsigned int	nfs_debug 27,584
unsigned int	nfsd_debug 28,613
unsigned int	nlm_debug 29,642
static struct ctl_table_header *sunrpc_table_header 33,690
static ctl_table		sunrpc_table[34,750
rpc_register_sysctl(37,790
rpc_unregister_sysctl(52,1052
proc_dodebug(61,1198
#define DIRENTRY(DIRENTRY124,2585
#define DBGENTRY(DBGENTRY126,2667
static ctl_table		debug_table[130,2794
static ctl_table		sunrpc_table[138,2928

net/sunrpc/xdr.c,822
u32	rpc_success,16,288
u32	rpc_success, rpc_prog_unavail,16,288
u32	rpc_success, rpc_prog_unavail, rpc_prog_mismatch,16,288
u32	rpc_success, rpc_prog_unavail, rpc_prog_mismatch, rpc_proc_unavail,16,288
	rpc_garbage_args,17,360
	rpc_garbage_args, rpc_system_err;17,360
u32	rpc_auth_ok,18,395
u32	rpc_auth_ok, rpc_autherr_badcred,18,395
u32	rpc_auth_ok, rpc_autherr_badcred, rpc_autherr_rejectedcred,18,395
	rpc_autherr_badverf,19,459
	rpc_autherr_badverf, rpc_autherr_rejectedverf,19,459
	rpc_autherr_badverf, rpc_autherr_rejectedverf, rpc_autherr_tooweak;19,459
u32	xdr_zero,20,528
u32	xdr_zero, xdr_one,20,528
u32	xdr_zero, xdr_one, xdr_two;20,528
xdr_init(23,566
xdr_encode_netobj(55,1318
xdr_decode_netobj_fixed(66,1571
xdr_decode_netobj(75,1735
xdr_encode_string(87,1945
xdr_decode_string(99,2146

net/sunrpc/xprt.c,1422
#define __KERNEL_SYSCALLS__42,1826
#define SOCK_HAS_USER_DATA62,2230
static struct rpc_xprt *	sock_list 68,2311
# define RPCDBG_FACILITY	73,2403
# define MAX(MAX77,2460
# define MIN(MIN78,2502
xprt_pktdump(99,3154
xprt_pktdump(118,3523
xprt_from_sock(128,3688
extern inline void xprt_move_iov(145,3971
xprt_sendmsg(185,4550
xprt_recvmsg(244,5827
xprt_adjust_cwnd(288,6841
xprt_adjust_timeout(325,7961
xprt_close(348,8496
xprt_disconnect(375,9040
xprt_reconnect(387,9309
xprt_reconn_status(468,11245
xprt_reconn_timeout(485,11725
xprt_lookup_rqst(499,12057
xprt_complete_rqst(526,12658
udp_data_ready(568,13688
tcp_input_record(624,15292
static struct rpc_xprt *rpc_xprt_pending 747,18417
void rpciod_tcp_dispatcher(754,18613
extern inline void tcp_rpciod_queue(797,19327
static void tcp_data_ready(809,19597
tcp_state_change(849,20468
tcp_write_space(872,21079
xprt_timer(897,21565
xprt_transmit_some(920,22092
xprt_transmit(946,22696
xprt_transmit_status(1052,25254
xprt_receive(1075,25722
xprt_receive_status(1103,26320
xprt_reserve(1115,26531
xprt_reserve_status(1143,27247
xprt_request_init(1194,28371
xprt_release(1217,28824
xprt_default_timeout(1275,30236
xprt_set_timeout(1287,30438
xprt_setup(1302,30768
xprt_create(1385,32790
xprt_bindresvport(1416,33407
xprt_create_socket(1440,33925
xprt_create_proto(1479,34888
xprt_shutdown(1499,35269
xprt_destroy(1512,35517

net/netlink/af_netlink.c,1524
#define Nprintk(Nprintk41,1045
#define NL_EMULATE_DEV44,1138
static struct sock *nl_table[47,1169
static atomic_t nl_table_lock[48,1210
static struct wait_queue *nl_table_wait;49,1252
static struct socket *netlink_kernel[52,1316
netlink_wait_on_table(66,1746
netlink_lock_table(73,1885
netlink_unlock_table(79,1985
static __inline__ void netlink_lock(93,2269
static __inline__ void netlink_unlock(98,2372
static __inline__ int netlink_locked(103,2477
static __inline__ struct sock *netlink_lookup(108,2589
extern struct proto_ops netlink_ops;122,2831
static void netlink_insert(124,2869
static void netlink_remove(130,2984
static int netlink_create(143,3221
static int netlink_release(168,3678
static int netlink_autobind(225,5062
static int netlink_bind(248,5603
static int netlink_connect(285,6547
static int netlink_getname(312,7226
int netlink_unicast(330,7727
static __inline__ int netlink_broadcast_deliver(394,9009
void netlink_broadcast(414,9521
void netlink_set_err(471,10713
static int netlink_sendmsg(490,11089
static int netlink_recvmsg(549,12716
netlink_kernel_create(600,13885
static void netlink_destroy_callback(625,14290
static int netlink_dump(637,14488
int netlink_dump_start(671,15234
void netlink_ack(706,16040
int netlink_attach(736,16749
void netlink_detach(746,17008
int netlink_post(756,17160
static int netlink_read_proc(772,17442
struct proto_ops netlink_ops 821,18440
struct net_proto_family netlink_family_ops 842,18773
void netlink_proto_init(847,18853

net/netlink/netlink_dev.c,466
static unsigned open_map 32,896
static struct socket *netlink_user[33,926
static unsigned int netlink_poll(39,1004
static ssize_t netlink_write(52,1312
static ssize_t netlink_read(76,1850
static loff_t netlink_lseek(98,2376
static int netlink_open(103,2473
static int netlink_release(151,3361
static int netlink_ioctl(164,3632
static struct file_operations netlink_fops 180,3920
__initfunc(193,4158
int init_module(204,4377
void cleanup_module(210,4499

net/packet/af_packet.c,1345
#define CONFIG_SOCK_PACKET	84,2505
#define CONFIG_PACKET_MULTICAST	110,3460
struct sock * packet_sklist 164,4937
struct packet_mclistpacket_mclist169,5046
struct packet_optpacket_opt182,5261
extern struct proto_ops packet_ops;192,5465
extern struct proto_ops packet_ops_spkt;195,5528
static int packet_rcv_spkt(197,5570
static int packet_sendmsg_spkt(258,6815
static int packet_rcv(366,9068
static int packet_sendmsg(424,10442
static void packet_destroy_timer(515,12255
static int packet_release(535,12728
static int packet_do_bind(595,13791
static int packet_bind_spkt(636,14684
static int packet_bind(658,15077
static int packet_create(686,15647
static int packet_recvmsg(766,17492
static int packet_getname_spkt(843,19237
static int packet_getname(864,19668
static void packet_dev_mc(892,20383
static void packet_dev_mclist(911,20780
static int packet_mc_add(919,20964
static int packet_mc_drop(968,21991
static void packet_flush_mclist(991,22585
packet_setsockopt(1005,22915
static int packet_notifier(1031,23477
static int packet_ioctl(1076,24474
struct proto_ops packet_ops_spkt 1175,26538
struct proto_ops packet_ops 1197,26890
static struct net_proto_family packet_family_ops 1222,27280
struct notifier_block packet_netdev_notifier=1227,27364
void cleanup_module(1235,27458
int init_module(1243,27585

net/sched/sch_cbq.c,2547
struct cbq_classcbq_class92,3120
struct cbq_sched_datacbq_sched_data161,5118
#define L2T(L2T193,5859
#define BUG_TRAP(BUG_TRAP195,5935
static __inline__ unsigned cbq_hash(198,6057
cbq_class_lookup(206,6181
cbq_reclassify(219,6441
cbq_classify(243,7104
static __inline__ void cbq_activate_class(320,8800
static void cbq_deactivate_class(344,9346
cbq_mark_toplevel(373,9986
cbq_enqueue(393,10418
cbq_requeue(428,11086
static void cbq_ovl_classic(461,11729
static void cbq_ovl_rclassic(515,13088
static void cbq_ovl_delay(534,13465
static void cbq_ovl_lowprio(570,14474
static void cbq_ovl_drop(586,14850
static void cbq_watchdog(595,15029
static unsigned long cbq_undelay_prio(602,15177
static void cbq_undelay(637,15975
static int cbq_reshape_fail(673,16593
cbq_update_toplevel(716,17547
cbq_update(738,18058
cbq_under_limit(818,19892
cbq_dequeue_prio(858,20967
cbq_dequeue_1(961,23112
cbq_dequeue(979,23478
static void cbq_adjust_levels(1058,25358
static void cbq_normalize_quanta(1077,25716
static void cbq_sync_defmap(1102,26366
static void cbq_change_defmap(1137,27050
static void cbq_unlink_class(1167,27653
static void cbq_link_class(1201,28375
static int cbq_drop(1222,28847
cbq_reset(1242,29268
static int cbq_set_lss(1275,29944
static void cbq_rmprio(1296,30588
static void cbq_addprio(1303,30774
static int cbq_set_wrr(1310,30961
static int cbq_set_overlimit(1329,31396
static int cbq_set_police(1359,32093
static int cbq_set_fopt(1373,32362
static int cbq_init(1379,32518
static __inline__ int cbq_dump_rate(1441,34265
static __inline__ int cbq_dump_lss(1453,34532
static __inline__ int cbq_dump_wrr(1478,35129
static __inline__ int cbq_dump_ovl(1496,35532
static __inline__ int cbq_dump_fopt(1512,35912
static __inline__ int cbq_dump_police(1531,36344
static int cbq_dump_attr(1548,36675
static int cbq_dump(1562,37015
cbq_dump_class(1583,37553
static int cbq_graft(1620,38541
cbq_leaf(1644,39078
static unsigned long cbq_get(1651,39206
static void cbq_destroy_filters(1663,39460
static void cbq_destroy_class(1673,39642
cbq_destroy(1685,39870
static void cbq_put(1709,40350
cbq_change_class(1727,40722
static int cbq_delete(1922,45459
static struct tcf_proto **cbq_find_tcf(1961,46193
static unsigned long cbq_bind_filter(1972,46450
static void cbq_unbind_filter(1988,46841
static void cbq_walk(1995,46979
static struct Qdisc_class_ops cbq_class_ops 2020,47437
struct Qdisc_ops cbq_qdisc_ops 2039,47678
int init_module(2062,47954
void cleanup_module(2067,48021

net/sched/sch_csz.c,1273
#define CSZ_GUARANTEED	211,6829
#define CSZ_FLOWS	212,6856
struct csz_headcsz_head214,6895
struct csz_flowcsz_flow222,7021
#define L2R(L2R255,7811
struct csz_sched_datacsz_sched_data257,7868
extern __inline__ void csz_insert_finish(304,9396
extern __inline__ void csz_insert_finish(321,9794
extern __inline__ void csz_insert_start(342,10260
static unsigned long csz_update(370,10991
unsigned csz_classify(457,12597
csz_enqueue(463,12706
skb_dequeue_best(512,13823
skb_peek_best(528,14069
static void csz_watchdog(543,14265
csz_move_queue(551,14404
static __inline__ int csz_enough_tokens(562,14604
csz_dequeue(644,16566
csz_reset(723,18396
csz_destroy(750,19002
static int csz_init(755,19058
static int csz_dump(799,20220
static int csz_graft(823,20735
static struct Qdisc * csz_leaf(829,20861
static unsigned long csz_get(835,20949
static unsigned long csz_bind(849,21250
static void csz_put(855,21371
static int csz_change(860,21442
static int csz_delete(909,22568
static int csz_dump_class(936,23118
static void csz_walk(983,24043
static struct tcf_proto ** csz_find_tcf(1008,24517
struct Qdisc_class_ops csz_class_ops 1018,24714
struct Qdisc_ops csz_qdisc_ops 1038,24926
int init_module(1062,25192
void cleanup_module(1067,25259

net/sched/sch_fifo.c,375
struct fifo_sched_datafifo_sched_data39,1021
bfifo_enqueue(45,1078
bfifo_requeue(65,1540
bfifo_dequeue(73,1700
fifo_drop(84,1860
fifo_reset(98,2055
pfifo_enqueue(105,2153
pfifo_requeue(124,2574
pfifo_dequeue(132,2702
static int fifo_init(137,2772
static int fifo_dump(156,3222
struct Qdisc_ops pfifo_qdisc_ops 173,3550
struct Qdisc_ops bfifo_qdisc_ops 195,3798

net/sched/sch_generic.c,898
#define BUG_TRAP(BUG_TRAP33,895
struct Qdisc_head qdisc_head 37,1048
int qdisc_restart(50,1424
void qdisc_run_queues(89,2374
static struct timer_list dev_watchdog 124,3250
static void dev_do_watchdog(127,3334
noop_enqueue(149,3865
noop_dequeue(156,3978
noop_requeue(162,4043
struct Qdisc_ops noop_qdisc_ops 170,4228
struct Qdisc noop_qdisc 182,4341
struct Qdisc_ops noqueue_qdisc_ops 192,4458
struct Qdisc noqueue_qdisc 205,4578
static const u8 prio2band[215,4684
pfifo_fast_enqueue(223,4896
pfifo_fast_dequeue(241,5263
pfifo_fast_requeue(258,5561
pfifo_fast_reset(271,5814
static int pfifo_fast_init(281,6017
static struct Qdisc_ops pfifo_fast_ops 294,6237
struct Qdisc * qdisc_create_dflt(310,6456
void qdisc_reset(333,6928
void qdisc_destroy(342,7084
void dev_activate(374,7688
void dev_deactivate(406,8533
void dev_init_scheduler(430,8898
void dev_shutdown(437,9035

net/sched/sch_prio.c,824
struct prio_sched_dataprio_sched_data39,1021
static __inline__ unsigned prio_classify(48,1165
prio_enqueue(68,1687
prio_requeue(87,2052
prio_dequeue(104,2379
prio_drop(124,2718
prio_reset(142,3020
prio_destroy(153,3232
static int prio_tune(165,3476
static int prio_init(209,4517
static int prio_dump(239,5193
static int prio_graft(256,5591
prio_leaf(274,5954
static unsigned long prio_get(285,6169
static unsigned long prio_bind(295,6397
static void prio_put(301,6520
static int prio_change(306,6590
static int prio_delete(316,6848
static int prio_dump_class(326,7057
static void prio_walk(339,7364
static struct tcf_proto ** prio_find_tcf(360,7740
static struct Qdisc_class_ops prio_class_ops 369,7939
struct Qdisc_ops prio_qdisc_ops 389,8170
int init_module(413,8447
void cleanup_module(418,8515

net/sched/sch_red.c,354
struct red_sched_datared_sched_data132,3275
red_enqueue(154,3863
red_requeue(245,6435
red_dequeue(257,6699
red_drop(272,6974
static void red_reset(288,7275
static int red_init(301,7565
static int red_dump(333,8503
static void red_destroy(359,9108
struct Qdisc_ops red_qdisc_ops 364,9176
int init_module(388,9443
void cleanup_module(393,9510

net/sched/sch_sfq.c,814
#define SFQ_DEPTH	92,2777
#define SFQ_HASH_DIVISOR	93,2800
typedef unsigned char sfq_index;sfq_index96,2890
struct sfq_headsfq_head98,2924
struct sfq_sched_datasfq_sched_data104,2980
static __inline__ unsigned sfq_fold_hash(124,3639
#define IPPROTO_ESP 135,3901
static unsigned sfq_hash(138,3932
extern __inline__ void sfq_link(173,4816
extern __inline__ void sfq_dec(185,5055
extern __inline__ void sfq_inc(200,5319
static int sfq_drop(216,5585
sfq_enqueue(255,6400
sfq_requeue(290,7141
sfq_dequeue(326,7858
sfq_reset(361,8508
static void sfq_perturbation(369,8625
static int sfq_change(383,8999
static int sfq_init(404,9535
static void sfq_destroy(436,10283
static int sfq_dump(444,10470
struct Qdisc_ops sfq_qdisc_ops 467,10944
int init_module(490,11210
void cleanup_module(495,11277

net/sched/sch_tbf.c,465
struct tbf_sched_datatbf_sched_data111,2801
#define L2T(L2T128,3264
#define L2T_P(L2T_P129,3334
tbf_enqueue(132,3416
tbf_requeue(162,4046
tbf_drop(170,4191
static void tbf_watchdog(184,4395
tbf_dequeue(193,4568
tbf_reset(260,6009
static int tbf_change(273,6291
static int tbf_init(330,7695
static void tbf_destroy(351,8107
static int tbf_dump(366,8378
struct Qdisc_ops tbf_qdisc_ops 395,9017
int init_module(419,9273
void cleanup_module(424,9340

net/sched/sch_api.c,1537
#define BUG_TRAP(BUG_TRAP43,1132
static struct Qdisc_ops *qdisc_base 134,3897
int register_qdisc(138,3988
int unregister_qdisc(158,4430
struct Qdisc *qdisc_lookup(175,4793
struct Qdisc *qdisc_leaf(186,4978
struct Qdisc_ops *qdisc_lookup_ops(204,5319
static struct qdisc_rate_table *qdisc_rtab_list;217,5532
struct qdisc_rate_table *qdisc_get_rtab(219,5582
void qdisc_put_rtab(244,6180
u32 qdisc_alloc_handle(263,6536
dev_graft_qdisc(280,6938
int qdisc_graft(314,7579
qdisc_create(346,8155
static int qdisc_change(417,9592
struct check_loop_argcheck_loop_arg437,9994
static int check_loop(446,10166
check_loop_fn(462,10490
static int tc_get_qdisc(481,10888
static int tc_modify_qdisc(536,12035
static int tc_fill_qdisc(651,15036
static int qdisc_notify(680,15848
static int tc_dump_qdisc(707,16502
static int tc_ctl_tclass(746,17299
static int tc_fill_tclass(859,19815
static int tclass_notify(887,20567
struct qdisc_dump_argsqdisc_dump_args905,21014
static int qdisc_class_dump(912,21119
static int tc_dump_tclass(920,21401
int psched_us_per_tick 961,22322
int psched_tick_per_us 962,22350
static int psched_read_proc(965,22401
int psched_tod_diff(988,22800
psched_time_t psched_time_base;1001,23030
psched_tdiff_t psched_clock_per_hz;1004,23101
int psched_clock_scale;1005,23137
PSCHED_WATCHER psched_time_mark;1009,23191
static struct timer_list psched_timer 1013,23266
static void psched_tick(1016,23344
__initfunc(1034,23789
__initfunc(1073,24669
#define INIT_QDISC(INIT_QDISC1112,25719

net/sched/cls_api.c,506
static struct tcf_proto_ops *tcf_proto_base;40,1036
struct tcf_proto_ops * tcf_proto_lookup_ops(45,1126
int register_tcf_proto_ops(60,1406
int unregister_tcf_proto_ops(73,1659
static __inline__ u32 tcf_auto_prio(95,2110
static int tc_ctl_tfilter(107,2304
tcf_fill_node(271,6040
static int tfilter_notify(298,6789
struct tcf_dump_argstcf_dump_args316,7243
static int tcf_node_dump(323,7344
static int tc_dump_tfilter(331,7603
__initfunc(409,9323
#define INIT_TC_FILTER(INIT_TC_FILTER425,9808

net/sched/cls_rsvp.h,831
struct rsvp_headrsvp_head70,2675
struct rsvp_sessionrsvp_session78,2787
struct rsvp_filterrsvp_filter90,3020
static __inline__ unsigned hash_dst(106,3273
static __inline__ unsigned hash_src(114,3452
#define RSVP_POLICE(RSVP_POLICE124,3621
#define RSVP_POLICE(RSVP_POLICE131,3779
static int rsvp_classify(135,3810
static unsigned long rsvp_get(222,5784
static void rsvp_put(242,6207
static int rsvp_init(246,6272
static void rsvp_destroy(261,6551
static int rsvp_delete(300,7255
static unsigned gen_handle(349,8143
static int tunnel_bts(365,8451
static void tunnel_recycle(376,8637
static u32 gen_tunnel(403,9157
static int rsvp_change(419,9423
static void rsvp_walk(584,13436
static int rsvp_dump(616,14023
struct tcf_proto_ops RSVP_OPS 673,15354
int init_module(693,15583
void cleanup_module(698,15653

net/sched/cls_fw.c,484
struct fw_headfw_head38,1036
struct fw_filterfw_filter43,1085
static __inline__ int fw_hash(53,1232
static int fw_classify(58,1300
static unsigned long fw_get(94,1952
static void fw_put(109,2241
static int fw_init(113,2304
static void fw_destroy(119,2381
static int fw_delete(147,2914
static int fw_change(175,3529
static void fw_walk(265,5562
static int fw_dump(294,6055
struct tcf_proto_ops cls_fw_ops 346,7090
int init_module(366,7300
void cleanup_module(371,7372

net/sched/cls_route.c,1069
struct route4_fastmaproute4_fastmap46,1296
struct route4_headroute4_head53,1378
struct route4_bucketroute4_bucket59,1476
struct route4_filterroute4_filter64,1539
#define ROUTE4_FAILURE 79,1751
static __inline__ int route4_fastmap_hash(81,1806
static void route4_reset_fastmap(86,1886
route4_set_fastmap(94,2069
static __inline__ int route4_hash_to(103,2291
static __inline__ int route4_hash_from(108,2358
static __inline__ int route4_hash_iif(113,2432
static __inline__ int route4_hash_wild(118,2514
#define IF_ROUTE_POLICE 124,2605
#define IF_ROUTE_POLICE133,2791
static int route4_classify(137,2824
static u32 to_hash(222,4458
static u32 from_hash(230,4547
static unsigned long route4_get(243,4725
static void route4_put(269,5205
static int route4_init(273,5272
static void route4_destroy(279,5353
static int route4_delete(315,6027
static int route4_change(362,6910
static void route4_walk(512,10391
static int route4_dump(547,11009
struct tcf_proto_ops cls_route4_ops 603,12258
int init_module(623,12511
void cleanup_module(628,12587

net/sched/cls_rsvp.c,80
#define RSVP_DST_LEN	37,999
#define RSVP_ID	38,1022
#define RSVP_OPS	39,1046

net/sched/sch_teql.c,730
struct teql_masterteql_master67,2255
struct teql_sched_datateql_sched_data76,2401
#define NEXT_SLAVE(NEXT_SLAVE84,2526
#define FMASK 86,2596
teql_enqueue(91,2698
teql_requeue(110,3084
teql_dequeue(119,3275
teql_neigh_release(138,3672
teql_reset(145,3757
teql_destroy(155,3965
static int teql_qdisc_init(184,4610
__teql_resolve(230,5831
teql_resolve(259,6636
static int teql_master_xmit(268,6867
static int teql_master_open(342,8148
static int teql_master_close(385,9099
static struct net_device_stats *teql_master_stats(391,9184
static int teql_master_mtu(397,9321
static int teql_master_init(417,9649
static struct teql_master the_master 432,10022
int init_module(452,10245
void cleanup_module(480,10812

net/sched/cls_rsvp6.c,81
#define RSVP_DST_LEN	38,1024
#define RSVP_ID	39,1047
#define RSVP_OPS	40,1072

net/sched/cls_u32.c,941
#define BUG_TRAP(BUG_TRAP55,1773
struct tc_u_knodetc_u_knode58,1895
struct tc_u_hnodetc_u_hnode71,2128
struct tc_u_commontc_u_common82,2301
static struct tc_u_common *u32_list;91,2433
static __inline__ unsigned u32_hash_fold(93,2471
static int u32_classify(102,2619
u32_lookup_ht(198,4547
u32_lookup_key(210,4761
static unsigned long u32_get(227,5015
static void u32_put(246,5393
static u32 gen_new_htid(250,5457
static int u32_init(262,5715
static int u32_destroy_key(306,6581
static int u32_delete_key(321,6903
static void u32_clear_hnode(341,7273
static int u32_destroy_hnode(356,7538
static void u32_destroy(377,7888
static int u32_delete(416,8597
static u32 gen_new_kid(435,8934
static int u32_set_parms(448,9205
static int u32_change(495,10260
static void u32_walk(602,12869
static int u32_dump(637,13548
struct tcf_proto_ops cls_u32_ops 696,14956
int init_module(716,15177
void cleanup_module(721,15250

net/sched/estimator.c,290
#define EST_MAX_INTERVAL	78,2340
struct qdisc_estimatorqdisc_estimator80,2368
struct qdisc_estimator_headqdisc_estimator_head92,2560
static struct qdisc_estimator_head elist[98,2651
static void est_timer(100,2714
int qdisc_new_estimator(125,3377
void qdisc_kill_estimator(161,4357

net/sched/police.c,469
#define BUG_TRAP(BUG_TRAP34,903
#define L2T(L2T36,1024
#define L2T_P(L2T_P37,1094
static u32 idx_gen;39,1165
static struct tcf_police *tcf_police_ht[40,1185
static __inline__ unsigned tcf_police_hash(42,1231
static __inline__ struct tcf_police * tcf_police_lookup(47,1309
static __inline__ u32 tcf_police_new_index(58,1527
void tcf_police_destroy(69,1683
struct tcf_police * tcf_police_locate(91,2111
int tcf_police(158,3714
int tcf_police_dump(206,4602

net/irda/af_irda.c,754
static struct proto_ops irda_proto_ops;46,1504
#define IRDA_MAX_HEADER 48,1545
#define IRDA_SOCKETS50,1605
static int irda_getname(60,1724
static int irda_listen(74,1952
static int irda_connect(94,2314
static int irda_create(160,3816
void irda_destroy_socket(205,4814
static int irda_release(218,4967
static int irda_recvmsg(245,5599
static int irda_shutdown(273,6159
unsigned int irda_poll(282,6330
static int irda_ioctl(295,6538
static struct net_proto_family irda_family_ops 353,7729
static struct proto_ops irda_proto_ops 359,7807
static int irda_device_event(382,8150
static struct packet_type irda_packet_type 411,8791
static struct notifier_block irda_dev_notifier 420,8936
__initfunc(432,9105
void irda_proto_cleanup(452,9469

net/irda/compressors/irda_deflate.c,784
struct irda_deflate_state irda_deflate_state81,2702
#define DEFLATE_OVHD	91,2858
struct chunk_header chunk_header117,4069
#define GUARD_MAGIC	122,4200
#define MIN_VMALLOC	123,4231
void zfree(128,4367
zalloc(144,4684
void * zalloc_init(160,4982
z_comp_free(178,5371
z_comp_alloc(194,5619
z_comp_init(237,6722
static void z_comp_reset(261,7340
z_compress(270,7505
z_comp_stats(328,8802
static void z_decomp_free(337,8971
z_decomp_alloc(352,9226
z_decomp_init(393,10262
static void z_decomp_reset(418,10913
z_decompress(443,11828
z_incomp(515,13552
static struct compressor irda_deflate 564,14716
static struct compressor irda_deflate_draft 581,15222
__initfunc(598,15739
void irda_deflate_cleanup(608,16031
int init_module(620,16334
cleanup_module(626,16402

net/irda/crc.c,70
__u16 const irda_crc16_table[24,906
unsigned short crc_calc(60,3027

net/irda/ircomm/attach.c,352
extern struct ircomm_cb **ircomm;42,1384
struct ircomm_cb *discovering_instance;43,1418
static char *rcsid 51,1660
void ircomm_getvalue_confirm(59,1803
static void got_lsapsel(125,3165
static void query_lsapsel(158,4130
void ircomm_discovery_indication(184,4735
struct ircomm_cb * ircomm_attach_cable(214,5395
int ircomm_detach_cable(319,8114

net/irda/ircomm/ircomm_common.c,2035
static char *rcsid 44,1434
static char *version 46,1528
static char *ircommstate[69,2479
static char *ircommservicetype[77,2566
static char *ircommporttype[84,2677
struct ircomm_cb **ircomm 91,2752
static char *ircommevent[93,2787
extern struct proc_dir_entry proc_irda;116,3283
struct proc_dir_entry proc_ircomm 117,3323
static void (*state[125,3469
static void (*state[])( struct ircomm_cb *self,125,3469
static void (*state[])( struct ircomm_cb *self, IRCOMM_EVENT event,125,3469
			struct sk_buff *skb)126,3537
__initfunc(136,3678
void ircomm_cleanup(200,5203
void ircomm_accept_data_indication(239,6004
void ircomm_accept_connect_confirm(253,6377
void ircomm_accept_connect_indication(280,7125
void ircomm_accept_disconnect_indication(303,7734
void ircomm_accept_flow_indication(317,8139
static void issue_connect_request(358,9200
static void disconnect_indication(393,10094
static void connect_indication(408,10450
static void connect_indication_three_wire_raw(423,10915
static void connect_confirmation(430,11054
static void issue_connect_response(439,11313
static void issue_disconnect_request(454,11695
static void issue_data_request(464,11984
static void issue_control_request(484,12475
static void process_data(495,12721
void ircomm_data_indication(513,13171
static void ircomm_do_event(527,13621
void ircomm_next_state(536,13888
static void ircomm_state_discovery(549,14233
static void ircomm_state_idle(563,14473
static void ircomm_state_waiti(598,15240
static void ircomm_state_waitr(629,15984
static void ircomm_state_conn(674,17017
void ircomm_connect_request(721,18178
void ircomm_connect_response(738,18576
void ircomm_disconnect_request(773,19486
void ircomm_data_request(785,19766
static void ircomm_tx_ctrlbuffer(810,20398
void ircomm_control_request(848,21029
static void append_tuple(871,21456
void ircomm_append_ctrl(919,22485
static void ircomm_parse_control(1060,25665
int init_module(1245,29435
void cleanup_module(1253,29533
int ircomm_proc_read(1273,29968

net/irda/ircomm/irvtd.c,238
struct irvtd_cb **irvtd 35,1186
extern struct ircomm_cb **ircomm;36,1218
static char *rcsid 39,1259
static char *version 41,1344
__initfunc(55,1740
void irvtd_cleanup(101,2684
int init_module(133,3195
void cleanup_module(145,3328

net/irda/ircomm/irvtd_driver.c,1700
#define MIN(MIN38,1268
#define DO_RESTART41,1324
#define RELEVANT_IFLAG(RELEVANT_IFLAG42,1343
static char *irvtd_ttyname 44,1420
struct tty_driver irvtd_drv,45,1459
struct tty_driver irvtd_drv, irvtd_callout_driver;45,1459
struct tty_struct *irvtd_table[46,1510
struct termios *irvtd_termios[47,1556
struct termios *irvtd_termios_locked[48,1601
static int ircomm_vsd_refcount;49,1653
extern struct ircomm_cb **ircomm;50,1685
extern struct irvtd_cb **irvtd;51,1719
static char *rcsid 82,2882
int irvtd_register_ttydriver(96,3227
void irvtd_unregister_ttydriver(186,6059
static void irvtd_write_to_tty(234,7375
void irvtd_receive_data(352,10246
void irvtd_receive_data(372,10795
void irvtd_attached(465,13245
void irvtd_connect_confirm(481,13619
void irvtd_connect_indication(525,14745
void irvtd_disconnect_indication(547,15385
void irvtd_control_indication(565,15783
static int irvtd_block_til_ready(683,18638
static void change_speed(844,22614
static int irvtd_startup(928,24443
int irvtd_open(990,25938
static void irvtd_shutdown(1056,27331
void irvtd_close(1103,28350
int irvtd_write(1250,31957
void irvtd_put_char(1297,32947
static void flush_txbuff(1328,33790
void irvtd_flush_chars(1362,34587
int irvtd_write_room(1398,35587
int irvtd_chars_in_buffer(1433,36434
static void irvtd_break(1453,36950
static int get_modem_info(1491,38081
static int set_modem_info(1504,38508
int irvtd_ioctl(1545,39324
void irvtd_set_termios(1735,44436
static void irvtd_send_xchar(1767,45406
void irvtd_throttle(1773,45531
void irvtd_unthrottle(1789,45974
irvtd_stop(1815,46798
irvtd_start(1821,46977
void irvtd_hangup(1836,47379
void irvtd_flush_buffer(1849,47721

net/irda/irda_device.c,989
hashbin_t *irda_device 55,1729
__initfunc(72,2328
void irda_device_cleanup(109,3020
int irda_device_open(124,3276
void __irda_device_close(207,5525
void irda_device_close(240,6082
void irda_device_set_media_busy(262,6566
static void __irda_device_change_speed(285,7176
inline void irda_device_change_speed(318,7962
inline int irda_device_is_media_busy(329,8249
inline int irda_device_is_receiving(337,8444
inline struct qos_info *irda_device_get_qos(348,8695
void irda_device_todo_expired(356,8888
static struct enet_statistics *irda_device_get_stats(369,9188
int irda_device_setup(382,9542
static int irda_device_net_rebuild_header(425,10533
static int irda_device_net_hard_header(432,10647
static int irda_device_net_set_config(445,10975
static int irda_device_net_change_mtu(452,11103
int irda_device_txqueue_empty(466,11388
__inline__ int irda_get_mtt(484,11763
void setup_dma(495,11965
int irda_device_print_flags(514,12315
int irda_device_proc_read(549,13133

net/irda/iriap.c,1033
static const char *ias_charset_types[43,1438
hashbin_t *iriap 57,1674
extern char *lmp_reasons[59,1700
__initfunc(72,2087
void iriap_cleanup(120,3153
struct iriap_cb *iriap_open(134,3506
static void __iriap_close(194,4978
void iriap_close(213,5310
void iriap_disconnect_indication(240,5865
void iriap_disconnect_request(289,6931
void iriap_getinfobasedetails_request(313,7429
void iriap_getinfobasedetails_confirm(318,7530
void iriap_getobjects_request(323,7631
void iriap_getobjects_confirm(328,7724
void iriap_getvalue(333,7817
void iriap_getvaluebyclass_request(344,8047
void iriap_getvaluebyclass_confirm(404,9575
void iriap_getvaluebyclass_response(503,11804
void iriap_getvaluebyclass_indication(585,13806
void iriap_send_ack(655,15248
void iriap_connect_confirm(684,15753
void iriap_connect_indication(708,16323
void iriap_data_indication(730,16881
void iriap_call_indication(803,18468
void iriap_watchdog_timer_expired(834,19119
static char *ias_value_types[851,19458
int irias_proc_read(858,19559

net/irda/iriap_event.c,1162
static void (*iriap_state[65,2852
static void (*iriap_state[])( struct iriap_cb *self,65,2852
static void (*iriap_state[])( struct iriap_cb *self, IRIAP_EVENT event,65,2852
			      struct sk_buff *skb)66,2925
void iriap_next_client_state(92,3359
void iriap_next_call_state(107,3825
void iriap_next_server_state(125,4526
void iriap_next_r_connect_state(133,4711
void iriap_do_client_event(141,4903
void iriap_do_call_event(150,5145
void iriap_do_server_event(159,5382
void iriap_do_r_connect_event(168,5625
static void state_s_disconnect(184,6023
static void state_s_connecting(214,6663
static void state_s_call(247,7546
static void state_s_make_call(270,8009
static void state_s_calling(295,8490
static void state_s_outstanding(307,8776
static void state_s_replying(331,9298
static void state_s_wait_for_call(343,9539
static void state_s_wait_active(356,9780
static void state_r_disconnect(374,10245
static void state_r_call(419,11203
static void state_r_waiting(447,11681
static void state_r_wait_active(453,11838
static void state_r_receiving(465,12091
static void state_r_execute(489,12551
static void state_r_returning(517,13166

net/irda/irias_object.c,749
hashbin_t *objects 31,1138
struct ias_value missing 36,1224
char *strdup(46,1367
struct ias_object *irias_new_object(70,1722
void __irias_delete_attrib(99,2334
void __irias_delete_object(120,2796
void irias_delete_object(141,3215
void irias_insert_object(160,3536
struct ias_object *irias_find_object(176,3851
struct ias_attrib *irias_find_attrib(189,4078
void irias_add_attrib(212,4543
int irias_object_change_attribute(232,5065
void irias_add_integer_attrib(276,6029
void irias_add_octseq_attrib(312,6880
void irias_add_string_attrib(352,7897
struct ias_value *irias_new_integer_value(390,8787
struct ias_value *irias_new_string_value(414,9257
struct ias_value *irias_new_octseq_value(440,9789
void irias_delete_value(471,10484

net/irda/irlan/irlan_client.c,590
static void irlan_client_kick_timer_expired(72,2489
void irlan_client_start_kick_timer(93,3138
void irlan_client_wakeup(102,3367
void irlan_client_discovery_indication(165,5078
static void irlan_client_ctrl_data_indication(237,6957
static void irlan_client_ctrl_disconnect_indication(253,7338
void irlan_client_open_ctrl_tsap(281,8036
static void irlan_client_ctrl_connect_confirm(318,8960
void irlan_client_reconnect_data_channel(343,9561
void irlan_client_extract_params(379,10357
static void irlan_check_response_param(448,11633
void irlan_client_get_value_confirm(573,15099

net/irda/irlan/irlan_common.c,1605
hashbin_t *irlan 57,1734
static int eth 60,1784
static int access 61,1848
static int timeout 62,1910
static char *irlan_state[64,1947
static char *irlan_access[78,2150
static char *irlan_media[85,2228
extern struct proc_dir_entry proc_irda;101,2676
struct proc_dir_entry proc_irlan 103,2717
void irlan_watchdog_timer_expired(111,2860
void irlan_start_watchdog_timer(138,3585
static int irlan_eth_open(146,3799
static int irlan_eth_close(178,4527
int irlan_eth_init(213,5216
__initfunc(274,6635
void irlan_cleanup(308,7413
int irlan_register_netdev(331,7973
struct irlan_cb *irlan_open(362,8687
static void __irlan_close(425,10122
void irlan_close(451,10603
void irlan_connect_indication(474,11131
void irlan_connect_confirm(507,12024
void irlan_disconnect_indication(541,12875
void irlan_open_data_tsap(588,14235
static void irlan_close_tsaps(627,15302
void irlan_ias_register(663,16156
void irlan_get_provider_info(708,17541
void irlan_open_data_channel(740,18185
void irlan_close_data_channel(772,18885
void irlan_open_unicast_addr(807,19593
void irlan_set_broadcast_filter(845,20757
void irlan_set_multicast_filter(884,21745
void irlan_get_unicast_addr(924,22805
void irlan_get_media_char(959,23606
int irlan_insert_byte_param(994,24302
int irlan_insert_short_param(999,24454
int irlan_insert_string_param(1010,24709
int irlan_insert_array_param(1024,25031
static int __irlan_insert_param(1040,25591
int irlan_get_param(1115,27304
static int irlan_proc_read(1165,28334
void print_ret_code(1224,29898
int init_module(1278,30990
void cleanup_module(1291,31174

net/irda/irlan/irlan_eth.c,271
int irlan_eth_xmit(43,1502
void irlan_eth_receive(126,3665
void irlan_eth_flow_indication(163,4519
void irlan_eth_rebuild_header(210,5433
#define HW_MAX_ADDRS 227,5816
void irlan_eth_set_multicast_list(228,5867
struct enet_statistics *irlan_eth_get_stats(278,7207

net/irda/irlan/irlan_event.c,105
char *irlan_state[27,1018
void irlan_next_client_state(41,1213
void irlan_next_provider_state(51,1457

net/irda/irlan/irlan_filter.c,117
void handle_filter_request(35,1158
static void irlan_check_command_param(141,4164
int irlan_print_filter(213,5598

net/irda/irlan/irlan_client_event.c,725
static int (*state[62,2536
static int (*state[])(struct irlan_cb *, IRLAN_EVENT event,62,2536
static int (*state[])(struct irlan_cb *, IRLAN_EVENT event, struct sk_buff sk_buff62,2536
void irlan_do_client_event(77,2910
static int irlan_client_state_idle(92,3295
static int irlan_client_state_query(130,4219
static int irlan_client_state_conn(183,5604
static int irlan_client_state_info(218,6418
static int irlan_client_state_media(260,7316
static int irlan_client_state_open(297,8169
static int irlan_client_state_wait(375,10020
static int irlan_client_state_arb(404,10691
static int irlan_client_state_data(461,12170
static int irlan_client_state_close(493,12834
static int irlan_client_state_sync(510,13106

net/irda/irlan/irlan_provider.c,364
void irlan_provider_data_indication(59,2037
void irlan_provider_connect_indication(113,3455
void irlan_provider_connect_response(186,5754
void irlan_provider_disconnect_indication(201,6113
int irlan_parse_open_data_cmd(229,6766
int irlan_provider_extract_params(245,7090
void irlan_provider_send_reply(310,8363
void irlan_provider_open_ctrl_tsap(397,10730

net/irda/irlan/irlan_provider_event.c,414
static int (*state[42,1662
static int (*state[])(struct irlan_cb *self,42,1662
static int (*state[])(struct irlan_cb *self, IRLAN_EVENT event,42,1662
		      struct sk_buff *skb)43,1727
void irlan_do_provider_event(58,2006
static int irlan_provider_state_idle(72,2377
static int irlan_provider_state_info(99,3015
static int irlan_provider_state_open(159,4510
static int irlan_provider_state_data(198,5509

net/irda/irlap.c,1414
hashbin_t *irlap 45,1510
int sysctl_slot_timeout 46,1535
static char *lap_reasons[50,1628
__initfunc(66,1943
void irlap_cleanup(86,2378
struct irlap_cb *irlap_open(103,2664
static void __irlap_close(161,4078
void irlap_close(189,4609
void irlap_connect_indication(218,5249
void irlap_connect_response(237,5722
void irlap_connect_request(250,6039
void irlap_connect_confirm(278,6652
inline void irlap_data_indication(295,7072
void irlap_unit_data_indication(324,7789
inline void irlap_data_request(354,8511
void irlap_disconnect_request(416,10144
void irlap_disconnect_indication(444,10814
void irlap_discovery_request(482,11787
void irlap_discovery_confirm(541,13416
void irlap_discovery_indication(571,14229
void irlap_status_indication(590,14654
void irlap_reset_indication(611,15041
void irlap_reset_confirm(630,15419
int irlap_generate_rand_time_slot(642,15665
void irlap_update_nr_received(662,16129
int irlap_validate_ns_received(714,17548
int irlap_validate_nr_received(738,18119
void irlap_initiate_connection_state(771,18877
void irlap_wait_min_turn_around(798,19600
void irlap_flush_all_queues(838,20528
void irlap_change_speed(867,21161
void irlap_init_comp_qos_capabilities(886,21605
void irlap_init_qos_capabilities(937,23285
void irlap_apply_default_connection_parameters(1002,25111
void irlap_apply_connection_parameters(1034,25852
int irlap_proc_read(1098,27726

net/irda/irlap_comp.c,321
hashbin_t *irlap_compressors 32,1173
int irda_register_compressor(40,1311
void irda_unregister_compressor 74,2152
int irda_set_compression(94,2573
void irda_free_compression(156,3992
void irlap_compressor_init(177,4373
struct sk_buff *irlap_compress_frame(234,5644
struct sk_buff *irlap_decompress_frame(298,7134

net/irda/irlap_event.c,1087
static const char *irlap_event[74,3332
const char *irlap_state[106,3956
static int (*state[124,4214
static int (*state[])( struct irlap_cb *self,124,4214
static int (*state[])( struct irlap_cb *self, IRLAP_EVENT event,124,4214
		       struct sk_buff *skb,125,4280
		       struct sk_buff *skb, struct irlap_info *info)125,4280
static void irlap_poll_timer_expired(150,4722
void irlap_start_poll_timer(160,4974
void irlap_do_event(204,6062
void irlap_next_state(267,7701
static int irlap_state_ndm(292,8390
static int irlap_state_query(404,11078
static int irlap_state_reply(475,12837
static int irlap_state_conn(540,14385
static int irlap_state_setup(610,16098
static int irlap_state_offline(726,19244
static int irlap_state_xmit_p(742,19660
static int irlap_state_pclose(850,22636
static int irlap_state_nrm_p(907,24224
int irlap_state_reset_wait(1313,34892
int irlap_state_reset(1359,36115
static int irlap_state_xmit_s(1440,38326
static int irlap_state_nrm_s(1519,40468
static int irlap_state_sclose(1842,48786
static int irlap_state_reset_check(1850,48986

net/irda/irlap_frame.c,1064
void irlap_insert_mtt(51,1661
void irlap_queue_xmit(83,2423
void irlap_send_snrm_frame(105,2917
static void irlap_recv_snrm_cmd(160,4109
void irlap_send_ua_response_frame(188,4754
void irlap_send_dm_frame(237,5729
void irlap_send_disc_frame(268,6234
void irlap_send_discovery_xid_frame(297,6786
static void irlap_recv_discovery_xid_rsp(394,8952
static void irlap_recv_discovery_xid_cmd(456,10570
void irlap_send_rr_frame(548,12739
static void irlap_recv_rr_frame(590,13589
void irlap_send_frmr_frame(640,14923
static void irlap_recv_rnr_frame(675,15595
static void irlap_recv_ua_frame(697,16067
void irlap_send_data_primary(714,16408
void irlap_send_data_primary_poll(769,17682
void irlap_send_data_secondary_final(850,19649
void irlap_send_data_secondary(910,21082
void irlap_resend_rejected_frames(959,22354
void irlap_send_ui_frame(1057,24641
void irlap_send_i_frame(1082,25147
static void irlap_recv_i_frame(1121,25966
static void irlap_recv_ui_frame(1165,27291
static void irlap_recv_frmr_frame(1185,27675
int irlap_input(1235,29025

net/irda/irlmp.c,1633
struct irlmp_cb *irlmp 45,1511
int sysctl_discovery 48,1594
int sysctl_discovery_slots 49,1620
char sysctl_devname[50,1652
char *lmp_reasons[52,1678
__initfunc(74,2186
void irlmp_cleanup(109,2971
struct lsap_cb *irlmp_open_lsap(133,3583
static void __irlmp_close_lsap(202,5131
void irlmp_close_lsap(228,5627
void irlmp_register_irlap(268,6626
void irlmp_unregister_irlap(321,7852
void dump_discoveries(340,8206
static struct lap_cb *irlmp_find_link(356,8519
int irlmp_connect_request(394,9392
void irlmp_connect_indication(491,11941
void irlmp_connect_response(521,12720
void irlmp_connect_confirm(546,13425
void irlmp_disconnect_request(577,14279
void irlmp_disconnect_indication(631,15693
void irlmp_discovery_request(678,16885
void irlmp_check_services(732,18244
void irlmp_discovery_confirm(781,19502
void irlmp_discovery_indication(811,20157
DISCOVERY *irlmp_get_discovery_response(843,21011
void irlmp_data_request(871,21683
void irlmp_data_indication(892,22196
inline void irlmp_udata_request(913,22661
void irlmp_udata_indication(932,23101
void irlmp_connectionless_data_request(954,23623
void irlmp_connectionless_data_indication(965,23822
void irlmp_status_request(970,23925
void irlmp_status_indication(975,24020
__u8 *irlmp_hint_to_service(986,24351
void irlmp_service_to_hint(1057,25820
void irlmp_register_layer(1098,26535
void irlmp_unregister_layer(1143,27616
int irlmp_slsap_inuse(1192,28852
__u8 irlmp_find_free_slsap(1236,30095
LM_REASON irlmp_convert_lap_reason(1257,30515
__u32 irlmp_get_saddr(1290,31444
__u32 irlmp_get_daddr(1300,31626
int irlmp_proc_read(1317,31952

net/irda/irlmp_event.c,1160
const char *irlmp_state[35,1244
const char *irlsap_state[41,1327
static const char *irlmp_event[50,1487
static void (*lap_state[99,3025
static void (*lap_state[]) ( struct lap_cb *, IRLMP_EVENT,99,3025
static void (*lap_state[]) ( struct lap_cb *, IRLMP_EVENT, struct sk_buff sk_buff99,3025
static void (*lsap_state[106,3177
static void (*lsap_state[])( struct lsap_cb *, IRLMP_EVENT,106,3177
static void (*lsap_state[])( struct lsap_cb *, IRLMP_EVENT, struct sk_buff sk_buff106,3177
void irlmp_do_lsap_event(117,3436
void irlmp_do_lap_event(135,3880
void irlmp_discovery_timer_expired(148,4239
void irlmp_watchdog_timer_expired(160,4527
void irlmp_idle_timer_expired(172,4813
static void irlmp_state_standby(196,5388
static void irlmp_state_u_connect(249,7028
static void irlmp_state_active(308,8604
static void irlmp_state_disconnected(394,11029
static void irlmp_state_connect(447,12352
static void irlmp_state_connect_pend(479,13018
static void irlmp_state_dtr(520,13962
static void irlmp_state_setup(614,16681
static void irlmp_state_setup_pend(671,18223
void irlmp_next_lap_state(712,19346
void irlmp_next_lsap_state(718,19512

net/irda/irlmp_frame.c,389
inline void irlmp_send_data_pdu(39,1370
void irlmp_send_lcf_pdu(67,2034
void irlmp_link_data_indication(100,2714
void irlmp_link_disconnect_indication(199,5505
void irlmp_link_connect_indication(225,6068
void irlmp_link_connect_confirm(247,6566
void irlmp_link_discovery_confirm(270,7215
__inline__ void irlmp_update_cache(317,8390
static struct lsap_cb *irlmp_find_lsap(333,8776

net/irda/irmod.c,665
extern struct proc_dir_entry proc_irda;48,1569
struct irda_cb irda;50,1610
__u32 irda_debug 53,1683
static struct file_operations irda_fops 84,2763
__initfunc(180,5490
void irda_cleanup(243,6662
inline int irda_lock(273,7169
inline int irda_unlock(289,7487
void irda_notify_init(304,7773
void irda_execute_as_process(324,8374
void irmanager_notify(362,9172
static int irda_open(390,9793
static int irda_ioctl(411,10151
static int irda_close(448,10916
static ssize_t irda_read(459,11074
static ssize_t irda_write(493,11848
static u_int irda_poll(501,12001
void irda_proc_modcount(510,12176
int init_module(529,12537
void cleanup_module(542,12678

net/irda/irobex/irobex.c,1287
struct irobex_cb *irobex;47,1469
extern char *lmp_reasons[49,1496
char *irobex_state[51,1525
static struct file_operations irobex_fops 91,3201
extern struct proc_dir_entry proc_irda;110,3590
struct proc_dir_entry proc_irobex 112,3631
__initfunc(127,3882
static void irobex_cleanup(174,4937
static ssize_t irobex_read(222,5817
static ssize_t irobex_write(340,8547
static u_int irobex_poll(416,10430
static int irobex_fasync(430,10721
static loff_t irobex_seek(450,11098
static int irobex_ioctl(464,11400
static int irobex_dev_open(511,12472
static int irobex_dev_close(544,13104
static void irobex_discovery_indication(592,14167
static void irobex_disconnect_request(613,14697
static void irobex_disconnect_indication(637,15215
int irobex_connect_request(666,15937
static void irobex_connect_confirm(762,18333
void irobex_connect_response(802,19234
void irobex_connect_indication(832,19891
static void irobex_data_indication(879,21012
static void irobex_flow_indication(922,22012
static void irobex_get_value_confirm(955,22777
void irobex_provider_confirm(1017,24326
static void irobex_register_server(1050,25293
void irobex_watchdog_timer_expired(1085,26270
static int irobex_proc_read(1111,26861
int init_module(1143,27592
void cleanup_module(1156,27779

net/irda/irproc.c,983
enum irda_directory_inos irda_directory_inos53,1956
	PROC_IRDA_LAP 54,1983
	PROC_IRDA_LMP,55,2003
	PROC_IRDA_TTP,56,2019
	PROC_IRDA_LPT,57,2035
	PROC_IRDA_COMM,58,2051
 	PROC_IRDA_IRDA_DEVICE,59,2068
	PROC_IRDA_IRIAS60,2093
static struct file_operations proc_irda_dir_operations 63,2114
struct inode_operations proc_irda_dir_inode_operations 79,2750
struct proc_dir_entry proc_irda 99,3598
struct proc_dir_entry proc_lpt 109,3803
struct proc_dir_entry proc_discovery 117,3966
struct proc_dir_entry proc_irda_device 124,4138
struct proc_dir_entry proc_ttp 131,4272
struct proc_dir_entry proc_lmp 138,4430
struct proc_dir_entry proc_lap 145,4588
struct proc_dir_entry proc_ias 152,4746
static void proc_delete_dentry(166,5044
static struct dentry_operations proc_dentry_operations 171,5121
void irda_proc_register(185,5407
void irda_proc_unregister(202,5871
int proc_irda_lookup(218,6378
static int proc_irda_readdir(262,7310
int proc_discovery_read(320,8404

net/irda/irqueue.c,617
hashbin_t *hashbin_new(48,1736
int hashbin_clear(77,2253
int hashbin_delete(110,3024
void hashbin_lock(146,3687
void hashbin_unlock(179,4251
void hashbin_insert(210,4856
void* hashbin_find(271,6081
void *hashbin_remove_first(339,7331
void* hashbin_remove(363,7712
QUEUE *hashbin_get_first(457,9499
QUEUE *hashbin_get_next(489,10160
static void __enqueue_last(542,11120
inline void enqueue_last(566,11649
void enqueue_first(584,11937
void enqueue_queue(616,12619
static void enqueue_second(643,13120
QUEUE *dequeue_first(674,13699
static QUEUE *dequeue_general(715,14392
static __u32 hash(759,15180

net/irda/irsysctl.c,816
#define NET_IRDA 33,1133
enum { DISCOVERY=34,1174
enum { DISCOVERY=1, DEVNAME,34,1174
enum { DISCOVERY=1, DEVNAME, COMPRESSION,34,1174
enum { DISCOVERY=1, DEVNAME, COMPRESSION, DEBUG,34,1174
enum { DISCOVERY=1, DEVNAME, COMPRESSION, DEBUG, SLOTS,34,1174
enum { DISCOVERY=1, DEVNAME, COMPRESSION, DEBUG, SLOTS, SLOT_TIMEOUT 34,1174
extern int sysctl_discovery;36,1247
extern int sysctl_discovery_slots;37,1276
extern int sysctl_slot_timeout;38,1311
int sysctl_compression 39,1343
extern char sysctl_devname[40,1371
extern unsigned int irda_debug;43,1427
static ctl_table irda_table[47,1482
static ctl_table irda_net_table[66,2139
static ctl_table irda_root_table[72,2265
static struct ctl_table_header *irda_table_header;77,2367
int irda_sysctl_register(85,2508
void irda_sysctl_unregister(99,2757

net/irda/irttp.c,983
struct irttp_cb *irttp 36,1230
__initfunc(65,2252
void irttp_cleanup(93,2791
struct tsap_cb *irttp_open_tsap(118,3248
static void __irttp_close_tsap(195,5351
int irttp_close_tsap(220,5848
int irttp_udata_request(263,6740
int irttp_data_request(294,7510
static void irttp_run_tx_queue(386,9787
void irttp_give_credit(465,11617
void irttp_udata_indication(518,12752
void irttp_data_indication(543,13310
void irttp_flow_request(612,15024
void irttp_connect_request(641,15658
void irttp_connect_confirm(728,17724
void irttp_connect_indication(793,19322
void irttp_connect_response(854,20796
void irttp_disconnect_request(933,22660
void irttp_disconnect_indication(1017,24505
void irttp_run_rx_queue(1045,25173
void irttp_flush_queues(1153,27907
static struct sk_buff *irttp_reassemble_skb(1182,28581
static void irttp_fragment_skb(1226,29571
static void irttp_todo_expired(1286,30940
static void irttp_start_todo_timer(1339,32143
int irttp_proc_read(1359,32655

net/irda/qos.c,514
#define CI_BZIP2 35,1244
int min_turn_time[38,1291
int baud_rates[39,1357
int data_size[41,1454
int add_bofs[42,1508
int max_turn_time[43,1558
int link_disc_time[44,1603
int compression[47,1692
void irda_qos_compute_intersection(55,1901
void irda_init_max_qos_capabilies(83,2777
void irda_qos_negotiate(112,3500
int irda_insert_qos_negotiation_params(272,7515
int byte_value(346,9414
int msb_index 373,9833
int value_index(393,10140
int index_value(409,10359
void irda_qos_bits_to_value(414,10427

net/irda/timer.c,732
void irda_start_timer(47,1632
inline void irlap_start_slot_timer(59,1897
inline void irlap_start_query_timer(65,2076
inline void irlap_start_final_timer(71,2258
inline void irlap_start_wd_timer(77,2441
inline void irlap_start_backoff_timer(83,2614
inline void irda_device_start_mbusy_timer(89,2802
inline void irlmp_start_watchdog_timer(97,3009
inline void irlmp_start_discovery_timer(103,3199
inline void irlmp_start_idle_timer(109,3390
static void irlap_slot_timer_expired(121,3656
static void irlap_query_timer_expired(139,4039
static void irlap_final_timer_expired(157,4395
static void irlap_wd_timer_expired(175,4747
static void irlap_backoff_timer_expired(193,5098
void irda_device_media_busy_expired(211,5460

net/irda/wrapper.c,168
#define MIN_LENGTH 37,1278
int async_wrap_skb(47,1515
static inline void async_bump(120,3085
void async_unwrap_char(158,3824
inline static int stuff_byte(300,7060

net/irda/irlpt/irlpt_cli.c,877
static char *rcsid 64,2030
static char *version 66,2119
struct file_operations client_fops 68,2178
int irlpt_client_debug 86,2667
extern char *irlptstate[88,2696
static int irlpt_client_proc_read(96,2820
struct proc_dir_entry proc_irlpt_client 161,4446
extern struct proc_dir_entry proc_irda;168,4628
__initfunc(178,4792
static void irlpt_client_cleanup(209,5420
static struct irlpt_cb *irlpt_client_open(233,5911
static void irlpt_client_close(285,7089
static void irlpt_client_discovery_indication(315,7784
static void irlpt_client_disconnect_indication(372,9375
static void irlpt_client_connect_confirm(412,10270
static void irlpt_client_data_indication(458,11300
void irlpt_client_get_value_confirm(507,12307
void irlpt_client_connect_request(546,13333
static void irlpt_client_expired(577,14320
int init_module(623,15513
void cleanup_module(641,15869

net/irda/irlpt/irlpt_cli_fsm.c,614
static char *rcsid 35,1244
int irlpt_client_fsm_debug 59,2141
int (*irlpt_client_state[61,2174
int (*irlpt_client_state[])( struct irlpt_cb *self,61,2174
			     IRLPT_EVENT event,62,2227
			     struct sk_buff *skb,63,2255
			     struct irlpt_info *info)64,2285
void irlpt_client_do_event(73,2461
void irlpt_client_next_state(92,3026
static int irlpt_client_state_idle(114,3611
static int irlpt_client_state_query(161,4783
static int irlpt_client_state_ready(220,6404
static int irlpt_client_state_waiti(268,7599
static int irlpt_client_state_conn(319,8971
void irlpt_client_print_event(363,10118

net/irda/irlpt/irlpt_common.c,706
char *irlpt_service_type[47,1442
char *irlpt_port_type[56,1604
char *irlpt_connected[62,1690
char *irlpt_reasons[69,1801
char *irlpt_client_fsm_state[79,2165
char *irlpt_server_fsm_state[87,2316
char *irlpt_fsm_event[92,2398
hashbin_t *irlpt_clients 107,2732
struct irlpt_cb *irlpt_server 108,2765
int irlpt_common_debug 109,2803
static char *rcsid 114,2936
struct irlpt_cb *irlpt_find_handle(117,3025
ssize_t irlpt_read(146,3716
ssize_t irlpt_write(220,5546
loff_t irlpt_seek(296,7668
u_int irlpt_poll(310,7916
int irlpt_open(325,8206
int irlpt_close(384,9642
void irlpt_dump_buffer(439,11060
void irlpt_flow_control(461,11448
int init_module(493,12179
void cleanup_module(504,12341

net/irda/irlpt/irlpt_srvr.c,734
int irlpt_server_lsap 72,2322
int irlpt_server_debug 73,2358
static char *rcsid 76,2393
static char *version 79,2482
struct file_operations irlpt_fops 81,2541
static int irlpt_server_proc_read(107,3107
extern struct proc_dir_entry proc_irda;165,4666
struct proc_dir_entry proc_irlpt_server 167,4707
__initfunc(184,5048
static void irlpt_server_cleanup(232,6214
static void irlpt_server_disconnect_indication(262,6874
static void irlpt_server_connect_confirm(310,8018
static void irlpt_server_connect_indication(335,8575
static void irlpt_server_data_indication(371,9368
static void register_irlpt_server(406,10149
static void deregister_irlpt_server(456,11546
int init_module(485,12273
void cleanup_module(503,12629

net/irda/irlpt/irlpt_srvr_fsm.c,495
static char *rcsid 40,1389
int irlpt_server_fsm_debug 43,1485
static int (*irlpt_server_state[45,1543
static int (*irlpt_server_state[])( struct irlpt_cb *self,45,1543
				    IRLPT_EVENT event,46,1603
				    struct sk_buff *skb,47,1631
				    struct irlpt_info *info)48,1660
void irlpt_server_do_event(54,1755
void irlpt_server_next_state(71,2259
static int irlpt_server_state_idle(92,2771
static int irlpt_server_state_conn(148,4076
static void irlpt_server_print_event(183,4864
